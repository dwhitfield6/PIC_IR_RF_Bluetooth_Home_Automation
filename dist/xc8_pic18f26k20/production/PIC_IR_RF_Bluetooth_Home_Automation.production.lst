

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 13 12:16:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   145                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   146  0000                     
   147                           	psect	idataCOMRAM
   148  0095D0                     __pidataCOMRAM:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _SN
   152  0095D0  0001               	dw	1
   153  0095D2  0000               	dw	0
   154                           
   155                           ;initializer for _IRbitPosition
   156  0095D4  20                 	db	32
   157                           
   158                           ;initializer for _IRcodePlace
   159  0095D5  01                 	db	1
   160                           
   161                           ;initializer for _RF_IR
   162  0095D6  37                 	db	55
   163                           
   164                           ;initializer for _RF_IR_Postscaler
   165  0095D7  02                 	db	2
   166                           
   167                           ;initializer for _ReceivingIR
   168  0095D8  0D                 	db	13
   169                           
   170                           	psect	idataBANK0
   171  0095E6                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Sent
   175  0095E6  01                 	db	1
   176                           
   177                           	psect	idataBANK2
   178  00925A                     __pidataBANK2:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _ProductName
   182  00925A  48                 	db	72
   183  00925B  6F                 	db	111
   184  00925C  6D                 	db	109
   185  00925D  65                 	db	101
   186  00925E  20                 	db	32
   187  00925F  41                 	db	65
   188  009260  75                 	db	117
   189  009261  74                 	db	116
   190  009262  6F                 	db	111
   191  009263  6D                 	db	109
   192  009264  61                 	db	97
   193  009265  74                 	db	116
   194  009266  69                 	db	105
   195  009267  6F                 	db	111
   196  009268  6E                 	db	110
   197  009269  00                 	db	0
   198  00926A  00                 	db	0
   199  00926B  00                 	db	0
   200  00926C  00                 	db	0
   201  00926D  00                 	db	0
   202  00926E  00                 	db	0
   203  00926F  00                 	db	0
   204  009270  00                 	db	0
   205  009271  00                 	db	0
   206  009272  00                 	db	0
   207  009273  00                 	db	0
   208  009274  00                 	db	0
   209  009275  00                 	db	0
   210  009276  00                 	db	0
   211  009277  00                 	db	0
   212  009278  00                 	db	0
   213  009279  00                 	db	0
   214  00927A  00                 	db	0
   215  00927B  00                 	db	0
   216  00927C  00                 	db	0
   217  00927D  00                 	db	0
   218  00927E  00                 	db	0
   219  00927F  00                 	db	0
   220  009280  00                 	db	0
   221  009281  00                 	db	0
   222  009282  00                 	db	0
   223  009283  00                 	db	0
   224  009284  00                 	db	0
   225  009285  00                 	db	0
   226  009286  00                 	db	0
   227  009287  00                 	db	0
   228  009288  00                 	db	0
   229  009289  00                 	db	0
   230  00928A  00                 	db	0
   231  00928B  00                 	db	0
   232                           
   233                           ;initializer for _IRtimeout
   234  00928C  1389               	dw	5001
   235  00928E  0000               	dw	0
   236                           
   237                           	psect	mediumconst
   238  00F118                     __pmediumconst:
   239                           	opt stack 0
   240  00F118  00                 	db	0
   241  00F119                     _dpowers:
   242                           	opt stack 0
   243  00F119  0001               	dw	1
   244  00F11B  0000               	dw	0
   245  00F11D  000A               	dw	10
   246  00F11F  0000               	dw	0
   247  00F121  0064               	dw	100
   248  00F123  0000               	dw	0
   249  00F125  03E8               	dw	1000
   250  00F127  0000               	dw	0
   251  00F129  2710               	dw	10000
   252  00F12B  0000               	dw	0
   253  00F12D  86A0               	dw	34464
   254  00F12F  0001               	dw	1
   255  00F131  4240               	dw	16960
   256  00F133  000F               	dw	15
   257  00F135  9680               	dw	38528
   258  00F137  0098               	dw	152
   259  00F139  E100               	dw	57600
   260  00F13B  05F5               	dw	1525
   261  00F13D  CA00               	dw	51712
   262  00F13F  3B9A               	dw	15258
   263  00F141                     __end_of_dpowers:
   264                           	opt stack 0
   265  00F141                     __npowers_:
   266                           	opt stack 0
   267  00F141  00                 	db	0
   268  00F142  80                 	db	128
   269  00F143  3F                 	db	63
   270  00F144  CD                 	db	205
   271  00F145  CC                 	db	204
   272  00F146  3D                 	db	61
   273  00F147  D7                 	db	215
   274  00F148  23                 	db	35
   275  00F149  3C                 	db	60
   276  00F14A  12                 	db	18
   277  00F14B  83                 	db	131
   278  00F14C  3A                 	db	58
   279  00F14D  B7                 	db	183
   280  00F14E  D1                 	db	209
   281  00F14F  38                 	db	56
   282  00F150  C6                 	db	198
   283  00F151  27                 	db	39
   284  00F152  37                 	db	55
   285  00F153  38                 	db	56
   286  00F154  86                 	db	134
   287  00F155  35                 	db	53
   288  00F156  C0                 	db	192
   289  00F157  D6                 	db	214
   290  00F158  33                 	db	51
   291  00F159  CC                 	db	204
   292  00F15A  2B                 	db	43
   293  00F15B  32                 	db	50
   294  00F15C  70                 	db	112
   295  00F15D  89                 	db	137
   296  00F15E  30                 	db	48
   297  00F15F  E7                 	db	231
   298  00F160  DB                 	db	219
   299  00F161  2E                 	db	46
   300  00F162  E5                 	db	229
   301  00F163  3C                 	db	60
   302  00F164  1E                 	db	30
   303  00F165  42                 	db	66
   304  00F166  A2                 	db	162
   305  00F167  0D                 	db	13
   306  00F168                     __end_of__npowers_:
   307                           	opt stack 0
   308  00F168                     __powers_:
   309                           	opt stack 0
   310  00F168  00                 	db	0
   311  00F169  80                 	db	128
   312  00F16A  3F                 	db	63
   313  00F16B  00                 	db	0
   314  00F16C  20                 	db	32
   315  00F16D  41                 	db	65
   316  00F16E  00                 	db	0
   317  00F16F  C8                 	db	200
   318  00F170  42                 	db	66
   319  00F171  00                 	db	0
   320  00F172  7A                 	db	122
   321  00F173  44                 	db	68
   322  00F174  40                 	db	64
   323  00F175  1C                 	db	28
   324  00F176  46                 	db	70
   325  00F177  50                 	db	80
   326  00F178  C3                 	db	195
   327  00F179  47                 	db	71
   328  00F17A  24                 	db	36
   329  00F17B  74                 	db	116
   330  00F17C  49                 	db	73
   331  00F17D  97                 	db	151
   332  00F17E  18                 	db	24
   333  00F17F  4B                 	db	75
   334  00F180  BC                 	db	188
   335  00F181  BE                 	db	190
   336  00F182  4C                 	db	76
   337  00F183  6B                 	db	107
   338  00F184  6E                 	db	110
   339  00F185  4E                 	db	78
   340  00F186  03                 	db	3
   341  00F187  15                 	db	21
   342  00F188  50                 	db	80
   343  00F189  79                 	db	121
   344  00F18A  AD                 	db	173
   345  00F18B  60                 	db	96
   346  00F18C  F3                 	db	243
   347  00F18D  49                 	db	73
   348  00F18E  71                 	db	113
   349  00F18F                     __end_of__powers_:
   350                           	opt stack 0
   351  00F18F                     _hexpowers:
   352                           	opt stack 0
   353  00F18F  0001               	dw	1
   354  00F191  0000               	dw	0
   355  00F193  0010               	dw	16
   356  00F195  0000               	dw	0
   357  00F197  0100               	dw	256
   358  00F199  0000               	dw	0
   359  00F19B  1000               	dw	4096
   360  00F19D  0000               	dw	0
   361  00F19F  0000               	dw	0
   362  00F1A1  0001               	dw	1
   363  00F1A3  0000               	dw	0
   364  00F1A5  0010               	dw	16
   365  00F1A7  0000               	dw	0
   366  00F1A9  0100               	dw	256
   367  00F1AB  0000               	dw	0
   368  00F1AD  1000               	dw	4096
   369  00F1AF                     __end_of_hexpowers:
   370                           	opt stack 0
   371  00F1AF                     _ProjectName:
   372                           	opt stack 0
   373  00F1AF  48                 	db	72
   374  00F1B0  6F                 	db	111
   375  00F1B1  6D                 	db	109
   376  00F1B2  65                 	db	101
   377  00F1B3  20                 	db	32
   378  00F1B4  41                 	db	65
   379  00F1B5  75                 	db	117
   380  00F1B6  74                 	db	116
   381  00F1B7  6F                 	db	111
   382  00F1B8  6D                 	db	109
   383  00F1B9  61                 	db	97
   384  00F1BA  74                 	db	116
   385  00F1BB  69                 	db	105
   386  00F1BC  6F                 	db	111
   387  00F1BD  6E                 	db	110
   388  00F1BE  20                 	db	32
   389  00F1BF  49                 	db	73
   390  00F1C0  52                 	db	82
   391  00F1C1  2F                 	db	47
   392  00F1C2  52                 	db	82
   393  00F1C3  46                 	db	70
   394  00F1C4  20                 	db	32
   395  00F1C5  48                 	db	72
   396  00F1C6  75                 	db	117
   397  00F1C7  62                 	db	98
   398  00F1C8  00                 	db	0
   399  00F1C9                     __end_of_ProjectName:
   400                           	opt stack 0
   401  00F1C9                     _Conf2_ChannelH_1_OFF_STR:
   402                           	opt stack 0
   403  00F1C9  43                 	db	67
   404  00F1CA  6F                 	db	111
   405  00F1CB  6E                 	db	110
   406  00F1CC  66                 	db	102
   407  00F1CD  32                 	db	50
   408  00F1CE  5F                 	db	95
   409  00F1CF  43                 	db	67
   410  00F1D0  68                 	db	104
   411  00F1D1  61                 	db	97
   412  00F1D2  6E                 	db	110
   413  00F1D3  6E                 	db	110
   414  00F1D4  65                 	db	101
   415  00F1D5  6C                 	db	108
   416  00F1D6  48                 	db	72
   417  00F1D7  5F                 	db	95
   418  00F1D8  31                 	db	49
   419  00F1D9  5F                 	db	95
   420  00F1DA  4F                 	db	79
   421  00F1DB  46                 	db	70
   422  00F1DC  46                 	db	70
   423  00F1DD  00                 	db	0
   424  00F1DE                     __end_of_Conf2_ChannelH_1_OFF_STR:
   425                           	opt stack 0
   426  00F1DE                     _Conf2_ChannelH_2_OFF_STR:
   427                           	opt stack 0
   428  00F1DE  43                 	db	67
   429  00F1DF  6F                 	db	111
   430  00F1E0  6E                 	db	110
   431  00F1E1  66                 	db	102
   432  00F1E2  32                 	db	50
   433  00F1E3  5F                 	db	95
   434  00F1E4  43                 	db	67
   435  00F1E5  68                 	db	104
   436  00F1E6  61                 	db	97
   437  00F1E7  6E                 	db	110
   438  00F1E8  6E                 	db	110
   439  00F1E9  65                 	db	101
   440  00F1EA  6C                 	db	108
   441  00F1EB  48                 	db	72
   442  00F1EC  5F                 	db	95
   443  00F1ED  32                 	db	50
   444  00F1EE  5F                 	db	95
   445  00F1EF  4F                 	db	79
   446  00F1F0  46                 	db	70
   447  00F1F1  46                 	db	70
   448  00F1F2  00                 	db	0
   449  00F1F3                     __end_of_Conf2_ChannelH_2_OFF_STR:
   450                           	opt stack 0
   451  00F1F3                     _Conf2_ChannelH_3_OFF_STR:
   452                           	opt stack 0
   453  00F1F3  43                 	db	67
   454  00F1F4  6F                 	db	111
   455  00F1F5  6E                 	db	110
   456  00F1F6  66                 	db	102
   457  00F1F7  32                 	db	50
   458  00F1F8  5F                 	db	95
   459  00F1F9  43                 	db	67
   460  00F1FA  68                 	db	104
   461  00F1FB  61                 	db	97
   462  00F1FC  6E                 	db	110
   463  00F1FD  6E                 	db	110
   464  00F1FE  65                 	db	101
   465  00F1FF  6C                 	db	108
   466  00F200  48                 	db	72
   467  00F201  5F                 	db	95
   468  00F202  33                 	db	51
   469  00F203  5F                 	db	95
   470  00F204  4F                 	db	79
   471  00F205  46                 	db	70
   472  00F206  46                 	db	70
   473  00F207  00                 	db	0
   474  00F208                     __end_of_Conf2_ChannelH_3_OFF_STR:
   475                           	opt stack 0
   476  00F208                     _Conf2_ChannelH_1_ON_STR:
   477                           	opt stack 0
   478  00F208  43                 	db	67
   479  00F209  6F                 	db	111
   480  00F20A  6E                 	db	110
   481  00F20B  66                 	db	102
   482  00F20C  32                 	db	50
   483  00F20D  5F                 	db	95
   484  00F20E  43                 	db	67
   485  00F20F  68                 	db	104
   486  00F210  61                 	db	97
   487  00F211  6E                 	db	110
   488  00F212  6E                 	db	110
   489  00F213  65                 	db	101
   490  00F214  6C                 	db	108
   491  00F215  48                 	db	72
   492  00F216  5F                 	db	95
   493  00F217  31                 	db	49
   494  00F218  5F                 	db	95
   495  00F219  4F                 	db	79
   496  00F21A  4E                 	db	78
   497  00F21B  00                 	db	0
   498  00F21C                     __end_of_Conf2_ChannelH_1_ON_STR:
   499                           	opt stack 0
   500  00F21C                     _Conf2_ChannelH_2_ON_STR:
   501                           	opt stack 0
   502  00F21C  43                 	db	67
   503  00F21D  6F                 	db	111
   504  00F21E  6E                 	db	110
   505  00F21F  66                 	db	102
   506  00F220  32                 	db	50
   507  00F221  5F                 	db	95
   508  00F222  43                 	db	67
   509  00F223  68                 	db	104
   510  00F224  61                 	db	97
   511  00F225  6E                 	db	110
   512  00F226  6E                 	db	110
   513  00F227  65                 	db	101
   514  00F228  6C                 	db	108
   515  00F229  48                 	db	72
   516  00F22A  5F                 	db	95
   517  00F22B  32                 	db	50
   518  00F22C  5F                 	db	95
   519  00F22D  4F                 	db	79
   520  00F22E  4E                 	db	78
   521  00F22F  00                 	db	0
   522  00F230                     __end_of_Conf2_ChannelH_2_ON_STR:
   523                           	opt stack 0
   524  00F230                     _Conf2_ChannelH_3_ON_STR:
   525                           	opt stack 0
   526  00F230  43                 	db	67
   527  00F231  6F                 	db	111
   528  00F232  6E                 	db	110
   529  00F233  66                 	db	102
   530  00F234  32                 	db	50
   531  00F235  5F                 	db	95
   532  00F236  43                 	db	67
   533  00F237  68                 	db	104
   534  00F238  61                 	db	97
   535  00F239  6E                 	db	110
   536  00F23A  6E                 	db	110
   537  00F23B  65                 	db	101
   538  00F23C  6C                 	db	108
   539  00F23D  48                 	db	72
   540  00F23E  5F                 	db	95
   541  00F23F  33                 	db	51
   542  00F240  5F                 	db	95
   543  00F241  4F                 	db	79
   544  00F242  4E                 	db	78
   545  00F243  00                 	db	0
   546  00F244                     __end_of_Conf2_ChannelH_3_ON_STR:
   547                           	opt stack 0
   548  00F244                     _Conf2_ChannelB_OFF_STR:
   549                           	opt stack 0
   550  00F244  43                 	db	67
   551  00F245  6F                 	db	111
   552  00F246  6E                 	db	110
   553  00F247  66                 	db	102
   554  00F248  32                 	db	50
   555  00F249  5F                 	db	95
   556  00F24A  43                 	db	67
   557  00F24B  68                 	db	104
   558  00F24C  61                 	db	97
   559  00F24D  6E                 	db	110
   560  00F24E  6E                 	db	110
   561  00F24F  65                 	db	101
   562  00F250  6C                 	db	108
   563  00F251  42                 	db	66
   564  00F252  5F                 	db	95
   565  00F253  4F                 	db	79
   566  00F254  46                 	db	70
   567  00F255  46                 	db	70
   568  00F256  00                 	db	0
   569  00F257                     __end_of_Conf2_ChannelB_OFF_STR:
   570                           	opt stack 0
   571  00F257                     _Conf2_ChannelD_OFF_STR:
   572                           	opt stack 0
   573  00F257  43                 	db	67
   574  00F258  6F                 	db	111
   575  00F259  6E                 	db	110
   576  00F25A  66                 	db	102
   577  00F25B  32                 	db	50
   578  00F25C  5F                 	db	95
   579  00F25D  43                 	db	67
   580  00F25E  68                 	db	104
   581  00F25F  61                 	db	97
   582  00F260  6E                 	db	110
   583  00F261  6E                 	db	110
   584  00F262  65                 	db	101
   585  00F263  6C                 	db	108
   586  00F264  44                 	db	68
   587  00F265  5F                 	db	95
   588  00F266  4F                 	db	79
   589  00F267  46                 	db	70
   590  00F268  46                 	db	70
   591  00F269  00                 	db	0
   592  00F26A                     __end_of_Conf2_ChannelD_OFF_STR:
   593                           	opt stack 0
   594  00F26A                     _Conf2_ChannelB_ON_STR:
   595                           	opt stack 0
   596  00F26A  43                 	db	67
   597  00F26B  6F                 	db	111
   598  00F26C  6E                 	db	110
   599  00F26D  66                 	db	102
   600  00F26E  32                 	db	50
   601  00F26F  5F                 	db	95
   602  00F270  43                 	db	67
   603  00F271  68                 	db	104
   604  00F272  61                 	db	97
   605  00F273  6E                 	db	110
   606  00F274  6E                 	db	110
   607  00F275  65                 	db	101
   608  00F276  6C                 	db	108
   609  00F277  42                 	db	66
   610  00F278  5F                 	db	95
   611  00F279  4F                 	db	79
   612  00F27A  4E                 	db	78
   613  00F27B  00                 	db	0
   614  00F27C                     __end_of_Conf2_ChannelB_ON_STR:
   615                           	opt stack 0
   616  00F27C                     _Conf2_ChannelD_ON_STR:
   617                           	opt stack 0
   618  00F27C  43                 	db	67
   619  00F27D  6F                 	db	111
   620  00F27E  6E                 	db	110
   621  00F27F  66                 	db	102
   622  00F280  32                 	db	50
   623  00F281  5F                 	db	95
   624  00F282  43                 	db	67
   625  00F283  68                 	db	104
   626  00F284  61                 	db	97
   627  00F285  6E                 	db	110
   628  00F286  6E                 	db	110
   629  00F287  65                 	db	101
   630  00F288  6C                 	db	108
   631  00F289  44                 	db	68
   632  00F28A  5F                 	db	95
   633  00F28B  4F                 	db	79
   634  00F28C  4E                 	db	78
   635  00F28D  00                 	db	0
   636  00F28E                     __end_of_Conf2_ChannelD_ON_STR:
   637                           	opt stack 0
   638  00F28E                     _Conf2_ChannelB_OFF:
   639                           	opt stack 0
   640  00F28E  00                 	db	0
   641  00F28F  01                 	db	1
   642  00F290  01                 	db	1
   643  00F291  00                 	db	0
   644  00F292  01                 	db	1
   645  00F293  00                 	db	0
   646  00F294  00                 	db	0
   647  00F295  00                 	db	0
   648  00F296  00                 	db	0
   649  00F297  00                 	db	0
   650  00F298  00                 	db	0
   651  00F299  01                 	db	1
   652  00F29A  00                 	db	0
   653  00F29B  01                 	db	1
   654  00F29C  00                 	db	0
   655  00F29D  00                 	db	0
   656  00F29E                     __end_of_Conf2_ChannelB_OFF:
   657                           	opt stack 0
   658  00F29E                     _Conf2_ChannelB_ON:
   659                           	opt stack 0
   660  00F29E  00                 	db	0
   661  00F29F  01                 	db	1
   662  00F2A0  01                 	db	1
   663  00F2A1  00                 	db	0
   664  00F2A2  01                 	db	1
   665  00F2A3  00                 	db	0
   666  00F2A4  00                 	db	0
   667  00F2A5  00                 	db	0
   668  00F2A6  00                 	db	0
   669  00F2A7  00                 	db	0
   670  00F2A8  01                 	db	1
   671  00F2A9  00                 	db	0
   672  00F2AA  00                 	db	0
   673  00F2AB  01                 	db	1
   674  00F2AC  00                 	db	0
   675  00F2AD  00                 	db	0
   676  00F2AE                     __end_of_Conf2_ChannelB_ON:
   677                           	opt stack 0
   678  00F2AE                     _Conf2_ChannelD_OFF:
   679                           	opt stack 0
   680  00F2AE  00                 	db	0
   681  00F2AF  01                 	db	1
   682  00F2B0  01                 	db	1
   683  00F2B1  00                 	db	0
   684  00F2B2  01                 	db	1
   685  00F2B3  00                 	db	0
   686  00F2B4  00                 	db	0
   687  00F2B5  00                 	db	0
   688  00F2B6  00                 	db	0
   689  00F2B7  00                 	db	0
   690  00F2B8  00                 	db	0
   691  00F2B9  01                 	db	1
   692  00F2BA  00                 	db	0
   693  00F2BB  00                 	db	0
   694  00F2BC  00                 	db	0
   695  00F2BD  01                 	db	1
   696  00F2BE                     __end_of_Conf2_ChannelD_OFF:
   697                           	opt stack 0
   698  00F2BE                     _Conf2_ChannelD_ON:
   699                           	opt stack 0
   700  00F2BE  00                 	db	0
   701  00F2BF  01                 	db	1
   702  00F2C0  01                 	db	1
   703  00F2C1  00                 	db	0
   704  00F2C2  01                 	db	1
   705  00F2C3  00                 	db	0
   706  00F2C4  00                 	db	0
   707  00F2C5  00                 	db	0
   708  00F2C6  00                 	db	0
   709  00F2C7  00                 	db	0
   710  00F2C8  01                 	db	1
   711  00F2C9  00                 	db	0
   712  00F2CA  00                 	db	0
   713  00F2CB  00                 	db	0
   714  00F2CC  00                 	db	0
   715  00F2CD  01                 	db	1
   716  00F2CE                     __end_of_Conf2_ChannelD_ON:
   717                           	opt stack 0
   718  00F2CE                     _Conf2_ChannelH_1_OFF:
   719                           	opt stack 0
   720  00F2CE  00                 	db	0
   721  00F2CF  01                 	db	1
   722  00F2D0  01                 	db	1
   723  00F2D1  00                 	db	0
   724  00F2D2  01                 	db	1
   725  00F2D3  00                 	db	0
   726  00F2D4  00                 	db	0
   727  00F2D5  00                 	db	0
   728  00F2D6  00                 	db	0
   729  00F2D7  01                 	db	1
   730  00F2D8  00                 	db	0
   731  00F2D9  00                 	db	0
   732  00F2DA  00                 	db	0
   733  00F2DB  00                 	db	0
   734  00F2DC  00                 	db	0
   735  00F2DD  00                 	db	0
   736  00F2DE                     __end_of_Conf2_ChannelH_1_OFF:
   737                           	opt stack 0
   738  00F2DE                     _Conf2_ChannelH_1_ON:
   739                           	opt stack 0
   740  00F2DE  00                 	db	0
   741  00F2DF  01                 	db	1
   742  00F2E0  01                 	db	1
   743  00F2E1  00                 	db	0
   744  00F2E2  01                 	db	1
   745  00F2E3  00                 	db	0
   746  00F2E4  00                 	db	0
   747  00F2E5  00                 	db	0
   748  00F2E6  01                 	db	1
   749  00F2E7  00                 	db	0
   750  00F2E8  00                 	db	0
   751  00F2E9  00                 	db	0
   752  00F2EA  00                 	db	0
   753  00F2EB  00                 	db	0
   754  00F2EC  00                 	db	0
   755  00F2ED  00                 	db	0
   756  00F2EE                     __end_of_Conf2_ChannelH_1_ON:
   757                           	opt stack 0
   758  00F2EE                     _Conf2_ChannelH_2_OFF:
   759                           	opt stack 0
   760  00F2EE  00                 	db	0
   761  00F2EF  01                 	db	1
   762  00F2F0  01                 	db	1
   763  00F2F1  00                 	db	0
   764  00F2F2  01                 	db	1
   765  00F2F3  00                 	db	0
   766  00F2F4  00                 	db	0
   767  00F2F5  00                 	db	0
   768  00F2F6  00                 	db	0
   769  00F2F7  00                 	db	0
   770  00F2F8  00                 	db	0
   771  00F2F9  01                 	db	1
   772  00F2FA  00                 	db	0
   773  00F2FB  00                 	db	0
   774  00F2FC  00                 	db	0
   775  00F2FD  00                 	db	0
   776  00F2FE                     __end_of_Conf2_ChannelH_2_OFF:
   777                           	opt stack 0
   778  00F2FE                     _Conf2_ChannelH_2_ON:
   779                           	opt stack 0
   780  00F2FE  00                 	db	0
   781  00F2FF  01                 	db	1
   782  00F300  01                 	db	1
   783  00F301  00                 	db	0
   784  00F302  01                 	db	1
   785  00F303  00                 	db	0
   786  00F304  00                 	db	0
   787  00F305  00                 	db	0
   788  00F306  00                 	db	0
   789  00F307  00                 	db	0
   790  00F308  01                 	db	1
   791  00F309  00                 	db	0
   792  00F30A  00                 	db	0
   793  00F30B  00                 	db	0
   794  00F30C  00                 	db	0
   795  00F30D  00                 	db	0
   796  00F30E                     __end_of_Conf2_ChannelH_2_ON:
   797                           	opt stack 0
   798  00F30E                     _Conf2_ChannelH_3_OFF:
   799                           	opt stack 0
   800  00F30E  00                 	db	0
   801  00F30F  01                 	db	1
   802  00F310  01                 	db	1
   803  00F311  00                 	db	0
   804  00F312  01                 	db	1
   805  00F313  00                 	db	0
   806  00F314  01                 	db	1
   807  00F315  00                 	db	0
   808  00F316  00                 	db	0
   809  00F317  00                 	db	0
   810  00F318  00                 	db	0
   811  00F319  00                 	db	0
   812  00F31A  00                 	db	0
   813  00F31B  00                 	db	0
   814  00F31C  00                 	db	0
   815  00F31D  00                 	db	0
   816  00F31E                     __end_of_Conf2_ChannelH_3_OFF:
   817                           	opt stack 0
   818  00F31E                     _Conf2_ChannelH_3_ON:
   819                           	opt stack 0
   820  00F31E  00                 	db	0
   821  00F31F  01                 	db	1
   822  00F320  01                 	db	1
   823  00F321  00                 	db	0
   824  00F322  01                 	db	1
   825  00F323  00                 	db	0
   826  00F324  00                 	db	0
   827  00F325  01                 	db	1
   828  00F326  00                 	db	0
   829  00F327  00                 	db	0
   830  00F328  00                 	db	0
   831  00F329  00                 	db	0
   832  00F32A  00                 	db	0
   833  00F32B  00                 	db	0
   834  00F32C  00                 	db	0
   835  00F32D  00                 	db	0
   836  00F32E                     __end_of_Conf2_ChannelH_3_ON:
   837                           	opt stack 0
   838  00F32E                     _Conf1_ChannelD_STR:
   839                           	opt stack 0
   840  00F32E  43                 	db	67
   841  00F32F  6F                 	db	111
   842  00F330  6E                 	db	110
   843  00F331  66                 	db	102
   844  00F332  31                 	db	49
   845  00F333  5F                 	db	95
   846  00F334  43                 	db	67
   847  00F335  68                 	db	104
   848  00F336  61                 	db	97
   849  00F337  6E                 	db	110
   850  00F338  6E                 	db	110
   851  00F339  65                 	db	101
   852  00F33A  6C                 	db	108
   853  00F33B  44                 	db	68
   854  00F33C  00                 	db	0
   855  00F33D                     __end_of_Conf1_ChannelD_STR:
   856                           	opt stack 0
   857  00F33D                     _Conf1_ChannelE_STR:
   858                           	opt stack 0
   859  00F33D  43                 	db	67
   860  00F33E  6F                 	db	111
   861  00F33F  6E                 	db	110
   862  00F340  66                 	db	102
   863  00F341  31                 	db	49
   864  00F342  5F                 	db	95
   865  00F343  43                 	db	67
   866  00F344  68                 	db	104
   867  00F345  61                 	db	97
   868  00F346  6E                 	db	110
   869  00F347  6E                 	db	110
   870  00F348  65                 	db	101
   871  00F349  6C                 	db	108
   872  00F34A  45                 	db	69
   873  00F34B  00                 	db	0
   874  00F34C                     __end_of_Conf1_ChannelE_STR:
   875                           	opt stack 0
   876  00F34C                     _Conf1_ChannelF_STR:
   877                           	opt stack 0
   878  00F34C  43                 	db	67
   879  00F34D  6F                 	db	111
   880  00F34E  6E                 	db	110
   881  00F34F  66                 	db	102
   882  00F350  31                 	db	49
   883  00F351  5F                 	db	95
   884  00F352  43                 	db	67
   885  00F353  68                 	db	104
   886  00F354  61                 	db	97
   887  00F355  6E                 	db	110
   888  00F356  6E                 	db	110
   889  00F357  65                 	db	101
   890  00F358  6C                 	db	108
   891  00F359  46                 	db	70
   892  00F35A  00                 	db	0
   893  00F35B                     __end_of_Conf1_ChannelF_STR:
   894                           	opt stack 0
   895  00F35B                     _SYNTAX_ERR:
   896                           	opt stack 0
   897  00F35B  45                 	db	69
   898  00F35C  72                 	db	114
   899  00F35D  72                 	db	114
   900  00F35E  6F                 	db	111
   901  00F35F  72                 	db	114
   902  00F360  3A                 	db	58
   903  00F361  20                 	db	32
   904  00F362  53                 	db	83
   905  00F363  79                 	db	121
   906  00F364  6E                 	db	110
   907  00F365  74                 	db	116
   908  00F366  61                 	db	97
   909  00F367  78                 	db	120
   910  00F368  00                 	db	0
   911  00F369                     __end_of_SYNTAX_ERR:
   912                           	opt stack 0
   913  00F369                     _Conf1_ChannelD:
   914                           	opt stack 0
   915  00F369  03                 	db	3
   916  00F36A  03                 	db	3
   917  00F36B  03                 	db	3
   918  00F36C  03                 	db	3
   919  00F36D  03                 	db	3
   920  00F36E  03                 	db	3
   921  00F36F  00                 	db	0
   922  00F370  00                 	db	0
   923  00F371  01                 	db	1
   924  00F372  00                 	db	0
   925  00F373  00                 	db	0
   926  00F374  00                 	db	0
   927  00F375                     __end_of_Conf1_ChannelD:
   928                           	opt stack 0
   929  00F375                     _Conf1_ChannelE:
   930                           	opt stack 0
   931  00F375  00                 	db	0
   932  00F376  03                 	db	3
   933  00F377  03                 	db	3
   934  00F378  03                 	db	3
   935  00F379  03                 	db	3
   936  00F37A  03                 	db	3
   937  00F37B  00                 	db	0
   938  00F37C  00                 	db	0
   939  00F37D  01                 	db	1
   940  00F37E  00                 	db	0
   941  00F37F  00                 	db	0
   942  00F380  00                 	db	0
   943  00F381                     __end_of_Conf1_ChannelE:
   944                           	opt stack 0
   945  00F381                     _Conf1_ChannelF:
   946                           	opt stack 0
   947  00F381  03                 	db	3
   948  00F382  00                 	db	0
   949  00F383  03                 	db	3
   950  00F384  03                 	db	3
   951  00F385  03                 	db	3
   952  00F386  03                 	db	3
   953  00F387  00                 	db	0
   954  00F388  00                 	db	0
   955  00F389  01                 	db	1
   956  00F38A  00                 	db	0
   957  00F38B  00                 	db	0
   958  00F38C  00                 	db	0
   959  00F38D                     __end_of_Conf1_ChannelF:
   960                           	opt stack 0
   961  00F38D                     _FirmVersion:
   962                           	opt stack 0
   963  00F38D  31                 	db	49
   964  00F38E  2E                 	db	46
   965  00F38F  30                 	db	48
   966  00F390  5F                 	db	95
   967  00F391  44                 	db	68
   968  00F392  57                 	db	87
   969  00F393  30                 	db	48
   970  00F394  62                 	db	98
   971  00F395  00                 	db	0
   972  00F396                     __end_of_FirmVersion:
   973                           	opt stack 0
   974  00F396                     _PCBVersion:
   975                           	opt stack 0
   976  00F396  52                 	db	82
   977  00F397  65                 	db	101
   978  00F398  76                 	db	118
   979  00F399  41                 	db	65
   980  00F39A  00                 	db	0
   981  00F39B                     __end_of_PCBVersion:
   982                           	opt stack 0
   983  00F39B                     _Conf1_Channels:
   984                           	opt stack 0
   985  00F39B  44                 	db	68
   986  00F39C  45                 	db	69
   987  00F39D  46                 	db	70
   988  00F39E  00                 	db	0
   989  00F39F                     __end_of_Conf1_Channels:
   990                           	opt stack 0
   991  00F39F                     _Conf2_Channels:
   992                           	opt stack 0
   993  00F39F  42                 	db	66
   994  00F3A0  44                 	db	68
   995  00F3A1  48                 	db	72
   996  00F3A2  00                 	db	0
   997  00F3A3                     __end_of_Conf2_Channels:
   998                           	opt stack 0
   999  00F3A3                     _Frequency:
  1000                           	opt stack 0
  1001  00F3A3  33                 	db	51
  1002  00F3A4  31                 	db	49
  1003  00F3A5  35                 	db	53
  1004  00F3A6  00                 	db	0
  1005  00F3A7                     __end_of_Frequency:
  1006                           	opt stack 0
  1007  00F3A7                     _CRLN:
  1008                           	opt stack 0
  1009  00F3A7  0D                 	db	13
  1010  00F3A8  0A                 	db	10
  1011  00F3A9  00                 	db	0
  1012  00F3AA                     __end_of_CRLN:
  1013                           	opt stack 0
  1014  0000                     _ADCON0	set	4034
  1015  0000                     _ADCON0bits	set	4034
  1016  0000                     _ADCON1	set	4033
  1017  0000                     _ADCON1bits	set	4033
  1018  0000                     _ADCON2	set	4032
  1019  0000                     _ADCON2bits	set	4032
  1020  0000                     _ADRESH	set	4036
  1021  0000                     _ADRESL	set	4035
  1022  0000                     _ANSEL	set	3966
  1023  0000                     _ANSELH	set	3967
  1024  0000                     _BAUDCONbits	set	4024
  1025  0000                     _EEADR	set	4009
  1026  0000                     _EEADRH	set	4010
  1027  0000                     _EECON1bits	set	4006
  1028  0000                     _EECON2	set	4007
  1029  0000                     _EEDATA	set	4008
  1030  0000                     _INTCON2bits	set	4081
  1031  0000                     _INTCONbits	set	4082
  1032  0000                     _IOCBbits	set	3965
  1033  0000                     _IPR1bits	set	3999
  1034  0000                     _IPR2bits	set	4002
  1035  0000                     _LATA	set	3977
  1036  0000                     _LATB	set	3978
  1037  0000                     _LATC	set	3979
  1038  0000                     _PIE1bits	set	3997
  1039  0000                     _PIE2bits	set	4000
  1040  0000                     _PIR1bits	set	3998
  1041  0000                     _PIR2bits	set	4001
  1042  0000                     _PORTA	set	3968
  1043  0000                     _PORTB	set	3969
  1044  0000                     _PORTC	set	3970
  1045  0000                     _PR2	set	4043
  1046  0000                     _RCONbits	set	4048
  1047  0000                     _RCREG	set	4014
  1048  0000                     _RCSTA	set	4011
  1049  0000                     _RCSTAbits	set	4011
  1050  0000                     _SPBRG	set	4015
  1051  0000                     _SPBRGH	set	4016
  1052  0000                     _T0CONbits	set	4053
  1053  0000                     _T1CONbits	set	4045
  1054  0000                     _T2CONbits	set	4042
  1055  0000                     _T3CONbits	set	4017
  1056  0000                     _TMR0H	set	4055
  1057  0000                     _TMR0L	set	4054
  1058  0000                     _TMR1H	set	4047
  1059  0000                     _TMR1L	set	4046
  1060  0000                     _TMR2	set	4044
  1061  0000                     _TMR3H	set	4019
  1062  0000                     _TMR3L	set	4018
  1063  0000                     _TRISAbits	set	3986
  1064  0000                     _TRISBbits	set	3987
  1065  0000                     _TRISCbits	set	3988
  1066  0000                     _TXREG	set	4013
  1067  0000                     _TXSTA	set	4012
  1068  0000                     _TXSTAbits	set	4012
  1069  0000                     _WPUB	set	3964
  1070  00F3AA                     STR_73:
  1071  00F3AA  4E                 	db	78	;'N'
  1072  00F3AB  45                 	db	69	;'E'
  1073  00F3AC  43                 	db	67	;'C'
  1074  00F3AD  20                 	db	32
  1075  00F3AE  63                 	db	99	;'c'
  1076  00F3AF  6F                 	db	111	;'o'
  1077  00F3B0  64                 	db	100	;'d'
  1078  00F3B1  65                 	db	101	;'e'
  1079  00F3B2  20                 	db	32
  1080  00F3B3  30                 	db	48	;'0'
  1081  00F3B4  78                 	db	120	;'x'
  1082  00F3B5  25                 	db	37
  1083  00F3B6  6C                 	db	108	;'l'
  1084  00F3B7  58                 	db	88	;'X'
  1085  00F3B8  20                 	db	32
  1086  00F3B9  6E                 	db	110	;'n'
  1087  00F3BA  6F                 	db	111	;'o'
  1088  00F3BB  77                 	db	119	;'w'
  1089  00F3BC  20                 	db	32
  1090  00F3BD  74                 	db	116	;'t'
  1091  00F3BE  72                 	db	114	;'r'
  1092  00F3BF  61                 	db	97	;'a'
  1093  00F3C0  6E                 	db	110	;'n'
  1094  00F3C1  73                 	db	115	;'s'
  1095  00F3C2  6D                 	db	109	;'m'
  1096  00F3C3  69                 	db	105	;'i'
  1097  00F3C4  74                 	db	116	;'t'
  1098  00F3C5  73                 	db	115	;'s'
  1099  00F3C6  20                 	db	32
  1100  00F3C7  52                 	db	82	;'R'
  1101  00F3C8  46                 	db	70	;'F'
  1102  00F3C9  20                 	db	32
  1103  00F3CA  63                 	db	99	;'c'
  1104  00F3CB  6F                 	db	111	;'o'
  1105  00F3CC  6E                 	db	110	;'n'
  1106  00F3CD  66                 	db	102	;'f'
  1107  00F3CE  69                 	db	105	;'i'
  1108  00F3CF  67                 	db	103	;'g'
  1109  00F3D0  20                 	db	32
  1110  00F3D1  25                 	db	37
  1111  00F3D2  64                 	db	100	;'d'
  1112  00F3D3  20                 	db	32
  1113  00F3D4  63                 	db	99	;'c'
  1114  00F3D5  68                 	db	104	;'h'
  1115  00F3D6  61                 	db	97	;'a'
  1116  00F3D7  6E                 	db	110	;'n'
  1117  00F3D8  6E                 	db	110	;'n'
  1118  00F3D9  65                 	db	101	;'e'
  1119  00F3DA  6C                 	db	108	;'l'
  1120  00F3DB  20                 	db	32
  1121  00F3DC  25                 	db	37
  1122  00F3DD  63                 	db	99	;'c'
  1123  00F3DE  20                 	db	32
  1124  00F3DF  64                 	db	100	;'d'
  1125  00F3E0  65                 	db	101	;'e'
  1126  00F3E1  76                 	db	118	;'v'
  1127  00F3E2  69                 	db	105	;'i'
  1128  00F3E3  63                 	db	99	;'c'
  1129  00F3E4  65                 	db	101	;'e'
  1130  00F3E5  20                 	db	32
  1131  00F3E6  25                 	db	37
  1132  00F3E7  64                 	db	100	;'d'
  1133  00F3E8  00                 	db	0
  1134  00F3E9                     STR_74:
  1135  00F3E9  4E                 	db	78	;'N'
  1136  00F3EA  45                 	db	69	;'E'
  1137  00F3EB  43                 	db	67	;'C'
  1138  00F3EC  20                 	db	32
  1139  00F3ED  63                 	db	99	;'c'
  1140  00F3EE  6F                 	db	111	;'o'
  1141  00F3EF  64                 	db	100	;'d'
  1142  00F3F0  65                 	db	101	;'e'
  1143  00F3F1  20                 	db	32
  1144  00F3F2  30                 	db	48	;'0'
  1145  00F3F3  78                 	db	120	;'x'
  1146  00F3F4  25                 	db	37
  1147  00F3F5  6C                 	db	108	;'l'
  1148  00F3F6  58                 	db	88	;'X'
  1149  00F3F7  20                 	db	32
  1150  00F3F8  6E                 	db	110	;'n'
  1151  00F3F9  6F                 	db	111	;'o'
  1152  00F3FA  77                 	db	119	;'w'
  1153  00F3FB  20                 	db	32
  1154  00F3FC  74                 	db	116	;'t'
  1155  00F3FD  72                 	db	114	;'r'
  1156  00F3FE  61                 	db	97	;'a'
  1157  00F3FF  6E                 	db	110	;'n'
  1158  00F400  73                 	db	115	;'s'
  1159  00F401  6D                 	db	109	;'m'
  1160  00F402  69                 	db	105	;'i'
  1161  00F403  74                 	db	116	;'t'
  1162  00F404  73                 	db	115	;'s'
  1163  00F405  20                 	db	32
  1164  00F406  52                 	db	82	;'R'
  1165  00F407  46                 	db	70	;'F'
  1166  00F408  20                 	db	32
  1167  00F409  63                 	db	99	;'c'
  1168  00F40A  6F                 	db	111	;'o'
  1169  00F40B  6E                 	db	110	;'n'
  1170  00F40C  66                 	db	102	;'f'
  1171  00F40D  69                 	db	105	;'i'
  1172  00F40E  67                 	db	103	;'g'
  1173  00F40F  20                 	db	32
  1174  00F410  25                 	db	37
  1175  00F411  64                 	db	100	;'d'
  1176  00F412  20                 	db	32
  1177  00F413  63                 	db	99	;'c'
  1178  00F414  68                 	db	104	;'h'
  1179  00F415  61                 	db	97	;'a'
  1180  00F416  6E                 	db	110	;'n'
  1181  00F417  6E                 	db	110	;'n'
  1182  00F418  65                 	db	101	;'e'
  1183  00F419  6C                 	db	108	;'l'
  1184  00F41A  20                 	db	32
  1185  00F41B  25                 	db	37
  1186  00F41C  63                 	db	99	;'c'
  1187  00F41D  20                 	db	32
  1188  00F41E  00                 	db	0
  1189  00F41F                     STR_75:
  1190  00F41F  52                 	db	82	;'R'
  1191  00F420  46                 	db	70	;'F'
  1192  00F421  20                 	db	32
  1193  00F422  63                 	db	99	;'c'
  1194  00F423  6F                 	db	111	;'o'
  1195  00F424  6E                 	db	110	;'n'
  1196  00F425  66                 	db	102	;'f'
  1197  00F426  69                 	db	105	;'i'
  1198  00F427  67                 	db	103	;'g'
  1199  00F428  20                 	db	32
  1200  00F429  25                 	db	37
  1201  00F42A  64                 	db	100	;'d'
  1202  00F42B  20                 	db	32
  1203  00F42C  63                 	db	99	;'c'
  1204  00F42D  68                 	db	104	;'h'
  1205  00F42E  61                 	db	97	;'a'
  1206  00F42F  6E                 	db	110	;'n'
  1207  00F430  6E                 	db	110	;'n'
  1208  00F431  65                 	db	101	;'e'
  1209  00F432  6C                 	db	108	;'l'
  1210  00F433  20                 	db	32
  1211  00F434  25                 	db	37
  1212  00F435  63                 	db	99	;'c'
  1213  00F436  20                 	db	32
  1214  00F437  64                 	db	100	;'d'
  1215  00F438  65                 	db	101	;'e'
  1216  00F439  76                 	db	118	;'v'
  1217  00F43A  69                 	db	105	;'i'
  1218  00F43B  63                 	db	99	;'c'
  1219  00F43C  65                 	db	101	;'e'
  1220  00F43D  20                 	db	32
  1221  00F43E  25                 	db	37
  1222  00F43F  64                 	db	100	;'d'
  1223  00F440  20                 	db	32
  1224  00F441  73                 	db	115	;'s'
  1225  00F442  75                 	db	117	;'u'
  1226  00F443  63                 	db	99	;'c'
  1227  00F444  63                 	db	99	;'c'
  1228  00F445  65                 	db	101	;'e'
  1229  00F446  73                 	db	115	;'s'
  1230  00F447  73                 	db	115	;'s'
  1231  00F448  66                 	db	102	;'f'
  1232  00F449  75                 	db	117	;'u'
  1233  00F44A  6C                 	db	108	;'l'
  1234  00F44B  6C                 	db	108	;'l'
  1235  00F44C  79                 	db	121	;'y'
  1236  00F44D  20                 	db	32
  1237  00F44E  65                 	db	101	;'e'
  1238  00F44F  72                 	db	114	;'r'
  1239  00F450  61                 	db	97	;'a'
  1240  00F451  73                 	db	115	;'s'
  1241  00F452  65                 	db	101	;'e'
  1242  00F453  64                 	db	100	;'d'
  1243  00F454  00                 	db	0
  1244  00F455                     STR_69:
  1245  00F455  45                 	db	69	;'E'
  1246  00F456  72                 	db	114	;'r'
  1247  00F457  72                 	db	114	;'r'
  1248  00F458  6F                 	db	111	;'o'
  1249  00F459  72                 	db	114	;'r'
  1250  00F45A  3A                 	db	58	;':'
  1251  00F45B  20                 	db	32
  1252  00F45C  4E                 	db	78	;'N'
  1253  00F45D  6F                 	db	111	;'o'
  1254  00F45E  20                 	db	32
  1255  00F45F  52                 	db	82	;'R'
  1256  00F460  46                 	db	70	;'F'
  1257  00F461  20                 	db	32
  1258  00F462  63                 	db	99	;'c'
  1259  00F463  6F                 	db	111	;'o'
  1260  00F464  6E                 	db	110	;'n'
  1261  00F465  66                 	db	102	;'f'
  1262  00F466  69                 	db	105	;'i'
  1263  00F467  67                 	db	103	;'g'
  1264  00F468  20                 	db	32
  1265  00F469  32                 	db	50	;'2'
  1266  00F46A  2C                 	db	44
  1267  00F46B  20                 	db	32
  1268  00F46C  63                 	db	99	;'c'
  1269  00F46D  68                 	db	104	;'h'
  1270  00F46E  61                 	db	97	;'a'
  1271  00F46F  6E                 	db	110	;'n'
  1272  00F470  6E                 	db	110	;'n'
  1273  00F471  65                 	db	101	;'e'
  1274  00F472  6C                 	db	108	;'l'
  1275  00F473  20                 	db	32
  1276  00F474  48                 	db	72	;'H'
  1277  00F475  20                 	db	32
  1278  00F476  64                 	db	100	;'d'
  1279  00F477  65                 	db	101	;'e'
  1280  00F478  76                 	db	118	;'v'
  1281  00F479  69                 	db	105	;'i'
  1282  00F47A  63                 	db	99	;'c'
  1283  00F47B  65                 	db	101	;'e'
  1284  00F47C  20                 	db	32
  1285  00F47D  73                 	db	115	;'s'
  1286  00F47E  70                 	db	112	;'p'
  1287  00F47F  65                 	db	101	;'e'
  1288  00F480  63                 	db	99	;'c'
  1289  00F481  69                 	db	105	;'i'
  1290  00F482  66                 	db	102	;'f'
  1291  00F483  69                 	db	105	;'i'
  1292  00F484  65                 	db	101	;'e'
  1293  00F485  64                 	db	100	;'d'
  1294  00F486  00                 	db	0
  1295  00F487                     STR_70:
  1296  00F487  45                 	db	69	;'E'
  1297  00F488  72                 	db	114	;'r'
  1298  00F489  72                 	db	114	;'r'
  1299  00F48A  6F                 	db	111	;'o'
  1300  00F48B  72                 	db	114	;'r'
  1301  00F48C  3A                 	db	58	;':'
  1302  00F48D  20                 	db	32
  1303  00F48E  52                 	db	82	;'R'
  1304  00F48F  46                 	db	70	;'F'
  1305  00F490  20                 	db	32
  1306  00F491  63                 	db	99	;'c'
  1307  00F492  6F                 	db	111	;'o'
  1308  00F493  6E                 	db	110	;'n'
  1309  00F494  66                 	db	102	;'f'
  1310  00F495  69                 	db	105	;'i'
  1311  00F496  67                 	db	103	;'g'
  1312  00F497  20                 	db	32
  1313  00F498  32                 	db	50	;'2'
  1314  00F499  2C                 	db	44
  1315  00F49A  20                 	db	32
  1316  00F49B  63                 	db	99	;'c'
  1317  00F49C  68                 	db	104	;'h'
  1318  00F49D  61                 	db	97	;'a'
  1319  00F49E  6E                 	db	110	;'n'
  1320  00F49F  6E                 	db	110	;'n'
  1321  00F4A0  65                 	db	101	;'e'
  1322  00F4A1  6C                 	db	108	;'l'
  1323  00F4A2  20                 	db	32
  1324  00F4A3  48                 	db	72	;'H'
  1325  00F4A4  20                 	db	32
  1326  00F4A5  64                 	db	100	;'d'
  1327  00F4A6  65                 	db	101	;'e'
  1328  00F4A7  76                 	db	118	;'v'
  1329  00F4A8  69                 	db	105	;'i'
  1330  00F4A9  63                 	db	99	;'c'
  1331  00F4AA  65                 	db	101	;'e'
  1332  00F4AB  20                 	db	32
  1333  00F4AC  6F                 	db	111	;'o'
  1334  00F4AD  75                 	db	117	;'u'
  1335  00F4AE  74                 	db	116	;'t'
  1336  00F4AF  20                 	db	32
  1337  00F4B0  6F                 	db	111	;'o'
  1338  00F4B1  66                 	db	102	;'f'
  1339  00F4B2  20                 	db	32
  1340  00F4B3  72                 	db	114	;'r'
  1341  00F4B4  61                 	db	97	;'a'
  1342  00F4B5  6E                 	db	110	;'n'
  1343  00F4B6  67                 	db	103	;'g'
  1344  00F4B7  65                 	db	101	;'e'
  1345  00F4B8  00                 	db	0
  1346  00F4B9                     STR_115:
  1347  00F4B9  53                 	db	83	;'S'
  1348  00F4BA  65                 	db	101	;'e'
  1349  00F4BB  74                 	db	116	;'t'
  1350  00F4BC  73                 	db	115	;'s'
  1351  00F4BD  20                 	db	32
  1352  00F4BE  52                 	db	82	;'R'
  1353  00F4BF  65                 	db	101	;'e'
  1354  00F4C0  6D                 	db	109	;'m'
  1355  00F4C1  6F                 	db	111	;'o'
  1356  00F4C2  74                 	db	116	;'t'
  1357  00F4C3  65                 	db	101	;'e'
  1358  00F4C4  20                 	db	32
  1359  00F4C5  62                 	db	98	;'b'
  1360  00F4C6  75                 	db	117	;'u'
  1361  00F4C7  74                 	db	116	;'t'
  1362  00F4C8  74                 	db	116	;'t'
  1363  00F4C9  6F                 	db	111	;'o'
  1364  00F4CA  6E                 	db	110	;'n'
  1365  00F4CB  20                 	db	32
  1366  00F4CC  74                 	db	116	;'t'
  1367  00F4CD  6F                 	db	111	;'o'
  1368  00F4CE  20                 	db	32
  1369  00F4CF  73                 	db	115	;'s'
  1370  00F4D0  65                 	db	101	;'e'
  1371  00F4D1  6E                 	db	110	;'n'
  1372  00F4D2  64                 	db	100	;'d'
  1373  00F4D3  20                 	db	32
  1374  00F4D4  52                 	db	82	;'R'
  1375  00F4D5  46                 	db	70	;'F'
  1376  00F4D6  20                 	db	32
  1377  00F4D7  43                 	db	67	;'C'
  1378  00F4D8  6F                 	db	111	;'o'
  1379  00F4D9  6E                 	db	110	;'n'
  1380  00F4DA  66                 	db	102	;'f'
  1381  00F4DB  69                 	db	105	;'i'
  1382  00F4DC  67                 	db	103	;'g'
  1383  00F4DD  20                 	db	32
  1384  00F4DE  32                 	db	50	;'2'
  1385  00F4DF  20                 	db	32
  1386  00F4E0  63                 	db	99	;'c'
  1387  00F4E1  68                 	db	104	;'h'
  1388  00F4E2  61                 	db	97	;'a'
  1389  00F4E3  6E                 	db	110	;'n'
  1390  00F4E4  6E                 	db	110	;'n'
  1391  00F4E5  65                 	db	101	;'e'
  1392  00F4E6  6C                 	db	108	;'l'
  1393  00F4E7  20                 	db	32
  1394  00F4E8  42                 	db	66	;'B'
  1395  00F4E9  00                 	db	0
  1396  00F4EA                     STR_109:
  1397  00F4EA  53                 	db	83	;'S'
  1398  00F4EB  65                 	db	101	;'e'
  1399  00F4EC  74                 	db	116	;'t'
  1400  00F4ED  73                 	db	115	;'s'
  1401  00F4EE  20                 	db	32
  1402  00F4EF  52                 	db	82	;'R'
  1403  00F4F0  65                 	db	101	;'e'
  1404  00F4F1  6D                 	db	109	;'m'
  1405  00F4F2  6F                 	db	111	;'o'
  1406  00F4F3  74                 	db	116	;'t'
  1407  00F4F4  65                 	db	101	;'e'
  1408  00F4F5  20                 	db	32
  1409  00F4F6  62                 	db	98	;'b'
  1410  00F4F7  75                 	db	117	;'u'
  1411  00F4F8  74                 	db	116	;'t'
  1412  00F4F9  74                 	db	116	;'t'
  1413  00F4FA  6F                 	db	111	;'o'
  1414  00F4FB  6E                 	db	110	;'n'
  1415  00F4FC  20                 	db	32
  1416  00F4FD  74                 	db	116	;'t'
  1417  00F4FE  6F                 	db	111	;'o'
  1418  00F4FF  20                 	db	32
  1419  00F500  73                 	db	115	;'s'
  1420  00F501  65                 	db	101	;'e'
  1421  00F502  6E                 	db	110	;'n'
  1422  00F503  64                 	db	100	;'d'
  1423  00F504  20                 	db	32
  1424  00F505  52                 	db	82	;'R'
  1425  00F506  46                 	db	70	;'F'
  1426  00F507  20                 	db	32
  1427  00F508  43                 	db	67	;'C'
  1428  00F509  6F                 	db	111	;'o'
  1429  00F50A  6E                 	db	110	;'n'
  1430  00F50B  66                 	db	102	;'f'
  1431  00F50C  69                 	db	105	;'i'
  1432  00F50D  67                 	db	103	;'g'
  1433  00F50E  20                 	db	32
  1434  00F50F  31                 	db	49	;'1'
  1435  00F510  20                 	db	32
  1436  00F511  63                 	db	99	;'c'
  1437  00F512  68                 	db	104	;'h'
  1438  00F513  61                 	db	97	;'a'
  1439  00F514  6E                 	db	110	;'n'
  1440  00F515  6E                 	db	110	;'n'
  1441  00F516  65                 	db	101	;'e'
  1442  00F517  6C                 	db	108	;'l'
  1443  00F518  20                 	db	32
  1444  00F519  44                 	db	68	;'D'
  1445  00F51A  00                 	db	0
  1446  00F51B                     STR_117:
  1447  00F51B  53                 	db	83	;'S'
  1448  00F51C  65                 	db	101	;'e'
  1449  00F51D  74                 	db	116	;'t'
  1450  00F51E  73                 	db	115	;'s'
  1451  00F51F  20                 	db	32
  1452  00F520  52                 	db	82	;'R'
  1453  00F521  65                 	db	101	;'e'
  1454  00F522  6D                 	db	109	;'m'
  1455  00F523  6F                 	db	111	;'o'
  1456  00F524  74                 	db	116	;'t'
  1457  00F525  65                 	db	101	;'e'
  1458  00F526  20                 	db	32
  1459  00F527  62                 	db	98	;'b'
  1460  00F528  75                 	db	117	;'u'
  1461  00F529  74                 	db	116	;'t'
  1462  00F52A  74                 	db	116	;'t'
  1463  00F52B  6F                 	db	111	;'o'
  1464  00F52C  6E                 	db	110	;'n'
  1465  00F52D  20                 	db	32
  1466  00F52E  74                 	db	116	;'t'
  1467  00F52F  6F                 	db	111	;'o'
  1468  00F530  20                 	db	32
  1469  00F531  73                 	db	115	;'s'
  1470  00F532  65                 	db	101	;'e'
  1471  00F533  6E                 	db	110	;'n'
  1472  00F534  64                 	db	100	;'d'
  1473  00F535  20                 	db	32
  1474  00F536  52                 	db	82	;'R'
  1475  00F537  46                 	db	70	;'F'
  1476  00F538  20                 	db	32
  1477  00F539  43                 	db	67	;'C'
  1478  00F53A  6F                 	db	111	;'o'
  1479  00F53B  6E                 	db	110	;'n'
  1480  00F53C  66                 	db	102	;'f'
  1481  00F53D  69                 	db	105	;'i'
  1482  00F53E  67                 	db	103	;'g'
  1483  00F53F  20                 	db	32
  1484  00F540  32                 	db	50	;'2'
  1485  00F541  20                 	db	32
  1486  00F542  63                 	db	99	;'c'
  1487  00F543  68                 	db	104	;'h'
  1488  00F544  61                 	db	97	;'a'
  1489  00F545  6E                 	db	110	;'n'
  1490  00F546  6E                 	db	110	;'n'
  1491  00F547  65                 	db	101	;'e'
  1492  00F548  6C                 	db	108	;'l'
  1493  00F549  20                 	db	32
  1494  00F54A  44                 	db	68	;'D'
  1495  00F54B  00                 	db	0
  1496  00F54C                     STR_111:
  1497  00F54C  53                 	db	83	;'S'
  1498  00F54D  65                 	db	101	;'e'
  1499  00F54E  74                 	db	116	;'t'
  1500  00F54F  73                 	db	115	;'s'
  1501  00F550  20                 	db	32
  1502  00F551  52                 	db	82	;'R'
  1503  00F552  65                 	db	101	;'e'
  1504  00F553  6D                 	db	109	;'m'
  1505  00F554  6F                 	db	111	;'o'
  1506  00F555  74                 	db	116	;'t'
  1507  00F556  65                 	db	101	;'e'
  1508  00F557  20                 	db	32
  1509  00F558  62                 	db	98	;'b'
  1510  00F559  75                 	db	117	;'u'
  1511  00F55A  74                 	db	116	;'t'
  1512  00F55B  74                 	db	116	;'t'
  1513  00F55C  6F                 	db	111	;'o'
  1514  00F55D  6E                 	db	110	;'n'
  1515  00F55E  20                 	db	32
  1516  00F55F  74                 	db	116	;'t'
  1517  00F560  6F                 	db	111	;'o'
  1518  00F561  20                 	db	32
  1519  00F562  73                 	db	115	;'s'
  1520  00F563  65                 	db	101	;'e'
  1521  00F564  6E                 	db	110	;'n'
  1522  00F565  64                 	db	100	;'d'
  1523  00F566  20                 	db	32
  1524  00F567  52                 	db	82	;'R'
  1525  00F568  46                 	db	70	;'F'
  1526  00F569  20                 	db	32
  1527  00F56A  43                 	db	67	;'C'
  1528  00F56B  6F                 	db	111	;'o'
  1529  00F56C  6E                 	db	110	;'n'
  1530  00F56D  66                 	db	102	;'f'
  1531  00F56E  69                 	db	105	;'i'
  1532  00F56F  67                 	db	103	;'g'
  1533  00F570  20                 	db	32
  1534  00F571  31                 	db	49	;'1'
  1535  00F572  20                 	db	32
  1536  00F573  63                 	db	99	;'c'
  1537  00F574  68                 	db	104	;'h'
  1538  00F575  61                 	db	97	;'a'
  1539  00F576  6E                 	db	110	;'n'
  1540  00F577  6E                 	db	110	;'n'
  1541  00F578  65                 	db	101	;'e'
  1542  00F579  6C                 	db	108	;'l'
  1543  00F57A  20                 	db	32
  1544  00F57B  45                 	db	69	;'E'
  1545  00F57C  00                 	db	0
  1546  00F57D                     STR_113:
  1547  00F57D  53                 	db	83	;'S'
  1548  00F57E  65                 	db	101	;'e'
  1549  00F57F  74                 	db	116	;'t'
  1550  00F580  73                 	db	115	;'s'
  1551  00F581  20                 	db	32
  1552  00F582  52                 	db	82	;'R'
  1553  00F583  65                 	db	101	;'e'
  1554  00F584  6D                 	db	109	;'m'
  1555  00F585  6F                 	db	111	;'o'
  1556  00F586  74                 	db	116	;'t'
  1557  00F587  65                 	db	101	;'e'
  1558  00F588  20                 	db	32
  1559  00F589  62                 	db	98	;'b'
  1560  00F58A  75                 	db	117	;'u'
  1561  00F58B  74                 	db	116	;'t'
  1562  00F58C  74                 	db	116	;'t'
  1563  00F58D  6F                 	db	111	;'o'
  1564  00F58E  6E                 	db	110	;'n'
  1565  00F58F  20                 	db	32
  1566  00F590  74                 	db	116	;'t'
  1567  00F591  6F                 	db	111	;'o'
  1568  00F592  20                 	db	32
  1569  00F593  73                 	db	115	;'s'
  1570  00F594  65                 	db	101	;'e'
  1571  00F595  6E                 	db	110	;'n'
  1572  00F596  64                 	db	100	;'d'
  1573  00F597  20                 	db	32
  1574  00F598  52                 	db	82	;'R'
  1575  00F599  46                 	db	70	;'F'
  1576  00F59A  20                 	db	32
  1577  00F59B  43                 	db	67	;'C'
  1578  00F59C  6F                 	db	111	;'o'
  1579  00F59D  6E                 	db	110	;'n'
  1580  00F59E  66                 	db	102	;'f'
  1581  00F59F  69                 	db	105	;'i'
  1582  00F5A0  67                 	db	103	;'g'
  1583  00F5A1  20                 	db	32
  1584  00F5A2  31                 	db	49	;'1'
  1585  00F5A3  20                 	db	32
  1586  00F5A4  63                 	db	99	;'c'
  1587  00F5A5  68                 	db	104	;'h'
  1588  00F5A6  61                 	db	97	;'a'
  1589  00F5A7  6E                 	db	110	;'n'
  1590  00F5A8  6E                 	db	110	;'n'
  1591  00F5A9  65                 	db	101	;'e'
  1592  00F5AA  6C                 	db	108	;'l'
  1593  00F5AB  20                 	db	32
  1594  00F5AC  46                 	db	70	;'F'
  1595  00F5AD  00                 	db	0
  1596  00F5AE                     STR_119:
  1597  00F5AE  53                 	db	83	;'S'
  1598  00F5AF  65                 	db	101	;'e'
  1599  00F5B0  74                 	db	116	;'t'
  1600  00F5B1  73                 	db	115	;'s'
  1601  00F5B2  20                 	db	32
  1602  00F5B3  52                 	db	82	;'R'
  1603  00F5B4  65                 	db	101	;'e'
  1604  00F5B5  6D                 	db	109	;'m'
  1605  00F5B6  6F                 	db	111	;'o'
  1606  00F5B7  74                 	db	116	;'t'
  1607  00F5B8  65                 	db	101	;'e'
  1608  00F5B9  20                 	db	32
  1609  00F5BA  62                 	db	98	;'b'
  1610  00F5BB  75                 	db	117	;'u'
  1611  00F5BC  74                 	db	116	;'t'
  1612  00F5BD  74                 	db	116	;'t'
  1613  00F5BE  6F                 	db	111	;'o'
  1614  00F5BF  6E                 	db	110	;'n'
  1615  00F5C0  20                 	db	32
  1616  00F5C1  74                 	db	116	;'t'
  1617  00F5C2  6F                 	db	111	;'o'
  1618  00F5C3  20                 	db	32
  1619  00F5C4  73                 	db	115	;'s'
  1620  00F5C5  65                 	db	101	;'e'
  1621  00F5C6  6E                 	db	110	;'n'
  1622  00F5C7  64                 	db	100	;'d'
  1623  00F5C8  20                 	db	32
  1624  00F5C9  52                 	db	82	;'R'
  1625  00F5CA  46                 	db	70	;'F'
  1626  00F5CB  20                 	db	32
  1627  00F5CC  43                 	db	67	;'C'
  1628  00F5CD  6F                 	db	111	;'o'
  1629  00F5CE  6E                 	db	110	;'n'
  1630  00F5CF  66                 	db	102	;'f'
  1631  00F5D0  69                 	db	105	;'i'
  1632  00F5D1  67                 	db	103	;'g'
  1633  00F5D2  20                 	db	32
  1634  00F5D3  32                 	db	50	;'2'
  1635  00F5D4  20                 	db	32
  1636  00F5D5  63                 	db	99	;'c'
  1637  00F5D6  68                 	db	104	;'h'
  1638  00F5D7  61                 	db	97	;'a'
  1639  00F5D8  6E                 	db	110	;'n'
  1640  00F5D9  6E                 	db	110	;'n'
  1641  00F5DA  65                 	db	101	;'e'
  1642  00F5DB  6C                 	db	108	;'l'
  1643  00F5DC  20                 	db	32
  1644  00F5DD  48                 	db	72	;'H'
  1645  00F5DE  00                 	db	0
  1646  00F5DF                     STR_49:
  1647  00F5DF  45                 	db	69	;'E'
  1648  00F5E0  72                 	db	114	;'r'
  1649  00F5E1  72                 	db	114	;'r'
  1650  00F5E2  6F                 	db	111	;'o'
  1651  00F5E3  72                 	db	114	;'r'
  1652  00F5E4  3A                 	db	58	;':'
  1653  00F5E5  20                 	db	32
  1654  00F5E6  4E                 	db	78	;'N'
  1655  00F5E7  6F                 	db	111	;'o'
  1656  00F5E8  20                 	db	32
  1657  00F5E9  4E                 	db	78	;'N'
  1658  00F5EA  45                 	db	69	;'E'
  1659  00F5EB  43                 	db	67	;'C'
  1660  00F5EC  20                 	db	32
  1661  00F5ED  63                 	db	99	;'c'
  1662  00F5EE  6F                 	db	111	;'o'
  1663  00F5EF  64                 	db	100	;'d'
  1664  00F5F0  65                 	db	101	;'e'
  1665  00F5F1  20                 	db	32
  1666  00F5F2  73                 	db	115	;'s'
  1667  00F5F3  61                 	db	97	;'a'
  1668  00F5F4  76                 	db	118	;'v'
  1669  00F5F5  65                 	db	101	;'e'
  1670  00F5F6  64                 	db	100	;'d'
  1671  00F5F7  20                 	db	32
  1672  00F5F8  66                 	db	102	;'f'
  1673  00F5F9  6F                 	db	111	;'o'
  1674  00F5FA  72                 	db	114	;'r'
  1675  00F5FB  20                 	db	32
  1676  00F5FC  73                 	db	115	;'s'
  1677  00F5FD  70                 	db	112	;'p'
  1678  00F5FE  65                 	db	101	;'e'
  1679  00F5FF  63                 	db	99	;'c'
  1680  00F600  69                 	db	105	;'i'
  1681  00F601  66                 	db	102	;'f'
  1682  00F602  69                 	db	105	;'i'
  1683  00F603  65                 	db	101	;'e'
  1684  00F604  64                 	db	100	;'d'
  1685  00F605  20                 	db	32
  1686  00F606  63                 	db	99	;'c'
  1687  00F607  6F                 	db	111	;'o'
  1688  00F608  6D                 	db	109	;'m'
  1689  00F609  6D                 	db	109	;'m'
  1690  00F60A  61                 	db	97	;'a'
  1691  00F60B  6E                 	db	110	;'n'
  1692  00F60C  64                 	db	100	;'d'
  1693  00F60D  00                 	db	0
  1694  00F60E                     STR_50:
  1695  00F60E  52                 	db	82	;'R'
  1696  00F60F  65                 	db	101	;'e'
  1697  00F610  6D                 	db	109	;'m'
  1698  00F611  6F                 	db	111	;'o'
  1699  00F612  74                 	db	116	;'t'
  1700  00F613  65                 	db	101	;'e'
  1701  00F614  42                 	db	66	;'B'
  1702  00F615  75                 	db	117	;'u'
  1703  00F616  74                 	db	116	;'t'
  1704  00F617  74                 	db	116	;'t'
  1705  00F618  6F                 	db	111	;'o'
  1706  00F619  6E                 	db	110	;'n'
  1707  00F61A  25                 	db	37
  1708  00F61B  6C                 	db	108	;'l'
  1709  00F61C  64                 	db	100	;'d'
  1710  00F61D  20                 	db	32
  1711  00F61E  6E                 	db	110	;'n'
  1712  00F61F  6F                 	db	111	;'o'
  1713  00F620  77                 	db	119	;'w'
  1714  00F621  20                 	db	32
  1715  00F622  74                 	db	116	;'t'
  1716  00F623  72                 	db	114	;'r'
  1717  00F624  61                 	db	97	;'a'
  1718  00F625  6E                 	db	110	;'n'
  1719  00F626  73                 	db	115	;'s'
  1720  00F627  6D                 	db	109	;'m'
  1721  00F628  69                 	db	105	;'i'
  1722  00F629  74                 	db	116	;'t'
  1723  00F62A  73                 	db	115	;'s'
  1724  00F62B  20                 	db	32
  1725  00F62C  4E                 	db	78	;'N'
  1726  00F62D  45                 	db	69	;'E'
  1727  00F62E  43                 	db	67	;'C'
  1728  00F62F  20                 	db	32
  1729  00F630  63                 	db	99	;'c'
  1730  00F631  6F                 	db	111	;'o'
  1731  00F632  64                 	db	100	;'d'
  1732  00F633  65                 	db	101	;'e'
  1733  00F634  20                 	db	32
  1734  00F635  30                 	db	48	;'0'
  1735  00F636  78                 	db	120	;'x'
  1736  00F637  25                 	db	37
  1737  00F638  6C                 	db	108	;'l'
  1738  00F639  58                 	db	88	;'X'
  1739  00F63A  20                 	db	32
  1740  00F63B  00                 	db	0
  1741  00F63C                     STR_127:
  1742  00F63C  43                 	db	67	;'C'
  1743  00F63D  6C                 	db	108	;'l'
  1744  00F63E  65                 	db	101	;'e'
  1745  00F63F  61                 	db	97	;'a'
  1746  00F640  72                 	db	114	;'r'
  1747  00F641  73                 	db	115	;'s'
  1748  00F642  20                 	db	32
  1749  00F643  73                 	db	115	;'s'
  1750  00F644  61                 	db	97	;'a'
  1751  00F645  76                 	db	118	;'v'
  1752  00F646  65                 	db	101	;'e'
  1753  00F647  64                 	db	100	;'d'
  1754  00F648  20                 	db	32
  1755  00F649  42                 	db	66	;'B'
  1756  00F64A  75                 	db	117	;'u'
  1757  00F64B  74                 	db	116	;'t'
  1758  00F64C  74                 	db	116	;'t'
  1759  00F64D  6F                 	db	111	;'o'
  1760  00F64E  6E                 	db	110	;'n'
  1761  00F64F  20                 	db	32
  1762  00F650  66                 	db	102	;'f'
  1763  00F651  6F                 	db	111	;'o'
  1764  00F652  72                 	db	114	;'r'
  1765  00F653  20                 	db	32
  1766  00F654  52                 	db	82	;'R'
  1767  00F655  46                 	db	70	;'F'
  1768  00F656  20                 	db	32
  1769  00F657  43                 	db	67	;'C'
  1770  00F658  6F                 	db	111	;'o'
  1771  00F659  6E                 	db	110	;'n'
  1772  00F65A  66                 	db	102	;'f'
  1773  00F65B  69                 	db	105	;'i'
  1774  00F65C  67                 	db	103	;'g'
  1775  00F65D  20                 	db	32
  1776  00F65E  32                 	db	50	;'2'
  1777  00F65F  20                 	db	32
  1778  00F660  63                 	db	99	;'c'
  1779  00F661  68                 	db	104	;'h'
  1780  00F662  61                 	db	97	;'a'
  1781  00F663  6E                 	db	110	;'n'
  1782  00F664  6E                 	db	110	;'n'
  1783  00F665  65                 	db	101	;'e'
  1784  00F666  6C                 	db	108	;'l'
  1785  00F667  20                 	db	32
  1786  00F668  42                 	db	66	;'B'
  1787  00F669  00                 	db	0
  1788  00F66A                     STR_121:
  1789  00F66A  43                 	db	67	;'C'
  1790  00F66B  6C                 	db	108	;'l'
  1791  00F66C  65                 	db	101	;'e'
  1792  00F66D  61                 	db	97	;'a'
  1793  00F66E  72                 	db	114	;'r'
  1794  00F66F  73                 	db	115	;'s'
  1795  00F670  20                 	db	32
  1796  00F671  73                 	db	115	;'s'
  1797  00F672  61                 	db	97	;'a'
  1798  00F673  76                 	db	118	;'v'
  1799  00F674  65                 	db	101	;'e'
  1800  00F675  64                 	db	100	;'d'
  1801  00F676  20                 	db	32
  1802  00F677  42                 	db	66	;'B'
  1803  00F678  75                 	db	117	;'u'
  1804  00F679  74                 	db	116	;'t'
  1805  00F67A  74                 	db	116	;'t'
  1806  00F67B  6F                 	db	111	;'o'
  1807  00F67C  6E                 	db	110	;'n'
  1808  00F67D  20                 	db	32
  1809  00F67E  66                 	db	102	;'f'
  1810  00F67F  6F                 	db	111	;'o'
  1811  00F680  72                 	db	114	;'r'
  1812  00F681  20                 	db	32
  1813  00F682  52                 	db	82	;'R'
  1814  00F683  46                 	db	70	;'F'
  1815  00F684  20                 	db	32
  1816  00F685  43                 	db	67	;'C'
  1817  00F686  6F                 	db	111	;'o'
  1818  00F687  6E                 	db	110	;'n'
  1819  00F688  66                 	db	102	;'f'
  1820  00F689  69                 	db	105	;'i'
  1821  00F68A  67                 	db	103	;'g'
  1822  00F68B  20                 	db	32
  1823  00F68C  31                 	db	49	;'1'
  1824  00F68D  20                 	db	32
  1825  00F68E  63                 	db	99	;'c'
  1826  00F68F  68                 	db	104	;'h'
  1827  00F690  61                 	db	97	;'a'
  1828  00F691  6E                 	db	110	;'n'
  1829  00F692  6E                 	db	110	;'n'
  1830  00F693  65                 	db	101	;'e'
  1831  00F694  6C                 	db	108	;'l'
  1832  00F695  20                 	db	32
  1833  00F696  44                 	db	68	;'D'
  1834  00F697  00                 	db	0
  1835  00F698                     STR_129:
  1836  00F698  43                 	db	67	;'C'
  1837  00F699  6C                 	db	108	;'l'
  1838  00F69A  65                 	db	101	;'e'
  1839  00F69B  61                 	db	97	;'a'
  1840  00F69C  72                 	db	114	;'r'
  1841  00F69D  73                 	db	115	;'s'
  1842  00F69E  20                 	db	32
  1843  00F69F  73                 	db	115	;'s'
  1844  00F6A0  61                 	db	97	;'a'
  1845  00F6A1  76                 	db	118	;'v'
  1846  00F6A2  65                 	db	101	;'e'
  1847  00F6A3  64                 	db	100	;'d'
  1848  00F6A4  20                 	db	32
  1849  00F6A5  42                 	db	66	;'B'
  1850  00F6A6  75                 	db	117	;'u'
  1851  00F6A7  74                 	db	116	;'t'
  1852  00F6A8  74                 	db	116	;'t'
  1853  00F6A9  6F                 	db	111	;'o'
  1854  00F6AA  6E                 	db	110	;'n'
  1855  00F6AB  20                 	db	32
  1856  00F6AC  66                 	db	102	;'f'
  1857  00F6AD  6F                 	db	111	;'o'
  1858  00F6AE  72                 	db	114	;'r'
  1859  00F6AF  20                 	db	32
  1860  00F6B0  52                 	db	82	;'R'
  1861  00F6B1  46                 	db	70	;'F'
  1862  00F6B2  20                 	db	32
  1863  00F6B3  43                 	db	67	;'C'
  1864  00F6B4  6F                 	db	111	;'o'
  1865  00F6B5  6E                 	db	110	;'n'
  1866  00F6B6  66                 	db	102	;'f'
  1867  00F6B7  69                 	db	105	;'i'
  1868  00F6B8  67                 	db	103	;'g'
  1869  00F6B9  20                 	db	32
  1870  00F6BA  32                 	db	50	;'2'
  1871  00F6BB  20                 	db	32
  1872  00F6BC  63                 	db	99	;'c'
  1873  00F6BD  68                 	db	104	;'h'
  1874  00F6BE  61                 	db	97	;'a'
  1875  00F6BF  6E                 	db	110	;'n'
  1876  00F6C0  6E                 	db	110	;'n'
  1877  00F6C1  65                 	db	101	;'e'
  1878  00F6C2  6C                 	db	108	;'l'
  1879  00F6C3  20                 	db	32
  1880  00F6C4  44                 	db	68	;'D'
  1881  00F6C5  00                 	db	0
  1882  00F6C6                     STR_123:
  1883  00F6C6  43                 	db	67	;'C'
  1884  00F6C7  6C                 	db	108	;'l'
  1885  00F6C8  65                 	db	101	;'e'
  1886  00F6C9  61                 	db	97	;'a'
  1887  00F6CA  72                 	db	114	;'r'
  1888  00F6CB  73                 	db	115	;'s'
  1889  00F6CC  20                 	db	32
  1890  00F6CD  73                 	db	115	;'s'
  1891  00F6CE  61                 	db	97	;'a'
  1892  00F6CF  76                 	db	118	;'v'
  1893  00F6D0  65                 	db	101	;'e'
  1894  00F6D1  64                 	db	100	;'d'
  1895  00F6D2  20                 	db	32
  1896  00F6D3  42                 	db	66	;'B'
  1897  00F6D4  75                 	db	117	;'u'
  1898  00F6D5  74                 	db	116	;'t'
  1899  00F6D6  74                 	db	116	;'t'
  1900  00F6D7  6F                 	db	111	;'o'
  1901  00F6D8  6E                 	db	110	;'n'
  1902  00F6D9  20                 	db	32
  1903  00F6DA  66                 	db	102	;'f'
  1904  00F6DB  6F                 	db	111	;'o'
  1905  00F6DC  72                 	db	114	;'r'
  1906  00F6DD  20                 	db	32
  1907  00F6DE  52                 	db	82	;'R'
  1908  00F6DF  46                 	db	70	;'F'
  1909  00F6E0  20                 	db	32
  1910  00F6E1  43                 	db	67	;'C'
  1911  00F6E2  6F                 	db	111	;'o'
  1912  00F6E3  6E                 	db	110	;'n'
  1913  00F6E4  66                 	db	102	;'f'
  1914  00F6E5  69                 	db	105	;'i'
  1915  00F6E6  67                 	db	103	;'g'
  1916  00F6E7  20                 	db	32
  1917  00F6E8  31                 	db	49	;'1'
  1918  00F6E9  20                 	db	32
  1919  00F6EA  63                 	db	99	;'c'
  1920  00F6EB  68                 	db	104	;'h'
  1921  00F6EC  61                 	db	97	;'a'
  1922  00F6ED  6E                 	db	110	;'n'
  1923  00F6EE  6E                 	db	110	;'n'
  1924  00F6EF  65                 	db	101	;'e'
  1925  00F6F0  6C                 	db	108	;'l'
  1926  00F6F1  20                 	db	32
  1927  00F6F2  45                 	db	69	;'E'
  1928  00F6F3  00                 	db	0
  1929  00F6F4                     STR_125:
  1930  00F6F4  43                 	db	67	;'C'
  1931  00F6F5  6C                 	db	108	;'l'
  1932  00F6F6  65                 	db	101	;'e'
  1933  00F6F7  61                 	db	97	;'a'
  1934  00F6F8  72                 	db	114	;'r'
  1935  00F6F9  73                 	db	115	;'s'
  1936  00F6FA  20                 	db	32
  1937  00F6FB  73                 	db	115	;'s'
  1938  00F6FC  61                 	db	97	;'a'
  1939  00F6FD  76                 	db	118	;'v'
  1940  00F6FE  65                 	db	101	;'e'
  1941  00F6FF  64                 	db	100	;'d'
  1942  00F700  20                 	db	32
  1943  00F701  42                 	db	66	;'B'
  1944  00F702  75                 	db	117	;'u'
  1945  00F703  74                 	db	116	;'t'
  1946  00F704  74                 	db	116	;'t'
  1947  00F705  6F                 	db	111	;'o'
  1948  00F706  6E                 	db	110	;'n'
  1949  00F707  20                 	db	32
  1950  00F708  66                 	db	102	;'f'
  1951  00F709  6F                 	db	111	;'o'
  1952  00F70A  72                 	db	114	;'r'
  1953  00F70B  20                 	db	32
  1954  00F70C  52                 	db	82	;'R'
  1955  00F70D  46                 	db	70	;'F'
  1956  00F70E  20                 	db	32
  1957  00F70F  43                 	db	67	;'C'
  1958  00F710  6F                 	db	111	;'o'
  1959  00F711  6E                 	db	110	;'n'
  1960  00F712  66                 	db	102	;'f'
  1961  00F713  69                 	db	105	;'i'
  1962  00F714  67                 	db	103	;'g'
  1963  00F715  20                 	db	32
  1964  00F716  31                 	db	49	;'1'
  1965  00F717  20                 	db	32
  1966  00F718  63                 	db	99	;'c'
  1967  00F719  68                 	db	104	;'h'
  1968  00F71A  61                 	db	97	;'a'
  1969  00F71B  6E                 	db	110	;'n'
  1970  00F71C  6E                 	db	110	;'n'
  1971  00F71D  65                 	db	101	;'e'
  1972  00F71E  6C                 	db	108	;'l'
  1973  00F71F  20                 	db	32
  1974  00F720  46                 	db	70	;'F'
  1975  00F721  00                 	db	0
  1976  00F722                     STR_131:
  1977  00F722  43                 	db	67	;'C'
  1978  00F723  6C                 	db	108	;'l'
  1979  00F724  65                 	db	101	;'e'
  1980  00F725  61                 	db	97	;'a'
  1981  00F726  72                 	db	114	;'r'
  1982  00F727  73                 	db	115	;'s'
  1983  00F728  20                 	db	32
  1984  00F729  73                 	db	115	;'s'
  1985  00F72A  61                 	db	97	;'a'
  1986  00F72B  76                 	db	118	;'v'
  1987  00F72C  65                 	db	101	;'e'
  1988  00F72D  64                 	db	100	;'d'
  1989  00F72E  20                 	db	32
  1990  00F72F  42                 	db	66	;'B'
  1991  00F730  75                 	db	117	;'u'
  1992  00F731  74                 	db	116	;'t'
  1993  00F732  74                 	db	116	;'t'
  1994  00F733  6F                 	db	111	;'o'
  1995  00F734  6E                 	db	110	;'n'
  1996  00F735  20                 	db	32
  1997  00F736  66                 	db	102	;'f'
  1998  00F737  6F                 	db	111	;'o'
  1999  00F738  72                 	db	114	;'r'
  2000  00F739  20                 	db	32
  2001  00F73A  52                 	db	82	;'R'
  2002  00F73B  46                 	db	70	;'F'
  2003  00F73C  20                 	db	32
  2004  00F73D  43                 	db	67	;'C'
  2005  00F73E  6F                 	db	111	;'o'
  2006  00F73F  6E                 	db	110	;'n'
  2007  00F740  66                 	db	102	;'f'
  2008  00F741  69                 	db	105	;'i'
  2009  00F742  67                 	db	103	;'g'
  2010  00F743  20                 	db	32
  2011  00F744  32                 	db	50	;'2'
  2012  00F745  20                 	db	32
  2013  00F746  63                 	db	99	;'c'
  2014  00F747  68                 	db	104	;'h'
  2015  00F748  61                 	db	97	;'a'
  2016  00F749  6E                 	db	110	;'n'
  2017  00F74A  6E                 	db	110	;'n'
  2018  00F74B  65                 	db	101	;'e'
  2019  00F74C  6C                 	db	108	;'l'
  2020  00F74D  20                 	db	32
  2021  00F74E  48                 	db	72	;'H'
  2022  00F74F  00                 	db	0
  2023  00F750                     STR_72:
  2024  00F750  45                 	db	69	;'E'
  2025  00F751  72                 	db	114	;'r'
  2026  00F752  72                 	db	114	;'r'
  2027  00F753  6F                 	db	111	;'o'
  2028  00F754  72                 	db	114	;'r'
  2029  00F755  3A                 	db	58	;':'
  2030  00F756  20                 	db	32
  2031  00F757  4E                 	db	78	;'N'
  2032  00F758  45                 	db	69	;'E'
  2033  00F759  43                 	db	67	;'C'
  2034  00F75A  20                 	db	32
  2035  00F75B  63                 	db	99	;'c'
  2036  00F75C  6F                 	db	111	;'o'
  2037  00F75D  64                 	db	100	;'d'
  2038  00F75E  65                 	db	101	;'e'
  2039  00F75F  20                 	db	32
  2040  00F760  61                 	db	97	;'a'
  2041  00F761  6C                 	db	108	;'l'
  2042  00F762  72                 	db	114	;'r'
  2043  00F763  65                 	db	101	;'e'
  2044  00F764  61                 	db	97	;'a'
  2045  00F765  64                 	db	100	;'d'
  2046  00F766  79                 	db	121	;'y'
  2047  00F767  20                 	db	32
  2048  00F768  73                 	db	115	;'s'
  2049  00F769  61                 	db	97	;'a'
  2050  00F76A  76                 	db	118	;'v'
  2051  00F76B  65                 	db	101	;'e'
  2052  00F76C  64                 	db	100	;'d'
  2053  00F76D  20                 	db	32
  2054  00F76E  74                 	db	116	;'t'
  2055  00F76F  6F                 	db	111	;'o'
  2056  00F770  20                 	db	32
  2057  00F771  74                 	db	116	;'t'
  2058  00F772  68                 	db	104	;'h'
  2059  00F773  69                 	db	105	;'i'
  2060  00F774  73                 	db	115	;'s'
  2061  00F775  20                 	db	32
  2062  00F776  52                 	db	82	;'R'
  2063  00F777  46                 	db	70	;'F'
  2064  00F778  20                 	db	32
  2065  00F779  63                 	db	99	;'c'
  2066  00F77A  6F                 	db	111	;'o'
  2067  00F77B  64                 	db	100	;'d'
  2068  00F77C  65                 	db	101	;'e'
  2069  00F77D  00                 	db	0
  2070  00F77E                     STR_48:
  2071  00F77E  4E                 	db	78	;'N'
  2072  00F77F  45                 	db	69	;'E'
  2073  00F780  43                 	db	67	;'C'
  2074  00F781  20                 	db	32
  2075  00F782  43                 	db	67	;'C'
  2076  00F783  6F                 	db	111	;'o'
  2077  00F784  64                 	db	100	;'d'
  2078  00F785  65                 	db	101	;'e'
  2079  00F786  20                 	db	32
  2080  00F787  61                 	db	97	;'a'
  2081  00F788  64                 	db	100	;'d'
  2082  00F789  64                 	db	100	;'d'
  2083  00F78A  72                 	db	114	;'r'
  2084  00F78B  65                 	db	101	;'e'
  2085  00F78C  73                 	db	115	;'s'
  2086  00F78D  73                 	db	115	;'s'
  2087  00F78E  3A                 	db	58	;':'
  2088  00F78F  20                 	db	32
  2089  00F790  30                 	db	48	;'0'
  2090  00F791  78                 	db	120	;'x'
  2091  00F792  25                 	db	37
  2092  00F793  30                 	db	48	;'0'
  2093  00F794  32                 	db	50	;'2'
  2094  00F795  58                 	db	88	;'X'
  2095  00F796  20                 	db	32
  2096  00F797  2C                 	db	44
  2097  00F798  20                 	db	32
  2098  00F799  63                 	db	99	;'c'
  2099  00F79A  6F                 	db	111	;'o'
  2100  00F79B  6D                 	db	109	;'m'
  2101  00F79C  6D                 	db	109	;'m'
  2102  00F79D  61                 	db	97	;'a'
  2103  00F79E  6E                 	db	110	;'n'
  2104  00F79F  64                 	db	100	;'d'
  2105  00F7A0  3A                 	db	58	;':'
  2106  00F7A1  20                 	db	32
  2107  00F7A2  30                 	db	48	;'0'
  2108  00F7A3  78                 	db	120	;'x'
  2109  00F7A4  25                 	db	37
  2110  00F7A5  30                 	db	48	;'0'
  2111  00F7A6  32                 	db	50	;'2'
  2112  00F7A7  58                 	db	88	;'X'
  2113  00F7A8  20                 	db	32
  2114  00F7A9  00                 	db	0
  2115  00F7AA                     STR_76:
  2116  00F7AA  52                 	db	82	;'R'
  2117  00F7AB  46                 	db	70	;'F'
  2118  00F7AC  20                 	db	32
  2119  00F7AD  63                 	db	99	;'c'
  2120  00F7AE  6F                 	db	111	;'o'
  2121  00F7AF  6E                 	db	110	;'n'
  2122  00F7B0  66                 	db	102	;'f'
  2123  00F7B1  69                 	db	105	;'i'
  2124  00F7B2  67                 	db	103	;'g'
  2125  00F7B3  20                 	db	32
  2126  00F7B4  25                 	db	37
  2127  00F7B5  64                 	db	100	;'d'
  2128  00F7B6  20                 	db	32
  2129  00F7B7  63                 	db	99	;'c'
  2130  00F7B8  68                 	db	104	;'h'
  2131  00F7B9  61                 	db	97	;'a'
  2132  00F7BA  6E                 	db	110	;'n'
  2133  00F7BB  6E                 	db	110	;'n'
  2134  00F7BC  65                 	db	101	;'e'
  2135  00F7BD  6C                 	db	108	;'l'
  2136  00F7BE  20                 	db	32
  2137  00F7BF  25                 	db	37
  2138  00F7C0  63                 	db	99	;'c'
  2139  00F7C1  20                 	db	32
  2140  00F7C2  73                 	db	115	;'s'
  2141  00F7C3  75                 	db	117	;'u'
  2142  00F7C4  63                 	db	99	;'c'
  2143  00F7C5  63                 	db	99	;'c'
  2144  00F7C6  65                 	db	101	;'e'
  2145  00F7C7  73                 	db	115	;'s'
  2146  00F7C8  73                 	db	115	;'s'
  2147  00F7C9  66                 	db	102	;'f'
  2148  00F7CA  75                 	db	117	;'u'
  2149  00F7CB  6C                 	db	108	;'l'
  2150  00F7CC  6C                 	db	108	;'l'
  2151  00F7CD  79                 	db	121	;'y'
  2152  00F7CE  20                 	db	32
  2153  00F7CF  65                 	db	101	;'e'
  2154  00F7D0  72                 	db	114	;'r'
  2155  00F7D1  61                 	db	97	;'a'
  2156  00F7D2  73                 	db	115	;'s'
  2157  00F7D3  65                 	db	101	;'e'
  2158  00F7D4  64                 	db	100	;'d'
  2159  00F7D5  00                 	db	0
  2160  00F7D6                     STR_77:
  2161  00F7D6  45                 	db	69	;'E'
  2162  00F7D7  72                 	db	114	;'r'
  2163  00F7D8  72                 	db	114	;'r'
  2164  00F7D9  6F                 	db	111	;'o'
  2165  00F7DA  72                 	db	114	;'r'
  2166  00F7DB  3A                 	db	58	;':'
  2167  00F7DC  20                 	db	32
  2168  00F7DD  52                 	db	82	;'R'
  2169  00F7DE  46                 	db	70	;'F'
  2170  00F7DF  20                 	db	32
  2171  00F7E0  63                 	db	99	;'c'
  2172  00F7E1  68                 	db	104	;'h'
  2173  00F7E2  61                 	db	97	;'a'
  2174  00F7E3  6E                 	db	110	;'n'
  2175  00F7E4  6E                 	db	110	;'n'
  2176  00F7E5  65                 	db	101	;'e'
  2177  00F7E6  6C                 	db	108	;'l'
  2178  00F7E7  20                 	db	32
  2179  00F7E8  6E                 	db	110	;'n'
  2180  00F7E9  65                 	db	101	;'e'
  2181  00F7EA  65                 	db	101	;'e'
  2182  00F7EB  64                 	db	100	;'d'
  2183  00F7EC  73                 	db	115	;'s'
  2184  00F7ED  20                 	db	32
  2185  00F7EE  74                 	db	116	;'t'
  2186  00F7EF  6F                 	db	111	;'o'
  2187  00F7F0  20                 	db	32
  2188  00F7F1  62                 	db	98	;'b'
  2189  00F7F2  65                 	db	101	;'e'
  2190  00F7F3  20                 	db	32
  2191  00F7F4  6F                 	db	111	;'o'
  2192  00F7F5  6E                 	db	110	;'n'
  2193  00F7F6  65                 	db	101	;'e'
  2194  00F7F7  20                 	db	32
  2195  00F7F8  63                 	db	99	;'c'
  2196  00F7F9  68                 	db	104	;'h'
  2197  00F7FA  61                 	db	97	;'a'
  2198  00F7FB  72                 	db	114	;'r'
  2199  00F7FC  61                 	db	97	;'a'
  2200  00F7FD  63                 	db	99	;'c'
  2201  00F7FE  74                 	db	116	;'t'
  2202  00F7FF  65                 	db	101	;'e'
  2203  00F800  72                 	db	114	;'r'
  2204  00F801  00                 	db	0
  2205  00F802                     STR_71:
  2206  00F802  45                 	db	69	;'E'
  2207  00F803  72                 	db	114	;'r'
  2208  00F804  72                 	db	114	;'r'
  2209  00F805  6F                 	db	111	;'o'
  2210  00F806  72                 	db	114	;'r'
  2211  00F807  3A                 	db	58	;':'
  2212  00F808  20                 	db	32
  2213  00F809  4E                 	db	78	;'N'
  2214  00F80A  6F                 	db	111	;'o'
  2215  00F80B  20                 	db	32
  2216  00F80C  73                 	db	115	;'s'
  2217  00F80D  70                 	db	112	;'p'
  2218  00F80E  61                 	db	97	;'a'
  2219  00F80F  63                 	db	99	;'c'
  2220  00F810  65                 	db	101	;'e'
  2221  00F811  20                 	db	32
  2222  00F812  61                 	db	97	;'a'
  2223  00F813  76                 	db	118	;'v'
  2224  00F814  61                 	db	97	;'a'
  2225  00F815  69                 	db	105	;'i'
  2226  00F816  6C                 	db	108	;'l'
  2227  00F817  61                 	db	97	;'a'
  2228  00F818  62                 	db	98	;'b'
  2229  00F819  6C                 	db	108	;'l'
  2230  00F81A  65                 	db	101	;'e'
  2231  00F81B  20                 	db	32
  2232  00F81C  74                 	db	116	;'t'
  2233  00F81D  6F                 	db	111	;'o'
  2234  00F81E  20                 	db	32
  2235  00F81F  74                 	db	116	;'t'
  2236  00F820  68                 	db	104	;'h'
  2237  00F821  69                 	db	105	;'i'
  2238  00F822  73                 	db	115	;'s'
  2239  00F823  20                 	db	32
  2240  00F824  52                 	db	82	;'R'
  2241  00F825  46                 	db	70	;'F'
  2242  00F826  20                 	db	32
  2243  00F827  63                 	db	99	;'c'
  2244  00F828  6F                 	db	111	;'o'
  2245  00F829  64                 	db	100	;'d'
  2246  00F82A  65                 	db	101	;'e'
  2247  00F82B  00                 	db	0
  2248  00F82C                     STR_133:
  2249  00F82C  4E                 	db	78	;'N'
  2250  00F82D  45                 	db	69	;'E'
  2251  00F82E  43                 	db	67	;'C'
  2252  00F82F  20                 	db	32
  2253  00F830  64                 	db	100	;'d'
  2254  00F831  65                 	db	101	;'e'
  2255  00F832  73                 	db	115	;'s'
  2256  00F833  63                 	db	99	;'c'
  2257  00F834  72                 	db	114	;'r'
  2258  00F835  69                 	db	105	;'i'
  2259  00F836  70                 	db	112	;'p'
  2260  00F837  74                 	db	116	;'t'
  2261  00F838  69                 	db	105	;'i'
  2262  00F839  6F                 	db	111	;'o'
  2263  00F83A  6E                 	db	110	;'n'
  2264  00F83B  20                 	db	32
  2265  00F83C  66                 	db	102	;'f'
  2266  00F83D  6F                 	db	111	;'o'
  2267  00F83E  72                 	db	114	;'r'
  2268  00F83F  20                 	db	32
  2269  00F840  41                 	db	65	;'A'
  2270  00F841  72                 	db	114	;'r'
  2271  00F842  62                 	db	98	;'b'
  2272  00F843  69                 	db	105	;'i'
  2273  00F844  74                 	db	116	;'t'
  2274  00F845  72                 	db	114	;'r'
  2275  00F846  61                 	db	97	;'a'
  2276  00F847  72                 	db	114	;'r'
  2277  00F848  79                 	db	121	;'y'
  2278  00F849  20                 	db	32
  2279  00F84A  63                 	db	99	;'c'
  2280  00F84B  6F                 	db	111	;'o'
  2281  00F84C  64                 	db	100	;'d'
  2282  00F84D  65                 	db	101	;'e'
  2283  00F84E  20                 	db	32
  2284  00F84F  73                 	db	115	;'s'
  2285  00F850  65                 	db	101	;'e'
  2286  00F851  6E                 	db	110	;'n'
  2287  00F852  64                 	db	100	;'d'
  2288  00F853  00                 	db	0
  2289  00F854                     STR_63:
  2290  00F854  45                 	db	69	;'E'
  2291  00F855  72                 	db	114	;'r'
  2292  00F856  72                 	db	114	;'r'
  2293  00F857  6F                 	db	111	;'o'
  2294  00F858  72                 	db	114	;'r'
  2295  00F859  3A                 	db	58	;':'
  2296  00F85A  20                 	db	32
  2297  00F85B  4E                 	db	78	;'N'
  2298  00F85C  6F                 	db	111	;'o'
  2299  00F85D  20                 	db	32
  2300  00F85E  52                 	db	82	;'R'
  2301  00F85F  46                 	db	70	;'F'
  2302  00F860  20                 	db	32
  2303  00F861  63                 	db	99	;'c'
  2304  00F862  6F                 	db	111	;'o'
  2305  00F863  6E                 	db	110	;'n'
  2306  00F864  66                 	db	102	;'f'
  2307  00F865  69                 	db	105	;'i'
  2308  00F866  67                 	db	103	;'g'
  2309  00F867  75                 	db	117	;'u'
  2310  00F868  72                 	db	114	;'r'
  2311  00F869  61                 	db	97	;'a'
  2312  00F86A  74                 	db	116	;'t'
  2313  00F86B  69                 	db	105	;'i'
  2314  00F86C  6F                 	db	111	;'o'
  2315  00F86D  6E                 	db	110	;'n'
  2316  00F86E  20                 	db	32
  2317  00F86F  73                 	db	115	;'s'
  2318  00F870  70                 	db	112	;'p'
  2319  00F871  65                 	db	101	;'e'
  2320  00F872  63                 	db	99	;'c'
  2321  00F873  69                 	db	105	;'i'
  2322  00F874  66                 	db	102	;'f'
  2323  00F875  69                 	db	105	;'i'
  2324  00F876  65                 	db	101	;'e'
  2325  00F877  64                 	db	100	;'d'
  2326  00F878  00                 	db	0
  2327  00F879                     STR_65:
  2328  00F879  45                 	db	69	;'E'
  2329  00F87A  72                 	db	114	;'r'
  2330  00F87B  72                 	db	114	;'r'
  2331  00F87C  6F                 	db	111	;'o'
  2332  00F87D  72                 	db	114	;'r'
  2333  00F87E  3A                 	db	58	;':'
  2334  00F87F  20                 	db	32
  2335  00F880  52                 	db	82	;'R'
  2336  00F881  46                 	db	70	;'F'
  2337  00F882  20                 	db	32
  2338  00F883  63                 	db	99	;'c'
  2339  00F884  6F                 	db	111	;'o'
  2340  00F885  6E                 	db	110	;'n'
  2341  00F886  66                 	db	102	;'f'
  2342  00F887  69                 	db	105	;'i'
  2343  00F888  67                 	db	103	;'g'
  2344  00F889  75                 	db	117	;'u'
  2345  00F88A  72                 	db	114	;'r'
  2346  00F88B  61                 	db	97	;'a'
  2347  00F88C  74                 	db	116	;'t'
  2348  00F88D  69                 	db	105	;'i'
  2349  00F88E  6F                 	db	111	;'o'
  2350  00F88F  6E                 	db	110	;'n'
  2351  00F890  20                 	db	32
  2352  00F891  6F                 	db	111	;'o'
  2353  00F892  75                 	db	117	;'u'
  2354  00F893  74                 	db	116	;'t'
  2355  00F894  20                 	db	32
  2356  00F895  6F                 	db	111	;'o'
  2357  00F896  66                 	db	102	;'f'
  2358  00F897  20                 	db	32
  2359  00F898  72                 	db	114	;'r'
  2360  00F899  61                 	db	97	;'a'
  2361  00F89A  6E                 	db	110	;'n'
  2362  00F89B  67                 	db	103	;'g'
  2363  00F89C  65                 	db	101	;'e'
  2364  00F89D  00                 	db	0
  2365  00F89E                     STR_52:
  2366  00F89E  45                 	db	69	;'E'
  2367  00F89F  72                 	db	114	;'r'
  2368  00F8A0  72                 	db	114	;'r'
  2369  00F8A1  6F                 	db	111	;'o'
  2370  00F8A2  72                 	db	114	;'r'
  2371  00F8A3  3A                 	db	58	;':'
  2372  00F8A4  20                 	db	32
  2373  00F8A5  52                 	db	82	;'R'
  2374  00F8A6  65                 	db	101	;'e'
  2375  00F8A7  6D                 	db	109	;'m'
  2376  00F8A8  6F                 	db	111	;'o'
  2377  00F8A9  74                 	db	116	;'t'
  2378  00F8AA  65                 	db	101	;'e'
  2379  00F8AB  20                 	db	32
  2380  00F8AC  62                 	db	98	;'b'
  2381  00F8AD  75                 	db	117	;'u'
  2382  00F8AE  74                 	db	116	;'t'
  2383  00F8AF  74                 	db	116	;'t'
  2384  00F8B0  6F                 	db	111	;'o'
  2385  00F8B1  6E                 	db	110	;'n'
  2386  00F8B2  20                 	db	32
  2387  00F8B3  6E                 	db	110	;'n'
  2388  00F8B4  75                 	db	117	;'u'
  2389  00F8B5  6D                 	db	109	;'m'
  2390  00F8B6  62                 	db	98	;'b'
  2391  00F8B7  65                 	db	101	;'e'
  2392  00F8B8  72                 	db	114	;'r'
  2393  00F8B9  20                 	db	32
  2394  00F8BA  74                 	db	116	;'t'
  2395  00F8BB  6F                 	db	111	;'o'
  2396  00F8BC  6F                 	db	111	;'o'
  2397  00F8BD  20                 	db	32
  2398  00F8BE  68                 	db	104	;'h'
  2399  00F8BF  69                 	db	105	;'i'
  2400  00F8C0  67                 	db	103	;'g'
  2401  00F8C1  68                 	db	104	;'h'
  2402  00F8C2  00                 	db	0
  2403  00F8C3                     STR_150:
  2404  00F8C3  45                 	db	69	;'E'
  2405  00F8C4  72                 	db	114	;'r'
  2406  00F8C5  72                 	db	114	;'r'
  2407  00F8C6  6F                 	db	111	;'o'
  2408  00F8C7  72                 	db	114	;'r'
  2409  00F8C8  3A                 	db	58	;':'
  2410  00F8C9  20                 	db	32
  2411  00F8CA  4E                 	db	78	;'N'
  2412  00F8CB  6F                 	db	111	;'o'
  2413  00F8CC  20                 	db	32
  2414  00F8CD  72                 	db	114	;'r'
  2415  00F8CE  65                 	db	101	;'e'
  2416  00F8CF  6D                 	db	109	;'m'
  2417  00F8D0  6F                 	db	111	;'o'
  2418  00F8D1  74                 	db	116	;'t'
  2419  00F8D2  65                 	db	101	;'e'
  2420  00F8D3  20                 	db	32
  2421  00F8D4  62                 	db	98	;'b'
  2422  00F8D5  75                 	db	117	;'u'
  2423  00F8D6  74                 	db	116	;'t'
  2424  00F8D7  74                 	db	116	;'t'
  2425  00F8D8  6F                 	db	111	;'o'
  2426  00F8D9  6E                 	db	110	;'n'
  2427  00F8DA  20                 	db	32
  2428  00F8DB  77                 	db	119	;'w'
  2429  00F8DC  61                 	db	97	;'a'
  2430  00F8DD  73                 	db	115	;'s'
  2431  00F8DE  20                 	db	32
  2432  00F8DF  70                 	db	112	;'p'
  2433  00F8E0  72                 	db	114	;'r'
  2434  00F8E1  65                 	db	101	;'e'
  2435  00F8E2  73                 	db	115	;'s'
  2436  00F8E3  73                 	db	115	;'s'
  2437  00F8E4  65                 	db	101	;'e'
  2438  00F8E5  64                 	db	100	;'d'
  2439  00F8E6  00                 	db	0
  2440  00F8E7                     STR_53:
  2441  00F8E7  45                 	db	69	;'E'
  2442  00F8E8  72                 	db	114	;'r'
  2443  00F8E9  72                 	db	114	;'r'
  2444  00F8EA  6F                 	db	111	;'o'
  2445  00F8EB  72                 	db	114	;'r'
  2446  00F8EC  3A                 	db	58	;':'
  2447  00F8ED  20                 	db	32
  2448  00F8EE  52                 	db	82	;'R'
  2449  00F8EF  65                 	db	101	;'e'
  2450  00F8F0  6D                 	db	109	;'m'
  2451  00F8F1  6F                 	db	111	;'o'
  2452  00F8F2  74                 	db	116	;'t'
  2453  00F8F3  65                 	db	101	;'e'
  2454  00F8F4  20                 	db	32
  2455  00F8F5  62                 	db	98	;'b'
  2456  00F8F6  75                 	db	117	;'u'
  2457  00F8F7  74                 	db	116	;'t'
  2458  00F8F8  74                 	db	116	;'t'
  2459  00F8F9  6F                 	db	111	;'o'
  2460  00F8FA  6E                 	db	110	;'n'
  2461  00F8FB  20                 	db	32
  2462  00F8FC  6E                 	db	110	;'n'
  2463  00F8FD  6F                 	db	111	;'o'
  2464  00F8FE  74                 	db	116	;'t'
  2465  00F8FF  20                 	db	32
  2466  00F900  73                 	db	115	;'s'
  2467  00F901  70                 	db	112	;'p'
  2468  00F902  65                 	db	101	;'e'
  2469  00F903  63                 	db	99	;'c'
  2470  00F904  69                 	db	105	;'i'
  2471  00F905  66                 	db	102	;'f'
  2472  00F906  69                 	db	105	;'i'
  2473  00F907  65                 	db	101	;'e'
  2474  00F908  64                 	db	100	;'d'
  2475  00F909  00                 	db	0
  2476  00F90A                     STR_99:
  2477  00F90A  44                 	db	68	;'D'
  2478  00F90B  69                 	db	105	;'i'
  2479  00F90C  73                 	db	115	;'s'
  2480  00F90D  70                 	db	112	;'p'
  2481  00F90E  6C                 	db	108	;'l'
  2482  00F90F  61                 	db	97	;'a'
  2483  00F910  79                 	db	121	;'y'
  2484  00F911  73                 	db	115	;'s'
  2485  00F912  20                 	db	32
  2486  00F913  46                 	db	70	;'F'
  2487  00F914  69                 	db	105	;'i'
  2488  00F915  72                 	db	114	;'r'
  2489  00F916  6D                 	db	109	;'m'
  2490  00F917  77                 	db	119	;'w'
  2491  00F918  61                 	db	97	;'a'
  2492  00F919  72                 	db	114	;'r'
  2493  00F91A  65                 	db	101	;'e'
  2494  00F91B  2F                 	db	47
  2495  00F91C  48                 	db	72	;'H'
  2496  00F91D  61                 	db	97	;'a'
  2497  00F91E  72                 	db	114	;'r'
  2498  00F91F  64                 	db	100	;'d'
  2499  00F920  77                 	db	119	;'w'
  2500  00F921  61                 	db	97	;'a'
  2501  00F922  72                 	db	114	;'r'
  2502  00F923  65                 	db	101	;'e'
  2503  00F924  20                 	db	32
  2504  00F925  56                 	db	86	;'V'
  2505  00F926  65                 	db	101	;'e'
  2506  00F927  72                 	db	114	;'r'
  2507  00F928  73                 	db	115	;'s'
  2508  00F929  69                 	db	105	;'i'
  2509  00F92A  6F                 	db	111	;'o'
  2510  00F92B  6E                 	db	110	;'n'
  2511  00F92C  00                 	db	0
  2512  00F92D                     STR_34:
  2513  00F92D  45                 	db	69	;'E'
  2514  00F92E  72                 	db	114	;'r'
  2515  00F92F  72                 	db	114	;'r'
  2516  00F930  6F                 	db	111	;'o'
  2517  00F931  72                 	db	114	;'r'
  2518  00F932  3A                 	db	58	;':'
  2519  00F933  20                 	db	32
  2520  00F934  63                 	db	99	;'c'
  2521  00F935  6F                 	db	111	;'o'
  2522  00F936  75                 	db	117	;'u'
  2523  00F937  6C                 	db	108	;'l'
  2524  00F938  64                 	db	100	;'d'
  2525  00F939  20                 	db	32
  2526  00F93A  6E                 	db	110	;'n'
  2527  00F93B  6F                 	db	111	;'o'
  2528  00F93C  74                 	db	116	;'t'
  2529  00F93D  20                 	db	32
  2530  00F93E  64                 	db	100	;'d'
  2531  00F93F  65                 	db	101	;'e'
  2532  00F940  63                 	db	99	;'c'
  2533  00F941  6F                 	db	111	;'o'
  2534  00F942  64                 	db	100	;'d'
  2535  00F943  65                 	db	101	;'e'
  2536  00F944  20                 	db	32
  2537  00F945  4E                 	db	78	;'N'
  2538  00F946  45                 	db	69	;'E'
  2539  00F947  43                 	db	67	;'C'
  2540  00F948  20                 	db	32
  2541  00F949  63                 	db	99	;'c'
  2542  00F94A  6F                 	db	111	;'o'
  2543  00F94B  64                 	db	100	;'d'
  2544  00F94C  65                 	db	101	;'e'
  2545  00F94D  00                 	db	0
  2546  00F94E                     STR_143:
  2547  00F94E  52                 	db	82	;'R'
  2548  00F94F  43                 	db	67	;'C'
  2549  00F950  2D                 	db	45
  2550  00F951  30                 	db	48	;'0'
  2551  00F952  31                 	db	49	;'1'
  2552  00F953  35                 	db	53	;'5'
  2553  00F954  2A                 	db	42
  2554  00F955  33                 	db	51	;'3'
  2555  00F956  20                 	db	32
  2556  00F957  43                 	db	67	;'C'
  2557  00F958  68                 	db	104	;'h'
  2558  00F959  61                 	db	97	;'a'
  2559  00F95A  6E                 	db	110	;'n'
  2560  00F95B  6E                 	db	110	;'n'
  2561  00F95C  65                 	db	101	;'e'
  2562  00F95D  6C                 	db	108	;'l'
  2563  00F95E  20                 	db	32
  2564  00F95F  48                 	db	72	;'H'
  2565  00F960  20                 	db	32
  2566  00F961  64                 	db	100	;'d'
  2567  00F962  65                 	db	101	;'e'
  2568  00F963  76                 	db	118	;'v'
  2569  00F964  69                 	db	105	;'i'
  2570  00F965  63                 	db	99	;'c'
  2571  00F966  65                 	db	101	;'e'
  2572  00F967  20                 	db	32
  2573  00F968  31                 	db	49	;'1'
  2574  00F969  20                 	db	32
  2575  00F96A  4F                 	db	79	;'O'
  2576  00F96B  46                 	db	70	;'F'
  2577  00F96C  46                 	db	70	;'F'
  2578  00F96D  00                 	db	0
  2579  00F96E                     STR_145:
  2580  00F96E  52                 	db	82	;'R'
  2581  00F96F  43                 	db	67	;'C'
  2582  00F970  2D                 	db	45
  2583  00F971  30                 	db	48	;'0'
  2584  00F972  31                 	db	49	;'1'
  2585  00F973  35                 	db	53	;'5'
  2586  00F974  2A                 	db	42
  2587  00F975  33                 	db	51	;'3'
  2588  00F976  20                 	db	32
  2589  00F977  43                 	db	67	;'C'
  2590  00F978  68                 	db	104	;'h'
  2591  00F979  61                 	db	97	;'a'
  2592  00F97A  6E                 	db	110	;'n'
  2593  00F97B  6E                 	db	110	;'n'
  2594  00F97C  65                 	db	101	;'e'
  2595  00F97D  6C                 	db	108	;'l'
  2596  00F97E  20                 	db	32
  2597  00F97F  48                 	db	72	;'H'
  2598  00F980  20                 	db	32
  2599  00F981  64                 	db	100	;'d'
  2600  00F982  65                 	db	101	;'e'
  2601  00F983  76                 	db	118	;'v'
  2602  00F984  69                 	db	105	;'i'
  2603  00F985  63                 	db	99	;'c'
  2604  00F986  65                 	db	101	;'e'
  2605  00F987  20                 	db	32
  2606  00F988  32                 	db	50	;'2'
  2607  00F989  20                 	db	32
  2608  00F98A  4F                 	db	79	;'O'
  2609  00F98B  46                 	db	70	;'F'
  2610  00F98C  46                 	db	70	;'F'
  2611  00F98D  00                 	db	0
  2612  00F98E                     STR_147:
  2613  00F98E  52                 	db	82	;'R'
  2614  00F98F  43                 	db	67	;'C'
  2615  00F990  2D                 	db	45
  2616  00F991  30                 	db	48	;'0'
  2617  00F992  31                 	db	49	;'1'
  2618  00F993  35                 	db	53	;'5'
  2619  00F994  2A                 	db	42
  2620  00F995  33                 	db	51	;'3'
  2621  00F996  20                 	db	32
  2622  00F997  43                 	db	67	;'C'
  2623  00F998  68                 	db	104	;'h'
  2624  00F999  61                 	db	97	;'a'
  2625  00F99A  6E                 	db	110	;'n'
  2626  00F99B  6E                 	db	110	;'n'
  2627  00F99C  65                 	db	101	;'e'
  2628  00F99D  6C                 	db	108	;'l'
  2629  00F99E  20                 	db	32
  2630  00F99F  48                 	db	72	;'H'
  2631  00F9A0  20                 	db	32
  2632  00F9A1  64                 	db	100	;'d'
  2633  00F9A2  65                 	db	101	;'e'
  2634  00F9A3  76                 	db	118	;'v'
  2635  00F9A4  69                 	db	105	;'i'
  2636  00F9A5  63                 	db	99	;'c'
  2637  00F9A6  65                 	db	101	;'e'
  2638  00F9A7  20                 	db	32
  2639  00F9A8  33                 	db	51	;'3'
  2640  00F9A9  20                 	db	32
  2641  00F9AA  4F                 	db	79	;'O'
  2642  00F9AB  46                 	db	70	;'F'
  2643  00F9AC  46                 	db	70	;'F'
  2644  00F9AD  00                 	db	0
  2645  00F9AE                     STR_97:
  2646  00F9AE  43                 	db	67	;'C'
  2647  00F9AF  6C                 	db	108	;'l'
  2648  00F9B0  65                 	db	101	;'e'
  2649  00F9B1  61                 	db	97	;'a'
  2650  00F9B2  72                 	db	114	;'r'
  2651  00F9B3  73                 	db	115	;'s'
  2652  00F9B4  20                 	db	32
  2653  00F9B5  6D                 	db	109	;'m'
  2654  00F9B6  65                 	db	101	;'e'
  2655  00F9B7  6D                 	db	109	;'m'
  2656  00F9B8  6F                 	db	111	;'o'
  2657  00F9B9  72                 	db	114	;'r'
  2658  00F9BA  79                 	db	121	;'y'
  2659  00F9BB  20                 	db	32
  2660  00F9BC  61                 	db	97	;'a'
  2661  00F9BD  6E                 	db	110	;'n'
  2662  00F9BE  64                 	db	100	;'d'
  2663  00F9BF  20                 	db	32
  2664  00F9C0  72                 	db	114	;'r'
  2665  00F9C1  65                 	db	101	;'e'
  2666  00F9C2  73                 	db	115	;'s'
  2667  00F9C3  65                 	db	101	;'e'
  2668  00F9C4  74                 	db	116	;'t'
  2669  00F9C5  73                 	db	115	;'s'
  2670  00F9C6  20                 	db	32
  2671  00F9C7  64                 	db	100	;'d'
  2672  00F9C8  65                 	db	101	;'e'
  2673  00F9C9  76                 	db	118	;'v'
  2674  00F9CA  69                 	db	105	;'i'
  2675  00F9CB  63                 	db	99	;'c'
  2676  00F9CC  65                 	db	101	;'e'
  2677  00F9CD  00                 	db	0
  2678  00F9CE                     STR_79:
  2679  00F9CE  45                 	db	69	;'E'
  2680  00F9CF  6E                 	db	110	;'n'
  2681  00F9D0  74                 	db	116	;'t'
  2682  00F9D1  65                 	db	101	;'e'
  2683  00F9D2  72                 	db	114	;'r'
  2684  00F9D3  20                 	db	32
  2685  00F9D4  59                 	db	89	;'Y'
  2686  00F9D5  20                 	db	32
  2687  00F9D6  74                 	db	116	;'t'
  2688  00F9D7  6F                 	db	111	;'o'
  2689  00F9D8  20                 	db	32
  2690  00F9D9  72                 	db	114	;'r'
  2691  00F9DA  65                 	db	101	;'e'
  2692  00F9DB  73                 	db	115	;'s'
  2693  00F9DC  65                 	db	101	;'e'
  2694  00F9DD  74                 	db	116	;'t'
  2695  00F9DE  20                 	db	32
  2696  00F9DF  6F                 	db	111	;'o'
  2697  00F9E0  72                 	db	114	;'r'
  2698  00F9E1  20                 	db	32
  2699  00F9E2  4E                 	db	78	;'N'
  2700  00F9E3  20                 	db	32
  2701  00F9E4  74                 	db	116	;'t'
  2702  00F9E5  6F                 	db	111	;'o'
  2703  00F9E6  20                 	db	32
  2704  00F9E7  63                 	db	99	;'c'
  2705  00F9E8  61                 	db	97	;'a'
  2706  00F9E9  6E                 	db	110	;'n'
  2707  00F9EA  63                 	db	99	;'c'
  2708  00F9EB  65                 	db	101	;'e'
  2709  00F9EC  6C                 	db	108	;'l'
  2710  00F9ED  00                 	db	0
  2711  00F9EE                     STR_30:
  2712  00F9EE  45                 	db	69	;'E'
  2713  00F9EF  72                 	db	114	;'r'
  2714  00F9F0  72                 	db	114	;'r'
  2715  00F9F1  6F                 	db	111	;'o'
  2716  00F9F2  72                 	db	114	;'r'
  2717  00F9F3  3A                 	db	58	;':'
  2718  00F9F4  20                 	db	32
  2719  00F9F5  63                 	db	99	;'c'
  2720  00F9F6  6F                 	db	111	;'o'
  2721  00F9F7  75                 	db	117	;'u'
  2722  00F9F8  6C                 	db	108	;'l'
  2723  00F9F9  64                 	db	100	;'d'
  2724  00F9FA  20                 	db	32
  2725  00F9FB  6E                 	db	110	;'n'
  2726  00F9FC  6F                 	db	111	;'o'
  2727  00F9FD  74                 	db	116	;'t'
  2728  00F9FE  20                 	db	32
  2729  00F9FF  64                 	db	100	;'d'
  2730  00FA00  65                 	db	101	;'e'
  2731  00FA01  63                 	db	99	;'c'
  2732  00FA02  6F                 	db	111	;'o'
  2733  00FA03  64                 	db	100	;'d'
  2734  00FA04  65                 	db	101	;'e'
  2735  00FA05  20                 	db	32
  2736  00FA06  41                 	db	65	;'A'
  2737  00FA07  64                 	db	100	;'d'
  2738  00FA08  64                 	db	100	;'d'
  2739  00FA09  72                 	db	114	;'r'
  2740  00FA0A  65                 	db	101	;'e'
  2741  00FA0B  73                 	db	115	;'s'
  2742  00FA0C  73                 	db	115	;'s'
  2743  00FA0D  00                 	db	0
  2744  00FA0E                     STR_25:
  2745  00FA0E  45                 	db	69	;'E'
  2746  00FA0F  72                 	db	114	;'r'
  2747  00FA10  72                 	db	114	;'r'
  2748  00FA11  6F                 	db	111	;'o'
  2749  00FA12  72                 	db	114	;'r'
  2750  00FA13  3A                 	db	58	;':'
  2751  00FA14  20                 	db	32
  2752  00FA15  43                 	db	67	;'C'
  2753  00FA16  6F                 	db	111	;'o'
  2754  00FA17  6D                 	db	109	;'m'
  2755  00FA18  6D                 	db	109	;'m'
  2756  00FA19  61                 	db	97	;'a'
  2757  00FA1A  6E                 	db	110	;'n'
  2758  00FA1B  64                 	db	100	;'d'
  2759  00FA1C  20                 	db	32
  2760  00FA1D  6C                 	db	108	;'l'
  2761  00FA1E  61                 	db	97	;'a'
  2762  00FA1F  72                 	db	114	;'r'
  2763  00FA20  67                 	db	103	;'g'
  2764  00FA21  65                 	db	101	;'e'
  2765  00FA22  72                 	db	114	;'r'
  2766  00FA23  20                 	db	32
  2767  00FA24  74                 	db	116	;'t'
  2768  00FA25  68                 	db	104	;'h'
  2769  00FA26  61                 	db	97	;'a'
  2770  00FA27  74                 	db	116	;'t'
  2771  00FA28  20                 	db	32
  2772  00FA29  32                 	db	50	;'2'
  2773  00FA2A  35                 	db	53	;'5'
  2774  00FA2B  35                 	db	53	;'5'
  2775  00FA2C  00                 	db	0
  2776  00FA2D                     STR_26:
  2777  00FA2D  45                 	db	69	;'E'
  2778  00FA2E  72                 	db	114	;'r'
  2779  00FA2F  72                 	db	114	;'r'
  2780  00FA30  6F                 	db	111	;'o'
  2781  00FA31  72                 	db	114	;'r'
  2782  00FA32  3A                 	db	58	;':'
  2783  00FA33  20                 	db	32
  2784  00FA34  41                 	db	65	;'A'
  2785  00FA35  64                 	db	100	;'d'
  2786  00FA36  64                 	db	100	;'d'
  2787  00FA37  72                 	db	114	;'r'
  2788  00FA38  65                 	db	101	;'e'
  2789  00FA39  73                 	db	115	;'s'
  2790  00FA3A  73                 	db	115	;'s'
  2791  00FA3B  20                 	db	32
  2792  00FA3C  6C                 	db	108	;'l'
  2793  00FA3D  61                 	db	97	;'a'
  2794  00FA3E  72                 	db	114	;'r'
  2795  00FA3F  67                 	db	103	;'g'
  2796  00FA40  65                 	db	101	;'e'
  2797  00FA41  72                 	db	114	;'r'
  2798  00FA42  20                 	db	32
  2799  00FA43  74                 	db	116	;'t'
  2800  00FA44  68                 	db	104	;'h'
  2801  00FA45  61                 	db	97	;'a'
  2802  00FA46  74                 	db	116	;'t'
  2803  00FA47  20                 	db	32
  2804  00FA48  32                 	db	50	;'2'
  2805  00FA49  35                 	db	53	;'5'
  2806  00FA4A  35                 	db	53	;'5'
  2807  00FA4B  00                 	db	0
  2808  00FA4C                     STR_142:
  2809  00FA4C  52                 	db	82	;'R'
  2810  00FA4D  43                 	db	67	;'C'
  2811  00FA4E  2D                 	db	45
  2812  00FA4F  30                 	db	48	;'0'
  2813  00FA50  31                 	db	49	;'1'
  2814  00FA51  35                 	db	53	;'5'
  2815  00FA52  2A                 	db	42
  2816  00FA53  33                 	db	51	;'3'
  2817  00FA54  20                 	db	32
  2818  00FA55  43                 	db	67	;'C'
  2819  00FA56  68                 	db	104	;'h'
  2820  00FA57  61                 	db	97	;'a'
  2821  00FA58  6E                 	db	110	;'n'
  2822  00FA59  6E                 	db	110	;'n'
  2823  00FA5A  65                 	db	101	;'e'
  2824  00FA5B  6C                 	db	108	;'l'
  2825  00FA5C  20                 	db	32
  2826  00FA5D  48                 	db	72	;'H'
  2827  00FA5E  20                 	db	32
  2828  00FA5F  64                 	db	100	;'d'
  2829  00FA60  65                 	db	101	;'e'
  2830  00FA61  76                 	db	118	;'v'
  2831  00FA62  69                 	db	105	;'i'
  2832  00FA63  63                 	db	99	;'c'
  2833  00FA64  65                 	db	101	;'e'
  2834  00FA65  20                 	db	32
  2835  00FA66  31                 	db	49	;'1'
  2836  00FA67  20                 	db	32
  2837  00FA68  4F                 	db	79	;'O'
  2838  00FA69  4E                 	db	78	;'N'
  2839  00FA6A  00                 	db	0
  2840  00FA6B                     STR_144:
  2841  00FA6B  52                 	db	82	;'R'
  2842  00FA6C  43                 	db	67	;'C'
  2843  00FA6D  2D                 	db	45
  2844  00FA6E  30                 	db	48	;'0'
  2845  00FA6F  31                 	db	49	;'1'
  2846  00FA70  35                 	db	53	;'5'
  2847  00FA71  2A                 	db	42
  2848  00FA72  33                 	db	51	;'3'
  2849  00FA73  20                 	db	32
  2850  00FA74  43                 	db	67	;'C'
  2851  00FA75  68                 	db	104	;'h'
  2852  00FA76  61                 	db	97	;'a'
  2853  00FA77  6E                 	db	110	;'n'
  2854  00FA78  6E                 	db	110	;'n'
  2855  00FA79  65                 	db	101	;'e'
  2856  00FA7A  6C                 	db	108	;'l'
  2857  00FA7B  20                 	db	32
  2858  00FA7C  48                 	db	72	;'H'
  2859  00FA7D  20                 	db	32
  2860  00FA7E  64                 	db	100	;'d'
  2861  00FA7F  65                 	db	101	;'e'
  2862  00FA80  76                 	db	118	;'v'
  2863  00FA81  69                 	db	105	;'i'
  2864  00FA82  63                 	db	99	;'c'
  2865  00FA83  65                 	db	101	;'e'
  2866  00FA84  20                 	db	32
  2867  00FA85  32                 	db	50	;'2'
  2868  00FA86  20                 	db	32
  2869  00FA87  4F                 	db	79	;'O'
  2870  00FA88  4E                 	db	78	;'N'
  2871  00FA89  00                 	db	0
  2872  00FA8A                     STR_146:
  2873  00FA8A  52                 	db	82	;'R'
  2874  00FA8B  43                 	db	67	;'C'
  2875  00FA8C  2D                 	db	45
  2876  00FA8D  30                 	db	48	;'0'
  2877  00FA8E  31                 	db	49	;'1'
  2878  00FA8F  35                 	db	53	;'5'
  2879  00FA90  2A                 	db	42
  2880  00FA91  33                 	db	51	;'3'
  2881  00FA92  20                 	db	32
  2882  00FA93  43                 	db	67	;'C'
  2883  00FA94  68                 	db	104	;'h'
  2884  00FA95  61                 	db	97	;'a'
  2885  00FA96  6E                 	db	110	;'n'
  2886  00FA97  6E                 	db	110	;'n'
  2887  00FA98  65                 	db	101	;'e'
  2888  00FA99  6C                 	db	108	;'l'
  2889  00FA9A  20                 	db	32
  2890  00FA9B  48                 	db	72	;'H'
  2891  00FA9C  20                 	db	32
  2892  00FA9D  64                 	db	100	;'d'
  2893  00FA9E  65                 	db	101	;'e'
  2894  00FA9F  76                 	db	118	;'v'
  2895  00FAA0  69                 	db	105	;'i'
  2896  00FAA1  63                 	db	99	;'c'
  2897  00FAA2  65                 	db	101	;'e'
  2898  00FAA3  20                 	db	32
  2899  00FAA4  33                 	db	51	;'3'
  2900  00FAA5  20                 	db	32
  2901  00FAA6  4F                 	db	79	;'O'
  2902  00FAA7  4E                 	db	78	;'N'
  2903  00FAA8  00                 	db	0
  2904  00FAA9                     STR_66:
  2905  00FAA9  45                 	db	69	;'E'
  2906  00FAAA  72                 	db	114	;'r'
  2907  00FAAB  72                 	db	114	;'r'
  2908  00FAAC  6F                 	db	111	;'o'
  2909  00FAAD  72                 	db	114	;'r'
  2910  00FAAE  3A                 	db	58	;':'
  2911  00FAAF  20                 	db	32
  2912  00FAB0  4E                 	db	78	;'N'
  2913  00FAB1  6F                 	db	111	;'o'
  2914  00FAB2  20                 	db	32
  2915  00FAB3  52                 	db	82	;'R'
  2916  00FAB4  46                 	db	70	;'F'
  2917  00FAB5  20                 	db	32
  2918  00FAB6  63                 	db	99	;'c'
  2919  00FAB7  68                 	db	104	;'h'
  2920  00FAB8  61                 	db	97	;'a'
  2921  00FAB9  6E                 	db	110	;'n'
  2922  00FABA  6E                 	db	110	;'n'
  2923  00FABB  65                 	db	101	;'e'
  2924  00FABC  6C                 	db	108	;'l'
  2925  00FABD  20                 	db	32
  2926  00FABE  73                 	db	115	;'s'
  2927  00FABF  70                 	db	112	;'p'
  2928  00FAC0  65                 	db	101	;'e'
  2929  00FAC1  63                 	db	99	;'c'
  2930  00FAC2  69                 	db	105	;'i'
  2931  00FAC3  66                 	db	102	;'f'
  2932  00FAC4  69                 	db	105	;'i'
  2933  00FAC5  65                 	db	101	;'e'
  2934  00FAC6  64                 	db	100	;'d'
  2935  00FAC7  00                 	db	0
  2936  00FAC8                     STR_67:
  2937  00FAC8  45                 	db	69	;'E'
  2938  00FAC9  72                 	db	114	;'r'
  2939  00FACA  72                 	db	114	;'r'
  2940  00FACB  6F                 	db	111	;'o'
  2941  00FACC  72                 	db	114	;'r'
  2942  00FACD  3A                 	db	58	;':'
  2943  00FACE  20                 	db	32
  2944  00FACF  52                 	db	82	;'R'
  2945  00FAD0  46                 	db	70	;'F'
  2946  00FAD1  20                 	db	32
  2947  00FAD2  63                 	db	99	;'c'
  2948  00FAD3  68                 	db	104	;'h'
  2949  00FAD4  61                 	db	97	;'a'
  2950  00FAD5  6E                 	db	110	;'n'
  2951  00FAD6  6E                 	db	110	;'n'
  2952  00FAD7  65                 	db	101	;'e'
  2953  00FAD8  6C                 	db	108	;'l'
  2954  00FAD9  20                 	db	32
  2955  00FADA  6F                 	db	111	;'o'
  2956  00FADB  75                 	db	117	;'u'
  2957  00FADC  74                 	db	116	;'t'
  2958  00FADD  20                 	db	32
  2959  00FADE  6F                 	db	111	;'o'
  2960  00FADF  66                 	db	102	;'f'
  2961  00FAE0  20                 	db	32
  2962  00FAE1  72                 	db	114	;'r'
  2963  00FAE2  61                 	db	97	;'a'
  2964  00FAE3  6E                 	db	110	;'n'
  2965  00FAE4  67                 	db	103	;'g'
  2966  00FAE5  65                 	db	101	;'e'
  2967  00FAE6  00                 	db	0
  2968  00FAE7                     STR_36:
  2969  00FAE7  4E                 	db	78	;'N'
  2970  00FAE8  45                 	db	69	;'E'
  2971  00FAE9  43                 	db	67	;'C'
  2972  00FAEA  20                 	db	32
  2973  00FAEB  63                 	db	99	;'c'
  2974  00FAEC  6F                 	db	111	;'o'
  2975  00FAED  64                 	db	100	;'d'
  2976  00FAEE  65                 	db	101	;'e'
  2977  00FAEF  20                 	db	32
  2978  00FAF0  6E                 	db	110	;'n'
  2979  00FAF1  6F                 	db	111	;'o'
  2980  00FAF2  74                 	db	116	;'t'
  2981  00FAF3  20                 	db	32
  2982  00FAF4  65                 	db	101	;'e'
  2983  00FAF5  6E                 	db	110	;'n'
  2984  00FAF6  74                 	db	116	;'t'
  2985  00FAF7  65                 	db	101	;'e'
  2986  00FAF8  72                 	db	114	;'r'
  2987  00FAF9  65                 	db	101	;'e'
  2988  00FAFA  64                 	db	100	;'d'
  2989  00FAFB  20                 	db	32
  2990  00FAFC  63                 	db	99	;'c'
  2991  00FAFD  6F                 	db	111	;'o'
  2992  00FAFE  72                 	db	114	;'r'
  2993  00FAFF  72                 	db	114	;'r'
  2994  00FB00  65                 	db	101	;'e'
  2995  00FB01  63                 	db	99	;'c'
  2996  00FB02  74                 	db	116	;'t'
  2997  00FB03  6C                 	db	108	;'l'
  2998  00FB04  79                 	db	121	;'y'
  2999  00FB05  00                 	db	0
  3000  00FB06                     STR_80:
  3001  00FB06  44                 	db	68	;'D'
  3002  00FB07  65                 	db	101	;'e'
  3003  00FB08  76                 	db	118	;'v'
  3004  00FB09  69                 	db	105	;'i'
  3005  00FB0A  63                 	db	99	;'c'
  3006  00FB0B  65                 	db	101	;'e'
  3007  00FB0C  20                 	db	32
  3008  00FB0D  72                 	db	114	;'r'
  3009  00FB0E  65                 	db	101	;'e'
  3010  00FB0F  73                 	db	115	;'s'
  3011  00FB10  75                 	db	117	;'u'
  3012  00FB11  6D                 	db	109	;'m'
  3013  00FB12  65                 	db	101	;'e'
  3014  00FB13  73                 	db	115	;'s'
  3015  00FB14  20                 	db	32
  3016  00FB15  77                 	db	119	;'w'
  3017  00FB16  69                 	db	105	;'i'
  3018  00FB17  74                 	db	116	;'t'
  3019  00FB18  68                 	db	104	;'h'
  3020  00FB19  6F                 	db	111	;'o'
  3021  00FB1A  75                 	db	117	;'u'
  3022  00FB1B  74                 	db	116	;'t'
  3023  00FB1C  20                 	db	32
  3024  00FB1D  72                 	db	114	;'r'
  3025  00FB1E  65                 	db	101	;'e'
  3026  00FB1F  73                 	db	115	;'s'
  3027  00FB20  65                 	db	101	;'e'
  3028  00FB21  74                 	db	116	;'t'
  3029  00FB22  00                 	db	0
  3030  00FB23                     STR_21:
  3031  00FB23  43                 	db	67	;'C'
  3032  00FB24  6F                 	db	111	;'o'
  3033  00FB25  6E                 	db	110	;'n'
  3034  00FB26  66                 	db	102	;'f'
  3035  00FB27  69                 	db	105	;'i'
  3036  00FB28  67                 	db	103	;'g'
  3037  00FB29  75                 	db	117	;'u'
  3038  00FB2A  72                 	db	114	;'r'
  3039  00FB2B  61                 	db	97	;'a'
  3040  00FB2C  74                 	db	116	;'t'
  3041  00FB2D  69                 	db	105	;'i'
  3042  00FB2E  6F                 	db	111	;'o'
  3043  00FB2F  6E                 	db	110	;'n'
  3044  00FB30  20                 	db	32
  3045  00FB31  31                 	db	49	;'1'
  3046  00FB32  20                 	db	32
  3047  00FB33  52                 	db	82	;'R'
  3048  00FB34  46                 	db	70	;'F'
  3049  00FB35  20                 	db	32
  3050  00FB36  63                 	db	99	;'c'
  3051  00FB37  6F                 	db	111	;'o'
  3052  00FB38  64                 	db	100	;'d'
  3053  00FB39  65                 	db	101	;'e'
  3054  00FB3A  20                 	db	32
  3055  00FB3B  73                 	db	115	;'s'
  3056  00FB3C  65                 	db	101	;'e'
  3057  00FB3D  6E                 	db	110	;'n'
  3058  00FB3E  74                 	db	116	;'t'
  3059  00FB3F  00                 	db	0
  3060  00FB40                     STR_23:
  3061  00FB40  43                 	db	67	;'C'
  3062  00FB41  6F                 	db	111	;'o'
  3063  00FB42  6E                 	db	110	;'n'
  3064  00FB43  66                 	db	102	;'f'
  3065  00FB44  69                 	db	105	;'i'
  3066  00FB45  67                 	db	103	;'g'
  3067  00FB46  75                 	db	117	;'u'
  3068  00FB47  72                 	db	114	;'r'
  3069  00FB48  61                 	db	97	;'a'
  3070  00FB49  74                 	db	116	;'t'
  3071  00FB4A  69                 	db	105	;'i'
  3072  00FB4B  6F                 	db	111	;'o'
  3073  00FB4C  6E                 	db	110	;'n'
  3074  00FB4D  20                 	db	32
  3075  00FB4E  32                 	db	50	;'2'
  3076  00FB4F  20                 	db	32
  3077  00FB50  52                 	db	82	;'R'
  3078  00FB51  46                 	db	70	;'F'
  3079  00FB52  20                 	db	32
  3080  00FB53  63                 	db	99	;'c'
  3081  00FB54  6F                 	db	111	;'o'
  3082  00FB55  64                 	db	100	;'d'
  3083  00FB56  65                 	db	101	;'e'
  3084  00FB57  20                 	db	32
  3085  00FB58  73                 	db	115	;'s'
  3086  00FB59  65                 	db	101	;'e'
  3087  00FB5A  6E                 	db	110	;'n'
  3088  00FB5B  74                 	db	116	;'t'
  3089  00FB5C  00                 	db	0
  3090  00FB5D                     STR_87:
  3091  00FB5D  50                 	db	80	;'P'
  3092  00FB5E  43                 	db	67	;'C'
  3093  00FB5F  42                 	db	66	;'B'
  3094  00FB60  20                 	db	32
  3095  00FB61  68                 	db	104	;'h'
  3096  00FB62  61                 	db	97	;'a'
  3097  00FB63  73                 	db	115	;'s'
  3098  00FB64  20                 	db	32
  3099  00FB65  42                 	db	66	;'B'
  3100  00FB66  6C                 	db	108	;'l'
  3101  00FB67  75                 	db	117	;'u'
  3102  00FB68  65                 	db	101	;'e'
  3103  00FB69  74                 	db	116	;'t'
  3104  00FB6A  6F                 	db	111	;'o'
  3105  00FB6B  6F                 	db	111	;'o'
  3106  00FB6C  74                 	db	116	;'t'
  3107  00FB6D  68                 	db	104	;'h'
  3108  00FB6E  20                 	db	32
  3109  00FB6F  63                 	db	99	;'c'
  3110  00FB70  61                 	db	97	;'a'
  3111  00FB71  70                 	db	112	;'p'
  3112  00FB72  61                 	db	97	;'a'
  3113  00FB73  62                 	db	98	;'b'
  3114  00FB74  69                 	db	105	;'i'
  3115  00FB75  6C                 	db	108	;'l'
  3116  00FB76  69                 	db	105	;'i'
  3117  00FB77  74                 	db	116	;'t'
  3118  00FB78  79                 	db	121	;'y'
  3119  00FB79  00                 	db	0
  3120  00FB7A                     STR_17:
  3121  00FB7A  42                 	db	66	;'B'
  3122  00FB7B  54                 	db	84	;'T'
  3123  00FB7C  4E                 	db	78	;'N'
  3124  00FB7D  61                 	db	97	;'a'
  3125  00FB7E  6D                 	db	109	;'m'
  3126  00FB7F  65                 	db	101	;'e'
  3127  00FB80  3D                 	db	61	;'='
  3128  00FB81  48                 	db	72	;'H'
  3129  00FB82  6F                 	db	111	;'o'
  3130  00FB83  6D                 	db	109	;'m'
  3131  00FB84  65                 	db	101	;'e'
  3132  00FB85  20                 	db	32
  3133  00FB86  41                 	db	65	;'A'
  3134  00FB87  75                 	db	117	;'u'
  3135  00FB88  74                 	db	116	;'t'
  3136  00FB89  6F                 	db	111	;'o'
  3137  00FB8A  6D                 	db	109	;'m'
  3138  00FB8B  61                 	db	97	;'a'
  3139  00FB8C  74                 	db	116	;'t'
  3140  00FB8D  69                 	db	105	;'i'
  3141  00FB8E  6F                 	db	111	;'o'
  3142  00FB8F  6E                 	db	110	;'n'
  3143  00FB90  20                 	db	32
  3144  00FB91  25                 	db	37
  3145  00FB92  6C                 	db	108	;'l'
  3146  00FB93  64                 	db	100	;'d'
  3147  00FB94  0D                 	db	13
  3148  00FB95  00                 	db	0
  3149  00FB96                     STR_102:
  3150  00FB96  44                 	db	68	;'D'
  3151  00FB97  69                 	db	105	;'i'
  3152  00FB98  73                 	db	115	;'s'
  3153  00FB99  70                 	db	112	;'p'
  3154  00FB9A  6C                 	db	108	;'l'
  3155  00FB9B  61                 	db	97	;'a'
  3156  00FB9C  79                 	db	121	;'y'
  3157  00FB9D  73                 	db	115	;'s'
  3158  00FB9E  20                 	db	32
  3159  00FB9F  74                 	db	116	;'t'
  3160  00FBA0  68                 	db	104	;'h'
  3161  00FBA1  65                 	db	101	;'e'
  3162  00FBA2  20                 	db	32
  3163  00FBA3  73                 	db	115	;'s'
  3164  00FBA4  75                 	db	117	;'u'
  3165  00FBA5  70                 	db	112	;'p'
  3166  00FBA6  70                 	db	112	;'p'
  3167  00FBA7  6C                 	db	108	;'l'
  3168  00FBA8  79                 	db	121	;'y'
  3169  00FBA9  20                 	db	32
  3170  00FBAA  76                 	db	118	;'v'
  3171  00FBAB  6F                 	db	111	;'o'
  3172  00FBAC  6C                 	db	108	;'l'
  3173  00FBAD  74                 	db	116	;'t'
  3174  00FBAE  61                 	db	97	;'a'
  3175  00FBAF  67                 	db	103	;'g'
  3176  00FBB0  65                 	db	101	;'e'
  3177  00FBB1  00                 	db	0
  3178  00FBB2                     STR_149:
  3179  00FBB2  50                 	db	80	;'P'
  3180  00FBB3  72                 	db	114	;'r'
  3181  00FBB4  65                 	db	101	;'e'
  3182  00FBB5  73                 	db	115	;'s'
  3183  00FBB6  73                 	db	115	;'s'
  3184  00FBB7  20                 	db	32
  3185  00FBB8  52                 	db	82	;'R'
  3186  00FBB9  65                 	db	101	;'e'
  3187  00FBBA  6D                 	db	109	;'m'
  3188  00FBBB  6F                 	db	111	;'o'
  3189  00FBBC  74                 	db	116	;'t'
  3190  00FBBD  65                 	db	101	;'e'
  3191  00FBBE  20                 	db	32
  3192  00FBBF  43                 	db	67	;'C'
  3193  00FBC0  6F                 	db	111	;'o'
  3194  00FBC1  6E                 	db	110	;'n'
  3195  00FBC2  74                 	db	116	;'t'
  3196  00FBC3  72                 	db	114	;'r'
  3197  00FBC4  6F                 	db	111	;'o'
  3198  00FBC5  6C                 	db	108	;'l'
  3199  00FBC6  20                 	db	32
  3200  00FBC7  62                 	db	98	;'b'
  3201  00FBC8  75                 	db	117	;'u'
  3202  00FBC9  74                 	db	116	;'t'
  3203  00FBCA  74                 	db	116	;'t'
  3204  00FBCB  6F                 	db	111	;'o'
  3205  00FBCC  6E                 	db	110	;'n'
  3206  00FBCD  00                 	db	0
  3207  00FBCE                     STR_89:
  3208  00FBCE  54                 	db	84	;'T'
  3209  00FBCF  72                 	db	114	;'r'
  3210  00FBD0  61                 	db	97	;'a'
  3211  00FBD1  6E                 	db	110	;'n'
  3212  00FBD2  73                 	db	115	;'s'
  3213  00FBD3  6D                 	db	109	;'m'
  3214  00FBD4  69                 	db	105	;'i'
  3215  00FBD5  74                 	db	116	;'t'
  3216  00FBD6  74                 	db	116	;'t'
  3217  00FBD7  69                 	db	105	;'i'
  3218  00FBD8  6E                 	db	110	;'n'
  3219  00FBD9  67                 	db	103	;'g'
  3220  00FBDA  20                 	db	32
  3221  00FBDB  46                 	db	70	;'F'
  3222  00FBDC  72                 	db	114	;'r'
  3223  00FBDD  65                 	db	101	;'e'
  3224  00FBDE  71                 	db	113	;'q'
  3225  00FBDF  75                 	db	117	;'u'
  3226  00FBE0  65                 	db	101	;'e'
  3227  00FBE1  6E                 	db	110	;'n'
  3228  00FBE2  63                 	db	99	;'c'
  3229  00FBE3  79                 	db	121	;'y'
  3230  00FBE4  3A                 	db	58	;':'
  3231  00FBE5  20                 	db	32
  3232  00FBE6  25                 	db	37
  3233  00FBE7  73                 	db	115	;'s'
  3234  00FBE8  00                 	db	0
  3235  00FBE9                     STR_148:
  3236  00FBE9  45                 	db	69	;'E'
  3237  00FBEA  6E                 	db	110	;'n'
  3238  00FBEB  74                 	db	116	;'t'
  3239  00FBEC  65                 	db	101	;'e'
  3240  00FBED  72                 	db	114	;'r'
  3241  00FBEE  20                 	db	32
  3242  00FBEF  3F                 	db	63	;'?'
  3243  00FBF0  3F                 	db	63	;'?'
  3244  00FBF1  3F                 	db	63	;'?'
  3245  00FBF2  20                 	db	32
  3246  00FBF3  66                 	db	102	;'f'
  3247  00FBF4  6F                 	db	111	;'o'
  3248  00FBF5  72                 	db	114	;'r'
  3249  00FBF6  20                 	db	32
  3250  00FBF7  43                 	db	67	;'C'
  3251  00FBF8  6F                 	db	111	;'o'
  3252  00FBF9  6D                 	db	109	;'m'
  3253  00FBFA  6D                 	db	109	;'m'
  3254  00FBFB  61                 	db	97	;'a'
  3255  00FBFC  6E                 	db	110	;'n'
  3256  00FBFD  64                 	db	100	;'d'
  3257  00FBFE  20                 	db	32
  3258  00FBFF  4D                 	db	77	;'M'
  3259  00FC00  65                 	db	101	;'e'
  3260  00FC01  6E                 	db	110	;'n'
  3261  00FC02  75                 	db	117	;'u'
  3262  00FC03  00                 	db	0
  3263  00FC04                     STR_105:
  3264  00FC04  54                 	db	84	;'T'
  3265  00FC05  72                 	db	114	;'r'
  3266  00FC06  61                 	db	97	;'a'
  3267  00FC07  6E                 	db	110	;'n'
  3268  00FC08  73                 	db	115	;'s'
  3269  00FC09  6D                 	db	109	;'m'
  3270  00FC0A  69                 	db	105	;'i'
  3271  00FC0B  74                 	db	116	;'t'
  3272  00FC0C  73                 	db	115	;'s'
  3273  00FC0D  20                 	db	32
  3274  00FC0E  73                 	db	115	;'s'
  3275  00FC0F  61                 	db	97	;'a'
  3276  00FC10  76                 	db	118	;'v'
  3277  00FC11  65                 	db	101	;'e'
  3278  00FC12  64                 	db	100	;'d'
  3279  00FC13  20                 	db	32
  3280  00FC14  4E                 	db	78	;'N'
  3281  00FC15  45                 	db	69	;'E'
  3282  00FC16  43                 	db	67	;'C'
  3283  00FC17  20                 	db	32
  3284  00FC18  63                 	db	99	;'c'
  3285  00FC19  6F                 	db	111	;'o'
  3286  00FC1A  64                 	db	100	;'d'
  3287  00FC1B  65                 	db	101	;'e'
  3288  00FC1C  00                 	db	0
  3289  00FC1D                     STR_4:
  3290  00FC1D  53                 	db	83	;'S'
  3291  00FC1E  4E                 	db	78	;'N'
  3292  00FC1F  2C                 	db	44
  3293  00FC20  48                 	db	72	;'H'
  3294  00FC21  6F                 	db	111	;'o'
  3295  00FC22  6D                 	db	109	;'m'
  3296  00FC23  65                 	db	101	;'e'
  3297  00FC24  20                 	db	32
  3298  00FC25  41                 	db	65	;'A'
  3299  00FC26  75                 	db	117	;'u'
  3300  00FC27  74                 	db	116	;'t'
  3301  00FC28  6F                 	db	111	;'o'
  3302  00FC29  6D                 	db	109	;'m'
  3303  00FC2A  61                 	db	97	;'a'
  3304  00FC2B  74                 	db	116	;'t'
  3305  00FC2C  69                 	db	105	;'i'
  3306  00FC2D  6F                 	db	111	;'o'
  3307  00FC2E  6E                 	db	110	;'n'
  3308  00FC2F  20                 	db	32
  3309  00FC30  25                 	db	37
  3310  00FC31  6C                 	db	108	;'l'
  3311  00FC32  64                 	db	100	;'d'
  3312  00FC33  0D                 	db	13
  3313  00FC34  00                 	db	0
  3314  00FC35                     STR_107:
  3315  00FC35  41                 	db	65	;'A'
  3316  00FC36  6C                 	db	108	;'l'
  3317  00FC37  6C                 	db	108	;'l'
  3318  00FC38  6F                 	db	111	;'o'
  3319  00FC39  77                 	db	119	;'w'
  3320  00FC3A  73                 	db	115	;'s'
  3321  00FC3B  20                 	db	32
  3322  00FC3C  73                 	db	115	;'s'
  3323  00FC3D  61                 	db	97	;'a'
  3324  00FC3E  76                 	db	118	;'v'
  3325  00FC3F  69                 	db	105	;'i'
  3326  00FC40  6E                 	db	110	;'n'
  3327  00FC41  67                 	db	103	;'g'
  3328  00FC42  20                 	db	32
  3329  00FC43  4E                 	db	78	;'N'
  3330  00FC44  45                 	db	69	;'E'
  3331  00FC45  43                 	db	67	;'C'
  3332  00FC46  20                 	db	32
  3333  00FC47  63                 	db	99	;'c'
  3334  00FC48  6F                 	db	111	;'o'
  3335  00FC49  64                 	db	100	;'d'
  3336  00FC4A  65                 	db	101	;'e'
  3337  00FC4B  73                 	db	115	;'s'
  3338  00FC4C  00                 	db	0
  3339  00FC4D                     STR_29:
  3340  00FC4D  53                 	db	83	;'S'
  3341  00FC4E  65                 	db	101	;'e'
  3342  00FC4F  6E                 	db	110	;'n'
  3343  00FC50  74                 	db	116	;'t'
  3344  00FC51  20                 	db	32
  3345  00FC52  4E                 	db	78	;'N'
  3346  00FC53  45                 	db	69	;'E'
  3347  00FC54  43                 	db	67	;'C'
  3348  00FC55  20                 	db	32
  3349  00FC56  63                 	db	99	;'c'
  3350  00FC57  6F                 	db	111	;'o'
  3351  00FC58  64                 	db	100	;'d'
  3352  00FC59  65                 	db	101	;'e'
  3353  00FC5A  20                 	db	32
  3354  00FC5B  3D                 	db	61	;'='
  3355  00FC5C  20                 	db	32
  3356  00FC5D  30                 	db	48	;'0'
  3357  00FC5E  78                 	db	120	;'x'
  3358  00FC5F  25                 	db	37
  3359  00FC60  6C                 	db	108	;'l'
  3360  00FC61  58                 	db	88	;'X'
  3361  00FC62  20                 	db	32
  3362  00FC63  00                 	db	0
  3363  00FC64                     STR_139:
  3364  00FC64  52                 	db	82	;'R'
  3365  00FC65  46                 	db	70	;'F'
  3366  00FC66  4B                 	db	75	;'K'
  3367  00FC67  33                 	db	51	;'3'
  3368  00FC68  30                 	db	48	;'0'
  3369  00FC69  36                 	db	54	;'6'
  3370  00FC6A  4C                 	db	76	;'L'
  3371  00FC6B  43                 	db	67	;'C'
  3372  00FC6C  20                 	db	32
  3373  00FC6D  43                 	db	67	;'C'
  3374  00FC6E  68                 	db	104	;'h'
  3375  00FC6F  61                 	db	97	;'a'
  3376  00FC70  6E                 	db	110	;'n'
  3377  00FC71  6E                 	db	110	;'n'
  3378  00FC72  65                 	db	101	;'e'
  3379  00FC73  6C                 	db	108	;'l'
  3380  00FC74  20                 	db	32
  3381  00FC75  42                 	db	66	;'B'
  3382  00FC76  20                 	db	32
  3383  00FC77  4F                 	db	79	;'O'
  3384  00FC78  46                 	db	70	;'F'
  3385  00FC79  46                 	db	70	;'F'
  3386  00FC7A  00                 	db	0
  3387  00FC7B                     STR_138:
  3388  00FC7B  52                 	db	82	;'R'
  3389  00FC7C  46                 	db	70	;'F'
  3390  00FC7D  4B                 	db	75	;'K'
  3391  00FC7E  33                 	db	51	;'3'
  3392  00FC7F  30                 	db	48	;'0'
  3393  00FC80  36                 	db	54	;'6'
  3394  00FC81  4C                 	db	76	;'L'
  3395  00FC82  43                 	db	67	;'C'
  3396  00FC83  20                 	db	32
  3397  00FC84  43                 	db	67	;'C'
  3398  00FC85  68                 	db	104	;'h'
  3399  00FC86  61                 	db	97	;'a'
  3400  00FC87  6E                 	db	110	;'n'
  3401  00FC88  6E                 	db	110	;'n'
  3402  00FC89  65                 	db	101	;'e'
  3403  00FC8A  6C                 	db	108	;'l'
  3404  00FC8B  20                 	db	32
  3405  00FC8C  42                 	db	66	;'B'
  3406  00FC8D  20                 	db	32
  3407  00FC8E  4F                 	db	79	;'O'
  3408  00FC8F  4E                 	db	78	;'N'
  3409  00FC90  00                 	db	0
  3410  00FC91                     STR_40:
  3411  00FC91  4E                 	db	78	;'N'
  3412  00FC92  45                 	db	69	;'E'
  3413  00FC93  43                 	db	67	;'C'
  3414  00FC94  20                 	db	32
  3415  00FC95  3D                 	db	61	;'='
  3416  00FC96  20                 	db	32
  3417  00FC97  61                 	db	97	;'a'
  3418  00FC98  64                 	db	100	;'d'
  3419  00FC99  64                 	db	100	;'d'
  3420  00FC9A  72                 	db	114	;'r'
  3421  00FC9B  65                 	db	101	;'e'
  3422  00FC9C  73                 	db	115	;'s'
  3423  00FC9D  73                 	db	115	;'s'
  3424  00FC9E  2C                 	db	44
  3425  00FC9F  63                 	db	99	;'c'
  3426  00FCA0  6F                 	db	111	;'o'
  3427  00FCA1  6D                 	db	109	;'m'
  3428  00FCA2  6D                 	db	109	;'m'
  3429  00FCA3  61                 	db	97	;'a'
  3430  00FCA4  6E                 	db	110	;'n'
  3431  00FCA5  64                 	db	100	;'d'
  3432  00FCA6  00                 	db	0
  3433  00FCA7                     STR_8:
  3434  00FCA7  53                 	db	83	;'S'
  3435  00FCA8  53                 	db	83	;'S'
  3436  00FCA9  2C                 	db	44
  3437  00FCAA  20                 	db	32
  3438  00FCAB  48                 	db	72	;'H'
  3439  00FCAC  6F                 	db	111	;'o'
  3440  00FCAD  6D                 	db	109	;'m'
  3441  00FCAE  65                 	db	101	;'e'
  3442  00FCAF  20                 	db	32
  3443  00FCB0  41                 	db	65	;'A'
  3444  00FCB1  75                 	db	117	;'u'
  3445  00FCB2  74                 	db	116	;'t'
  3446  00FCB3  6F                 	db	111	;'o'
  3447  00FCB4  6D                 	db	109	;'m'
  3448  00FCB5  61                 	db	97	;'a'
  3449  00FCB6  74                 	db	116	;'t'
  3450  00FCB7  69                 	db	105	;'i'
  3451  00FCB8  6F                 	db	111	;'o'
  3452  00FCB9  6E                 	db	110	;'n'
  3453  00FCBA  0D                 	db	13
  3454  00FCBB  00                 	db	0
  3455  00FCBC                     STR_28:
  3456  00FCBC  4E                 	db	78	;'N'
  3457  00FCBD  45                 	db	69	;'E'
  3458  00FCBE  43                 	db	67	;'C'
  3459  00FCBF  20                 	db	32
  3460  00FCC0  63                 	db	99	;'c'
  3461  00FCC1  6F                 	db	111	;'o'
  3462  00FCC2  6D                 	db	109	;'m'
  3463  00FCC3  6D                 	db	109	;'m'
  3464  00FCC4  61                 	db	97	;'a'
  3465  00FCC5  6E                 	db	110	;'n'
  3466  00FCC6  64                 	db	100	;'d'
  3467  00FCC7  3A                 	db	58	;':'
  3468  00FCC8  20                 	db	32
  3469  00FCC9  30                 	db	48	;'0'
  3470  00FCCA  78                 	db	120	;'x'
  3471  00FCCB  25                 	db	37
  3472  00FCCC  30                 	db	48	;'0'
  3473  00FCCD  32                 	db	50	;'2'
  3474  00FCCE  58                 	db	88	;'X'
  3475  00FCCF  20                 	db	32
  3476  00FCD0  00                 	db	0
  3477  00FCD1                     STR_27:
  3478  00FCD1  4E                 	db	78	;'N'
  3479  00FCD2  45                 	db	69	;'E'
  3480  00FCD3  43                 	db	67	;'C'
  3481  00FCD4  20                 	db	32
  3482  00FCD5  61                 	db	97	;'a'
  3483  00FCD6  64                 	db	100	;'d'
  3484  00FCD7  64                 	db	100	;'d'
  3485  00FCD8  72                 	db	114	;'r'
  3486  00FCD9  65                 	db	101	;'e'
  3487  00FCDA  73                 	db	115	;'s'
  3488  00FCDB  73                 	db	115	;'s'
  3489  00FCDC  3A                 	db	58	;':'
  3490  00FCDD  20                 	db	32
  3491  00FCDE  30                 	db	48	;'0'
  3492  00FCDF  78                 	db	120	;'x'
  3493  00FCE0  25                 	db	37
  3494  00FCE1  30                 	db	48	;'0'
  3495  00FCE2  32                 	db	50	;'2'
  3496  00FCE3  58                 	db	88	;'X'
  3497  00FCE4  20                 	db	32
  3498  00FCE5  00                 	db	0
  3499  00FCE6                     STR_47:
  3500  00FCE6  53                 	db	83	;'S'
  3501  00FCE7  65                 	db	101	;'e'
  3502  00FCE8  6E                 	db	110	;'n'
  3503  00FCE9  74                 	db	116	;'t'
  3504  00FCEA  20                 	db	32
  3505  00FCEB  4E                 	db	78	;'N'
  3506  00FCEC  45                 	db	69	;'E'
  3507  00FCED  43                 	db	67	;'C'
  3508  00FCEE  20                 	db	32
  3509  00FCEF  63                 	db	99	;'c'
  3510  00FCF0  6F                 	db	111	;'o'
  3511  00FCF1  64                 	db	100	;'d'
  3512  00FCF2  65                 	db	101	;'e'
  3513  00FCF3  20                 	db	32
  3514  00FCF4  30                 	db	48	;'0'
  3515  00FCF5  78                 	db	120	;'x'
  3516  00FCF6  25                 	db	37
  3517  00FCF7  6C                 	db	108	;'l'
  3518  00FCF8  58                 	db	88	;'X'
  3519  00FCF9  20                 	db	32
  3520  00FCFA  00                 	db	0
  3521  00FCFB                     STR_100:
  3522  00FCFB  44                 	db	68	;'D'
  3523  00FCFC  69                 	db	105	;'i'
  3524  00FCFD  61                 	db	97	;'a'
  3525  00FCFE  67                 	db	103	;'g'
  3526  00FCFF  6E                 	db	110	;'n'
  3527  00FD00  6F                 	db	111	;'o'
  3528  00FD01  73                 	db	115	;'s'
  3529  00FD02  74                 	db	116	;'t'
  3530  00FD03  69                 	db	105	;'i'
  3531  00FD04  63                 	db	99	;'c'
  3532  00FD05  20                 	db	32
  3533  00FD06  43                 	db	67	;'C'
  3534  00FD07  6F                 	db	111	;'o'
  3535  00FD08  6D                 	db	109	;'m'
  3536  00FD09  6D                 	db	109	;'m'
  3537  00FD0A  61                 	db	97	;'a'
  3538  00FD0B  6E                 	db	110	;'n'
  3539  00FD0C  64                 	db	100	;'d'
  3540  00FD0D  73                 	db	115	;'s'
  3541  00FD0E  3A                 	db	58	;':'
  3542  00FD0F  00                 	db	0
  3543  00FD10                     STR_86:
  3544  00FD10  46                 	db	70	;'F'
  3545  00FD11  69                 	db	105	;'i'
  3546  00FD12  72                 	db	114	;'r'
  3547  00FD13  6D                 	db	109	;'m'
  3548  00FD14  77                 	db	119	;'w'
  3549  00FD15  61                 	db	97	;'a'
  3550  00FD16  72                 	db	114	;'r'
  3551  00FD17  65                 	db	101	;'e'
  3552  00FD18  20                 	db	32
  3553  00FD19  56                 	db	86	;'V'
  3554  00FD1A  65                 	db	101	;'e'
  3555  00FD1B  72                 	db	114	;'r'
  3556  00FD1C  73                 	db	115	;'s'
  3557  00FD1D  69                 	db	105	;'i'
  3558  00FD1E  6F                 	db	111	;'o'
  3559  00FD1F  6E                 	db	110	;'n'
  3560  00FD20  3A                 	db	58	;':'
  3561  00FD21  20                 	db	32
  3562  00FD22  25                 	db	37
  3563  00FD23  73                 	db	115	;'s'
  3564  00FD24  00                 	db	0
  3565  00FD25                     STR_38:
  3566  00FD25  4E                 	db	78	;'N'
  3567  00FD26  45                 	db	69	;'E'
  3568  00FD27  43                 	db	67	;'C'
  3569  00FD28  20                 	db	32
  3570  00FD29  3D                 	db	61	;'='
  3571  00FD2A  20                 	db	32
  3572  00FD2B  28                 	db	40
  3573  00FD2C  33                 	db	51	;'3'
  3574  00FD2D  32                 	db	50	;'2'
  3575  00FD2E  20                 	db	32
  3576  00FD2F  62                 	db	98	;'b'
  3577  00FD30  69                 	db	105	;'i'
  3578  00FD31  74                 	db	116	;'t'
  3579  00FD32  20                 	db	32
  3580  00FD33  63                 	db	99	;'c'
  3581  00FD34  6F                 	db	111	;'o'
  3582  00FD35  64                 	db	100	;'d'
  3583  00FD36  65                 	db	101	;'e'
  3584  00FD37  29                 	db	41
  3585  00FD38  00                 	db	0
  3586  00FD39                     STR_141:
  3587  00FD39  54                 	db	84	;'T'
  3588  00FD3A  52                 	db	82	;'R'
  3589  00FD3B  30                 	db	48	;'0'
  3590  00FD3C  30                 	db	48	;'0'
  3591  00FD3D  39                 	db	57	;'9'
  3592  00FD3E  20                 	db	32
  3593  00FD3F  43                 	db	67	;'C'
  3594  00FD40  68                 	db	104	;'h'
  3595  00FD41  61                 	db	97	;'a'
  3596  00FD42  6E                 	db	110	;'n'
  3597  00FD43  6E                 	db	110	;'n'
  3598  00FD44  65                 	db	101	;'e'
  3599  00FD45  6C                 	db	108	;'l'
  3600  00FD46  20                 	db	32
  3601  00FD47  44                 	db	68	;'D'
  3602  00FD48  20                 	db	32
  3603  00FD49  4F                 	db	79	;'O'
  3604  00FD4A  46                 	db	70	;'F'
  3605  00FD4B  46                 	db	70	;'F'
  3606  00FD4C  00                 	db	0
  3607  00FD4D                     STR_31:
  3608  00FD4D  73                 	db	115	;'s'
  3609  00FD4E  65                 	db	101	;'e'
  3610  00FD4F  6E                 	db	110	;'n'
  3611  00FD50  74                 	db	116	;'t'
  3612  00FD51  20                 	db	32
  3613  00FD52  4E                 	db	78	;'N'
  3614  00FD53  45                 	db	69	;'E'
  3615  00FD54  43                 	db	67	;'C'
  3616  00FD55  20                 	db	32
  3617  00FD56  63                 	db	99	;'c'
  3618  00FD57  6F                 	db	111	;'o'
  3619  00FD58  64                 	db	100	;'d'
  3620  00FD59  65                 	db	101	;'e'
  3621  00FD5A  20                 	db	32
  3622  00FD5B  30                 	db	48	;'0'
  3623  00FD5C  78                 	db	120	;'x'
  3624  00FD5D  25                 	db	37
  3625  00FD5E  6C                 	db	108	;'l'
  3626  00FD5F  58                 	db	88	;'X'
  3627  00FD60  00                 	db	0
  3628  00FD61                     STR_84:
  3629  00FD61  53                 	db	83	;'S'
  3630  00FD62  75                 	db	117	;'u'
  3631  00FD63  70                 	db	112	;'p'
  3632  00FD64  70                 	db	112	;'p'
  3633  00FD65  6C                 	db	108	;'l'
  3634  00FD66  79                 	db	121	;'y'
  3635  00FD67  20                 	db	32
  3636  00FD68  56                 	db	86	;'V'
  3637  00FD69  6F                 	db	111	;'o'
  3638  00FD6A  6C                 	db	108	;'l'
  3639  00FD6B  74                 	db	116	;'t'
  3640  00FD6C  61                 	db	97	;'a'
  3641  00FD6D  67                 	db	103	;'g'
  3642  00FD6E  65                 	db	101	;'e'
  3643  00FD6F  20                 	db	32
  3644  00FD70  3D                 	db	61	;'='
  3645  00FD71  20                 	db	32
  3646  00FD72  25                 	db	37
  3647  00FD73  66                 	db	102	;'f'
  3648  00FD74  00                 	db	0
  3649  00FD75                     STR_56:
  3650  00FD75  52                 	db	82	;'R'
  3651  00FD76  65                 	db	101	;'e'
  3652  00FD77  6D                 	db	109	;'m'
  3653  00FD78  6F                 	db	111	;'o'
  3654  00FD79  74                 	db	116	;'t'
  3655  00FD7A  65                 	db	101	;'e'
  3656  00FD7B  42                 	db	66	;'B'
  3657  00FD7C  75                 	db	117	;'u'
  3658  00FD7D  74                 	db	116	;'t'
  3659  00FD7E  74                 	db	116	;'t'
  3660  00FD7F  6F                 	db	111	;'o'
  3661  00FD80  6E                 	db	110	;'n'
  3662  00FD81  27                 	db	39
  3663  00FD82  78                 	db	120	;'x'
  3664  00FD83  27                 	db	39
  3665  00FD84  20                 	db	32
  3666  00FD85  73                 	db	115	;'s'
  3667  00FD86  65                 	db	101	;'e'
  3668  00FD87  74                 	db	116	;'t'
  3669  00FD88  00                 	db	0
  3670  00FD89                     STR_135:
  3671  00FD89  52                 	db	82	;'R'
  3672  00FD8A  46                 	db	70	;'F'
  3673  00FD8B  4B                 	db	75	;'K'
  3674  00FD8C  31                 	db	49	;'1'
  3675  00FD8D  30                 	db	48	;'0'
  3676  00FD8E  30                 	db	48	;'0'
  3677  00FD8F  4C                 	db	76	;'L'
  3678  00FD90  43                 	db	67	;'C'
  3679  00FD91  20                 	db	32
  3680  00FD92  43                 	db	67	;'C'
  3681  00FD93  68                 	db	104	;'h'
  3682  00FD94  61                 	db	97	;'a'
  3683  00FD95  6E                 	db	110	;'n'
  3684  00FD96  6E                 	db	110	;'n'
  3685  00FD97  65                 	db	101	;'e'
  3686  00FD98  6C                 	db	108	;'l'
  3687  00FD99  20                 	db	32
  3688  00FD9A  44                 	db	68	;'D'
  3689  00FD9B  00                 	db	0
  3690  00FD9C                     STR_136:
  3691  00FD9C  52                 	db	82	;'R'
  3692  00FD9D  46                 	db	70	;'F'
  3693  00FD9E  4B                 	db	75	;'K'
  3694  00FD9F  31                 	db	49	;'1'
  3695  00FDA0  30                 	db	48	;'0'
  3696  00FDA1  30                 	db	48	;'0'
  3697  00FDA2  4C                 	db	76	;'L'
  3698  00FDA3  43                 	db	67	;'C'
  3699  00FDA4  20                 	db	32
  3700  00FDA5  43                 	db	67	;'C'
  3701  00FDA6  68                 	db	104	;'h'
  3702  00FDA7  61                 	db	97	;'a'
  3703  00FDA8  6E                 	db	110	;'n'
  3704  00FDA9  6E                 	db	110	;'n'
  3705  00FDAA  65                 	db	101	;'e'
  3706  00FDAB  6C                 	db	108	;'l'
  3707  00FDAC  20                 	db	32
  3708  00FDAD  45                 	db	69	;'E'
  3709  00FDAE  00                 	db	0
  3710  00FDAF                     STR_137:
  3711  00FDAF  52                 	db	82	;'R'
  3712  00FDB0  46                 	db	70	;'F'
  3713  00FDB1  4B                 	db	75	;'K'
  3714  00FDB2  31                 	db	49	;'1'
  3715  00FDB3  30                 	db	48	;'0'
  3716  00FDB4  30                 	db	48	;'0'
  3717  00FDB5  4C                 	db	76	;'L'
  3718  00FDB6  43                 	db	67	;'C'
  3719  00FDB7  20                 	db	32
  3720  00FDB8  43                 	db	67	;'C'
  3721  00FDB9  68                 	db	104	;'h'
  3722  00FDBA  61                 	db	97	;'a'
  3723  00FDBB  6E                 	db	110	;'n'
  3724  00FDBC  6E                 	db	110	;'n'
  3725  00FDBD  65                 	db	101	;'e'
  3726  00FDBE  6C                 	db	108	;'l'
  3727  00FDBF  20                 	db	32
  3728  00FDC0  46                 	db	70	;'F'
  3729  00FDC1  00                 	db	0
  3730  00FDC2                     STR_140:
  3731  00FDC2  54                 	db	84	;'T'
  3732  00FDC3  52                 	db	82	;'R'
  3733  00FDC4  30                 	db	48	;'0'
  3734  00FDC5  30                 	db	48	;'0'
  3735  00FDC6  39                 	db	57	;'9'
  3736  00FDC7  20                 	db	32
  3737  00FDC8  43                 	db	67	;'C'
  3738  00FDC9  68                 	db	104	;'h'
  3739  00FDCA  61                 	db	97	;'a'
  3740  00FDCB  6E                 	db	110	;'n'
  3741  00FDCC  6E                 	db	110	;'n'
  3742  00FDCD  65                 	db	101	;'e'
  3743  00FDCE  6C                 	db	108	;'l'
  3744  00FDCF  20                 	db	32
  3745  00FDD0  44                 	db	68	;'D'
  3746  00FDD1  20                 	db	32
  3747  00FDD2  4F                 	db	79	;'O'
  3748  00FDD3  4E                 	db	78	;'N'
  3749  00FDD4  00                 	db	0
  3750  00FDD5                     STR_106:
  3751  00FDD5  52                 	db	82	;'R'
  3752  00FDD6  65                 	db	101	;'e'
  3753  00FDD7  6D                 	db	109	;'m'
  3754  00FDD8  6F                 	db	111	;'o'
  3755  00FDD9  74                 	db	116	;'t'
  3756  00FDDA  65                 	db	101	;'e'
  3757  00FDDB  42                 	db	66	;'B'
  3758  00FDDC  75                 	db	117	;'u'
  3759  00FDDD  74                 	db	116	;'t'
  3760  00FDDE  74                 	db	116	;'t'
  3761  00FDDF  6F                 	db	111	;'o'
  3762  00FDE0  6E                 	db	110	;'n'
  3763  00FDE1  25                 	db	37
  3764  00FDE2  64                 	db	100	;'d'
  3765  00FDE3  20                 	db	32
  3766  00FDE4  73                 	db	115	;'s'
  3767  00FDE5  65                 	db	101	;'e'
  3768  00FDE6  74                 	db	116	;'t'
  3769  00FDE7  00                 	db	0
  3770  00FDE8                     STR_42:
  3771  00FDE8  4E                 	db	78	;'N'
  3772  00FDE9  45                 	db	69	;'E'
  3773  00FDEA  43                 	db	67	;'C'
  3774  00FDEB  20                 	db	32
  3775  00FDEC  3D                 	db	61	;'='
  3776  00FDED  20                 	db	32
  3777  00FDEE  30                 	db	48	;'0'
  3778  00FDEF  78                 	db	120	;'x'
  3779  00FDF0  31                 	db	49	;'1'
  3780  00FDF1  43                 	db	67	;'C'
  3781  00FDF2  45                 	db	69	;'E'
  3782  00FDF3  33                 	db	51	;'3'
  3783  00FDF4  35                 	db	53	;'5'
  3784  00FDF5  30                 	db	48	;'0'
  3785  00FDF6  41                 	db	65	;'A'
  3786  00FDF7  46                 	db	70	;'F'
  3787  00FDF8  20                 	db	32
  3788  00FDF9  00                 	db	0
  3789  00FDFA                     STR_59:
  3790  00FDFA  52                 	db	82	;'R'
  3791  00FDFB  65                 	db	101	;'e'
  3792  00FDFC  6D                 	db	109	;'m'
  3793  00FDFD  6F                 	db	111	;'o'
  3794  00FDFE  74                 	db	116	;'t'
  3795  00FDFF  65                 	db	101	;'e'
  3796  00FE00  42                 	db	66	;'B'
  3797  00FE01  75                 	db	117	;'u'
  3798  00FE02  74                 	db	116	;'t'
  3799  00FE03  74                 	db	116	;'t'
  3800  00FE04  6F                 	db	111	;'o'
  3801  00FE05  6E                 	db	110	;'n'
  3802  00FE06  31                 	db	49	;'1'
  3803  00FE07  20                 	db	32
  3804  00FE08  73                 	db	115	;'s'
  3805  00FE09  65                 	db	101	;'e'
  3806  00FE0A  74                 	db	116	;'t'
  3807  00FE0B  00                 	db	0
  3808  00FE0C                     STR_81:
  3809  00FE0C  53                 	db	83	;'S'
  3810  00FE0D  79                 	db	121	;'y'
  3811  00FE0E  73                 	db	115	;'s'
  3812  00FE0F  74                 	db	116	;'t'
  3813  00FE10  65                 	db	101	;'e'
  3814  00FE11  6D                 	db	109	;'m'
  3815  00FE12  20                 	db	32
  3816  00FE13  77                 	db	119	;'w'
  3817  00FE14  69                 	db	105	;'i'
  3818  00FE15  6C                 	db	108	;'l'
  3819  00FE16  6C                 	db	108	;'l'
  3820  00FE17  20                 	db	32
  3821  00FE18  72                 	db	114	;'r'
  3822  00FE19  65                 	db	101	;'e'
  3823  00FE1A  73                 	db	115	;'s'
  3824  00FE1B  65                 	db	101	;'e'
  3825  00FE1C  74                 	db	116	;'t'
  3826  00FE1D  00                 	db	0
  3827  00FE1E                     STR_152:
  3828  00FE1E  30                 	db	48	;'0'
  3829  00FE1F  31                 	db	49	;'1'
  3830  00FE20  32                 	db	50	;'2'
  3831  00FE21  33                 	db	51	;'3'
  3832  00FE22  34                 	db	52	;'4'
  3833  00FE23  35                 	db	53	;'5'
  3834  00FE24  36                 	db	54	;'6'
  3835  00FE25  37                 	db	55	;'7'
  3836  00FE26  38                 	db	56	;'8'
  3837  00FE27  39                 	db	57	;'9'
  3838  00FE28  41                 	db	65	;'A'
  3839  00FE29  42                 	db	66	;'B'
  3840  00FE2A  43                 	db	67	;'C'
  3841  00FE2B  44                 	db	68	;'D'
  3842  00FE2C  45                 	db	69	;'E'
  3843  00FE2D  46                 	db	70	;'F'
  3844  00FE2E  00                 	db	0
  3845  00FE2F                     STR_93:
  3846  00FE2F  53                 	db	83	;'S'
  3847  00FE30  79                 	db	121	;'y'
  3848  00FE31  73                 	db	115	;'s'
  3849  00FE32  74                 	db	116	;'t'
  3850  00FE33  65                 	db	101	;'e'
  3851  00FE34  6D                 	db	109	;'m'
  3852  00FE35  20                 	db	32
  3853  00FE36  63                 	db	99	;'c'
  3854  00FE37  6F                 	db	111	;'o'
  3855  00FE38  6D                 	db	109	;'m'
  3856  00FE39  6D                 	db	109	;'m'
  3857  00FE3A  61                 	db	97	;'a'
  3858  00FE3B  6E                 	db	110	;'n'
  3859  00FE3C  64                 	db	100	;'d'
  3860  00FE3D  73                 	db	115	;'s'
  3861  00FE3E  3A                 	db	58	;':'
  3862  00FE3F  00                 	db	0
  3863  00FE40                     STR_44:
  3864  00FE40  4E                 	db	78	;'N'
  3865  00FE41  45                 	db	69	;'E'
  3866  00FE42  43                 	db	67	;'C'
  3867  00FE43  20                 	db	32
  3868  00FE44  3D                 	db	61	;'='
  3869  00FE45  20                 	db	32
  3870  00FE46  30                 	db	48	;'0'
  3871  00FE47  78                 	db	120	;'x'
  3872  00FE48  33                 	db	51	;'3'
  3873  00FE49  38                 	db	56	;'8'
  3874  00FE4A  2C                 	db	44
  3875  00FE4B  20                 	db	32
  3876  00FE4C  30                 	db	48	;'0'
  3877  00FE4D  78                 	db	120	;'x'
  3878  00FE4E  30                 	db	48	;'0'
  3879  00FE4F  41                 	db	65	;'A'
  3880  00FE50  00                 	db	0
  3881  00FE51                     STR_55:
  3882  00FE51  52                 	db	82	;'R'
  3883  00FE52  65                 	db	101	;'e'
  3884  00FE53  6D                 	db	109	;'m'
  3885  00FE54  6F                 	db	111	;'o'
  3886  00FE55  74                 	db	116	;'t'
  3887  00FE56  65                 	db	101	;'e'
  3888  00FE57  42                 	db	66	;'B'
  3889  00FE58  75                 	db	117	;'u'
  3890  00FE59  74                 	db	116	;'t'
  3891  00FE5A  74                 	db	116	;'t'
  3892  00FE5B  6F                 	db	111	;'o'
  3893  00FE5C  6E                 	db	110	;'n'
  3894  00FE5D  27                 	db	39
  3895  00FE5E  78                 	db	120	;'x'
  3896  00FE5F  27                 	db	39
  3897  00FE60  00                 	db	0
  3898  00FE61                     STR_88:
  3899  00FE61  50                 	db	80	;'P'
  3900  00FE62  43                 	db	67	;'C'
  3901  00FE63  42                 	db	66	;'B'
  3902  00FE64  20                 	db	32
  3903  00FE65  56                 	db	86	;'V'
  3904  00FE66  65                 	db	101	;'e'
  3905  00FE67  72                 	db	114	;'r'
  3906  00FE68  73                 	db	115	;'s'
  3907  00FE69  69                 	db	105	;'i'
  3908  00FE6A  6F                 	db	111	;'o'
  3909  00FE6B  6E                 	db	110	;'n'
  3910  00FE6C  3A                 	db	58	;':'
  3911  00FE6D  20                 	db	32
  3912  00FE6E  25                 	db	37
  3913  00FE6F  73                 	db	115	;'s'
  3914  00FE70  00                 	db	0
  3915  00FE71                     STR_1:
  3916  00FE71  42                 	db	66	;'B'
  3917  00FE72  75                 	db	117	;'u'
  3918  00FE73  66                 	db	102	;'f'
  3919  00FE74  66                 	db	102	;'f'
  3920  00FE75  65                 	db	101	;'e'
  3921  00FE76  72                 	db	114	;'r'
  3922  00FE77  20                 	db	32
  3923  00FE78  4F                 	db	79	;'O'
  3924  00FE79  76                 	db	118	;'v'
  3925  00FE7A  65                 	db	101	;'e'
  3926  00FE7B  72                 	db	114	;'r'
  3927  00FE7C  66                 	db	102	;'f'
  3928  00FE7D  6C                 	db	108	;'l'
  3929  00FE7E  6F                 	db	111	;'o'
  3930  00FE7F  77                 	db	119	;'w'
  3931  00FE80  00                 	db	0
  3932  00FE81                     STR_104:
  3933  00FE81  52                 	db	82	;'R'
  3934  00FE82  65                 	db	101	;'e'
  3935  00FE83  6D                 	db	109	;'m'
  3936  00FE84  6F                 	db	111	;'o'
  3937  00FE85  74                 	db	116	;'t'
  3938  00FE86  65                 	db	101	;'e'
  3939  00FE87  42                 	db	66	;'B'
  3940  00FE88  75                 	db	117	;'u'
  3941  00FE89  74                 	db	116	;'t'
  3942  00FE8A  74                 	db	116	;'t'
  3943  00FE8B  6F                 	db	111	;'o'
  3944  00FE8C  6E                 	db	110	;'n'
  3945  00FE8D  25                 	db	37
  3946  00FE8E  64                 	db	100	;'d'
  3947  00FE8F  00                 	db	0
  3948  00FE90                     STR_58:
  3949  00FE90  52                 	db	82	;'R'
  3950  00FE91  65                 	db	101	;'e'
  3951  00FE92  6D                 	db	109	;'m'
  3952  00FE93  6F                 	db	111	;'o'
  3953  00FE94  74                 	db	116	;'t'
  3954  00FE95  65                 	db	101	;'e'
  3955  00FE96  42                 	db	66	;'B'
  3956  00FE97  75                 	db	117	;'u'
  3957  00FE98  74                 	db	116	;'t'
  3958  00FE99  74                 	db	116	;'t'
  3959  00FE9A  6F                 	db	111	;'o'
  3960  00FE9B  6E                 	db	110	;'n'
  3961  00FE9C  31                 	db	49	;'1'
  3962  00FE9D  00                 	db	0
  3963  00FE9E                     STR_68:
  3964  00FE9E  57                 	db	87	;'W'
  3965  00FE9F  68                 	db	104	;'h'
  3966  00FEA0  69                 	db	105	;'i'
  3967  00FEA1  63                 	db	99	;'c'
  3968  00FEA2  68                 	db	104	;'h'
  3969  00FEA3  20                 	db	32
  3970  00FEA4  64                 	db	100	;'d'
  3971  00FEA5  65                 	db	101	;'e'
  3972  00FEA6  76                 	db	118	;'v'
  3973  00FEA7  69                 	db	105	;'i'
  3974  00FEA8  63                 	db	99	;'c'
  3975  00FEA9  65                 	db	101	;'e'
  3976  00FEAA  3F                 	db	63	;'?'
  3977  00FEAB  00                 	db	0
  3978  00FEAC                     STR_134:
  3979  00FEAC  52                 	db	82	;'R'
  3980  00FEAD  46                 	db	70	;'F'
  3981  00FEAE  20                 	db	32
  3982  00FEAF  63                 	db	99	;'c'
  3983  00FEB0  6F                 	db	111	;'o'
  3984  00FEB1  6D                 	db	109	;'m'
  3985  00FEB2  6D                 	db	109	;'m'
  3986  00FEB3  61                 	db	97	;'a'
  3987  00FEB4  6E                 	db	110	;'n'
  3988  00FEB5  64                 	db	100	;'d'
  3989  00FEB6  73                 	db	115	;'s'
  3990  00FEB7  3A                 	db	58	;':'
  3991  00FEB8  00                 	db	0
  3992  00FEB9                     STR_103:
  3993  00FEB9  49                 	db	73	;'I'
  3994  00FEBA  52                 	db	82	;'R'
  3995  00FEBB  20                 	db	32
  3996  00FEBC  63                 	db	99	;'c'
  3997  00FEBD  6F                 	db	111	;'o'
  3998  00FEBE  6D                 	db	109	;'m'
  3999  00FEBF  6D                 	db	109	;'m'
  4000  00FEC0  61                 	db	97	;'a'
  4001  00FEC1  6E                 	db	110	;'n'
  4002  00FEC2  64                 	db	100	;'d'
  4003  00FEC3  73                 	db	115	;'s'
  4004  00FEC4  3A                 	db	58	;':'
  4005  00FEC5  00                 	db	0
  4006  00FEC6                     STR_126:
  4007  00FEC6  52                 	db	82	;'R'
  4008  00FEC7  46                 	db	70	;'F'
  4009  00FEC8  20                 	db	32
  4010  00FEC9  63                 	db	99	;'c'
  4011  00FECA  6C                 	db	108	;'l'
  4012  00FECB  65                 	db	101	;'e'
  4013  00FECC  61                 	db	97	;'a'
  4014  00FECD  72                 	db	114	;'r'
  4015  00FECE  20                 	db	32
  4016  00FECF  32                 	db	50	;'2'
  4017  00FED0  2C                 	db	44
  4018  00FED1  42                 	db	66	;'B'
  4019  00FED2  00                 	db	0
  4020  00FED3                     STR_120:
  4021  00FED3  52                 	db	82	;'R'
  4022  00FED4  46                 	db	70	;'F'
  4023  00FED5  20                 	db	32
  4024  00FED6  63                 	db	99	;'c'
  4025  00FED7  6C                 	db	108	;'l'
  4026  00FED8  65                 	db	101	;'e'
  4027  00FED9  61                 	db	97	;'a'
  4028  00FEDA  72                 	db	114	;'r'
  4029  00FEDB  20                 	db	32
  4030  00FEDC  31                 	db	49	;'1'
  4031  00FEDD  2C                 	db	44
  4032  00FEDE  44                 	db	68	;'D'
  4033  00FEDF  00                 	db	0
  4034  00FEE0                     STR_128:
  4035  00FEE0  52                 	db	82	;'R'
  4036  00FEE1  46                 	db	70	;'F'
  4037  00FEE2  20                 	db	32
  4038  00FEE3  63                 	db	99	;'c'
  4039  00FEE4  6C                 	db	108	;'l'
  4040  00FEE5  65                 	db	101	;'e'
  4041  00FEE6  61                 	db	97	;'a'
  4042  00FEE7  72                 	db	114	;'r'
  4043  00FEE8  20                 	db	32
  4044  00FEE9  32                 	db	50	;'2'
  4045  00FEEA  2C                 	db	44
  4046  00FEEB  44                 	db	68	;'D'
  4047  00FEEC  00                 	db	0
  4048  00FEED                     STR_122:
  4049  00FEED  52                 	db	82	;'R'
  4050  00FEEE  46                 	db	70	;'F'
  4051  00FEEF  20                 	db	32
  4052  00FEF0  63                 	db	99	;'c'
  4053  00FEF1  6C                 	db	108	;'l'
  4054  00FEF2  65                 	db	101	;'e'
  4055  00FEF3  61                 	db	97	;'a'
  4056  00FEF4  72                 	db	114	;'r'
  4057  00FEF5  20                 	db	32
  4058  00FEF6  31                 	db	49	;'1'
  4059  00FEF7  2C                 	db	44
  4060  00FEF8  45                 	db	69	;'E'
  4061  00FEF9  00                 	db	0
  4062  00FEFA                     STR_124:
  4063  00FEFA  52                 	db	82	;'R'
  4064  00FEFB  46                 	db	70	;'F'
  4065  00FEFC  20                 	db	32
  4066  00FEFD  63                 	db	99	;'c'
  4067  00FEFE  6C                 	db	108	;'l'
  4068  00FEFF  65                 	db	101	;'e'
  4069  00FF00  61                 	db	97	;'a'
  4070  00FF01  72                 	db	114	;'r'
  4071  00FF02  20                 	db	32
  4072  00FF03  31                 	db	49	;'1'
  4073  00FF04  2C                 	db	44
  4074  00FF05  46                 	db	70	;'F'
  4075  00FF06  00                 	db	0
  4076  00FF07                     STR_130:
  4077  00FF07  52                 	db	82	;'R'
  4078  00FF08  46                 	db	70	;'F'
  4079  00FF09  20                 	db	32
  4080  00FF0A  63                 	db	99	;'c'
  4081  00FF0B  6C                 	db	108	;'l'
  4082  00FF0C  65                 	db	101	;'e'
  4083  00FF0D  61                 	db	97	;'a'
  4084  00FF0E  72                 	db	114	;'r'
  4085  00FF0F  20                 	db	32
  4086  00FF10  32                 	db	50	;'2'
  4087  00FF11  2C                 	db	44
  4088  00FF12  48                 	db	72	;'H'
  4089  00FF13  00                 	db	0
  4090  00FF14                     STR_45:
  4091  00FF14  52                 	db	82	;'R'
  4092  00FF15  65                 	db	101	;'e'
  4093  00FF16  6D                 	db	109	;'m'
  4094  00FF17  6F                 	db	111	;'o'
  4095  00FF18  74                 	db	116	;'t'
  4096  00FF19  65                 	db	101	;'e'
  4097  00FF1A  42                 	db	66	;'B'
  4098  00FF1B  75                 	db	117	;'u'
  4099  00FF1C  74                 	db	116	;'t'
  4100  00FF1D  74                 	db	116	;'t'
  4101  00FF1E  6F                 	db	111	;'o'
  4102  00FF1F  6E                 	db	110	;'n'
  4103  00FF20  00                 	db	0
  4104  00FF21                     STR_114:
  4105  00FF21  52                 	db	82	;'R'
  4106  00FF22  46                 	db	70	;'F'
  4107  00FF23  20                 	db	32
  4108  00FF24  73                 	db	115	;'s'
  4109  00FF25  65                 	db	101	;'e'
  4110  00FF26  74                 	db	116	;'t'
  4111  00FF27  20                 	db	32
  4112  00FF28  32                 	db	50	;'2'
  4113  00FF29  2C                 	db	44
  4114  00FF2A  42                 	db	66	;'B'
  4115  00FF2B  00                 	db	0
  4116  00FF2C                     STR_108:
  4117  00FF2C  52                 	db	82	;'R'
  4118  00FF2D  46                 	db	70	;'F'
  4119  00FF2E  20                 	db	32
  4120  00FF2F  73                 	db	115	;'s'
  4121  00FF30  65                 	db	101	;'e'
  4122  00FF31  74                 	db	116	;'t'
  4123  00FF32  20                 	db	32
  4124  00FF33  31                 	db	49	;'1'
  4125  00FF34  2C                 	db	44
  4126  00FF35  44                 	db	68	;'D'
  4127  00FF36  00                 	db	0
  4128  00FF37                     STR_116:
  4129  00FF37  52                 	db	82	;'R'
  4130  00FF38  46                 	db	70	;'F'
  4131  00FF39  20                 	db	32
  4132  00FF3A  73                 	db	115	;'s'
  4133  00FF3B  65                 	db	101	;'e'
  4134  00FF3C  74                 	db	116	;'t'
  4135  00FF3D  20                 	db	32
  4136  00FF3E  32                 	db	50	;'2'
  4137  00FF3F  2C                 	db	44
  4138  00FF40  44                 	db	68	;'D'
  4139  00FF41  00                 	db	0
  4140  00FF42                     STR_110:
  4141  00FF42  52                 	db	82	;'R'
  4142  00FF43  46                 	db	70	;'F'
  4143  00FF44  20                 	db	32
  4144  00FF45  73                 	db	115	;'s'
  4145  00FF46  65                 	db	101	;'e'
  4146  00FF47  74                 	db	116	;'t'
  4147  00FF48  20                 	db	32
  4148  00FF49  31                 	db	49	;'1'
  4149  00FF4A  2C                 	db	44
  4150  00FF4B  45                 	db	69	;'E'
  4151  00FF4C  00                 	db	0
  4152  00FF4D                     STR_112:
  4153  00FF4D  52                 	db	82	;'R'
  4154  00FF4E  46                 	db	70	;'F'
  4155  00FF4F  20                 	db	32
  4156  00FF50  73                 	db	115	;'s'
  4157  00FF51  65                 	db	101	;'e'
  4158  00FF52  74                 	db	116	;'t'
  4159  00FF53  20                 	db	32
  4160  00FF54  31                 	db	49	;'1'
  4161  00FF55  2C                 	db	44
  4162  00FF56  46                 	db	70	;'F'
  4163  00FF57  00                 	db	0
  4164  00FF58                     STR_118:
  4165  00FF58  52                 	db	82	;'R'
  4166  00FF59  46                 	db	70	;'F'
  4167  00FF5A  20                 	db	32
  4168  00FF5B  73                 	db	115	;'s'
  4169  00FF5C  65                 	db	101	;'e'
  4170  00FF5D  74                 	db	116	;'t'
  4171  00FF5E  20                 	db	32
  4172  00FF5F  32                 	db	50	;'2'
  4173  00FF60  2C                 	db	44
  4174  00FF61  48                 	db	72	;'H'
  4175  00FF62  00                 	db	0
  4176  00FF63                     STR_39:
  4177  00FF63  20                 	db	32
  4178  00FF64  20                 	db	32
  4179  00FF65  20                 	db	32
  4180  00FF66  20                 	db	32
  4181  00FF67  20                 	db	32
  4182  00FF68  20                 	db	32
  4183  00FF69  20                 	db	32
  4184  00FF6A  20                 	db	32
  4185  00FF6B  6F                 	db	111	;'o'
  4186  00FF6C  72                 	db	114	;'r'
  4187  00FF6D  00                 	db	0
  4188  00FF6E                     STR_6:
  4189  00FF6E  53                 	db	83	;'S'
  4190  00FF6F  55                 	db	85	;'U'
  4191  00FF70  2C                 	db	44
  4192  00FF71  20                 	db	32
  4193  00FF72  31                 	db	49	;'1'
  4194  00FF73  31                 	db	49	;'1'
  4195  00FF74  35                 	db	53	;'5'
  4196  00FF75  4B                 	db	75	;'K'
  4197  00FF76  0D                 	db	13
  4198  00FF77  00                 	db	0
  4199  00FF78                     STR_95:
  4200  00FF78  48                 	db	72	;'H'
  4201  00FF79  65                 	db	101	;'e'
  4202  00FF7A  6C                 	db	108	;'l'
  4203  00FF7B  70                 	db	112	;'p'
  4204  00FF7C  20                 	db	32
  4205  00FF7D  4D                 	db	77	;'M'
  4206  00FF7E  65                 	db	101	;'e'
  4207  00FF7F  6E                 	db	110	;'n'
  4208  00FF80  75                 	db	117	;'u'
  4209  00FF81  00                 	db	0
  4210  00FF82                     STR_10:
  4211  00FF82  53                 	db	83	;'S'
  4212  00FF83  59                 	db	89	;'Y'
  4213  00FF84  2C                 	db	44
  4214  00FF85  30                 	db	48	;'0'
  4215  00FF86  30                 	db	48	;'0'
  4216  00FF87  31                 	db	49	;'1'
  4217  00FF88  30                 	db	48	;'0'
  4218  00FF89  0D                 	db	13
  4219  00FF8A  00                 	db	0
  4220  00FF8B                     STR_41:
  4221  00FF8B  45                 	db	69	;'E'
  4222  00FF8C  78                 	db	120	;'x'
  4223  00FF8D  61                 	db	97	;'a'
  4224  00FF8E  6D                 	db	109	;'m'
  4225  00FF8F  70                 	db	112	;'p'
  4226  00FF90  6C                 	db	108	;'l'
  4227  00FF91  65                 	db	101	;'e'
  4228  00FF92  3A                 	db	58	;':'
  4229  00FF93  00                 	db	0
  4230  00FF94                     STR_61:
  4231  00FF94  52                 	db	82	;'R'
  4232  00FF95  46                 	db	70	;'F'
  4233  00FF96  20                 	db	32
  4234  00FF97  63                 	db	99	;'c'
  4235  00FF98  6C                 	db	108	;'l'
  4236  00FF99  65                 	db	101	;'e'
  4237  00FF9A  61                 	db	97	;'a'
  4238  00FF9B  72                 	db	114	;'r'
  4239  00FF9C  00                 	db	0
  4240  00FF9D                     STR_83:
  4241  00FF9D  56                 	db	86	;'V'
  4242  00FF9E  6F                 	db	111	;'o'
  4243  00FF9F  6C                 	db	108	;'l'
  4244  00FFA0  74                 	db	116	;'t'
  4245  00FFA1  61                 	db	97	;'a'
  4246  00FFA2  67                 	db	103	;'g'
  4247  00FFA3  65                 	db	101	;'e'
  4248  00FFA4  00                 	db	0
  4249  00FFA5                     STR_151:
  4250  00FFA5  28                 	db	40
  4251  00FFA6  6E                 	db	110	;'n'
  4252  00FFA7  75                 	db	117	;'u'
  4253  00FFA8  6C                 	db	108	;'l'
  4254  00FFA9  6C                 	db	108	;'l'
  4255  00FFAA  29                 	db	41
  4256  00FFAB  00                 	db	0
  4257  00FFAC                     STR_37:
  4258  00FFAC  55                 	db	85	;'U'
  4259  00FFAD  73                 	db	115	;'s'
  4260  00FFAE  61                 	db	97	;'a'
  4261  00FFAF  67                 	db	103	;'g'
  4262  00FFB0  65                 	db	101	;'e'
  4263  00FFB1  3A                 	db	58	;':'
  4264  00FFB2  00                 	db	0
  4265  00FFB3                     STR_60:
  4266  00FFB3  52                 	db	82	;'R'
  4267  00FFB4  46                 	db	70	;'F'
  4268  00FFB5  20                 	db	32
  4269  00FFB6  73                 	db	115	;'s'
  4270  00FFB7  65                 	db	101	;'e'
  4271  00FFB8  74                 	db	116	;'t'
  4272  00FFB9  00                 	db	0
  4273  00FFBA                     STR_12:
  4274  00FFBA  53                 	db	83	;'S'
  4275  00FFBB  7E                 	db	126
  4276  00FFBC  2C                 	db	44
  4277  00FFBD  30                 	db	48	;'0'
  4278  00FFBE  0D                 	db	13
  4279  00FFBF  00                 	db	0
  4280  00FFC0                     STR_20:
  4281  00FFC0  43                 	db	67	;'C'
  4282  00FFC1  6F                 	db	111	;'o'
  4283  00FFC2  6E                 	db	110	;'n'
  4284  00FFC3  66                 	db	102	;'f'
  4285  00FFC4  31                 	db	49	;'1'
  4286  00FFC5  00                 	db	0
  4287  00FFC6                     STR_22:
  4288  00FFC6  43                 	db	67	;'C'
  4289  00FFC7  6F                 	db	111	;'o'
  4290  00FFC8  6E                 	db	110	;'n'
  4291  00FFC9  66                 	db	102	;'f'
  4292  00FFCA  32                 	db	50	;'2'
  4293  00FFCB  00                 	db	0
  4294  00FFCC                     STR_78:
  4295  00FFCC  52                 	db	82	;'R'
  4296  00FFCD  65                 	db	101	;'e'
  4297  00FFCE  73                 	db	115	;'s'
  4298  00FFCF  65                 	db	101	;'e'
  4299  00FFD0  74                 	db	116	;'t'
  4300  00FFD1  00                 	db	0
  4301  00FFD2                     STR_18:
  4302  00FFD2  2D                 	db	45
  4303  00FFD3  2D                 	db	45
  4304  00FFD4  2D                 	db	45
  4305  00FFD5  0D                 	db	13
  4306  00FFD6  00                 	db	0
  4307  00FFD7                     STR_16:
  4308  00FFD7  44                 	db	68	;'D'
  4309  00FFD8  2C                 	db	44
  4310  00FFD9  30                 	db	48	;'0'
  4311  00FFDA  0D                 	db	13
  4312  00FFDB  00                 	db	0
  4313  00FFDC                     STR_132:
  4314  00FFDC  4E                 	db	78	;'N'
  4315  00FFDD  45                 	db	69	;'E'
  4316  00FFDE  43                 	db	67	;'C'
  4317  00FFDF  3F                 	db	63	;'?'
  4318  00FFE0  00                 	db	0
  4319  00FFE1                     STR_90:
  4320  00FFE1  20                 	db	32
  4321  00FFE2  4D                 	db	77	;'M'
  4322  00FFE3  48                 	db	72	;'H'
  4323  00FFE4  7A                 	db	122	;'z'
  4324  00FFE5  00                 	db	0
  4325  00FFE6                     STR_2:
  4326  00FFE6  24                 	db	36
  4327  00FFE7  24                 	db	36
  4328  00FFE8  24                 	db	36
  4329  00FFE9  00                 	db	0
  4330  00FFEA                     STR_91:
  4331  00FFEA  3F                 	db	63	;'?'
  4332  00FFEB  3F                 	db	63	;'?'
  4333  00FFEC  3F                 	db	63	;'?'
  4334  00FFED  00                 	db	0
  4335  00FFEE                     STR_24:
  4336  00FFEE  4E                 	db	78	;'N'
  4337  00FFEF  45                 	db	69	;'E'
  4338  00FFF0  43                 	db	67	;'C'
  4339  00FFF1  00                 	db	0
  4340  00FFF2                     STR_3:
  4341  00FFF2  43                 	db	67	;'C'
  4342  00FFF3  4D                 	db	77	;'M'
  4343  00FFF4  44                 	db	68	;'D'
  4344  00FFF5  00                 	db	0
  4345  00FFF6                     STR_19:
  4346  00FFF6  45                 	db	69	;'E'
  4347  00FFF7  4E                 	db	78	;'N'
  4348  00FFF8  44                 	db	68	;'D'
  4349  00FFF9  00                 	db	0
  4350  00FFFA                     STR_5:
  4351  00FFFA  41                 	db	65	;'A'
  4352  00FFFB  4F                 	db	79	;'O'
  4353  00FFFC  4B                 	db	75	;'K'
  4354  00FFFD  00                 	db	0
  4355  0000                     
  4356                           ; #config settings
  4357  00FFFE  00                 	db	0	; dummy byte at the end
  4358  0000                     
  4359                           	psect	cinit
  4360  008000                     __pcinit:
  4361                           	opt stack 0
  4362  008000                     start_initialization:
  4363                           	opt stack 0
  4364  008000                     __initialization:
  4365                           	opt stack 0
  4366                           
  4367                           ; Clear objects allocated to BANK7 (200 bytes)
  4368  008000  EE07  F000         	lfsr	0,__pbssBANK7
  4369  008004  0EC8               	movlw	200
  4370  008006                     clear_0:
  4371  008006  6AEE               	clrf	postinc0,c
  4372  008008  06E8               	decf	wreg,f,c
  4373  00800A  E1FD               	bnz	clear_0
  4374                           
  4375                           ; Clear objects allocated to BANK6 (255 bytes)
  4376  00800C  EE06  F000         	lfsr	0,__pbssBANK6
  4377  008010  EE10 F0FF          	lfsr	1,255
  4378  008014                     clear_1:
  4379  008014  6AEE               	clrf	postinc0,c
  4380  008016  50E5               	movf	postdec1,w,c
  4381  008018  50E1               	movf	fsr1l,w,c
  4382  00801A  E1FC               	bnz	clear_1
  4383  00801C  50E2               	movf	fsr1h,w,c
  4384  00801E  E1FA               	bnz	clear_1
  4385                           
  4386                           ; Clear objects allocated to BANK5 (255 bytes)
  4387  008020  EE05  F000         	lfsr	0,__pbssBANK5
  4388  008024  EE10 F0FF          	lfsr	1,255
  4389  008028                     clear_2:
  4390  008028  6AEE               	clrf	postinc0,c
  4391  00802A  50E5               	movf	postdec1,w,c
  4392  00802C  50E1               	movf	fsr1l,w,c
  4393  00802E  E1FC               	bnz	clear_2
  4394  008030  50E2               	movf	fsr1h,w,c
  4395  008032  E1FA               	bnz	clear_2
  4396                           
  4397                           ; Clear objects allocated to BANK4 (136 bytes)
  4398  008034  EE04  F000         	lfsr	0,__pbssBANK4
  4399  008038  0E88               	movlw	136
  4400  00803A                     clear_3:
  4401  00803A  6AEE               	clrf	postinc0,c
  4402  00803C  06E8               	decf	wreg,f,c
  4403  00803E  E1FD               	bnz	clear_3
  4404                           
  4405                           ; Clear objects allocated to BANK2 (23 bytes)
  4406  008040  EE02  F0CF         	lfsr	0,__pbssBANK2
  4407  008044  0E17               	movlw	23
  4408  008046                     clear_4:
  4409  008046  6AEE               	clrf	postinc0,c
  4410  008048  06E8               	decf	wreg,f,c
  4411  00804A  E1FD               	bnz	clear_4
  4412                           
  4413                           ; Clear objects allocated to BANK1 (1 bytes)
  4414  00804C  0101               	movlb	1
  4415  00804E  6BFF               	clrf	__pbssBANK1& (0+255),b
  4416                           
  4417                           ; Clear objects allocated to BANK0 (9 bytes)
  4418  008050  EE00  F0DA         	lfsr	0,__pbssBANK0
  4419  008054  0E09               	movlw	9
  4420  008056                     clear_5:
  4421  008056  6AEE               	clrf	postinc0,c
  4422  008058  06E8               	decf	wreg,f,c
  4423  00805A  E1FD               	bnz	clear_5
  4424                           
  4425                           ; Clear objects allocated to COMRAM (25 bytes)
  4426  00805C  EE00  F023         	lfsr	0,__pbssCOMRAM
  4427  008060  0E19               	movlw	25
  4428  008062                     clear_6:
  4429  008062  6AEE               	clrf	postinc0,c
  4430  008064  06E8               	decf	wreg,f,c
  4431  008066  E1FD               	bnz	clear_6
  4432                           
  4433                           ; Initialize objects allocated to BANK2 (54 bytes)
  4434                           ; load TBLPTR registers with __pidataBANK2
  4435  008068  0E5A               	movlw	low __pidataBANK2
  4436  00806A  6EF6               	movwf	tblptrl,c
  4437  00806C  0E92               	movlw	high __pidataBANK2
  4438  00806E  6EF7               	movwf	tblptrh,c
  4439  008070  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4440  008072  6EF8               	movwf	tblptru,c
  4441  008074  EE02  F099         	lfsr	0,__pdataBANK2
  4442  008078  EE10 F036          	lfsr	1,54
  4443  00807C                     copy_data0:
  4444  00807C  0009               	tblrd		*+
  4445  00807E  CFF5 FFEE          	movff	tablat,postinc0
  4446  008082  50E5               	movf	postdec1,w,c
  4447  008084  50E1               	movf	fsr1l,w,c
  4448  008086  E1FA               	bnz	copy_data0
  4449                           
  4450                           ; Initialize objects allocated to BANK0 (1 bytes)
  4451                           ; load TBLPTR registers with __pidataBANK0
  4452  008088  0EE6               	movlw	low __pidataBANK0
  4453  00808A  6EF6               	movwf	tblptrl,c
  4454  00808C  0E95               	movlw	high __pidataBANK0
  4455  00808E  6EF7               	movwf	tblptrh,c
  4456  008090  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4457  008092  6EF8               	movwf	tblptru,c
  4458  008094  0009               	tblrd		*+	;fetch initializer
  4459  008096  CFF5 F0E3          	movff	tablat,__pdataBANK0
  4460                           
  4461                           ; Initialize objects allocated to COMRAM (9 bytes)
  4462                           ; load TBLPTR registers with __pidataCOMRAM
  4463  00809A  0ED0               	movlw	low __pidataCOMRAM
  4464  00809C  6EF6               	movwf	tblptrl,c
  4465  00809E  0E95               	movlw	high __pidataCOMRAM
  4466  0080A0  6EF7               	movwf	tblptrh,c
  4467  0080A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4468  0080A4  6EF8               	movwf	tblptru,c
  4469  0080A6  EE00  F03C         	lfsr	0,__pdataCOMRAM
  4470  0080AA  EE10 F009          	lfsr	1,9
  4471  0080AE                     copy_data1:
  4472  0080AE  0009               	tblrd		*+
  4473  0080B0  CFF5 FFEE          	movff	tablat,postinc0
  4474  0080B4  50E5               	movf	postdec1,w,c
  4475  0080B6  50E1               	movf	fsr1l,w,c
  4476  0080B8  E1FA               	bnz	copy_data1
  4477  0080BA                     end_of_initialization:
  4478                           	opt stack 0
  4479  0080BA                     __end_of__initialization:
  4480                           	opt stack 0
  4481  0080BA  0100               	movlb	0
  4482  0080BC  EF73  F026         	goto	_main	;jump to C main() function
  4483                           tblptru	equ	0xFF8
  4484                           tblptrh	equ	0xFF7
  4485                           tblptrl	equ	0xFF6
  4486                           tablat	equ	0xFF5
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           postdec1	equ	0xFE5
  4490                           fsr1h	equ	0xFE2
  4491                           fsr1l	equ	0xFE1
  4492                           
  4493                           	psect	bssCOMRAM
  4494  000023                     __pbssCOMRAM:
  4495                           	opt stack 0
  4496  000023                     _IRsendCode:
  4497                           	opt stack 0
  4498  000023                     	ds	4
  4499  000027                     _CommandStringPos:
  4500                           	opt stack 0
  4501  000027                     	ds	1
  4502  000028                     _Conf2_ChannelB_Status:
  4503                           	opt stack 0
  4504  000028                     	ds	1
  4505  000029                     _Conf2_ChannelD_Status:
  4506                           	opt stack 0
  4507  000029                     	ds	1
  4508  00002A                     _Conf2_ChannelH_1_Status:
  4509                           	opt stack 0
  4510  00002A                     	ds	1
  4511  00002B                     _Conf2_ChannelH_2_Status:
  4512                           	opt stack 0
  4513  00002B                     	ds	1
  4514  00002C                     _Conf2_ChannelH_3_Status:
  4515                           	opt stack 0
  4516  00002C                     	ds	1
  4517  00002D                     _IRbit:
  4518                           	opt stack 0
  4519  00002D                     	ds	1
  4520  00002E                     _IRcodeBit:
  4521                           	opt stack 0
  4522  00002E                     	ds	1
  4523  00002F                     _IRpinOLD:
  4524                           	opt stack 0
  4525  00002F                     	ds	1
  4526  000030                     _IRrawCodeNum:
  4527                           	opt stack 0
  4528  000030                     	ds	1
  4529  000031                     _IRrepeatAmount:
  4530                           	opt stack 0
  4531  000031                     	ds	1
  4532  000032                     _IRrepeatflag:
  4533                           	opt stack 0
  4534  000032                     	ds	1
  4535  000033                     _IRsendFlag:
  4536                           	opt stack 0
  4537  000033                     	ds	1
  4538  000034                     _RFConfig:
  4539                           	opt stack 0
  4540  000034                     	ds	1
  4541  000035                     _RFcodeBit:
  4542                           	opt stack 0
  4543  000035                     	ds	1
  4544  000036                     _RFcodePlace:
  4545                           	opt stack 0
  4546  000036                     	ds	1
  4547  000037                     _RFsendFlag:
  4548                           	opt stack 0
  4549  000037                     	ds	1
  4550  000038                     _Sendcount:
  4551                           	opt stack 0
  4552  000038                     	ds	1
  4553  000039                     _Timer1_Postscaler:
  4554                           	opt stack 0
  4555  000039                     	ds	1
  4556  00003A                     _Timer2_Postscaler:
  4557                           	opt stack 0
  4558  00003A                     	ds	1
  4559  00003B                     _Timer3_Postscaler:
  4560                           	opt stack 0
  4561  00003B                     	ds	1
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           postdec1	equ	0xFE5
  4569                           fsr1h	equ	0xFE2
  4570                           fsr1l	equ	0xFE1
  4571                           
  4572                           	psect	dataCOMRAM
  4573  00003C                     __pdataCOMRAM:
  4574                           	opt stack 0
  4575  00003C                     _SN:
  4576                           	opt stack 0
  4577  00003C                     	ds	4
  4578  000040                     _IRbitPosition:
  4579                           	opt stack 0
  4580  000040                     	ds	1
  4581  000041                     _IRcodePlace:
  4582                           	opt stack 0
  4583  000041                     	ds	1
  4584  000042                     _RF_IR:
  4585                           	opt stack 0
  4586  000042                     	ds	1
  4587  000043                     _RF_IR_Postscaler:
  4588                           	opt stack 0
  4589  000043                     	ds	1
  4590  000044                     _ReceivingIR:
  4591                           	opt stack 0
  4592  000044                     	ds	1
  4593                           tblptru	equ	0xFF8
  4594                           tblptrh	equ	0xFF7
  4595                           tblptrl	equ	0xFF6
  4596                           tablat	equ	0xFF5
  4597                           postinc0	equ	0xFEE
  4598                           wreg	equ	0xFE8
  4599                           postdec1	equ	0xFE5
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           
  4603                           	psect	bssBANK0
  4604  0000DA                     __pbssBANK0:
  4605                           	opt stack 0
  4606  0000DA                     _IRmod:
  4607                           	opt stack 0
  4608  0000DA                     	ds	1
  4609  0000DB                     _NewReceivedString:
  4610                           	opt stack 0
  4611  0000DB                     	ds	1
  4612  0000DC                     _ReceivedStringPos:
  4613                           	opt stack 0
  4614  0000DC                     	ds	1
  4615  0000DD                     _IR_NEC:
  4616                           	opt stack 0
  4617  0000DD                     	ds	4
  4618  0000E1                     _IR_New_Code:
  4619                           	opt stack 0
  4620  0000E1                     	ds	1
  4621  0000E2                     _IRaddress:
  4622                           	opt stack 0
  4623  0000E2                     	ds	1
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           postinc0	equ	0xFEE
  4629                           wreg	equ	0xFE8
  4630                           postdec1	equ	0xFE5
  4631                           fsr1h	equ	0xFE2
  4632                           fsr1l	equ	0xFE1
  4633                           
  4634                           	psect	dataBANK0
  4635  0000E3                     __pdataBANK0:
  4636                           	opt stack 0
  4637  0000E3                     _Sent:
  4638                           	opt stack 0
  4639  0000E3                     	ds	1
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           postdec1	equ	0xFE5
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           
  4650                           	psect	bssBANK1
  4651  0001FF                     __pbssBANK1:
  4652                           	opt stack 0
  4653  0001FF                     _IRcommand:
  4654                           	opt stack 0
  4655  0001FF                     	ds	1
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           postinc0	equ	0xFEE
  4661                           wreg	equ	0xFE8
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           
  4666                           	psect	bssBANK2
  4667  0002CF                     __pbssBANK2:
  4668                           	opt stack 0
  4669  0002CF                     _RFsendCode:
  4670                           	opt stack 0
  4671  0002CF                     	ds	20
  4672  0002E3                     _BatteryVoltage:
  4673                           	opt stack 0
  4674  0002E3                     	ds	3
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           postinc0	equ	0xFEE
  4680                           wreg	equ	0xFE8
  4681                           postdec1	equ	0xFE5
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           
  4685                           	psect	dataBANK2
  4686  000299                     __pdataBANK2:
  4687                           	opt stack 0
  4688  000299                     _ProductName:
  4689                           	opt stack 0
  4690  000299                     	ds	50
  4691  0002CB                     _IRtimeout:
  4692                           	opt stack 0
  4693  0002CB                     	ds	4
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           postinc0	equ	0xFEE
  4699                           wreg	equ	0xFE8
  4700                           postdec1	equ	0xFE5
  4701                           fsr1h	equ	0xFE2
  4702                           fsr1l	equ	0xFE1
  4703                           
  4704                           	psect	bssBANK4
  4705  000400                     __pbssBANK4:
  4706                           	opt stack 0
  4707  000400                     _Global:
  4708                           	opt stack 0
  4709  000400                     	ds	136
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           postinc0	equ	0xFEE
  4715                           wreg	equ	0xFE8
  4716                           postdec1	equ	0xFE5
  4717                           fsr1h	equ	0xFE2
  4718                           fsr1l	equ	0xFE1
  4719                           
  4720                           	psect	bssBANK5
  4721  000500                     __pbssBANK5:
  4722                           	opt stack 0
  4723  000500                     _CommandString:
  4724                           	opt stack 0
  4725  000500                     	ds	255
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           
  4736                           	psect	bssBANK6
  4737  000600                     __pbssBANK6:
  4738                           	opt stack 0
  4739  000600                     _ReceivedString:
  4740                           	opt stack 0
  4741  000600                     	ds	255
  4742                           tblptru	equ	0xFF8
  4743                           tblptrh	equ	0xFF7
  4744                           tblptrl	equ	0xFF6
  4745                           tablat	equ	0xFF5
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           
  4752                           	psect	bssBANK7
  4753  000700                     __pbssBANK7:
  4754                           	opt stack 0
  4755  000700                     _IRRawCode:
  4756                           	opt stack 0
  4757  000700                     	ds	200
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           postinc0	equ	0xFEE
  4763                           wreg	equ	0xFE8
  4764                           postdec1	equ	0xFE5
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           
  4768                           	psect	cstackBANK3
  4769  000300                     __pcstackBANK3:
  4770                           	opt stack 0
  4771  000300                     main@BluetoothString:
  4772                           	opt stack 0
  4773                           
  4774                           ; 255 bytes @ 0x0
  4775  000300                     	ds	255
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           postinc0	equ	0xFEE
  4781                           wreg	equ	0xFE8
  4782                           postdec1	equ	0xFE5
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           
  4786                           	psect	cstackBANK2
  4787  000200                     __pcstackBANK2:
  4788                           	opt stack 0
  4789  000200                     UseBluetooth@String:
  4790                           	opt stack 0
  4791                           
  4792                           ; 2 bytes @ 0x0
  4793  000200                     	ds	2
  4794  000202                     UseBluetooth@StringPos:
  4795                           	opt stack 0
  4796                           
  4797                           ; 1 bytes @ 0x2
  4798  000202                     	ds	1
  4799  000203                     ??_UseBluetooth:
  4800                           
  4801                           ; 0 bytes @ 0x3
  4802  000203                     	ds	12
  4803  00020F                     UseBluetooth@buf:
  4804                           	opt stack 0
  4805                           
  4806                           ; 100 bytes @ 0xF
  4807  00020F                     	ds	100
  4808  000273                     UseBluetooth@rfchannelSTR:
  4809                           	opt stack 0
  4810                           
  4811                           ; 10 bytes @ 0x73
  4812  000273                     	ds	10
  4813  00027D                     UseBluetooth@set:
  4814                           	opt stack 0
  4815                           
  4816                           ; 1 bytes @ 0x7D
  4817  00027D                     	ds	1
  4818  00027E                     UseBluetooth@tempNec:
  4819                           	opt stack 0
  4820                           
  4821                           ; 4 bytes @ 0x7E
  4822  00027E                     	ds	4
  4823  000282                     UseBluetooth@timeout:
  4824                           	opt stack 0
  4825                           
  4826                           ; 1 bytes @ 0x82
  4827  000282                     	ds	1
  4828  000283                     UseBluetooth@EmptyPlace:
  4829                           	opt stack 0
  4830                           
  4831                           ; 1 bytes @ 0x83
  4832  000283                     	ds	1
  4833  000284                     UseBluetooth@device:
  4834                           	opt stack 0
  4835                           
  4836                           ; 1 bytes @ 0x84
  4837  000284                     	ds	1
  4838  000285                     UseBluetooth@EnteredNEC:
  4839                           	opt stack 0
  4840                           
  4841                           ; 4 bytes @ 0x85
  4842  000285                     	ds	4
  4843  000289                     UseBluetooth@ok:
  4844                           	opt stack 0
  4845                           
  4846                           ; 1 bytes @ 0x89
  4847  000289                     	ds	1
  4848  00028A                     UseBluetooth@tempRFArray:
  4849                           	opt stack 0
  4850                           
  4851                           ; 1 bytes @ 0x8A
  4852  00028A                     	ds	1
  4853  00028B                     UseBluetooth@rfconf:
  4854                           	opt stack 0
  4855                           
  4856                           ; 1 bytes @ 0x8B
  4857  00028B                     	ds	1
  4858  00028C                     UseBluetooth@NecAddress:
  4859                           	opt stack 0
  4860                           
  4861                           ; 1 bytes @ 0x8C
  4862  00028C                     	ds	1
  4863  00028D                     UseBluetooth@NecCommand:
  4864                           	opt stack 0
  4865                           
  4866                           ; 1 bytes @ 0x8D
  4867  00028D                     	ds	1
  4868  00028E                     UseBluetooth@temp:
  4869                           	opt stack 0
  4870                           
  4871                           ; 4 bytes @ 0x8E
  4872  00028E                     	ds	4
  4873  000292                     UseBluetooth@i:
  4874                           	opt stack 0
  4875                           
  4876                           ; 1 bytes @ 0x92
  4877  000292                     	ds	1
  4878  000293                     main@Bluetoothtask:
  4879                           	opt stack 0
  4880                           
  4881                           ; 1 bytes @ 0x93
  4882  000293                     	ds	1
  4883  000294                     main@BluetoothStringPos:
  4884                           	opt stack 0
  4885                           
  4886                           ; 1 bytes @ 0x94
  4887  000294                     	ds	1
  4888  000295                     main@ConnectedOLD:
  4889                           	opt stack 0
  4890                           
  4891                           ; 1 bytes @ 0x95
  4892  000295                     	ds	1
  4893  000296                     main@VoltageStatus:
  4894                           	opt stack 0
  4895                           
  4896                           ; 1 bytes @ 0x96
  4897  000296                     	ds	1
  4898  000297                     main@i:
  4899                           	opt stack 0
  4900                           
  4901                           ; 1 bytes @ 0x97
  4902  000297                     	ds	1
  4903  000298                     main@Connected:
  4904                           	opt stack 0
  4905                           
  4906                           ; 1 bytes @ 0x98
  4907  000298                     	ds	1
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           postdec1	equ	0xFE5
  4915                           fsr1h	equ	0xFE2
  4916                           fsr1l	equ	0xFE1
  4917                           
  4918                           	psect	cstackBANK1
  4919  000100                     __pcstackBANK1:
  4920                           	opt stack 0
  4921  000100                     ??_sprintf:
  4922  000100                     ?_SetEEPROM:
  4923                           	opt stack 0
  4924  000100                     SyncEEPROMToGlobal@k:
  4925                           	opt stack 0
  4926  000100                     _InitUART$3806:
  4927                           	opt stack 0
  4928  000100                     SetEEPROM@Temp:
  4929                           	opt stack 0
  4930  000100                     StringAddEqual@temp:
  4931                           	opt stack 0
  4932                           
  4933                           ; 255 bytes @ 0x0
  4934  000100                     	ds	1
  4935  000101                     SyncEEPROMToGlobal@i:
  4936                           	opt stack 0
  4937                           
  4938                           ; 1 bytes @ 0x1
  4939  000101                     	ds	1
  4940  000102                     SyncEEPROMToGlobal@j:
  4941                           	opt stack 0
  4942                           
  4943                           ; 1 bytes @ 0x2
  4944  000102                     	ds	1
  4945  000103                     InitUART@spbrg:
  4946                           	opt stack 0
  4947  000103                     SyncEEPROMToGlobal@Temp:
  4948                           	opt stack 0
  4949                           
  4950                           ; 136 bytes @ 0x3
  4951  000103                     	ds	2
  4952  000105                     InitUART@config:
  4953                           	opt stack 0
  4954                           
  4955                           ; 1 bytes @ 0x5
  4956  000105                     	ds	1
  4957  000106                     _sprintf$3810:
  4958                           	opt stack 0
  4959  000106                     InitUART@temp:
  4960                           	opt stack 0
  4961                           
  4962                           ; 4 bytes @ 0x6
  4963  000106                     	ds	3
  4964  000109                     sprintf@idx:
  4965                           	opt stack 0
  4966                           
  4967                           ; 1 bytes @ 0x9
  4968  000109                     	ds	1
  4969  00010A                     sprintf@cp:
  4970                           	opt stack 0
  4971                           
  4972                           ; 2 bytes @ 0xA
  4973  00010A                     	ds	2
  4974  00010C                     sprintf@len:
  4975                           	opt stack 0
  4976                           
  4977                           ; 2 bytes @ 0xC
  4978  00010C                     	ds	2
  4979  00010E                     sprintf@ap:
  4980                           	opt stack 0
  4981                           
  4982                           ; 2 bytes @ 0xE
  4983  00010E                     	ds	2
  4984  000110                     sprintf@prec:
  4985                           	opt stack 0
  4986                           
  4987                           ; 2 bytes @ 0x10
  4988  000110                     	ds	2
  4989  000112                     sprintf@tmpval:
  4990                           	opt stack 0
  4991                           
  4992                           ; 4 bytes @ 0x12
  4993  000112                     	ds	4
  4994  000116                     sprintf@exp:
  4995                           	opt stack 0
  4996                           
  4997                           ; 2 bytes @ 0x16
  4998  000116                     	ds	2
  4999  000118                     sprintf@val:
  5000                           	opt stack 0
  5001                           
  5002                           ; 4 bytes @ 0x18
  5003  000118                     	ds	4
  5004  00011C                     sprintf@fval:
  5005                           	opt stack 0
  5006                           
  5007                           ; 3 bytes @ 0x1C
  5008  00011C                     	ds	3
  5009  00011F                     sprintf@width:
  5010                           	opt stack 0
  5011                           
  5012                           ; 2 bytes @ 0x1F
  5013  00011F                     	ds	2
  5014  000121                     sprintf@flag:
  5015                           	opt stack 0
  5016                           
  5017                           ; 2 bytes @ 0x21
  5018  000121                     	ds	2
  5019  000123                     sprintf@c:
  5020                           	opt stack 0
  5021                           
  5022                           ; 1 bytes @ 0x23
  5023  000123                     	ds	1
  5024  000124                     BluetoothInitialSetup@RFchannel:
  5025                           	opt stack 0
  5026                           
  5027                           ; 10 bytes @ 0x24
  5028  000124                     	ds	10
  5029  00012E                     BluetoothInitialSetup@buf:
  5030                           	opt stack 0
  5031                           
  5032                           ; 50 bytes @ 0x2E
  5033  00012E                     	ds	50
  5034  000160                     BluetoothInitialSetup@ok:
  5035                           	opt stack 0
  5036                           
  5037                           ; 1 bytes @ 0x60
  5038  000160                     	ds	40
  5039  000188                     SetEEPROM@burn:
  5040                           	opt stack 0
  5041                           
  5042                           ; 4 bytes @ 0x88
  5043  000188                     	ds	119
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           postinc0	equ	0xFEE
  5049                           wreg	equ	0xFE8
  5050                           postdec1	equ	0xFE5
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           
  5054                           	psect	cstackBANK0
  5055  000060                     __pcstackBANK0:
  5056                           	opt stack 0
  5057  000060                     IRrawToNEC@NECtemp:
  5058                           	opt stack 0
  5059                           
  5060                           ; 4 bytes @ 0x0
  5061  000060                     	ds	4
  5062  000064                     IRrawToNEC@first:
  5063                           	opt stack 0
  5064                           
  5065                           ; 1 bytes @ 0x4
  5066  000064                     	ds	1
  5067  000065                     IRrawToNEC@i:
  5068                           	opt stack 0
  5069                           
  5070                           ; 1 bytes @ 0x5
  5071  000065                     	ds	1
  5072  000066                     IRrawToNEC@StartBit:
  5073                           	opt stack 0
  5074                           
  5075                           ; 1 bytes @ 0x6
  5076  000066                     	ds	1
  5077  000067                     ??_high_isr:
  5078                           
  5079                           ; 0 bytes @ 0x7
  5080  000067                     	ds	18
  5081  000079                     high_isr@IRpin:
  5082                           	opt stack 0
  5083                           
  5084                           ; 1 bytes @ 0x19
  5085  000079                     	ds	1
  5086  00007A                     high_isr@Time0:
  5087                           	opt stack 0
  5088                           
  5089                           ; 2 bytes @ 0x1A
  5090  00007A                     	ds	2
  5091  00007C                     ??_isdigit:
  5092  00007C                     ??_Reverse_Byte:
  5093  00007C                     ?_ReadEEPROM_1Byte:
  5094                           	opt stack 0
  5095  00007C                     ?___awmod:
  5096                           	opt stack 0
  5097  00007C                     ?___ftpack:
  5098                           	opt stack 0
  5099  00007C                     ?___ftneg:
  5100                           	opt stack 0
  5101  00007C                     ?__tdiv_to_l_:
  5102                           	opt stack 0
  5103  00007C                     ?__div_to_l_:
  5104                           	opt stack 0
  5105  00007C                     ?_Reverse_4Byte:
  5106                           	opt stack 0
  5107  00007C                     ?___lmul:
  5108                           	opt stack 0
  5109  00007C                     ?___lldiv:
  5110                           	opt stack 0
  5111  00007C                     IsLetter@data:
  5112                           	opt stack 0
  5113  00007C                     UARTchar@data:
  5114                           	opt stack 0
  5115  00007C                     ReadUSART@data:
  5116                           	opt stack 0
  5117  00007C                     cleanBuffer@data:
  5118                           	opt stack 0
  5119  00007C                     cleanBuffer16bit@data:
  5120                           	opt stack 0
  5121  00007C                     StringMatch@This:
  5122                           	opt stack 0
  5123  00007C                     StringContains@This:
  5124                           	opt stack 0
  5125  00007C                     lowercaseString@Input:
  5126                           	opt stack 0
  5127  00007C                     lowercaseChar@Input:
  5128                           	opt stack 0
  5129  00007C                     GetStringAfterComma@This:
  5130                           	opt stack 0
  5131  00007C                     OpenUSART@spbrg:
  5132                           	opt stack 0
  5133  00007C                     ReadEEPROM_1Byte@address:
  5134                           	opt stack 0
  5135  00007C                     WriteEEPROM_1Byte@address:
  5136                           	opt stack 0
  5137  00007C                     SendRF@Code:
  5138                           	opt stack 0
  5139  00007C                     ___awmod@dividend:
  5140                           	opt stack 0
  5141  00007C                     __div_to_l_@f1:
  5142                           	opt stack 0
  5143  00007C                     ___ftpack@arg:
  5144                           	opt stack 0
  5145  00007C                     __tdiv_to_l_@f1:
  5146                           	opt stack 0
  5147  00007C                     ___ftge@ff1:
  5148                           	opt stack 0
  5149  00007C                     ___ftneg@f1:
  5150                           	opt stack 0
  5151  00007C                     delayUS@US:
  5152                           	opt stack 0
  5153  00007C                     Reverse_4Byte@This:
  5154                           	opt stack 0
  5155  00007C                     ___lmul@multiplier:
  5156                           	opt stack 0
  5157  00007C                     ___lldiv@dividend:
  5158                           	opt stack 0
  5159                           
  5160                           ; 4 bytes @ 0x1C
  5161  00007C                     	ds	1
  5162  00007D                     _isdigit$3485:
  5163                           	opt stack 0
  5164  00007D                     UARTstring@data:
  5165                           	opt stack 0
  5166                           
  5167                           ; 2 bytes @ 0x1D
  5168  00007D                     	ds	1
  5169  00007E                     Reverse_Byte@temp:
  5170                           	opt stack 0
  5171  00007E                     GetStringAfterComma@CommaNumber:
  5172                           	opt stack 0
  5173  00007E                     OpenUSART@config:
  5174                           	opt stack 0
  5175  00007E                     ReadEEPROM_1Byte@GIEstatus:
  5176                           	opt stack 0
  5177  00007E                     WriteEEPROM_1Byte@data:
  5178                           	opt stack 0
  5179  00007E                     SendRF@Config:
  5180                           	opt stack 0
  5181  00007E                     isdigit@c:
  5182                           	opt stack 0
  5183  00007E                     cleanBuffer@count:
  5184                           	opt stack 0
  5185  00007E                     cleanBuffer16bit@count:
  5186                           	opt stack 0
  5187  00007E                     StringMatch@That:
  5188                           	opt stack 0
  5189  00007E                     StringContains@That:
  5190                           	opt stack 0
  5191  00007E                     ___awmod@divisor:
  5192                           	opt stack 0
  5193                           
  5194                           ; 2 bytes @ 0x1E
  5195  00007E                     	ds	1
  5196  00007F                     Reverse_Byte@This:
  5197                           	opt stack 0
  5198  00007F                     ReadEEPROM_1Byte@PEIEstatus:
  5199                           	opt stack 0
  5200  00007F                     WriteEEPROM_1Byte@GIEstatus:
  5201                           	opt stack 0
  5202  00007F                     SendRF@size:
  5203                           	opt stack 0
  5204  00007F                     ___ftpack@exp:
  5205                           	opt stack 0
  5206  00007F                     StringMatchCaseInsensitive@This:
  5207                           	opt stack 0
  5208  00007F                     StringContainsCaseInsensitive@This:
  5209                           	opt stack 0
  5210  00007F                     GetStringAfterComma@result:
  5211                           	opt stack 0
  5212  00007F                     UARTstringCRLN@data:
  5213                           	opt stack 0
  5214  00007F                     UARTcommandMenu@Command:
  5215                           	opt stack 0
  5216  00007F                     __div_to_l_@f2:
  5217                           	opt stack 0
  5218  00007F                     __tdiv_to_l_@f2:
  5219                           	opt stack 0
  5220  00007F                     ___ftge@ff2:
  5221                           	opt stack 0
  5222                           
  5223                           ; 3 bytes @ 0x1F
  5224  00007F                     	ds	1
  5225  000080                     ??_delayUS:
  5226  000080                     ??_cleanBuffer:
  5227  000080                     ??_cleanBuffer16bit:
  5228  000080                     ??_StringMatch:
  5229  000080                     ??_StringContains:
  5230  000080                     ??_Reverse_4Byte:
  5231  000080                     ?_GetMemoryChar:
  5232                           	opt stack 0
  5233  000080                     ?_GetMemoryLong:
  5234                           	opt stack 0
  5235  000080                     ?_EncodeNEC:
  5236                           	opt stack 0
  5237  000080                     WriteEEPROM_1Byte@PEIEstatus:
  5238                           	opt stack 0
  5239  000080                     EncodeNEC@command:
  5240                           	opt stack 0
  5241  000080                     SendRF@RepeatAmount:
  5242                           	opt stack 0
  5243  000080                     ___awmod@counter:
  5244                           	opt stack 0
  5245  000080                     ___ftpack@sign:
  5246                           	opt stack 0
  5247  000080                     DecodeNEC@Nec:
  5248                           	opt stack 0
  5249  000080                     ___lmul@multiplicand:
  5250                           	opt stack 0
  5251  000080                     ___lldiv@divisor:
  5252                           	opt stack 0
  5253                           
  5254                           ; 4 bytes @ 0x20
  5255  000080                     	ds	1
  5256  000081                     ??___ftpack:
  5257  000081                     ??_SendRF:
  5258  000081                     StringContains@begin:
  5259                           	opt stack 0
  5260  000081                     ___awmod@sign:
  5261                           	opt stack 0
  5262  000081                     StringMatchCaseInsensitive@That:
  5263                           	opt stack 0
  5264  000081                     StringContainsCaseInsensitive@That:
  5265                           	opt stack 0
  5266  000081                     UARTcommandMenu@Desc:
  5267                           	opt stack 0
  5268  000081                     delayUS@i:
  5269                           	opt stack 0
  5270                           
  5271                           ; 4 bytes @ 0x21
  5272  000081                     	ds	1
  5273  000082                     ??__tdiv_to_l_:
  5274  000082                     ??___ftge:
  5275  000082                     ?___awdiv:
  5276                           	opt stack 0
  5277  000082                     GetStringAfterComma@tempCommaNumber:
  5278                           	opt stack 0
  5279  000082                     ___awdiv@dividend:
  5280                           	opt stack 0
  5281  000082                     __div_to_l_@quot:
  5282                           	opt stack 0
  5283                           
  5284                           ; 4 bytes @ 0x22
  5285  000082                     	ds	1
  5286  000083                     ??_UARTcommandMenu:
  5287  000083                     cleanBuffer@i:
  5288                           	opt stack 0
  5289  000083                     cleanBuffer16bit@i:
  5290                           	opt stack 0
  5291  000083                     StringMatchCaseInsensitive@tempThis:
  5292                           	opt stack 0
  5293  000083                     StringContainsCaseInsensitive@begin:
  5294                           	opt stack 0
  5295  000083                     GetStringAfterComma@count:
  5296                           	opt stack 0
  5297  000083                     SendRF@i:
  5298                           	opt stack 0
  5299                           
  5300                           ; 1 bytes @ 0x23
  5301  000083                     	ds	1
  5302  000084                     ??_GetMemoryLong:
  5303  000084                     ??_EncodeNEC:
  5304  000084                     ?___altoft:
  5305                           	opt stack 0
  5306  000084                     ?___lltoft:
  5307                           	opt stack 0
  5308  000084                     ?___lwtoft:
  5309                           	opt stack 0
  5310  000084                     StringMatchCaseInsensitive@tempThat:
  5311                           	opt stack 0
  5312  000084                     StringContainsCaseInsensitive@tempThis:
  5313                           	opt stack 0
  5314  000084                     GetMemoryChar@AddressFirst:
  5315                           	opt stack 0
  5316  000084                     BufferCopy@from:
  5317                           	opt stack 0
  5318  000084                     DecodeNEC@address:
  5319                           	opt stack 0
  5320  000084                     SendRF_wait@Code:
  5321                           	opt stack 0
  5322  000084                     ___awdiv@divisor:
  5323                           	opt stack 0
  5324  000084                     ___lwtoft@c:
  5325                           	opt stack 0
  5326  000084                     ___lmul@product:
  5327                           	opt stack 0
  5328  000084                     ___altoft@c:
  5329                           	opt stack 0
  5330  000084                     ___lldiv@quotient:
  5331                           	opt stack 0
  5332  000084                     ___lltoft@c:
  5333                           	opt stack 0
  5334                           
  5335                           ; 4 bytes @ 0x24
  5336  000084                     	ds	1
  5337  000085                     StringContainsCaseInsensitive@tempThat:
  5338                           	opt stack 0
  5339  000085                     GetMemoryChar@H:
  5340                           	opt stack 0
  5341  000085                     ReadCodeButtons@temp:
  5342                           	opt stack 0
  5343  000085                     EnterCommandMode@count:
  5344                           	opt stack 0
  5345  000085                     WaitForIRsignal@timeout:
  5346                           	opt stack 0
  5347  000085                     InternalADC_Read@ADCcounts:
  5348                           	opt stack 0
  5349  000085                     __tdiv_to_l_@quot:
  5350                           	opt stack 0
  5351                           
  5352                           ; 4 bytes @ 0x25
  5353  000085                     	ds	1
  5354  000086                     SetMemoryChar@AddressFirst:
  5355                           	opt stack 0
  5356  000086                     SendRF_wait@Config:
  5357                           	opt stack 0
  5358  000086                     ___awdiv@counter:
  5359                           	opt stack 0
  5360  000086                     __div_to_l_@cntr:
  5361                           	opt stack 0
  5362  000086                     BufferCopy@to:
  5363                           	opt stack 0
  5364  000086                     DecodeNEC@command:
  5365                           	opt stack 0
  5366                           
  5367                           ; 2 bytes @ 0x26
  5368  000086                     	ds	1
  5369  000087                     ??_InternalADC_Read:
  5370  000087                     ?___ftdiv:
  5371                           	opt stack 0
  5372  000087                     SetMemoryChar@Test:
  5373                           	opt stack 0
  5374  000087                     SendRF_wait@size:
  5375                           	opt stack 0
  5376  000087                     ___awdiv@sign:
  5377                           	opt stack 0
  5378  000087                     __div_to_l_@exp1:
  5379                           	opt stack 0
  5380  000087                     ___ftdiv@f1:
  5381                           	opt stack 0
  5382                           
  5383                           ; 3 bytes @ 0x27
  5384  000087                     	ds	1
  5385  000088                     ??_DecodeNEC:
  5386  000088                     ??___altoft:
  5387  000088                     ??___lltoft:
  5388  000088                     BufferCopy@count:
  5389                           	opt stack 0
  5390  000088                     UARTcommandMenu@i:
  5391                           	opt stack 0
  5392  000088                     SetMemoryChar@Data:
  5393                           	opt stack 0
  5394  000088                     SendRF_wait@amount:
  5395                           	opt stack 0
  5396  000088                     ___lldiv@counter:
  5397                           	opt stack 0
  5398  000088                     GetNumber@This:
  5399                           	opt stack 0
  5400  000088                     ___awdiv@quotient:
  5401                           	opt stack 0
  5402  000088                     Reverse_4Byte@temp:
  5403                           	opt stack 0
  5404                           
  5405                           ; 4 bytes @ 0x28
  5406  000088                     	ds	1
  5407  000089                     ?___llmod:
  5408                           	opt stack 0
  5409  000089                     BufferCopy@shift:
  5410                           	opt stack 0
  5411  000089                     UARTcommandMenu@place:
  5412                           	opt stack 0
  5413  000089                     InternalADC_Read@AnaChanSel:
  5414                           	opt stack 0
  5415  000089                     SendRF_Channel@channel:
  5416                           	opt stack 0
  5417  000089                     __tdiv_to_l_@cntr:
  5418                           	opt stack 0
  5419  000089                     ___llmod@dividend:
  5420                           	opt stack 0
  5421                           
  5422                           ; 4 bytes @ 0x29
  5423  000089                     	ds	1
  5424  00008A                     ?___wmul:
  5425                           	opt stack 0
  5426  00008A                     BufferCopy@i:
  5427                           	opt stack 0
  5428  00008A                     GetNumber@CommaNumber:
  5429                           	opt stack 0
  5430  00008A                     InternalADC_Read@channel:
  5431                           	opt stack 0
  5432  00008A                     __tdiv_to_l_@exp1:
  5433                           	opt stack 0
  5434  00008A                     ___wmul@multiplier:
  5435                           	opt stack 0
  5436  00008A                     ___ftdiv@f2:
  5437                           	opt stack 0
  5438                           
  5439                           ; 3 bytes @ 0x2A
  5440  00008A                     	ds	1
  5441  00008B                     GetNumber@result:
  5442                           	opt stack 0
  5443  00008B                     StringAddEqual@Input:
  5444                           	opt stack 0
  5445                           
  5446                           ; 2 bytes @ 0x2B
  5447  00008B                     	ds	1
  5448  00008C                     DecodeNEC@temp2:
  5449                           	opt stack 0
  5450  00008C                     ___altoft@exp:
  5451                           	opt stack 0
  5452  00008C                     ___lltoft@exp:
  5453                           	opt stack 0
  5454  00008C                     ___wmul@multiplicand:
  5455                           	opt stack 0
  5456  00008C                     SendNEC_bytes@code:
  5457                           	opt stack 0
  5458                           
  5459                           ; 4 bytes @ 0x2C
  5460  00008C                     	ds	1
  5461  00008D                     ??___ftdiv:
  5462  00008D                     ??_GetNumber:
  5463  00008D                     ??_StringAddEqual:
  5464  00008D                     DecodeNEC@temp3:
  5465                           	opt stack 0
  5466  00008D                     ___altoft@sign:
  5467                           	opt stack 0
  5468  00008D                     ___llmod@divisor:
  5469                           	opt stack 0
  5470                           
  5471                           ; 4 bytes @ 0x2D
  5472  00008D                     	ds	1
  5473  00008E                     DecodeNEC@temp1:
  5474                           	opt stack 0
  5475  00008E                     ___wmul@product:
  5476                           	opt stack 0
  5477                           
  5478                           ; 2 bytes @ 0x2E
  5479  00008E                     	ds	1
  5480  00008F                     StringAddEqual@NullPosition:
  5481                           	opt stack 0
  5482                           
  5483                           ; 1 bytes @ 0x2F
  5484  00008F                     	ds	1
  5485  000090                     StringAddEqual@firstnumber:
  5486                           	opt stack 0
  5487  000090                     SendNEC_bytes@RepeatAmount:
  5488                           	opt stack 0
  5489  000090                     ___ftdiv@cntr:
  5490                           	opt stack 0
  5491                           
  5492                           ; 1 bytes @ 0x30
  5493  000090                     	ds	1
  5494  000091                     StringAddEqual@i:
  5495                           	opt stack 0
  5496  000091                     ___llmod@counter:
  5497                           	opt stack 0
  5498  000091                     ___ftdiv@f3:
  5499                           	opt stack 0
  5500  000091                     SendNEC_wait@code:
  5501                           	opt stack 0
  5502                           
  5503                           ; 4 bytes @ 0x31
  5504  000091                     	ds	1
  5505  000092                     GetNumber@tempCommaNumber:
  5506                           	opt stack 0
  5507  000092                     StringAddEqual@j:
  5508                           	opt stack 0
  5509                           
  5510                           ; 1 bytes @ 0x32
  5511  000092                     	ds	1
  5512  000093                     GetNumber@negative:
  5513                           	opt stack 0
  5514                           
  5515                           ; 1 bytes @ 0x33
  5516  000093                     	ds	1
  5517  000094                     GetNumber@count:
  5518                           	opt stack 0
  5519  000094                     ___ftdiv@exp:
  5520                           	opt stack 0
  5521                           
  5522                           ; 1 bytes @ 0x34
  5523  000094                     	ds	1
  5524  000095                     GetNumber@Hex:
  5525                           	opt stack 0
  5526  000095                     SendNEC_wait@RepeatAmount:
  5527                           	opt stack 0
  5528  000095                     ___ftdiv@sign:
  5529                           	opt stack 0
  5530                           
  5531                           ; 1 bytes @ 0x35
  5532  000095                     	ds	1
  5533  000096                     ?___ftmul:
  5534                           	opt stack 0
  5535  000096                     GetNumber@i:
  5536                           	opt stack 0
  5537  000096                     SendNEC_wait@toggle:
  5538                           	opt stack 0
  5539  000096                     ___ftmul@f1:
  5540                           	opt stack 0
  5541                           
  5542                           ; 3 bytes @ 0x36
  5543  000096                     	ds	1
  5544  000097                     GetNumber@tempThis:
  5545                           	opt stack 0
  5546                           
  5547                           ; 1 bytes @ 0x37
  5548  000097                     	ds	1
  5549  000098                     GetNumber@temp:
  5550                           	opt stack 0
  5551  000098                     GetMemoryLong@temp:
  5552                           	opt stack 0
  5553  000098                     EncodeNEC@temp1:
  5554                           	opt stack 0
  5555                           
  5556                           ; 4 bytes @ 0x38
  5557  000098                     	ds	1
  5558  000099                     ___ftmul@f2:
  5559                           	opt stack 0
  5560                           
  5561                           ; 3 bytes @ 0x39
  5562  000099                     	ds	3
  5563  00009C                     ??___ftmul:
  5564  00009C                     GetMemoryLong@H:
  5565                           	opt stack 0
  5566  00009C                     EncodeNEC@temp2:
  5567                           	opt stack 0
  5568                           
  5569                           ; 4 bytes @ 0x3C
  5570  00009C                     	ds	1
  5571  00009D                     GetMemoryLong@MH:
  5572                           	opt stack 0
  5573                           
  5574                           ; 1 bytes @ 0x3D
  5575  00009D                     	ds	1
  5576  00009E                     GetMemoryLong@ML:
  5577                           	opt stack 0
  5578                           
  5579                           ; 1 bytes @ 0x3E
  5580  00009E                     	ds	1
  5581  00009F                     GetMemoryLong@L:
  5582                           	opt stack 0
  5583  00009F                     ___ftmul@exp:
  5584                           	opt stack 0
  5585                           
  5586                           ; 1 bytes @ 0x3F
  5587  00009F                     	ds	1
  5588  0000A0                     GetMemoryLong@AddressFirst:
  5589                           	opt stack 0
  5590  0000A0                     ___ftmul@f3_as_product:
  5591                           	opt stack 0
  5592  0000A0                     EncodeNEC@temp3:
  5593                           	opt stack 0
  5594                           
  5595                           ; 4 bytes @ 0x40
  5596  0000A0                     	ds	1
  5597  0000A1                     GetEEPROM@Temp:
  5598                           	opt stack 0
  5599  0000A1                     SetMemoryLong@Data:
  5600                           	opt stack 0
  5601                           
  5602                           ; 4 bytes @ 0x41
  5603  0000A1                     	ds	2
  5604  0000A3                     ??_GetEEPROM:
  5605  0000A3                     ___ftmul@cntr:
  5606                           	opt stack 0
  5607                           
  5608                           ; 1 bytes @ 0x43
  5609  0000A3                     	ds	1
  5610  0000A4                     ___ftmul@sign:
  5611                           	opt stack 0
  5612  0000A4                     EncodeNEC@temp4:
  5613                           	opt stack 0
  5614                           
  5615                           ; 4 bytes @ 0x44
  5616  0000A4                     	ds	1
  5617  0000A5                     ?_ReadVoltage:
  5618                           	opt stack 0
  5619  0000A5                     ?_fround:
  5620                           	opt stack 0
  5621  0000A5                     ?_scale:
  5622                           	opt stack 0
  5623  0000A5                     GetEEPROM@Arrayspot:
  5624                           	opt stack 0
  5625  0000A5                     SetMemoryLong@AddressFirst:
  5626                           	opt stack 0
  5627                           
  5628                           ; 1 bytes @ 0x45
  5629  0000A5                     	ds	1
  5630  0000A6                     ??_SetMemoryLong:
  5631  0000A6                     GetEEPROM@k:
  5632                           	opt stack 0
  5633                           
  5634                           ; 1 bytes @ 0x46
  5635  0000A6                     	ds	1
  5636  0000A7                     GetEEPROM@i:
  5637                           	opt stack 0
  5638                           
  5639                           ; 1 bytes @ 0x47
  5640  0000A7                     	ds	1
  5641  0000A8                     GetEEPROM@j:
  5642                           	opt stack 0
  5643  0000A8                     EncodeNEC@address:
  5644                           	opt stack 0
  5645  0000A8                     ReadVoltage@voltage:
  5646                           	opt stack 0
  5647  0000A8                     _fround$3808:
  5648                           	opt stack 0
  5649  0000A8                     _scale$3809:
  5650                           	opt stack 0
  5651                           
  5652                           ; 3 bytes @ 0x48
  5653  0000A8                     	ds	1
  5654  0000A9                     ??_SyncEEPROMToGlobal:
  5655                           
  5656                           ; 0 bytes @ 0x49
  5657  0000A9                     	ds	1
  5658  0000AA                     SetMemoryLong@Test:
  5659                           	opt stack 0
  5660                           
  5661                           ; 4 bytes @ 0x4A
  5662  0000AA                     	ds	1
  5663  0000AB                     scale@scl:
  5664                           	opt stack 0
  5665  0000AB                     ReadVoltage@temp:
  5666                           	opt stack 0
  5667  0000AB                     _fround$3807:
  5668                           	opt stack 0
  5669                           
  5670                           ; 3 bytes @ 0x4B
  5671  0000AB                     	ds	3
  5672  0000AE                     SetMemoryLong@H:
  5673                           	opt stack 0
  5674  0000AE                     fround@prec:
  5675                           	opt stack 0
  5676                           
  5677                           ; 1 bytes @ 0x4E
  5678  0000AE                     	ds	1
  5679  0000AF                     ?___ftadd:
  5680                           	opt stack 0
  5681  0000AF                     SetMemoryLong@MH:
  5682                           	opt stack 0
  5683  0000AF                     ___ftadd@f1:
  5684                           	opt stack 0
  5685                           
  5686                           ; 3 bytes @ 0x4F
  5687  0000AF                     	ds	1
  5688  0000B0                     SetMemoryLong@ML:
  5689                           	opt stack 0
  5690                           
  5691                           ; 1 bytes @ 0x50
  5692  0000B0                     	ds	1
  5693  0000B1                     SetMemoryLong@L:
  5694                           	opt stack 0
  5695                           
  5696                           ; 1 bytes @ 0x51
  5697  0000B1                     	ds	1
  5698  0000B2                     ??_SetEEPROM:
  5699  0000B2                     ___ftadd@f2:
  5700                           	opt stack 0
  5701                           
  5702                           ; 3 bytes @ 0x52
  5703  0000B2                     	ds	2
  5704  0000B4                     SetEEPROM@fail:
  5705                           	opt stack 0
  5706                           
  5707                           ; 4 bytes @ 0x54
  5708  0000B4                     	ds	1
  5709  0000B5                     ??___ftadd:
  5710                           
  5711                           ; 0 bytes @ 0x55
  5712  0000B5                     	ds	3
  5713  0000B8                     SetEEPROM@temp:
  5714                           	opt stack 0
  5715  0000B8                     ___ftadd@sign:
  5716                           	opt stack 0
  5717                           
  5718                           ; 1 bytes @ 0x58
  5719  0000B8                     	ds	1
  5720  0000B9                     SetEEPROM@Arrayspot:
  5721                           	opt stack 0
  5722  0000B9                     ___ftadd@exp2:
  5723                           	opt stack 0
  5724                           
  5725                           ; 1 bytes @ 0x59
  5726  0000B9                     	ds	1
  5727  0000BA                     SetEEPROM@k:
  5728                           	opt stack 0
  5729  0000BA                     ___ftadd@exp1:
  5730                           	opt stack 0
  5731                           
  5732                           ; 1 bytes @ 0x5A
  5733  0000BA                     	ds	1
  5734  0000BB                     ?___ftsub:
  5735                           	opt stack 0
  5736  0000BB                     ?___fttol:
  5737                           	opt stack 0
  5738  0000BB                     SetEEPROM@i:
  5739                           	opt stack 0
  5740  0000BB                     ___ftsub@f1:
  5741                           	opt stack 0
  5742  0000BB                     ___fttol@f1:
  5743                           	opt stack 0
  5744                           
  5745                           ; 3 bytes @ 0x5B
  5746  0000BB                     	ds	1
  5747  0000BC                     SetEEPROM@j:
  5748                           	opt stack 0
  5749                           
  5750                           ; 1 bytes @ 0x5C
  5751  0000BC                     	ds	1
  5752  0000BD                     ??_SetEEPROMdefault:
  5753  0000BD                     UseIRCode@Code:
  5754                           	opt stack 0
  5755                           
  5756                           ; 2 bytes @ 0x5D
  5757  0000BD                     	ds	1
  5758  0000BE                     ___ftsub@f2:
  5759                           	opt stack 0
  5760                           
  5761                           ; 3 bytes @ 0x5E
  5762  0000BE                     	ds	1
  5763  0000BF                     ??___fttol:
  5764  0000BF                     SetEEPROMdefault@k:
  5765                           	opt stack 0
  5766  0000BF                     UseIRCode@NEC:
  5767                           	opt stack 0
  5768                           
  5769                           ; 4 bytes @ 0x5F
  5770  0000BF                     	ds	1
  5771  0000C0                     SetEEPROMdefault@i:
  5772                           	opt stack 0
  5773                           
  5774                           ; 1 bytes @ 0x60
  5775  0000C0                     	ds	1
  5776  0000C1                     SetEEPROMdefault@j:
  5777                           	opt stack 0
  5778                           
  5779                           ; 1 bytes @ 0x61
  5780  0000C1                     	ds	2
  5781  0000C3                     ??_UseIRCode:
  5782                           
  5783                           ; 0 bytes @ 0x63
  5784  0000C3                     	ds	1
  5785  0000C4                     ___fttol@sign1:
  5786                           	opt stack 0
  5787                           
  5788                           ; 1 bytes @ 0x64
  5789  0000C4                     	ds	1
  5790  0000C5                     ___fttol@lval:
  5791                           	opt stack 0
  5792                           
  5793                           ; 4 bytes @ 0x65
  5794  0000C5                     	ds	1
  5795  0000C6                     UseIRCode@found:
  5796                           	opt stack 0
  5797                           
  5798                           ; 1 bytes @ 0x66
  5799  0000C6                     	ds	1
  5800  0000C7                     UseIRCode@j:
  5801                           	opt stack 0
  5802                           
  5803                           ; 1 bytes @ 0x67
  5804  0000C7                     	ds	1
  5805  0000C8                     UseIRCode@i:
  5806                           	opt stack 0
  5807                           
  5808                           ; 1 bytes @ 0x68
  5809  0000C8                     	ds	1
  5810  0000C9                     ___fttol@exp1:
  5811                           	opt stack 0
  5812                           
  5813                           ; 1 bytes @ 0x69
  5814  0000C9                     	ds	1
  5815  0000CA                     ?_sprintf:
  5816                           	opt stack 0
  5817  0000CA                     ?_Round:
  5818                           	opt stack 0
  5819  0000CA                     sprintf@sp:
  5820                           	opt stack 0
  5821  0000CA                     Round@input:
  5822                           	opt stack 0
  5823                           
  5824                           ; 3 bytes @ 0x6A
  5825  0000CA                     	ds	2
  5826  0000CC                     sprintf@f:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0x6C
  5830  0000CC                     	ds	1
  5831  0000CD                     Round@temp:
  5832                           	opt stack 0
  5833                           
  5834                           ; 4 bytes @ 0x6D
  5835  0000CD                     	ds	4
  5836  0000D1                     InitUART@Baud:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0x71
  5840  0000D1                     	ds	4
  5841  0000D5                     ??_InitUART:
  5842                           
  5843                           ; 0 bytes @ 0x75
  5844  0000D5                     	ds	3
  5845  0000D8                     
  5846                           ; 0 bytes @ 0x78
  5847  0000D8                     	ds	1
  5848  0000D9                     main@IRtask:
  5849                           	opt stack 0
  5850                           
  5851                           ; 1 bytes @ 0x79
  5852  0000D9                     	ds	1
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           
  5863                           	psect	cstackCOMRAM
  5864  000001                     __pcstackCOMRAM:
  5865                           	opt stack 0
  5866  000001                     IsCharacter@data:
  5867                           	opt stack 0
  5868  000001                     i1UARTchar@data:
  5869                           	opt stack 0
  5870  000001                     i1ReadUSART@data:
  5871                           	opt stack 0
  5872  000001                     i1cleanBuffer@data:
  5873                           	opt stack 0
  5874                           
  5875                           ; 2 bytes @ 0x0
  5876  000001                     	ds	1
  5877  000002                     EraseScreen@characters:
  5878                           	opt stack 0
  5879  000002                     i1UARTstring@data:
  5880                           	opt stack 0
  5881                           
  5882                           ; 2 bytes @ 0x1
  5883  000002                     	ds	1
  5884  000003                     EraseScreen@i:
  5885                           	opt stack 0
  5886  000003                     i1cleanBuffer@count:
  5887                           	opt stack 0
  5888                           
  5889                           ; 2 bytes @ 0x2
  5890  000003                     	ds	1
  5891  000004                     i1UARTstringCRLN@data:
  5892                           	opt stack 0
  5893                           
  5894                           ; 2 bytes @ 0x3
  5895  000004                     	ds	1
  5896  000005                     ??i1_cleanBuffer:
  5897                           
  5898                           ; 0 bytes @ 0x4
  5899  000005                     	ds	1
  5900  000006                     
  5901                           ; 0 bytes @ 0x5
  5902  000006                     	ds	2
  5903  000008                     i1cleanBuffer@i:
  5904                           	opt stack 0
  5905                           
  5906                           ; 1 bytes @ 0x7
  5907  000008                     	ds	1
  5908  000009                     ??_low_isr:
  5909                           
  5910                           ; 0 bytes @ 0x8
  5911  000009                     	ds	17
  5912  00001A                     low_isr@data:
  5913                           	opt stack 0
  5914                           
  5915                           ; 1 bytes @ 0x19
  5916  00001A                     	ds	1
  5917  00001B                     SetTimer0@temp:
  5918                           	opt stack 0
  5919  00001B                     IRrawToNEC@Raw:
  5920                           	opt stack 0
  5921  00001B                     i2cleanBuffer16bit@data:
  5922                           	opt stack 0
  5923                           
  5924                           ; 2 bytes @ 0x1A
  5925  00001B                     	ds	2
  5926  00001D                     IRrawToNEC@NEC:
  5927                           	opt stack 0
  5928  00001D                     i2cleanBuffer16bit@count:
  5929                           	opt stack 0
  5930                           
  5931                           ; 2 bytes @ 0x1C
  5932  00001D                     	ds	2
  5933  00001F                     ??i2_cleanBuffer16bit:
  5934  00001F                     IRrawToNEC@Invert:
  5935                           	opt stack 0
  5936                           
  5937                           ; 1 bytes @ 0x1E
  5938  00001F                     	ds	1
  5939  000020                     ??_IRrawToNEC:
  5940                           
  5941                           ; 0 bytes @ 0x1F
  5942  000020                     	ds	2
  5943  000022                     i2cleanBuffer16bit@i:
  5944                           	opt stack 0
  5945                           
  5946                           ; 1 bytes @ 0x21
  5947  000022                     	ds	1
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           postdec1	equ	0xFE5
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           
  5958 ;;
  5959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5960 ;;
  5961 ;; *************** function _main *****************
  5962 ;; Defined at:
  5963 ;;		line 76 in file "main.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  BluetoothStr  255    0[BANK3 ] unsigned char [255]
  5968 ;;  Connected       1  152[BANK2 ] unsigned char 
  5969 ;;  i               1  151[BANK2 ] unsigned char 
  5970 ;;  VoltageStatu    1  150[BANK2 ] unsigned char 
  5971 ;;  ConnectedOLD    1  149[BANK2 ] unsigned char 
  5972 ;;  BluetoothStr    1  148[BANK2 ] unsigned char 
  5973 ;;  Bluetoothtas    1  147[BANK2 ] unsigned char 
  5974 ;;  IRtask          1  121[BANK0 ] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Locals:         0       1       0       6     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Totals:         0       1       0       6     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;Total ram usage:      262 bytes
  5989 ;; Hardware stack levels required when called:   14
  5990 ;; This function calls:
  5991 ;;		_BlueConnected
  5992 ;;		_BufferCopy
  5993 ;;		_ClearUSART
  5994 ;;		_ConfigureOscillator
  5995 ;;		_InitApp
  5996 ;;		_Init_System
  5997 ;;		_ReadIRpin
  5998 ;;		_ReadVoltage
  5999 ;;		_UARTchar
  6000 ;;		_UARTstring
  6001 ;;		_UARTstringCRLN
  6002 ;;		_UseBluetooth
  6003 ;;		_UseIRCode
  6004 ;;		___ftadd
  6005 ;;		___ftge
  6006 ;;		___ftsub
  6007 ;;		_cleanBuffer
  6008 ;;		_delayUS
  6009 ;; This function is called by:
  6010 ;;		Startup code after reset
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text0
  6015  004CE6                     __ptext0:
  6016                           	opt stack 0
  6017  004CE6                     _main:
  6018                           	opt stack 17
  6019                           
  6020                           ;main.c: 78: unsigned char i=0;
  6021                           
  6022                           ;incstack = 0
  6023  004CE6  0E00               	movlw	0
  6024  004CE8  0102               	movlb	2	; () banked
  6025  004CEA  6F97               	movwf	main@i& (0+255),b
  6026                           
  6027                           ;main.c: 79: unsigned char IRtask = 0;
  6028  004CEC  0E00               	movlw	0
  6029  004CEE  0100               	movlb	0	; () banked
  6030  004CF0  6FD9               	movwf	main@IRtask& (0+255),b
  6031                           
  6032                           ;main.c: 80: unsigned char Bluetoothtask = 0;
  6033  004CF2  0E00               	movlw	0
  6034  004CF4  0102               	movlb	2	; () banked
  6035  004CF6  6F93               	movwf	main@Bluetoothtask& (0+255),b
  6036                           
  6037                           ;main.c: 81: unsigned char VoltageStatus = 1;
  6038  004CF8  0E01               	movlw	1
  6039  004CFA  0102               	movlb	2	; () banked
  6040  004CFC  6F96               	movwf	main@VoltageStatus& (0+255),b
  6041                           
  6042                           ;main.c: 82: unsigned char BluetoothString[255];
  6043                           ;main.c: 83: unsigned char BluetoothStringPos = 0;
  6044  004CFE  0E00               	movlw	0
  6045  004D00  0102               	movlb	2	; () banked
  6046  004D02  6F94               	movwf	main@BluetoothStringPos& (0+255),b
  6047                           
  6048                           ; BSR set to: 2
  6049                           ;main.c: 84: unsigned char Connected, ConnectedOLD;
  6050                           ;main.c: 87: ConfigureOscillator();
  6051  004D04  ECF2  F04A         	call	_ConfigureOscillator	;wreg free
  6052                           
  6053                           ;main.c: 88: InitApp();
  6054  004D08  EC50  F048         	call	_InitApp	;wreg free
  6055                           
  6056                           ;main.c: 89: Init_System();
  6057  004D0C  EC75  F045         	call	_Init_System	;wreg free
  6058                           
  6059                           ;main.c: 91: BatteryVoltage = ReadVoltage();
  6060  004D10  EC60  F040         	call	_ReadVoltage	;wreg free
  6061  004D14  C0A5  F2E3         	movff	?_ReadVoltage,_BatteryVoltage
  6062  004D18  C0A6  F2E4         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6063  004D1C  C0A7  F2E5         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6064                           
  6065                           ;main.c: 92: if(BatteryVoltage < 3.7 )
  6066  004D20  C2E3  F07C         	movff	_BatteryVoltage,___ftge@ff1
  6067  004D24  C2E4  F07D         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6068  004D28  C2E5  F07E         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6069  004D2C  0ECD               	movlw	205
  6070  004D2E  0100               	movlb	0	; () banked
  6071  004D30  6F7F               	movwf	___ftge@ff2& (0+255),b
  6072  004D32  0E6C               	movlw	108
  6073  004D34  0100               	movlb	0	; () banked
  6074  004D36  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
  6075  004D38  0E40               	movlw	64
  6076  004D3A  0100               	movlb	0	; () banked
  6077  004D3C  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
  6078  004D3E  ECD2  F03E         	call	___ftge	;wreg free
  6079  004D42  0100               	movlb	0	; () banked
  6080  004D44  B0D8               	btfsc	status,0,c
  6081  004D46  D002               	goto	l16253
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;main.c: 93: {
  6085                           ;main.c: 94: VoltageStatus = 34;
  6086  004D48  0E22               	movlw	34
  6087  004D4A  D015               	goto	L1
  6088  004D4C                     l16253:
  6089                           
  6090                           ;main.c: 96: else if (BatteryVoltage > 30.0)
  6091  004D4C  0E00               	movlw	0
  6092  004D4E  0100               	movlb	0	; () banked
  6093  004D50  6F7C               	movwf	___ftge@ff1& (0+255),b
  6094  004D52  0EF0               	movlw	240
  6095  004D54  0100               	movlb	0	; () banked
  6096  004D56  6F7D               	movwf	(___ftge@ff1+1)& (0+255),b
  6097  004D58  0E41               	movlw	65
  6098  004D5A  0100               	movlb	0	; () banked
  6099  004D5C  6F7E               	movwf	(___ftge@ff1+2)& (0+255),b
  6100  004D5E  C2E3  F07F         	movff	_BatteryVoltage,___ftge@ff2
  6101  004D62  C2E4  F080         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6102  004D66  C2E5  F081         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6103  004D6A  ECD2  F03E         	call	___ftge	;wreg free
  6104  004D6E  0100               	movlb	0	; () banked
  6105  004D70  B0D8               	btfsc	status,0,c
  6106  004D72  D004               	goto	l16257
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;main.c: 97: {
  6110                           ;main.c: 98: VoltageStatus = 98;
  6111  004D74  0E62               	movlw	98
  6112  004D76                     L1:
  6113  004D76  0102               	movlb	2	; () banked
  6114  004D78  6F96               	movwf	main@VoltageStatus& (0+255),b
  6115                           
  6116                           ; BSR set to: 2
  6117  004D7A  D000               	goto	l16257
  6118  004D7C                     l16257:
  6119                           
  6120                           ;main.c: 99: }
  6121                           ;main.c: 100: if(VoltageStatus == 1)
  6122  004D7C  0102               	movlb	2	; () banked
  6123  004D7E  0596               	decf	main@VoltageStatus& (0+255),w,b
  6124  004D80  A4D8               	btfss	status,2,c
  6125  004D82  D027               	goto	l16279
  6126                           
  6127                           ; BSR set to: 2
  6128                           ;main.c: 101: {
  6129                           ;main.c: 103: for(i =0;i<10;i++)
  6130  004D84  0E00               	movlw	0
  6131  004D86  0102               	movlb	2	; () banked
  6132  004D88  6F97               	movwf	main@i& (0+255),b
  6133  004D8A                     l16261:
  6134                           
  6135                           ; BSR set to: 2
  6136  004D8A  0E09               	movlw	9
  6137  004D8C  0102               	movlb	2	; () banked
  6138  004D8E  6597               	cpfsgt	main@i& (0+255),b
  6139  004D90  D001               	goto	l16265
  6140                           
  6141                           ; BSR set to: 2
  6142  004D92  D01D               	goto	l16277
  6143  004D94                     l16265:
  6144                           
  6145                           ; BSR set to: 2
  6146                           ;main.c: 104: {
  6147                           ;main.c: 105: (LATC |= 0x02);
  6148  004D94  828B               	bsf	3979,1,c	;volatile
  6149                           
  6150                           ;main.c: 106: (LATC &= ~0x04);
  6151  004D96  948B               	bcf	3979,2,c	;volatile
  6152                           
  6153                           ; BSR set to: 2
  6154                           ;main.c: 107: delayUS(50000);
  6155  004D98  0E50               	movlw	80
  6156  004D9A  0100               	movlb	0	; () banked
  6157  004D9C  6F7C               	movwf	delayUS@US& (0+255),b
  6158  004D9E  0EC3               	movlw	195
  6159  004DA0  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6160  004DA2  0E00               	movlw	0
  6161  004DA4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6162  004DA6  0E00               	movlw	0
  6163  004DA8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6164  004DAA  EC8C  F047         	call	_delayUS	;wreg free
  6165                           
  6166                           ;main.c: 108: (LATC &= ~0x02);
  6167  004DAE  928B               	bcf	3979,1,c	;volatile
  6168                           
  6169                           ;main.c: 109: (LATC |= 0x04);
  6170  004DB0  848B               	bsf	3979,2,c	;volatile
  6171                           
  6172                           ;main.c: 110: delayUS(50000);
  6173  004DB2  0E50               	movlw	80
  6174  004DB4  0100               	movlb	0	; () banked
  6175  004DB6  6F7C               	movwf	delayUS@US& (0+255),b
  6176  004DB8  0EC3               	movlw	195
  6177  004DBA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6178  004DBC  0E00               	movlw	0
  6179  004DBE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6180  004DC0  0E00               	movlw	0
  6181  004DC2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6182  004DC4  EC8C  F047         	call	_delayUS	;wreg free
  6183  004DC8  0102               	movlb	2	; () banked
  6184  004DCA  2B97               	incf	main@i& (0+255),f,b
  6185  004DCC  D7DE               	goto	l16261
  6186  004DCE                     l16277:
  6187                           
  6188                           ; BSR set to: 2
  6189                           ;main.c: 111: }
  6190                           ;main.c: 112: (LATC &= ~0x04);
  6191  004DCE  948B               	bcf	3979,2,c	;volatile
  6192                           
  6193                           ;main.c: 113: }
  6194  004DD0  D024               	goto	l16295
  6195  004DD2                     l16279:
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;main.c: 114: else
  6199                           ;main.c: 115: {
  6200                           ;main.c: 116: for(i =0;i<10;i++)
  6201  004DD2  0E00               	movlw	0
  6202  004DD4  0102               	movlb	2	; () banked
  6203  004DD6  6F97               	movwf	main@i& (0+255),b
  6204  004DD8                     l16281:
  6205                           
  6206                           ; BSR set to: 2
  6207  004DD8  0E09               	movlw	9
  6208  004DDA  0102               	movlb	2	; () banked
  6209  004DDC  6597               	cpfsgt	main@i& (0+255),b
  6210  004DDE  D001               	goto	l16285
  6211                           
  6212                           ; BSR set to: 2
  6213  004DE0  D01C               	goto	l16295
  6214  004DE2                     l16285:
  6215                           
  6216                           ; BSR set to: 2
  6217                           ;main.c: 117: {
  6218                           ;main.c: 118: (LATC |= 0x02);
  6219  004DE2  828B               	bsf	3979,1,c	;volatile
  6220                           
  6221                           ; BSR set to: 2
  6222                           ;main.c: 119: delayUS(100000);
  6223  004DE4  0EA0               	movlw	160
  6224  004DE6  0100               	movlb	0	; () banked
  6225  004DE8  6F7C               	movwf	delayUS@US& (0+255),b
  6226  004DEA  0E86               	movlw	134
  6227  004DEC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6228  004DEE  0E01               	movlw	1
  6229  004DF0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6230  004DF2  0E00               	movlw	0
  6231  004DF4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6232  004DF6  EC8C  F047         	call	_delayUS	;wreg free
  6233                           
  6234                           ;main.c: 120: (LATC &= ~0x02);
  6235  004DFA  928B               	bcf	3979,1,c	;volatile
  6236                           
  6237                           ;main.c: 121: delayUS(100000);
  6238  004DFC  0EA0               	movlw	160
  6239  004DFE  0100               	movlb	0	; () banked
  6240  004E00  6F7C               	movwf	delayUS@US& (0+255),b
  6241  004E02  0E86               	movlw	134
  6242  004E04  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6243  004E06  0E01               	movlw	1
  6244  004E08  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6245  004E0A  0E00               	movlw	0
  6246  004E0C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6247  004E0E  EC8C  F047         	call	_delayUS	;wreg free
  6248  004E12  0102               	movlb	2	; () banked
  6249  004E14  2B97               	incf	main@i& (0+255),f,b
  6250  004E16  D7E0               	goto	l16281
  6251                           
  6252                           ; BSR set to: 2
  6253                           
  6254                           ; BSR set to: 2
  6255  004E18  D000               	goto	l16295
  6256  004E1A                     l16295:
  6257                           
  6258                           ; BSR set to: 2
  6259                           ;main.c: 122: }
  6260                           ;main.c: 123: }
  6261                           ;main.c: 124: Connected = BlueConnected();
  6262  004E1A  ECAE  F04A         	call	_BlueConnected	;wreg free
  6263  004E1E  0102               	movlb	2	; () banked
  6264  004E20  6F98               	movwf	main@Connected& (0+255),b
  6265                           
  6266                           ; BSR set to: 2
  6267                           ;main.c: 125: ConnectedOLD = 0;
  6268  004E22  0E00               	movlw	0
  6269  004E24  0102               	movlb	2	; () banked
  6270  004E26  6F95               	movwf	main@ConnectedOLD& (0+255),b
  6271  004E28  D000               	goto	l16299
  6272  004E2A                     l16299:
  6273                           
  6274                           ;main.c: 127: {
  6275                           ;main.c: 128: IRtask = IR_New_Code;
  6276  004E2A  C0E1  F0D9         	movff	_IR_New_Code,main@IRtask
  6277                           
  6278                           ;main.c: 129: Bluetoothtask = NewReceivedString;
  6279  004E2E  C0DB  F293         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  6280                           
  6281                           ;main.c: 131: Connected = BlueConnected();
  6282  004E32  ECAE  F04A         	call	_BlueConnected	;wreg free
  6283  004E36  0102               	movlb	2	; () banked
  6284  004E38  6F98               	movwf	main@Connected& (0+255),b
  6285                           
  6286                           ; BSR set to: 2
  6287                           ;main.c: 133: BatteryVoltage = ReadVoltage();
  6288  004E3A  EC60  F040         	call	_ReadVoltage	;wreg free
  6289  004E3E  C0A5  F2E3         	movff	?_ReadVoltage,_BatteryVoltage
  6290  004E42  C0A6  F2E4         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6291  004E46  C0A7  F2E5         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6292                           
  6293                           ;main.c: 134: if(VoltageStatus == 34)
  6294  004E4A  0E22               	movlw	34
  6295  004E4C  0102               	movlb	2	; () banked
  6296  004E4E  1996               	xorwf	main@VoltageStatus& (0+255),w,b
  6297  004E50  A4D8               	btfss	status,2,c
  6298  004E52  D018               	goto	l16311
  6299                           
  6300                           ; BSR set to: 2
  6301                           ;main.c: 135: {
  6302                           ;main.c: 137: BatteryVoltage -= 0.5;
  6303  004E54  C2E3  F0BB         	movff	_BatteryVoltage,___ftsub@f1
  6304  004E58  C2E4  F0BC         	movff	_BatteryVoltage+1,___ftsub@f1+1
  6305  004E5C  C2E5  F0BD         	movff	_BatteryVoltage+2,___ftsub@f1+2
  6306  004E60  0E00               	movlw	0
  6307  004E62  0100               	movlb	0	; () banked
  6308  004E64  6FBE               	movwf	___ftsub@f2& (0+255),b
  6309  004E66  0E00               	movlw	0
  6310  004E68  0100               	movlb	0	; () banked
  6311  004E6A  6FBF               	movwf	(___ftsub@f2+1)& (0+255),b
  6312  004E6C  0E3F               	movlw	63
  6313  004E6E  0100               	movlb	0	; () banked
  6314  004E70  6FC0               	movwf	(___ftsub@f2+2)& (0+255),b
  6315  004E72  ECE1  F047         	call	___ftsub	;wreg free
  6316  004E76  C0BB  F2E3         	movff	?___ftsub,_BatteryVoltage
  6317  004E7A  C0BC  F2E4         	movff	?___ftsub+1,_BatteryVoltage+1
  6318  004E7E  C0BD  F2E5         	movff	?___ftsub+2,_BatteryVoltage+2
  6319                           
  6320                           ;main.c: 138: }
  6321  004E82  D01D               	goto	l144
  6322  004E84                     l16311:
  6323                           
  6324                           ;main.c: 139: else if(VoltageStatus == 98)
  6325  004E84  0E62               	movlw	98
  6326  004E86  0102               	movlb	2	; () banked
  6327  004E88  1996               	xorwf	main@VoltageStatus& (0+255),w,b
  6328  004E8A  A4D8               	btfss	status,2,c
  6329  004E8C  D018               	goto	l144
  6330                           
  6331                           ; BSR set to: 2
  6332                           ;main.c: 140: {
  6333                           ;main.c: 142: BatteryVoltage += 0.5;
  6334  004E8E  C2E3  F0AF         	movff	_BatteryVoltage,___ftadd@f1
  6335  004E92  C2E4  F0B0         	movff	_BatteryVoltage+1,___ftadd@f1+1
  6336  004E96  C2E5  F0B1         	movff	_BatteryVoltage+2,___ftadd@f1+2
  6337  004E9A  0E00               	movlw	0
  6338  004E9C  0100               	movlb	0	; () banked
  6339  004E9E  6FB2               	movwf	___ftadd@f2& (0+255),b
  6340  004EA0  0E00               	movlw	0
  6341  004EA2  0100               	movlb	0	; () banked
  6342  004EA4  6FB3               	movwf	(___ftadd@f2+1)& (0+255),b
  6343  004EA6  0E3F               	movlw	63
  6344  004EA8  0100               	movlb	0	; () banked
  6345  004EAA  6FB4               	movwf	(___ftadd@f2+2)& (0+255),b
  6346  004EAC  ECCE  F02D         	call	___ftadd	;wreg free
  6347  004EB0  C0AF  F2E3         	movff	?___ftadd,_BatteryVoltage
  6348  004EB4  C0B0  F2E4         	movff	?___ftadd+1,_BatteryVoltage+1
  6349  004EB8  C0B1  F2E5         	movff	?___ftadd+2,_BatteryVoltage+2
  6350  004EBC  D000               	goto	l144
  6351  004EBE                     l144:
  6352                           
  6353                           ;main.c: 143: }
  6354                           ;main.c: 145: if(BatteryVoltage < 3.7 )
  6355  004EBE  C2E3  F07C         	movff	_BatteryVoltage,___ftge@ff1
  6356  004EC2  C2E4  F07D         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6357  004EC6  C2E5  F07E         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6358  004ECA  0ECD               	movlw	205
  6359  004ECC  0100               	movlb	0	; () banked
  6360  004ECE  6F7F               	movwf	___ftge@ff2& (0+255),b
  6361  004ED0  0E6C               	movlw	108
  6362  004ED2  0100               	movlb	0	; () banked
  6363  004ED4  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
  6364  004ED6  0E40               	movlw	64
  6365  004ED8  0100               	movlb	0	; () banked
  6366  004EDA  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
  6367  004EDC  ECD2  F03E         	call	___ftge	;wreg free
  6368  004EE0  0100               	movlb	0	; () banked
  6369  004EE2  B0D8               	btfsc	status,0,c
  6370  004EE4  D002               	goto	l16317
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;main.c: 146: {
  6374                           ;main.c: 147: VoltageStatus = 34;
  6375  004EE6  0E22               	movlw	34
  6376  004EE8  D017               	goto	L3
  6377  004EEA                     l16317:
  6378                           
  6379                           ;main.c: 149: else if(BatteryVoltage > 30.0)
  6380  004EEA  0E00               	movlw	0
  6381  004EEC  0100               	movlb	0	; () banked
  6382  004EEE  6F7C               	movwf	___ftge@ff1& (0+255),b
  6383  004EF0  0EF0               	movlw	240
  6384  004EF2  0100               	movlb	0	; () banked
  6385  004EF4  6F7D               	movwf	(___ftge@ff1+1)& (0+255),b
  6386  004EF6  0E41               	movlw	65
  6387  004EF8  0100               	movlb	0	; () banked
  6388  004EFA  6F7E               	movwf	(___ftge@ff1+2)& (0+255),b
  6389  004EFC  C2E3  F07F         	movff	_BatteryVoltage,___ftge@ff2
  6390  004F00  C2E4  F080         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6391  004F04  C2E5  F081         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6392  004F08  ECD2  F03E         	call	___ftge	;wreg free
  6393  004F0C  0100               	movlb	0	; () banked
  6394  004F0E  B0D8               	btfsc	status,0,c
  6395  004F10  D002               	goto	l16321
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;main.c: 150: {
  6399                           ;main.c: 151: VoltageStatus = 98;
  6400  004F12  0E62               	movlw	98
  6401  004F14  D001               	goto	L3
  6402  004F16                     l16321:
  6403                           
  6404                           ;main.c: 153: else
  6405                           ;main.c: 154: {
  6406                           ;main.c: 155: VoltageStatus = 1;
  6407  004F16  0E01               	movlw	1
  6408  004F18                     L3:
  6409  004F18  0102               	movlb	2	; () banked
  6410  004F1A  6F96               	movwf	main@VoltageStatus& (0+255),b
  6411  004F1C  D000               	goto	l147
  6412  004F1E                     l147:
  6413                           
  6414                           ; BSR set to: 2
  6415                           ;main.c: 156: }
  6416                           ;main.c: 158: if(IRtask && IR_NEC)
  6417  004F1E  0100               	movlb	0	; () banked
  6418  004F20  51D9               	movf	main@IRtask& (0+255),w,b
  6419  004F22  0100               	movlb	0	; () banked
  6420  004F24  B4D8               	btfsc	status,2,c
  6421  004F26  D01B               	goto	l16327
  6422                           
  6423                           ; BSR set to: 0
  6424  004F28  0100               	movlb	0	; () banked
  6425  004F2A  51DD               	movf	_IR_NEC& (0+255),w,b
  6426  004F2C  0100               	movlb	0	; () banked
  6427  004F2E  11DE               	iorwf	(_IR_NEC+1)& (0+255),w,b
  6428  004F30  0100               	movlb	0	; () banked
  6429  004F32  11DF               	iorwf	(_IR_NEC+2)& (0+255),w,b
  6430  004F34  0100               	movlb	0	; () banked
  6431  004F36  11E0               	iorwf	(_IR_NEC+3)& (0+255),w,b
  6432  004F38  B4D8               	btfsc	status,2,c
  6433  004F3A  D011               	goto	l16327
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;main.c: 159: {
  6437                           ;main.c: 160: UseIRCode(&IR_New_Code, IR_NEC);
  6438  004F3C  0EE1               	movlw	low _IR_New_Code
  6439  004F3E  0100               	movlb	0	; () banked
  6440  004F40  6FBD               	movwf	UseIRCode@Code& (0+255),b
  6441  004F42  0E00               	movlw	high _IR_New_Code
  6442  004F44  0100               	movlb	0	; () banked
  6443  004F46  6FBE               	movwf	(UseIRCode@Code+1)& (0+255),b
  6444  004F48  C0DD  F0BF         	movff	_IR_NEC,UseIRCode@NEC
  6445  004F4C  C0DE  F0C0         	movff	_IR_NEC+1,UseIRCode@NEC+1
  6446  004F50  C0DF  F0C1         	movff	_IR_NEC+2,UseIRCode@NEC+2
  6447  004F54  C0E0  F0C2         	movff	_IR_NEC+3,UseIRCode@NEC+3
  6448  004F58  EC0D  F02F         	call	_UseIRCode	;wreg free
  6449  004F5C  D000               	goto	l16327
  6450  004F5E                     l16327:
  6451                           
  6452                           ;main.c: 161: }
  6453                           ;main.c: 163: if(!Connected)
  6454  004F5E  0102               	movlb	2	; () banked
  6455  004F60  5198               	movf	main@Connected& (0+255),w,b
  6456  004F62  0102               	movlb	2	; () banked
  6457  004F64  A4D8               	btfss	status,2,c
  6458  004F66  D005               	goto	l16331
  6459                           
  6460                           ; BSR set to: 2
  6461                           ;main.c: 164: {
  6462                           ;main.c: 165: Connected = BlueConnected();
  6463  004F68  ECAE  F04A         	call	_BlueConnected	;wreg free
  6464  004F6C  0102               	movlb	2	; () banked
  6465  004F6E  6F98               	movwf	main@Connected& (0+255),b
  6466  004F70  D000               	goto	l16331
  6467  004F72                     l16331:
  6468                           
  6469                           ; BSR set to: 2
  6470                           ;main.c: 166: }
  6471                           ;main.c: 167: if(Connected != ConnectedOLD)
  6472  004F72  0102               	movlb	2	; () banked
  6473  004F74  5195               	movf	main@ConnectedOLD& (0+255),w,b
  6474  004F76  0102               	movlb	2	; () banked
  6475  004F78  1998               	xorwf	main@Connected& (0+255),w,b
  6476  004F7A  B4D8               	btfsc	status,2,c
  6477  004F7C  D024               	goto	l16343
  6478                           
  6479                           ; BSR set to: 2
  6480                           ;main.c: 168: {
  6481                           ;main.c: 169: if(Connected)
  6482  004F7E  0102               	movlb	2	; () banked
  6483  004F80  5198               	movf	main@Connected& (0+255),w,b
  6484  004F82  0102               	movlb	2	; () banked
  6485  004F84  B4D8               	btfsc	status,2,c
  6486  004F86  D01F               	goto	l16343
  6487                           
  6488                           ; BSR set to: 2
  6489                           ;main.c: 170: {
  6490                           ;main.c: 171: delayUS(1000);
  6491  004F88  0EE8               	movlw	232
  6492  004F8A  0100               	movlb	0	; () banked
  6493  004F8C  6F7C               	movwf	delayUS@US& (0+255),b
  6494  004F8E  0E03               	movlw	3
  6495  004F90  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6496  004F92  0E00               	movlw	0
  6497  004F94  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6498  004F96  0E00               	movlw	0
  6499  004F98  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6500  004F9A  EC8C  F047         	call	_delayUS	;wreg free
  6501                           
  6502                           ;main.c: 172: UARTstringCRLN(ProjectName);
  6503  004F9E  0EAF               	movlw	low _ProjectName
  6504  004FA0  0100               	movlb	0	; () banked
  6505  004FA2  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  6506  004FA4  0EF1               	movlw	high _ProjectName
  6507  004FA6  0100               	movlb	0	; () banked
  6508  004FA8  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6509  004FAA  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  6510                           
  6511                           ;main.c: 173: UARTstring(CRLN);
  6512  004FAE  0EA7               	movlw	low _CRLN
  6513  004FB0  0100               	movlb	0	; () banked
  6514  004FB2  6F7D               	movwf	UARTstring@data& (0+255),b
  6515  004FB4  0EF3               	movlw	high _CRLN
  6516  004FB6  0100               	movlb	0	; () banked
  6517  004FB8  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  6518  004FBA  EC08  F047         	call	_UARTstring	;wreg free
  6519                           
  6520                           ;main.c: 174: UARTchar('>');
  6521  004FBE  0E3E               	movlw	62
  6522  004FC0  ECF4  F049         	call	_UARTchar
  6523  004FC4  D000               	goto	l16343
  6524  004FC6                     l16343:
  6525                           
  6526                           ;main.c: 175: }
  6527                           ;main.c: 176: }
  6528                           ;main.c: 177: if(Bluetoothtask >= 1 && Connected)
  6529  004FC6  0102               	movlb	2	; () banked
  6530  004FC8  5193               	movf	main@Bluetoothtask& (0+255),w,b
  6531  004FCA  0102               	movlb	2	; () banked
  6532  004FCC  B4D8               	btfsc	status,2,c
  6533  004FCE  D066               	goto	l16385
  6534                           
  6535                           ; BSR set to: 2
  6536  004FD0  0102               	movlb	2	; () banked
  6537  004FD2  5198               	movf	main@Connected& (0+255),w,b
  6538  004FD4  0102               	movlb	2	; () banked
  6539  004FD6  B4D8               	btfsc	status,2,c
  6540  004FD8  D061               	goto	l16385
  6541                           
  6542                           ; BSR set to: 2
  6543                           ;main.c: 178: {
  6544                           ;main.c: 179: cleanBuffer(BluetoothString, 255);
  6545  004FDA  0E00               	movlw	low main@BluetoothString
  6546  004FDC  0100               	movlb	0	; () banked
  6547  004FDE  6F7C               	movwf	cleanBuffer@data& (0+255),b
  6548  004FE0  0E03               	movlw	high main@BluetoothString
  6549  004FE2  0100               	movlb	0	; () banked
  6550  004FE4  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6551  004FE6  0E00               	movlw	0
  6552  004FE8  0100               	movlb	0	; () banked
  6553  004FEA  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  6554  004FEC  697E               	setf	cleanBuffer@count& (0+255),b
  6555  004FEE  ECDB  F046         	call	_cleanBuffer	;wreg free
  6556                           
  6557                           ;main.c: 180: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  6558  004FF2  0E00               	movlw	low _ReceivedString
  6559  004FF4  0100               	movlb	0	; () banked
  6560  004FF6  6F84               	movwf	BufferCopy@from& (0+255),b
  6561  004FF8  0E06               	movlw	high _ReceivedString
  6562  004FFA  0100               	movlb	0	; () banked
  6563  004FFC  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
  6564  004FFE  0E00               	movlw	low main@BluetoothString
  6565  005000  0100               	movlb	0	; () banked
  6566  005002  6F86               	movwf	BufferCopy@to& (0+255),b
  6567  005004  0E03               	movlw	high main@BluetoothString
  6568  005006  0100               	movlb	0	; () banked
  6569  005008  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
  6570  00500A  C0DC  F088         	movff	_ReceivedStringPos,BufferCopy@count
  6571  00500E  0E00               	movlw	0
  6572  005010  0100               	movlb	0	; () banked
  6573  005012  6F89               	movwf	BufferCopy@shift& (0+255),b
  6574  005014  ECF6  F043         	call	_BufferCopy	;wreg free
  6575                           
  6576                           ;main.c: 181: BluetoothStringPos = ReceivedStringPos;
  6577  005018  C0DC  F294         	movff	_ReceivedStringPos,main@BluetoothStringPos
  6578                           
  6579                           ;main.c: 182: cleanBuffer(ReceivedString, ReceivedStringPos);
  6580  00501C  0E00               	movlw	low _ReceivedString
  6581  00501E  0100               	movlb	0	; () banked
  6582  005020  6F7C               	movwf	cleanBuffer@data& (0+255),b
  6583  005022  0E06               	movlw	high _ReceivedString
  6584  005024  0100               	movlb	0	; () banked
  6585  005026  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6586  005028  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
  6587  00502C  0100               	movlb	0	; () banked
  6588  00502E  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6589  005030  ECDB  F046         	call	_cleanBuffer	;wreg free
  6590                           
  6591                           ;main.c: 183: ReceivedStringPos = 0;
  6592  005034  0E00               	movlw	0
  6593  005036  0100               	movlb	0	; () banked
  6594  005038  6FDC               	movwf	_ReceivedStringPos& (0+255),b
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;main.c: 184: NewReceivedString = 0;
  6598  00503A  0E00               	movlw	0
  6599  00503C  0100               	movlb	0	; () banked
  6600  00503E  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;main.c: 185: if(BluetoothString[0] != 0)
  6604  005040  0103               	movlb	3	; () banked
  6605  005042  5100               	movf	main@BluetoothString& (0+255),w,b
  6606  005044  0103               	movlb	3	; () banked
  6607  005046  B4D8               	btfsc	status,2,c
  6608  005048  D00B               	goto	l16363
  6609                           
  6610                           ; BSR set to: 3
  6611                           ;main.c: 186: {
  6612                           ;main.c: 187: UseBluetooth(&BluetoothString, BluetoothStringPos);
  6613  00504A  0E00               	movlw	low main@BluetoothString
  6614  00504C  0102               	movlb	2	; () banked
  6615  00504E  6F00               	movwf	UseBluetooth@String& (0+255),b
  6616  005050  0E03               	movlw	high main@BluetoothString
  6617  005052  0102               	movlb	2	; () banked
  6618  005054  6F01               	movwf	(UseBluetooth@String+1)& (0+255),b
  6619  005056  C294  F202         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  6620  00505A  ECFB  F000         	call	_UseBluetooth	;wreg free
  6621  00505E  D000               	goto	l16363
  6622  005060                     l16363:
  6623                           
  6624                           ;main.c: 188: }
  6625                           ;main.c: 189: UARTstring(CRLN);
  6626  005060  0EA7               	movlw	low _CRLN
  6627  005062  0100               	movlb	0	; () banked
  6628  005064  6F7D               	movwf	UARTstring@data& (0+255),b
  6629  005066  0EF3               	movlw	high _CRLN
  6630  005068  0100               	movlb	0	; () banked
  6631  00506A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  6632  00506C  EC08  F047         	call	_UARTstring	;wreg free
  6633                           
  6634                           ;main.c: 190: UARTchar('>');
  6635  005070  0E3E               	movlw	62
  6636  005072  ECF4  F049         	call	_UARTchar
  6637                           
  6638                           ;main.c: 191: if(IR_New_Code)
  6639  005076  0100               	movlb	0	; () banked
  6640  005078  51E1               	movf	_IR_New_Code& (0+255),w,b
  6641  00507A  B4D8               	btfsc	status,2,c
  6642  00507C  D004               	goto	l16371
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;main.c: 192: {
  6646                           ;main.c: 193: IR_New_Code = 0;
  6647  00507E  0E00               	movlw	0
  6648  005080  0100               	movlb	0	; () banked
  6649  005082  6FE1               	movwf	_IR_New_Code& (0+255),b
  6650  005084  D000               	goto	l16371
  6651  005086                     l16371:
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;main.c: 194: }
  6655                           ;main.c: 196: IRpinOLD = ReadIRpin();
  6656  005086  ECA7  F04A         	call	_ReadIRpin	;wreg free
  6657  00508A  6E2F               	movwf	_IRpinOLD,c
  6658                           
  6659                           ;main.c: 197: INTCONbits.RBIF = 0;
  6660  00508C  90F2               	bcf	intcon,0,c	;volatile
  6661                           
  6662                           ;main.c: 198: (IOCBbits.IOCB4 = 1);
  6663  00508E  887D               	bsf	3965,4,c	;volatile
  6664                           
  6665                           ;main.c: 199: INTCONbits.RBIE = 1;
  6666  005090  86F2               	bsf	intcon,3,c	;volatile
  6667                           
  6668                           ;main.c: 200: ClearUSART();
  6669  005092  EC92  F04A         	call	_ClearUSART	;wreg free
  6670                           
  6671                           ;main.c: 201: PIR1bits.RCIF = 0;
  6672  005096  9A9E               	bcf	3998,5,c	;volatile
  6673                           
  6674                           ;main.c: 202: PIE1bits.RCIE = 1;
  6675  005098  8A9D               	bsf	3997,5,c	;volatile
  6676  00509A  D000               	goto	l16385
  6677  00509C                     l16385:
  6678                           
  6679                           ;main.c: 203: }
  6680                           ;main.c: 204: ConnectedOLD = Connected;
  6681  00509C  C298  F295         	movff	main@Connected,main@ConnectedOLD
  6682                           
  6683                           ;main.c: 206: if(IRtimeout < 5000)
  6684  0050A0  0102               	movlb	2	; () banked
  6685  0050A2  51CE               	movf	(_IRtimeout+3)& (0+255),w,b
  6686  0050A4  0102               	movlb	2	; () banked
  6687  0050A6  11CD               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6688  0050A8  E110               	bnz	l16391
  6689  0050AA  0E88               	movlw	136
  6690  0050AC  0102               	movlb	2	; () banked
  6691  0050AE  5DCB               	subwf	_IRtimeout& (0+255),w,b
  6692  0050B0  0E13               	movlw	19
  6693  0050B2  0102               	movlb	2	; () banked
  6694  0050B4  59CC               	subwfb	(_IRtimeout+1)& (0+255),w,b
  6695  0050B6  B0D8               	btfsc	status,0,c
  6696  0050B8  D008               	goto	l16391
  6697                           
  6698                           ; BSR set to: 2
  6699                           ;main.c: 207: {
  6700                           ;main.c: 208: IRtimeout++;
  6701  0050BA  0E01               	movlw	1
  6702  0050BC  0102               	movlb	2	; () banked
  6703  0050BE  27CB               	addwf	_IRtimeout& (0+255),f,b
  6704  0050C0  0E00               	movlw	0
  6705  0050C2  23CC               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6706  0050C4  23CD               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6707  0050C6  23CE               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6708                           
  6709                           ;main.c: 209: }
  6710  0050C8  D6B0               	goto	l16299
  6711  0050CA                     l16391:
  6712                           
  6713                           ; BSR set to: 2
  6714                           ;main.c: 210: else if(IRtimeout == 5000)
  6715  0050CA  0E88               	movlw	136
  6716  0050CC  0102               	movlb	2	; () banked
  6717  0050CE  19CB               	xorwf	_IRtimeout& (0+255),w,b
  6718  0050D0  E108               	bnz	u20631
  6719  0050D2  0E13               	movlw	19
  6720  0050D4  0102               	movlb	2	; () banked
  6721  0050D6  19CC               	xorwf	(_IRtimeout+1)& (0+255),w,b
  6722  0050D8  0102               	movlb	2	; () banked
  6723  0050DA  11CD               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6724  0050DC  0102               	movlb	2	; () banked
  6725  0050DE  11CE               	iorwf	(_IRtimeout+3)& (0+255),w,b
  6726  0050E0  A4D8               	btfss	status,2,c
  6727  0050E2                     u20631:
  6728  0050E2  D6A3               	goto	l16299
  6729                           
  6730                           ; BSR set to: 2
  6731                           ;main.c: 211: {
  6732                           ;main.c: 212: IRtimeout++;
  6733  0050E4  0E01               	movlw	1
  6734  0050E6  0102               	movlb	2	; () banked
  6735  0050E8  27CB               	addwf	_IRtimeout& (0+255),f,b
  6736  0050EA  0E00               	movlw	0
  6737  0050EC  23CC               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6738  0050EE  23CD               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6739  0050F0  23CE               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6740                           
  6741                           ; BSR set to: 2
  6742                           ;main.c: 213: IR_NEC = 0;
  6743  0050F2  0E00               	movlw	0
  6744  0050F4  0100               	movlb	0	; () banked
  6745  0050F6  6FDD               	movwf	_IR_NEC& (0+255),b
  6746  0050F8  0E00               	movlw	0
  6747  0050FA  6FDE               	movwf	(_IR_NEC+1)& (0+255),b
  6748  0050FC  0E00               	movlw	0
  6749  0050FE  6FDF               	movwf	(_IR_NEC+2)& (0+255),b
  6750  005100  0E00               	movlw	0
  6751  005102  6FE0               	movwf	(_IR_NEC+3)& (0+255),b
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;main.c: 214: IR_New_Code = 0;
  6755  005104  0E00               	movlw	0
  6756  005106  0100               	movlb	0	; () banked
  6757  005108  6FE1               	movwf	_IR_New_Code& (0+255),b
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;main.c: 215: IRpinOLD = ReadIRpin();
  6761  00510A  ECA7  F04A         	call	_ReadIRpin	;wreg free
  6762  00510E  6E2F               	movwf	_IRpinOLD,c
  6763                           
  6764                           ;main.c: 216: INTCONbits.RBIF = 0;
  6765  005110  90F2               	bcf	intcon,0,c	;volatile
  6766                           
  6767                           ;main.c: 217: (IOCBbits.IOCB4 = 1);
  6768  005112  887D               	bsf	3965,4,c	;volatile
  6769                           
  6770                           ;main.c: 218: INTCONbits.RBIE = 1;
  6771  005114  86F2               	bsf	intcon,3,c	;volatile
  6772  005116  D689               	goto	l16299
  6773  005118  EFF9  F000         	goto	start
  6774  00511C                     __end_of_main:
  6775                           	opt stack 0
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           intcon	equ	0xFF2
  6781                           postinc0	equ	0xFEE
  6782                           wreg	equ	0xFE8
  6783                           postdec1	equ	0xFE5
  6784                           fsr1h	equ	0xFE2
  6785                           fsr1l	equ	0xFE1
  6786                           status	equ	0xFD8
  6787                           
  6788 ;; *************** function _UseIRCode *****************
  6789 ;; Defined at:
  6790 ;;		line 271 in file "IR.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  Code            2   93[BANK0 ] PTR unsigned char 
  6793 ;;		 -> IR_New_Code(1), 
  6794 ;;  NEC             4   95[BANK0 ] unsigned long 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  i               1  104[BANK0 ] unsigned char 
  6797 ;;  j               1  103[BANK0 ] unsigned char 
  6798 ;;  found           1  102[BANK0 ] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;		None               void
  6801 ;; Registers used:
  6802 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;Total ram usage:       12 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:   11
  6815 ;; This function calls:
  6816 ;;		_DecodeNEC
  6817 ;;		_LEDTimerON
  6818 ;;		_ReadCodeButtons
  6819 ;;		_ReadIRpin
  6820 ;;		_ReadPushButton
  6821 ;;		_SendRF_Channel
  6822 ;;		_SyncGlobalToEEPROM
  6823 ;;		_delayUS
  6824 ;; This function is called by:
  6825 ;;		_main
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text1
  6830  005E1A                     __ptext1:
  6831                           	opt stack 0
  6832  005E1A                     _UseIRCode:
  6833                           	opt stack 19
  6834                           
  6835                           ;IR.c: 273: unsigned char i,j;
  6836                           ;IR.c: 274: unsigned char found = 0;
  6837                           
  6838                           ;incstack = 0
  6839  005E1A  0E00               	movlw	0
  6840  005E1C  0100               	movlb	0	; () banked
  6841  005E1E  6FC6               	movwf	UseIRCode@found& (0+255),b
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;IR.c: 276: LEDTimerON();
  6845  005E20  EC6A  F04A         	call	_LEDTimerON	;wreg free
  6846                           
  6847                           ;IR.c: 277: if(*Code == 2 || *Code == 1)
  6848  005E24  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  6849  005E28  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6850  005E2C  0E02               	movlw	2
  6851  005E2E  18DE               	xorwf	postinc2,w,c
  6852  005E30  B4D8               	btfsc	status,2,c
  6853  005E32  D007               	goto	l15283
  6854  005E34  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  6855  005E38  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6856  005E3C  04DE               	decf	postinc2,w,c
  6857  005E3E  A4D8               	btfss	status,2,c
  6858  005E40  D113               	goto	l15369
  6859  005E42                     l15283:
  6860                           
  6861                           ;IR.c: 278: {
  6862                           ;IR.c: 279: DecodeNEC(NEC, &IRaddress, &IRcommand);
  6863  005E42  C0BF  F080         	movff	UseIRCode@NEC,DecodeNEC@Nec
  6864  005E46  C0C0  F081         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  6865  005E4A  C0C1  F082         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  6866  005E4E  C0C2  F083         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  6867  005E52  0EE2               	movlw	low _IRaddress
  6868  005E54  0100               	movlb	0	; () banked
  6869  005E56  6F84               	movwf	DecodeNEC@address& (0+255),b
  6870  005E58  0E00               	movlw	high _IRaddress
  6871  005E5A  0100               	movlb	0	; () banked
  6872  005E5C  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
  6873  005E5E  0EFF               	movlw	low _IRcommand
  6874  005E60  0100               	movlb	0	; () banked
  6875  005E62  6F86               	movwf	DecodeNEC@command& (0+255),b
  6876  005E64  0E01               	movlw	high _IRcommand
  6877  005E66  0100               	movlb	0	; () banked
  6878  005E68  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
  6879  005E6A  ECCA  F041         	call	_DecodeNEC	;wreg free
  6880                           
  6881                           ;IR.c: 280: if(ReadPushButton())
  6882  005E6E  EC84  F04A         	call	_ReadPushButton	;wreg free
  6883  005E72  0900               	iorlw	0
  6884  005E74  B4D8               	btfsc	status,2,c
  6885  005E76  D055               	goto	l15323
  6886                           
  6887                           ;IR.c: 281: {
  6888                           ;IR.c: 282: Global.SWNECcode = NEC;
  6889  005E78  C0BF  F401         	movff	UseIRCode@NEC,_Global+1
  6890  005E7C  C0C0  F402         	movff	UseIRCode@NEC+1,_Global+2
  6891  005E80  C0C1  F403         	movff	UseIRCode@NEC+2,_Global+3
  6892  005E84  C0C2  F404         	movff	UseIRCode@NEC+3,_Global+4
  6893                           
  6894                           ;IR.c: 283: if(SyncGlobalToEEPROM())
  6895  005E88  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
  6896  005E8C  0900               	iorlw	0
  6897  005E8E  B4D8               	btfsc	status,2,c
  6898  005E90  D024               	goto	l15307
  6899                           
  6900                           ;IR.c: 284: {
  6901                           ;IR.c: 286: for(i =0;i<10;i++)
  6902  005E92  0E00               	movlw	0
  6903  005E94  0100               	movlb	0	; () banked
  6904  005E96  6FC8               	movwf	UseIRCode@i& (0+255),b
  6905  005E98                     l15293:
  6906                           
  6907                           ; BSR set to: 0
  6908  005E98  0E09               	movlw	9
  6909  005E9A  0100               	movlb	0	; () banked
  6910  005E9C  65C8               	cpfsgt	UseIRCode@i& (0+255),b
  6911  005E9E  D001               	goto	l15297
  6912                           
  6913                           ; BSR set to: 0
  6914  005EA0  D0E3               	goto	l15369
  6915  005EA2                     l15297:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;IR.c: 287: {
  6919                           ;IR.c: 288: (LATC |= 0x04);
  6920  005EA2  848B               	bsf	3979,2,c	;volatile
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;IR.c: 289: delayUS(50000);
  6924  005EA4  0E50               	movlw	80
  6925  005EA6  0100               	movlb	0	; () banked
  6926  005EA8  6F7C               	movwf	delayUS@US& (0+255),b
  6927  005EAA  0EC3               	movlw	195
  6928  005EAC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6929  005EAE  0E00               	movlw	0
  6930  005EB0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6931  005EB2  0E00               	movlw	0
  6932  005EB4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6933  005EB6  EC8C  F047         	call	_delayUS	;wreg free
  6934                           
  6935                           ;IR.c: 290: (LATC &= ~0x04);
  6936  005EBA  948B               	bcf	3979,2,c	;volatile
  6937                           
  6938                           ;IR.c: 291: delayUS(50000);
  6939  005EBC  0E50               	movlw	80
  6940  005EBE  0100               	movlb	0	; () banked
  6941  005EC0  6F7C               	movwf	delayUS@US& (0+255),b
  6942  005EC2  0EC3               	movlw	195
  6943  005EC4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6944  005EC6  0E00               	movlw	0
  6945  005EC8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6946  005ECA  0E00               	movlw	0
  6947  005ECC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6948  005ECE  EC8C  F047         	call	_delayUS	;wreg free
  6949  005ED2  0100               	movlb	0	; () banked
  6950  005ED4  2BC8               	incf	UseIRCode@i& (0+255),f,b
  6951  005ED6  D7E0               	goto	l15293
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;IR.c: 292: }
  6955                           ;IR.c: 293: }
  6956                           
  6957                           ; BSR set to: 0
  6958  005ED8  D0C7               	goto	l15369
  6959  005EDA                     l15307:
  6960                           
  6961                           ;IR.c: 294: else
  6962                           ;IR.c: 295: {
  6963                           ;IR.c: 297: for(i =0;i<10;i++)
  6964  005EDA  0E00               	movlw	0
  6965  005EDC  0100               	movlb	0	; () banked
  6966  005EDE  6FC8               	movwf	UseIRCode@i& (0+255),b
  6967  005EE0                     l15309:
  6968                           
  6969                           ; BSR set to: 0
  6970  005EE0  0E09               	movlw	9
  6971  005EE2  0100               	movlb	0	; () banked
  6972  005EE4  65C8               	cpfsgt	UseIRCode@i& (0+255),b
  6973  005EE6  D001               	goto	l15313
  6974                           
  6975                           ; BSR set to: 0
  6976  005EE8  D0BF               	goto	l15369
  6977  005EEA                     l15313:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;IR.c: 298: {
  6981                           ;IR.c: 299: (LATC |= 0x02);
  6982  005EEA  828B               	bsf	3979,1,c	;volatile
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;IR.c: 300: delayUS(50000);
  6986  005EEC  0E50               	movlw	80
  6987  005EEE  0100               	movlb	0	; () banked
  6988  005EF0  6F7C               	movwf	delayUS@US& (0+255),b
  6989  005EF2  0EC3               	movlw	195
  6990  005EF4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6991  005EF6  0E00               	movlw	0
  6992  005EF8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6993  005EFA  0E00               	movlw	0
  6994  005EFC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6995  005EFE  EC8C  F047         	call	_delayUS	;wreg free
  6996                           
  6997                           ;IR.c: 301: (LATC &= ~0x02);
  6998  005F02  928B               	bcf	3979,1,c	;volatile
  6999                           
  7000                           ;IR.c: 302: delayUS(50000);
  7001  005F04  0E50               	movlw	80
  7002  005F06  0100               	movlb	0	; () banked
  7003  005F08  6F7C               	movwf	delayUS@US& (0+255),b
  7004  005F0A  0EC3               	movlw	195
  7005  005F0C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7006  005F0E  0E00               	movlw	0
  7007  005F10  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7008  005F12  0E00               	movlw	0
  7009  005F14  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7010  005F16  EC8C  F047         	call	_delayUS	;wreg free
  7011  005F1A  0100               	movlb	0	; () banked
  7012  005F1C  2BC8               	incf	UseIRCode@i& (0+255),f,b
  7013  005F1E  D7E0               	goto	l15309
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;IR.c: 303: }
  7017                           ;IR.c: 304: }
  7018                           ;IR.c: 305: }
  7019                           
  7020                           ; BSR set to: 0
  7021                           
  7022                           ; BSR set to: 0
  7023  005F20  D0A3               	goto	l15369
  7024  005F22                     l15323:
  7025                           
  7026                           ;IR.c: 306: else
  7027                           ;IR.c: 307: {
  7028                           ;IR.c: 308: if(NEC == Global.SWNECcode)
  7029  005F22  0100               	movlb	0	; () banked
  7030  005F24  51BF               	movf	UseIRCode@NEC& (0+255),w,b
  7031  005F26  0104               	movlb	4	; () banked
  7032  005F28  1901               	xorwf	(_Global+1)& (0+255),w,b
  7033  005F2A  E121               	bnz	l15333
  7034  005F2C  0100               	movlb	0	; () banked
  7035  005F2E  51C0               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  7036  005F30  0104               	movlb	4	; () banked
  7037  005F32  1902               	xorwf	(_Global+2)& (0+255),w,b
  7038  005F34  E11C               	bnz	l15333
  7039  005F36  0100               	movlb	0	; () banked
  7040  005F38  51C1               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  7041  005F3A  0104               	movlb	4	; () banked
  7042  005F3C  1903               	xorwf	(_Global+3)& (0+255),w,b
  7043  005F3E  E117               	bnz	l15333
  7044  005F40  0100               	movlb	0	; () banked
  7045  005F42  51C2               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  7046  005F44  0104               	movlb	4	; () banked
  7047  005F46  1904               	xorwf	(_Global+4)& (0+255),w,b
  7048  005F48  A4D8               	btfss	status,2,c
  7049  005F4A  D011               	goto	l15333
  7050                           
  7051                           ; BSR set to: 4
  7052                           ;IR.c: 309: {
  7053                           ;IR.c: 310: if(*Code == 2)
  7054  005F4C  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  7055  005F50  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7056  005F54  0E02               	movlw	2
  7057  005F56  18DE               	xorwf	postinc2,w,c
  7058  005F58  B4D8               	btfsc	status,2,c
  7059                           
  7060                           ; BSR set to: 4
  7061                           ;IR.c: 311: {
  7062                           ;IR.c: 312: (LATC |= 0x02);
  7063  005F5A  828B               	bsf	3979,1,c	;volatile
  7064                           
  7065                           ; BSR set to: 4
  7066                           ;IR.c: 313: }
  7067                           ;IR.c: 314: (LATC |= 0x04);
  7068  005F5C  848B               	bsf	3979,2,c	;volatile
  7069                           
  7070                           ; BSR set to: 4
  7071                           ;IR.c: 315: SendRF_Channel(ReadCodeButtons());
  7072  005F5E  ECB7  F047         	call	_ReadCodeButtons	;wreg free
  7073  005F62  EC41  F030         	call	_SendRF_Channel
  7074                           
  7075                           ;IR.c: 316: found = 1;
  7076  005F66  0E01               	movlw	1
  7077  005F68  0100               	movlb	0	; () banked
  7078  005F6A  6FC6               	movwf	UseIRCode@found& (0+255),b
  7079  005F6C  D000               	goto	l15333
  7080  005F6E                     l15333:
  7081                           
  7082                           ;IR.c: 317: }
  7083                           ;IR.c: 319: for(j=0; j < 3; j++)
  7084  005F6E  0E00               	movlw	0
  7085  005F70  0100               	movlb	0	; () banked
  7086  005F72  6FC7               	movwf	UseIRCode@j& (0+255),b
  7087  005F74                     l15335:
  7088                           
  7089                           ; BSR set to: 0
  7090  005F74  0E02               	movlw	2
  7091  005F76  0100               	movlb	0	; () banked
  7092  005F78  65C7               	cpfsgt	UseIRCode@j& (0+255),b
  7093  005F7A  D001               	goto	l15339
  7094                           
  7095                           ; BSR set to: 0
  7096  005F7C  D06E               	goto	l15365
  7097  005F7E                     l15339:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;IR.c: 320: {
  7101                           ;IR.c: 321: for(i=0; i < 15; i++)
  7102  005F7E  0E00               	movlw	0
  7103  005F80  0100               	movlb	0	; () banked
  7104  005F82  6FC8               	movwf	UseIRCode@i& (0+255),b
  7105  005F84                     l15341:
  7106                           
  7107                           ; BSR set to: 0
  7108  005F84  0E0E               	movlw	14
  7109  005F86  0100               	movlb	0	; () banked
  7110  005F88  65C8               	cpfsgt	UseIRCode@i& (0+255),b
  7111  005F8A  D001               	goto	l15345
  7112                           
  7113                           ; BSR set to: 0
  7114  005F8C  D063               	goto	l15361
  7115  005F8E                     l15345:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;IR.c: 322: {
  7119                           ;IR.c: 324: if(IRaddress == Global.RemoteButtonRF[i][j][0])
  7120  005F8E  0100               	movlb	0	; () banked
  7121  005F90  51C8               	movf	UseIRCode@i& (0+255),w,b
  7122  005F92  0D06               	mullw	6
  7123  005F94  0E00               	movlw	low _Global
  7124  005F96  0100               	movlb	0	; () banked
  7125  005F98  6FC3               	movwf	??_UseIRCode& (0+255),b
  7126  005F9A  0E04               	movlw	high _Global
  7127  005F9C  0100               	movlb	0	; () banked
  7128  005F9E  6FC4               	movwf	(??_UseIRCode+1)& (0+255),b
  7129  005FA0  0E2E               	movlw	46
  7130  005FA2  0100               	movlb	0	; () banked
  7131  005FA4  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7132  005FA6  0E00               	movlw	0
  7133  005FA8  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7134  005FAA  50F3               	movf	prodl,w,c
  7135  005FAC  0100               	movlb	0	; () banked
  7136  005FAE  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7137  005FB0  50F4               	movf	prodh,w,c
  7138  005FB2  0100               	movlb	0	; () banked
  7139  005FB4  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7140  005FB6  0100               	movlb	0	; () banked
  7141  005FB8  51C7               	movf	UseIRCode@j& (0+255),w,b
  7142  005FBA  0D02               	mullw	2
  7143  005FBC  50F3               	movf	prodl,w,c
  7144  005FBE  0100               	movlb	0	; () banked
  7145  005FC0  25C3               	addwf	??_UseIRCode& (0+255),w,b
  7146  005FC2  6ED9               	movwf	fsr2l,c
  7147  005FC4  50F4               	movf	prodh,w,c
  7148  005FC6  0100               	movlb	0	; () banked
  7149  005FC8  21C4               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  7150  005FCA  6EDA               	movwf	fsr2h,c
  7151  005FCC  0100               	movlb	0	; () banked
  7152  005FCE  51E2               	movf	_IRaddress& (0+255),w,b
  7153  005FD0  18DE               	xorwf	postinc2,w,c
  7154  005FD2  A4D8               	btfss	status,2,c
  7155  005FD4  D03C               	goto	l15357
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;IR.c: 325: {
  7159                           ;IR.c: 326: if(IRcommand == Global.RemoteButtonRF[i][j][1])
  7160  005FD6  0100               	movlb	0	; () banked
  7161  005FD8  51C8               	movf	UseIRCode@i& (0+255),w,b
  7162  005FDA  0D06               	mullw	6
  7163  005FDC  0E00               	movlw	low _Global
  7164  005FDE  0100               	movlb	0	; () banked
  7165  005FE0  6FC3               	movwf	??_UseIRCode& (0+255),b
  7166  005FE2  0E04               	movlw	high _Global
  7167  005FE4  0100               	movlb	0	; () banked
  7168  005FE6  6FC4               	movwf	(??_UseIRCode+1)& (0+255),b
  7169  005FE8  0E2E               	movlw	46
  7170  005FEA  0100               	movlb	0	; () banked
  7171  005FEC  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7172  005FEE  0E00               	movlw	0
  7173  005FF0  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7174  005FF2  50F3               	movf	prodl,w,c
  7175  005FF4  0100               	movlb	0	; () banked
  7176  005FF6  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7177  005FF8  50F4               	movf	prodh,w,c
  7178  005FFA  0100               	movlb	0	; () banked
  7179  005FFC  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7180  005FFE  0100               	movlb	0	; () banked
  7181  006000  51C7               	movf	UseIRCode@j& (0+255),w,b
  7182  006002  0D02               	mullw	2
  7183  006004  50F3               	movf	prodl,w,c
  7184  006006  0100               	movlb	0	; () banked
  7185  006008  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7186  00600A  50F4               	movf	prodh,w,c
  7187  00600C  0100               	movlb	0	; () banked
  7188  00600E  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7189  006010  0E01               	movlw	1
  7190  006012  0100               	movlb	0	; () banked
  7191  006014  25C3               	addwf	??_UseIRCode& (0+255),w,b
  7192  006016  6ED9               	movwf	fsr2l,c
  7193  006018  0E00               	movlw	0
  7194  00601A  0100               	movlb	0	; () banked
  7195  00601C  21C4               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  7196  00601E  6EDA               	movwf	fsr2h,c
  7197  006020  0101               	movlb	1	; () banked
  7198  006022  51FF               	movf	_IRcommand& (0+255),w,b
  7199  006024  18DE               	xorwf	postinc2,w,c
  7200  006026  A4D8               	btfss	status,2,c
  7201  006028  D012               	goto	l15357
  7202                           
  7203                           ; BSR set to: 1
  7204                           ;IR.c: 327: {
  7205                           ;IR.c: 328: if(*Code == 2)
  7206  00602A  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  7207  00602E  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7208  006032  0E02               	movlw	2
  7209  006034  18DE               	xorwf	postinc2,w,c
  7210  006036  A4D8               	btfss	status,2,c
  7211  006038  D002               	goto	l15353
  7212                           
  7213                           ; BSR set to: 1
  7214                           ;IR.c: 329: {
  7215                           ;IR.c: 330: (LATC |= 0x02);
  7216  00603A  828B               	bsf	3979,1,c	;volatile
  7217  00603C  D000               	goto	l15353
  7218  00603E                     l15353:
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;IR.c: 331: }
  7222                           ;IR.c: 332: SendRF_Channel(i);
  7223  00603E  0100               	movlb	0	; () banked
  7224  006040  51C8               	movf	UseIRCode@i& (0+255),w,b
  7225  006042  EC41  F030         	call	_SendRF_Channel
  7226                           
  7227                           ;IR.c: 333: found = 1;
  7228  006046  0E01               	movlw	1
  7229  006048  0100               	movlb	0	; () banked
  7230  00604A  6FC6               	movwf	UseIRCode@found& (0+255),b
  7231                           
  7232                           ; BSR set to: 0
  7233  00604C  D000               	goto	l15357
  7234  00604E                     l15357:
  7235  00604E  0100               	movlb	0	; () banked
  7236  006050  2BC8               	incf	UseIRCode@i& (0+255),f,b
  7237  006052  D798               	goto	l15341
  7238  006054                     l15361:
  7239                           
  7240                           ; BSR set to: 0
  7241  006054  0100               	movlb	0	; () banked
  7242  006056  2BC7               	incf	UseIRCode@j& (0+255),f,b
  7243  006058  D78D               	goto	l15335
  7244  00605A                     l15365:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;IR.c: 334: }
  7248                           ;IR.c: 335: }
  7249                           ;IR.c: 336: }
  7250                           ;IR.c: 337: }
  7251                           ;IR.c: 339: if(found == 0)
  7252  00605A  0100               	movlb	0	; () banked
  7253  00605C  51C6               	movf	UseIRCode@found& (0+255),w,b
  7254  00605E  0100               	movlb	0	; () banked
  7255  006060  A4D8               	btfss	status,2,c
  7256  006062  D002               	goto	l15369
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;IR.c: 340: {
  7260                           ;IR.c: 341: (LATC |= 0x02);
  7261  006064  828B               	bsf	3979,1,c	;volatile
  7262                           
  7263                           ; BSR set to: 0
  7264                           
  7265                           ; BSR set to: 0
  7266  006066  D000               	goto	l15369
  7267  006068                     l15369:
  7268                           
  7269                           ;IR.c: 342: }
  7270                           ;IR.c: 343: }
  7271                           ;IR.c: 344: }
  7272                           ;IR.c: 345: *Code = 0;
  7273  006068  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  7274  00606C  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7275  006070  0E00               	movlw	0
  7276  006072  6EDF               	movwf	indf2,c
  7277                           
  7278                           ;IR.c: 346: IRpinOLD = ReadIRpin();
  7279  006074  ECA7  F04A         	call	_ReadIRpin	;wreg free
  7280  006078  6E2F               	movwf	_IRpinOLD,c
  7281                           
  7282                           ;IR.c: 347: INTCONbits.RBIF = 0;
  7283  00607A  90F2               	bcf	intcon,0,c	;volatile
  7284                           
  7285                           ;IR.c: 348: (IOCBbits.IOCB4 = 1);
  7286  00607C  887D               	bsf	3965,4,c	;volatile
  7287                           
  7288                           ;IR.c: 349: INTCONbits.RBIE = 1;
  7289  00607E  86F2               	bsf	intcon,3,c	;volatile
  7290  006080  0012               	return		;funcret
  7291  006082                     __end_of_UseIRCode:
  7292                           	opt stack 0
  7293                           tblptru	equ	0xFF8
  7294                           tblptrh	equ	0xFF7
  7295                           tblptrl	equ	0xFF6
  7296                           tablat	equ	0xFF5
  7297                           prodh	equ	0xFF4
  7298                           prodl	equ	0xFF3
  7299                           intcon	equ	0xFF2
  7300                           postinc0	equ	0xFEE
  7301                           wreg	equ	0xFE8
  7302                           postdec1	equ	0xFE5
  7303                           fsr1h	equ	0xFE2
  7304                           fsr1l	equ	0xFE1
  7305                           indf2	equ	0xFDF
  7306                           postinc2	equ	0xFDE
  7307                           fsr2h	equ	0xFDA
  7308                           fsr2l	equ	0xFD9
  7309                           status	equ	0xFD8
  7310                           
  7311 ;; *************** function _SendRF_Channel *****************
  7312 ;; Defined at:
  7313 ;;		line 165 in file "RF.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  channel         1    wreg     unsigned char 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  channel         1   41[BANK0 ] unsigned char 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;		None               void
  7320 ;; Registers used:
  7321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;Total ram usage:        1 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    9
  7334 ;; This function calls:
  7335 ;;		_SendRF_wait
  7336 ;; This function is called by:
  7337 ;;		_UseIRCode
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text2
  7342  006082                     __ptext2:
  7343                           	opt stack 0
  7344  006082                     _SendRF_Channel:
  7345                           	opt stack 20
  7346                           
  7347                           ;incstack = 0
  7348                           ;SendRF_Channel@channel stored from wreg
  7349  006082  0100               	movlb	0	; () banked
  7350  006084  6F89               	movwf	SendRF_Channel@channel& (0+255),b
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;RF.c: 167: switch (channel)
  7354  006086  D10D               	goto	l15105
  7355  006088                     l15047:
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,4);
  7359  006088  0E69               	movlw	low _Conf1_ChannelD
  7360  00608A  0100               	movlb	0	; () banked
  7361  00608C  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7362  00608E  0EF3               	movlw	high _Conf1_ChannelD
  7363  006090  0100               	movlb	0	; () banked
  7364  006092  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7365  006094  0E01               	movlw	1
  7366  006096  0100               	movlb	0	; () banked
  7367  006098  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7368  00609A  0E0C               	movlw	12
  7369  00609C  0100               	movlb	0	; () banked
  7370  00609E  6F87               	movwf	SendRF_wait@size& (0+255),b
  7371  0060A0  0E04               	movlw	4
  7372  0060A2  0100               	movlb	0	; () banked
  7373  0060A4  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7374  0060A6  ECB6  F048         	call	_SendRF_wait	;wreg free
  7375                           
  7376                           ;RF.c: 172: break;
  7377  0060AA  0012               	return	
  7378  0060AC                     l15049:
  7379                           
  7380                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,4);
  7381  0060AC  0E75               	movlw	low _Conf1_ChannelE
  7382  0060AE  0100               	movlb	0	; () banked
  7383  0060B0  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7384  0060B2  0EF3               	movlw	high _Conf1_ChannelE
  7385  0060B4  0100               	movlb	0	; () banked
  7386  0060B6  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7387  0060B8  0E01               	movlw	1
  7388  0060BA  0100               	movlb	0	; () banked
  7389  0060BC  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7390  0060BE  0E0C               	movlw	12
  7391  0060C0  0100               	movlb	0	; () banked
  7392  0060C2  6F87               	movwf	SendRF_wait@size& (0+255),b
  7393  0060C4  0E04               	movlw	4
  7394  0060C6  0100               	movlb	0	; () banked
  7395  0060C8  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7396  0060CA  ECB6  F048         	call	_SendRF_wait	;wreg free
  7397                           
  7398                           ;RF.c: 176: break;
  7399  0060CE  0012               	return	
  7400  0060D0                     l15051:
  7401                           
  7402                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,4);
  7403  0060D0  0E81               	movlw	low _Conf1_ChannelF
  7404  0060D2  0100               	movlb	0	; () banked
  7405  0060D4  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7406  0060D6  0EF3               	movlw	high _Conf1_ChannelF
  7407  0060D8  0100               	movlb	0	; () banked
  7408  0060DA  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7409  0060DC  0E01               	movlw	1
  7410  0060DE  0100               	movlb	0	; () banked
  7411  0060E0  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7412  0060E2  0E0C               	movlw	12
  7413  0060E4  0100               	movlb	0	; () banked
  7414  0060E6  6F87               	movwf	SendRF_wait@size& (0+255),b
  7415  0060E8  0E04               	movlw	4
  7416  0060EA  0100               	movlb	0	; () banked
  7417  0060EC  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7418  0060EE  ECB6  F048         	call	_SendRF_wait	;wreg free
  7419                           
  7420                           ;RF.c: 180: break;
  7421  0060F2  0012               	return	
  7422  0060F4                     l15053:
  7423                           
  7424                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  7425  0060F4  5028               	movf	_Conf2_ChannelB_Status,w,c
  7426  0060F6  B4D8               	btfsc	status,2,c
  7427  0060F8  D014               	goto	l15059
  7428                           
  7429                           ;RF.c: 184: {
  7430                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,4);
  7431  0060FA  0E8E               	movlw	low _Conf2_ChannelB_OFF
  7432  0060FC  0100               	movlb	0	; () banked
  7433  0060FE  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7434  006100  0EF2               	movlw	high _Conf2_ChannelB_OFF
  7435  006102  0100               	movlb	0	; () banked
  7436  006104  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7437  006106  0E02               	movlw	2
  7438  006108  0100               	movlb	0	; () banked
  7439  00610A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7440  00610C  0E10               	movlw	16
  7441  00610E  0100               	movlb	0	; () banked
  7442  006110  6F87               	movwf	SendRF_wait@size& (0+255),b
  7443  006112  0E04               	movlw	4
  7444  006114  0100               	movlb	0	; () banked
  7445  006116  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7446  006118  ECB6  F048         	call	_SendRF_wait	;wreg free
  7447                           
  7448                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  7449  00611C  0E00               	movlw	0
  7450  00611E  6E28               	movwf	_Conf2_ChannelB_Status,c
  7451                           
  7452                           ;RF.c: 187: }
  7453  006120  0012               	return	
  7454  006122                     l15059:
  7455                           
  7456                           ;RF.c: 188: else
  7457                           ;RF.c: 189: {
  7458                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,4);
  7459  006122  0E9E               	movlw	low _Conf2_ChannelB_ON
  7460  006124  0100               	movlb	0	; () banked
  7461  006126  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7462  006128  0EF2               	movlw	high _Conf2_ChannelB_ON
  7463  00612A  0100               	movlb	0	; () banked
  7464  00612C  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7465  00612E  0E02               	movlw	2
  7466  006130  0100               	movlb	0	; () banked
  7467  006132  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7468  006134  0E10               	movlw	16
  7469  006136  0100               	movlb	0	; () banked
  7470  006138  6F87               	movwf	SendRF_wait@size& (0+255),b
  7471  00613A  0E04               	movlw	4
  7472  00613C  0100               	movlb	0	; () banked
  7473  00613E  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7474  006140  ECB6  F048         	call	_SendRF_wait	;wreg free
  7475                           
  7476                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  7477  006144  0E01               	movlw	1
  7478  006146  6E28               	movwf	_Conf2_ChannelB_Status,c
  7479                           
  7480                           ;RF.c: 192: }
  7481                           ;RF.c: 193: break;
  7482  006148  0012               	return	
  7483  00614A                     l15063:
  7484                           
  7485                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  7486  00614A  5029               	movf	_Conf2_ChannelD_Status,w,c
  7487  00614C  B4D8               	btfsc	status,2,c
  7488  00614E  D014               	goto	l15069
  7489                           
  7490                           ;RF.c: 197: {
  7491                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,4);
  7492  006150  0EAE               	movlw	low _Conf2_ChannelD_OFF
  7493  006152  0100               	movlb	0	; () banked
  7494  006154  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7495  006156  0EF2               	movlw	high _Conf2_ChannelD_OFF
  7496  006158  0100               	movlb	0	; () banked
  7497  00615A  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7498  00615C  0E02               	movlw	2
  7499  00615E  0100               	movlb	0	; () banked
  7500  006160  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7501  006162  0E10               	movlw	16
  7502  006164  0100               	movlb	0	; () banked
  7503  006166  6F87               	movwf	SendRF_wait@size& (0+255),b
  7504  006168  0E04               	movlw	4
  7505  00616A  0100               	movlb	0	; () banked
  7506  00616C  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7507  00616E  ECB6  F048         	call	_SendRF_wait	;wreg free
  7508                           
  7509                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  7510  006172  0E00               	movlw	0
  7511  006174  6E29               	movwf	_Conf2_ChannelD_Status,c
  7512                           
  7513                           ;RF.c: 200: }
  7514  006176  0012               	return	
  7515  006178                     l15069:
  7516                           
  7517                           ;RF.c: 201: else
  7518                           ;RF.c: 202: {
  7519                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,4);
  7520  006178  0EBE               	movlw	low _Conf2_ChannelD_ON
  7521  00617A  0100               	movlb	0	; () banked
  7522  00617C  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7523  00617E  0EF2               	movlw	high _Conf2_ChannelD_ON
  7524  006180  0100               	movlb	0	; () banked
  7525  006182  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7526  006184  0E02               	movlw	2
  7527  006186  0100               	movlb	0	; () banked
  7528  006188  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7529  00618A  0E10               	movlw	16
  7530  00618C  0100               	movlb	0	; () banked
  7531  00618E  6F87               	movwf	SendRF_wait@size& (0+255),b
  7532  006190  0E04               	movlw	4
  7533  006192  0100               	movlb	0	; () banked
  7534  006194  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7535  006196  ECB6  F048         	call	_SendRF_wait	;wreg free
  7536                           
  7537                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  7538  00619A  0E01               	movlw	1
  7539  00619C  6E29               	movwf	_Conf2_ChannelD_Status,c
  7540                           
  7541                           ;RF.c: 205: }
  7542                           ;RF.c: 206: break;
  7543  00619E  0012               	return	
  7544  0061A0                     l15073:
  7545                           
  7546                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  7547  0061A0  502A               	movf	_Conf2_ChannelH_1_Status,w,c
  7548  0061A2  B4D8               	btfsc	status,2,c
  7549  0061A4  D014               	goto	l15079
  7550                           
  7551                           ;RF.c: 210: {
  7552                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,4);
  7553  0061A6  0ECE               	movlw	low _Conf2_ChannelH_1_OFF
  7554  0061A8  0100               	movlb	0	; () banked
  7555  0061AA  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7556  0061AC  0EF2               	movlw	high _Conf2_ChannelH_1_OFF
  7557  0061AE  0100               	movlb	0	; () banked
  7558  0061B0  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7559  0061B2  0E02               	movlw	2
  7560  0061B4  0100               	movlb	0	; () banked
  7561  0061B6  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7562  0061B8  0E10               	movlw	16
  7563  0061BA  0100               	movlb	0	; () banked
  7564  0061BC  6F87               	movwf	SendRF_wait@size& (0+255),b
  7565  0061BE  0E04               	movlw	4
  7566  0061C0  0100               	movlb	0	; () banked
  7567  0061C2  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7568  0061C4  ECB6  F048         	call	_SendRF_wait	;wreg free
  7569                           
  7570                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  7571  0061C8  0E00               	movlw	0
  7572  0061CA  6E2A               	movwf	_Conf2_ChannelH_1_Status,c
  7573                           
  7574                           ;RF.c: 213: }
  7575  0061CC  0012               	return	
  7576  0061CE                     l15079:
  7577                           
  7578                           ;RF.c: 214: else
  7579                           ;RF.c: 215: {
  7580                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,4);
  7581  0061CE  0EDE               	movlw	low _Conf2_ChannelH_1_ON
  7582  0061D0  0100               	movlb	0	; () banked
  7583  0061D2  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7584  0061D4  0EF2               	movlw	high _Conf2_ChannelH_1_ON
  7585  0061D6  0100               	movlb	0	; () banked
  7586  0061D8  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7587  0061DA  0E02               	movlw	2
  7588  0061DC  0100               	movlb	0	; () banked
  7589  0061DE  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7590  0061E0  0E10               	movlw	16
  7591  0061E2  0100               	movlb	0	; () banked
  7592  0061E4  6F87               	movwf	SendRF_wait@size& (0+255),b
  7593  0061E6  0E04               	movlw	4
  7594  0061E8  0100               	movlb	0	; () banked
  7595  0061EA  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7596  0061EC  ECB6  F048         	call	_SendRF_wait	;wreg free
  7597                           
  7598                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  7599  0061F0  0E01               	movlw	1
  7600  0061F2  6E2A               	movwf	_Conf2_ChannelH_1_Status,c
  7601                           
  7602                           ;RF.c: 218: }
  7603                           ;RF.c: 219: break;
  7604  0061F4  0012               	return	
  7605  0061F6                     l15083:
  7606                           
  7607                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  7608  0061F6  502B               	movf	_Conf2_ChannelH_2_Status,w,c
  7609  0061F8  B4D8               	btfsc	status,2,c
  7610  0061FA  D014               	goto	l15089
  7611                           
  7612                           ;RF.c: 223: {
  7613                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,4);
  7614  0061FC  0EEE               	movlw	low _Conf2_ChannelH_2_OFF
  7615  0061FE  0100               	movlb	0	; () banked
  7616  006200  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7617  006202  0EF2               	movlw	high _Conf2_ChannelH_2_OFF
  7618  006204  0100               	movlb	0	; () banked
  7619  006206  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7620  006208  0E02               	movlw	2
  7621  00620A  0100               	movlb	0	; () banked
  7622  00620C  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7623  00620E  0E10               	movlw	16
  7624  006210  0100               	movlb	0	; () banked
  7625  006212  6F87               	movwf	SendRF_wait@size& (0+255),b
  7626  006214  0E04               	movlw	4
  7627  006216  0100               	movlb	0	; () banked
  7628  006218  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7629  00621A  ECB6  F048         	call	_SendRF_wait	;wreg free
  7630                           
  7631                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  7632  00621E  0E00               	movlw	0
  7633  006220  6E2B               	movwf	_Conf2_ChannelH_2_Status,c
  7634                           
  7635                           ;RF.c: 226: }
  7636  006222  0012               	return	
  7637  006224                     l15089:
  7638                           
  7639                           ;RF.c: 227: else
  7640                           ;RF.c: 228: {
  7641                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,4);
  7642  006224  0EFE               	movlw	low _Conf2_ChannelH_2_ON
  7643  006226  0100               	movlb	0	; () banked
  7644  006228  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7645  00622A  0EF2               	movlw	high _Conf2_ChannelH_2_ON
  7646  00622C  0100               	movlb	0	; () banked
  7647  00622E  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7648  006230  0E02               	movlw	2
  7649  006232  0100               	movlb	0	; () banked
  7650  006234  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7651  006236  0E10               	movlw	16
  7652  006238  0100               	movlb	0	; () banked
  7653  00623A  6F87               	movwf	SendRF_wait@size& (0+255),b
  7654  00623C  0E04               	movlw	4
  7655  00623E  0100               	movlb	0	; () banked
  7656  006240  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7657  006242  ECB6  F048         	call	_SendRF_wait	;wreg free
  7658                           
  7659                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  7660  006246  0E01               	movlw	1
  7661  006248  6E2B               	movwf	_Conf2_ChannelH_2_Status,c
  7662                           
  7663                           ;RF.c: 231: }
  7664                           ;RF.c: 232: break;
  7665  00624A  0012               	return	
  7666  00624C                     l15093:
  7667                           
  7668                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  7669  00624C  502C               	movf	_Conf2_ChannelH_3_Status,w,c
  7670  00624E  B4D8               	btfsc	status,2,c
  7671  006250  D014               	goto	l15099
  7672                           
  7673                           ;RF.c: 236: {
  7674                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,4);
  7675  006252  0E0E               	movlw	low _Conf2_ChannelH_3_OFF
  7676  006254  0100               	movlb	0	; () banked
  7677  006256  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7678  006258  0EF3               	movlw	high _Conf2_ChannelH_3_OFF
  7679  00625A  0100               	movlb	0	; () banked
  7680  00625C  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7681  00625E  0E02               	movlw	2
  7682  006260  0100               	movlb	0	; () banked
  7683  006262  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7684  006264  0E10               	movlw	16
  7685  006266  0100               	movlb	0	; () banked
  7686  006268  6F87               	movwf	SendRF_wait@size& (0+255),b
  7687  00626A  0E04               	movlw	4
  7688  00626C  0100               	movlb	0	; () banked
  7689  00626E  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7690  006270  ECB6  F048         	call	_SendRF_wait	;wreg free
  7691                           
  7692                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  7693  006274  0E00               	movlw	0
  7694  006276  6E2C               	movwf	_Conf2_ChannelH_3_Status,c
  7695                           
  7696                           ;RF.c: 239: }
  7697  006278  0012               	return	
  7698  00627A                     l15099:
  7699                           
  7700                           ;RF.c: 240: else
  7701                           ;RF.c: 241: {
  7702                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,4);
  7703  00627A  0E1E               	movlw	low _Conf2_ChannelH_3_ON
  7704  00627C  0100               	movlb	0	; () banked
  7705  00627E  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7706  006280  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  7707  006282  0100               	movlb	0	; () banked
  7708  006284  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7709  006286  0E02               	movlw	2
  7710  006288  0100               	movlb	0	; () banked
  7711  00628A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7712  00628C  0E10               	movlw	16
  7713  00628E  0100               	movlb	0	; () banked
  7714  006290  6F87               	movwf	SendRF_wait@size& (0+255),b
  7715  006292  0E04               	movlw	4
  7716  006294  0100               	movlb	0	; () banked
  7717  006296  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7718  006298  ECB6  F048         	call	_SendRF_wait	;wreg free
  7719                           
  7720                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  7721  00629C  0E01               	movlw	1
  7722  00629E  6E2C               	movwf	_Conf2_ChannelH_3_Status,c
  7723                           
  7724                           ;RF.c: 248: }
  7725                           
  7726                           ;RF.c: 247: break;
  7727                           
  7728                           ;RF.c: 246: default:
  7729                           
  7730                           ;RF.c: 244: }
  7731                           ;RF.c: 245: break;
  7732  0062A0  0012               	return	
  7733  0062A2                     l15105:
  7734  0062A2  0100               	movlb	0	; () banked
  7735  0062A4  5189               	movf	SendRF_Channel@channel& (0+255),w,b
  7736                           
  7737                           ; Switch size 1, requested type "space"
  7738                           ; Number of cases is 8, Range of values is 0 to 7
  7739                           ; switch strategies available:
  7740                           ; Name         Instructions Cycles
  7741                           ; simple_byte           25    13 (average)
  7742                           ;	Chosen strategy is simple_byte
  7743  0062A6  0A00               	xorlw	0	; case 0
  7744  0062A8  B4D8               	btfsc	status,2,c
  7745  0062AA  D6EE               	goto	l15047
  7746  0062AC  0A01               	xorlw	1	; case 1
  7747  0062AE  B4D8               	btfsc	status,2,c
  7748  0062B0  D6FD               	goto	l15049
  7749  0062B2  0A03               	xorlw	3	; case 2
  7750  0062B4  B4D8               	btfsc	status,2,c
  7751  0062B6  D70C               	goto	l15051
  7752  0062B8  0A01               	xorlw	1	; case 3
  7753  0062BA  B4D8               	btfsc	status,2,c
  7754  0062BC  D71B               	goto	l15053
  7755  0062BE  0A07               	xorlw	7	; case 4
  7756  0062C0  B4D8               	btfsc	status,2,c
  7757  0062C2  D743               	goto	l15063
  7758  0062C4  0A01               	xorlw	1	; case 5
  7759  0062C6  B4D8               	btfsc	status,2,c
  7760  0062C8  D76B               	goto	l15073
  7761  0062CA  0A03               	xorlw	3	; case 6
  7762  0062CC  B4D8               	btfsc	status,2,c
  7763  0062CE  D793               	goto	l15083
  7764  0062D0  0A01               	xorlw	1	; case 7
  7765  0062D2  A4D8               	btfss	status,2,c
  7766  0062D4  0012               	return	
  7767  0062D6  D7BA               	goto	l15093
  7768                           
  7769                           ; BSR set to: 0
  7770  0062D8  0012               	return		;funcret
  7771  0062DA                     __end_of_SendRF_Channel:
  7772                           	opt stack 0
  7773                           tblptru	equ	0xFF8
  7774                           tblptrh	equ	0xFF7
  7775                           tblptrl	equ	0xFF6
  7776                           tablat	equ	0xFF5
  7777                           prodh	equ	0xFF4
  7778                           prodl	equ	0xFF3
  7779                           intcon	equ	0xFF2
  7780                           postinc0	equ	0xFEE
  7781                           wreg	equ	0xFE8
  7782                           postdec1	equ	0xFE5
  7783                           fsr1h	equ	0xFE2
  7784                           fsr1l	equ	0xFE1
  7785                           indf2	equ	0xFDF
  7786                           postinc2	equ	0xFDE
  7787                           fsr2h	equ	0xFDA
  7788                           fsr2l	equ	0xFD9
  7789                           status	equ	0xFD8
  7790                           
  7791 ;; *************** function _ReadPushButton *****************
  7792 ;; Defined at:
  7793 ;;		line 52 in file "Button.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      unsigned char 
  7800 ;; Registers used:
  7801 ;;		wreg
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    6
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_UseIRCode
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text3
  7822  009508                     __ptext3:
  7823                           	opt stack 0
  7824  009508                     _ReadPushButton:
  7825                           	opt stack 23
  7826                           
  7827                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  7828                           
  7829                           ;incstack = 0
  7830  009508  B082               	btfsc	3970,0,c	;volatile
  7831  00950A  D002               	goto	l15015
  7832                           
  7833                           ;Button.c: 56: {
  7834                           ;Button.c: 57: return 1;
  7835  00950C  0E01               	movlw	1
  7836  00950E  0012               	return	
  7837  009510                     l15015:
  7838                           
  7839                           ;Button.c: 58: }
  7840                           ;Button.c: 59: return 0;
  7841  009510  0E00               	movlw	0
  7842  009512  0012               	return	
  7843  009514  0012               	return		;funcret
  7844  009516                     __end_of_ReadPushButton:
  7845                           	opt stack 0
  7846                           tblptru	equ	0xFF8
  7847                           tblptrh	equ	0xFF7
  7848                           tblptrl	equ	0xFF6
  7849                           tablat	equ	0xFF5
  7850                           prodh	equ	0xFF4
  7851                           prodl	equ	0xFF3
  7852                           intcon	equ	0xFF2
  7853                           postinc0	equ	0xFEE
  7854                           wreg	equ	0xFE8
  7855                           postdec1	equ	0xFE5
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           indf2	equ	0xFDF
  7859                           postinc2	equ	0xFDE
  7860                           fsr2h	equ	0xFDA
  7861                           fsr2l	equ	0xFD9
  7862                           status	equ	0xFD8
  7863                           
  7864 ;; *************** function _ReadCodeButtons *****************
  7865 ;; Defined at:
  7866 ;;		line 67 in file "Button.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;		None
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  temp            1   37[BANK0 ] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      unsigned char 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;Total ram usage:        1 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    7
  7887 ;; This function calls:
  7888 ;;		_delayUS
  7889 ;; This function is called by:
  7890 ;;		_UseIRCode
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text4
  7895  008F6E                     __ptext4:
  7896                           	opt stack 0
  7897  008F6E                     _ReadCodeButtons:
  7898                           	opt stack 22
  7899                           
  7900                           ;Button.c: 69: unsigned char temp = 0;
  7901                           
  7902                           ;incstack = 0
  7903  008F6E  0E00               	movlw	0
  7904  008F70  0100               	movlb	0	; () banked
  7905  008F72  6F85               	movwf	ReadCodeButtons@temp& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;Button.c: 71: (LATC &= ~0x10);
  7909  008F74  988B               	bcf	3979,4,c	;volatile
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;Button.c: 72: delayUS(5);
  7913  008F76  0E05               	movlw	5
  7914  008F78  0100               	movlb	0	; () banked
  7915  008F7A  6F7C               	movwf	delayUS@US& (0+255),b
  7916  008F7C  0E00               	movlw	0
  7917  008F7E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7918  008F80  0E00               	movlw	0
  7919  008F82  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7920  008F84  0E00               	movlw	0
  7921  008F86  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7922  008F88  EC8C  F047         	call	_delayUS	;wreg free
  7923                           
  7924                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  7925  008F8C  B081               	btfsc	3969,0,c	;volatile
  7926  008F8E  D004               	goto	l15029
  7927                           
  7928                           ;Button.c: 76: {
  7929                           ;Button.c: 77: temp +=8;
  7930  008F90  0E08               	movlw	8
  7931  008F92  0100               	movlb	0	; () banked
  7932  008F94  2785               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7933  008F96  D000               	goto	l15029
  7934  008F98                     l15029:
  7935                           
  7936                           ;Button.c: 78: }
  7937                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  7938  008F98  B281               	btfsc	3969,1,c	;volatile
  7939  008F9A  D004               	goto	l15033
  7940                           
  7941                           ;Button.c: 80: {
  7942                           ;Button.c: 81: temp +=4;
  7943  008F9C  0E04               	movlw	4
  7944  008F9E  0100               	movlb	0	; () banked
  7945  008FA0  2785               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7946  008FA2  D000               	goto	l15033
  7947  008FA4                     l15033:
  7948                           
  7949                           ;Button.c: 82: }
  7950                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  7951  008FA4  B481               	btfsc	3969,2,c	;volatile
  7952  008FA6  D004               	goto	l15037
  7953                           
  7954                           ;Button.c: 84: {
  7955                           ;Button.c: 85: temp +=2;
  7956  008FA8  0E02               	movlw	2
  7957  008FAA  0100               	movlb	0	; () banked
  7958  008FAC  2785               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7959  008FAE  D000               	goto	l15037
  7960  008FB0                     l15037:
  7961                           
  7962                           ;Button.c: 86: }
  7963                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  7964  008FB0  B681               	btfsc	3969,3,c	;volatile
  7965  008FB2  D002               	goto	l1648
  7966                           
  7967                           ;Button.c: 88: {
  7968                           ;Button.c: 89: temp +=1;
  7969  008FB4  0100               	movlb	0	; () banked
  7970  008FB6  2B85               	incf	ReadCodeButtons@temp& (0+255),f,b
  7971  008FB8                     l1648:
  7972                           
  7973                           ;Button.c: 90: }
  7974                           ;Button.c: 91: (LATC |= 0x10);
  7975  008FB8  888B               	bsf	3979,4,c	;volatile
  7976                           
  7977                           ;Button.c: 92: return temp;
  7978  008FBA  0100               	movlb	0	; () banked
  7979  008FBC  5185               	movf	ReadCodeButtons@temp& (0+255),w,b
  7980  008FBE  0012               	return	
  7981                           
  7982                           ; BSR set to: 0
  7983                           
  7984                           ; BSR set to: 0
  7985  008FC0  0012               	return		;funcret
  7986  008FC2                     __end_of_ReadCodeButtons:
  7987                           	opt stack 0
  7988                           tblptru	equ	0xFF8
  7989                           tblptrh	equ	0xFF7
  7990                           tblptrl	equ	0xFF6
  7991                           tablat	equ	0xFF5
  7992                           prodh	equ	0xFF4
  7993                           prodl	equ	0xFF3
  7994                           intcon	equ	0xFF2
  7995                           postinc0	equ	0xFEE
  7996                           wreg	equ	0xFE8
  7997                           postdec1	equ	0xFE5
  7998                           fsr1h	equ	0xFE2
  7999                           fsr1l	equ	0xFE1
  8000                           indf2	equ	0xFDF
  8001                           postinc2	equ	0xFDE
  8002                           fsr2h	equ	0xFDA
  8003                           fsr2l	equ	0xFD9
  8004                           status	equ	0xFD8
  8005                           
  8006 ;; *************** function _UseBluetooth *****************
  8007 ;; Defined at:
  8008 ;;		line 283 in file "Bluetooth.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  String          2    0[BANK2 ] PTR unsigned char 
  8011 ;;		 -> main@BluetoothString(255), 
  8012 ;;  StringPos       1    2[BANK2 ] unsigned char 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  buf           100   15[BANK2 ] unsigned char [100]
  8015 ;;  rfchannelSTR   10  115[BANK2 ] unsigned char [10]
  8016 ;;  temp            4  142[BANK2 ] unsigned long 
  8017 ;;  EnteredNEC      4  133[BANK2 ] unsigned long 
  8018 ;;  tempNec         4  126[BANK2 ] unsigned long 
  8019 ;;  i               1  146[BANK2 ] unsigned char 
  8020 ;;  NecCommand      1  141[BANK2 ] unsigned char 
  8021 ;;  NecAddress      1  140[BANK2 ] unsigned char 
  8022 ;;  rfconf          1  139[BANK2 ] unsigned char 
  8023 ;;  tempRFArray     1  138[BANK2 ] unsigned char 
  8024 ;;  ok              1  137[BANK2 ] unsigned char 
  8025 ;;  device          1  132[BANK2 ] unsigned char 
  8026 ;;  EmptyPlace      1  131[BANK2 ] unsigned char 
  8027 ;;  timeout         1  130[BANK2 ] unsigned char 
  8028 ;;  set             1  125[BANK2 ] unsigned char 
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      unsigned char 
  8031 ;; Registers used:
  8032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         0       0       0     147       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:      147 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:   11
  8045 ;; This function calls:
  8046 ;;		_ClearUSART
  8047 ;;		_DecodeNEC
  8048 ;;		_EncodeNEC
  8049 ;;		_GetNumber
  8050 ;;		_GetStringAfterComma
  8051 ;;		_ReadVoltage
  8052 ;;		_SendNEC_wait
  8053 ;;		_SendRF_wait
  8054 ;;		_StringAddEqual
  8055 ;;		_StringContains
  8056 ;;		_StringContainsCaseInsensitive
  8057 ;;		_StringMatch
  8058 ;;		_StringMatchCaseInsensitive
  8059 ;;		_SyncGlobalToEEPROM
  8060 ;;		_UARTchar
  8061 ;;		_UARTcommandMenu
  8062 ;;		_UARTstring
  8063 ;;		_UARTstringCRLN
  8064 ;;		_WaitForIRsignal
  8065 ;;		_cleanBuffer
  8066 ;;		_delayUS
  8067 ;;		_lowercaseString
  8068 ;;		_sprintf
  8069 ;; This function is called by:
  8070 ;;		_main
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text5
  8075  0001F6                     __ptext5:
  8076                           	opt stack 0
  8077  0001F6                     _UseBluetooth:
  8078                           	opt stack 19
  8079                           
  8080                           ;Bluetooth.c: 285: unsigned char ok = 1;
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;incstack = 0
  8084  0001F6  0E01               	movlw	1
  8085  0001F8  0102               	movlb	2	; () banked
  8086  0001FA  6F89               	movwf	UseBluetooth@ok& (0+255),b
  8087                           
  8088                           ;Bluetooth.c: 287: unsigned long EnteredNEC = 0;
  8089  0001FC  0E00               	movlw	0
  8090  0001FE  0102               	movlb	2	; () banked
  8091  000200  6F85               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  8092  000202  0E00               	movlw	0
  8093  000204  6F86               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  8094  000206  0E00               	movlw	0
  8095  000208  6F87               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  8096  00020A  0E00               	movlw	0
  8097  00020C  6F88               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  8098                           
  8099                           ;Bluetooth.c: 288: unsigned char NecAddress = 0;
  8100  00020E  0E00               	movlw	0
  8101  000210  0102               	movlb	2	; () banked
  8102  000212  6F8C               	movwf	UseBluetooth@NecAddress& (0+255),b
  8103                           
  8104                           ;Bluetooth.c: 289: unsigned char NecCommand = 0;
  8105  000214  0E00               	movlw	0
  8106  000216  0102               	movlb	2	; () banked
  8107  000218  6F8D               	movwf	UseBluetooth@NecCommand& (0+255),b
  8108                           
  8109                           ;Bluetooth.c: 290: unsigned long temp = 0;
  8110  00021A  0E00               	movlw	0
  8111  00021C  0102               	movlb	2	; () banked
  8112  00021E  6F8E               	movwf	UseBluetooth@temp& (0+255),b
  8113  000220  0E00               	movlw	0
  8114  000222  6F8F               	movwf	(UseBluetooth@temp+1)& (0+255),b
  8115  000224  0E00               	movlw	0
  8116  000226  6F90               	movwf	(UseBluetooth@temp+2)& (0+255),b
  8117  000228  0E00               	movlw	0
  8118  00022A  6F91               	movwf	(UseBluetooth@temp+3)& (0+255),b
  8119                           
  8120                           ;Bluetooth.c: 291: unsigned long tempNec = 0;
  8121  00022C  0E00               	movlw	0
  8122  00022E  0102               	movlb	2	; () banked
  8123  000230  6F7E               	movwf	UseBluetooth@tempNec& (0+255),b
  8124  000232  0E00               	movlw	0
  8125  000234  6F7F               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  8126  000236  0E00               	movlw	0
  8127  000238  6F80               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  8128  00023A  0E00               	movlw	0
  8129  00023C  6F81               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  8130                           
  8131                           ;Bluetooth.c: 292: unsigned char buf[100];
  8132                           ;Bluetooth.c: 293: unsigned char timeout =0;
  8133  00023E  0E00               	movlw	0
  8134  000240  0102               	movlb	2	; () banked
  8135  000242  6F82               	movwf	UseBluetooth@timeout& (0+255),b
  8136                           
  8137                           ;Bluetooth.c: 294: unsigned char rfchannelSTR[10];
  8138                           ;Bluetooth.c: 295: unsigned char rfconf, i, tempRFArray;
  8139                           ;Bluetooth.c: 296: unsigned char device = 0;
  8140  000244  0E00               	movlw	0
  8141  000246  0102               	movlb	2	; () banked
  8142  000248  6F84               	movwf	UseBluetooth@device& (0+255),b
  8143                           
  8144                           ;Bluetooth.c: 297: unsigned char EmptyPlace = 0;
  8145  00024A  0E00               	movlw	0
  8146  00024C  0102               	movlb	2	; () banked
  8147  00024E  6F83               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  8148                           
  8149                           ;Bluetooth.c: 298: unsigned char set = 0;
  8150  000250  0E00               	movlw	0
  8151  000252  0102               	movlb	2	; () banked
  8152  000254  6F7D               	movwf	UseBluetooth@set& (0+255),b
  8153                           
  8154                           ; BSR set to: 2
  8155                           ;Bluetooth.c: 300: cleanBuffer(buf,100);
  8156  000256  0E0F               	movlw	low UseBluetooth@buf
  8157  000258  0100               	movlb	0	; () banked
  8158  00025A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8159  00025C  0E02               	movlw	high UseBluetooth@buf
  8160  00025E  0100               	movlb	0	; () banked
  8161  000260  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8162  000262  0E00               	movlw	0
  8163  000264  0100               	movlb	0	; () banked
  8164  000266  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8165  000268  0E64               	movlw	100
  8166  00026A  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8167  00026C  ECDB  F046         	call	_cleanBuffer	;wreg free
  8168                           
  8169                           ;Bluetooth.c: 301: cleanBuffer(rfchannelSTR,10);
  8170  000270  0E73               	movlw	low UseBluetooth@rfchannelSTR
  8171  000272  0100               	movlb	0	; () banked
  8172  000274  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8173  000276  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8174  000278  0100               	movlb	0	; () banked
  8175  00027A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8176  00027C  0E00               	movlw	0
  8177  00027E  0100               	movlb	0	; () banked
  8178  000280  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8179  000282  0E0A               	movlw	10
  8180  000284  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8181  000286  ECDB  F046         	call	_cleanBuffer	;wreg free
  8182                           
  8183                           ;Bluetooth.c: 303: if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf1"))
  8184  00028A  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8185  00028E  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8186  000292  0EC0               	movlw	low STR_20
  8187  000294  0100               	movlb	0	; () banked
  8188  000296  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8189  000298  0EFF               	movlw	high STR_20
  8190  00029A  0100               	movlb	0	; () banked
  8191  00029C  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8192  00029E  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8193  0002A2  0900               	iorlw	0
  8194  0002A4  B4D8               	btfsc	status,2,c
  8195  0002A6  D083               	goto	l15409
  8196                           
  8197                           ;Bluetooth.c: 304: {
  8198                           ;Bluetooth.c: 305: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  8199  0002A8  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8200  0002AC  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8201  0002B0  0E2E               	movlw	low _Conf1_ChannelD_STR
  8202  0002B2  0100               	movlb	0	; () banked
  8203  0002B4  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8204  0002B6  0EF3               	movlw	high _Conf1_ChannelD_STR
  8205  0002B8  0100               	movlb	0	; () banked
  8206  0002BA  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8207  0002BC  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8208  0002C0  0900               	iorlw	0
  8209  0002C2  B4D8               	btfsc	status,2,c
  8210  0002C4  D012               	goto	l15391
  8211                           
  8212                           ;Bluetooth.c: 306: {
  8213                           ;Bluetooth.c: 308: SendRF_wait(Conf1_ChannelD,1,12,8);
  8214  0002C6  0E69               	movlw	low _Conf1_ChannelD
  8215  0002C8  0100               	movlb	0	; () banked
  8216  0002CA  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8217  0002CC  0EF3               	movlw	high _Conf1_ChannelD
  8218  0002CE  0100               	movlb	0	; () banked
  8219  0002D0  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8220  0002D2  0E01               	movlw	1
  8221  0002D4  0100               	movlb	0	; () banked
  8222  0002D6  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8223  0002D8  0E0C               	movlw	12
  8224  0002DA  0100               	movlb	0	; () banked
  8225  0002DC  6F87               	movwf	SendRF_wait@size& (0+255),b
  8226  0002DE  0E08               	movlw	8
  8227  0002E0  0100               	movlb	0	; () banked
  8228  0002E2  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8229  0002E4  ECB6  F048         	call	_SendRF_wait	;wreg free
  8230                           
  8231                           ;Bluetooth.c: 309: }
  8232  0002E8  D054               	goto	l15403
  8233  0002EA                     l15391:
  8234                           
  8235                           ;Bluetooth.c: 310: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  8236  0002EA  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8237  0002EE  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8238  0002F2  0E3D               	movlw	low _Conf1_ChannelE_STR
  8239  0002F4  0100               	movlb	0	; () banked
  8240  0002F6  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8241  0002F8  0EF3               	movlw	high _Conf1_ChannelE_STR
  8242  0002FA  0100               	movlb	0	; () banked
  8243  0002FC  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8244  0002FE  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8245  000302  0900               	iorlw	0
  8246  000304  B4D8               	btfsc	status,2,c
  8247  000306  D012               	goto	l15395
  8248                           
  8249                           ;Bluetooth.c: 311: {
  8250                           ;Bluetooth.c: 313: SendRF_wait(Conf1_ChannelE,1,12,8);
  8251  000308  0E75               	movlw	low _Conf1_ChannelE
  8252  00030A  0100               	movlb	0	; () banked
  8253  00030C  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8254  00030E  0EF3               	movlw	high _Conf1_ChannelE
  8255  000310  0100               	movlb	0	; () banked
  8256  000312  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8257  000314  0E01               	movlw	1
  8258  000316  0100               	movlb	0	; () banked
  8259  000318  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8260  00031A  0E0C               	movlw	12
  8261  00031C  0100               	movlb	0	; () banked
  8262  00031E  6F87               	movwf	SendRF_wait@size& (0+255),b
  8263  000320  0E08               	movlw	8
  8264  000322  0100               	movlb	0	; () banked
  8265  000324  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8266  000326  ECB6  F048         	call	_SendRF_wait	;wreg free
  8267                           
  8268                           ;Bluetooth.c: 314: }
  8269  00032A  D033               	goto	l15403
  8270  00032C                     l15395:
  8271                           
  8272                           ;Bluetooth.c: 315: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  8273  00032C  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8274  000330  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8275  000334  0E4C               	movlw	low _Conf1_ChannelF_STR
  8276  000336  0100               	movlb	0	; () banked
  8277  000338  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8278  00033A  0EF3               	movlw	high _Conf1_ChannelF_STR
  8279  00033C  0100               	movlb	0	; () banked
  8280  00033E  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8281  000340  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8282  000344  0900               	iorlw	0
  8283  000346  B4D8               	btfsc	status,2,c
  8284  000348  D012               	goto	l15399
  8285                           
  8286                           ;Bluetooth.c: 316: {
  8287                           ;Bluetooth.c: 318: SendRF_wait(Conf1_ChannelF,1,12,8);
  8288  00034A  0E81               	movlw	low _Conf1_ChannelF
  8289  00034C  0100               	movlb	0	; () banked
  8290  00034E  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8291  000350  0EF3               	movlw	high _Conf1_ChannelF
  8292  000352  0100               	movlb	0	; () banked
  8293  000354  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8294  000356  0E01               	movlw	1
  8295  000358  0100               	movlb	0	; () banked
  8296  00035A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8297  00035C  0E0C               	movlw	12
  8298  00035E  0100               	movlb	0	; () banked
  8299  000360  6F87               	movwf	SendRF_wait@size& (0+255),b
  8300  000362  0E08               	movlw	8
  8301  000364  0100               	movlb	0	; () banked
  8302  000366  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8303  000368  ECB6  F048         	call	_SendRF_wait	;wreg free
  8304                           
  8305                           ;Bluetooth.c: 319: }
  8306  00036C  D012               	goto	l15403
  8307  00036E                     l15399:
  8308                           
  8309                           ;Bluetooth.c: 320: else
  8310                           ;Bluetooth.c: 321: {
  8311                           ;Bluetooth.c: 323: UARTstring((unsigned char *)SYNTAX_ERR);
  8312  00036E  0E5B               	movlw	low _SYNTAX_ERR
  8313  000370  0100               	movlb	0	; () banked
  8314  000372  6F7D               	movwf	UARTstring@data& (0+255),b
  8315  000374  0EF3               	movlw	high _SYNTAX_ERR
  8316  000376  0100               	movlb	0	; () banked
  8317  000378  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8318  00037A  EC08  F047         	call	_UARTstring	;wreg free
  8319                           
  8320                           ;Bluetooth.c: 324: UARTstring((unsigned char *)CRLN);
  8321  00037E  0EA7               	movlw	low _CRLN
  8322  000380  0100               	movlb	0	; () banked
  8323  000382  6F7D               	movwf	UARTstring@data& (0+255),b
  8324  000384  0EF3               	movlw	high _CRLN
  8325  000386  0100               	movlb	0	; () banked
  8326  000388  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8327  00038A  EC08  F047         	call	_UARTstring	;wreg free
  8328                           
  8329                           ;Bluetooth.c: 325: return 0;
  8330                           ;	Return value of _UseBluetooth is never used
  8331  00038E  0012               	return	
  8332  000390  D000               	goto	l15403
  8333  000392                     l15403:
  8334                           
  8335                           ;Bluetooth.c: 326: }
  8336                           ;Bluetooth.c: 327: if(ok)
  8337  000392  0102               	movlb	2	; () banked
  8338  000394  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8339  000396  0102               	movlb	2	; () banked
  8340  000398  B4D8               	btfsc	status,2,c
  8341  00039A  0012               	return	
  8342                           
  8343                           ; BSR set to: 2
  8344                           ;Bluetooth.c: 328: {
  8345                           ;Bluetooth.c: 329: UARTstringCRLN((unsigned char *)"Configuration 1 RF code sent");
  8346  00039C  0E23               	movlw	low STR_21
  8347  00039E  0100               	movlb	0	; () banked
  8348  0003A0  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8349  0003A2  0EFB               	movlw	high STR_21
  8350  0003A4  0100               	movlb	0	; () banked
  8351  0003A6  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8352  0003A8  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  8353                           
  8354                           ;Bluetooth.c: 331: }
  8355                           ;Bluetooth.c: 332: }
  8356                           
  8357                           ;Bluetooth.c: 330: return 1;
  8358                           ;	Return value of _UseBluetooth is never used
  8359  0003AC  0012               	return	
  8360  0003AE                     l15409:
  8361                           
  8362                           ;Bluetooth.c: 333: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf2"
      +                          ))
  8363  0003AE  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8364  0003B2  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8365  0003B6  0EC6               	movlw	low STR_22
  8366  0003B8  0100               	movlb	0	; () banked
  8367  0003BA  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8368  0003BC  0EFF               	movlw	high STR_22
  8369  0003BE  0100               	movlb	0	; () banked
  8370  0003C0  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8371  0003C2  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8372  0003C6  0900               	iorlw	0
  8373  0003C8  B4D8               	btfsc	status,2,c
  8374  0003CA  D16A               	goto	l15461
  8375                           
  8376                           ;Bluetooth.c: 334: {
  8377                           ;Bluetooth.c: 335: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  8378  0003CC  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8379  0003D0  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8380  0003D4  0E6A               	movlw	low _Conf2_ChannelB_ON_STR
  8381  0003D6  0100               	movlb	0	; () banked
  8382  0003D8  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8383  0003DA  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
  8384  0003DC  0100               	movlb	0	; () banked
  8385  0003DE  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8386  0003E0  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8387  0003E4  0900               	iorlw	0
  8388  0003E6  B4D8               	btfsc	status,2,c
  8389  0003E8  D012               	goto	l15415
  8390                           
  8391                           ;Bluetooth.c: 336: {
  8392                           ;Bluetooth.c: 338: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  8393  0003EA  0E9E               	movlw	low _Conf2_ChannelB_ON
  8394  0003EC  0100               	movlb	0	; () banked
  8395  0003EE  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8396  0003F0  0EF2               	movlw	high _Conf2_ChannelB_ON
  8397  0003F2  0100               	movlb	0	; () banked
  8398  0003F4  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8399  0003F6  0E02               	movlw	2
  8400  0003F8  0100               	movlb	0	; () banked
  8401  0003FA  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8402  0003FC  0E10               	movlw	16
  8403  0003FE  0100               	movlb	0	; () banked
  8404  000400  6F87               	movwf	SendRF_wait@size& (0+255),b
  8405  000402  0E08               	movlw	8
  8406  000404  0100               	movlb	0	; () banked
  8407  000406  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8408  000408  ECB6  F048         	call	_SendRF_wait	;wreg free
  8409                           
  8410                           ;Bluetooth.c: 339: }
  8411  00040C  D13B               	goto	l15455
  8412  00040E                     l15415:
  8413                           
  8414                           ;Bluetooth.c: 340: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  8415  00040E  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8416  000412  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8417  000416  0E44               	movlw	low _Conf2_ChannelB_OFF_STR
  8418  000418  0100               	movlb	0	; () banked
  8419  00041A  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8420  00041C  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
  8421  00041E  0100               	movlb	0	; () banked
  8422  000420  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8423  000422  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8424  000426  0900               	iorlw	0
  8425  000428  B4D8               	btfsc	status,2,c
  8426  00042A  D012               	goto	l15419
  8427                           
  8428                           ;Bluetooth.c: 341: {
  8429                           ;Bluetooth.c: 343: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  8430  00042C  0E8E               	movlw	low _Conf2_ChannelB_OFF
  8431  00042E  0100               	movlb	0	; () banked
  8432  000430  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8433  000432  0EF2               	movlw	high _Conf2_ChannelB_OFF
  8434  000434  0100               	movlb	0	; () banked
  8435  000436  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8436  000438  0E02               	movlw	2
  8437  00043A  0100               	movlb	0	; () banked
  8438  00043C  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8439  00043E  0E10               	movlw	16
  8440  000440  0100               	movlb	0	; () banked
  8441  000442  6F87               	movwf	SendRF_wait@size& (0+255),b
  8442  000444  0E08               	movlw	8
  8443  000446  0100               	movlb	0	; () banked
  8444  000448  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8445  00044A  ECB6  F048         	call	_SendRF_wait	;wreg free
  8446                           
  8447                           ;Bluetooth.c: 344: }
  8448  00044E  D11A               	goto	l15455
  8449  000450                     l15419:
  8450                           
  8451                           ;Bluetooth.c: 345: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  8452  000450  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8453  000454  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8454  000458  0E7C               	movlw	low _Conf2_ChannelD_ON_STR
  8455  00045A  0100               	movlb	0	; () banked
  8456  00045C  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8457  00045E  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
  8458  000460  0100               	movlb	0	; () banked
  8459  000462  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8460  000464  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8461  000468  0900               	iorlw	0
  8462  00046A  B4D8               	btfsc	status,2,c
  8463  00046C  D012               	goto	l15423
  8464                           
  8465                           ;Bluetooth.c: 346: {
  8466                           ;Bluetooth.c: 348: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  8467  00046E  0EBE               	movlw	low _Conf2_ChannelD_ON
  8468  000470  0100               	movlb	0	; () banked
  8469  000472  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8470  000474  0EF2               	movlw	high _Conf2_ChannelD_ON
  8471  000476  0100               	movlb	0	; () banked
  8472  000478  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8473  00047A  0E02               	movlw	2
  8474  00047C  0100               	movlb	0	; () banked
  8475  00047E  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8476  000480  0E10               	movlw	16
  8477  000482  0100               	movlb	0	; () banked
  8478  000484  6F87               	movwf	SendRF_wait@size& (0+255),b
  8479  000486  0E08               	movlw	8
  8480  000488  0100               	movlb	0	; () banked
  8481  00048A  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8482  00048C  ECB6  F048         	call	_SendRF_wait	;wreg free
  8483                           
  8484                           ;Bluetooth.c: 349: }
  8485  000490  D0F9               	goto	l15455
  8486  000492                     l15423:
  8487                           
  8488                           ;Bluetooth.c: 350: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  8489  000492  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8490  000496  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8491  00049A  0E57               	movlw	low _Conf2_ChannelD_OFF_STR
  8492  00049C  0100               	movlb	0	; () banked
  8493  00049E  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8494  0004A0  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
  8495  0004A2  0100               	movlb	0	; () banked
  8496  0004A4  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8497  0004A6  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8498  0004AA  0900               	iorlw	0
  8499  0004AC  B4D8               	btfsc	status,2,c
  8500  0004AE  D012               	goto	l15427
  8501                           
  8502                           ;Bluetooth.c: 351: {
  8503                           ;Bluetooth.c: 353: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  8504  0004B0  0EAE               	movlw	low _Conf2_ChannelD_OFF
  8505  0004B2  0100               	movlb	0	; () banked
  8506  0004B4  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8507  0004B6  0EF2               	movlw	high _Conf2_ChannelD_OFF
  8508  0004B8  0100               	movlb	0	; () banked
  8509  0004BA  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8510  0004BC  0E02               	movlw	2
  8511  0004BE  0100               	movlb	0	; () banked
  8512  0004C0  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8513  0004C2  0E10               	movlw	16
  8514  0004C4  0100               	movlb	0	; () banked
  8515  0004C6  6F87               	movwf	SendRF_wait@size& (0+255),b
  8516  0004C8  0E08               	movlw	8
  8517  0004CA  0100               	movlb	0	; () banked
  8518  0004CC  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8519  0004CE  ECB6  F048         	call	_SendRF_wait	;wreg free
  8520                           
  8521                           ;Bluetooth.c: 354: }
  8522  0004D2  D0D8               	goto	l15455
  8523  0004D4                     l15427:
  8524                           
  8525                           ;Bluetooth.c: 355: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  8526  0004D4  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8527  0004D8  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8528  0004DC  0E08               	movlw	low _Conf2_ChannelH_1_ON_STR
  8529  0004DE  0100               	movlb	0	; () banked
  8530  0004E0  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8531  0004E2  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
  8532  0004E4  0100               	movlb	0	; () banked
  8533  0004E6  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8534  0004E8  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8535  0004EC  0900               	iorlw	0
  8536  0004EE  B4D8               	btfsc	status,2,c
  8537  0004F0  D012               	goto	l15431
  8538                           
  8539                           ;Bluetooth.c: 356: {
  8540                           ;Bluetooth.c: 358: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  8541  0004F2  0EDE               	movlw	low _Conf2_ChannelH_1_ON
  8542  0004F4  0100               	movlb	0	; () banked
  8543  0004F6  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8544  0004F8  0EF2               	movlw	high _Conf2_ChannelH_1_ON
  8545  0004FA  0100               	movlb	0	; () banked
  8546  0004FC  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8547  0004FE  0E02               	movlw	2
  8548  000500  0100               	movlb	0	; () banked
  8549  000502  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8550  000504  0E10               	movlw	16
  8551  000506  0100               	movlb	0	; () banked
  8552  000508  6F87               	movwf	SendRF_wait@size& (0+255),b
  8553  00050A  0E08               	movlw	8
  8554  00050C  0100               	movlb	0	; () banked
  8555  00050E  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8556  000510  ECB6  F048         	call	_SendRF_wait	;wreg free
  8557                           
  8558                           ;Bluetooth.c: 359: }
  8559  000514  D0B7               	goto	l15455
  8560  000516                     l15431:
  8561                           
  8562                           ;Bluetooth.c: 360: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  8563  000516  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8564  00051A  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8565  00051E  0EC9               	movlw	low _Conf2_ChannelH_1_OFF_STR
  8566  000520  0100               	movlb	0	; () banked
  8567  000522  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8568  000524  0EF1               	movlw	high _Conf2_ChannelH_1_OFF_STR
  8569  000526  0100               	movlb	0	; () banked
  8570  000528  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8571  00052A  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8572  00052E  0900               	iorlw	0
  8573  000530  B4D8               	btfsc	status,2,c
  8574  000532  D012               	goto	l15435
  8575                           
  8576                           ;Bluetooth.c: 361: {
  8577                           ;Bluetooth.c: 363: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  8578  000534  0ECE               	movlw	low _Conf2_ChannelH_1_OFF
  8579  000536  0100               	movlb	0	; () banked
  8580  000538  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8581  00053A  0EF2               	movlw	high _Conf2_ChannelH_1_OFF
  8582  00053C  0100               	movlb	0	; () banked
  8583  00053E  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8584  000540  0E02               	movlw	2
  8585  000542  0100               	movlb	0	; () banked
  8586  000544  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8587  000546  0E10               	movlw	16
  8588  000548  0100               	movlb	0	; () banked
  8589  00054A  6F87               	movwf	SendRF_wait@size& (0+255),b
  8590  00054C  0E08               	movlw	8
  8591  00054E  0100               	movlb	0	; () banked
  8592  000550  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8593  000552  ECB6  F048         	call	_SendRF_wait	;wreg free
  8594                           
  8595                           ;Bluetooth.c: 364: }
  8596  000556  D096               	goto	l15455
  8597  000558                     l15435:
  8598                           
  8599                           ;Bluetooth.c: 365: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  8600  000558  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8601  00055C  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8602  000560  0E1C               	movlw	low _Conf2_ChannelH_2_ON_STR
  8603  000562  0100               	movlb	0	; () banked
  8604  000564  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8605  000566  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
  8606  000568  0100               	movlb	0	; () banked
  8607  00056A  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8608  00056C  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8609  000570  0900               	iorlw	0
  8610  000572  B4D8               	btfsc	status,2,c
  8611  000574  D012               	goto	l15439
  8612                           
  8613                           ;Bluetooth.c: 366: {
  8614                           ;Bluetooth.c: 368: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  8615  000576  0EFE               	movlw	low _Conf2_ChannelH_2_ON
  8616  000578  0100               	movlb	0	; () banked
  8617  00057A  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8618  00057C  0EF2               	movlw	high _Conf2_ChannelH_2_ON
  8619  00057E  0100               	movlb	0	; () banked
  8620  000580  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8621  000582  0E02               	movlw	2
  8622  000584  0100               	movlb	0	; () banked
  8623  000586  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8624  000588  0E10               	movlw	16
  8625  00058A  0100               	movlb	0	; () banked
  8626  00058C  6F87               	movwf	SendRF_wait@size& (0+255),b
  8627  00058E  0E08               	movlw	8
  8628  000590  0100               	movlb	0	; () banked
  8629  000592  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8630  000594  ECB6  F048         	call	_SendRF_wait	;wreg free
  8631                           
  8632                           ;Bluetooth.c: 369: }
  8633  000598  D075               	goto	l15455
  8634  00059A                     l15439:
  8635                           
  8636                           ;Bluetooth.c: 370: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
  8637  00059A  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8638  00059E  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8639  0005A2  0EDE               	movlw	low _Conf2_ChannelH_2_OFF_STR
  8640  0005A4  0100               	movlb	0	; () banked
  8641  0005A6  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8642  0005A8  0EF1               	movlw	high _Conf2_ChannelH_2_OFF_STR
  8643  0005AA  0100               	movlb	0	; () banked
  8644  0005AC  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8645  0005AE  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8646  0005B2  0900               	iorlw	0
  8647  0005B4  B4D8               	btfsc	status,2,c
  8648  0005B6  D012               	goto	l15443
  8649                           
  8650                           ;Bluetooth.c: 371: {
  8651                           ;Bluetooth.c: 373: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  8652  0005B8  0EEE               	movlw	low _Conf2_ChannelH_2_OFF
  8653  0005BA  0100               	movlb	0	; () banked
  8654  0005BC  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8655  0005BE  0EF2               	movlw	high _Conf2_ChannelH_2_OFF
  8656  0005C0  0100               	movlb	0	; () banked
  8657  0005C2  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8658  0005C4  0E02               	movlw	2
  8659  0005C6  0100               	movlb	0	; () banked
  8660  0005C8  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8661  0005CA  0E10               	movlw	16
  8662  0005CC  0100               	movlb	0	; () banked
  8663  0005CE  6F87               	movwf	SendRF_wait@size& (0+255),b
  8664  0005D0  0E08               	movlw	8
  8665  0005D2  0100               	movlb	0	; () banked
  8666  0005D4  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8667  0005D6  ECB6  F048         	call	_SendRF_wait	;wreg free
  8668                           
  8669                           ;Bluetooth.c: 374: }
  8670  0005DA  D054               	goto	l15455
  8671  0005DC                     l15443:
  8672                           
  8673                           ;Bluetooth.c: 375: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
  8674  0005DC  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8675  0005E0  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8676  0005E4  0E30               	movlw	low _Conf2_ChannelH_3_ON_STR
  8677  0005E6  0100               	movlb	0	; () banked
  8678  0005E8  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8679  0005EA  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
  8680  0005EC  0100               	movlb	0	; () banked
  8681  0005EE  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8682  0005F0  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8683  0005F4  0900               	iorlw	0
  8684  0005F6  B4D8               	btfsc	status,2,c
  8685  0005F8  D012               	goto	l15447
  8686                           
  8687                           ;Bluetooth.c: 376: {
  8688                           ;Bluetooth.c: 378: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  8689  0005FA  0E1E               	movlw	low _Conf2_ChannelH_3_ON
  8690  0005FC  0100               	movlb	0	; () banked
  8691  0005FE  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8692  000600  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  8693  000602  0100               	movlb	0	; () banked
  8694  000604  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8695  000606  0E02               	movlw	2
  8696  000608  0100               	movlb	0	; () banked
  8697  00060A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8698  00060C  0E10               	movlw	16
  8699  00060E  0100               	movlb	0	; () banked
  8700  000610  6F87               	movwf	SendRF_wait@size& (0+255),b
  8701  000612  0E08               	movlw	8
  8702  000614  0100               	movlb	0	; () banked
  8703  000616  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8704  000618  ECB6  F048         	call	_SendRF_wait	;wreg free
  8705                           
  8706                           ;Bluetooth.c: 379: }
  8707  00061C  D033               	goto	l15455
  8708  00061E                     l15447:
  8709                           
  8710                           ;Bluetooth.c: 380: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
  8711  00061E  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8712  000622  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8713  000626  0EF3               	movlw	low _Conf2_ChannelH_3_OFF_STR
  8714  000628  0100               	movlb	0	; () banked
  8715  00062A  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8716  00062C  0EF1               	movlw	high _Conf2_ChannelH_3_OFF_STR
  8717  00062E  0100               	movlb	0	; () banked
  8718  000630  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8719  000632  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8720  000636  0900               	iorlw	0
  8721  000638  B4D8               	btfsc	status,2,c
  8722  00063A  D012               	goto	l15451
  8723                           
  8724                           ;Bluetooth.c: 381: {
  8725                           ;Bluetooth.c: 383: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  8726  00063C  0EEE               	movlw	low _Conf2_ChannelH_2_OFF
  8727  00063E  0100               	movlb	0	; () banked
  8728  000640  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8729  000642  0EF2               	movlw	high _Conf2_ChannelH_2_OFF
  8730  000644  0100               	movlb	0	; () banked
  8731  000646  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8732  000648  0E03               	movlw	3
  8733  00064A  0100               	movlb	0	; () banked
  8734  00064C  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8735  00064E  0E10               	movlw	16
  8736  000650  0100               	movlb	0	; () banked
  8737  000652  6F87               	movwf	SendRF_wait@size& (0+255),b
  8738  000654  0E08               	movlw	8
  8739  000656  0100               	movlb	0	; () banked
  8740  000658  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8741  00065A  ECB6  F048         	call	_SendRF_wait	;wreg free
  8742                           
  8743                           ;Bluetooth.c: 384: }
  8744  00065E  D012               	goto	l15455
  8745  000660                     l15451:
  8746                           
  8747                           ;Bluetooth.c: 385: else
  8748                           ;Bluetooth.c: 386: {
  8749                           ;Bluetooth.c: 388: UARTstring((unsigned char *)SYNTAX_ERR);
  8750  000660  0E5B               	movlw	low _SYNTAX_ERR
  8751  000662  0100               	movlb	0	; () banked
  8752  000664  6F7D               	movwf	UARTstring@data& (0+255),b
  8753  000666  0EF3               	movlw	high _SYNTAX_ERR
  8754  000668  0100               	movlb	0	; () banked
  8755  00066A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8756  00066C  EC08  F047         	call	_UARTstring	;wreg free
  8757                           
  8758                           ;Bluetooth.c: 389: UARTstring(CRLN);
  8759  000670  0EA7               	movlw	low _CRLN
  8760  000672  0100               	movlb	0	; () banked
  8761  000674  6F7D               	movwf	UARTstring@data& (0+255),b
  8762  000676  0EF3               	movlw	high _CRLN
  8763  000678  0100               	movlb	0	; () banked
  8764  00067A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8765  00067C  EC08  F047         	call	_UARTstring	;wreg free
  8766                           
  8767                           ;Bluetooth.c: 390: return 0;
  8768                           ;	Return value of _UseBluetooth is never used
  8769  000680  0012               	return	
  8770  000682  D000               	goto	l15455
  8771  000684                     l15455:
  8772                           
  8773                           ;Bluetooth.c: 391: }
  8774                           ;Bluetooth.c: 392: if(ok)
  8775  000684  0102               	movlb	2	; () banked
  8776  000686  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8777  000688  0102               	movlb	2	; () banked
  8778  00068A  B4D8               	btfsc	status,2,c
  8779  00068C  0012               	return	
  8780                           
  8781                           ; BSR set to: 2
  8782                           ;Bluetooth.c: 393: {
  8783                           ;Bluetooth.c: 394: UARTstringCRLN((unsigned char *)"Configuration 2 RF code sent");
  8784  00068E  0E40               	movlw	low STR_23
  8785  000690  0100               	movlb	0	; () banked
  8786  000692  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8787  000694  0EFB               	movlw	high STR_23
  8788  000696  0100               	movlb	0	; () banked
  8789  000698  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8790  00069A  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  8791                           
  8792                           ;Bluetooth.c: 396: }
  8793                           ;Bluetooth.c: 397: }
  8794                           
  8795                           ;Bluetooth.c: 395: return 1;
  8796                           ;	Return value of _UseBluetooth is never used
  8797  00069E  0012               	return	
  8798  0006A0                     l15461:
  8799                           
  8800                           ;Bluetooth.c: 398: else if(StringContainsCaseInsensitive(String,(unsigned char *)"NEC"))
  8801  0006A0  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8802  0006A4  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8803  0006A8  0EEE               	movlw	low STR_24
  8804  0006AA  0100               	movlb	0	; () banked
  8805  0006AC  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8806  0006AE  0EFF               	movlw	high STR_24
  8807  0006B0  0100               	movlb	0	; () banked
  8808  0006B2  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8809  0006B4  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8810  0006B8  0900               	iorlw	0
  8811  0006BA  B4D8               	btfsc	status,2,c
  8812  0006BC  D1EF               	goto	l15525
  8813                           
  8814                           ;Bluetooth.c: 399: {
  8815                           ;Bluetooth.c: 400: if(!GetNumber(String, 2, &temp))
  8816  0006BE  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  8817  0006C2  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  8818  0006C6  0E02               	movlw	2
  8819  0006C8  0100               	movlb	0	; () banked
  8820  0006CA  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  8821  0006CC  0E8E               	movlw	low UseBluetooth@temp
  8822  0006CE  0100               	movlb	0	; () banked
  8823  0006D0  6F8B               	movwf	GetNumber@result& (0+255),b
  8824  0006D2  0E02               	movlw	high UseBluetooth@temp
  8825  0006D4  0100               	movlb	0	; () banked
  8826  0006D6  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  8827  0006D8  EC30  F024         	call	_GetNumber	;wreg free
  8828  0006DC  0900               	iorlw	0
  8829  0006DE  A4D8               	btfss	status,2,c
  8830  0006E0  D0C9               	goto	l15497
  8831                           
  8832                           ;Bluetooth.c: 401: {
  8833                           ;Bluetooth.c: 402: if(temp > 0xFF)
  8834  0006E2  0102               	movlb	2	; () banked
  8835  0006E4  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8836  0006E6  0102               	movlb	2	; () banked
  8837  0006E8  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8838  0006EA  E104               	bnz	u19300
  8839  0006EC  0102               	movlb	2	; () banked
  8840  0006EE  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8841  0006F0  A0D8               	btfss	status,0,c
  8842  0006F2  D011               	goto	l1881
  8843  0006F4                     u19300:
  8844                           
  8845                           ; BSR set to: 2
  8846                           ;Bluetooth.c: 403: {
  8847                           ;Bluetooth.c: 404: UARTstringCRLN((unsigned char *)"Error: Command larger that 255");
  8848  0006F4  0E0E               	movlw	low STR_25
  8849  0006F6  0100               	movlb	0	; () banked
  8850  0006F8  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8851  0006FA  0EFA               	movlw	high STR_25
  8852  0006FC  0100               	movlb	0	; () banked
  8853  0006FE  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8854  000700  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  8855                           
  8856                           ;Bluetooth.c: 405: UARTstring(CRLN);
  8857  000704  0EA7               	movlw	low _CRLN
  8858  000706  0100               	movlb	0	; () banked
  8859  000708  6F7D               	movwf	UARTstring@data& (0+255),b
  8860  00070A  0EF3               	movlw	high _CRLN
  8861  00070C  0100               	movlb	0	; () banked
  8862  00070E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8863  000710  EC08  F047         	call	_UARTstring	;wreg free
  8864                           
  8865                           ;Bluetooth.c: 406: return 0;
  8866                           ;	Return value of _UseBluetooth is never used
  8867  000714  0012               	return	
  8868  000716                     l1881:
  8869                           
  8870                           ; BSR set to: 2
  8871                           ;Bluetooth.c: 407: }
  8872                           ;Bluetooth.c: 408: NecCommand = (unsigned char)temp;
  8873  000716  C28E  F28D         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  8874                           
  8875                           ; BSR set to: 2
  8876                           ;Bluetooth.c: 409: if(!GetNumber(String, 1, &temp))
  8877  00071A  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  8878  00071E  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  8879  000722  0E01               	movlw	1
  8880  000724  0100               	movlb	0	; () banked
  8881  000726  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  8882  000728  0E8E               	movlw	low UseBluetooth@temp
  8883  00072A  0100               	movlb	0	; () banked
  8884  00072C  6F8B               	movwf	GetNumber@result& (0+255),b
  8885  00072E  0E02               	movlw	high UseBluetooth@temp
  8886  000730  0100               	movlb	0	; () banked
  8887  000732  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  8888  000734  EC30  F024         	call	_GetNumber	;wreg free
  8889  000738  0900               	iorlw	0
  8890  00073A  A4D8               	btfss	status,2,c
  8891  00073C  D092               	goto	l15495
  8892                           
  8893                           ;Bluetooth.c: 410: {
  8894                           ;Bluetooth.c: 411: if(temp > 0xFF)
  8895  00073E  0102               	movlb	2	; () banked
  8896  000740  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8897  000742  0102               	movlb	2	; () banked
  8898  000744  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8899  000746  E104               	bnz	u19320
  8900  000748  0102               	movlb	2	; () banked
  8901  00074A  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8902  00074C  A0D8               	btfss	status,0,c
  8903  00074E  D011               	goto	l1883
  8904  000750                     u19320:
  8905                           
  8906                           ; BSR set to: 2
  8907                           ;Bluetooth.c: 412: {
  8908                           ;Bluetooth.c: 413: UARTstringCRLN((unsigned char *)"Error: Address larger that 255");
  8909  000750  0E2D               	movlw	low STR_26
  8910  000752  0100               	movlb	0	; () banked
  8911  000754  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8912  000756  0EFA               	movlw	high STR_26
  8913  000758  0100               	movlb	0	; () banked
  8914  00075A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8915  00075C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  8916                           
  8917                           ;Bluetooth.c: 414: UARTstring(CRLN);
  8918  000760  0EA7               	movlw	low _CRLN
  8919  000762  0100               	movlb	0	; () banked
  8920  000764  6F7D               	movwf	UARTstring@data& (0+255),b
  8921  000766  0EF3               	movlw	high _CRLN
  8922  000768  0100               	movlb	0	; () banked
  8923  00076A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8924  00076C  EC08  F047         	call	_UARTstring	;wreg free
  8925                           
  8926                           ;Bluetooth.c: 415: return 0;
  8927                           ;	Return value of _UseBluetooth is never used
  8928  000770  0012               	return	
  8929  000772                     l1883:
  8930                           
  8931                           ; BSR set to: 2
  8932                           ;Bluetooth.c: 416: }
  8933                           ;Bluetooth.c: 417: NecAddress = (unsigned char) temp;
  8934  000772  C28E  F28C         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  8935                           
  8936                           ; BSR set to: 2
  8937                           ;Bluetooth.c: 418: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
  8938  000776  0E0F               	movlw	low UseBluetooth@buf
  8939  000778  0100               	movlb	0	; () banked
  8940  00077A  6FCA               	movwf	sprintf@sp& (0+255),b
  8941  00077C  0E02               	movlw	high UseBluetooth@buf
  8942  00077E  0100               	movlb	0	; () banked
  8943  000780  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  8944  000782  0ED1               	movlw	low STR_27
  8945  000784  0100               	movlb	0	; () banked
  8946  000786  6FCC               	movwf	sprintf@f& (0+255),b
  8947  000788  0EFC               	movlw	high STR_27
  8948  00078A  0100               	movlb	0	; () banked
  8949  00078C  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  8950  00078E  C28C  F0CE         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8951  000792  0100               	movlb	0	; () banked
  8952  000794  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  8953  000796  ECEF  F010         	call	_sprintf	;wreg free
  8954                           
  8955                           ;Bluetooth.c: 419: UARTstringCRLN(buf);
  8956  00079A  0E0F               	movlw	low UseBluetooth@buf
  8957  00079C  0100               	movlb	0	; () banked
  8958  00079E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8959  0007A0  0E02               	movlw	high UseBluetooth@buf
  8960  0007A2  0100               	movlb	0	; () banked
  8961  0007A4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8962  0007A6  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  8963                           
  8964                           ;Bluetooth.c: 420: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
  8965  0007AA  0E0F               	movlw	low UseBluetooth@buf
  8966  0007AC  0100               	movlb	0	; () banked
  8967  0007AE  6FCA               	movwf	sprintf@sp& (0+255),b
  8968  0007B0  0E02               	movlw	high UseBluetooth@buf
  8969  0007B2  0100               	movlb	0	; () banked
  8970  0007B4  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  8971  0007B6  0EBC               	movlw	low STR_28
  8972  0007B8  0100               	movlb	0	; () banked
  8973  0007BA  6FCC               	movwf	sprintf@f& (0+255),b
  8974  0007BC  0EFC               	movlw	high STR_28
  8975  0007BE  0100               	movlb	0	; () banked
  8976  0007C0  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  8977  0007C2  C28D  F0CE         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8978  0007C6  0100               	movlb	0	; () banked
  8979  0007C8  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  8980  0007CA  ECEF  F010         	call	_sprintf	;wreg free
  8981                           
  8982                           ;Bluetooth.c: 421: UARTstringCRLN(buf);
  8983  0007CE  0E0F               	movlw	low UseBluetooth@buf
  8984  0007D0  0100               	movlb	0	; () banked
  8985  0007D2  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8986  0007D4  0E02               	movlw	high UseBluetooth@buf
  8987  0007D6  0100               	movlb	0	; () banked
  8988  0007D8  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8989  0007DA  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  8990                           
  8991                           ;Bluetooth.c: 422: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  8992  0007DE  C28D  F080         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  8993  0007E2  0102               	movlb	2	; () banked
  8994  0007E4  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
  8995  0007E6  EC6E  F039         	call	_EncodeNEC
  8996  0007EA  C080  F285         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  8997  0007EE  C081  F286         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  8998  0007F2  C082  F287         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  8999  0007F6  C083  F288         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  9000                           
  9001                           ;Bluetooth.c: 423: SendNEC_wait(EnteredNEC,0);
  9002  0007FA  C285  F091         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  9003  0007FE  C286  F092         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  9004  000802  C287  F093         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  9005  000806  C288  F094         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  9006  00080A  0E00               	movlw	0
  9007  00080C  0100               	movlb	0	; () banked
  9008  00080E  6F95               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9009  000810  EC15  F043         	call	_SendNEC_wait	;wreg free
  9010                           
  9011                           ;Bluetooth.c: 424: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  9012  000814  0E0F               	movlw	low UseBluetooth@buf
  9013  000816  0100               	movlb	0	; () banked
  9014  000818  6FCA               	movwf	sprintf@sp& (0+255),b
  9015  00081A  0E02               	movlw	high UseBluetooth@buf
  9016  00081C  0100               	movlb	0	; () banked
  9017  00081E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9018  000820  0E4D               	movlw	low STR_29
  9019  000822  0100               	movlb	0	; () banked
  9020  000824  6FCC               	movwf	sprintf@f& (0+255),b
  9021  000826  0EFC               	movlw	high STR_29
  9022  000828  0100               	movlb	0	; () banked
  9023  00082A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9024  00082C  C285  F0CE         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  9025  000830  C286  F0CF         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  9026  000834  C287  F0D0         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  9027  000838  C288  F0D1         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  9028  00083C  ECEF  F010         	call	_sprintf	;wreg free
  9029                           
  9030                           ;Bluetooth.c: 425: UARTstringCRLN(buf);
  9031  000840  0E0F               	movlw	low UseBluetooth@buf
  9032  000842  0100               	movlb	0	; () banked
  9033  000844  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9034  000846  0E02               	movlw	high UseBluetooth@buf
  9035  000848  0100               	movlb	0	; () banked
  9036  00084A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9037  00084C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9038                           
  9039                           ;Bluetooth.c: 426: UARTstring(CRLN);
  9040  000850  0EA7               	movlw	low _CRLN
  9041  000852  0100               	movlb	0	; () banked
  9042  000854  6F7D               	movwf	UARTstring@data& (0+255),b
  9043  000856  0EF3               	movlw	high _CRLN
  9044  000858  0100               	movlb	0	; () banked
  9045  00085A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9046  00085C  EC08  F047         	call	_UARTstring	;wreg free
  9047                           
  9048                           ;Bluetooth.c: 427: }
  9049  000860  0012               	return	
  9050  000862                     l15495:
  9051                           
  9052                           ;Bluetooth.c: 428: else
  9053                           ;Bluetooth.c: 429: {
  9054                           ;Bluetooth.c: 430: UARTstringCRLN((unsigned char *)"Error: could not decode Address");
  9055  000862  0EEE               	movlw	low STR_30
  9056  000864  0100               	movlb	0	; () banked
  9057  000866  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9058  000868  0EF9               	movlw	high STR_30
  9059  00086A  0100               	movlb	0	; () banked
  9060  00086C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9061  00086E  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9062                           
  9063                           ;Bluetooth.c: 431: }
  9064                           ;Bluetooth.c: 432: }
  9065  000872  0012               	return	
  9066  000874                     l15497:
  9067                           
  9068                           ;Bluetooth.c: 433: else if(!GetNumber(String, 1, &EnteredNEC))
  9069  000874  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  9070  000878  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  9071  00087C  0E01               	movlw	1
  9072  00087E  0100               	movlb	0	; () banked
  9073  000880  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  9074  000882  0E85               	movlw	low UseBluetooth@EnteredNEC
  9075  000884  0100               	movlb	0	; () banked
  9076  000886  6F8B               	movwf	GetNumber@result& (0+255),b
  9077  000888  0E02               	movlw	high UseBluetooth@EnteredNEC
  9078  00088A  0100               	movlb	0	; () banked
  9079  00088C  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  9080  00088E  EC30  F024         	call	_GetNumber	;wreg free
  9081  000892  0900               	iorlw	0
  9082  000894  A4D8               	btfss	status,2,c
  9083  000896  D08A               	goto	l15519
  9084                           
  9085                           ;Bluetooth.c: 434: {
  9086                           ;Bluetooth.c: 435: SendNEC_wait(EnteredNEC,0);
  9087  000898  C285  F091         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  9088  00089C  C286  F092         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  9089  0008A0  C287  F093         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  9090  0008A4  C288  F094         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  9091  0008A8  0E00               	movlw	0
  9092  0008AA  0100               	movlb	0	; () banked
  9093  0008AC  6F95               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9094  0008AE  EC15  F043         	call	_SendNEC_wait	;wreg free
  9095                           
  9096                           ;Bluetooth.c: 436: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
  9097  0008B2  0E0F               	movlw	low UseBluetooth@buf
  9098  0008B4  0100               	movlb	0	; () banked
  9099  0008B6  6FCA               	movwf	sprintf@sp& (0+255),b
  9100  0008B8  0E02               	movlw	high UseBluetooth@buf
  9101  0008BA  0100               	movlb	0	; () banked
  9102  0008BC  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9103  0008BE  0E4D               	movlw	low STR_31
  9104  0008C0  0100               	movlb	0	; () banked
  9105  0008C2  6FCC               	movwf	sprintf@f& (0+255),b
  9106  0008C4  0EFD               	movlw	high STR_31
  9107  0008C6  0100               	movlb	0	; () banked
  9108  0008C8  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9109  0008CA  C285  F0CE         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  9110  0008CE  C286  F0CF         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  9111  0008D2  C287  F0D0         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  9112  0008D6  C288  F0D1         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  9113  0008DA  ECEF  F010         	call	_sprintf	;wreg free
  9114                           
  9115                           ;Bluetooth.c: 437: UARTstringCRLN(buf);
  9116  0008DE  0E0F               	movlw	low UseBluetooth@buf
  9117  0008E0  0100               	movlb	0	; () banked
  9118  0008E2  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9119  0008E4  0E02               	movlw	high UseBluetooth@buf
  9120  0008E6  0100               	movlb	0	; () banked
  9121  0008E8  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9122  0008EA  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9123                           
  9124                           ;Bluetooth.c: 438: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  9125  0008EE  C285  F080         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  9126  0008F2  C286  F081         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  9127  0008F6  C287  F082         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  9128  0008FA  C288  F083         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  9129  0008FE  0E8C               	movlw	low UseBluetooth@NecAddress
  9130  000900  0100               	movlb	0	; () banked
  9131  000902  6F84               	movwf	DecodeNEC@address& (0+255),b
  9132  000904  0E02               	movlw	high UseBluetooth@NecAddress
  9133  000906  0100               	movlb	0	; () banked
  9134  000908  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
  9135  00090A  0E8D               	movlw	low UseBluetooth@NecCommand
  9136  00090C  0100               	movlb	0	; () banked
  9137  00090E  6F86               	movwf	DecodeNEC@command& (0+255),b
  9138  000910  0E02               	movlw	high UseBluetooth@NecCommand
  9139  000912  0100               	movlb	0	; () banked
  9140  000914  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
  9141  000916  ECCA  F041         	call	_DecodeNEC	;wreg free
  9142  00091A  0900               	iorlw	0
  9143  00091C  B4D8               	btfsc	status,2,c
  9144  00091E  D035               	goto	l15513
  9145                           
  9146                           ;Bluetooth.c: 439: {
  9147                           ;Bluetooth.c: 440: sprintf(buf,"address: 0x%02X ", NecAddress);
  9148  000920  0E0F               	movlw	low UseBluetooth@buf
  9149  000922  0100               	movlb	0	; () banked
  9150  000924  6FCA               	movwf	sprintf@sp& (0+255),b
  9151  000926  0E02               	movlw	high UseBluetooth@buf
  9152  000928  0100               	movlb	0	; () banked
  9153  00092A  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9154  00092C  0ED5               	movlw	low (STR_27+4)
  9155  00092E  0100               	movlb	0	; () banked
  9156  000930  6FCC               	movwf	sprintf@f& (0+255),b
  9157  000932  0EFC               	movlw	high (STR_27+4)
  9158  000934  0100               	movlb	0	; () banked
  9159  000936  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9160  000938  C28C  F0CE         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9161  00093C  0100               	movlb	0	; () banked
  9162  00093E  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9163  000940  ECEF  F010         	call	_sprintf	;wreg free
  9164                           
  9165                           ;Bluetooth.c: 441: UARTstringCRLN(buf);
  9166  000944  0E0F               	movlw	low UseBluetooth@buf
  9167  000946  0100               	movlb	0	; () banked
  9168  000948  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9169  00094A  0E02               	movlw	high UseBluetooth@buf
  9170  00094C  0100               	movlb	0	; () banked
  9171  00094E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9172  000950  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9173                           
  9174                           ;Bluetooth.c: 442: sprintf(buf,"command: 0x%02X ", NecCommand);
  9175  000954  0E0F               	movlw	low UseBluetooth@buf
  9176  000956  0100               	movlb	0	; () banked
  9177  000958  6FCA               	movwf	sprintf@sp& (0+255),b
  9178  00095A  0E02               	movlw	high UseBluetooth@buf
  9179  00095C  0100               	movlb	0	; () banked
  9180  00095E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9181  000960  0E99               	movlw	low (STR_48+27)
  9182  000962  0100               	movlb	0	; () banked
  9183  000964  6FCC               	movwf	sprintf@f& (0+255),b
  9184  000966  0EF7               	movlw	high (STR_48+27)
  9185  000968  0100               	movlb	0	; () banked
  9186  00096A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9187  00096C  C28D  F0CE         	movff	UseBluetooth@NecCommand,?_sprintf+4
  9188  000970  0100               	movlb	0	; () banked
  9189  000972  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9190  000974  ECEF  F010         	call	_sprintf	;wreg free
  9191                           
  9192                           ;Bluetooth.c: 443: UARTstringCRLN(buf);
  9193  000978  0E0F               	movlw	low UseBluetooth@buf
  9194  00097A  0100               	movlb	0	; () banked
  9195  00097C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9196  00097E  0E02               	movlw	high UseBluetooth@buf
  9197  000980  0100               	movlb	0	; () banked
  9198  000982  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9199  000984  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9200                           
  9201                           ;Bluetooth.c: 444: }
  9202  000988  D008               	goto	l1888
  9203  00098A                     l15513:
  9204                           
  9205                           ;Bluetooth.c: 445: else
  9206                           ;Bluetooth.c: 446: {
  9207                           ;Bluetooth.c: 447: UARTstringCRLN((unsigned char *)"Error: could not decode NEC code");
  9208  00098A  0E2D               	movlw	low STR_34
  9209  00098C  0100               	movlb	0	; () banked
  9210  00098E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9211  000990  0EF9               	movlw	high STR_34
  9212  000992  0100               	movlb	0	; () banked
  9213  000994  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9214  000996  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9215  00099A                     l1888:
  9216                           
  9217                           ;Bluetooth.c: 448: }
  9218                           ;Bluetooth.c: 449: UARTstring(CRLN);
  9219  00099A  0EA7               	movlw	low _CRLN
  9220  00099C  0100               	movlb	0	; () banked
  9221  00099E  6F7D               	movwf	UARTstring@data& (0+255),b
  9222  0009A0  0EF3               	movlw	high _CRLN
  9223  0009A2  0100               	movlb	0	; () banked
  9224  0009A4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9225  0009A6  EC08  F047         	call	_UARTstring	;wreg free
  9226                           
  9227                           ;Bluetooth.c: 451: }
  9228                           
  9229                           ;Bluetooth.c: 450: return 1;
  9230                           ;	Return value of _UseBluetooth is never used
  9231  0009AA  0012               	return	
  9232  0009AC                     l15519:
  9233                           
  9234                           ;Bluetooth.c: 452: else
  9235                           ;Bluetooth.c: 453: {
  9236                           ;Bluetooth.c: 454: if(!StringContains(String,(unsigned char *)"?"))
  9237  0009AC  C200  F07C         	movff	UseBluetooth@String,StringContains@This
  9238  0009B0  C201  F07D         	movff	UseBluetooth@String+1,StringContains@This+1
  9239  0009B4  0EEC               	movlw	low (STR_91+2)
  9240  0009B6  0100               	movlb	0	; () banked
  9241  0009B8  6F7E               	movwf	StringContains@That& (0+255),b
  9242  0009BA  0EFF               	movlw	high (STR_91+2)
  9243  0009BC  0100               	movlb	0	; () banked
  9244  0009BE  6F7F               	movwf	(StringContains@That+1)& (0+255),b
  9245  0009C0  EC71  F041         	call	_StringContains	;wreg free
  9246  0009C4  0900               	iorlw	0
  9247  0009C6  A4D8               	btfss	status,2,c
  9248  0009C8  D010               	goto	l1890
  9249                           
  9250                           ;Bluetooth.c: 455: {
  9251                           ;Bluetooth.c: 456: UARTstring(CRLN);
  9252  0009CA  0EA7               	movlw	low _CRLN
  9253  0009CC  0100               	movlb	0	; () banked
  9254  0009CE  6F7D               	movwf	UARTstring@data& (0+255),b
  9255  0009D0  0EF3               	movlw	high _CRLN
  9256  0009D2  0100               	movlb	0	; () banked
  9257  0009D4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9258  0009D6  EC08  F047         	call	_UARTstring	;wreg free
  9259                           
  9260                           ;Bluetooth.c: 457: UARTstringCRLN((unsigned char *)"NEC code not entered correctly");
  9261  0009DA  0EE7               	movlw	low STR_36
  9262  0009DC  0100               	movlb	0	; () banked
  9263  0009DE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9264  0009E0  0EFA               	movlw	high STR_36
  9265  0009E2  0100               	movlb	0	; () banked
  9266  0009E4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9267  0009E6  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9268  0009EA                     l1890:
  9269                           
  9270                           ;Bluetooth.c: 458: }
  9271                           ;Bluetooth.c: 459: UARTstring(CRLN);
  9272  0009EA  0EA7               	movlw	low _CRLN
  9273  0009EC  0100               	movlb	0	; () banked
  9274  0009EE  6F7D               	movwf	UARTstring@data& (0+255),b
  9275  0009F0  0EF3               	movlw	high _CRLN
  9276  0009F2  0100               	movlb	0	; () banked
  9277  0009F4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9278  0009F6  EC08  F047         	call	_UARTstring	;wreg free
  9279                           
  9280                           ;Bluetooth.c: 460: UARTstringCRLN((unsigned char *)"Usage:");
  9281  0009FA  0EAC               	movlw	low STR_37
  9282  0009FC  0100               	movlb	0	; () banked
  9283  0009FE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9284  000A00  0EFF               	movlw	high STR_37
  9285  000A02  0100               	movlb	0	; () banked
  9286  000A04  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9287  000A06  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9288                           
  9289                           ;Bluetooth.c: 461: UARTstringCRLN((unsigned char *)"NEC = (32 bit code)");
  9290  000A0A  0E25               	movlw	low STR_38
  9291  000A0C  0100               	movlb	0	; () banked
  9292  000A0E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9293  000A10  0EFD               	movlw	high STR_38
  9294  000A12  0100               	movlb	0	; () banked
  9295  000A14  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9296  000A16  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9297                           
  9298                           ;Bluetooth.c: 462: UARTstringCRLN((unsigned char *)"        or");
  9299  000A1A  0E63               	movlw	low STR_39
  9300  000A1C  0100               	movlb	0	; () banked
  9301  000A1E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9302  000A20  0EFF               	movlw	high STR_39
  9303  000A22  0100               	movlb	0	; () banked
  9304  000A24  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9305  000A26  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9306                           
  9307                           ;Bluetooth.c: 463: UARTstringCRLN((unsigned char *)"NEC = address,command");
  9308  000A2A  0E91               	movlw	low STR_40
  9309  000A2C  0100               	movlb	0	; () banked
  9310  000A2E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9311  000A30  0EFC               	movlw	high STR_40
  9312  000A32  0100               	movlb	0	; () banked
  9313  000A34  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9314  000A36  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9315                           
  9316                           ;Bluetooth.c: 464: UARTstring(CRLN);
  9317  000A3A  0EA7               	movlw	low _CRLN
  9318  000A3C  0100               	movlb	0	; () banked
  9319  000A3E  6F7D               	movwf	UARTstring@data& (0+255),b
  9320  000A40  0EF3               	movlw	high _CRLN
  9321  000A42  0100               	movlb	0	; () banked
  9322  000A44  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9323  000A46  EC08  F047         	call	_UARTstring	;wreg free
  9324                           
  9325                           ;Bluetooth.c: 465: UARTstringCRLN((unsigned char *)"Example:");
  9326  000A4A  0E8B               	movlw	low STR_41
  9327  000A4C  0100               	movlb	0	; () banked
  9328  000A4E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9329  000A50  0EFF               	movlw	high STR_41
  9330  000A52  0100               	movlb	0	; () banked
  9331  000A54  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9332  000A56  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9333                           
  9334                           ;Bluetooth.c: 466: UARTstringCRLN((unsigned char *)"NEC = 0x1CE350AF ");
  9335  000A5A  0EE8               	movlw	low STR_42
  9336  000A5C  0100               	movlb	0	; () banked
  9337  000A5E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9338  000A60  0EFD               	movlw	high STR_42
  9339  000A62  0100               	movlb	0	; () banked
  9340  000A64  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9341  000A66  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9342                           
  9343                           ;Bluetooth.c: 467: UARTstringCRLN((unsigned char *)"      or");
  9344  000A6A  0E65               	movlw	low (STR_39+2)
  9345  000A6C  0100               	movlb	0	; () banked
  9346  000A6E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9347  000A70  0EFF               	movlw	high (STR_39+2)
  9348  000A72  0100               	movlb	0	; () banked
  9349  000A74  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9350  000A76  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9351                           
  9352                           ;Bluetooth.c: 468: UARTstringCRLN((unsigned char *)"NEC = 0x38, 0x0A");
  9353  000A7A  0E40               	movlw	low STR_44
  9354  000A7C  0100               	movlb	0	; () banked
  9355  000A7E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9356  000A80  0EFE               	movlw	high STR_44
  9357  000A82  0100               	movlb	0	; () banked
  9358  000A84  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9359  000A86  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9360                           
  9361                           ;Bluetooth.c: 469: UARTstring(CRLN);
  9362  000A8A  0EA7               	movlw	low _CRLN
  9363  000A8C  0100               	movlb	0	; () banked
  9364  000A8E  6F7D               	movwf	UARTstring@data& (0+255),b
  9365  000A90  0EF3               	movlw	high _CRLN
  9366  000A92  0100               	movlb	0	; () banked
  9367  000A94  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9368  000A96  EC08  F047         	call	_UARTstring	;wreg free
  9369                           
  9370                           ;Bluetooth.c: 471: }
  9371                           ;Bluetooth.c: 472: }
  9372                           
  9373                           ;Bluetooth.c: 470: return 0;
  9374                           ;	Return value of _UseBluetooth is never used
  9375  000A9A  0012               	return	
  9376  000A9C                     l15525:
  9377                           
  9378                           ;Bluetooth.c: 473: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Remote
      +                          Button"))
  9379  000A9C  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9380  000AA0  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9381  000AA4  0E14               	movlw	low STR_45
  9382  000AA6  0100               	movlb	0	; () banked
  9383  000AA8  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9384  000AAA  0EFF               	movlw	high STR_45
  9385  000AAC  0100               	movlb	0	; () banked
  9386  000AAE  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9387  000AB0  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9388  000AB4  0900               	iorlw	0
  9389  000AB6  B4D8               	btfsc	status,2,c
  9390  000AB8  D2C8               	goto	l15613
  9391                           
  9392                           ;Bluetooth.c: 474: {
  9393                           ;Bluetooth.c: 475: if(StringAddEqual(String))
  9394  000ABA  C200  F08B         	movff	UseBluetooth@String,StringAddEqual@Input
  9395  000ABE  C201  F08C         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
  9396  000AC2  EC6D  F031         	call	_StringAddEqual	;wreg free
  9397  000AC6  0900               	iorlw	0
  9398  000AC8  B4D8               	btfsc	status,2,c
  9399  000ACA  D266               	goto	l15607
  9400                           
  9401                           ;Bluetooth.c: 476: {
  9402                           ;Bluetooth.c: 477: StringPos++;
  9403  000ACC  0102               	movlb	2	; () banked
  9404  000ACE  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
  9405                           
  9406                           ; BSR set to: 2
  9407                           ;Bluetooth.c: 478: if(!GetNumber(String, 1, &temp))
  9408  000AD0  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  9409  000AD4  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  9410  000AD8  0E01               	movlw	1
  9411  000ADA  0100               	movlb	0	; () banked
  9412  000ADC  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  9413  000ADE  0E8E               	movlw	low UseBluetooth@temp
  9414  000AE0  0100               	movlb	0	; () banked
  9415  000AE2  6F8B               	movwf	GetNumber@result& (0+255),b
  9416  000AE4  0E02               	movlw	high UseBluetooth@temp
  9417  000AE6  0100               	movlb	0	; () banked
  9418  000AE8  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  9419  000AEA  EC30  F024         	call	_GetNumber	;wreg free
  9420  000AEE  0900               	iorlw	0
  9421  000AF0  A4D8               	btfss	status,2,c
  9422  000AF2  D252               	goto	l15607
  9423                           
  9424                           ;Bluetooth.c: 479: {
  9425                           ;Bluetooth.c: 480: if(temp <= 20 && temp > 0)
  9426  000AF4  0102               	movlb	2	; () banked
  9427  000AF6  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9428  000AF8  0102               	movlb	2	; () banked
  9429  000AFA  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9430  000AFC  0102               	movlb	2	; () banked
  9431  000AFE  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9432  000B00  E104               	bnz	u19391
  9433  000B02  0E15               	movlw	21
  9434  000B04  0102               	movlb	2	; () banked
  9435  000B06  5D8E               	subwf	UseBluetooth@temp& (0+255),w,b
  9436  000B08  B0D8               	btfsc	status,0,c
  9437  000B0A                     u19391:
  9438  000B0A  D22C               	goto	l15603
  9439                           
  9440                           ; BSR set to: 2
  9441  000B0C  0102               	movlb	2	; () banked
  9442  000B0E  518E               	movf	UseBluetooth@temp& (0+255),w,b
  9443  000B10  0102               	movlb	2	; () banked
  9444  000B12  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9445  000B14  0102               	movlb	2	; () banked
  9446  000B16  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9447  000B18  0102               	movlb	2	; () banked
  9448  000B1A  1191               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
  9449  000B1C  B4D8               	btfsc	status,2,c
  9450  000B1E  D222               	goto	l15603
  9451                           
  9452                           ; BSR set to: 2
  9453                           ;Bluetooth.c: 481: {
  9454                           ;Bluetooth.c: 482: if(!StringContainsCaseInsensitive(String,(unsigned char *)"set"))
  9455  000B20  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9456  000B24  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9457  000B28  0E85               	movlw	low (STR_56+16)
  9458  000B2A  0100               	movlb	0	; () banked
  9459  000B2C  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9460  000B2E  0EFD               	movlw	high (STR_56+16)
  9461  000B30  0100               	movlb	0	; () banked
  9462  000B32  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9463  000B34  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9464  000B38  0900               	iorlw	0
  9465  000B3A  A4D8               	btfss	status,2,c
  9466  000B3C  D123               	goto	l15563
  9467                           
  9468                           ;Bluetooth.c: 483: {
  9469                           ;Bluetooth.c: 484: tempNec = EncodeNEC(Global.RemoteButtonNEC[temp-1][0], Global.RemoteB
      +                          uttonNEC[temp-1][1]);
  9470  000B3E  0EFE               	movlw	254
  9471  000B40  0102               	movlb	2	; () banked
  9472  000B42  6F03               	movwf	??_UseBluetooth& (0+255),b
  9473  000B44  0EFF               	movlw	255
  9474  000B46  0102               	movlb	2	; () banked
  9475  000B48  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9476  000B4A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9477  000B4E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9478  000B52  90D8               	bcf	status,0,c
  9479  000B54  0102               	movlb	2	; () banked
  9480  000B56  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9481  000B58  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9482  000B5A  0102               	movlb	2	; () banked
  9483  000B5C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9484  000B5E  0102               	movlb	2	; () banked
  9485  000B60  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9486  000B62  0102               	movlb	2	; () banked
  9487  000B64  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9488  000B66  0102               	movlb	2	; () banked
  9489  000B68  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9490  000B6A  0E00               	movlw	low _Global
  9491  000B6C  0102               	movlb	2	; () banked
  9492  000B6E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9493  000B70  0E04               	movlw	high _Global
  9494  000B72  0102               	movlb	2	; () banked
  9495  000B74  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9496  000B76  0E05               	movlw	5
  9497  000B78  0102               	movlb	2	; () banked
  9498  000B7A  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9499  000B7C  0E00               	movlw	0
  9500  000B7E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9501  000B80  0102               	movlb	2	; () banked
  9502  000B82  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9503  000B84  0102               	movlb	2	; () banked
  9504  000B86  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9505  000B88  0102               	movlb	2	; () banked
  9506  000B8A  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9507  000B8C  0102               	movlb	2	; () banked
  9508  000B8E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9509  000B90  0E01               	movlw	1
  9510  000B92  0102               	movlb	2	; () banked
  9511  000B94  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9512  000B96  6ED9               	movwf	fsr2l,c
  9513  000B98  0E00               	movlw	0
  9514  000B9A  0102               	movlb	2	; () banked
  9515  000B9C  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9516  000B9E  6EDA               	movwf	fsr2h,c
  9517  000BA0  50DF               	movf	indf2,w,c
  9518  000BA2  0100               	movlb	0	; () banked
  9519  000BA4  6F80               	movwf	EncodeNEC@command& (0+255),b
  9520  000BA6  0EFE               	movlw	254
  9521  000BA8  0102               	movlb	2	; () banked
  9522  000BAA  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9523  000BAC  0EFF               	movlw	255
  9524  000BAE  0102               	movlb	2	; () banked
  9525  000BB0  6F0A               	movwf	(??_UseBluetooth+7)& (0+255),b
  9526  000BB2  C28E  F20B         	movff	UseBluetooth@temp,??_UseBluetooth+8
  9527  000BB6  C28F  F20C         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
  9528  000BBA  90D8               	bcf	status,0,c
  9529  000BBC  0102               	movlb	2	; () banked
  9530  000BBE  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9531  000BC0  370C               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
  9532  000BC2  0102               	movlb	2	; () banked
  9533  000BC4  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9534  000BC6  0102               	movlb	2	; () banked
  9535  000BC8  270B               	addwf	(??_UseBluetooth+8)& (0+255),f,b
  9536  000BCA  0102               	movlb	2	; () banked
  9537  000BCC  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9538  000BCE  0102               	movlb	2	; () banked
  9539  000BD0  230C               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
  9540  000BD2  0E05               	movlw	low (_Global+5)
  9541  000BD4  0102               	movlb	2	; () banked
  9542  000BD6  250B               	addwf	(??_UseBluetooth+8)& (0+255),w,b
  9543  000BD8  6ED9               	movwf	fsr2l,c
  9544  000BDA  0E04               	movlw	high (_Global+5)
  9545  000BDC  0102               	movlb	2	; () banked
  9546  000BDE  210C               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
  9547  000BE0  6EDA               	movwf	fsr2h,c
  9548  000BE2  50DF               	movf	indf2,w,c
  9549  000BE4  EC6E  F039         	call	_EncodeNEC
  9550  000BE8  C080  F27E         	movff	?_EncodeNEC,UseBluetooth@tempNec
  9551  000BEC  C081  F27F         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
  9552  000BF0  C082  F280         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
  9553  000BF4  C083  F281         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
  9554                           
  9555                           ;Bluetooth.c: 485: if(tempNec != 0x00FF00FF)
  9556  000BF8  0102               	movlb	2	; () banked
  9557  000BFA  297E               	incf	UseBluetooth@tempNec& (0+255),w,b
  9558  000BFC  E108               	bnz	u19420
  9559  000BFE  0102               	movlb	2	; () banked
  9560  000C00  2980               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
  9561  000C02  0102               	movlb	2	; () banked
  9562  000C04  117F               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
  9563  000C06  0102               	movlb	2	; () banked
  9564  000C08  1181               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
  9565  000C0A  B4D8               	btfsc	status,2,c
  9566  000C0C  D0A9               	goto	l15557
  9567  000C0E                     u19420:
  9568                           
  9569                           ; BSR set to: 2
  9570                           ;Bluetooth.c: 486: {
  9571                           ;Bluetooth.c: 487: SendNEC_wait(tempNec,0);
  9572  000C0E  C27E  F091         	movff	UseBluetooth@tempNec,SendNEC_wait@code
  9573  000C12  C27F  F092         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
  9574  000C16  C280  F093         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
  9575  000C1A  C281  F094         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
  9576  000C1E  0E00               	movlw	0
  9577  000C20  0100               	movlb	0	; () banked
  9578  000C22  6F95               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9579  000C24  EC15  F043         	call	_SendNEC_wait	;wreg free
  9580                           
  9581                           ;Bluetooth.c: 488: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
  9582  000C28  0E0F               	movlw	low UseBluetooth@buf
  9583  000C2A  0100               	movlb	0	; () banked
  9584  000C2C  6FCA               	movwf	sprintf@sp& (0+255),b
  9585  000C2E  0E02               	movlw	high UseBluetooth@buf
  9586  000C30  0100               	movlb	0	; () banked
  9587  000C32  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9588  000C34  0EE6               	movlw	low STR_47
  9589  000C36  0100               	movlb	0	; () banked
  9590  000C38  6FCC               	movwf	sprintf@f& (0+255),b
  9591  000C3A  0EFC               	movlw	high STR_47
  9592  000C3C  0100               	movlb	0	; () banked
  9593  000C3E  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9594  000C40  C27E  F0CE         	movff	UseBluetooth@tempNec,?_sprintf+4
  9595  000C44  C27F  F0CF         	movff	UseBluetooth@tempNec+1,?_sprintf+5
  9596  000C48  C280  F0D0         	movff	UseBluetooth@tempNec+2,?_sprintf+6
  9597  000C4C  C281  F0D1         	movff	UseBluetooth@tempNec+3,?_sprintf+7
  9598  000C50  ECEF  F010         	call	_sprintf	;wreg free
  9599                           
  9600                           ;Bluetooth.c: 489: UARTstringCRLN(buf);
  9601  000C54  0E0F               	movlw	low UseBluetooth@buf
  9602  000C56  0100               	movlb	0	; () banked
  9603  000C58  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9604  000C5A  0E02               	movlw	high UseBluetooth@buf
  9605  000C5C  0100               	movlb	0	; () banked
  9606  000C5E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9607  000C60  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9608                           
  9609                           ;Bluetooth.c: 490: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global.Remo
      +                          teButtonNEC[temp-1][0], Global.RemoteButtonNEC[temp-1][1]);
  9610  000C64  0E0F               	movlw	low UseBluetooth@buf
  9611  000C66  0100               	movlb	0	; () banked
  9612  000C68  6FCA               	movwf	sprintf@sp& (0+255),b
  9613  000C6A  0E02               	movlw	high UseBluetooth@buf
  9614  000C6C  0100               	movlb	0	; () banked
  9615  000C6E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9616  000C70  0E7E               	movlw	low STR_48
  9617  000C72  0100               	movlb	0	; () banked
  9618  000C74  6FCC               	movwf	sprintf@f& (0+255),b
  9619  000C76  0EF7               	movlw	high STR_48
  9620  000C78  0100               	movlb	0	; () banked
  9621  000C7A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9622  000C7C  0EFE               	movlw	254
  9623  000C7E  0102               	movlb	2	; () banked
  9624  000C80  6F03               	movwf	??_UseBluetooth& (0+255),b
  9625  000C82  0EFF               	movlw	255
  9626  000C84  0102               	movlb	2	; () banked
  9627  000C86  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9628  000C88  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9629  000C8C  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9630  000C90  90D8               	bcf	status,0,c
  9631  000C92  0102               	movlb	2	; () banked
  9632  000C94  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9633  000C96  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9634  000C98  0102               	movlb	2	; () banked
  9635  000C9A  5103               	movf	??_UseBluetooth& (0+255),w,b
  9636  000C9C  0102               	movlb	2	; () banked
  9637  000C9E  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9638  000CA0  0102               	movlb	2	; () banked
  9639  000CA2  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9640  000CA4  0102               	movlb	2	; () banked
  9641  000CA6  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9642  000CA8  0E05               	movlw	low (_Global+5)
  9643  000CAA  0102               	movlb	2	; () banked
  9644  000CAC  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9645  000CAE  6ED9               	movwf	fsr2l,c
  9646  000CB0  0E04               	movlw	high (_Global+5)
  9647  000CB2  0102               	movlb	2	; () banked
  9648  000CB4  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9649  000CB6  6EDA               	movwf	fsr2h,c
  9650  000CB8  50DF               	movf	indf2,w,c
  9651  000CBA  0102               	movlb	2	; () banked
  9652  000CBC  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9653  000CBE  0102               	movlb	2	; () banked
  9654  000CC0  5107               	movf	(??_UseBluetooth+4)& (0+255),w,b
  9655  000CC2  0100               	movlb	0	; () banked
  9656  000CC4  6FCE               	movwf	(?_sprintf+4)& (0+255),b
  9657  000CC6  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9658  000CC8  0EFE               	movlw	254
  9659  000CCA  0102               	movlb	2	; () banked
  9660  000CCC  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9661  000CCE  0EFF               	movlw	255
  9662  000CD0  0102               	movlb	2	; () banked
  9663  000CD2  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9664  000CD4  C28E  F20A         	movff	UseBluetooth@temp,??_UseBluetooth+7
  9665  000CD8  C28F  F20B         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
  9666  000CDC  90D8               	bcf	status,0,c
  9667  000CDE  0102               	movlb	2	; () banked
  9668  000CE0  370A               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
  9669  000CE2  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9670  000CE4  0102               	movlb	2	; () banked
  9671  000CE6  5108               	movf	(??_UseBluetooth+5)& (0+255),w,b
  9672  000CE8  0102               	movlb	2	; () banked
  9673  000CEA  270A               	addwf	(??_UseBluetooth+7)& (0+255),f,b
  9674  000CEC  0102               	movlb	2	; () banked
  9675  000CEE  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9676  000CF0  0102               	movlb	2	; () banked
  9677  000CF2  230B               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
  9678  000CF4  0E00               	movlw	low _Global
  9679  000CF6  0102               	movlb	2	; () banked
  9680  000CF8  6F0C               	movwf	(??_UseBluetooth+9)& (0+255),b
  9681  000CFA  0E04               	movlw	high _Global
  9682  000CFC  0102               	movlb	2	; () banked
  9683  000CFE  6F0D               	movwf	(??_UseBluetooth+10)& (0+255),b
  9684  000D00  0E05               	movlw	5
  9685  000D02  0102               	movlb	2	; () banked
  9686  000D04  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9687  000D06  0E00               	movlw	0
  9688  000D08  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9689  000D0A  0102               	movlb	2	; () banked
  9690  000D0C  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9691  000D0E  0102               	movlb	2	; () banked
  9692  000D10  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9693  000D12  0102               	movlb	2	; () banked
  9694  000D14  510B               	movf	(??_UseBluetooth+8)& (0+255),w,b
  9695  000D16  0102               	movlb	2	; () banked
  9696  000D18  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9697  000D1A  0E01               	movlw	1
  9698  000D1C  0102               	movlb	2	; () banked
  9699  000D1E  250C               	addwf	(??_UseBluetooth+9)& (0+255),w,b
  9700  000D20  6ED9               	movwf	fsr2l,c
  9701  000D22  0E00               	movlw	0
  9702  000D24  0102               	movlb	2	; () banked
  9703  000D26  210D               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
  9704  000D28  6EDA               	movwf	fsr2h,c
  9705  000D2A  50DF               	movf	indf2,w,c
  9706  000D2C  0102               	movlb	2	; () banked
  9707  000D2E  6F0E               	movwf	(??_UseBluetooth+11)& (0+255),b
  9708  000D30  0102               	movlb	2	; () banked
  9709  000D32  510E               	movf	(??_UseBluetooth+11)& (0+255),w,b
  9710  000D34  0100               	movlb	0	; () banked
  9711  000D36  6FD0               	movwf	(?_sprintf+6)& (0+255),b
  9712  000D38  6BD1               	clrf	(?_sprintf+7)& (0+255),b
  9713  000D3A  ECEF  F010         	call	_sprintf	;wreg free
  9714                           
  9715                           ;Bluetooth.c: 491: UARTstringCRLN(buf);
  9716  000D3E  0E0F               	movlw	low UseBluetooth@buf
  9717  000D40  0100               	movlb	0	; () banked
  9718  000D42  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9719  000D44  0E02               	movlw	high UseBluetooth@buf
  9720  000D46  0100               	movlb	0	; () banked
  9721  000D48  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9722  000D4A  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9723                           
  9724                           ;Bluetooth.c: 492: UARTstring(CRLN);
  9725  000D4E  0EA7               	movlw	low _CRLN
  9726  000D50  0100               	movlb	0	; () banked
  9727  000D52  6F7D               	movwf	UARTstring@data& (0+255),b
  9728  000D54  0EF3               	movlw	high _CRLN
  9729  000D56  0100               	movlb	0	; () banked
  9730  000D58  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9731  000D5A  EC08  F047         	call	_UARTstring	;wreg free
  9732                           
  9733                           ;Bluetooth.c: 493: return 1;
  9734                           ;	Return value of _UseBluetooth is never used
  9735  000D5E  0012               	return	
  9736  000D60                     l15557:
  9737                           
  9738                           ;Bluetooth.c: 494: }
  9739                           ;Bluetooth.c: 495: UARTstring(CRLN);
  9740  000D60  0EA7               	movlw	low _CRLN
  9741  000D62  0100               	movlb	0	; () banked
  9742  000D64  6F7D               	movwf	UARTstring@data& (0+255),b
  9743  000D66  0EF3               	movlw	high _CRLN
  9744  000D68  0100               	movlb	0	; () banked
  9745  000D6A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9746  000D6C  EC08  F047         	call	_UARTstring	;wreg free
  9747                           
  9748                           ;Bluetooth.c: 496: UARTstringCRLN((unsigned char *)"Error: No NEC code saved for specifi
      +                          ed command");
  9749  000D70  0EDF               	movlw	low STR_49
  9750  000D72  0100               	movlb	0	; () banked
  9751  000D74  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9752  000D76  0EF5               	movlw	high STR_49
  9753  000D78  0100               	movlb	0	; () banked
  9754  000D7A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9755  000D7C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9756                           
  9757                           ;Bluetooth.c: 497: return 0;
  9758                           ;	Return value of _UseBluetooth is never used
  9759  000D80  0012               	return	
  9760                           
  9761                           ;Bluetooth.c: 498: }
  9762  000D82  D10A               	goto	l15607
  9763  000D84                     l15563:
  9764                           
  9765                           ;Bluetooth.c: 499: else
  9766                           ;Bluetooth.c: 500: {
  9767                           ;Bluetooth.c: 501: if(!WaitForIRsignal())
  9768  000D84  ECAE  F043         	call	_WaitForIRsignal	;wreg free
  9769  000D88  0900               	iorlw	0
  9770  000D8A  B4D8               	btfsc	status,2,c
  9771  000D8C  0012               	return	
  9772  000D8E  D001               	goto	l15567
  9773                           
  9774                           ;Bluetooth.c: 502: {
  9775                           ;Bluetooth.c: 503: return 0;
  9776                           ;	Return value of _UseBluetooth is never used
  9777  000D90  0012               	return	
  9778  000D92                     l15567:
  9779                           
  9780                           ;Bluetooth.c: 504: }
  9781                           ;Bluetooth.c: 507: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  9782  000D92  C0DD  F080         	movff	_IR_NEC,DecodeNEC@Nec
  9783  000D96  C0DE  F081         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  9784  000D9A  C0DF  F082         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  9785  000D9E  C0E0  F083         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  9786  000DA2  0E8C               	movlw	low UseBluetooth@NecAddress
  9787  000DA4  0100               	movlb	0	; () banked
  9788  000DA6  6F84               	movwf	DecodeNEC@address& (0+255),b
  9789  000DA8  0E02               	movlw	high UseBluetooth@NecAddress
  9790  000DAA  0100               	movlb	0	; () banked
  9791  000DAC  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
  9792  000DAE  0E8D               	movlw	low UseBluetooth@NecCommand
  9793  000DB0  0100               	movlb	0	; () banked
  9794  000DB2  6F86               	movwf	DecodeNEC@command& (0+255),b
  9795  000DB4  0E02               	movlw	high UseBluetooth@NecCommand
  9796  000DB6  0100               	movlb	0	; () banked
  9797  000DB8  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
  9798  000DBA  ECCA  F041         	call	_DecodeNEC	;wreg free
  9799                           
  9800                           ;Bluetooth.c: 508: Global.RemoteButtonNEC[temp - 1][0] = NecAddress;
  9801  000DBE  0EFE               	movlw	254
  9802  000DC0  0102               	movlb	2	; () banked
  9803  000DC2  6F03               	movwf	??_UseBluetooth& (0+255),b
  9804  000DC4  0EFF               	movlw	255
  9805  000DC6  0102               	movlb	2	; () banked
  9806  000DC8  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9807  000DCA  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9808  000DCE  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9809  000DD2  90D8               	bcf	status,0,c
  9810  000DD4  0102               	movlb	2	; () banked
  9811  000DD6  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9812  000DD8  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9813  000DDA  0102               	movlb	2	; () banked
  9814  000DDC  5103               	movf	??_UseBluetooth& (0+255),w,b
  9815  000DDE  0102               	movlb	2	; () banked
  9816  000DE0  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9817  000DE2  0102               	movlb	2	; () banked
  9818  000DE4  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9819  000DE6  0102               	movlb	2	; () banked
  9820  000DE8  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9821  000DEA  0E05               	movlw	low (_Global+5)
  9822  000DEC  0102               	movlb	2	; () banked
  9823  000DEE  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9824  000DF0  6ED9               	movwf	fsr2l,c
  9825  000DF2  0E04               	movlw	high (_Global+5)
  9826  000DF4  0102               	movlb	2	; () banked
  9827  000DF6  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9828  000DF8  6EDA               	movwf	fsr2h,c
  9829  000DFA  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
  9830                           
  9831                           ; BSR set to: 2
  9832                           ;Bluetooth.c: 509: Global.RemoteButtonNEC[temp - 1][1] = NecCommand;
  9833  000DFE  0EFE               	movlw	254
  9834  000E00  0102               	movlb	2	; () banked
  9835  000E02  6F03               	movwf	??_UseBluetooth& (0+255),b
  9836  000E04  0EFF               	movlw	255
  9837  000E06  0102               	movlb	2	; () banked
  9838  000E08  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9839  000E0A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9840  000E0E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9841  000E12  90D8               	bcf	status,0,c
  9842  000E14  0102               	movlb	2	; () banked
  9843  000E16  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9844  000E18  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9845  000E1A  0102               	movlb	2	; () banked
  9846  000E1C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9847  000E1E  0102               	movlb	2	; () banked
  9848  000E20  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9849  000E22  0102               	movlb	2	; () banked
  9850  000E24  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9851  000E26  0102               	movlb	2	; () banked
  9852  000E28  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9853  000E2A  0E00               	movlw	low _Global
  9854  000E2C  0102               	movlb	2	; () banked
  9855  000E2E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9856  000E30  0E04               	movlw	high _Global
  9857  000E32  0102               	movlb	2	; () banked
  9858  000E34  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9859  000E36  0E05               	movlw	5
  9860  000E38  0102               	movlb	2	; () banked
  9861  000E3A  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9862  000E3C  0E00               	movlw	0
  9863  000E3E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9864  000E40  0102               	movlb	2	; () banked
  9865  000E42  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9866  000E44  0102               	movlb	2	; () banked
  9867  000E46  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9868  000E48  0102               	movlb	2	; () banked
  9869  000E4A  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9870  000E4C  0102               	movlb	2	; () banked
  9871  000E4E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9872  000E50  0E01               	movlw	1
  9873  000E52  0102               	movlb	2	; () banked
  9874  000E54  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9875  000E56  6ED9               	movwf	fsr2l,c
  9876  000E58  0E00               	movlw	0
  9877  000E5A  0102               	movlb	2	; () banked
  9878  000E5C  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9879  000E5E  6EDA               	movwf	fsr2h,c
  9880  000E60  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
  9881                           
  9882                           ; BSR set to: 2
  9883                           ;Bluetooth.c: 510: SyncGlobalToEEPROM();
  9884  000E64  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
  9885                           
  9886                           ;Bluetooth.c: 511: UARTstring(CRLN);
  9887  000E68  0EA7               	movlw	low _CRLN
  9888  000E6A  0100               	movlb	0	; () banked
  9889  000E6C  6F7D               	movwf	UARTstring@data& (0+255),b
  9890  000E6E  0EF3               	movlw	high _CRLN
  9891  000E70  0100               	movlb	0	; () banked
  9892  000E72  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9893  000E74  EC08  F047         	call	_UARTstring	;wreg free
  9894                           
  9895                           ;Bluetooth.c: 512: sprintf(buf,"RemoteButton%ld now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
  9896  000E78  0E0F               	movlw	low UseBluetooth@buf
  9897  000E7A  0100               	movlb	0	; () banked
  9898  000E7C  6FCA               	movwf	sprintf@sp& (0+255),b
  9899  000E7E  0E02               	movlw	high UseBluetooth@buf
  9900  000E80  0100               	movlb	0	; () banked
  9901  000E82  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9902  000E84  0E0E               	movlw	low STR_50
  9903  000E86  0100               	movlb	0	; () banked
  9904  000E88  6FCC               	movwf	sprintf@f& (0+255),b
  9905  000E8A  0EF6               	movlw	high STR_50
  9906  000E8C  0100               	movlb	0	; () banked
  9907  000E8E  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9908  000E90  C28E  F0CE         	movff	UseBluetooth@temp,?_sprintf+4
  9909  000E94  C28F  F0CF         	movff	UseBluetooth@temp+1,?_sprintf+5
  9910  000E98  C290  F0D0         	movff	UseBluetooth@temp+2,?_sprintf+6
  9911  000E9C  C291  F0D1         	movff	UseBluetooth@temp+3,?_sprintf+7
  9912  000EA0  C0DD  F0D2         	movff	_IR_NEC,?_sprintf+8
  9913  000EA4  C0DE  F0D3         	movff	_IR_NEC+1,?_sprintf+9
  9914  000EA8  C0DF  F0D4         	movff	_IR_NEC+2,?_sprintf+10
  9915  000EAC  C0E0  F0D5         	movff	_IR_NEC+3,?_sprintf+11
  9916  000EB0  ECEF  F010         	call	_sprintf	;wreg free
  9917                           
  9918                           ;Bluetooth.c: 513: UARTstringCRLN(buf);
  9919  000EB4  0E0F               	movlw	low UseBluetooth@buf
  9920  000EB6  0100               	movlb	0	; () banked
  9921  000EB8  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9922  000EBA  0E02               	movlw	high UseBluetooth@buf
  9923  000EBC  0100               	movlb	0	; () banked
  9924  000EBE  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9925  000EC0  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9926                           
  9927                           ;Bluetooth.c: 514: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
  9928  000EC4  0E0F               	movlw	low UseBluetooth@buf
  9929  000EC6  0100               	movlb	0	; () banked
  9930  000EC8  6FCA               	movwf	sprintf@sp& (0+255),b
  9931  000ECA  0E02               	movlw	high UseBluetooth@buf
  9932  000ECC  0100               	movlb	0	; () banked
  9933  000ECE  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9934  000ED0  0E7E               	movlw	low STR_48
  9935  000ED2  0100               	movlb	0	; () banked
  9936  000ED4  6FCC               	movwf	sprintf@f& (0+255),b
  9937  000ED6  0EF7               	movlw	high STR_48
  9938  000ED8  0100               	movlb	0	; () banked
  9939  000EDA  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9940  000EDC  C28C  F0CE         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9941  000EE0  0100               	movlb	0	; () banked
  9942  000EE2  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9943  000EE4  C28D  F0D0         	movff	UseBluetooth@NecCommand,?_sprintf+6
  9944  000EE8  0100               	movlb	0	; () banked
  9945  000EEA  6BD1               	clrf	(?_sprintf+7)& (0+255),b
  9946  000EEC  ECEF  F010         	call	_sprintf	;wreg free
  9947                           
  9948                           ;Bluetooth.c: 515: UARTstringCRLN(buf);
  9949  000EF0  0E0F               	movlw	low UseBluetooth@buf
  9950  000EF2  0100               	movlb	0	; () banked
  9951  000EF4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9952  000EF6  0E02               	movlw	high UseBluetooth@buf
  9953  000EF8  0100               	movlb	0	; () banked
  9954  000EFA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9955  000EFC  ECAD  F045         	call	_UARTstringCRLN	;wreg free
  9956                           
  9957                           ;Bluetooth.c: 516: UARTstring(CRLN);
  9958  000F00  0EA7               	movlw	low _CRLN
  9959  000F02  0100               	movlb	0	; () banked
  9960  000F04  6F7D               	movwf	UARTstring@data& (0+255),b
  9961  000F06  0EF3               	movlw	high _CRLN
  9962  000F08  0100               	movlb	0	; () banked
  9963  000F0A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9964  000F0C  EC08  F047         	call	_UARTstring	;wreg free
  9965                           
  9966                           ;Bluetooth.c: 518: for(i =0;i<10;i++)
  9967  000F10  0E00               	movlw	0
  9968  000F12  0102               	movlb	2	; () banked
  9969  000F14  6F92               	movwf	UseBluetooth@i& (0+255),b
  9970                           
  9971                           ; BSR set to: 2
  9972  000F16  0E09               	movlw	9
  9973  000F18  0102               	movlb	2	; () banked
  9974  000F1A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9975  000F1C  D002               	goto	l15593
  9976  000F1E  0012               	return	
  9977                           
  9978                           ; BSR set to: 2
  9979  000F20  0012               	return	
  9980  000F22                     l15593:
  9981                           
  9982                           ; BSR set to: 2
  9983                           ;Bluetooth.c: 519: {
  9984                           ;Bluetooth.c: 520: (LATC |= 0x04);
  9985  000F22  848B               	bsf	3979,2,c	;volatile
  9986                           
  9987                           ; BSR set to: 2
  9988                           ;Bluetooth.c: 521: delayUS(50000);
  9989  000F24  0E50               	movlw	80
  9990  000F26  0100               	movlb	0	; () banked
  9991  000F28  6F7C               	movwf	delayUS@US& (0+255),b
  9992  000F2A  0EC3               	movlw	195
  9993  000F2C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  9994  000F2E  0E00               	movlw	0
  9995  000F30  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  9996  000F32  0E00               	movlw	0
  9997  000F34  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  9998  000F36  EC8C  F047         	call	_delayUS	;wreg free
  9999                           
 10000                           ;Bluetooth.c: 522: (LATC &= ~0x04);
 10001  000F3A  948B               	bcf	3979,2,c	;volatile
 10002                           
 10003                           ;Bluetooth.c: 523: delayUS(50000);
 10004  000F3C  0E50               	movlw	80
 10005  000F3E  0100               	movlb	0	; () banked
 10006  000F40  6F7C               	movwf	delayUS@US& (0+255),b
 10007  000F42  0EC3               	movlw	195
 10008  000F44  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 10009  000F46  0E00               	movlw	0
 10010  000F48  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 10011  000F4A  0E00               	movlw	0
 10012  000F4C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 10013  000F4E  EC8C  F047         	call	_delayUS	;wreg free
 10014  000F52  0102               	movlb	2	; () banked
 10015  000F54  2B92               	incf	UseBluetooth@i& (0+255),f,b
 10016                           
 10017                           ; BSR set to: 2
 10018  000F56  0E09               	movlw	9
 10019  000F58  0102               	movlb	2	; () banked
 10020  000F5A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 10021  000F5C  D7E2               	goto	l15593
 10022  000F5E  0012               	return	
 10023                           
 10024                           ; BSR set to: 2
 10025                           ;Bluetooth.c: 524: }
 10026                           ;Bluetooth.c: 525: return 1;
 10027                           ;	Return value of _UseBluetooth is never used
 10028  000F60  0012               	return	
 10029                           
 10030                           ; BSR set to: 2
 10031                           ;Bluetooth.c: 526: }
 10032                           ;Bluetooth.c: 527: }
 10033  000F62  D01A               	goto	l15607
 10034  000F64                     l15603:
 10035                           
 10036                           ; BSR set to: 2
 10037                           ;Bluetooth.c: 528: else
 10038                           ;Bluetooth.c: 529: {
 10039                           ;Bluetooth.c: 530: UARTstring(CRLN);
 10040  000F64  0EA7               	movlw	low _CRLN
 10041  000F66  0100               	movlb	0	; () banked
 10042  000F68  6F7D               	movwf	UARTstring@data& (0+255),b
 10043  000F6A  0EF3               	movlw	high _CRLN
 10044  000F6C  0100               	movlb	0	; () banked
 10045  000F6E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10046  000F70  EC08  F047         	call	_UARTstring	;wreg free
 10047                           
 10048                           ;Bluetooth.c: 531: UARTstringCRLN((unsigned char *)"Error: Remote button number too high
      +                          ");
 10049  000F74  0E9E               	movlw	low STR_52
 10050  000F76  0100               	movlb	0	; () banked
 10051  000F78  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10052  000F7A  0EF8               	movlw	high STR_52
 10053  000F7C  0100               	movlb	0	; () banked
 10054  000F7E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10055  000F80  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10056                           
 10057                           ;Bluetooth.c: 532: UARTstring(CRLN);
 10058  000F84  0EA7               	movlw	low _CRLN
 10059  000F86  0100               	movlb	0	; () banked
 10060  000F88  6F7D               	movwf	UARTstring@data& (0+255),b
 10061  000F8A  0EF3               	movlw	high _CRLN
 10062  000F8C  0100               	movlb	0	; () banked
 10063  000F8E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10064  000F90  EC08  F047         	call	_UARTstring	;wreg free
 10065                           
 10066                           ;Bluetooth.c: 533: return 0;
 10067                           ;	Return value of _UseBluetooth is never used
 10068  000F94  0012               	return	
 10069  000F96  D000               	goto	l15607
 10070  000F98                     l15607:
 10071                           
 10072                           ;Bluetooth.c: 534: }
 10073                           ;Bluetooth.c: 535: }
 10074                           ;Bluetooth.c: 536: }
 10075                           ;Bluetooth.c: 537: UARTstring(CRLN);
 10076  000F98  0EA7               	movlw	low _CRLN
 10077  000F9A  0100               	movlb	0	; () banked
 10078  000F9C  6F7D               	movwf	UARTstring@data& (0+255),b
 10079  000F9E  0EF3               	movlw	high _CRLN
 10080  000FA0  0100               	movlb	0	; () banked
 10081  000FA2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10082  000FA4  EC08  F047         	call	_UARTstring	;wreg free
 10083                           
 10084                           ;Bluetooth.c: 538: UARTstringCRLN((unsigned char *)"Error: Remote button not specified")
      +                          ;
 10085  000FA8  0EE7               	movlw	low STR_53
 10086  000FAA  0100               	movlb	0	; () banked
 10087  000FAC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10088  000FAE  0EF8               	movlw	high STR_53
 10089  000FB0  0100               	movlb	0	; () banked
 10090  000FB2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10091  000FB4  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10092                           
 10093                           ;Bluetooth.c: 539: UARTstring(CRLN);
 10094  000FB8  0EA7               	movlw	low _CRLN
 10095  000FBA  0100               	movlb	0	; () banked
 10096  000FBC  6F7D               	movwf	UARTstring@data& (0+255),b
 10097  000FBE  0EF3               	movlw	high _CRLN
 10098  000FC0  0100               	movlb	0	; () banked
 10099  000FC2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10100  000FC4  EC08  F047         	call	_UARTstring	;wreg free
 10101                           
 10102                           ;Bluetooth.c: 540: UARTstringCRLN((unsigned char *)"Usage:");
 10103  000FC8  0EAC               	movlw	low STR_37
 10104  000FCA  0100               	movlb	0	; () banked
 10105  000FCC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10106  000FCE  0EFF               	movlw	high STR_37
 10107  000FD0  0100               	movlb	0	; () banked
 10108  000FD2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10109  000FD4  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10110                           
 10111                           ;Bluetooth.c: 541: UARTstringCRLN((unsigned char *)"RemoteButton'x'");
 10112  000FD8  0E51               	movlw	low STR_55
 10113  000FDA  0100               	movlb	0	; () banked
 10114  000FDC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10115  000FDE  0EFE               	movlw	high STR_55
 10116  000FE0  0100               	movlb	0	; () banked
 10117  000FE2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10118  000FE4  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10119                           
 10120                           ;Bluetooth.c: 542: UARTstringCRLN((unsigned char *)"RemoteButton'x' set");
 10121  000FE8  0E75               	movlw	low STR_56
 10122  000FEA  0100               	movlb	0	; () banked
 10123  000FEC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10124  000FEE  0EFD               	movlw	high STR_56
 10125  000FF0  0100               	movlb	0	; () banked
 10126  000FF2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10127  000FF4  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10128                           
 10129                           ;Bluetooth.c: 543: UARTstring(CRLN);
 10130  000FF8  0EA7               	movlw	low _CRLN
 10131  000FFA  0100               	movlb	0	; () banked
 10132  000FFC  6F7D               	movwf	UARTstring@data& (0+255),b
 10133  000FFE  0EF3               	movlw	high _CRLN
 10134  001000  0100               	movlb	0	; () banked
 10135  001002  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10136  001004  EC08  F047         	call	_UARTstring	;wreg free
 10137                           
 10138                           ;Bluetooth.c: 544: UARTstringCRLN((unsigned char *)"Example:");
 10139  001008  0E8B               	movlw	low STR_41
 10140  00100A  0100               	movlb	0	; () banked
 10141  00100C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10142  00100E  0EFF               	movlw	high STR_41
 10143  001010  0100               	movlb	0	; () banked
 10144  001012  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10145  001014  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10146                           
 10147                           ;Bluetooth.c: 545: UARTstringCRLN((unsigned char *)"RemoteButton1");
 10148  001018  0E90               	movlw	low STR_58
 10149  00101A  0100               	movlb	0	; () banked
 10150  00101C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10151  00101E  0EFE               	movlw	high STR_58
 10152  001020  0100               	movlb	0	; () banked
 10153  001022  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10154  001024  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10155                           
 10156                           ;Bluetooth.c: 546: UARTstringCRLN((unsigned char *)"RemoteButton1 set");
 10157  001028  0EFA               	movlw	low STR_59
 10158  00102A  0100               	movlb	0	; () banked
 10159  00102C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10160  00102E  0EFD               	movlw	high STR_59
 10161  001030  0100               	movlb	0	; () banked
 10162  001032  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10163  001034  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10164                           
 10165                           ;Bluetooth.c: 547: UARTstring(CRLN);
 10166  001038  0EA7               	movlw	low _CRLN
 10167  00103A  0100               	movlb	0	; () banked
 10168  00103C  6F7D               	movwf	UARTstring@data& (0+255),b
 10169  00103E  0EF3               	movlw	high _CRLN
 10170  001040  0100               	movlb	0	; () banked
 10171  001042  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10172  001044  EC08  F047         	call	_UARTstring	;wreg free
 10173                           
 10174                           ;Bluetooth.c: 549: }
 10175                           
 10176                           ;Bluetooth.c: 548: return 0;
 10177                           ;	Return value of _UseBluetooth is never used
 10178  001048  0012               	return	
 10179  00104A                     l15613:
 10180                           
 10181                           ;Bluetooth.c: 550: else if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set
      +                          ") || StringContainsCaseInsensitive(String,(unsigned char *)"RF clear"))
 10182  00104A  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10183  00104E  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10184  001052  0EB3               	movlw	low STR_60
 10185  001054  0100               	movlb	0	; () banked
 10186  001056  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10187  001058  0EFF               	movlw	high STR_60
 10188  00105A  0100               	movlb	0	; () banked
 10189  00105C  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10190  00105E  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10191  001062  0900               	iorlw	0
 10192  001064  A4D8               	btfss	status,2,c
 10193  001066  D010               	goto	l15617
 10194  001068  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10195  00106C  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10196  001070  0E94               	movlw	low STR_61
 10197  001072  0100               	movlb	0	; () banked
 10198  001074  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10199  001076  0EFF               	movlw	high STR_61
 10200  001078  0100               	movlb	0	; () banked
 10201  00107A  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10202  00107C  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10203  001080  0900               	iorlw	0
 10204  001082  B4D8               	btfsc	status,2,c
 10205  001084  EFAF  F00C         	goto	l15895
 10206  001088                     l15617:
 10207                           
 10208                           ;Bluetooth.c: 551: {
 10209                           ;Bluetooth.c: 552: if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set"))
 10210  001088  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10211  00108C  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10212  001090  0EB3               	movlw	low STR_60
 10213  001092  0100               	movlb	0	; () banked
 10214  001094  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10215  001096  0EFF               	movlw	high STR_60
 10216  001098  0100               	movlb	0	; () banked
 10217  00109A  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10218  00109C  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10219  0010A0  0900               	iorlw	0
 10220  0010A2  B4D8               	btfsc	status,2,c
 10221  0010A4  D002               	goto	l15621
 10222                           
 10223                           ;Bluetooth.c: 553: {
 10224                           ;Bluetooth.c: 554: set = 1;
 10225  0010A6  0E01               	movlw	1
 10226  0010A8  D001               	goto	L4
 10227  0010AA                     l15621:
 10228                           
 10229                           ;Bluetooth.c: 556: else
 10230                           ;Bluetooth.c: 557: {
 10231                           ;Bluetooth.c: 558: set = 0;
 10232  0010AA  0E00               	movlw	0
 10233  0010AC                     L4:
 10234  0010AC  0102               	movlb	2	; () banked
 10235  0010AE  6F7D               	movwf	UseBluetooth@set& (0+255),b
 10236  0010B0  D000               	goto	l15623
 10237  0010B2                     l15623:
 10238                           
 10239                           ; BSR set to: 2
 10240                           ;Bluetooth.c: 559: }
 10241                           ;Bluetooth.c: 560: if(!StringAddEqual(String))
 10242  0010B2  C200  F08B         	movff	UseBluetooth@String,StringAddEqual@Input
 10243  0010B6  C201  F08C         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10244  0010BA  EC6D  F031         	call	_StringAddEqual	;wreg free
 10245  0010BE  0900               	iorlw	0
 10246  0010C0  A4D8               	btfss	status,2,c
 10247  0010C2  D011               	goto	l15629
 10248                           
 10249                           ;Bluetooth.c: 561: {
 10250                           ;Bluetooth.c: 562: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10251  0010C4  0E54               	movlw	low STR_63
 10252  0010C6  0100               	movlb	0	; () banked
 10253  0010C8  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10254  0010CA  0EF8               	movlw	high STR_63
 10255  0010CC  0100               	movlb	0	; () banked
 10256  0010CE  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10257  0010D0  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10258                           
 10259                           ;Bluetooth.c: 563: UARTstring(CRLN);
 10260  0010D4  0EA7               	movlw	low _CRLN
 10261  0010D6  0100               	movlb	0	; () banked
 10262  0010D8  6F7D               	movwf	UARTstring@data& (0+255),b
 10263  0010DA  0EF3               	movlw	high _CRLN
 10264  0010DC  0100               	movlb	0	; () banked
 10265  0010DE  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10266  0010E0  EC08  F047         	call	_UARTstring	;wreg free
 10267                           
 10268                           ;Bluetooth.c: 564: return 0;
 10269                           ;	Return value of _UseBluetooth is never used
 10270  0010E4  0012               	return	
 10271  0010E6                     l15629:
 10272                           
 10273                           ;Bluetooth.c: 565: }
 10274                           ;Bluetooth.c: 566: StringPos++;
 10275  0010E6  0102               	movlb	2	; () banked
 10276  0010E8  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
 10277                           
 10278                           ; BSR set to: 2
 10279                           ;Bluetooth.c: 567: UARTstring(CRLN);
 10280  0010EA  0EA7               	movlw	low _CRLN
 10281  0010EC  0100               	movlb	0	; () banked
 10282  0010EE  6F7D               	movwf	UARTstring@data& (0+255),b
 10283  0010F0  0EF3               	movlw	high _CRLN
 10284  0010F2  0100               	movlb	0	; () banked
 10285  0010F4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10286  0010F6  EC08  F047         	call	_UARTstring	;wreg free
 10287                           
 10288                           ;Bluetooth.c: 568: if(!GetNumber(String, 1, &temp))
 10289  0010FA  C200  F088         	movff	UseBluetooth@String,GetNumber@This
 10290  0010FE  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
 10291  001102  0E01               	movlw	1
 10292  001104  0100               	movlb	0	; () banked
 10293  001106  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
 10294  001108  0E8E               	movlw	low UseBluetooth@temp
 10295  00110A  0100               	movlb	0	; () banked
 10296  00110C  6F8B               	movwf	GetNumber@result& (0+255),b
 10297  00110E  0E02               	movlw	high UseBluetooth@temp
 10298  001110  0100               	movlb	0	; () banked
 10299  001112  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
 10300  001114  EC30  F024         	call	_GetNumber	;wreg free
 10301  001118  0900               	iorlw	0
 10302  00111A  A4D8               	btfss	status,2,c
 10303  00111C  D003               	goto	l15637
 10304                           
 10305                           ;Bluetooth.c: 569: {
 10306                           ;Bluetooth.c: 570: rfconf = (unsigned char) temp;
 10307  00111E  C28E  F28B         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 10308                           
 10309                           ;Bluetooth.c: 571: }
 10310  001122  D011               	goto	l15641
 10311  001124                     l15637:
 10312                           
 10313                           ;Bluetooth.c: 572: else
 10314                           ;Bluetooth.c: 573: {
 10315                           ;Bluetooth.c: 574: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10316  001124  0E54               	movlw	low STR_63
 10317  001126  0100               	movlb	0	; () banked
 10318  001128  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10319  00112A  0EF8               	movlw	high STR_63
 10320  00112C  0100               	movlb	0	; () banked
 10321  00112E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10322  001130  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10323                           
 10324                           ;Bluetooth.c: 575: UARTstring(CRLN);
 10325  001134  0EA7               	movlw	low _CRLN
 10326  001136  0100               	movlb	0	; () banked
 10327  001138  6F7D               	movwf	UARTstring@data& (0+255),b
 10328  00113A  0EF3               	movlw	high _CRLN
 10329  00113C  0100               	movlb	0	; () banked
 10330  00113E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10331  001140  EC08  F047         	call	_UARTstring	;wreg free
 10332                           
 10333                           ;Bluetooth.c: 576: return 0;
 10334                           ;	Return value of _UseBluetooth is never used
 10335  001144  0012               	return	
 10336  001146                     l15641:
 10337                           
 10338                           ;Bluetooth.c: 577: }
 10339                           ;Bluetooth.c: 578: if(rfconf <= 0 || rfconf > 2)
 10340  001146  0102               	movlb	2	; () banked
 10341  001148  518B               	movf	UseBluetooth@rfconf& (0+255),w,b
 10342  00114A  0102               	movlb	2	; () banked
 10343  00114C  B4D8               	btfsc	status,2,c
 10344  00114E  D005               	goto	l15645
 10345                           
 10346                           ; BSR set to: 2
 10347  001150  0E02               	movlw	2
 10348  001152  0102               	movlb	2	; () banked
 10349  001154  658B               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 10350  001156  D012               	goto	l15649
 10351  001158  D000               	goto	l15645
 10352  00115A                     l15645:
 10353                           
 10354                           ; BSR set to: 2
 10355                           ;Bluetooth.c: 579: {
 10356                           ;Bluetooth.c: 580: UARTstringCRLN((unsigned char *)"Error: RF configuration out of range
      +                          ");
 10357  00115A  0E79               	movlw	low STR_65
 10358  00115C  0100               	movlb	0	; () banked
 10359  00115E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10360  001160  0EF8               	movlw	high STR_65
 10361  001162  0100               	movlb	0	; () banked
 10362  001164  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10363  001166  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10364                           
 10365                           ;Bluetooth.c: 581: UARTstring(CRLN);
 10366  00116A  0EA7               	movlw	low _CRLN
 10367  00116C  0100               	movlb	0	; () banked
 10368  00116E  6F7D               	movwf	UARTstring@data& (0+255),b
 10369  001170  0EF3               	movlw	high _CRLN
 10370  001172  0100               	movlb	0	; () banked
 10371  001174  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10372  001176  EC08  F047         	call	_UARTstring	;wreg free
 10373                           
 10374                           ;Bluetooth.c: 582: return 0;
 10375                           ;	Return value of _UseBluetooth is never used
 10376  00117A  0012               	return	
 10377  00117C                     l15649:
 10378                           
 10379                           ;Bluetooth.c: 583: }
 10380                           ;Bluetooth.c: 584: if(GetStringAfterComma(String, 1, rfchannelSTR))
 10381  00117C  C200  F07C         	movff	UseBluetooth@String,GetStringAfterComma@This
 10382  001180  C201  F07D         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 10383  001184  0E01               	movlw	1
 10384  001186  0100               	movlb	0	; () banked
 10385  001188  6F7E               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 10386  00118A  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10387  00118C  0100               	movlb	0	; () banked
 10388  00118E  6F7F               	movwf	GetStringAfterComma@result& (0+255),b
 10389  001190  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10390  001192  0100               	movlb	0	; () banked
 10391  001194  6F80               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 10392  001196  EC5B  F03C         	call	_GetStringAfterComma	;wreg free
 10393  00119A  0900               	iorlw	0
 10394  00119C  B4D8               	btfsc	status,2,c
 10395  00119E  D011               	goto	l15657
 10396                           
 10397                           ;Bluetooth.c: 585: {
 10398                           ;Bluetooth.c: 586: UARTstringCRLN((unsigned char *)"Error: No RF channel specified");
 10399  0011A0  0EA9               	movlw	low STR_66
 10400  0011A2  0100               	movlb	0	; () banked
 10401  0011A4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10402  0011A6  0EFA               	movlw	high STR_66
 10403  0011A8  0100               	movlb	0	; () banked
 10404  0011AA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10405  0011AC  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10406                           
 10407                           ;Bluetooth.c: 587: UARTstring(CRLN);
 10408  0011B0  0EA7               	movlw	low _CRLN
 10409  0011B2  0100               	movlb	0	; () banked
 10410  0011B4  6F7D               	movwf	UARTstring@data& (0+255),b
 10411  0011B6  0EF3               	movlw	high _CRLN
 10412  0011B8  0100               	movlb	0	; () banked
 10413  0011BA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10414  0011BC  EC08  F047         	call	_UARTstring	;wreg free
 10415                           
 10416                           ;Bluetooth.c: 589: }
 10417                           
 10418                           ;Bluetooth.c: 588: return 0;
 10419                           ;	Return value of _UseBluetooth is never used
 10420  0011C0  0012               	return	
 10421  0011C2                     l15657:
 10422                           
 10423                           ;Bluetooth.c: 590: else
 10424                           ;Bluetooth.c: 591: {
 10425                           ;Bluetooth.c: 592: lowercaseString(rfchannelSTR);
 10426  0011C2  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10427  0011C4  0100               	movlb	0	; () banked
 10428  0011C6  6F7C               	movwf	lowercaseString@Input& (0+255),b
 10429  0011C8  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10430  0011CA  0100               	movlb	0	; () banked
 10431  0011CC  6F7D               	movwf	(lowercaseString@Input+1)& (0+255),b
 10432  0011CE  EC73  F048         	call	_lowercaseString	;wreg free
 10433                           
 10434                           ;Bluetooth.c: 593: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 10435  0011D2  0102               	movlb	2	; () banked
 10436  0011D4  5174               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10437  0011D6  B4D8               	btfsc	status,2,c
 10438  0011D8  D005               	goto	l15663
 10439                           
 10440                           ; BSR set to: 2
 10441  0011DA  0E20               	movlw	32
 10442  0011DC  0102               	movlb	2	; () banked
 10443  0011DE  1974               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10444  0011E0  A4D8               	btfss	status,2,c
 10445  0011E2  D3AC               	goto	l15891
 10446  0011E4                     l15663:
 10447                           
 10448                           ; BSR set to: 2
 10449                           ;Bluetooth.c: 594: {
 10450                           ;Bluetooth.c: 595: rfchannelSTR[1] = 0;
 10451  0011E4  0E00               	movlw	0
 10452  0011E6  0102               	movlb	2	; () banked
 10453  0011E8  6F74               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 10454                           
 10455                           ; BSR set to: 2
 10456                           ;Bluetooth.c: 596: if(rfconf == 1)
 10457  0011EA  0102               	movlb	2	; () banked
 10458  0011EC  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10459  0011EE  A4D8               	btfss	status,2,c
 10460  0011F0  D015               	goto	l15671
 10461                           
 10462                           ; BSR set to: 2
 10463                           ;Bluetooth.c: 597: {
 10464                           ;Bluetooth.c: 598: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 10465  0011F2  0E9B               	movlw	low _Conf1_Channels
 10466  0011F4  0100               	movlb	0	; () banked
 10467  0011F6  6F7F               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10468  0011F8  0EF3               	movlw	high _Conf1_Channels
 10469  0011FA  0100               	movlb	0	; () banked
 10470  0011FC  6F80               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10471  0011FE  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10472  001200  0100               	movlb	0	; () banked
 10473  001202  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10474  001204  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10475  001206  0100               	movlb	0	; () banked
 10476  001208  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10477  00120A  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10478  00120E  0900               	iorlw	0
 10479  001210  A4D8               	btfss	status,2,c
 10480  001212  D019               	goto	l1922
 10481                           
 10482                           ;Bluetooth.c: 599: {
 10483                           ;Bluetooth.c: 600: ok = 0;
 10484  001214  0E00               	movlw	0
 10485  001216  0102               	movlb	2	; () banked
 10486  001218  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10487                           
 10488                           ; BSR set to: 2
 10489                           ;Bluetooth.c: 601: }
 10490                           ;Bluetooth.c: 602: }
 10491  00121A  D015               	goto	l1922
 10492  00121C                     l15671:
 10493                           
 10494                           ; BSR set to: 2
 10495                           ;Bluetooth.c: 603: else if(rfconf == 2)
 10496  00121C  0E02               	movlw	2
 10497  00121E  0102               	movlb	2	; () banked
 10498  001220  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10499  001222  A4D8               	btfss	status,2,c
 10500  001224  D010               	goto	l1922
 10501                           
 10502                           ; BSR set to: 2
 10503                           ;Bluetooth.c: 604: {
 10504                           ;Bluetooth.c: 605: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 10505  001226  0E9F               	movlw	low _Conf2_Channels
 10506  001228  0100               	movlb	0	; () banked
 10507  00122A  6F7F               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10508  00122C  0EF3               	movlw	high _Conf2_Channels
 10509  00122E  0100               	movlb	0	; () banked
 10510  001230  6F80               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10511  001232  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10512  001234  0100               	movlb	0	; () banked
 10513  001236  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10514  001238  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10515  00123A  0100               	movlb	0	; () banked
 10516  00123C  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10517  00123E  ECA9  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10518  001242  D7E5               	goto	L9
 10519                           
 10520                           ; BSR set to: 2
 10521                           
 10522                           ;Bluetooth.c: 606: {
 10523                           ;Bluetooth.c: 607: ok = 0;
 10524  001244  D000               	goto	l1922
 10525  001246                     l1922:
 10526                           
 10527                           ;Bluetooth.c: 608: }
 10528                           ;Bluetooth.c: 609: }
 10529                           ;Bluetooth.c: 610: if(!ok)
 10530  001246  0102               	movlb	2	; () banked
 10531  001248  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10532  00124A  0102               	movlb	2	; () banked
 10533  00124C  A4D8               	btfss	status,2,c
 10534  00124E  D011               	goto	l15681
 10535                           
 10536                           ; BSR set to: 2
 10537                           ;Bluetooth.c: 611: {
 10538                           ;Bluetooth.c: 612: UARTstringCRLN((unsigned char *)"Error: RF channel out of range");
 10539  001250  0EC8               	movlw	low STR_67
 10540  001252  0100               	movlb	0	; () banked
 10541  001254  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10542  001256  0EFA               	movlw	high STR_67
 10543  001258  0100               	movlb	0	; () banked
 10544  00125A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10545  00125C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10546                           
 10547                           ;Bluetooth.c: 613: UARTstring(CRLN);
 10548  001260  0EA7               	movlw	low _CRLN
 10549  001262  0100               	movlb	0	; () banked
 10550  001264  6F7D               	movwf	UARTstring@data& (0+255),b
 10551  001266  0EF3               	movlw	high _CRLN
 10552  001268  0100               	movlb	0	; () banked
 10553  00126A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10554  00126C  EC08  F047         	call	_UARTstring	;wreg free
 10555                           
 10556                           ;Bluetooth.c: 614: return 0;
 10557                           ;	Return value of _UseBluetooth is never used
 10558  001270  0012               	return	
 10559  001272                     l15681:
 10560                           
 10561                           ;Bluetooth.c: 615: }
 10562                           ;Bluetooth.c: 617: if(rfconf == 1)
 10563  001272  0102               	movlb	2	; () banked
 10564  001274  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10565  001276  A4D8               	btfss	status,2,c
 10566  001278  D017               	goto	l15695
 10567                           
 10568                           ; BSR set to: 2
 10569                           ;Bluetooth.c: 618: {
 10570                           ;Bluetooth.c: 619: if(rfchannelSTR[0] == 'd')
 10571  00127A  0E64               	movlw	100
 10572  00127C  0102               	movlb	2	; () banked
 10573  00127E  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10574  001280  A4D8               	btfss	status,2,c
 10575  001282  D002               	goto	l15687
 10576                           
 10577                           ; BSR set to: 2
 10578                           ;Bluetooth.c: 620: {
 10579                           ;Bluetooth.c: 621: tempRFArray = 0;
 10580  001284  0E00               	movlw	0
 10581  001286  D022               	goto	L8
 10582  001288                     l15687:
 10583                           
 10584                           ; BSR set to: 2
 10585                           ;Bluetooth.c: 623: else if(rfchannelSTR[0] == 'e')
 10586  001288  0E65               	movlw	101
 10587  00128A  0102               	movlb	2	; () banked
 10588  00128C  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10589  00128E  A4D8               	btfss	status,2,c
 10590  001290  D002               	goto	l15691
 10591                           
 10592                           ; BSR set to: 2
 10593                           ;Bluetooth.c: 624: {
 10594                           ;Bluetooth.c: 625: tempRFArray = 1;
 10595  001292  0E01               	movlw	1
 10596  001294  D01B               	goto	L8
 10597  001296                     l15691:
 10598                           
 10599                           ; BSR set to: 2
 10600                           ;Bluetooth.c: 627: else if(rfchannelSTR[0] == 'f')
 10601  001296  0E66               	movlw	102
 10602  001298  0102               	movlb	2	; () banked
 10603  00129A  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10604  00129C  A4D8               	btfss	status,2,c
 10605  00129E  0012               	return	
 10606                           
 10607                           ; BSR set to: 2
 10608                           ;Bluetooth.c: 628: {
 10609                           ;Bluetooth.c: 629: tempRFArray = 2;
 10610  0012A0  0E02               	movlw	2
 10611  0012A2  D014               	goto	L8
 10612                           
 10613                           ; BSR set to: 2
 10614                           ;Bluetooth.c: 631: else
 10615                           ;Bluetooth.c: 632: {
 10616                           ;Bluetooth.c: 634: return 0;
 10617                           ;	Return value of _UseBluetooth is never used
 10618                           
 10619                           ;Bluetooth.c: 630: }
 10620  0012A4  0012               	return	
 10621                           
 10622                           ; BSR set to: 2
 10623                           ;Bluetooth.c: 635: }
 10624                           ;Bluetooth.c: 636: }
 10625                           
 10626                           ; BSR set to: 2
 10627                           
 10628                           ; BSR set to: 2
 10629  0012A6  D0AD               	goto	l15763
 10630  0012A8                     l15695:
 10631                           
 10632                           ; BSR set to: 2
 10633                           ;Bluetooth.c: 637: else if(rfconf ==2)
 10634  0012A8  0E02               	movlw	2
 10635  0012AA  0102               	movlb	2	; () banked
 10636  0012AC  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10637  0012AE  A4D8               	btfss	status,2,c
 10638  0012B0  D0A8               	goto	l15763
 10639                           
 10640                           ; BSR set to: 2
 10641                           ;Bluetooth.c: 638: {
 10642                           ;Bluetooth.c: 639: if(rfchannelSTR[0] == 'b')
 10643  0012B2  0E62               	movlw	98
 10644  0012B4  0102               	movlb	2	; () banked
 10645  0012B6  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10646  0012B8  A4D8               	btfss	status,2,c
 10647  0012BA  D002               	goto	l15701
 10648                           
 10649                           ; BSR set to: 2
 10650                           ;Bluetooth.c: 640: {
 10651                           ;Bluetooth.c: 641: tempRFArray = 3;
 10652  0012BC  0E03               	movlw	3
 10653  0012BE  D006               	goto	L8
 10654  0012C0                     l15701:
 10655                           
 10656                           ; BSR set to: 2
 10657                           ;Bluetooth.c: 643: else if(rfchannelSTR[0] == 'd')
 10658  0012C0  0E64               	movlw	100
 10659  0012C2  0102               	movlb	2	; () banked
 10660  0012C4  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10661  0012C6  A4D8               	btfss	status,2,c
 10662  0012C8  D004               	goto	l15705
 10663                           
 10664                           ; BSR set to: 2
 10665                           ;Bluetooth.c: 644: {
 10666                           ;Bluetooth.c: 645: tempRFArray = 4;
 10667  0012CA  0E04               	movlw	4
 10668  0012CC                     L8:
 10669  0012CC  0102               	movlb	2	; () banked
 10670  0012CE  6F8A               	movwf	UseBluetooth@tempRFArray& (0+255),b
 10671                           
 10672                           ;Bluetooth.c: 646: }
 10673  0012D0  D098               	goto	l15763
 10674  0012D2                     l15705:
 10675                           
 10676                           ; BSR set to: 2
 10677                           ;Bluetooth.c: 647: else if(rfchannelSTR[0] == 'h')
 10678  0012D2  0E68               	movlw	104
 10679  0012D4  0102               	movlb	2	; () banked
 10680  0012D6  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10681  0012D8  A4D8               	btfss	status,2,c
 10682  0012DA  0012               	return	
 10683                           
 10684                           ; BSR set to: 2
 10685                           ;Bluetooth.c: 648: {
 10686                           ;Bluetooth.c: 649: cleanBuffer(ReceivedString, ReceivedStringPos);
 10687  0012DC  0E00               	movlw	low _ReceivedString
 10688  0012DE  0100               	movlb	0	; () banked
 10689  0012E0  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10690  0012E2  0E06               	movlw	high _ReceivedString
 10691  0012E4  0100               	movlb	0	; () banked
 10692  0012E6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10693  0012E8  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 10694  0012EC  0100               	movlb	0	; () banked
 10695  0012EE  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 10696  0012F0  ECDB  F046         	call	_cleanBuffer	;wreg free
 10697                           
 10698                           ;Bluetooth.c: 650: ReceivedStringPos = 0;
 10699  0012F4  0E00               	movlw	0
 10700  0012F6  0100               	movlb	0	; () banked
 10701  0012F8  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;Bluetooth.c: 651: NewReceivedString = 0;
 10705  0012FA  0E00               	movlw	0
 10706  0012FC  0100               	movlb	0	; () banked
 10707  0012FE  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 10708                           
 10709                           ; BSR set to: 0
 10710                           ;Bluetooth.c: 652: UARTstring((unsigned char *)"Which device?");
 10711  001300  0E9E               	movlw	low STR_68
 10712  001302  0100               	movlb	0	; () banked
 10713  001304  6F7D               	movwf	UARTstring@data& (0+255),b
 10714  001306  0EFE               	movlw	high STR_68
 10715  001308  0100               	movlb	0	; () banked
 10716  00130A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10717  00130C  EC08  F047         	call	_UARTstring	;wreg free
 10718                           
 10719                           ;Bluetooth.c: 653: UARTstring(CRLN);
 10720  001310  0EA7               	movlw	low _CRLN
 10721  001312  0100               	movlb	0	; () banked
 10722  001314  6F7D               	movwf	UARTstring@data& (0+255),b
 10723  001316  0EF3               	movlw	high _CRLN
 10724  001318  0100               	movlb	0	; () banked
 10725  00131A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10726  00131C  EC08  F047         	call	_UARTstring	;wreg free
 10727                           
 10728                           ;Bluetooth.c: 654: UARTchar('>');
 10729  001320  0E3E               	movlw	62
 10730  001322  ECF4  F049         	call	_UARTchar
 10731                           
 10732                           ;Bluetooth.c: 655: timeout = 0;
 10733  001326  0E00               	movlw	0
 10734  001328  0102               	movlb	2	; () banked
 10735  00132A  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 10736                           
 10737                           ; BSR set to: 2
 10738                           ;Bluetooth.c: 656: ClearUSART();
 10739  00132C  EC92  F04A         	call	_ClearUSART	;wreg free
 10740                           
 10741                           ;Bluetooth.c: 657: PIR1bits.RCIF = 0;
 10742  001330  9A9E               	bcf	3998,5,c	;volatile
 10743                           
 10744                           ;Bluetooth.c: 658: PIE1bits.RCIE = 1;
 10745  001332  8A9D               	bsf	3997,5,c	;volatile
 10746                           
 10747                           ;Bluetooth.c: 659: while(!NewReceivedString)
 10748  001334  D023               	goto	l15737
 10749  001336                     l15727:
 10750                           
 10751                           ;Bluetooth.c: 660: {
 10752                           ;Bluetooth.c: 661: delayUS(300000);
 10753  001336  0EE0               	movlw	224
 10754  001338  0100               	movlb	0	; () banked
 10755  00133A  6F7C               	movwf	delayUS@US& (0+255),b
 10756  00133C  0E93               	movlw	147
 10757  00133E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 10758  001340  0E04               	movlw	4
 10759  001342  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 10760  001344  0E00               	movlw	0
 10761  001346  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 10762  001348  EC8C  F047         	call	_delayUS	;wreg free
 10763                           
 10764                           ;Bluetooth.c: 662: timeout++;
 10765  00134C  0102               	movlb	2	; () banked
 10766  00134E  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 10767                           
 10768                           ; BSR set to: 2
 10769                           ;Bluetooth.c: 663: if(timeout > 25)
 10770  001350  0E19               	movlw	25
 10771  001352  0102               	movlb	2	; () banked
 10772  001354  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 10773  001356  D012               	goto	l15737
 10774                           
 10775                           ; BSR set to: 2
 10776                           ;Bluetooth.c: 664: {
 10777                           ;Bluetooth.c: 665: UARTstring(CRLN);
 10778  001358  0EA7               	movlw	low _CRLN
 10779  00135A  0100               	movlb	0	; () banked
 10780  00135C  6F7D               	movwf	UARTstring@data& (0+255),b
 10781  00135E  0EF3               	movlw	high _CRLN
 10782  001360  0100               	movlb	0	; () banked
 10783  001362  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10784  001364  EC08  F047         	call	_UARTstring	;wreg free
 10785                           
 10786                           ;Bluetooth.c: 666: UARTstringCRLN((unsigned char *)"Error: No RF config 2, channel H dev
      +                          ice specified");
 10787  001368  0E55               	movlw	low STR_69
 10788  00136A  0100               	movlb	0	; () banked
 10789  00136C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10790  00136E  0EF4               	movlw	high STR_69
 10791  001370  0100               	movlb	0	; () banked
 10792  001372  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10793  001374  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10794                           
 10795                           ;Bluetooth.c: 667: return 0;
 10796                           ;	Return value of _UseBluetooth is never used
 10797  001378  0012               	return	
 10798  00137A  D000               	goto	l15737
 10799  00137C                     l15737:
 10800  00137C  0100               	movlb	0	; () banked
 10801  00137E  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 10802  001380  B4D8               	btfsc	status,2,c
 10803  001382  D7D9               	goto	l15727
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;Bluetooth.c: 668: }
 10807                           ;Bluetooth.c: 669: }
 10808                           ;Bluetooth.c: 670: PIE1bits.RCIE = 0;
 10809  001384  9A9D               	bcf	3997,5,c	;volatile
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;Bluetooth.c: 671: ok = 1;
 10813  001386  0E01               	movlw	1
 10814  001388  0102               	movlb	2	; () banked
 10815  00138A  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10816                           
 10817                           ; BSR set to: 2
 10818                           ;Bluetooth.c: 672: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 10819  00138C  0E30               	movlw	48
 10820  00138E  0106               	movlb	6	; () banked
 10821  001390  6500               	cpfsgt	_ReceivedString& (0+255),b
 10822  001392  D005               	goto	l15745
 10823                           
 10824                           ; BSR set to: 6
 10825  001394  0E33               	movlw	51
 10826  001396  0106               	movlb	6	; () banked
 10827  001398  6500               	cpfsgt	_ReceivedString& (0+255),b
 10828  00139A  D00D               	goto	l15749
 10829  00139C  D000               	goto	l15745
 10830  00139E                     l15745:
 10831                           
 10832                           ; BSR set to: 6
 10833                           ;Bluetooth.c: 673: {
 10834                           ;Bluetooth.c: 674: UARTstringCRLN((unsigned char *)"Error: RF config 2, channel H device
      +                           out of range");
 10835  00139E  0E87               	movlw	low STR_70
 10836  0013A0  0100               	movlb	0	; () banked
 10837  0013A2  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10838  0013A4  0EF4               	movlw	high STR_70
 10839  0013A6  0100               	movlb	0	; () banked
 10840  0013A8  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10841  0013AA  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 10842                           
 10843                           ;Bluetooth.c: 675: ok = 0;
 10844  0013AE  0E00               	movlw	0
 10845  0013B0  0102               	movlb	2	; () banked
 10846  0013B2  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10847  0013B4  D000               	goto	l15749
 10848  0013B6                     l15749:
 10849                           
 10850                           ;Bluetooth.c: 676: }
 10851                           ;Bluetooth.c: 677: device = ReceivedString[0] - '0';
 10852  0013B6  0106               	movlb	6	; () banked
 10853  0013B8  5100               	movf	_ReceivedString& (0+255),w,b
 10854  0013BA  0FD0               	addlw	208
 10855  0013BC  0102               	movlb	2	; () banked
 10856  0013BE  6F84               	movwf	UseBluetooth@device& (0+255),b
 10857                           
 10858                           ; BSR set to: 2
 10859                           ;Bluetooth.c: 678: tempRFArray = device + 4;
 10860  0013C0  0102               	movlb	2	; () banked
 10861  0013C2  5184               	movf	UseBluetooth@device& (0+255),w,b
 10862  0013C4  0F04               	addlw	4
 10863  0013C6  0102               	movlb	2	; () banked
 10864  0013C8  6F8A               	movwf	UseBluetooth@tempRFArray& (0+255),b
 10865                           
 10866                           ; BSR set to: 2
 10867                           ;Bluetooth.c: 679: cleanBuffer(ReceivedString, ReceivedStringPos);
 10868  0013CA  0E00               	movlw	low _ReceivedString
 10869  0013CC  0100               	movlb	0	; () banked
 10870  0013CE  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10871  0013D0  0E06               	movlw	high _ReceivedString
 10872  0013D2  0100               	movlb	0	; () banked
 10873  0013D4  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10874  0013D6  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 10875  0013DA  0100               	movlb	0	; () banked
 10876  0013DC  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 10877  0013DE  ECDB  F046         	call	_cleanBuffer	;wreg free
 10878                           
 10879                           ;Bluetooth.c: 680: ReceivedStringPos = 0;
 10880  0013E2  0E00               	movlw	0
 10881  0013E4  0100               	movlb	0	; () banked
 10882  0013E6  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;Bluetooth.c: 681: NewReceivedString = 0;
 10886  0013E8  0E00               	movlw	0
 10887  0013EA  0100               	movlb	0	; () banked
 10888  0013EC  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;Bluetooth.c: 682: if(!ok)
 10892  0013EE  0102               	movlb	2	; () banked
 10893  0013F0  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10894  0013F2  0102               	movlb	2	; () banked
 10895  0013F4  B4D8               	btfsc	status,2,c
 10896  0013F6  0012               	return	
 10897  0013F8  D004               	goto	l15763
 10898                           
 10899                           ; BSR set to: 2
 10900                           ;Bluetooth.c: 683: {
 10901                           ;Bluetooth.c: 684: return 0;
 10902                           ;	Return value of _UseBluetooth is never used
 10903  0013FA  0012               	return	
 10904                           
 10905                           ; BSR set to: 2
 10906                           ;Bluetooth.c: 685: }
 10907                           ;Bluetooth.c: 686: }
 10908  0013FC  D002               	goto	l15763
 10909                           
 10910                           ; BSR set to: 2
 10911                           ;Bluetooth.c: 687: else
 10912                           ;Bluetooth.c: 688: {
 10913                           ;Bluetooth.c: 690: return 0;
 10914                           ;	Return value of _UseBluetooth is never used
 10915  0013FE  0012               	return	
 10916                           
 10917                           ; BSR set to: 2
 10918                           
 10919                           ; BSR set to: 2
 10920                           
 10921                           ; BSR set to: 2
 10922                           
 10923                           ; BSR set to: 2
 10924  001400  D000               	goto	l15763
 10925  001402                     l15763:
 10926                           
 10927                           ; BSR set to: 2
 10928                           ;Bluetooth.c: 691: }
 10929                           ;Bluetooth.c: 692: }
 10930                           ;Bluetooth.c: 693: if(set)
 10931  001402  0102               	movlb	2	; () banked
 10932  001404  517D               	movf	UseBluetooth@set& (0+255),w,b
 10933  001406  0102               	movlb	2	; () banked
 10934  001408  B4D8               	btfsc	status,2,c
 10935  00140A  D1D3               	goto	l15851
 10936                           
 10937                           ; BSR set to: 2
 10938                           ;Bluetooth.c: 694: {
 10939                           ;Bluetooth.c: 695: if(!WaitForIRsignal())
 10940  00140C  ECAE  F043         	call	_WaitForIRsignal	;wreg free
 10941  001410  0900               	iorlw	0
 10942  001412  B4D8               	btfsc	status,2,c
 10943  001414  0012               	return	
 10944  001416  D001               	goto	l15769
 10945                           
 10946                           ;Bluetooth.c: 696: {
 10947                           ;Bluetooth.c: 697: return 0;
 10948                           ;	Return value of _UseBluetooth is never used
 10949  001418  0012               	return	
 10950  00141A                     l15769:
 10951                           
 10952                           ;Bluetooth.c: 698: }
 10953                           ;Bluetooth.c: 699: UARTstring(CRLN);
 10954  00141A  0EA7               	movlw	low _CRLN
 10955  00141C  0100               	movlb	0	; () banked
 10956  00141E  6F7D               	movwf	UARTstring@data& (0+255),b
 10957  001420  0EF3               	movlw	high _CRLN
 10958  001422  0100               	movlb	0	; () banked
 10959  001424  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10960  001426  EC08  F047         	call	_UARTstring	;wreg free
 10961                           
 10962                           ;Bluetooth.c: 700: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 10963  00142A  C0DD  F080         	movff	_IR_NEC,DecodeNEC@Nec
 10964  00142E  C0DE  F081         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 10965  001432  C0DF  F082         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 10966  001436  C0E0  F083         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 10967  00143A  0E8C               	movlw	low UseBluetooth@NecAddress
 10968  00143C  0100               	movlb	0	; () banked
 10969  00143E  6F84               	movwf	DecodeNEC@address& (0+255),b
 10970  001440  0E02               	movlw	high UseBluetooth@NecAddress
 10971  001442  0100               	movlb	0	; () banked
 10972  001444  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
 10973  001446  0E8D               	movlw	low UseBluetooth@NecCommand
 10974  001448  0100               	movlb	0	; () banked
 10975  00144A  6F86               	movwf	DecodeNEC@command& (0+255),b
 10976  00144C  0E02               	movlw	high UseBluetooth@NecCommand
 10977  00144E  0100               	movlb	0	; () banked
 10978  001450  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
 10979  001452  ECCA  F041         	call	_DecodeNEC	;wreg free
 10980                           
 10981                           ;Bluetooth.c: 701: ok = 0;
 10982  001456  0E00               	movlw	0
 10983  001458  0102               	movlb	2	; () banked
 10984  00145A  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10985                           
 10986                           ; BSR set to: 2
 10987                           ;Bluetooth.c: 702: for(i=0; i < 3; i++)
 10988  00145C  0E00               	movlw	0
 10989  00145E  0102               	movlb	2	; () banked
 10990  001460  6F92               	movwf	UseBluetooth@i& (0+255),b
 10991  001462                     l15777:
 10992                           
 10993                           ; BSR set to: 2
 10994  001462  0E02               	movlw	2
 10995  001464  0102               	movlb	2	; () banked
 10996  001466  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 10997  001468  D001               	goto	l15781
 10998                           
 10999                           ; BSR set to: 2
 11000  00146A  D053               	goto	l15793
 11001  00146C                     l15781:
 11002                           
 11003                           ; BSR set to: 2
 11004                           ;Bluetooth.c: 703: {
 11005                           ;Bluetooth.c: 704: if(Global.RemoteButtonRF[tempRFArray][i][0] == 0 && Global.RemoteButt
      +                          onRF[tempRFArray][i][1] == 0)
 11006  00146C  0102               	movlb	2	; () banked
 11007  00146E  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11008  001470  0D06               	mullw	6
 11009  001472  0E00               	movlw	low _Global
 11010  001474  0102               	movlb	2	; () banked
 11011  001476  6F03               	movwf	??_UseBluetooth& (0+255),b
 11012  001478  0E04               	movlw	high _Global
 11013  00147A  0102               	movlb	2	; () banked
 11014  00147C  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11015  00147E  0E2E               	movlw	46
 11016  001480  0102               	movlb	2	; () banked
 11017  001482  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11018  001484  0E00               	movlw	0
 11019  001486  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11020  001488  50F3               	movf	prodl,w,c
 11021  00148A  0102               	movlb	2	; () banked
 11022  00148C  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11023  00148E  50F4               	movf	prodh,w,c
 11024  001490  0102               	movlb	2	; () banked
 11025  001492  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11026  001494  0102               	movlb	2	; () banked
 11027  001496  5192               	movf	UseBluetooth@i& (0+255),w,b
 11028  001498  0D02               	mullw	2
 11029  00149A  50F3               	movf	prodl,w,c
 11030  00149C  0102               	movlb	2	; () banked
 11031  00149E  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11032  0014A0  6ED9               	movwf	fsr2l,c
 11033  0014A2  50F4               	movf	prodh,w,c
 11034  0014A4  0102               	movlb	2	; () banked
 11035  0014A6  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11036  0014A8  6EDA               	movwf	fsr2h,c
 11037  0014AA  50DF               	movf	indf2,w,c
 11038  0014AC  A4D8               	btfss	status,2,c
 11039  0014AE  D02E               	goto	l15789
 11040                           
 11041                           ; BSR set to: 2
 11042  0014B0  0102               	movlb	2	; () banked
 11043  0014B2  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11044  0014B4  0D06               	mullw	6
 11045  0014B6  0E00               	movlw	low _Global
 11046  0014B8  0102               	movlb	2	; () banked
 11047  0014BA  6F03               	movwf	??_UseBluetooth& (0+255),b
 11048  0014BC  0E04               	movlw	high _Global
 11049  0014BE  0102               	movlb	2	; () banked
 11050  0014C0  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11051  0014C2  0E2E               	movlw	46
 11052  0014C4  0102               	movlb	2	; () banked
 11053  0014C6  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11054  0014C8  0E00               	movlw	0
 11055  0014CA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11056  0014CC  50F3               	movf	prodl,w,c
 11057  0014CE  0102               	movlb	2	; () banked
 11058  0014D0  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11059  0014D2  50F4               	movf	prodh,w,c
 11060  0014D4  0102               	movlb	2	; () banked
 11061  0014D6  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11062  0014D8  0102               	movlb	2	; () banked
 11063  0014DA  5192               	movf	UseBluetooth@i& (0+255),w,b
 11064  0014DC  0D02               	mullw	2
 11065  0014DE  50F3               	movf	prodl,w,c
 11066  0014E0  0102               	movlb	2	; () banked
 11067  0014E2  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11068  0014E4  50F4               	movf	prodh,w,c
 11069  0014E6  0102               	movlb	2	; () banked
 11070  0014E8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11071  0014EA  0E01               	movlw	1
 11072  0014EC  0102               	movlb	2	; () banked
 11073  0014EE  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11074  0014F0  6ED9               	movwf	fsr2l,c
 11075  0014F2  0E00               	movlw	0
 11076  0014F4  0102               	movlb	2	; () banked
 11077  0014F6  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11078  0014F8  6EDA               	movwf	fsr2h,c
 11079  0014FA  50DF               	movf	indf2,w,c
 11080  0014FC  A4D8               	btfss	status,2,c
 11081  0014FE  D006               	goto	l15789
 11082                           
 11083                           ; BSR set to: 2
 11084                           ;Bluetooth.c: 705: {
 11085                           ;Bluetooth.c: 706: EmptyPlace = i;
 11086  001500  C292  F283         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 11087                           
 11088                           ; BSR set to: 2
 11089                           ;Bluetooth.c: 707: ok = 1;
 11090  001504  0E01               	movlw	1
 11091  001506  0102               	movlb	2	; () banked
 11092  001508  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11093                           
 11094                           ;Bluetooth.c: 708: break;
 11095  00150A  D003               	goto	l15793
 11096  00150C                     l15789:
 11097                           
 11098                           ; BSR set to: 2
 11099  00150C  0102               	movlb	2	; () banked
 11100  00150E  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11101  001510  D7A8               	goto	l15777
 11102  001512                     l15793:
 11103                           
 11104                           ; BSR set to: 2
 11105                           ;Bluetooth.c: 709: }
 11106                           ;Bluetooth.c: 710: }
 11107                           ;Bluetooth.c: 711: if(!ok)
 11108  001512  0102               	movlb	2	; () banked
 11109  001514  5189               	movf	UseBluetooth@ok& (0+255),w,b
 11110  001516  0102               	movlb	2	; () banked
 11111  001518  A4D8               	btfss	status,2,c
 11112  00151A  D009               	goto	l15799
 11113                           
 11114                           ; BSR set to: 2
 11115                           ;Bluetooth.c: 712: {
 11116                           ;Bluetooth.c: 713: UARTstringCRLN((unsigned char *)"Error: No space available to this RF
      +                           code");
 11117  00151C  0E02               	movlw	low STR_71
 11118  00151E  0100               	movlb	0	; () banked
 11119  001520  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11120  001522  0EF8               	movlw	high STR_71
 11121  001524  0100               	movlb	0	; () banked
 11122  001526  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11123  001528  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11124                           
 11125                           ;Bluetooth.c: 714: return 0;
 11126                           ;	Return value of _UseBluetooth is never used
 11127  00152C  0012               	return	
 11128  00152E                     l15799:
 11129                           
 11130                           ;Bluetooth.c: 715: }
 11131                           ;Bluetooth.c: 716: ok = 1;
 11132  00152E  0E01               	movlw	1
 11133  001530  0102               	movlb	2	; () banked
 11134  001532  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11135                           
 11136                           ;Bluetooth.c: 717: if(EmptyPlace)
 11137  001534  0102               	movlb	2	; () banked
 11138  001536  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11139  001538  0102               	movlb	2	; () banked
 11140  00153A  B4D8               	btfsc	status,2,c
 11141  00153C  D062               	goto	l15813
 11142                           
 11143                           ; BSR set to: 2
 11144                           ;Bluetooth.c: 718: {
 11145                           ;Bluetooth.c: 720: for(i=0; i < EmptyPlace; i++)
 11146  00153E  0E00               	movlw	0
 11147  001540  0102               	movlb	2	; () banked
 11148  001542  6F92               	movwf	UseBluetooth@i& (0+255),b
 11149  001544  D056               	goto	l15811
 11150  001546                     l15803:
 11151                           
 11152                           ; BSR set to: 2
 11153                           ;Bluetooth.c: 721: {
 11154                           ;Bluetooth.c: 722: if(NecAddress == Global.RemoteButtonRF[tempRFArray][i][0])
 11155  001546  0102               	movlb	2	; () banked
 11156  001548  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11157  00154A  0D06               	mullw	6
 11158  00154C  0E00               	movlw	low _Global
 11159  00154E  0102               	movlb	2	; () banked
 11160  001550  6F03               	movwf	??_UseBluetooth& (0+255),b
 11161  001552  0E04               	movlw	high _Global
 11162  001554  0102               	movlb	2	; () banked
 11163  001556  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11164  001558  0E2E               	movlw	46
 11165  00155A  0102               	movlb	2	; () banked
 11166  00155C  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11167  00155E  0E00               	movlw	0
 11168  001560  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11169  001562  50F3               	movf	prodl,w,c
 11170  001564  0102               	movlb	2	; () banked
 11171  001566  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11172  001568  50F4               	movf	prodh,w,c
 11173  00156A  0102               	movlb	2	; () banked
 11174  00156C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11175  00156E  0102               	movlb	2	; () banked
 11176  001570  5192               	movf	UseBluetooth@i& (0+255),w,b
 11177  001572  0D02               	mullw	2
 11178  001574  50F3               	movf	prodl,w,c
 11179  001576  0102               	movlb	2	; () banked
 11180  001578  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11181  00157A  6ED9               	movwf	fsr2l,c
 11182  00157C  50F4               	movf	prodh,w,c
 11183  00157E  0102               	movlb	2	; () banked
 11184  001580  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11185  001582  6EDA               	movwf	fsr2h,c
 11186  001584  0102               	movlb	2	; () banked
 11187  001586  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
 11188  001588  18DE               	xorwf	postinc2,w,c
 11189  00158A  A4D8               	btfss	status,2,c
 11190  00158C  D02F               	goto	l15809
 11191                           
 11192                           ; BSR set to: 2
 11193                           ;Bluetooth.c: 723: {
 11194                           ;Bluetooth.c: 724: if(NecCommand == Global.RemoteButtonRF[tempRFArray][i][1])
 11195  00158E  0102               	movlb	2	; () banked
 11196  001590  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11197  001592  0D06               	mullw	6
 11198  001594  0E00               	movlw	low _Global
 11199  001596  0102               	movlb	2	; () banked
 11200  001598  6F03               	movwf	??_UseBluetooth& (0+255),b
 11201  00159A  0E04               	movlw	high _Global
 11202  00159C  0102               	movlb	2	; () banked
 11203  00159E  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11204  0015A0  0E2E               	movlw	46
 11205  0015A2  0102               	movlb	2	; () banked
 11206  0015A4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11207  0015A6  0E00               	movlw	0
 11208  0015A8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11209  0015AA  50F3               	movf	prodl,w,c
 11210  0015AC  0102               	movlb	2	; () banked
 11211  0015AE  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11212  0015B0  50F4               	movf	prodh,w,c
 11213  0015B2  0102               	movlb	2	; () banked
 11214  0015B4  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11215  0015B6  0102               	movlb	2	; () banked
 11216  0015B8  5192               	movf	UseBluetooth@i& (0+255),w,b
 11217  0015BA  0D02               	mullw	2
 11218  0015BC  50F3               	movf	prodl,w,c
 11219  0015BE  0102               	movlb	2	; () banked
 11220  0015C0  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11221  0015C2  50F4               	movf	prodh,w,c
 11222  0015C4  0102               	movlb	2	; () banked
 11223  0015C6  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11224  0015C8  0E01               	movlw	1
 11225  0015CA  0102               	movlb	2	; () banked
 11226  0015CC  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11227  0015CE  6ED9               	movwf	fsr2l,c
 11228  0015D0  0E00               	movlw	0
 11229  0015D2  0102               	movlb	2	; () banked
 11230  0015D4  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11231  0015D6  6EDA               	movwf	fsr2h,c
 11232  0015D8  0102               	movlb	2	; () banked
 11233  0015DA  518D               	movf	UseBluetooth@NecCommand& (0+255),w,b
 11234  0015DC  18DE               	xorwf	postinc2,w,c
 11235  0015DE  A4D8               	btfss	status,2,c
 11236  0015E0  D005               	goto	l15809
 11237                           
 11238                           ; BSR set to: 2
 11239                           ;Bluetooth.c: 725: {
 11240                           ;Bluetooth.c: 726: ok = 0;
 11241  0015E2  0E00               	movlw	0
 11242  0015E4  0102               	movlb	2	; () banked
 11243  0015E6  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11244                           
 11245                           ;Bluetooth.c: 727: break;
 11246  0015E8  D00C               	goto	l15813
 11247                           
 11248                           ; BSR set to: 2
 11249  0015EA  D000               	goto	l15809
 11250  0015EC                     l15809:
 11251                           
 11252                           ; BSR set to: 2
 11253  0015EC  0102               	movlb	2	; () banked
 11254  0015EE  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11255  0015F0  D000               	goto	l15811
 11256  0015F2                     l15811:
 11257                           
 11258                           ; BSR set to: 2
 11259  0015F2  0102               	movlb	2	; () banked
 11260  0015F4  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11261  0015F6  0102               	movlb	2	; () banked
 11262  0015F8  5D92               	subwf	UseBluetooth@i& (0+255),w,b
 11263  0015FA  B0D8               	btfsc	status,0,c
 11264  0015FC  D002               	goto	l15813
 11265  0015FE  D7A3               	goto	l15803
 11266                           
 11267                           ; BSR set to: 2
 11268  001600  D000               	goto	l15813
 11269  001602                     l15813:
 11270                           
 11271                           ; BSR set to: 2
 11272                           ;Bluetooth.c: 728: }
 11273                           ;Bluetooth.c: 729: }
 11274                           ;Bluetooth.c: 730: }
 11275                           ;Bluetooth.c: 731: }
 11276                           ;Bluetooth.c: 732: if(!ok)
 11277  001602  0102               	movlb	2	; () banked
 11278  001604  5189               	movf	UseBluetooth@ok& (0+255),w,b
 11279  001606  0102               	movlb	2	; () banked
 11280  001608  A4D8               	btfss	status,2,c
 11281  00160A  D009               	goto	l15819
 11282                           
 11283                           ; BSR set to: 2
 11284                           ;Bluetooth.c: 733: {
 11285                           ;Bluetooth.c: 734: UARTstringCRLN((unsigned char *)"Error: NEC code already saved to thi
      +                          s RF code");
 11286  00160C  0E50               	movlw	low STR_72
 11287  00160E  0100               	movlb	0	; () banked
 11288  001610  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11289  001612  0EF7               	movlw	high STR_72
 11290  001614  0100               	movlb	0	; () banked
 11291  001616  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11292  001618  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11293                           
 11294                           ;Bluetooth.c: 735: return 0;
 11295                           ;	Return value of _UseBluetooth is never used
 11296  00161C  0012               	return	
 11297  00161E                     l15819:
 11298                           
 11299                           ;Bluetooth.c: 736: }
 11300                           ;Bluetooth.c: 739: Global.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 11301  00161E  0102               	movlb	2	; () banked
 11302  001620  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11303  001622  0D06               	mullw	6
 11304  001624  0E00               	movlw	low _Global
 11305  001626  0102               	movlb	2	; () banked
 11306  001628  6F03               	movwf	??_UseBluetooth& (0+255),b
 11307  00162A  0E04               	movlw	high _Global
 11308  00162C  0102               	movlb	2	; () banked
 11309  00162E  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11310  001630  0E2E               	movlw	46
 11311  001632  0102               	movlb	2	; () banked
 11312  001634  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11313  001636  0E00               	movlw	0
 11314  001638  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11315  00163A  50F3               	movf	prodl,w,c
 11316  00163C  0102               	movlb	2	; () banked
 11317  00163E  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11318  001640  50F4               	movf	prodh,w,c
 11319  001642  0102               	movlb	2	; () banked
 11320  001644  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11321  001646  0102               	movlb	2	; () banked
 11322  001648  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11323  00164A  0D02               	mullw	2
 11324  00164C  50F3               	movf	prodl,w,c
 11325  00164E  0102               	movlb	2	; () banked
 11326  001650  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11327  001652  6ED9               	movwf	fsr2l,c
 11328  001654  50F4               	movf	prodh,w,c
 11329  001656  0102               	movlb	2	; () banked
 11330  001658  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11331  00165A  6EDA               	movwf	fsr2h,c
 11332  00165C  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11333                           
 11334                           ;Bluetooth.c: 740: Global.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 11335  001660  0102               	movlb	2	; () banked
 11336  001662  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11337  001664  0D06               	mullw	6
 11338  001666  0E00               	movlw	low _Global
 11339  001668  0102               	movlb	2	; () banked
 11340  00166A  6F03               	movwf	??_UseBluetooth& (0+255),b
 11341  00166C  0E04               	movlw	high _Global
 11342  00166E  0102               	movlb	2	; () banked
 11343  001670  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11344  001672  0E2E               	movlw	46
 11345  001674  0102               	movlb	2	; () banked
 11346  001676  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11347  001678  0E00               	movlw	0
 11348  00167A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11349  00167C  50F3               	movf	prodl,w,c
 11350  00167E  0102               	movlb	2	; () banked
 11351  001680  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11352  001682  50F4               	movf	prodh,w,c
 11353  001684  0102               	movlb	2	; () banked
 11354  001686  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11355  001688  0102               	movlb	2	; () banked
 11356  00168A  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11357  00168C  0D02               	mullw	2
 11358  00168E  50F3               	movf	prodl,w,c
 11359  001690  0102               	movlb	2	; () banked
 11360  001692  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11361  001694  50F4               	movf	prodh,w,c
 11362  001696  0102               	movlb	2	; () banked
 11363  001698  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11364  00169A  0E01               	movlw	1
 11365  00169C  0102               	movlb	2	; () banked
 11366  00169E  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11367  0016A0  6ED9               	movwf	fsr2l,c
 11368  0016A2  0E00               	movlw	0
 11369  0016A4  0102               	movlb	2	; () banked
 11370  0016A6  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11371  0016A8  6EDA               	movwf	fsr2h,c
 11372  0016AA  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11373                           
 11374                           ; BSR set to: 2
 11375                           ;Bluetooth.c: 741: SyncGlobalToEEPROM();
 11376  0016AE  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
 11377                           
 11378                           ;Bluetooth.c: 743: if(device)
 11379  0016B2  0102               	movlb	2	; () banked
 11380  0016B4  5184               	movf	UseBluetooth@device& (0+255),w,b
 11381  0016B6  0102               	movlb	2	; () banked
 11382  0016B8  B4D8               	btfsc	status,2,c
 11383  0016BA  D023               	goto	l15827
 11384                           
 11385                           ; BSR set to: 2
 11386                           ;Bluetooth.c: 744: {
 11387                           ;Bluetooth.c: 745: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 11388  0016BC  0E0F               	movlw	low UseBluetooth@buf
 11389  0016BE  0100               	movlb	0	; () banked
 11390  0016C0  6FCA               	movwf	sprintf@sp& (0+255),b
 11391  0016C2  0E02               	movlw	high UseBluetooth@buf
 11392  0016C4  0100               	movlb	0	; () banked
 11393  0016C6  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11394  0016C8  0EAA               	movlw	low STR_73
 11395  0016CA  0100               	movlb	0	; () banked
 11396  0016CC  6FCC               	movwf	sprintf@f& (0+255),b
 11397  0016CE  0EF3               	movlw	high STR_73
 11398  0016D0  0100               	movlb	0	; () banked
 11399  0016D2  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11400  0016D4  C0DD  F0CE         	movff	_IR_NEC,?_sprintf+4
 11401  0016D8  C0DE  F0CF         	movff	_IR_NEC+1,?_sprintf+5
 11402  0016DC  C0DF  F0D0         	movff	_IR_NEC+2,?_sprintf+6
 11403  0016E0  C0E0  F0D1         	movff	_IR_NEC+3,?_sprintf+7
 11404  0016E4  C28B  F0D2         	movff	UseBluetooth@rfconf,?_sprintf+8
 11405  0016E8  0100               	movlb	0	; () banked
 11406  0016EA  6BD3               	clrf	(?_sprintf+9)& (0+255),b
 11407  0016EC  C273  F0D4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11408  0016F0  0100               	movlb	0	; () banked
 11409  0016F2  6BD5               	clrf	(?_sprintf+11)& (0+255),b
 11410  0016F4  C284  F0D6         	movff	UseBluetooth@device,?_sprintf+12
 11411  0016F8  0100               	movlb	0	; () banked
 11412  0016FA  6BD7               	clrf	(?_sprintf+13)& (0+255),b
 11413  0016FC  ECEF  F010         	call	_sprintf	;wreg free
 11414                           
 11415                           ;Bluetooth.c: 746: }
 11416  001700  D01F               	goto	l15829
 11417  001702                     l15827:
 11418                           
 11419                           ;Bluetooth.c: 747: else
 11420                           ;Bluetooth.c: 748: {
 11421                           ;Bluetooth.c: 749: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 11422  001702  0E0F               	movlw	low UseBluetooth@buf
 11423  001704  0100               	movlb	0	; () banked
 11424  001706  6FCA               	movwf	sprintf@sp& (0+255),b
 11425  001708  0E02               	movlw	high UseBluetooth@buf
 11426  00170A  0100               	movlb	0	; () banked
 11427  00170C  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11428  00170E  0EE9               	movlw	low STR_74
 11429  001710  0100               	movlb	0	; () banked
 11430  001712  6FCC               	movwf	sprintf@f& (0+255),b
 11431  001714  0EF3               	movlw	high STR_74
 11432  001716  0100               	movlb	0	; () banked
 11433  001718  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11434  00171A  C0DD  F0CE         	movff	_IR_NEC,?_sprintf+4
 11435  00171E  C0DE  F0CF         	movff	_IR_NEC+1,?_sprintf+5
 11436  001722  C0DF  F0D0         	movff	_IR_NEC+2,?_sprintf+6
 11437  001726  C0E0  F0D1         	movff	_IR_NEC+3,?_sprintf+7
 11438  00172A  C28B  F0D2         	movff	UseBluetooth@rfconf,?_sprintf+8
 11439  00172E  0100               	movlb	0	; () banked
 11440  001730  6BD3               	clrf	(?_sprintf+9)& (0+255),b
 11441  001732  C273  F0D4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11442  001736  0100               	movlb	0	; () banked
 11443  001738  6BD5               	clrf	(?_sprintf+11)& (0+255),b
 11444  00173A  ECEF  F010         	call	_sprintf	;wreg free
 11445  00173E  D000               	goto	l15829
 11446  001740                     l15829:
 11447                           
 11448                           ;Bluetooth.c: 750: }
 11449                           ;Bluetooth.c: 751: UARTstringCRLN(buf);
 11450  001740  0E0F               	movlw	low UseBluetooth@buf
 11451  001742  0100               	movlb	0	; () banked
 11452  001744  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11453  001746  0E02               	movlw	high UseBluetooth@buf
 11454  001748  0100               	movlb	0	; () banked
 11455  00174A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11456  00174C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11457                           
 11458                           ;Bluetooth.c: 752: UARTstring(CRLN);
 11459  001750  0EA7               	movlw	low _CRLN
 11460  001752  0100               	movlb	0	; () banked
 11461  001754  6F7D               	movwf	UARTstring@data& (0+255),b
 11462  001756  0EF3               	movlw	high _CRLN
 11463  001758  0100               	movlb	0	; () banked
 11464  00175A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11465  00175C  EC08  F047         	call	_UARTstring	;wreg free
 11466                           
 11467                           ;Bluetooth.c: 754: for(i =0;i<10;i++)
 11468  001760  0E00               	movlw	0
 11469  001762  0102               	movlb	2	; () banked
 11470  001764  6F92               	movwf	UseBluetooth@i& (0+255),b
 11471                           
 11472                           ; BSR set to: 2
 11473  001766  0E09               	movlw	9
 11474  001768  0102               	movlb	2	; () banked
 11475  00176A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11476  00176C  D002               	goto	l15839
 11477  00176E  0012               	return	
 11478                           
 11479                           ; BSR set to: 2
 11480  001770  0012               	return	
 11481  001772                     l15839:
 11482                           
 11483                           ; BSR set to: 2
 11484                           ;Bluetooth.c: 755: {
 11485                           ;Bluetooth.c: 756: (LATC |= 0x04);
 11486  001772  848B               	bsf	3979,2,c	;volatile
 11487                           
 11488                           ; BSR set to: 2
 11489                           ;Bluetooth.c: 757: delayUS(50000);
 11490  001774  0E50               	movlw	80
 11491  001776  0100               	movlb	0	; () banked
 11492  001778  6F7C               	movwf	delayUS@US& (0+255),b
 11493  00177A  0EC3               	movlw	195
 11494  00177C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11495  00177E  0E00               	movlw	0
 11496  001780  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11497  001782  0E00               	movlw	0
 11498  001784  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11499  001786  EC8C  F047         	call	_delayUS	;wreg free
 11500                           
 11501                           ;Bluetooth.c: 758: (LATC &= ~0x04);
 11502  00178A  948B               	bcf	3979,2,c	;volatile
 11503                           
 11504                           ;Bluetooth.c: 759: delayUS(50000);
 11505  00178C  0E50               	movlw	80
 11506  00178E  0100               	movlb	0	; () banked
 11507  001790  6F7C               	movwf	delayUS@US& (0+255),b
 11508  001792  0EC3               	movlw	195
 11509  001794  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11510  001796  0E00               	movlw	0
 11511  001798  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11512  00179A  0E00               	movlw	0
 11513  00179C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11514  00179E  EC8C  F047         	call	_delayUS	;wreg free
 11515  0017A2  0102               	movlb	2	; () banked
 11516  0017A4  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11517                           
 11518                           ; BSR set to: 2
 11519  0017A6  0E09               	movlw	9
 11520  0017A8  0102               	movlb	2	; () banked
 11521  0017AA  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11522  0017AC  D7E2               	goto	l15839
 11523  0017AE  0012               	return	
 11524                           
 11525                           ; BSR set to: 2
 11526                           ;Bluetooth.c: 762: }
 11527                           
 11528                           ; BSR set to: 2
 11529                           ;Bluetooth.c: 760: }
 11530                           ;Bluetooth.c: 761: return 1;
 11531                           ;	Return value of _UseBluetooth is never used
 11532  0017B0  0012               	return	
 11533  0017B2                     l15851:
 11534                           
 11535                           ; BSR set to: 2
 11536                           ;Bluetooth.c: 763: else
 11537                           ;Bluetooth.c: 764: {
 11538                           ;Bluetooth.c: 766: for(i=0; i < 3; i++)
 11539  0017B2  0E00               	movlw	0
 11540  0017B4  0102               	movlb	2	; () banked
 11541  0017B6  6F92               	movwf	UseBluetooth@i& (0+255),b
 11542  0017B8                     l15853:
 11543                           
 11544                           ; BSR set to: 2
 11545  0017B8  0E02               	movlw	2
 11546  0017BA  0102               	movlb	2	; () banked
 11547  0017BC  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11548  0017BE  D001               	goto	l15857
 11549                           
 11550                           ; BSR set to: 2
 11551  0017C0  D04B               	goto	l15863
 11552  0017C2                     l15857:
 11553                           
 11554                           ; BSR set to: 2
 11555                           ;Bluetooth.c: 767: {
 11556                           ;Bluetooth.c: 769: Global.RemoteButtonRF[tempRFArray][i][0] = 0;
 11557  0017C2  0102               	movlb	2	; () banked
 11558  0017C4  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11559  0017C6  0D06               	mullw	6
 11560  0017C8  0E00               	movlw	low _Global
 11561  0017CA  0102               	movlb	2	; () banked
 11562  0017CC  6F03               	movwf	??_UseBluetooth& (0+255),b
 11563  0017CE  0E04               	movlw	high _Global
 11564  0017D0  0102               	movlb	2	; () banked
 11565  0017D2  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11566  0017D4  0E2E               	movlw	46
 11567  0017D6  0102               	movlb	2	; () banked
 11568  0017D8  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11569  0017DA  0E00               	movlw	0
 11570  0017DC  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11571  0017DE  50F3               	movf	prodl,w,c
 11572  0017E0  0102               	movlb	2	; () banked
 11573  0017E2  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11574  0017E4  50F4               	movf	prodh,w,c
 11575  0017E6  0102               	movlb	2	; () banked
 11576  0017E8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11577  0017EA  0102               	movlb	2	; () banked
 11578  0017EC  5192               	movf	UseBluetooth@i& (0+255),w,b
 11579  0017EE  0D02               	mullw	2
 11580  0017F0  50F3               	movf	prodl,w,c
 11581  0017F2  0102               	movlb	2	; () banked
 11582  0017F4  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11583  0017F6  6ED9               	movwf	fsr2l,c
 11584  0017F8  50F4               	movf	prodh,w,c
 11585  0017FA  0102               	movlb	2	; () banked
 11586  0017FC  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11587  0017FE  6EDA               	movwf	fsr2h,c
 11588  001800  0E00               	movlw	0
 11589  001802  6EDF               	movwf	indf2,c
 11590                           
 11591                           ;Bluetooth.c: 770: Global.RemoteButtonRF[tempRFArray][i][1] = 0;
 11592  001804  0102               	movlb	2	; () banked
 11593  001806  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11594  001808  0D06               	mullw	6
 11595  00180A  0E00               	movlw	low _Global
 11596  00180C  0102               	movlb	2	; () banked
 11597  00180E  6F03               	movwf	??_UseBluetooth& (0+255),b
 11598  001810  0E04               	movlw	high _Global
 11599  001812  0102               	movlb	2	; () banked
 11600  001814  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11601  001816  0E2E               	movlw	46
 11602  001818  0102               	movlb	2	; () banked
 11603  00181A  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11604  00181C  0E00               	movlw	0
 11605  00181E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11606  001820  50F3               	movf	prodl,w,c
 11607  001822  0102               	movlb	2	; () banked
 11608  001824  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11609  001826  50F4               	movf	prodh,w,c
 11610  001828  0102               	movlb	2	; () banked
 11611  00182A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11612  00182C  0102               	movlb	2	; () banked
 11613  00182E  5192               	movf	UseBluetooth@i& (0+255),w,b
 11614  001830  0D02               	mullw	2
 11615  001832  50F3               	movf	prodl,w,c
 11616  001834  0102               	movlb	2	; () banked
 11617  001836  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11618  001838  50F4               	movf	prodh,w,c
 11619  00183A  0102               	movlb	2	; () banked
 11620  00183C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11621  00183E  0E01               	movlw	1
 11622  001840  0102               	movlb	2	; () banked
 11623  001842  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11624  001844  6ED9               	movwf	fsr2l,c
 11625  001846  0E00               	movlw	0
 11626  001848  0102               	movlb	2	; () banked
 11627  00184A  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11628  00184C  6EDA               	movwf	fsr2h,c
 11629  00184E  0E00               	movlw	0
 11630  001850  6EDF               	movwf	indf2,c
 11631                           
 11632                           ; BSR set to: 2
 11633  001852  0102               	movlb	2	; () banked
 11634  001854  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11635  001856  D7B0               	goto	l15853
 11636  001858                     l15863:
 11637                           
 11638                           ; BSR set to: 2
 11639                           ;Bluetooth.c: 771: }
 11640                           ;Bluetooth.c: 772: SyncGlobalToEEPROM();
 11641  001858  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
 11642                           
 11643                           ;Bluetooth.c: 773: if(device)
 11644  00185C  0102               	movlb	2	; () banked
 11645  00185E  5184               	movf	UseBluetooth@device& (0+255),w,b
 11646  001860  0102               	movlb	2	; () banked
 11647  001862  B4D8               	btfsc	status,2,c
 11648  001864  D01B               	goto	l15869
 11649                           
 11650                           ; BSR set to: 2
 11651                           ;Bluetooth.c: 774: {
 11652                           ;Bluetooth.c: 775: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 11653  001866  0E0F               	movlw	low UseBluetooth@buf
 11654  001868  0100               	movlb	0	; () banked
 11655  00186A  6FCA               	movwf	sprintf@sp& (0+255),b
 11656  00186C  0E02               	movlw	high UseBluetooth@buf
 11657  00186E  0100               	movlb	0	; () banked
 11658  001870  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11659  001872  0E1F               	movlw	low STR_75
 11660  001874  0100               	movlb	0	; () banked
 11661  001876  6FCC               	movwf	sprintf@f& (0+255),b
 11662  001878  0EF4               	movlw	high STR_75
 11663  00187A  0100               	movlb	0	; () banked
 11664  00187C  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11665  00187E  C28B  F0CE         	movff	UseBluetooth@rfconf,?_sprintf+4
 11666  001882  0100               	movlb	0	; () banked
 11667  001884  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 11668  001886  C273  F0D0         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11669  00188A  0100               	movlb	0	; () banked
 11670  00188C  6BD1               	clrf	(?_sprintf+7)& (0+255),b
 11671  00188E  C284  F0D2         	movff	UseBluetooth@device,?_sprintf+8
 11672  001892  0100               	movlb	0	; () banked
 11673  001894  6BD3               	clrf	(?_sprintf+9)& (0+255),b
 11674  001896  ECEF  F010         	call	_sprintf	;wreg free
 11675                           
 11676                           ;Bluetooth.c: 776: }
 11677  00189A  D017               	goto	l15871
 11678  00189C                     l15869:
 11679                           
 11680                           ;Bluetooth.c: 777: else
 11681                           ;Bluetooth.c: 778: {
 11682                           ;Bluetooth.c: 779: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 11683  00189C  0E0F               	movlw	low UseBluetooth@buf
 11684  00189E  0100               	movlb	0	; () banked
 11685  0018A0  6FCA               	movwf	sprintf@sp& (0+255),b
 11686  0018A2  0E02               	movlw	high UseBluetooth@buf
 11687  0018A4  0100               	movlb	0	; () banked
 11688  0018A6  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11689  0018A8  0EAA               	movlw	low STR_76
 11690  0018AA  0100               	movlb	0	; () banked
 11691  0018AC  6FCC               	movwf	sprintf@f& (0+255),b
 11692  0018AE  0EF7               	movlw	high STR_76
 11693  0018B0  0100               	movlb	0	; () banked
 11694  0018B2  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11695  0018B4  C28B  F0CE         	movff	UseBluetooth@rfconf,?_sprintf+4
 11696  0018B8  0100               	movlb	0	; () banked
 11697  0018BA  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 11698  0018BC  C273  F0D0         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11699  0018C0  0100               	movlb	0	; () banked
 11700  0018C2  6BD1               	clrf	(?_sprintf+7)& (0+255),b
 11701  0018C4  ECEF  F010         	call	_sprintf	;wreg free
 11702  0018C8  D000               	goto	l15871
 11703  0018CA                     l15871:
 11704                           
 11705                           ;Bluetooth.c: 780: }
 11706                           ;Bluetooth.c: 781: UARTstringCRLN(buf);
 11707  0018CA  0E0F               	movlw	low UseBluetooth@buf
 11708  0018CC  0100               	movlb	0	; () banked
 11709  0018CE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11710  0018D0  0E02               	movlw	high UseBluetooth@buf
 11711  0018D2  0100               	movlb	0	; () banked
 11712  0018D4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11713  0018D6  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11714                           
 11715                           ;Bluetooth.c: 782: UARTstring(CRLN);
 11716  0018DA  0EA7               	movlw	low _CRLN
 11717  0018DC  0100               	movlb	0	; () banked
 11718  0018DE  6F7D               	movwf	UARTstring@data& (0+255),b
 11719  0018E0  0EF3               	movlw	high _CRLN
 11720  0018E2  0100               	movlb	0	; () banked
 11721  0018E4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11722  0018E6  EC08  F047         	call	_UARTstring	;wreg free
 11723                           
 11724                           ;Bluetooth.c: 784: for(i =0;i<10;i++)
 11725  0018EA  0E00               	movlw	0
 11726  0018EC  0102               	movlb	2	; () banked
 11727  0018EE  6F92               	movwf	UseBluetooth@i& (0+255),b
 11728                           
 11729                           ; BSR set to: 2
 11730  0018F0  0E09               	movlw	9
 11731  0018F2  0102               	movlb	2	; () banked
 11732  0018F4  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11733  0018F6  D002               	goto	l15881
 11734  0018F8  0012               	return	
 11735                           
 11736                           ; BSR set to: 2
 11737  0018FA  0012               	return	
 11738  0018FC                     l15881:
 11739                           
 11740                           ; BSR set to: 2
 11741                           ;Bluetooth.c: 785: {
 11742                           ;Bluetooth.c: 786: (LATC |= 0x04);
 11743  0018FC  848B               	bsf	3979,2,c	;volatile
 11744                           
 11745                           ; BSR set to: 2
 11746                           ;Bluetooth.c: 787: delayUS(50000);
 11747  0018FE  0E50               	movlw	80
 11748  001900  0100               	movlb	0	; () banked
 11749  001902  6F7C               	movwf	delayUS@US& (0+255),b
 11750  001904  0EC3               	movlw	195
 11751  001906  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11752  001908  0E00               	movlw	0
 11753  00190A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11754  00190C  0E00               	movlw	0
 11755  00190E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11756  001910  EC8C  F047         	call	_delayUS	;wreg free
 11757                           
 11758                           ;Bluetooth.c: 788: (LATC &= ~0x04);
 11759  001914  948B               	bcf	3979,2,c	;volatile
 11760                           
 11761                           ;Bluetooth.c: 789: delayUS(50000);
 11762  001916  0E50               	movlw	80
 11763  001918  0100               	movlb	0	; () banked
 11764  00191A  6F7C               	movwf	delayUS@US& (0+255),b
 11765  00191C  0EC3               	movlw	195
 11766  00191E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11767  001920  0E00               	movlw	0
 11768  001922  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11769  001924  0E00               	movlw	0
 11770  001926  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11771  001928  EC8C  F047         	call	_delayUS	;wreg free
 11772  00192C  0102               	movlb	2	; () banked
 11773  00192E  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11774                           
 11775                           ; BSR set to: 2
 11776  001930  0E09               	movlw	9
 11777  001932  0102               	movlb	2	; () banked
 11778  001934  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11779  001936  D7E2               	goto	l15881
 11780  001938  0012               	return	
 11781                           
 11782                           ; BSR set to: 2
 11783                           ;Bluetooth.c: 792: }
 11784                           ;Bluetooth.c: 793: }
 11785                           
 11786                           ; BSR set to: 2
 11787                           ;Bluetooth.c: 790: }
 11788                           ;Bluetooth.c: 791: return 1;
 11789                           ;	Return value of _UseBluetooth is never used
 11790  00193A  0012               	return	
 11791  00193C                     l15891:
 11792                           
 11793                           ; BSR set to: 2
 11794                           ;Bluetooth.c: 794: else
 11795                           ;Bluetooth.c: 795: {
 11796                           ;Bluetooth.c: 796: UARTstringCRLN((unsigned char *)"Error: RF channel needs to be one ch
      +                          aracter");
 11797  00193C  0ED6               	movlw	low STR_77
 11798  00193E  0100               	movlb	0	; () banked
 11799  001940  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11800  001942  0EF7               	movlw	high STR_77
 11801  001944  0100               	movlb	0	; () banked
 11802  001946  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11803  001948  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11804                           
 11805                           ;Bluetooth.c: 797: UARTstring(CRLN);
 11806  00194C  0EA7               	movlw	low _CRLN
 11807  00194E  0100               	movlb	0	; () banked
 11808  001950  6F7D               	movwf	UARTstring@data& (0+255),b
 11809  001952  0EF3               	movlw	high _CRLN
 11810  001954  0100               	movlb	0	; () banked
 11811  001956  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11812  001958  EC08  F047         	call	_UARTstring	;wreg free
 11813                           
 11814                           ;Bluetooth.c: 799: }
 11815                           ;Bluetooth.c: 800: }
 11816                           ;Bluetooth.c: 801: }
 11817                           
 11818                           ;Bluetooth.c: 798: return 0;
 11819                           ;	Return value of _UseBluetooth is never used
 11820  00195C  0012               	return	
 11821  00195E                     l15895:
 11822                           
 11823                           ;Bluetooth.c: 802: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Reset"))
 11824  00195E  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11825  001962  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11826  001966  0ECC               	movlw	low STR_78
 11827  001968  0100               	movlb	0	; () banked
 11828  00196A  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11829  00196C  0EFF               	movlw	high STR_78
 11830  00196E  0100               	movlb	0	; () banked
 11831  001970  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11832  001972  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11833  001976  0900               	iorlw	0
 11834  001978  B4D8               	btfsc	status,2,c
 11835  00197A  D097               	goto	l15957
 11836                           
 11837                           ;Bluetooth.c: 803: {
 11838                           ;Bluetooth.c: 804: cleanBuffer(ReceivedString, ReceivedStringPos);
 11839  00197C  0E00               	movlw	low _ReceivedString
 11840  00197E  0100               	movlb	0	; () banked
 11841  001980  6F7C               	movwf	cleanBuffer@data& (0+255),b
 11842  001982  0E06               	movlw	high _ReceivedString
 11843  001984  0100               	movlb	0	; () banked
 11844  001986  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 11845  001988  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 11846  00198C  0100               	movlb	0	; () banked
 11847  00198E  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 11848  001990  ECDB  F046         	call	_cleanBuffer	;wreg free
 11849                           
 11850                           ;Bluetooth.c: 805: ReceivedStringPos = 0;
 11851  001994  0E00               	movlw	0
 11852  001996  0100               	movlb	0	; () banked
 11853  001998  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;Bluetooth.c: 806: NewReceivedString = 0;
 11857  00199A  0E00               	movlw	0
 11858  00199C  0100               	movlb	0	; () banked
 11859  00199E  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;Bluetooth.c: 807: UARTstring((unsigned char *)"Enter Y to reset or N to cancel");
 11863  0019A0  0ECE               	movlw	low STR_79
 11864  0019A2  0100               	movlb	0	; () banked
 11865  0019A4  6F7D               	movwf	UARTstring@data& (0+255),b
 11866  0019A6  0EF9               	movlw	high STR_79
 11867  0019A8  0100               	movlb	0	; () banked
 11868  0019AA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11869  0019AC  EC08  F047         	call	_UARTstring	;wreg free
 11870                           
 11871                           ;Bluetooth.c: 808: UARTstring(CRLN);
 11872  0019B0  0EA7               	movlw	low _CRLN
 11873  0019B2  0100               	movlb	0	; () banked
 11874  0019B4  6F7D               	movwf	UARTstring@data& (0+255),b
 11875  0019B6  0EF3               	movlw	high _CRLN
 11876  0019B8  0100               	movlb	0	; () banked
 11877  0019BA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11878  0019BC  EC08  F047         	call	_UARTstring	;wreg free
 11879                           
 11880                           ;Bluetooth.c: 809: UARTchar('>');
 11881  0019C0  0E3E               	movlw	62
 11882  0019C2  ECF4  F049         	call	_UARTchar
 11883                           
 11884                           ;Bluetooth.c: 810: timeout = 0;
 11885  0019C6  0E00               	movlw	0
 11886  0019C8  0102               	movlb	2	; () banked
 11887  0019CA  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 11888                           
 11889                           ; BSR set to: 2
 11890                           ;Bluetooth.c: 811: ClearUSART();
 11891  0019CC  EC92  F04A         	call	_ClearUSART	;wreg free
 11892                           
 11893                           ;Bluetooth.c: 812: PIR1bits.RCIF = 0;
 11894  0019D0  9A9E               	bcf	3998,5,c	;volatile
 11895                           
 11896                           ;Bluetooth.c: 813: PIE1bits.RCIE = 1;
 11897  0019D2  8A9D               	bsf	3997,5,c	;volatile
 11898                           
 11899                           ;Bluetooth.c: 814: while(!NewReceivedString)
 11900  0019D4  D023               	goto	l15927
 11901  0019D6                     l15917:
 11902                           
 11903                           ;Bluetooth.c: 815: {
 11904                           ;Bluetooth.c: 816: delayUS(300000);
 11905  0019D6  0EE0               	movlw	224
 11906  0019D8  0100               	movlb	0	; () banked
 11907  0019DA  6F7C               	movwf	delayUS@US& (0+255),b
 11908  0019DC  0E93               	movlw	147
 11909  0019DE  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11910  0019E0  0E04               	movlw	4
 11911  0019E2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11912  0019E4  0E00               	movlw	0
 11913  0019E6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11914  0019E8  EC8C  F047         	call	_delayUS	;wreg free
 11915                           
 11916                           ;Bluetooth.c: 817: timeout++;
 11917  0019EC  0102               	movlb	2	; () banked
 11918  0019EE  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 11919                           
 11920                           ; BSR set to: 2
 11921                           ;Bluetooth.c: 818: if(timeout > 25)
 11922  0019F0  0E19               	movlw	25
 11923  0019F2  0102               	movlb	2	; () banked
 11924  0019F4  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 11925  0019F6  D012               	goto	l15927
 11926                           
 11927                           ; BSR set to: 2
 11928                           ;Bluetooth.c: 819: {
 11929                           ;Bluetooth.c: 820: UARTstring(CRLN);
 11930  0019F8  0EA7               	movlw	low _CRLN
 11931  0019FA  0100               	movlb	0	; () banked
 11932  0019FC  6F7D               	movwf	UARTstring@data& (0+255),b
 11933  0019FE  0EF3               	movlw	high _CRLN
 11934  001A00  0100               	movlb	0	; () banked
 11935  001A02  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11936  001A04  EC08  F047         	call	_UARTstring	;wreg free
 11937                           
 11938                           ;Bluetooth.c: 821: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11939  001A08  0E06               	movlw	low STR_80
 11940  001A0A  0100               	movlb	0	; () banked
 11941  001A0C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11942  001A0E  0EFB               	movlw	high STR_80
 11943  001A10  0100               	movlb	0	; () banked
 11944  001A12  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11945  001A14  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11946                           
 11947                           ;Bluetooth.c: 822: return 0;
 11948                           ;	Return value of _UseBluetooth is never used
 11949  001A18  0012               	return	
 11950  001A1A  D000               	goto	l15927
 11951  001A1C                     l15927:
 11952  001A1C  0100               	movlb	0	; () banked
 11953  001A1E  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 11954  001A20  B4D8               	btfsc	status,2,c
 11955  001A22  D7D9               	goto	l15917
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;Bluetooth.c: 823: }
 11959                           ;Bluetooth.c: 824: }
 11960                           ;Bluetooth.c: 825: PIE1bits.RCIE = 0;
 11961  001A24  9A9D               	bcf	3997,5,c	;volatile
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;Bluetooth.c: 826: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 11965  001A26  0E59               	movlw	89
 11966  001A28  0106               	movlb	6	; () banked
 11967  001A2A  1900               	xorwf	_ReceivedString& (0+255),w,b
 11968  001A2C  B4D8               	btfsc	status,2,c
 11969  001A2E  D009               	goto	l15935
 11970                           
 11971                           ; BSR set to: 6
 11972  001A30  0E79               	movlw	121
 11973  001A32  0106               	movlb	6	; () banked
 11974  001A34  1900               	xorwf	_ReceivedString& (0+255),w,b
 11975  001A36  A4D8               	btfss	status,2,c
 11976  001A38  D014               	goto	l15945
 11977                           
 11978                           ; BSR set to: 6
 11979  001A3A  0106               	movlb	6	; () banked
 11980  001A3C  5101               	movf	(_ReceivedString+1)& (0+255),w,b
 11981  001A3E  A4D8               	btfss	status,2,c
 11982  001A40  D010               	goto	l15945
 11983  001A42                     l15935:
 11984                           
 11985                           ; BSR set to: 6
 11986                           ;Bluetooth.c: 827: {
 11987                           ;Bluetooth.c: 829: UARTstringCRLN((unsigned char *)"System will reset");
 11988  001A42  0E0C               	movlw	low STR_81
 11989  001A44  0100               	movlb	0	; () banked
 11990  001A46  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11991  001A48  0EFE               	movlw	high STR_81
 11992  001A4A  0100               	movlb	0	; () banked
 11993  001A4C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11994  001A4E  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 11995                           
 11996                           ;Bluetooth.c: 830: Global.EEPROMinitFlag = 0;
 11997  001A52  0E00               	movlw	0
 11998  001A54  0104               	movlb	4	; () banked
 11999  001A56  6F2D               	movwf	(_Global+45)& (0+255),b
 12000                           
 12001                           ; BSR set to: 4
 12002                           ;Bluetooth.c: 831: SyncGlobalToEEPROM();
 12003  001A58  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
 12004  001A5C  00FF               	reset		;# 
 12005                           
 12006                           ;Bluetooth.c: 833: return 1;
 12007                           ;	Return value of _UseBluetooth is never used
 12008  001A5E  0012               	return	
 12009                           
 12010                           ;Bluetooth.c: 834: }
 12011  001A60  D011               	goto	l15947
 12012  001A62                     l15945:
 12013                           
 12014                           ;Bluetooth.c: 835: else
 12015                           ;Bluetooth.c: 836: {
 12016                           ;Bluetooth.c: 837: UARTstring(CRLN);
 12017  001A62  0EA7               	movlw	low _CRLN
 12018  001A64  0100               	movlb	0	; () banked
 12019  001A66  6F7D               	movwf	UARTstring@data& (0+255),b
 12020  001A68  0EF3               	movlw	high _CRLN
 12021  001A6A  0100               	movlb	0	; () banked
 12022  001A6C  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12023  001A6E  EC08  F047         	call	_UARTstring	;wreg free
 12024                           
 12025                           ;Bluetooth.c: 838: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 12026  001A72  0E06               	movlw	low STR_80
 12027  001A74  0100               	movlb	0	; () banked
 12028  001A76  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12029  001A78  0EFB               	movlw	high STR_80
 12030  001A7A  0100               	movlb	0	; () banked
 12031  001A7C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12032  001A7E  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12033  001A82  D000               	goto	l15947
 12034  001A84                     l15947:
 12035                           
 12036                           ;Bluetooth.c: 839: }
 12037                           ;Bluetooth.c: 840: cleanBuffer(ReceivedString, ReceivedStringPos);
 12038  001A84  0E00               	movlw	low _ReceivedString
 12039  001A86  0100               	movlb	0	; () banked
 12040  001A88  6F7C               	movwf	cleanBuffer@data& (0+255),b
 12041  001A8A  0E06               	movlw	high _ReceivedString
 12042  001A8C  0100               	movlb	0	; () banked
 12043  001A8E  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 12044  001A90  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 12045  001A94  0100               	movlb	0	; () banked
 12046  001A96  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 12047  001A98  ECDB  F046         	call	_cleanBuffer	;wreg free
 12048                           
 12049                           ;Bluetooth.c: 841: ReceivedStringPos = 0;
 12050  001A9C  0E00               	movlw	0
 12051  001A9E  0100               	movlb	0	; () banked
 12052  001AA0  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;Bluetooth.c: 842: NewReceivedString = 0;
 12056  001AA2  0E00               	movlw	0
 12057  001AA4  0100               	movlb	0	; () banked
 12058  001AA6  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;Bluetooth.c: 844: }
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;Bluetooth.c: 843: return 0;
 12065                           ;	Return value of _UseBluetooth is never used
 12066  001AA8  0012               	return	
 12067  001AAA                     l15957:
 12068                           
 12069                           ;Bluetooth.c: 845: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Voltage")
      +                          )
 12070  001AAA  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 12071  001AAE  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 12072  001AB2  0E9D               	movlw	low STR_83
 12073  001AB4  0100               	movlb	0	; () banked
 12074  001AB6  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 12075  001AB8  0EFF               	movlw	high STR_83
 12076  001ABA  0100               	movlb	0	; () banked
 12077  001ABC  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 12078  001ABE  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
 12079  001AC2  0900               	iorlw	0
 12080  001AC4  B4D8               	btfsc	status,2,c
 12081  001AC6  D02F               	goto	l15967
 12082                           
 12083                           ;Bluetooth.c: 846: {
 12084                           ;Bluetooth.c: 847: UARTstring(CRLN);
 12085  001AC8  0EA7               	movlw	low _CRLN
 12086  001ACA  0100               	movlb	0	; () banked
 12087  001ACC  6F7D               	movwf	UARTstring@data& (0+255),b
 12088  001ACE  0EF3               	movlw	high _CRLN
 12089  001AD0  0100               	movlb	0	; () banked
 12090  001AD2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12091  001AD4  EC08  F047         	call	_UARTstring	;wreg free
 12092                           
 12093                           ;Bluetooth.c: 848: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 12094  001AD8  0E0F               	movlw	low UseBluetooth@buf
 12095  001ADA  0100               	movlb	0	; () banked
 12096  001ADC  6FCA               	movwf	sprintf@sp& (0+255),b
 12097  001ADE  0E02               	movlw	high UseBluetooth@buf
 12098  001AE0  0100               	movlb	0	; () banked
 12099  001AE2  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12100  001AE4  0E61               	movlw	low STR_84
 12101  001AE6  0100               	movlb	0	; () banked
 12102  001AE8  6FCC               	movwf	sprintf@f& (0+255),b
 12103  001AEA  0EFD               	movlw	high STR_84
 12104  001AEC  0100               	movlb	0	; () banked
 12105  001AEE  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12106  001AF0  EC60  F040         	call	_ReadVoltage	;wreg free
 12107  001AF4  C0A5  F0CE         	movff	?_ReadVoltage,?_sprintf+4
 12108  001AF8  C0A6  F0CF         	movff	?_ReadVoltage+1,?_sprintf+5
 12109  001AFC  C0A7  F0D0         	movff	?_ReadVoltage+2,?_sprintf+6
 12110  001B00  ECEF  F010         	call	_sprintf	;wreg free
 12111                           
 12112                           ;Bluetooth.c: 849: UARTstringCRLN(buf);
 12113  001B04  0E0F               	movlw	low UseBluetooth@buf
 12114  001B06  0100               	movlb	0	; () banked
 12115  001B08  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12116  001B0A  0E02               	movlw	high UseBluetooth@buf
 12117  001B0C  0100               	movlb	0	; () banked
 12118  001B0E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12119  001B10  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12120                           
 12121                           ;Bluetooth.c: 850: UARTstring(CRLN);
 12122  001B14  0EA7               	movlw	low _CRLN
 12123  001B16  0100               	movlb	0	; () banked
 12124  001B18  6F7D               	movwf	UARTstring@data& (0+255),b
 12125  001B1A  0EF3               	movlw	high _CRLN
 12126  001B1C  0100               	movlb	0	; () banked
 12127  001B1E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12128  001B20  EC08  F047         	call	_UARTstring	;wreg free
 12129                           
 12130                           ;Bluetooth.c: 851: }
 12131  001B24  0012               	return	
 12132  001B26                     l15967:
 12133                           
 12134                           ;Bluetooth.c: 852: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Version")
      +                          )
 12135  001B26  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 12136  001B2A  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 12137  001B2E  0E25               	movlw	low (STR_99+27)
 12138  001B30  0100               	movlb	0	; () banked
 12139  001B32  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 12140  001B34  0EF9               	movlw	high (STR_99+27)
 12141  001B36  0100               	movlb	0	; () banked
 12142  001B38  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 12143  001B3A  EC64  F043         	call	_StringMatchCaseInsensitive	;wreg free
 12144  001B3E  0900               	iorlw	0
 12145  001B40  B4D8               	btfsc	status,2,c
 12146  001B42  D093               	goto	l15989
 12147                           
 12148                           ;Bluetooth.c: 853: {
 12149                           ;Bluetooth.c: 854: UARTstring(CRLN);
 12150  001B44  0EA7               	movlw	low _CRLN
 12151  001B46  0100               	movlb	0	; () banked
 12152  001B48  6F7D               	movwf	UARTstring@data& (0+255),b
 12153  001B4A  0EF3               	movlw	high _CRLN
 12154  001B4C  0100               	movlb	0	; () banked
 12155  001B4E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12156  001B50  EC08  F047         	call	_UARTstring	;wreg free
 12157                           
 12158                           ;Bluetooth.c: 855: sprintf(buf,"Firmware Version: %s", FirmVersion);
 12159  001B54  0E0F               	movlw	low UseBluetooth@buf
 12160  001B56  0100               	movlb	0	; () banked
 12161  001B58  6FCA               	movwf	sprintf@sp& (0+255),b
 12162  001B5A  0E02               	movlw	high UseBluetooth@buf
 12163  001B5C  0100               	movlb	0	; () banked
 12164  001B5E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12165  001B60  0E10               	movlw	low STR_86
 12166  001B62  0100               	movlb	0	; () banked
 12167  001B64  6FCC               	movwf	sprintf@f& (0+255),b
 12168  001B66  0EFD               	movlw	high STR_86
 12169  001B68  0100               	movlb	0	; () banked
 12170  001B6A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12171  001B6C  0E8D               	movlw	low _FirmVersion
 12172  001B6E  0100               	movlb	0	; () banked
 12173  001B70  6FCE               	movwf	(?_sprintf+4)& (0+255),b
 12174  001B72  0EF3               	movlw	high _FirmVersion
 12175  001B74  0100               	movlb	0	; () banked
 12176  001B76  6FCF               	movwf	(?_sprintf+5)& (0+255),b
 12177  001B78  ECEF  F010         	call	_sprintf	;wreg free
 12178                           
 12179                           ;Bluetooth.c: 856: UARTstringCRLN(buf);
 12180  001B7C  0E0F               	movlw	low UseBluetooth@buf
 12181  001B7E  0100               	movlb	0	; () banked
 12182  001B80  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12183  001B82  0E02               	movlw	high UseBluetooth@buf
 12184  001B84  0100               	movlb	0	; () banked
 12185  001B86  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12186  001B88  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12187                           
 12188                           ;Bluetooth.c: 857: UARTstring(CRLN);
 12189  001B8C  0EA7               	movlw	low _CRLN
 12190  001B8E  0100               	movlb	0	; () banked
 12191  001B90  6F7D               	movwf	UARTstring@data& (0+255),b
 12192  001B92  0EF3               	movlw	high _CRLN
 12193  001B94  0100               	movlb	0	; () banked
 12194  001B96  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12195  001B98  EC08  F047         	call	_UARTstring	;wreg free
 12196                           
 12197                           ;Bluetooth.c: 859: sprintf(buf,"PCB has Bluetooth capability");
 12198  001B9C  0E0F               	movlw	low UseBluetooth@buf
 12199  001B9E  0100               	movlb	0	; () banked
 12200  001BA0  6FCA               	movwf	sprintf@sp& (0+255),b
 12201  001BA2  0E02               	movlw	high UseBluetooth@buf
 12202  001BA4  0100               	movlb	0	; () banked
 12203  001BA6  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12204  001BA8  0E5D               	movlw	low STR_87
 12205  001BAA  0100               	movlb	0	; () banked
 12206  001BAC  6FCC               	movwf	sprintf@f& (0+255),b
 12207  001BAE  0EFB               	movlw	high STR_87
 12208  001BB0  0100               	movlb	0	; () banked
 12209  001BB2  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12210  001BB4  ECEF  F010         	call	_sprintf	;wreg free
 12211                           
 12212                           ;Bluetooth.c: 863: UARTstringCRLN(buf);
 12213  001BB8  0E0F               	movlw	low UseBluetooth@buf
 12214  001BBA  0100               	movlb	0	; () banked
 12215  001BBC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12216  001BBE  0E02               	movlw	high UseBluetooth@buf
 12217  001BC0  0100               	movlb	0	; () banked
 12218  001BC2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12219  001BC4  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12220                           
 12221                           ;Bluetooth.c: 864: UARTstring(CRLN);
 12222  001BC8  0EA7               	movlw	low _CRLN
 12223  001BCA  0100               	movlb	0	; () banked
 12224  001BCC  6F7D               	movwf	UARTstring@data& (0+255),b
 12225  001BCE  0EF3               	movlw	high _CRLN
 12226  001BD0  0100               	movlb	0	; () banked
 12227  001BD2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12228  001BD4  EC08  F047         	call	_UARTstring	;wreg free
 12229                           
 12230                           ;Bluetooth.c: 865: sprintf(buf,"PCB Version: %s", PCBVersion);
 12231  001BD8  0E0F               	movlw	low UseBluetooth@buf
 12232  001BDA  0100               	movlb	0	; () banked
 12233  001BDC  6FCA               	movwf	sprintf@sp& (0+255),b
 12234  001BDE  0E02               	movlw	high UseBluetooth@buf
 12235  001BE0  0100               	movlb	0	; () banked
 12236  001BE2  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12237  001BE4  0E61               	movlw	low STR_88
 12238  001BE6  0100               	movlb	0	; () banked
 12239  001BE8  6FCC               	movwf	sprintf@f& (0+255),b
 12240  001BEA  0EFE               	movlw	high STR_88
 12241  001BEC  0100               	movlb	0	; () banked
 12242  001BEE  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12243  001BF0  0E96               	movlw	low _PCBVersion
 12244  001BF2  0100               	movlb	0	; () banked
 12245  001BF4  6FCE               	movwf	(?_sprintf+4)& (0+255),b
 12246  001BF6  0EF3               	movlw	high _PCBVersion
 12247  001BF8  0100               	movlb	0	; () banked
 12248  001BFA  6FCF               	movwf	(?_sprintf+5)& (0+255),b
 12249  001BFC  ECEF  F010         	call	_sprintf	;wreg free
 12250                           
 12251                           ;Bluetooth.c: 866: UARTstringCRLN(buf);
 12252  001C00  0E0F               	movlw	low UseBluetooth@buf
 12253  001C02  0100               	movlb	0	; () banked
 12254  001C04  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12255  001C06  0E02               	movlw	high UseBluetooth@buf
 12256  001C08  0100               	movlb	0	; () banked
 12257  001C0A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12258  001C0C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12259                           
 12260                           ;Bluetooth.c: 867: sprintf(buf,"Transmitting Frequency: %s", Frequency);
 12261  001C10  0E0F               	movlw	low UseBluetooth@buf
 12262  001C12  0100               	movlb	0	; () banked
 12263  001C14  6FCA               	movwf	sprintf@sp& (0+255),b
 12264  001C16  0E02               	movlw	high UseBluetooth@buf
 12265  001C18  0100               	movlb	0	; () banked
 12266  001C1A  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12267  001C1C  0ECE               	movlw	low STR_89
 12268  001C1E  0100               	movlb	0	; () banked
 12269  001C20  6FCC               	movwf	sprintf@f& (0+255),b
 12270  001C22  0EFB               	movlw	high STR_89
 12271  001C24  0100               	movlb	0	; () banked
 12272  001C26  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12273  001C28  0EA3               	movlw	low _Frequency
 12274  001C2A  0100               	movlb	0	; () banked
 12275  001C2C  6FCE               	movwf	(?_sprintf+4)& (0+255),b
 12276  001C2E  0EF3               	movlw	high _Frequency
 12277  001C30  0100               	movlb	0	; () banked
 12278  001C32  6FCF               	movwf	(?_sprintf+5)& (0+255),b
 12279  001C34  ECEF  F010         	call	_sprintf	;wreg free
 12280                           
 12281                           ;Bluetooth.c: 868: UARTstring(buf);
 12282  001C38  0E0F               	movlw	low UseBluetooth@buf
 12283  001C3A  0100               	movlb	0	; () banked
 12284  001C3C  6F7D               	movwf	UARTstring@data& (0+255),b
 12285  001C3E  0E02               	movlw	high UseBluetooth@buf
 12286  001C40  0100               	movlb	0	; () banked
 12287  001C42  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12288  001C44  EC08  F047         	call	_UARTstring	;wreg free
 12289                           
 12290                           ;Bluetooth.c: 869: UARTstringCRLN(" MHz");
 12291  001C48  0EE1               	movlw	low STR_90
 12292  001C4A  0100               	movlb	0	; () banked
 12293  001C4C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12294  001C4E  0EFF               	movlw	high STR_90
 12295  001C50  0100               	movlb	0	; () banked
 12296  001C52  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12297  001C54  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12298                           
 12299                           ;Bluetooth.c: 870: UARTstring(CRLN);
 12300  001C58  0EA7               	movlw	low _CRLN
 12301  001C5A  0100               	movlb	0	; () banked
 12302  001C5C  6F7D               	movwf	UARTstring@data& (0+255),b
 12303  001C5E  0EF3               	movlw	high _CRLN
 12304  001C60  0100               	movlb	0	; () banked
 12305  001C62  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12306  001C64  EC08  F047         	call	_UARTstring	;wreg free
 12307                           
 12308                           ;Bluetooth.c: 871: }
 12309  001C68  0012               	return	
 12310  001C6A                     l15989:
 12311                           
 12312                           ;Bluetooth.c: 872: else if(StringMatch(String,(unsigned char *)"???"))
 12313  001C6A  C200  F07C         	movff	UseBluetooth@String,StringMatch@This
 12314  001C6E  C201  F07D         	movff	UseBluetooth@String+1,StringMatch@This+1
 12315  001C72  0EEA               	movlw	low STR_91
 12316  001C74  0100               	movlb	0	; () banked
 12317  001C76  6F7E               	movwf	StringMatch@That& (0+255),b
 12318  001C78  0EFF               	movlw	high STR_91
 12319  001C7A  0100               	movlb	0	; () banked
 12320  001C7C  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12321  001C7E  EC39  F045         	call	_StringMatch	;wreg free
 12322  001C82  0900               	iorlw	0
 12323  001C84  B4D8               	btfsc	status,2,c
 12324  001C86  D291               	goto	l16055
 12325                           
 12326                           ;Bluetooth.c: 873: {
 12327                           ;Bluetooth.c: 874: UARTstring(CRLN);
 12328  001C88  0EA7               	movlw	low _CRLN
 12329  001C8A  0100               	movlb	0	; () banked
 12330  001C8C  6F7D               	movwf	UARTstring@data& (0+255),b
 12331  001C8E  0EF3               	movlw	high _CRLN
 12332  001C90  0100               	movlb	0	; () banked
 12333  001C92  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12334  001C94  EC08  F047         	call	_UARTstring	;wreg free
 12335                           
 12336                           ;Bluetooth.c: 875: for(i=0; i< 34; i++ )
 12337  001C98  0E00               	movlw	0
 12338  001C9A  0102               	movlb	2	; () banked
 12339  001C9C  6F92               	movwf	UseBluetooth@i& (0+255),b
 12340  001C9E                     l15995:
 12341                           
 12342                           ; BSR set to: 2
 12343  001C9E  0E21               	movlw	33
 12344  001CA0  0102               	movlb	2	; () banked
 12345  001CA2  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12346  001CA4  D001               	goto	l15999
 12347                           
 12348                           ; BSR set to: 2
 12349  001CA6  D006               	goto	l16005
 12350  001CA8                     l15999:
 12351                           
 12352                           ; BSR set to: 2
 12353                           ;Bluetooth.c: 876: {
 12354                           ;Bluetooth.c: 877: UARTchar('~');
 12355  001CA8  0E7E               	movlw	126
 12356  001CAA  ECF4  F049         	call	_UARTchar
 12357  001CAE  0102               	movlb	2	; () banked
 12358  001CB0  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12359  001CB2  D7F5               	goto	l15995
 12360  001CB4                     l16005:
 12361                           
 12362                           ; BSR set to: 2
 12363                           ;Bluetooth.c: 878: }
 12364                           ;Bluetooth.c: 879: UARTstring((unsigned char *)"Command Menu");
 12365  001CB4  0EF7               	movlw	low (STR_148+14)
 12366  001CB6  0100               	movlb	0	; () banked
 12367  001CB8  6F7D               	movwf	UARTstring@data& (0+255),b
 12368  001CBA  0EFB               	movlw	high (STR_148+14)
 12369  001CBC  0100               	movlb	0	; () banked
 12370  001CBE  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12371  001CC0  EC08  F047         	call	_UARTstring	;wreg free
 12372                           
 12373                           ;Bluetooth.c: 880: for(i=0; i< 34; i++ )
 12374  001CC4  0E00               	movlw	0
 12375  001CC6  0102               	movlb	2	; () banked
 12376  001CC8  6F92               	movwf	UseBluetooth@i& (0+255),b
 12377  001CCA                     l16009:
 12378                           
 12379                           ; BSR set to: 2
 12380  001CCA  0E21               	movlw	33
 12381  001CCC  0102               	movlb	2	; () banked
 12382  001CCE  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12383  001CD0  D001               	goto	l16013
 12384                           
 12385                           ; BSR set to: 2
 12386  001CD2  D006               	goto	l16019
 12387  001CD4                     l16013:
 12388                           
 12389                           ; BSR set to: 2
 12390                           ;Bluetooth.c: 881: {
 12391                           ;Bluetooth.c: 882: UARTchar('~');
 12392  001CD4  0E7E               	movlw	126
 12393  001CD6  ECF4  F049         	call	_UARTchar
 12394  001CDA  0102               	movlb	2	; () banked
 12395  001CDC  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12396  001CDE  D7F5               	goto	l16009
 12397  001CE0                     l16019:
 12398                           
 12399                           ; BSR set to: 2
 12400                           ;Bluetooth.c: 883: }
 12401                           ;Bluetooth.c: 884: UARTstring(CRLN);
 12402  001CE0  0EA7               	movlw	low _CRLN
 12403  001CE2  0100               	movlb	0	; () banked
 12404  001CE4  6F7D               	movwf	UARTstring@data& (0+255),b
 12405  001CE6  0EF3               	movlw	high _CRLN
 12406  001CE8  0100               	movlb	0	; () banked
 12407  001CEA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12408  001CEC  EC08  F047         	call	_UARTstring	;wreg free
 12409                           
 12410                           ;Bluetooth.c: 885: UARTstring(CRLN);
 12411  001CF0  0EA7               	movlw	low _CRLN
 12412  001CF2  0100               	movlb	0	; () banked
 12413  001CF4  6F7D               	movwf	UARTstring@data& (0+255),b
 12414  001CF6  0EF3               	movlw	high _CRLN
 12415  001CF8  0100               	movlb	0	; () banked
 12416  001CFA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12417  001CFC  EC08  F047         	call	_UARTstring	;wreg free
 12418                           
 12419                           ;Bluetooth.c: 886: UARTstringCRLN((unsigned char *)"System commands:");
 12420  001D00  0E2F               	movlw	low STR_93
 12421  001D02  0100               	movlb	0	; () banked
 12422  001D04  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12423  001D06  0EFE               	movlw	high STR_93
 12424  001D08  0100               	movlb	0	; () banked
 12425  001D0A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12426  001D0C  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12427                           
 12428                           ;Bluetooth.c: 887: UARTcommandMenu((unsigned char *)"???", (unsigned char *)"Help Menu")
      +                          ;
 12429  001D10  0EEA               	movlw	low STR_91
 12430  001D12  0100               	movlb	0	; () banked
 12431  001D14  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12432  001D16  0EFF               	movlw	high STR_91
 12433  001D18  0100               	movlb	0	; () banked
 12434  001D1A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12435  001D1C  0E78               	movlw	low STR_95
 12436  001D1E  0100               	movlb	0	; () banked
 12437  001D20  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12438  001D22  0EFF               	movlw	high STR_95
 12439  001D24  0100               	movlb	0	; () banked
 12440  001D26  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12441  001D28  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12442                           
 12443                           ;Bluetooth.c: 888: UARTcommandMenu((unsigned char *)"Reset", (unsigned char *)"Clears me
      +                          mory and resets device");
 12444  001D2C  0ECC               	movlw	low STR_78
 12445  001D2E  0100               	movlb	0	; () banked
 12446  001D30  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12447  001D32  0EFF               	movlw	high STR_78
 12448  001D34  0100               	movlb	0	; () banked
 12449  001D36  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12450  001D38  0EAE               	movlw	low STR_97
 12451  001D3A  0100               	movlb	0	; () banked
 12452  001D3C  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12453  001D3E  0EF9               	movlw	high STR_97
 12454  001D40  0100               	movlb	0	; () banked
 12455  001D42  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12456  001D44  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12457                           
 12458                           ;Bluetooth.c: 889: UARTcommandMenu((unsigned char *)"Version", (unsigned char *)"Display
      +                          s Firmware/Hardware Version");
 12459  001D48  0E25               	movlw	low (STR_99+27)
 12460  001D4A  0100               	movlb	0	; () banked
 12461  001D4C  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12462  001D4E  0EF9               	movlw	high (STR_99+27)
 12463  001D50  0100               	movlb	0	; () banked
 12464  001D52  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12465  001D54  0E0A               	movlw	low STR_99
 12466  001D56  0100               	movlb	0	; () banked
 12467  001D58  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12468  001D5A  0EF9               	movlw	high STR_99
 12469  001D5C  0100               	movlb	0	; () banked
 12470  001D5E  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12471  001D60  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12472                           
 12473                           ;Bluetooth.c: 890: UARTstring(CRLN);
 12474  001D64  0EA7               	movlw	low _CRLN
 12475  001D66  0100               	movlb	0	; () banked
 12476  001D68  6F7D               	movwf	UARTstring@data& (0+255),b
 12477  001D6A  0EF3               	movlw	high _CRLN
 12478  001D6C  0100               	movlb	0	; () banked
 12479  001D6E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12480  001D70  EC08  F047         	call	_UARTstring	;wreg free
 12481                           
 12482                           ;Bluetooth.c: 891: UARTstringCRLN((unsigned char *)"Diagnostic Commands:");
 12483  001D74  0EFB               	movlw	low STR_100
 12484  001D76  0100               	movlb	0	; () banked
 12485  001D78  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12486  001D7A  0EFC               	movlw	high STR_100
 12487  001D7C  0100               	movlb	0	; () banked
 12488  001D7E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12489  001D80  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12490                           
 12491                           ;Bluetooth.c: 892: UARTcommandMenu((unsigned char *)"Voltage", (unsigned char *)"Display
      +                          s the supply voltage");
 12492  001D84  0E9D               	movlw	low STR_83
 12493  001D86  0100               	movlb	0	; () banked
 12494  001D88  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12495  001D8A  0EFF               	movlw	high STR_83
 12496  001D8C  0100               	movlb	0	; () banked
 12497  001D8E  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12498  001D90  0E96               	movlw	low STR_102
 12499  001D92  0100               	movlb	0	; () banked
 12500  001D94  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12501  001D96  0EFB               	movlw	high STR_102
 12502  001D98  0100               	movlb	0	; () banked
 12503  001D9A  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12504  001D9C  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12505                           
 12506                           ;Bluetooth.c: 893: UARTstring(CRLN);
 12507  001DA0  0EA7               	movlw	low _CRLN
 12508  001DA2  0100               	movlb	0	; () banked
 12509  001DA4  6F7D               	movwf	UARTstring@data& (0+255),b
 12510  001DA6  0EF3               	movlw	high _CRLN
 12511  001DA8  0100               	movlb	0	; () banked
 12512  001DAA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12513  001DAC  EC08  F047         	call	_UARTstring	;wreg free
 12514                           
 12515                           ;Bluetooth.c: 894: UARTstringCRLN((unsigned char *)"IR commands:");
 12516  001DB0  0EB9               	movlw	low STR_103
 12517  001DB2  0100               	movlb	0	; () banked
 12518  001DB4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12519  001DB6  0EFE               	movlw	high STR_103
 12520  001DB8  0100               	movlb	0	; () banked
 12521  001DBA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12522  001DBC  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12523                           
 12524                           ;Bluetooth.c: 895: for(i=1; i <= 20; i++)
 12525  001DC0  0E01               	movlw	1
 12526  001DC2  0102               	movlb	2	; () banked
 12527  001DC4  6F92               	movwf	UseBluetooth@i& (0+255),b
 12528  001DC6                     l16023:
 12529                           
 12530                           ; BSR set to: 2
 12531  001DC6  0E14               	movlw	20
 12532  001DC8  0102               	movlb	2	; () banked
 12533  001DCA  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12534  001DCC  D001               	goto	l16027
 12535                           
 12536                           ; BSR set to: 2
 12537  001DCE  D030               	goto	l16037
 12538  001DD0                     l16027:
 12539                           
 12540                           ; BSR set to: 2
 12541                           ;Bluetooth.c: 896: {
 12542                           ;Bluetooth.c: 897: cleanBuffer(buf,50);
 12543  001DD0  0E0F               	movlw	low UseBluetooth@buf
 12544  001DD2  0100               	movlb	0	; () banked
 12545  001DD4  6F7C               	movwf	cleanBuffer@data& (0+255),b
 12546  001DD6  0E02               	movlw	high UseBluetooth@buf
 12547  001DD8  0100               	movlb	0	; () banked
 12548  001DDA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 12549  001DDC  0E00               	movlw	0
 12550  001DDE  0100               	movlb	0	; () banked
 12551  001DE0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 12552  001DE2  0E32               	movlw	50
 12553  001DE4  6F7E               	movwf	cleanBuffer@count& (0+255),b
 12554  001DE6  ECDB  F046         	call	_cleanBuffer	;wreg free
 12555                           
 12556                           ;Bluetooth.c: 898: sprintf(buf,"RemoteButton%d",i);
 12557  001DEA  0E0F               	movlw	low UseBluetooth@buf
 12558  001DEC  0100               	movlb	0	; () banked
 12559  001DEE  6FCA               	movwf	sprintf@sp& (0+255),b
 12560  001DF0  0E02               	movlw	high UseBluetooth@buf
 12561  001DF2  0100               	movlb	0	; () banked
 12562  001DF4  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12563  001DF6  0E81               	movlw	low STR_104
 12564  001DF8  0100               	movlb	0	; () banked
 12565  001DFA  6FCC               	movwf	sprintf@f& (0+255),b
 12566  001DFC  0EFE               	movlw	high STR_104
 12567  001DFE  0100               	movlb	0	; () banked
 12568  001E00  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12569  001E02  C292  F0CE         	movff	UseBluetooth@i,?_sprintf+4
 12570  001E06  0100               	movlb	0	; () banked
 12571  001E08  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 12572  001E0A  ECEF  F010         	call	_sprintf	;wreg free
 12573                           
 12574                           ;Bluetooth.c: 899: UARTcommandMenu(buf, "Transmits saved NEC code");
 12575  001E0E  0E0F               	movlw	low UseBluetooth@buf
 12576  001E10  0100               	movlb	0	; () banked
 12577  001E12  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12578  001E14  0E02               	movlw	high UseBluetooth@buf
 12579  001E16  0100               	movlb	0	; () banked
 12580  001E18  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12581  001E1A  0E04               	movlw	low STR_105
 12582  001E1C  0100               	movlb	0	; () banked
 12583  001E1E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12584  001E20  0EFC               	movlw	high STR_105
 12585  001E22  0100               	movlb	0	; () banked
 12586  001E24  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12587  001E26  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12588  001E2A  0102               	movlb	2	; () banked
 12589  001E2C  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12590  001E2E  D7CB               	goto	l16023
 12591  001E30                     l16037:
 12592                           
 12593                           ; BSR set to: 2
 12594                           ;Bluetooth.c: 900: }
 12595                           ;Bluetooth.c: 901: for(i=1; i <= 20; i++)
 12596  001E30  0E01               	movlw	1
 12597  001E32  0102               	movlb	2	; () banked
 12598  001E34  6F92               	movwf	UseBluetooth@i& (0+255),b
 12599  001E36                     l16039:
 12600                           
 12601                           ; BSR set to: 2
 12602  001E36  0E14               	movlw	20
 12603  001E38  0102               	movlb	2	; () banked
 12604  001E3A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12605  001E3C  D001               	goto	l16043
 12606                           
 12607                           ; BSR set to: 2
 12608  001E3E  D030               	goto	l16053
 12609  001E40                     l16043:
 12610                           
 12611                           ; BSR set to: 2
 12612                           ;Bluetooth.c: 902: {
 12613                           ;Bluetooth.c: 903: cleanBuffer(buf,50);
 12614  001E40  0E0F               	movlw	low UseBluetooth@buf
 12615  001E42  0100               	movlb	0	; () banked
 12616  001E44  6F7C               	movwf	cleanBuffer@data& (0+255),b
 12617  001E46  0E02               	movlw	high UseBluetooth@buf
 12618  001E48  0100               	movlb	0	; () banked
 12619  001E4A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 12620  001E4C  0E00               	movlw	0
 12621  001E4E  0100               	movlb	0	; () banked
 12622  001E50  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 12623  001E52  0E32               	movlw	50
 12624  001E54  6F7E               	movwf	cleanBuffer@count& (0+255),b
 12625  001E56  ECDB  F046         	call	_cleanBuffer	;wreg free
 12626                           
 12627                           ;Bluetooth.c: 904: sprintf(buf,"RemoteButton%d set",i);
 12628  001E5A  0E0F               	movlw	low UseBluetooth@buf
 12629  001E5C  0100               	movlb	0	; () banked
 12630  001E5E  6FCA               	movwf	sprintf@sp& (0+255),b
 12631  001E60  0E02               	movlw	high UseBluetooth@buf
 12632  001E62  0100               	movlb	0	; () banked
 12633  001E64  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12634  001E66  0ED5               	movlw	low STR_106
 12635  001E68  0100               	movlb	0	; () banked
 12636  001E6A  6FCC               	movwf	sprintf@f& (0+255),b
 12637  001E6C  0EFD               	movlw	high STR_106
 12638  001E6E  0100               	movlb	0	; () banked
 12639  001E70  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12640  001E72  C292  F0CE         	movff	UseBluetooth@i,?_sprintf+4
 12641  001E76  0100               	movlb	0	; () banked
 12642  001E78  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 12643  001E7A  ECEF  F010         	call	_sprintf	;wreg free
 12644                           
 12645                           ;Bluetooth.c: 905: UARTcommandMenu(buf,(unsigned char *) "Allows saving NEC codes");
 12646  001E7E  0E0F               	movlw	low UseBluetooth@buf
 12647  001E80  0100               	movlb	0	; () banked
 12648  001E82  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12649  001E84  0E02               	movlw	high UseBluetooth@buf
 12650  001E86  0100               	movlb	0	; () banked
 12651  001E88  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12652  001E8A  0E35               	movlw	low STR_107
 12653  001E8C  0100               	movlb	0	; () banked
 12654  001E8E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12655  001E90  0EFC               	movlw	high STR_107
 12656  001E92  0100               	movlb	0	; () banked
 12657  001E94  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12658  001E96  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12659  001E9A  0102               	movlb	2	; () banked
 12660  001E9C  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12661  001E9E  D7CB               	goto	l16039
 12662  001EA0                     l16053:
 12663                           
 12664                           ; BSR set to: 2
 12665                           ;Bluetooth.c: 906: }
 12666                           ;Bluetooth.c: 907: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 1
      +                           channel D");
 12667  001EA0  0E2C               	movlw	low STR_108
 12668  001EA2  0100               	movlb	0	; () banked
 12669  001EA4  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12670  001EA6  0EFF               	movlw	high STR_108
 12671  001EA8  0100               	movlb	0	; () banked
 12672  001EAA  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12673  001EAC  0EEA               	movlw	low STR_109
 12674  001EAE  0100               	movlb	0	; () banked
 12675  001EB0  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12676  001EB2  0EF4               	movlw	high STR_109
 12677  001EB4  0100               	movlb	0	; () banked
 12678  001EB6  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12679  001EB8  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12680                           
 12681                           ;Bluetooth.c: 908: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 1
      +                           channel E");
 12682  001EBC  0E42               	movlw	low STR_110
 12683  001EBE  0100               	movlb	0	; () banked
 12684  001EC0  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12685  001EC2  0EFF               	movlw	high STR_110
 12686  001EC4  0100               	movlb	0	; () banked
 12687  001EC6  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12688  001EC8  0E4C               	movlw	low STR_111
 12689  001ECA  0100               	movlb	0	; () banked
 12690  001ECC  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12691  001ECE  0EF5               	movlw	high STR_111
 12692  001ED0  0100               	movlb	0	; () banked
 12693  001ED2  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12694  001ED4  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12695                           
 12696                           ;Bluetooth.c: 909: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 1
      +                           channel F");
 12697  001ED8  0E4D               	movlw	low STR_112
 12698  001EDA  0100               	movlb	0	; () banked
 12699  001EDC  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12700  001EDE  0EFF               	movlw	high STR_112
 12701  001EE0  0100               	movlb	0	; () banked
 12702  001EE2  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12703  001EE4  0E7D               	movlw	low STR_113
 12704  001EE6  0100               	movlb	0	; () banked
 12705  001EE8  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12706  001EEA  0EF5               	movlw	high STR_113
 12707  001EEC  0100               	movlb	0	; () banked
 12708  001EEE  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12709  001EF0  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12710                           
 12711                           ;Bluetooth.c: 910: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 2
      +                           channel B");
 12712  001EF4  0E21               	movlw	low STR_114
 12713  001EF6  0100               	movlb	0	; () banked
 12714  001EF8  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12715  001EFA  0EFF               	movlw	high STR_114
 12716  001EFC  0100               	movlb	0	; () banked
 12717  001EFE  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12718  001F00  0EB9               	movlw	low STR_115
 12719  001F02  0100               	movlb	0	; () banked
 12720  001F04  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12721  001F06  0EF4               	movlw	high STR_115
 12722  001F08  0100               	movlb	0	; () banked
 12723  001F0A  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12724  001F0C  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12725                           
 12726                           ;Bluetooth.c: 911: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 2
      +                           channel D");
 12727  001F10  0E37               	movlw	low STR_116
 12728  001F12  0100               	movlb	0	; () banked
 12729  001F14  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12730  001F16  0EFF               	movlw	high STR_116
 12731  001F18  0100               	movlb	0	; () banked
 12732  001F1A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12733  001F1C  0E1B               	movlw	low STR_117
 12734  001F1E  0100               	movlb	0	; () banked
 12735  001F20  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12736  001F22  0EF5               	movlw	high STR_117
 12737  001F24  0100               	movlb	0	; () banked
 12738  001F26  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12739  001F28  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12740                           
 12741                           ;Bluetooth.c: 912: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 2
      +                           channel H");
 12742  001F2C  0E58               	movlw	low STR_118
 12743  001F2E  0100               	movlb	0	; () banked
 12744  001F30  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12745  001F32  0EFF               	movlw	high STR_118
 12746  001F34  0100               	movlb	0	; () banked
 12747  001F36  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12748  001F38  0EAE               	movlw	low STR_119
 12749  001F3A  0100               	movlb	0	; () banked
 12750  001F3C  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12751  001F3E  0EF5               	movlw	high STR_119
 12752  001F40  0100               	movlb	0	; () banked
 12753  001F42  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12754  001F44  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12755                           
 12756                           ;Bluetooth.c: 913: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1 
      +                          channel D");
 12757  001F48  0ED3               	movlw	low STR_120
 12758  001F4A  0100               	movlb	0	; () banked
 12759  001F4C  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12760  001F4E  0EFE               	movlw	high STR_120
 12761  001F50  0100               	movlb	0	; () banked
 12762  001F52  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12763  001F54  0E6A               	movlw	low STR_121
 12764  001F56  0100               	movlb	0	; () banked
 12765  001F58  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12766  001F5A  0EF6               	movlw	high STR_121
 12767  001F5C  0100               	movlb	0	; () banked
 12768  001F5E  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12769  001F60  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12770                           
 12771                           ;Bluetooth.c: 914: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1 
      +                          channel E");
 12772  001F64  0EED               	movlw	low STR_122
 12773  001F66  0100               	movlb	0	; () banked
 12774  001F68  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12775  001F6A  0EFE               	movlw	high STR_122
 12776  001F6C  0100               	movlb	0	; () banked
 12777  001F6E  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12778  001F70  0EC6               	movlw	low STR_123
 12779  001F72  0100               	movlb	0	; () banked
 12780  001F74  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12781  001F76  0EF6               	movlw	high STR_123
 12782  001F78  0100               	movlb	0	; () banked
 12783  001F7A  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12784  001F7C  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12785                           
 12786                           ;Bluetooth.c: 915: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1 
      +                          channel F");
 12787  001F80  0EFA               	movlw	low STR_124
 12788  001F82  0100               	movlb	0	; () banked
 12789  001F84  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12790  001F86  0EFE               	movlw	high STR_124
 12791  001F88  0100               	movlb	0	; () banked
 12792  001F8A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12793  001F8C  0EF4               	movlw	low STR_125
 12794  001F8E  0100               	movlb	0	; () banked
 12795  001F90  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12796  001F92  0EF6               	movlw	high STR_125
 12797  001F94  0100               	movlb	0	; () banked
 12798  001F96  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12799  001F98  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12800                           
 12801                           ;Bluetooth.c: 916: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2 
      +                          channel B");
 12802  001F9C  0EC6               	movlw	low STR_126
 12803  001F9E  0100               	movlb	0	; () banked
 12804  001FA0  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12805  001FA2  0EFE               	movlw	high STR_126
 12806  001FA4  0100               	movlb	0	; () banked
 12807  001FA6  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12808  001FA8  0E3C               	movlw	low STR_127
 12809  001FAA  0100               	movlb	0	; () banked
 12810  001FAC  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12811  001FAE  0EF6               	movlw	high STR_127
 12812  001FB0  0100               	movlb	0	; () banked
 12813  001FB2  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12814  001FB4  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12815                           
 12816                           ;Bluetooth.c: 917: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2 
      +                          channel D");
 12817  001FB8  0EE0               	movlw	low STR_128
 12818  001FBA  0100               	movlb	0	; () banked
 12819  001FBC  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12820  001FBE  0EFE               	movlw	high STR_128
 12821  001FC0  0100               	movlb	0	; () banked
 12822  001FC2  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12823  001FC4  0E98               	movlw	low STR_129
 12824  001FC6  0100               	movlb	0	; () banked
 12825  001FC8  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12826  001FCA  0EF6               	movlw	high STR_129
 12827  001FCC  0100               	movlb	0	; () banked
 12828  001FCE  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12829  001FD0  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12830                           
 12831                           ;Bluetooth.c: 918: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2 
      +                          channel H");
 12832  001FD4  0E07               	movlw	low STR_130
 12833  001FD6  0100               	movlb	0	; () banked
 12834  001FD8  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12835  001FDA  0EFF               	movlw	high STR_130
 12836  001FDC  0100               	movlb	0	; () banked
 12837  001FDE  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12838  001FE0  0E22               	movlw	low STR_131
 12839  001FE2  0100               	movlb	0	; () banked
 12840  001FE4  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12841  001FE6  0EF7               	movlw	high STR_131
 12842  001FE8  0100               	movlb	0	; () banked
 12843  001FEA  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12844  001FEC  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12845                           
 12846                           ;Bluetooth.c: 919: UARTcommandMenu((unsigned char *)"NEC?", (unsigned char *)"NEC descri
      +                          ption for Arbitrary code send");
 12847  001FF0  0EDC               	movlw	low STR_132
 12848  001FF2  0100               	movlb	0	; () banked
 12849  001FF4  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12850  001FF6  0EFF               	movlw	high STR_132
 12851  001FF8  0100               	movlb	0	; () banked
 12852  001FFA  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12853  001FFC  0E2C               	movlw	low STR_133
 12854  001FFE  0100               	movlb	0	; () banked
 12855  002000  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12856  002002  0EF8               	movlw	high STR_133
 12857  002004  0100               	movlb	0	; () banked
 12858  002006  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12859  002008  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12860                           
 12861                           ;Bluetooth.c: 920: UARTstring(CRLN);
 12862  00200C  0EA7               	movlw	low _CRLN
 12863  00200E  0100               	movlb	0	; () banked
 12864  002010  6F7D               	movwf	UARTstring@data& (0+255),b
 12865  002012  0EF3               	movlw	high _CRLN
 12866  002014  0100               	movlb	0	; () banked
 12867  002016  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12868  002018  EC08  F047         	call	_UARTstring	;wreg free
 12869                           
 12870                           ;Bluetooth.c: 921: UARTstringCRLN((unsigned char *)"RF commands:");
 12871  00201C  0EAC               	movlw	low STR_134
 12872  00201E  0100               	movlb	0	; () banked
 12873  002020  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12874  002022  0EFE               	movlw	high STR_134
 12875  002024  0100               	movlb	0	; () banked
 12876  002026  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12877  002028  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 12878                           
 12879                           ;Bluetooth.c: 922: UARTcommandMenu(Conf1_ChannelD_STR, (unsigned char *)"RFK100LC Channe
      +                          l D");
 12880  00202C  0E2E               	movlw	low _Conf1_ChannelD_STR
 12881  00202E  0100               	movlb	0	; () banked
 12882  002030  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12883  002032  0EF3               	movlw	high _Conf1_ChannelD_STR
 12884  002034  0100               	movlb	0	; () banked
 12885  002036  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12886  002038  0E89               	movlw	low STR_135
 12887  00203A  0100               	movlb	0	; () banked
 12888  00203C  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12889  00203E  0EFD               	movlw	high STR_135
 12890  002040  0100               	movlb	0	; () banked
 12891  002042  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12892  002044  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12893                           
 12894                           ;Bluetooth.c: 923: UARTcommandMenu(Conf1_ChannelE_STR, (unsigned char *)"RFK100LC Channe
      +                          l E");
 12895  002048  0E3D               	movlw	low _Conf1_ChannelE_STR
 12896  00204A  0100               	movlb	0	; () banked
 12897  00204C  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12898  00204E  0EF3               	movlw	high _Conf1_ChannelE_STR
 12899  002050  0100               	movlb	0	; () banked
 12900  002052  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12901  002054  0E9C               	movlw	low STR_136
 12902  002056  0100               	movlb	0	; () banked
 12903  002058  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12904  00205A  0EFD               	movlw	high STR_136
 12905  00205C  0100               	movlb	0	; () banked
 12906  00205E  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12907  002060  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12908                           
 12909                           ;Bluetooth.c: 924: UARTcommandMenu(Conf1_ChannelF_STR, (unsigned char *)"RFK100LC Channe
      +                          l F");
 12910  002064  0E4C               	movlw	low _Conf1_ChannelF_STR
 12911  002066  0100               	movlb	0	; () banked
 12912  002068  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12913  00206A  0EF3               	movlw	high _Conf1_ChannelF_STR
 12914  00206C  0100               	movlb	0	; () banked
 12915  00206E  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12916  002070  0EAF               	movlw	low STR_137
 12917  002072  0100               	movlb	0	; () banked
 12918  002074  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12919  002076  0EFD               	movlw	high STR_137
 12920  002078  0100               	movlb	0	; () banked
 12921  00207A  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12922  00207C  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12923                           
 12924                           ;Bluetooth.c: 925: UARTcommandMenu(Conf2_ChannelB_ON_STR, (unsigned char *)"RFK306LC Cha
      +                          nnel B ON");
 12925  002080  0E6A               	movlw	low _Conf2_ChannelB_ON_STR
 12926  002082  0100               	movlb	0	; () banked
 12927  002084  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12928  002086  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
 12929  002088  0100               	movlb	0	; () banked
 12930  00208A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12931  00208C  0E7B               	movlw	low STR_138
 12932  00208E  0100               	movlb	0	; () banked
 12933  002090  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12934  002092  0EFC               	movlw	high STR_138
 12935  002094  0100               	movlb	0	; () banked
 12936  002096  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12937  002098  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12938                           
 12939                           ;Bluetooth.c: 926: UARTcommandMenu(Conf2_ChannelB_OFF_STR, (unsigned char *)"RFK306LC Ch
      +                          annel B OFF");
 12940  00209C  0E44               	movlw	low _Conf2_ChannelB_OFF_STR
 12941  00209E  0100               	movlb	0	; () banked
 12942  0020A0  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12943  0020A2  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
 12944  0020A4  0100               	movlb	0	; () banked
 12945  0020A6  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12946  0020A8  0E64               	movlw	low STR_139
 12947  0020AA  0100               	movlb	0	; () banked
 12948  0020AC  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12949  0020AE  0EFC               	movlw	high STR_139
 12950  0020B0  0100               	movlb	0	; () banked
 12951  0020B2  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12952  0020B4  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12953                           
 12954                           ;Bluetooth.c: 927: UARTcommandMenu(Conf2_ChannelD_ON_STR, (unsigned char *)"TR009 Channe
      +                          l D ON");
 12955  0020B8  0E7C               	movlw	low _Conf2_ChannelD_ON_STR
 12956  0020BA  0100               	movlb	0	; () banked
 12957  0020BC  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12958  0020BE  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
 12959  0020C0  0100               	movlb	0	; () banked
 12960  0020C2  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12961  0020C4  0EC2               	movlw	low STR_140
 12962  0020C6  0100               	movlb	0	; () banked
 12963  0020C8  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12964  0020CA  0EFD               	movlw	high STR_140
 12965  0020CC  0100               	movlb	0	; () banked
 12966  0020CE  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12967  0020D0  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12968                           
 12969                           ;Bluetooth.c: 928: UARTcommandMenu(Conf2_ChannelD_OFF_STR, (unsigned char *)"TR009 Chann
      +                          el D OFF");
 12970  0020D4  0E57               	movlw	low _Conf2_ChannelD_OFF_STR
 12971  0020D6  0100               	movlb	0	; () banked
 12972  0020D8  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12973  0020DA  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
 12974  0020DC  0100               	movlb	0	; () banked
 12975  0020DE  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12976  0020E0  0E39               	movlw	low STR_141
 12977  0020E2  0100               	movlb	0	; () banked
 12978  0020E4  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12979  0020E6  0EFD               	movlw	high STR_141
 12980  0020E8  0100               	movlb	0	; () banked
 12981  0020EA  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12982  0020EC  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12983                           
 12984                           ;Bluetooth.c: 929: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 1 ON");
 12985  0020F0  0E08               	movlw	low _Conf2_ChannelH_1_ON_STR
 12986  0020F2  0100               	movlb	0	; () banked
 12987  0020F4  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12988  0020F6  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
 12989  0020F8  0100               	movlb	0	; () banked
 12990  0020FA  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12991  0020FC  0E4C               	movlw	low STR_142
 12992  0020FE  0100               	movlb	0	; () banked
 12993  002100  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12994  002102  0EFA               	movlw	high STR_142
 12995  002104  0100               	movlb	0	; () banked
 12996  002106  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12997  002108  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 12998                           
 12999                           ;Bluetooth.c: 930: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 1 OFF");
 13000  00210C  0EC9               	movlw	low _Conf2_ChannelH_1_OFF_STR
 13001  00210E  0100               	movlb	0	; () banked
 13002  002110  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13003  002112  0EF1               	movlw	high _Conf2_ChannelH_1_OFF_STR
 13004  002114  0100               	movlb	0	; () banked
 13005  002116  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13006  002118  0E4E               	movlw	low STR_143
 13007  00211A  0100               	movlb	0	; () banked
 13008  00211C  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13009  00211E  0EF9               	movlw	high STR_143
 13010  002120  0100               	movlb	0	; () banked
 13011  002122  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13012  002124  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 13013                           
 13014                           ;Bluetooth.c: 931: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 2 ON");
 13015  002128  0E1C               	movlw	low _Conf2_ChannelH_2_ON_STR
 13016  00212A  0100               	movlb	0	; () banked
 13017  00212C  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13018  00212E  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
 13019  002130  0100               	movlb	0	; () banked
 13020  002132  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13021  002134  0E6B               	movlw	low STR_144
 13022  002136  0100               	movlb	0	; () banked
 13023  002138  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13024  00213A  0EFA               	movlw	high STR_144
 13025  00213C  0100               	movlb	0	; () banked
 13026  00213E  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13027  002140  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 13028                           
 13029                           ;Bluetooth.c: 932: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 2 OFF");
 13030  002144  0EDE               	movlw	low _Conf2_ChannelH_2_OFF_STR
 13031  002146  0100               	movlb	0	; () banked
 13032  002148  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13033  00214A  0EF1               	movlw	high _Conf2_ChannelH_2_OFF_STR
 13034  00214C  0100               	movlb	0	; () banked
 13035  00214E  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13036  002150  0E6E               	movlw	low STR_145
 13037  002152  0100               	movlb	0	; () banked
 13038  002154  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13039  002156  0EF9               	movlw	high STR_145
 13040  002158  0100               	movlb	0	; () banked
 13041  00215A  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13042  00215C  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 13043                           
 13044                           ;Bluetooth.c: 933: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 3 ON");
 13045  002160  0E30               	movlw	low _Conf2_ChannelH_3_ON_STR
 13046  002162  0100               	movlb	0	; () banked
 13047  002164  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13048  002166  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
 13049  002168  0100               	movlb	0	; () banked
 13050  00216A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13051  00216C  0E8A               	movlw	low STR_146
 13052  00216E  0100               	movlb	0	; () banked
 13053  002170  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13054  002172  0EFA               	movlw	high STR_146
 13055  002174  0100               	movlb	0	; () banked
 13056  002176  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13057  002178  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 13058                           
 13059                           ;Bluetooth.c: 934: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 3 OFF");
 13060  00217C  0EF3               	movlw	low _Conf2_ChannelH_3_OFF_STR
 13061  00217E  0100               	movlb	0	; () banked
 13062  002180  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13063  002182  0EF1               	movlw	high _Conf2_ChannelH_3_OFF_STR
 13064  002184  0100               	movlb	0	; () banked
 13065  002186  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13066  002188  0E8E               	movlw	low STR_147
 13067  00218A  0100               	movlb	0	; () banked
 13068  00218C  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13069  00218E  0EF9               	movlw	high STR_147
 13070  002190  0100               	movlb	0	; () banked
 13071  002192  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13072  002194  ECCC  F03B         	call	_UARTcommandMenu	;wreg free
 13073                           
 13074                           ;Bluetooth.c: 935: UARTstring(CRLN);
 13075  002198  0EA7               	movlw	low _CRLN
 13076  00219A  0100               	movlb	0	; () banked
 13077  00219C  6F7D               	movwf	UARTstring@data& (0+255),b
 13078  00219E  0EF3               	movlw	high _CRLN
 13079  0021A0  0100               	movlb	0	; () banked
 13080  0021A2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13081  0021A4  EC08  F047         	call	_UARTstring	;wreg free
 13082                           
 13083                           ;Bluetooth.c: 936: }
 13084  0021A8  0012               	return	
 13085  0021AA                     l16055:
 13086                           
 13087                           ;Bluetooth.c: 937: else
 13088                           ;Bluetooth.c: 938: {
 13089                           ;Bluetooth.c: 939: UARTstringCRLN(SYNTAX_ERR);
 13090  0021AA  0E5B               	movlw	low _SYNTAX_ERR
 13091  0021AC  0100               	movlb	0	; () banked
 13092  0021AE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 13093  0021B0  0EF3               	movlw	high _SYNTAX_ERR
 13094  0021B2  0100               	movlb	0	; () banked
 13095  0021B4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13096  0021B6  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 13097                           
 13098                           ;Bluetooth.c: 940: UARTstringCRLN((unsigned char *)"Enter ??? for Command Menu");
 13099  0021BA  0EE9               	movlw	low STR_148
 13100  0021BC  0100               	movlb	0	; () banked
 13101  0021BE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 13102  0021C0  0EFB               	movlw	high STR_148
 13103  0021C2  0100               	movlb	0	; () banked
 13104  0021C4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13105  0021C6  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 13106                           
 13107                           ;Bluetooth.c: 941: UARTstring(CRLN);
 13108  0021CA  0EA7               	movlw	low _CRLN
 13109  0021CC  0100               	movlb	0	; () banked
 13110  0021CE  6F7D               	movwf	UARTstring@data& (0+255),b
 13111  0021D0  0EF3               	movlw	high _CRLN
 13112  0021D2  0100               	movlb	0	; () banked
 13113  0021D4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13114  0021D6  EC08  F047         	call	_UARTstring	;wreg free
 13115                           
 13116                           ;Bluetooth.c: 942: return 0;
 13117                           ;	Return value of _UseBluetooth is never used
 13118  0021DA  0012               	return	
 13119                           
 13120                           ;Bluetooth.c: 943: }
 13121                           ;Bluetooth.c: 945: return 0;
 13122                           ;	Return value of _UseBluetooth is never used
 13123  0021DC  0012               	return		;funcret
 13124  0021DE                     __end_of_UseBluetooth:
 13125                           	opt stack 0
 13126                           tblptru	equ	0xFF8
 13127                           tblptrh	equ	0xFF7
 13128                           tblptrl	equ	0xFF6
 13129                           tablat	equ	0xFF5
 13130                           prodh	equ	0xFF4
 13131                           prodl	equ	0xFF3
 13132                           intcon	equ	0xFF2
 13133                           postinc0	equ	0xFEE
 13134                           wreg	equ	0xFE8
 13135                           postdec1	equ	0xFE5
 13136                           fsr1h	equ	0xFE2
 13137                           fsr1l	equ	0xFE1
 13138                           indf2	equ	0xFDF
 13139                           postinc2	equ	0xFDE
 13140                           fsr2h	equ	0xFDA
 13141                           fsr2l	equ	0xFD9
 13142                           status	equ	0xFD8
 13143                           
 13144 ;; *************** function _lowercaseString *****************
 13145 ;; Defined at:
 13146 ;;		line 332 in file "MISC.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;  Input           2   28[BANK0 ] PTR unsigned char 
 13149 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;		None
 13152 ;; Return value:  Size  Location     Type
 13153 ;;		None               void
 13154 ;; Registers used:
 13155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13161 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;Total ram usage:        3 bytes
 13166 ;; Hardware stack levels used:    1
 13167 ;; Hardware stack levels required when called:    6
 13168 ;; This function calls:
 13169 ;;		Nothing
 13170 ;; This function is called by:
 13171 ;;		_UseBluetooth
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text6
 13176  0090E6                     __ptext6:
 13177                           	opt stack 0
 13178  0090E6                     _lowercaseString:
 13179                           	opt stack 23
 13180                           
 13181                           ;MISC.c: 334: while((*Input != 0))
 13182                           
 13183                           ;incstack = 0
 13184  0090E6  D019               	goto	l14649
 13185  0090E8                     l14641:
 13186                           
 13187                           ;MISC.c: 335: {
 13188                           ;MISC.c: 336: if((*Input >= 65) && (*Input <= 90 ))
 13189  0090E8  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13190  0090EC  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13191  0090F0  0E40               	movlw	64
 13192  0090F2  64DF               	cpfsgt	indf2,c
 13193  0090F4  D00E               	goto	l14647
 13194  0090F6  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13195  0090FA  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13196  0090FE  0E5B               	movlw	91
 13197  009100  60DF               	cpfslt	indf2,c
 13198  009102  D007               	goto	l14647
 13199                           
 13200                           ;MISC.c: 337: {
 13201                           ;MISC.c: 338: *Input += 32;
 13202  009104  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13203  009108  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13204  00910C  0E20               	movlw	32
 13205  00910E  26DF               	addwf	indf2,f,c
 13206  009110  D000               	goto	l14647
 13207  009112                     l14647:
 13208                           
 13209                           ;MISC.c: 339: }
 13210                           ;MISC.c: 340: Input++;
 13211  009112  0100               	movlb	0	; () banked
 13212  009114  4B7C               	infsnz	lowercaseString@Input& (0+255),f,b
 13213  009116  2B7D               	incf	(lowercaseString@Input+1)& (0+255),f,b
 13214  009118  D000               	goto	l14649
 13215  00911A                     l14649:
 13216  00911A  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13217  00911E  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13218  009122  50DF               	movf	indf2,w,c
 13219  009124  A4D8               	btfss	status,2,c
 13220  009126  D7E0               	goto	l14641
 13221  009128  0012               	return		;funcret
 13222  00912A                     __end_of_lowercaseString:
 13223                           	opt stack 0
 13224                           tblptru	equ	0xFF8
 13225                           tblptrh	equ	0xFF7
 13226                           tblptrl	equ	0xFF6
 13227                           tablat	equ	0xFF5
 13228                           prodh	equ	0xFF4
 13229                           prodl	equ	0xFF3
 13230                           intcon	equ	0xFF2
 13231                           postinc0	equ	0xFEE
 13232                           wreg	equ	0xFE8
 13233                           postdec1	equ	0xFE5
 13234                           fsr1h	equ	0xFE2
 13235                           fsr1l	equ	0xFE1
 13236                           indf2	equ	0xFDF
 13237                           postinc2	equ	0xFDE
 13238                           fsr2h	equ	0xFDA
 13239                           fsr2l	equ	0xFD9
 13240                           status	equ	0xFD8
 13241                           
 13242 ;; *************** function _WaitForIRsignal *****************
 13243 ;; Defined at:
 13244 ;;		line 953 in file "Bluetooth.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;		None
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;  timeout         1   37[BANK0 ] unsigned char 
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      unsigned char 
 13251 ;; Registers used:
 13252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;Total ram usage:        1 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    9
 13265 ;; This function calls:
 13266 ;;		_LEDTimerON
 13267 ;;		_UARTchar
 13268 ;;		_UARTstring
 13269 ;;		_UARTstringCRLN
 13270 ;;		_delayUS
 13271 ;; This function is called by:
 13272 ;;		_UseBluetooth
 13273 ;; This function uses a non-reentrant model
 13274 ;;
 13275                           
 13276                           	psect	text7
 13277  00875C                     __ptext7:
 13278                           	opt stack 0
 13279  00875C                     _WaitForIRsignal:
 13280                           	opt stack 20
 13281                           
 13282                           ;Bluetooth.c: 955: unsigned char timeout = 0;
 13283                           
 13284                           ;incstack = 0
 13285  00875C  0E00               	movlw	0
 13286  00875E  0100               	movlb	0	; () banked
 13287  008760  6F85               	movwf	WaitForIRsignal@timeout& (0+255),b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;Bluetooth.c: 957: UARTstring(CRLN);
 13291  008762  0EA7               	movlw	low _CRLN
 13292  008764  0100               	movlb	0	; () banked
 13293  008766  6F7D               	movwf	UARTstring@data& (0+255),b
 13294  008768  0EF3               	movlw	high _CRLN
 13295  00876A  0100               	movlb	0	; () banked
 13296  00876C  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13297  00876E  EC08  F047         	call	_UARTstring	;wreg free
 13298                           
 13299                           ;Bluetooth.c: 958: UARTstring((unsigned char *)"Press Remote Control button");
 13300  008772  0EB2               	movlw	low STR_149
 13301  008774  0100               	movlb	0	; () banked
 13302  008776  6F7D               	movwf	UARTstring@data& (0+255),b
 13303  008778  0EFB               	movlw	high STR_149
 13304  00877A  0100               	movlb	0	; () banked
 13305  00877C  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13306  00877E  EC08  F047         	call	_UARTstring	;wreg free
 13307                           
 13308                           ;Bluetooth.c: 959: timeout = 0;
 13309  008782  0E00               	movlw	0
 13310  008784  0100               	movlb	0	; () banked
 13311  008786  6F85               	movwf	WaitForIRsignal@timeout& (0+255),b
 13312                           
 13313                           ;Bluetooth.c: 960: while(IR_New_Code != 1)
 13314  008788  D027               	goto	l15173
 13315  00878A                     l15159:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;Bluetooth.c: 961: {
 13319                           ;Bluetooth.c: 962: UARTchar('.');
 13320  00878A  0E2E               	movlw	46
 13321  00878C  ECF4  F049         	call	_UARTchar
 13322                           
 13323                           ;Bluetooth.c: 963: delayUS(300000);
 13324  008790  0EE0               	movlw	224
 13325  008792  0100               	movlb	0	; () banked
 13326  008794  6F7C               	movwf	delayUS@US& (0+255),b
 13327  008796  0E93               	movlw	147
 13328  008798  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 13329  00879A  0E04               	movlw	4
 13330  00879C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 13331  00879E  0E00               	movlw	0
 13332  0087A0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 13333  0087A2  EC8C  F047         	call	_delayUS	;wreg free
 13334                           
 13335                           ;Bluetooth.c: 964: timeout++;
 13336  0087A6  0100               	movlb	0	; () banked
 13337  0087A8  2B85               	incf	WaitForIRsignal@timeout& (0+255),f,b
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;Bluetooth.c: 965: if(timeout > 25)
 13341  0087AA  0E19               	movlw	25
 13342  0087AC  0100               	movlb	0	; () banked
 13343  0087AE  6585               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 13344  0087B0  D013               	goto	l15173
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;Bluetooth.c: 966: {
 13348                           ;Bluetooth.c: 967: UARTstring(CRLN);
 13349  0087B2  0EA7               	movlw	low _CRLN
 13350  0087B4  0100               	movlb	0	; () banked
 13351  0087B6  6F7D               	movwf	UARTstring@data& (0+255),b
 13352  0087B8  0EF3               	movlw	high _CRLN
 13353  0087BA  0100               	movlb	0	; () banked
 13354  0087BC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13355  0087BE  EC08  F047         	call	_UARTstring	;wreg free
 13356                           
 13357                           ;Bluetooth.c: 968: UARTstringCRLN((unsigned char *)"Error: No remote button was pressed"
      +                          );
 13358  0087C2  0EC3               	movlw	low STR_150
 13359  0087C4  0100               	movlb	0	; () banked
 13360  0087C6  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 13361  0087C8  0EF8               	movlw	high STR_150
 13362  0087CA  0100               	movlb	0	; () banked
 13363  0087CC  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13364  0087CE  ECAD  F045         	call	_UARTstringCRLN	;wreg free
 13365                           
 13366                           ;Bluetooth.c: 969: return 0;
 13367  0087D2  0E00               	movlw	0
 13368  0087D4  0012               	return	
 13369  0087D6  D000               	goto	l15173
 13370  0087D8                     l15173:
 13371  0087D8  0100               	movlb	0	; () banked
 13372  0087DA  05E1               	decf	_IR_New_Code& (0+255),w,b
 13373  0087DC  A4D8               	btfss	status,2,c
 13374  0087DE  D7D5               	goto	l15159
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;Bluetooth.c: 970: }
 13378                           ;Bluetooth.c: 971: }
 13379                           ;Bluetooth.c: 972: (LATC |= 0x04);
 13380                           
 13381                           ; BSR set to: 0
 13382  0087E0  848B               	bsf	3979,2,c	;volatile
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;Bluetooth.c: 973: LEDTimerON();
 13386  0087E2  EC6A  F04A         	call	_LEDTimerON	;wreg free
 13387                           
 13388                           ;Bluetooth.c: 974: return 1;
 13389  0087E6  0E01               	movlw	1
 13390  0087E8  0012               	return	
 13391  0087EA  0012               	return		;funcret
 13392  0087EC                     __end_of_WaitForIRsignal:
 13393                           	opt stack 0
 13394                           tblptru	equ	0xFF8
 13395                           tblptrh	equ	0xFF7
 13396                           tblptrl	equ	0xFF6
 13397                           tablat	equ	0xFF5
 13398                           prodh	equ	0xFF4
 13399                           prodl	equ	0xFF3
 13400                           intcon	equ	0xFF2
 13401                           postinc0	equ	0xFEE
 13402                           wreg	equ	0xFE8
 13403                           postdec1	equ	0xFE5
 13404                           fsr1h	equ	0xFE2
 13405                           fsr1l	equ	0xFE1
 13406                           indf2	equ	0xFDF
 13407                           postinc2	equ	0xFDE
 13408                           fsr2h	equ	0xFDA
 13409                           fsr2l	equ	0xFD9
 13410                           status	equ	0xFD8
 13411                           
 13412 ;; *************** function _UARTstringCRLN *****************
 13413 ;; Defined at:
 13414 ;;		line 262 in file "UART.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;  data            2   31[BANK0 ] PTR unsigned char 
 13417 ;;		 -> STR_150(36), STR_148(27), STR_134(13), STR_103(13), 
 13418 ;;		 -> STR_100(21), STR_93(17), STR_90(5), STR_82(29), 
 13419 ;;		 -> STR_81(18), STR_80(29), STR_77(44), STR_72(46), 
 13420 ;;		 -> STR_71(42), STR_70(50), STR_69(50), STR_67(31), 
 13421 ;;		 -> STR_66(31), STR_65(37), STR_64(37), STR_63(37), 
 13422 ;;		 -> STR_59(18), STR_58(14), STR_57(9), STR_56(20), 
 13423 ;;		 -> STR_55(16), STR_54(7), STR_53(35), STR_52(37), 
 13424 ;;		 -> STR_49(47), STR_44(17), STR_43(9), STR_42(18), 
 13425 ;;		 -> STR_41(9), STR_40(22), STR_39(11), STR_38(20), 
 13426 ;;		 -> STR_37(7), STR_36(31), STR_34(33), STR_30(32), 
 13427 ;;		 -> STR_26(31), STR_25(31), STR_23(29), STR_21(29), 
 13428 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_1(16), ProjectName(26), 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;		None               void
 13433 ;; Registers used:
 13434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13444 ;;Total ram usage:        2 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:    8
 13447 ;; This function calls:
 13448 ;;		_UARTchar
 13449 ;;		_UARTstring
 13450 ;; This function is called by:
 13451 ;;		_main
 13452 ;;		_UseBluetooth
 13453 ;;		_WaitForIRsignal
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           	psect	text8
 13458  008B5A                     __ptext8:
 13459                           	opt stack 0
 13460  008B5A                     _UARTstringCRLN:
 13461                           	opt stack 20
 13462                           
 13463                           ;UART.c: 264: while(*data != 0)
 13464                           
 13465                           ;incstack = 0
 13466  008B5A  D017               	goto	l13807
 13467  008B5C                     l13803:
 13468                           
 13469                           ;UART.c: 265: {
 13470                           ;UART.c: 266: UARTchar(*data);
 13471  008B5C  C07F  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13472  008B60  C080  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13473  008B64  0E00               	movlw	low (__mediumconst shr (0+16))
 13474  008B66  6EF8               	movwf	tblptru,c
 13475  008B68  0E0F               	movlw	(high __ramtop+-1)
 13476  008B6A  64F7               	cpfsgt	tblptrh,c
 13477  008B6C  D003               	bra	u16927
 13478  008B6E  0008               	tblrd		*
 13479  008B70  50F5               	movf	tablat,w,c
 13480  008B72  D005               	bra	u16920
 13481  008B74                     u16927:
 13482  008B74  CFF6 FFE9          	movff	tblptrl,fsr0l
 13483  008B78  CFF7 FFEA          	movff	tblptrh,fsr0h
 13484  008B7C  50EF               	movf	indf0,w,c
 13485  008B7E                     u16920:
 13486  008B7E  ECF4  F049         	call	_UARTchar
 13487                           
 13488                           ;UART.c: 267: *data++;
 13489  008B82  0100               	movlb	0	; () banked
 13490  008B84  4B7F               	infsnz	UARTstringCRLN@data& (0+255),f,b
 13491  008B86  2B80               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 13492  008B88  D000               	goto	l13807
 13493  008B8A                     l13807:
 13494  008B8A  C07F  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13495  008B8E  C080  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13496  008B92  0E00               	movlw	low (__mediumconst shr (0+16))
 13497  008B94  6EF8               	movwf	tblptru,c
 13498  008B96  0E0F               	movlw	(high __ramtop+-1)
 13499  008B98  64F7               	cpfsgt	tblptrh,c
 13500  008B9A  D003               	bra	u16937
 13501  008B9C  0008               	tblrd		*
 13502  008B9E  50F5               	movf	tablat,w,c
 13503  008BA0  D005               	bra	u16930
 13504  008BA2                     u16937:
 13505  008BA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13506  008BA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13507  008BAA  50EF               	movf	indf0,w,c
 13508  008BAC                     u16930:
 13509  008BAC  0900               	iorlw	0
 13510  008BAE  A4D8               	btfss	status,2,c
 13511  008BB0  D7D5               	goto	l13803
 13512                           
 13513                           ;UART.c: 268: }
 13514                           ;UART.c: 269: UARTstring(CRLN);
 13515  008BB2  0EA7               	movlw	low _CRLN
 13516  008BB4  0100               	movlb	0	; () banked
 13517  008BB6  6F7D               	movwf	UARTstring@data& (0+255),b
 13518  008BB8  0EF3               	movlw	high _CRLN
 13519  008BBA  0100               	movlb	0	; () banked
 13520  008BBC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13521  008BBE  EC08  F047         	call	_UARTstring	;wreg free
 13522  008BC2  0012               	return		;funcret
 13523  008BC4                     __end_of_UARTstringCRLN:
 13524                           	opt stack 0
 13525                           tblptru	equ	0xFF8
 13526                           tblptrh	equ	0xFF7
 13527                           tblptrl	equ	0xFF6
 13528                           tablat	equ	0xFF5
 13529                           prodh	equ	0xFF4
 13530                           prodl	equ	0xFF3
 13531                           intcon	equ	0xFF2
 13532                           indf0	equ	0xFEF
 13533                           postinc0	equ	0xFEE
 13534                           fsr0h	equ	0xFEA
 13535                           fsr0l	equ	0xFE9
 13536                           wreg	equ	0xFE8
 13537                           postdec1	equ	0xFE5
 13538                           fsr1h	equ	0xFE2
 13539                           fsr1l	equ	0xFE1
 13540                           indf2	equ	0xFDF
 13541                           postinc2	equ	0xFDE
 13542                           fsr2h	equ	0xFDA
 13543                           fsr2l	equ	0xFD9
 13544                           status	equ	0xFD8
 13545                           
 13546 ;; *************** function _UARTcommandMenu *****************
 13547 ;; Defined at:
 13548 ;;		line 277 in file "UART.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  Command         2   31[BANK0 ] PTR unsigned char 
 13551 ;;		 -> STR_132(5), STR_130(13), STR_128(13), STR_126(13), 
 13552 ;;		 -> STR_124(13), STR_122(13), STR_120(13), STR_118(11), 
 13553 ;;		 -> STR_116(11), STR_114(11), STR_112(11), STR_110(11), 
 13554 ;;		 -> STR_108(11), STR_101(8), STR_98(8), STR_96(6), 
 13555 ;;		 -> STR_94(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 13556 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 13557 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 13558 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 13559 ;;  Desc            2   33[BANK0 ] PTR unsigned char 
 13560 ;;		 -> STR_147(32), STR_146(31), STR_145(32), STR_144(31), 
 13561 ;;		 -> STR_143(32), STR_142(31), STR_141(20), STR_140(19), 
 13562 ;;		 -> STR_139(23), STR_138(22), STR_137(19), STR_136(19), 
 13563 ;;		 -> STR_135(19), STR_133(40), STR_131(46), STR_129(46), 
 13564 ;;		 -> STR_127(46), STR_125(46), STR_123(46), STR_121(46), 
 13565 ;;		 -> STR_119(49), STR_117(49), STR_115(49), STR_113(49), 
 13566 ;;		 -> STR_111(49), STR_109(49), STR_107(24), STR_105(25), 
 13567 ;;		 -> STR_102(28), STR_99(35), STR_97(32), STR_95(10), 
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;  place           1   41[BANK0 ] unsigned char 
 13570 ;;  i               1   40[BANK0 ] unsigned char 
 13571 ;; Return value:  Size  Location     Type
 13572 ;;		None               void
 13573 ;; Registers used:
 13574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13575 ;; Tracked objects:
 13576 ;;		On entry : 0/0
 13577 ;;		On exit  : 0/0
 13578 ;;		Unchanged: 0/0
 13579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13580 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13583 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13584 ;;Total ram usage:       11 bytes
 13585 ;; Hardware stack levels used:    1
 13586 ;; Hardware stack levels required when called:    8
 13587 ;; This function calls:
 13588 ;;		_UARTchar
 13589 ;;		_UARTstring
 13590 ;; This function is called by:
 13591 ;;		_UseBluetooth
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text9
 13596  007798                     __ptext9:
 13597                           	opt stack 0
 13598  007798                     _UARTcommandMenu:
 13599                           	opt stack 21
 13600                           
 13601                           ;UART.c: 279: unsigned char place = 0;
 13602                           
 13603                           ;incstack = 0
 13604  007798  0E00               	movlw	0
 13605  00779A  0100               	movlb	0	; () banked
 13606  00779C  6F89               	movwf	UARTcommandMenu@place& (0+255),b
 13607                           
 13608                           ;UART.c: 280: unsigned char i;
 13609                           ;UART.c: 282: while((*Command != 0) && (place < 30))
 13610  00779E  D019               	goto	l14961
 13611  0077A0                     l14955:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;UART.c: 283: {
 13615                           ;UART.c: 284: UARTchar(*Command);
 13616  0077A0  C07F  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13617  0077A4  C080  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13618  0077A8  0E00               	movlw	low (__mediumconst shr (0+16))
 13619  0077AA  6EF8               	movwf	tblptru,c
 13620  0077AC  0E0F               	movlw	(high __ramtop+-1)
 13621  0077AE  64F7               	cpfsgt	tblptrh,c
 13622  0077B0  D003               	bra	u18647
 13623  0077B2  0008               	tblrd		*
 13624  0077B4  50F5               	movf	tablat,w,c
 13625  0077B6  D005               	bra	u18640
 13626  0077B8                     u18647:
 13627  0077B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13628  0077BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13629  0077C0  50EF               	movf	indf0,w,c
 13630  0077C2                     u18640:
 13631  0077C2  ECF4  F049         	call	_UARTchar
 13632                           
 13633                           ;UART.c: 285: *Command++;
 13634  0077C6  0100               	movlb	0	; () banked
 13635  0077C8  4B7F               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 13636  0077CA  2B80               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;UART.c: 286: place++;
 13640  0077CC  0100               	movlb	0	; () banked
 13641  0077CE  2B89               	incf	UARTcommandMenu@place& (0+255),f,b
 13642  0077D0  D000               	goto	l14961
 13643  0077D2                     l14961:
 13644                           
 13645                           ; BSR set to: 0
 13646  0077D2  C07F  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13647  0077D6  C080  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13648  0077DA  0E00               	movlw	low (__mediumconst shr (0+16))
 13649  0077DC  6EF8               	movwf	tblptru,c
 13650  0077DE  0E0F               	movlw	(high __ramtop+-1)
 13651  0077E0  64F7               	cpfsgt	tblptrh,c
 13652  0077E2  D003               	bra	u18657
 13653  0077E4  0008               	tblrd		*
 13654  0077E6  50F5               	movf	tablat,w,c
 13655  0077E8  D005               	bra	u18650
 13656  0077EA                     u18657:
 13657  0077EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13658  0077EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13659  0077F2  50EF               	movf	indf0,w,c
 13660  0077F4                     u18650:
 13661  0077F4  0900               	iorlw	0
 13662  0077F6  B4D8               	btfsc	status,2,c
 13663  0077F8  D005               	goto	l14965
 13664  0077FA  0E1D               	movlw	29
 13665  0077FC  0100               	movlb	0	; () banked
 13666  0077FE  6589               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13667  007800  D7CF               	goto	l14955
 13668                           
 13669                           ; BSR set to: 0
 13670  007802  D000               	goto	l14965
 13671  007804                     l14965:
 13672                           
 13673                           ;UART.c: 287: }
 13674                           ;UART.c: 288: for(i =0; i < ((30 - place) + 1); i++)
 13675  007804  0E00               	movlw	0
 13676  007806  0100               	movlb	0	; () banked
 13677  007808  6F88               	movwf	UARTcommandMenu@i& (0+255),b
 13678  00780A  D006               	goto	l14971
 13679  00780C                     l14967:
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;UART.c: 289: {
 13683                           ;UART.c: 290: UARTchar('-');
 13684  00780C  0E2D               	movlw	45
 13685  00780E  ECF4  F049         	call	_UARTchar
 13686  007812  0100               	movlb	0	; () banked
 13687  007814  2B88               	incf	UARTcommandMenu@i& (0+255),f,b
 13688  007816  D000               	goto	l14971
 13689  007818                     l14971:
 13690                           
 13691                           ; BSR set to: 0
 13692  007818  0100               	movlb	0	; () banked
 13693  00781A  5189               	movf	UARTcommandMenu@place& (0+255),w,b
 13694  00781C  0100               	movlb	0	; () banked
 13695  00781E  6F83               	movwf	??_UARTcommandMenu& (0+255),b
 13696  007820  6B84               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 13697  007822  0100               	movlb	0	; () banked
 13698  007824  1F83               	comf	??_UARTcommandMenu& (0+255),f,b
 13699  007826  1F84               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 13700  007828  4B83               	infsnz	??_UARTcommandMenu& (0+255),f,b
 13701  00782A  2B84               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 13702  00782C  0E1F               	movlw	31
 13703  00782E  0100               	movlb	0	; () banked
 13704  007830  2783               	addwf	??_UARTcommandMenu& (0+255),f,b
 13705  007832  0E00               	movlw	0
 13706  007834  2384               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 13707  007836  0100               	movlb	0	; () banked
 13708  007838  5188               	movf	UARTcommandMenu@i& (0+255),w,b
 13709  00783A  0100               	movlb	0	; () banked
 13710  00783C  6F85               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 13711  00783E  6B86               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 13712  007840  0100               	movlb	0	; () banked
 13713  007842  5183               	movf	??_UARTcommandMenu& (0+255),w,b
 13714  007844  0100               	movlb	0	; () banked
 13715  007846  5D85               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 13716  007848  0100               	movlb	0	; () banked
 13717  00784A  5186               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 13718  00784C  0A80               	xorlw	128
 13719  00784E  0100               	movlb	0	; () banked
 13720  007850  6F87               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 13721  007852  0100               	movlb	0	; () banked
 13722  007854  5184               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 13723  007856  0A80               	xorlw	128
 13724  007858  0100               	movlb	0	; () banked
 13725  00785A  5987               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 13726  00785C  A0D8               	btfss	status,0,c
 13727  00785E  D7D6               	goto	l14967
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;UART.c: 291: }
 13731                           ;UART.c: 292: place = 0;
 13732                           
 13733                           ; BSR set to: 0
 13734  007860  0E00               	movlw	0
 13735  007862  0100               	movlb	0	; () banked
 13736  007864  6F89               	movwf	UARTcommandMenu@place& (0+255),b
 13737                           
 13738                           ;UART.c: 293: while((*Desc != 0) && (place < (50 - 1)))
 13739  007866  D00F               	goto	l14981
 13740  007868                     l14975:
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;UART.c: 294: {
 13744                           ;UART.c: 295: UARTchar(*Desc);
 13745  007868  C081  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13746  00786C  C082  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13747  007870                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13748  007870  6AF8               	clrf	tblptru,c
 13749  007872                     	endif
 13750  007872                     	if	0	;tblptru may be non-zero
 13751  007872                     	endif
 13752  007872  0008               	tblrd		*
 13753  007874  50F5               	movf	tablat,w,c
 13754  007876  ECF4  F049         	call	_UARTchar
 13755                           
 13756                           ;UART.c: 296: *Desc++;
 13757  00787A  0100               	movlb	0	; () banked
 13758  00787C  4B81               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 13759  00787E  2B82               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;UART.c: 297: place++;
 13763  007880  0100               	movlb	0	; () banked
 13764  007882  2B89               	incf	UARTcommandMenu@place& (0+255),f,b
 13765  007884  D000               	goto	l14981
 13766  007886                     l14981:
 13767                           
 13768                           ; BSR set to: 0
 13769  007886  C081  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13770  00788A  C082  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13771  00788E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13772  00788E  6AF8               	clrf	tblptru,c
 13773  007890                     	endif
 13774  007890                     	if	0	;tblptru may be non-zero
 13775  007890                     	endif
 13776  007890  0008               	tblrd		*
 13777  007892  50F5               	movf	tablat,w,c
 13778  007894  0900               	iorlw	0
 13779  007896  B4D8               	btfsc	status,2,c
 13780  007898  D005               	goto	l14985
 13781                           
 13782                           ; BSR set to: 0
 13783  00789A  0E30               	movlw	48
 13784  00789C  0100               	movlb	0	; () banked
 13785  00789E  6589               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13786  0078A0  D7E3               	goto	l14975
 13787                           
 13788                           ; BSR set to: 0
 13789  0078A2  D000               	goto	l14985
 13790  0078A4                     l14985:
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;UART.c: 298: }
 13794                           ;UART.c: 299: UARTstring(CRLN);
 13795  0078A4  0EA7               	movlw	low _CRLN
 13796  0078A6  0100               	movlb	0	; () banked
 13797  0078A8  6F7D               	movwf	UARTstring@data& (0+255),b
 13798  0078AA  0EF3               	movlw	high _CRLN
 13799  0078AC  0100               	movlb	0	; () banked
 13800  0078AE  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13801  0078B0  EC08  F047         	call	_UARTstring	;wreg free
 13802  0078B4  0012               	return		;funcret
 13803  0078B6                     __end_of_UARTcommandMenu:
 13804                           	opt stack 0
 13805                           tblptru	equ	0xFF8
 13806                           tblptrh	equ	0xFF7
 13807                           tblptrl	equ	0xFF6
 13808                           tablat	equ	0xFF5
 13809                           prodh	equ	0xFF4
 13810                           prodl	equ	0xFF3
 13811                           intcon	equ	0xFF2
 13812                           indf0	equ	0xFEF
 13813                           postinc0	equ	0xFEE
 13814                           fsr0h	equ	0xFEA
 13815                           fsr0l	equ	0xFE9
 13816                           wreg	equ	0xFE8
 13817                           postdec1	equ	0xFE5
 13818                           fsr1h	equ	0xFE2
 13819                           fsr1l	equ	0xFE1
 13820                           indf2	equ	0xFDF
 13821                           postinc2	equ	0xFDE
 13822                           fsr2h	equ	0xFDA
 13823                           fsr2l	equ	0xFD9
 13824                           status	equ	0xFD8
 13825                           
 13826 ;; *************** function _StringMatchCaseInsensitive *****************
 13827 ;; Defined at:
 13828 ;;		line 217 in file "MISC.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;  This            2   31[BANK0 ] PTR unsigned char 
 13831 ;;		 -> main@BluetoothString(255), 
 13832 ;;  That            2   33[BANK0 ] PTR const unsigned char 
 13833 ;;		 -> STR_85(8), STR_83(8), STR_78(6), Conf2_ChannelH_3_OFF_STR(21), 
 13834 ;;		 -> Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR
      +(21), 
 13835 ;;		 -> Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), 
 13836 ;;		 -> Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 13837 ;; Auto vars:     Size  Location     Type
 13838 ;;  tempThat        1   36[BANK0 ] unsigned char 
 13839 ;;  tempThis        1   35[BANK0 ] unsigned char 
 13840 ;; Return value:  Size  Location     Type
 13841 ;;                  1    wreg      unsigned char 
 13842 ;; Registers used:
 13843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13844 ;; Tracked objects:
 13845 ;;		On entry : 0/0
 13846 ;;		On exit  : 0/0
 13847 ;;		Unchanged: 0/0
 13848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;Total ram usage:        6 bytes
 13854 ;; Hardware stack levels used:    1
 13855 ;; Hardware stack levels required when called:    7
 13856 ;; This function calls:
 13857 ;;		_lowercaseChar
 13858 ;; This function is called by:
 13859 ;;		_UseBluetooth
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863                           	psect	text10
 13864  0086C8                     __ptext10:
 13865                           	opt stack 0
 13866  0086C8                     _StringMatchCaseInsensitive:
 13867                           	opt stack 22
 13868                           
 13869                           ;MISC.c: 219: unsigned char tempThis,
 13870                           ;MISC.c: 220: tempThat;
 13871                           ;MISC.c: 222: while(*This != 0)
 13872                           
 13873                           ;incstack = 0
 13874  0086C8  D033               	goto	l14585
 13875  0086CA                     l14567:
 13876                           
 13877                           ;MISC.c: 223: {
 13878                           ;MISC.c: 224: tempThis = *This;
 13879  0086CA  C07F  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13880  0086CE  C080  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13881  0086D2  50DF               	movf	indf2,w,c
 13882  0086D4  0100               	movlb	0	; () banked
 13883  0086D6  6F83               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;MISC.c: 225: tempThat = *That;
 13887  0086D8  C081  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13888  0086DC  C082  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13889  0086E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13890  0086E0  6AF8               	clrf	tblptru,c
 13891  0086E2                     	endif
 13892  0086E2                     	if	0	;tblptru may be non-zero
 13893  0086E2                     	endif
 13894  0086E2  0008               	tblrd		*
 13895  0086E4  CFF5 F084          	movff	tablat,StringMatchCaseInsensitive@tempThat
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;MISC.c: 226: lowercaseChar(&tempThis);
 13899  0086E8  0E83               	movlw	low StringMatchCaseInsensitive@tempThis
 13900  0086EA  0100               	movlb	0	; () banked
 13901  0086EC  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 13902  0086EE  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 13903  0086F0  0100               	movlb	0	; () banked
 13904  0086F2  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13905  0086F4  ECA6  F049         	call	_lowercaseChar	;wreg free
 13906                           
 13907                           ;MISC.c: 227: lowercaseChar(&tempThat);
 13908  0086F8  0E84               	movlw	low StringMatchCaseInsensitive@tempThat
 13909  0086FA  0100               	movlb	0	; () banked
 13910  0086FC  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 13911  0086FE  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 13912  008700  0100               	movlb	0	; () banked
 13913  008702  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13914  008704  ECA6  F049         	call	_lowercaseChar	;wreg free
 13915                           
 13916                           ;MISC.c: 229: if((tempThis != tempThat) || (tempThat == 0))
 13917  008708  0100               	movlb	0	; () banked
 13918  00870A  5184               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13919  00870C  0100               	movlb	0	; () banked
 13920  00870E  1983               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 13921  008710  A4D8               	btfss	status,2,c
 13922  008712  D005               	goto	l14579
 13923                           
 13924                           ; BSR set to: 0
 13925  008714  0100               	movlb	0	; () banked
 13926  008716  5184               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13927  008718  0100               	movlb	0	; () banked
 13928  00871A  A4D8               	btfss	status,2,c
 13929  00871C  D002               	goto	l14583
 13930  00871E                     l14579:
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;MISC.c: 230: {
 13934                           ;MISC.c: 231: return 0;
 13935  00871E  0E00               	movlw	0
 13936                           
 13937                           ; BSR set to: 0
 13938  008720  0012               	return	
 13939  008722                     l14583:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;MISC.c: 232: }
 13943                           ;MISC.c: 233: This++;
 13944  008722  0100               	movlb	0	; () banked
 13945  008724  4B7F               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 13946  008726  2B80               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 13947                           
 13948                           ;MISC.c: 234: That++;
 13949  008728  0100               	movlb	0	; () banked
 13950  00872A  4B81               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 13951  00872C  2B82               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 13952  00872E  D000               	goto	l14585
 13953  008730                     l14585:
 13954  008730  C07F  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13955  008734  C080  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13956  008738  50DF               	movf	indf2,w,c
 13957  00873A  A4D8               	btfss	status,2,c
 13958  00873C  D7C6               	goto	l14567
 13959                           
 13960                           ;MISC.c: 235: }
 13961                           ;MISC.c: 236: if(*That == 0)
 13962  00873E  C081  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13963  008742  C082  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13964  008746                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13965  008746  6AF8               	clrf	tblptru,c
 13966  008748                     	endif
 13967  008748                     	if	0	;tblptru may be non-zero
 13968  008748                     	endif
 13969  008748  0008               	tblrd		*
 13970  00874A  50F5               	movf	tablat,w,c
 13971  00874C  0900               	iorlw	0
 13972  00874E  A4D8               	btfss	status,2,c
 13973  008750  D002               	goto	l14595
 13974                           
 13975                           ;MISC.c: 237: {
 13976                           ;MISC.c: 238: return 1;
 13977  008752  0E01               	movlw	1
 13978                           
 13979                           ;MISC.c: 239: }
 13980  008754  0012               	return	
 13981  008756                     l14595:
 13982                           
 13983                           ;MISC.c: 240: else
 13984                           ;MISC.c: 241: {
 13985                           ;MISC.c: 242: return 0;
 13986  008756  0E00               	movlw	0
 13987  008758  0012               	return	
 13988  00875A  0012               	return		;funcret
 13989  00875C                     __end_of_StringMatchCaseInsensitive:
 13990                           	opt stack 0
 13991                           tblptru	equ	0xFF8
 13992                           tblptrh	equ	0xFF7
 13993                           tblptrl	equ	0xFF6
 13994                           tablat	equ	0xFF5
 13995                           prodh	equ	0xFF4
 13996                           prodl	equ	0xFF3
 13997                           intcon	equ	0xFF2
 13998                           indf0	equ	0xFEF
 13999                           postinc0	equ	0xFEE
 14000                           fsr0h	equ	0xFEA
 14001                           fsr0l	equ	0xFE9
 14002                           wreg	equ	0xFE8
 14003                           postdec1	equ	0xFE5
 14004                           fsr1h	equ	0xFE2
 14005                           fsr1l	equ	0xFE1
 14006                           indf2	equ	0xFDF
 14007                           postinc2	equ	0xFDE
 14008                           fsr2h	equ	0xFDA
 14009                           fsr2l	equ	0xFD9
 14010                           status	equ	0xFD8
 14011                           
 14012 ;; *************** function _StringMatch *****************
 14013 ;; Defined at:
 14014 ;;		line 190 in file "MISC.c"
 14015 ;; Parameters:    Size  Location     Type
 14016 ;;  This            2   28[BANK0 ] PTR unsigned char 
 14017 ;;		 -> main@BluetoothString(255), 
 14018 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 14019 ;;		 -> STR_91(4), 
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;		None
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  1    wreg      unsigned char 
 14024 ;; Registers used:
 14025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14034 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14035 ;;Total ram usage:        5 bytes
 14036 ;; Hardware stack levels used:    1
 14037 ;; Hardware stack levels required when called:    6
 14038 ;; This function calls:
 14039 ;;		Nothing
 14040 ;; This function is called by:
 14041 ;;		_UseBluetooth
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text11
 14046  008A72                     __ptext11:
 14047                           	opt stack 0
 14048  008A72                     _StringMatch:
 14049                           	opt stack 23
 14050                           
 14051                           ;MISC.c: 192: while(*This != 0)
 14052                           
 14053                           ;incstack = 0
 14054  008A72  D025               	goto	l14551
 14055  008A74                     l14541:
 14056                           
 14057                           ;MISC.c: 193: {
 14058                           ;MISC.c: 194: if(*This != *That || *That == 0)
 14059  008A74  C07C  FFD9         	movff	StringMatch@This,fsr2l
 14060  008A78  C07D  FFDA         	movff	StringMatch@This+1,fsr2h
 14061  008A7C  50DF               	movf	indf2,w,c
 14062  008A7E  0100               	movlb	0	; () banked
 14063  008A80  6F80               	movwf	??_StringMatch& (0+255),b
 14064  008A82  C07E  FFF6         	movff	StringMatch@That,tblptrl
 14065  008A86  C07F  FFF7         	movff	StringMatch@That+1,tblptrh
 14066  008A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14067  008A8A  6AF8               	clrf	tblptru,c
 14068  008A8C                     	endif
 14069  008A8C                     	if	0	;tblptru may be non-zero
 14070  008A8C                     	endif
 14071  008A8C  0008               	tblrd		*
 14072  008A8E  50F5               	movf	tablat,w,c
 14073  008A90  0100               	movlb	0	; () banked
 14074  008A92  1980               	xorwf	??_StringMatch& (0+255),w,b
 14075  008A94  A4D8               	btfss	status,2,c
 14076  008A96  D00A               	goto	l14545
 14077                           
 14078                           ; BSR set to: 0
 14079  008A98  C07E  FFF6         	movff	StringMatch@That,tblptrl
 14080  008A9C  C07F  FFF7         	movff	StringMatch@That+1,tblptrh
 14081  008AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14082  008AA0  6AF8               	clrf	tblptru,c
 14083  008AA2                     	endif
 14084  008AA2                     	if	0	;tblptru may be non-zero
 14085  008AA2                     	endif
 14086  008AA2  0008               	tblrd		*
 14087  008AA4  50F5               	movf	tablat,w,c
 14088  008AA6  0900               	iorlw	0
 14089  008AA8  A4D8               	btfss	status,2,c
 14090  008AAA  D002               	goto	l14549
 14091  008AAC                     l14545:
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;MISC.c: 195: {
 14095                           ;MISC.c: 196: return 0;
 14096  008AAC  0E00               	movlw	0
 14097                           
 14098                           ; BSR set to: 0
 14099  008AAE  0012               	return	
 14100  008AB0                     l14549:
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;MISC.c: 197: }
 14104                           ;MISC.c: 198: This++;
 14105  008AB0  0100               	movlb	0	; () banked
 14106  008AB2  4B7C               	infsnz	StringMatch@This& (0+255),f,b
 14107  008AB4  2B7D               	incf	(StringMatch@This+1)& (0+255),f,b
 14108                           
 14109                           ;MISC.c: 199: That++;
 14110  008AB6  0100               	movlb	0	; () banked
 14111  008AB8  4B7E               	infsnz	StringMatch@That& (0+255),f,b
 14112  008ABA  2B7F               	incf	(StringMatch@That+1)& (0+255),f,b
 14113  008ABC  D000               	goto	l14551
 14114  008ABE                     l14551:
 14115  008ABE  C07C  FFD9         	movff	StringMatch@This,fsr2l
 14116  008AC2  C07D  FFDA         	movff	StringMatch@This+1,fsr2h
 14117  008AC6  50DF               	movf	indf2,w,c
 14118  008AC8  A4D8               	btfss	status,2,c
 14119  008ACA  D7D4               	goto	l14541
 14120                           
 14121                           ;MISC.c: 200: }
 14122                           ;MISC.c: 201: if(*That == 0)
 14123  008ACC  C07E  FFF6         	movff	StringMatch@That,tblptrl
 14124  008AD0  C07F  FFF7         	movff	StringMatch@That+1,tblptrh
 14125  008AD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14126  008AD4  6AF8               	clrf	tblptru,c
 14127  008AD6                     	endif
 14128  008AD6                     	if	0	;tblptru may be non-zero
 14129  008AD6                     	endif
 14130  008AD6  0008               	tblrd		*
 14131  008AD8  50F5               	movf	tablat,w,c
 14132  008ADA  0900               	iorlw	0
 14133  008ADC  A4D8               	btfss	status,2,c
 14134  008ADE  D002               	goto	l14561
 14135                           
 14136                           ;MISC.c: 202: {
 14137                           ;MISC.c: 203: return 1;
 14138  008AE0  0E01               	movlw	1
 14139                           
 14140                           ;MISC.c: 204: }
 14141  008AE2  0012               	return	
 14142  008AE4                     l14561:
 14143                           
 14144                           ;MISC.c: 205: else
 14145                           ;MISC.c: 206: {
 14146                           ;MISC.c: 207: return 0;
 14147  008AE4  0E00               	movlw	0
 14148  008AE6  0012               	return	
 14149  008AE8  0012               	return		;funcret
 14150  008AEA                     __end_of_StringMatch:
 14151                           	opt stack 0
 14152                           tblptru	equ	0xFF8
 14153                           tblptrh	equ	0xFF7
 14154                           tblptrl	equ	0xFF6
 14155                           tablat	equ	0xFF5
 14156                           prodh	equ	0xFF4
 14157                           prodl	equ	0xFF3
 14158                           intcon	equ	0xFF2
 14159                           indf0	equ	0xFEF
 14160                           postinc0	equ	0xFEE
 14161                           fsr0h	equ	0xFEA
 14162                           fsr0l	equ	0xFE9
 14163                           wreg	equ	0xFE8
 14164                           postdec1	equ	0xFE5
 14165                           fsr1h	equ	0xFE2
 14166                           fsr1l	equ	0xFE1
 14167                           indf2	equ	0xFDF
 14168                           postinc2	equ	0xFDE
 14169                           fsr2h	equ	0xFDA
 14170                           fsr2l	equ	0xFD9
 14171                           status	equ	0xFD8
 14172                           
 14173 ;; *************** function _StringContainsCaseInsensitive *****************
 14174 ;; Defined at:
 14175 ;;		line 289 in file "MISC.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;  This            2   31[BANK0 ] PTR unsigned char 
 14178 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), main@BluetoothString(255), 
 14179 ;;  That            2   33[BANK0 ] PTR const unsigned char 
 14180 ;;		 -> STR_62(7), STR_61(9), STR_60(7), STR_46(4), 
 14181 ;;		 -> STR_45(13), STR_24(4), STR_22(6), STR_20(6), 
 14182 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;  tempThat        1   37[BANK0 ] unsigned char 
 14185 ;;  tempThis        1   36[BANK0 ] unsigned char 
 14186 ;;  begin           1   35[BANK0 ] unsigned char 
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      unsigned char 
 14189 ;; Registers used:
 14190 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14191 ;; Tracked objects:
 14192 ;;		On entry : 0/0
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14197 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14199 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14200 ;;Total ram usage:        7 bytes
 14201 ;; Hardware stack levels used:    1
 14202 ;; Hardware stack levels required when called:    7
 14203 ;; This function calls:
 14204 ;;		_lowercaseChar
 14205 ;; This function is called by:
 14206 ;;		_UseBluetooth
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           
 14210                           	psect	text12
 14211  007552                     __ptext12:
 14212                           	opt stack 0
 14213  007552                     _StringContainsCaseInsensitive:
 14214                           	opt stack 22
 14215                           
 14216                           ;MISC.c: 291: unsigned char tempThis,
 14217                           ;MISC.c: 292: tempThat;
 14218                           ;MISC.c: 293: unsigned char begin = 0;
 14219                           
 14220                           ;incstack = 0
 14221  007552  0E00               	movlw	0
 14222  007554  0100               	movlb	0	; () banked
 14223  007556  6F83               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 14224                           
 14225                           ;MISC.c: 295: while(*This != 0)
 14226  007558  D078               	goto	l14633
 14227  00755A                     l14601:
 14228                           
 14229                           ;MISC.c: 296: {
 14230                           ;MISC.c: 297: tempThis = *This;
 14231  00755A  C07F  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14232  00755E  C080  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14233  007562  0E00               	movlw	low (__mediumconst shr (0+16))
 14234  007564  6EF8               	movwf	tblptru,c
 14235  007566  0E0F               	movlw	(high __ramtop+-1)
 14236  007568  64F7               	cpfsgt	tblptrh,c
 14237  00756A  D003               	bra	u17877
 14238  00756C  0008               	tblrd		*
 14239  00756E  50F5               	movf	tablat,w,c
 14240  007570  D005               	bra	u17870
 14241  007572                     u17877:
 14242  007572  CFF6 FFE9          	movff	tblptrl,fsr0l
 14243  007576  CFF7 FFEA          	movff	tblptrh,fsr0h
 14244  00757A  50EF               	movf	indf0,w,c
 14245  00757C                     u17870:
 14246  00757C  0100               	movlb	0	; () banked
 14247  00757E  6F84               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 14248                           
 14249                           ;MISC.c: 298: tempThat = *That;
 14250  007580  C081  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 14251  007584  C082  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 14252  007588  0E00               	movlw	low (__mediumconst shr (0+16))
 14253  00758A  6EF8               	movwf	tblptru,c
 14254  00758C  0E0F               	movlw	(high __ramtop+-1)
 14255  00758E  64F7               	cpfsgt	tblptrh,c
 14256  007590  D003               	bra	u17887
 14257  007592  0008               	tblrd		*
 14258  007594  50F5               	movf	tablat,w,c
 14259  007596  D005               	bra	u17880
 14260  007598                     u17887:
 14261  007598  CFF6 FFE9          	movff	tblptrl,fsr0l
 14262  00759C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14263  0075A0  50EF               	movf	indf0,w,c
 14264  0075A2                     u17880:
 14265  0075A2  0100               	movlb	0	; () banked
 14266  0075A4  6F85               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;MISC.c: 299: lowercaseChar(&tempThis);
 14270  0075A6  0E84               	movlw	low StringContainsCaseInsensitive@tempThis
 14271  0075A8  0100               	movlb	0	; () banked
 14272  0075AA  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 14273  0075AC  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 14274  0075AE  0100               	movlb	0	; () banked
 14275  0075B0  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14276  0075B2  ECA6  F049         	call	_lowercaseChar	;wreg free
 14277                           
 14278                           ;MISC.c: 300: lowercaseChar(&tempThat);
 14279  0075B6  0E85               	movlw	low StringContainsCaseInsensitive@tempThat
 14280  0075B8  0100               	movlb	0	; () banked
 14281  0075BA  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 14282  0075BC  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 14283  0075BE  0100               	movlb	0	; () banked
 14284  0075C0  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14285  0075C2  ECA6  F049         	call	_lowercaseChar	;wreg free
 14286                           
 14287                           ;MISC.c: 302: if(tempThis == tempThat)
 14288  0075C6  0100               	movlb	0	; () banked
 14289  0075C8  5185               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 14290  0075CA  0100               	movlb	0	; () banked
 14291  0075CC  1984               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 14292  0075CE  A4D8               	btfss	status,2,c
 14293  0075D0  D033               	goto	l14625
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;MISC.c: 303: {
 14297                           ;MISC.c: 304: begin = 1;
 14298  0075D2  0E01               	movlw	1
 14299  0075D4  0100               	movlb	0	; () banked
 14300  0075D6  6F83               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;MISC.c: 305: That++;
 14304  0075D8  0100               	movlb	0	; () banked
 14305  0075DA  4B81               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 14306  0075DC  2B82               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;MISC.c: 306: if(*That == 0)
 14310  0075DE  C081  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 14311  0075E2  C082  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 14312  0075E6  0E00               	movlw	low (__mediumconst shr (0+16))
 14313  0075E8  6EF8               	movwf	tblptru,c
 14314  0075EA  0E0F               	movlw	(high __ramtop+-1)
 14315  0075EC  64F7               	cpfsgt	tblptrh,c
 14316  0075EE  D003               	bra	u17907
 14317  0075F0  0008               	tblrd		*
 14318  0075F2  50F5               	movf	tablat,w,c
 14319  0075F4  D005               	bra	u17900
 14320  0075F6                     u17907:
 14321  0075F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14322  0075FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14323  0075FE  50EF               	movf	indf0,w,c
 14324  007600                     u17900:
 14325  007600  0900               	iorlw	0
 14326  007602  A4D8               	btfss	status,2,c
 14327  007604  D002               	goto	l14619
 14328                           
 14329                           ;MISC.c: 307: {
 14330                           ;MISC.c: 308: return 1;
 14331  007606  0E01               	movlw	1
 14332  007608  0012               	return	
 14333  00760A                     l14619:
 14334                           
 14335                           ;MISC.c: 309: }
 14336                           ;MISC.c: 310: if(*This == 0)
 14337  00760A  C07F  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14338  00760E  C080  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14339  007612  0E00               	movlw	low (__mediumconst shr (0+16))
 14340  007614  6EF8               	movwf	tblptru,c
 14341  007616  0E0F               	movlw	(high __ramtop+-1)
 14342  007618  64F7               	cpfsgt	tblptrh,c
 14343  00761A  D003               	bra	u17927
 14344  00761C  0008               	tblrd		*
 14345  00761E  50F5               	movf	tablat,w,c
 14346  007620  D005               	bra	u17920
 14347  007622                     u17927:
 14348  007622  CFF6 FFE9          	movff	tblptrl,fsr0l
 14349  007626  CFF7 FFEA          	movff	tblptrh,fsr0h
 14350  00762A  50EF               	movf	indf0,w,c
 14351  00762C                     u17920:
 14352  00762C  0900               	iorlw	0
 14353  00762E  A4D8               	btfss	status,2,c
 14354  007630  D008               	goto	l14631
 14355                           
 14356                           ;MISC.c: 311: {
 14357                           ;MISC.c: 312: return 0;
 14358  007632  0E00               	movlw	0
 14359  007634  0012               	return	
 14360                           
 14361                           ;MISC.c: 313: }
 14362                           ;MISC.c: 314: }
 14363  007636  D005               	goto	l14631
 14364  007638                     l14625:
 14365                           
 14366                           ;MISC.c: 315: else
 14367                           ;MISC.c: 316: {
 14368                           ;MISC.c: 317: if(begin == 1)
 14369  007638  0100               	movlb	0	; () banked
 14370  00763A  0583               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
 14371  00763C  D7F8               	goto	L10
 14372                           
 14373                           ; BSR set to: 0
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;MISC.c: 318: {
 14377                           ;MISC.c: 319: return 0;
 14378  00763E  0012               	return	
 14379                           
 14380                           ; BSR set to: 0
 14381  007640  D000               	goto	l14631
 14382  007642                     l14631:
 14383                           
 14384                           ;MISC.c: 320: }
 14385                           ;MISC.c: 321: }
 14386                           ;MISC.c: 322: This++;
 14387  007642  0100               	movlb	0	; () banked
 14388  007644  4B7F               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 14389  007646  2B80               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 14390  007648  D000               	goto	l14633
 14391  00764A                     l14633:
 14392                           
 14393                           ; BSR set to: 0
 14394  00764A  C07F  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14395  00764E  C080  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14396  007652  0E00               	movlw	low (__mediumconst shr (0+16))
 14397  007654  6EF8               	movwf	tblptru,c
 14398  007656  0E0F               	movlw	(high __ramtop+-1)
 14399  007658  64F7               	cpfsgt	tblptrh,c
 14400  00765A  D003               	bra	u17957
 14401  00765C  0008               	tblrd		*
 14402  00765E  50F5               	movf	tablat,w,c
 14403  007660  D005               	bra	u17950
 14404  007662                     u17957:
 14405  007662  CFF6 FFE9          	movff	tblptrl,fsr0l
 14406  007666  CFF7 FFEA          	movff	tblptrh,fsr0h
 14407  00766A  50EF               	movf	indf0,w,c
 14408  00766C                     u17950:
 14409  00766C  0900               	iorlw	0
 14410  00766E  A4D8               	btfss	status,2,c
 14411  007670  D774               	goto	l14601
 14412                           
 14413                           ;MISC.c: 323: }
 14414                           ;MISC.c: 324: return 0;
 14415  007672  0E00               	movlw	0
 14416  007674  0012               	return	
 14417  007676  0012               	return		;funcret
 14418  007678                     __end_of_StringContainsCaseInsensitive:
 14419                           	opt stack 0
 14420                           tblptru	equ	0xFF8
 14421                           tblptrh	equ	0xFF7
 14422                           tblptrl	equ	0xFF6
 14423                           tablat	equ	0xFF5
 14424                           prodh	equ	0xFF4
 14425                           prodl	equ	0xFF3
 14426                           intcon	equ	0xFF2
 14427                           indf0	equ	0xFEF
 14428                           postinc0	equ	0xFEE
 14429                           fsr0h	equ	0xFEA
 14430                           fsr0l	equ	0xFE9
 14431                           wreg	equ	0xFE8
 14432                           postdec1	equ	0xFE5
 14433                           fsr1h	equ	0xFE2
 14434                           fsr1l	equ	0xFE1
 14435                           indf2	equ	0xFDF
 14436                           postinc2	equ	0xFDE
 14437                           fsr2h	equ	0xFDA
 14438                           fsr2l	equ	0xFD9
 14439                           status	equ	0xFD8
 14440                           
 14441 ;; *************** function _StringAddEqual *****************
 14442 ;; Defined at:
 14443 ;;		line 591 in file "MISC.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;  Input           2   43[BANK0 ] PTR unsigned char 
 14446 ;;		 -> main@BluetoothString(255), 
 14447 ;; Auto vars:     Size  Location     Type
 14448 ;;  temp          255    0[BANK1 ] unsigned char [255]
 14449 ;;  j               1   50[BANK0 ] unsigned char 
 14450 ;;  i               1   49[BANK0 ] unsigned char 
 14451 ;;  firstnumber     1   48[BANK0 ] unsigned char 
 14452 ;;  NullPosition    1   47[BANK0 ] unsigned char 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      unsigned char 
 14455 ;; Registers used:
 14456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14465 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;Total ram usage:      263 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    8
 14469 ;; This function calls:
 14470 ;;		_BufferCopy
 14471 ;;		_cleanBuffer
 14472 ;; This function is called by:
 14473 ;;		_UseBluetooth
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477                           	psect	text13
 14478  0062DA                     __ptext13:
 14479                           	opt stack 0
 14480  0062DA                     _StringAddEqual:
 14481                           	opt stack 21
 14482                           
 14483                           ;MISC.c: 593: unsigned char i;
 14484                           ;MISC.c: 594: unsigned char j =0;
 14485                           
 14486                           ;incstack = 0
 14487  0062DA  0E00               	movlw	0
 14488  0062DC  0100               	movlb	0	; () banked
 14489  0062DE  6F92               	movwf	StringAddEqual@j& (0+255),b
 14490                           
 14491                           ; BSR set to: 0
 14492                           ;MISC.c: 595: unsigned char firstnumber = 255;
 14493  0062E0  0100               	movlb	0	; () banked
 14494  0062E2  6990               	setf	StringAddEqual@firstnumber& (0+255),b
 14495                           
 14496                           ;MISC.c: 596: unsigned char temp[255];
 14497                           ;MISC.c: 597: unsigned char NullPosition;
 14498                           ;MISC.c: 598: for(i = 0; i<255; i++)
 14499  0062E4  0E00               	movlw	0
 14500  0062E6  0100               	movlb	0	; () banked
 14501  0062E8  6F91               	movwf	StringAddEqual@i& (0+255),b
 14502  0062EA                     l14821:
 14503                           
 14504                           ; BSR set to: 0
 14505  0062EA  0100               	movlb	0	; () banked
 14506  0062EC  2991               	incf	StringAddEqual@i& (0+255),w,b
 14507  0062EE  B4D8               	btfsc	status,2,c
 14508  0062F0  D012               	goto	l14833
 14509  0062F2  D001               	goto	l14825
 14510                           
 14511                           ; BSR set to: 0
 14512  0062F4  D010               	goto	l14833
 14513  0062F6                     l14825:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;MISC.c: 599: {
 14517                           ;MISC.c: 600: if(*Input == 0)
 14518  0062F6  C08B  FFD9         	movff	StringAddEqual@Input,fsr2l
 14519  0062FA  C08C  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 14520  0062FE  50DF               	movf	indf2,w,c
 14521  006300  A4D8               	btfss	status,2,c
 14522  006302  D003               	goto	l14829
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;MISC.c: 601: {
 14526                           ;MISC.c: 602: NullPosition = i;
 14527  006304  C091  F08F         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 14528                           
 14529                           ;MISC.c: 603: break;
 14530  006308  D006               	goto	l14833
 14531  00630A                     l14829:
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;MISC.c: 604: }
 14535                           ;MISC.c: 605: Input++;
 14536  00630A  0100               	movlb	0	; () banked
 14537  00630C  4B8B               	infsnz	StringAddEqual@Input& (0+255),f,b
 14538  00630E  2B8C               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 14539  006310  0100               	movlb	0	; () banked
 14540  006312  2B91               	incf	StringAddEqual@i& (0+255),f,b
 14541  006314  D7EA               	goto	l14821
 14542  006316                     l14833:
 14543                           
 14544                           ; BSR set to: 0
 14545                           ;MISC.c: 606: }
 14546                           ;MISC.c: 607: Input-=NullPosition;
 14547  006316  0100               	movlb	0	; () banked
 14548  006318  518F               	movf	StringAddEqual@NullPosition& (0+255),w,b
 14549  00631A  0D01               	mullw	1
 14550  00631C  50F3               	movf	prodl,w,c
 14551  00631E  0100               	movlb	0	; () banked
 14552  006320  5F8B               	subwf	StringAddEqual@Input& (0+255),f,b
 14553  006322  50F4               	movf	prodh,w,c
 14554  006324  0100               	movlb	0	; () banked
 14555  006326  5B8C               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;MISC.c: 608: cleanBuffer(temp,NullPosition +1);
 14559  006328  0E00               	movlw	low StringAddEqual@temp
 14560  00632A  0100               	movlb	0	; () banked
 14561  00632C  6F7C               	movwf	cleanBuffer@data& (0+255),b
 14562  00632E  0E01               	movlw	high StringAddEqual@temp
 14563  006330  0100               	movlb	0	; () banked
 14564  006332  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 14565  006334  0E01               	movlw	1
 14566  006336  0100               	movlb	0	; () banked
 14567  006338  258F               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 14568  00633A  0100               	movlb	0	; () banked
 14569  00633C  6F7E               	movwf	cleanBuffer@count& (0+255),b
 14570  00633E  0100               	movlb	0	; () banked
 14571  006340  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 14572  006342  0E00               	movlw	0
 14573  006344  237F               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 14574  006346  ECDB  F046         	call	_cleanBuffer	;wreg free
 14575                           
 14576                           ;MISC.c: 609: i = 0;
 14577  00634A  0E00               	movlw	0
 14578  00634C  0100               	movlb	0	; () banked
 14579  00634E  6F91               	movwf	StringAddEqual@i& (0+255),b
 14580                           
 14581                           ;MISC.c: 610: while(Input[i] != 0)
 14582  006350  D032               	goto	l14847
 14583  006352                     l14839:
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;MISC.c: 611: {
 14587                           ;MISC.c: 612: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 14588  006352  0100               	movlb	0	; () banked
 14589  006354  5191               	movf	StringAddEqual@i& (0+255),w,b
 14590  006356  0D01               	mullw	1
 14591  006358  50F3               	movf	prodl,w,c
 14592  00635A  0100               	movlb	0	; () banked
 14593  00635C  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14594  00635E  6ED9               	movwf	fsr2l,c
 14595  006360  50F4               	movf	prodh,w,c
 14596  006362  0100               	movlb	0	; () banked
 14597  006364  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14598  006366  6EDA               	movwf	fsr2h,c
 14599  006368  0E2F               	movlw	47
 14600  00636A  64DF               	cpfsgt	indf2,c
 14601  00636C  D00F               	goto	l14843
 14602                           
 14603                           ; BSR set to: 0
 14604  00636E  0100               	movlb	0	; () banked
 14605  006370  5191               	movf	StringAddEqual@i& (0+255),w,b
 14606  006372  0D01               	mullw	1
 14607  006374  50F3               	movf	prodl,w,c
 14608  006376  0100               	movlb	0	; () banked
 14609  006378  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14610  00637A  6ED9               	movwf	fsr2l,c
 14611  00637C  50F4               	movf	prodh,w,c
 14612  00637E  0100               	movlb	0	; () banked
 14613  006380  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14614  006382  6EDA               	movwf	fsr2h,c
 14615  006384  0E39               	movlw	57
 14616  006386  64DF               	cpfsgt	indf2,c
 14617  006388  D010               	goto	l486
 14618  00638A  D000               	goto	l14843
 14619  00638C                     l14843:
 14620                           
 14621                           ; BSR set to: 0
 14622  00638C  0100               	movlb	0	; () banked
 14623  00638E  5191               	movf	StringAddEqual@i& (0+255),w,b
 14624  006390  0D01               	mullw	1
 14625  006392  50F3               	movf	prodl,w,c
 14626  006394  0100               	movlb	0	; () banked
 14627  006396  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14628  006398  6ED9               	movwf	fsr2l,c
 14629  00639A  50F4               	movf	prodh,w,c
 14630  00639C  0100               	movlb	0	; () banked
 14631  00639E  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14632  0063A0  6EDA               	movwf	fsr2h,c
 14633  0063A2  0E2D               	movlw	45
 14634  0063A4  18DE               	xorwf	postinc2,w,c
 14635  0063A6  A4D8               	btfss	status,2,c
 14636  0063A8  D003               	goto	l14845
 14637  0063AA                     l486:
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;MISC.c: 613: {
 14641                           ;MISC.c: 614: firstnumber = i;
 14642  0063AA  C091  F090         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 14643                           
 14644                           ;MISC.c: 615: break;
 14645  0063AE  D011               	goto	l14849
 14646  0063B0                     l14845:
 14647                           
 14648                           ; BSR set to: 0
 14649                           ;MISC.c: 616: }
 14650                           ;MISC.c: 617: i++;
 14651  0063B0  0100               	movlb	0	; () banked
 14652  0063B2  2B91               	incf	StringAddEqual@i& (0+255),f,b
 14653  0063B4  D000               	goto	l14847
 14654  0063B6                     l14847:
 14655                           
 14656                           ; BSR set to: 0
 14657  0063B6  0100               	movlb	0	; () banked
 14658  0063B8  5191               	movf	StringAddEqual@i& (0+255),w,b
 14659  0063BA  0D01               	mullw	1
 14660  0063BC  50F3               	movf	prodl,w,c
 14661  0063BE  0100               	movlb	0	; () banked
 14662  0063C0  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14663  0063C2  6ED9               	movwf	fsr2l,c
 14664  0063C4  50F4               	movf	prodh,w,c
 14665  0063C6  0100               	movlb	0	; () banked
 14666  0063C8  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14667  0063CA  6EDA               	movwf	fsr2h,c
 14668  0063CC  50DF               	movf	indf2,w,c
 14669  0063CE  A4D8               	btfss	status,2,c
 14670  0063D0  D7C0               	goto	l14839
 14671  0063D2                     l14849:
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;MISC.c: 618: }
 14675                           ;MISC.c: 619: if(firstnumber == 255)
 14676  0063D2  0100               	movlb	0	; () banked
 14677  0063D4  2990               	incf	StringAddEqual@firstnumber& (0+255),w,b
 14678  0063D6  A4D8               	btfss	status,2,c
 14679  0063D8  D002               	goto	l14855
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;MISC.c: 620: {
 14683                           ;MISC.c: 622: return 0;
 14684  0063DA  0E00               	movlw	0
 14685                           
 14686                           ; BSR set to: 0
 14687  0063DC  0012               	return	
 14688  0063DE                     l14855:
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;MISC.c: 623: }
 14692                           ;MISC.c: 624: for(j=0;j<firstnumber;j++)
 14693  0063DE  0E00               	movlw	0
 14694  0063E0  0100               	movlb	0	; () banked
 14695  0063E2  6F92               	movwf	StringAddEqual@j& (0+255),b
 14696  0063E4  D019               	goto	l14861
 14697  0063E6                     l14857:
 14698                           
 14699                           ; BSR set to: 0
 14700                           ;MISC.c: 625: {
 14701                           ;MISC.c: 626: temp[j] = Input[j];
 14702  0063E6  0100               	movlb	0	; () banked
 14703  0063E8  5192               	movf	StringAddEqual@j& (0+255),w,b
 14704  0063EA  0D01               	mullw	1
 14705  0063EC  50F3               	movf	prodl,w,c
 14706  0063EE  0100               	movlb	0	; () banked
 14707  0063F0  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14708  0063F2  6ED9               	movwf	fsr2l,c
 14709  0063F4  50F4               	movf	prodh,w,c
 14710  0063F6  0100               	movlb	0	; () banked
 14711  0063F8  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14712  0063FA  6EDA               	movwf	fsr2h,c
 14713  0063FC  0100               	movlb	0	; () banked
 14714  0063FE  5192               	movf	StringAddEqual@j& (0+255),w,b
 14715  006400  0D01               	mullw	1
 14716  006402  0E00               	movlw	low StringAddEqual@temp
 14717  006404  24F3               	addwf	prodl,w,c
 14718  006406  6EE1               	movwf	fsr1l,c
 14719  006408  0E01               	movlw	high StringAddEqual@temp
 14720  00640A  20F4               	addwfc	prodh,w,c
 14721  00640C  6EE2               	movwf	fsr1h,c
 14722  00640E  CFDF FFE7          	movff	indf2,indf1
 14723                           
 14724                           ; BSR set to: 0
 14725  006412  0100               	movlb	0	; () banked
 14726  006414  2B92               	incf	StringAddEqual@j& (0+255),f,b
 14727  006416  D000               	goto	l14861
 14728  006418                     l14861:
 14729                           
 14730                           ; BSR set to: 0
 14731  006418  0100               	movlb	0	; () banked
 14732  00641A  5190               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14733  00641C  0100               	movlb	0	; () banked
 14734  00641E  5D92               	subwf	StringAddEqual@j& (0+255),w,b
 14735  006420  A0D8               	btfss	status,0,c
 14736  006422  D7E1               	goto	l14857
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;MISC.c: 627: }
 14740                           ;MISC.c: 628: temp[firstnumber] = '=';
 14741                           
 14742                           ; BSR set to: 0
 14743  006424  0100               	movlb	0	; () banked
 14744  006426  5190               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14745  006428  0D01               	mullw	1
 14746  00642A  0E00               	movlw	low StringAddEqual@temp
 14747  00642C  24F3               	addwf	prodl,w,c
 14748  00642E  6ED9               	movwf	fsr2l,c
 14749  006430  0E01               	movlw	high StringAddEqual@temp
 14750  006432  20F4               	addwfc	prodh,w,c
 14751  006434  6EDA               	movwf	fsr2h,c
 14752  006436  0E3D               	movlw	61
 14753  006438  6EDF               	movwf	indf2,c
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;MISC.c: 629: for(j = (firstnumber);j<255;j++)
 14757  00643A  C090  F092         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 14758  00643E                     l14867:
 14759                           
 14760                           ; BSR set to: 0
 14761  00643E  0100               	movlb	0	; () banked
 14762  006440  2992               	incf	StringAddEqual@j& (0+255),w,b
 14763  006442  B4D8               	btfsc	status,2,c
 14764  006444  D034               	goto	l14881
 14765  006446  D001               	goto	l14871
 14766                           
 14767                           ; BSR set to: 0
 14768  006448  D032               	goto	l14881
 14769  00644A                     l14871:
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;MISC.c: 630: {
 14773                           ;MISC.c: 631: temp[j+1] = Input[j];
 14774  00644A  0100               	movlb	0	; () banked
 14775  00644C  5192               	movf	StringAddEqual@j& (0+255),w,b
 14776  00644E  0D01               	mullw	1
 14777  006450  50F3               	movf	prodl,w,c
 14778  006452  0100               	movlb	0	; () banked
 14779  006454  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14780  006456  6ED9               	movwf	fsr2l,c
 14781  006458  50F4               	movf	prodh,w,c
 14782  00645A  0100               	movlb	0	; () banked
 14783  00645C  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14784  00645E  6EDA               	movwf	fsr2h,c
 14785  006460  0100               	movlb	0	; () banked
 14786  006462  5192               	movf	StringAddEqual@j& (0+255),w,b
 14787  006464  0100               	movlb	0	; () banked
 14788  006466  6F8D               	movwf	??_StringAddEqual& (0+255),b
 14789  006468  6B8E               	clrf	(??_StringAddEqual+1)& (0+255),b
 14790  00646A  0E01               	movlw	1
 14791  00646C  0100               	movlb	0	; () banked
 14792  00646E  278D               	addwf	??_StringAddEqual& (0+255),f,b
 14793  006470  0E00               	movlw	0
 14794  006472  238E               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 14795  006474  0E00               	movlw	low StringAddEqual@temp
 14796  006476  0100               	movlb	0	; () banked
 14797  006478  258D               	addwf	??_StringAddEqual& (0+255),w,b
 14798  00647A  6EE1               	movwf	fsr1l,c
 14799  00647C  0E01               	movlw	high StringAddEqual@temp
 14800  00647E  0100               	movlb	0	; () banked
 14801  006480  218E               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 14802  006482  6EE2               	movwf	fsr1h,c
 14803  006484  CFDF FFE7          	movff	indf2,indf1
 14804                           
 14805                           ; BSR set to: 0
 14806                           ;MISC.c: 632: if(Input[j] == 0)
 14807  006488  0100               	movlb	0	; () banked
 14808  00648A  5192               	movf	StringAddEqual@j& (0+255),w,b
 14809  00648C  0D01               	mullw	1
 14810  00648E  50F3               	movf	prodl,w,c
 14811  006490  0100               	movlb	0	; () banked
 14812  006492  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14813  006494  6ED9               	movwf	fsr2l,c
 14814  006496  50F4               	movf	prodh,w,c
 14815  006498  0100               	movlb	0	; () banked
 14816  00649A  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14817  00649C  6EDA               	movwf	fsr2h,c
 14818  00649E  50DF               	movf	indf2,w,c
 14819  0064A0  B4D8               	btfsc	status,2,c
 14820  0064A2  D005               	goto	l14881
 14821  0064A4  D001               	goto	l14877
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;MISC.c: 633: {
 14825                           ;MISC.c: 634: break;
 14826  0064A6  D003               	goto	l14881
 14827  0064A8                     l14877:
 14828                           
 14829                           ; BSR set to: 0
 14830  0064A8  0100               	movlb	0	; () banked
 14831  0064AA  2B92               	incf	StringAddEqual@j& (0+255),f,b
 14832  0064AC  D7C8               	goto	l14867
 14833  0064AE                     l14881:
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;MISC.c: 635: }
 14837                           ;MISC.c: 636: }
 14838                           ;MISC.c: 637: BufferCopy(temp,Input,NullPosition +1,0);
 14839  0064AE  0E00               	movlw	low StringAddEqual@temp
 14840  0064B0  0100               	movlb	0	; () banked
 14841  0064B2  6F84               	movwf	BufferCopy@from& (0+255),b
 14842  0064B4  0E01               	movlw	high StringAddEqual@temp
 14843  0064B6  0100               	movlb	0	; () banked
 14844  0064B8  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 14845  0064BA  C08B  F086         	movff	StringAddEqual@Input,BufferCopy@to
 14846  0064BE  C08C  F087         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 14847  0064C2  0100               	movlb	0	; () banked
 14848  0064C4  298F               	incf	StringAddEqual@NullPosition& (0+255),w,b
 14849  0064C6  0100               	movlb	0	; () banked
 14850  0064C8  6F88               	movwf	BufferCopy@count& (0+255),b
 14851  0064CA  0E00               	movlw	0
 14852  0064CC  0100               	movlb	0	; () banked
 14853  0064CE  6F89               	movwf	BufferCopy@shift& (0+255),b
 14854  0064D0  ECF6  F043         	call	_BufferCopy	;wreg free
 14855                           
 14856                           ;MISC.c: 638: return 1;
 14857  0064D4  0E01               	movlw	1
 14858  0064D6  0012               	return	
 14859  0064D8  0012               	return		;funcret
 14860  0064DA                     __end_of_StringAddEqual:
 14861                           	opt stack 0
 14862                           tblptru	equ	0xFF8
 14863                           tblptrh	equ	0xFF7
 14864                           tblptrl	equ	0xFF6
 14865                           tablat	equ	0xFF5
 14866                           prodh	equ	0xFF4
 14867                           prodl	equ	0xFF3
 14868                           intcon	equ	0xFF2
 14869                           indf0	equ	0xFEF
 14870                           postinc0	equ	0xFEE
 14871                           fsr0h	equ	0xFEA
 14872                           fsr0l	equ	0xFE9
 14873                           wreg	equ	0xFE8
 14874                           indf1	equ	0xFE7
 14875                           postdec1	equ	0xFE5
 14876                           fsr1h	equ	0xFE2
 14877                           fsr1l	equ	0xFE1
 14878                           indf2	equ	0xFDF
 14879                           postinc2	equ	0xFDE
 14880                           fsr2h	equ	0xFDA
 14881                           fsr2l	equ	0xFD9
 14882                           status	equ	0xFD8
 14883                           
 14884 ;; *************** function _BufferCopy *****************
 14885 ;; Defined at:
 14886 ;;		line 167 in file "MISC.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;  from            2   36[BANK0 ] PTR unsigned char 
 14889 ;;		 -> StringAddEqual@temp(255), ReceivedString(255), 
 14890 ;;  to              2   38[BANK0 ] PTR unsigned char 
 14891 ;;		 -> main@BluetoothString(255), 
 14892 ;;  count           1   40[BANK0 ] unsigned char 
 14893 ;;  shift           1   41[BANK0 ] unsigned char 
 14894 ;; Auto vars:     Size  Location     Type
 14895 ;;  i               1   42[BANK0 ] unsigned char 
 14896 ;; Return value:  Size  Location     Type
 14897 ;;		None               void
 14898 ;; Registers used:
 14899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14905 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14908 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14909 ;;Total ram usage:        7 bytes
 14910 ;; Hardware stack levels used:    1
 14911 ;; Hardware stack levels required when called:    7
 14912 ;; This function calls:
 14913 ;;		_cleanBuffer
 14914 ;; This function is called by:
 14915 ;;		_main
 14916 ;;		_StringAddEqual
 14917 ;; This function uses a non-reentrant model
 14918 ;;
 14919                           
 14920                           	psect	text14
 14921  0087EC                     __ptext14:
 14922                           	opt stack 0
 14923  0087EC                     _BufferCopy:
 14924                           	opt stack 21
 14925                           
 14926                           ;MISC.c: 169: unsigned char i=0;
 14927                           
 14928                           ;incstack = 0
 14929  0087EC  0E00               	movlw	0
 14930  0087EE  0100               	movlb	0	; () banked
 14931  0087F0  6F8A               	movwf	BufferCopy@i& (0+255),b
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;MISC.c: 170: cleanBuffer(to,count);
 14935  0087F2  C086  F07C         	movff	BufferCopy@to,cleanBuffer@data
 14936  0087F6  C087  F07D         	movff	BufferCopy@to+1,cleanBuffer@data+1
 14937  0087FA  C088  F07E         	movff	BufferCopy@count,cleanBuffer@count
 14938  0087FE  0100               	movlb	0	; () banked
 14939  008800  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 14940  008802  ECDB  F046         	call	_cleanBuffer	;wreg free
 14941                           
 14942                           ;MISC.c: 171: for(i = shift; i>0;i--)
 14943  008806  C089  F08A         	movff	BufferCopy@shift,BufferCopy@i
 14944  00880A                     l13817:
 14945  00880A  0100               	movlb	0	; () banked
 14946  00880C  518A               	movf	BufferCopy@i& (0+255),w,b
 14947  00880E  0100               	movlb	0	; () banked
 14948  008810  B4D8               	btfsc	status,2,c
 14949  008812  D022               	goto	l13837
 14950  008814  D001               	goto	l13821
 14951                           
 14952                           ; BSR set to: 0
 14953  008816  D020               	goto	l13837
 14954  008818                     l13821:
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;MISC.c: 172: {
 14958                           ;MISC.c: 173: *to = ' ';
 14959  008818  C086  FFD9         	movff	BufferCopy@to,fsr2l
 14960  00881C  C087  FFDA         	movff	BufferCopy@to+1,fsr2h
 14961  008820  0E20               	movlw	32
 14962  008822  6EDF               	movwf	indf2,c
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;MISC.c: 174: to++;
 14966  008824  0100               	movlb	0	; () banked
 14967  008826  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 14968  008828  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 14969                           
 14970                           ; BSR set to: 0
 14971  00882A  0100               	movlb	0	; () banked
 14972  00882C  078A               	decf	BufferCopy@i& (0+255),f,b
 14973  00882E  D7ED               	goto	l13817
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;MISC.c: 175: }
 14977                           ;MISC.c: 176: while(*from != 0 && count >0)
 14978                           
 14979                           ; BSR set to: 0
 14980  008830  D013               	goto	l13837
 14981  008832                     l13829:
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;MISC.c: 177: {
 14985                           ;MISC.c: 178: *to = *from;
 14986  008832  C084  FFD9         	movff	BufferCopy@from,fsr2l
 14987  008836  C085  FFDA         	movff	BufferCopy@from+1,fsr2h
 14988  00883A  C086  FFE1         	movff	BufferCopy@to,fsr1l
 14989  00883E  C087  FFE2         	movff	BufferCopy@to+1,fsr1h
 14990  008842  CFDF FFE7          	movff	indf2,indf1
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;MISC.c: 179: from++;
 14994  008846  0100               	movlb	0	; () banked
 14995  008848  4B84               	infsnz	BufferCopy@from& (0+255),f,b
 14996  00884A  2B85               	incf	(BufferCopy@from+1)& (0+255),f,b
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;MISC.c: 180: to++;
 15000  00884C  0100               	movlb	0	; () banked
 15001  00884E  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 15002  008850  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;MISC.c: 181: count--;
 15006  008852  0100               	movlb	0	; () banked
 15007  008854  0788               	decf	BufferCopy@count& (0+255),f,b
 15008  008856  D000               	goto	l13837
 15009  008858                     l13837:
 15010                           
 15011                           ; BSR set to: 0
 15012  008858  C084  FFD9         	movff	BufferCopy@from,fsr2l
 15013  00885C  C085  FFDA         	movff	BufferCopy@from+1,fsr2h
 15014  008860  50DF               	movf	indf2,w,c
 15015  008862  B4D8               	btfsc	status,2,c
 15016  008864  0012               	return	
 15017                           
 15018                           ; BSR set to: 0
 15019  008866  0100               	movlb	0	; () banked
 15020  008868  5188               	movf	BufferCopy@count& (0+255),w,b
 15021  00886A  0100               	movlb	0	; () banked
 15022  00886C  B4D8               	btfsc	status,2,c
 15023  00886E  0012               	return	
 15024  008870  D7E0               	goto	l13829
 15025                           
 15026                           ; BSR set to: 0
 15027  008872  0012               	return	
 15028                           
 15029                           ; BSR set to: 0
 15030                           
 15031                           ; BSR set to: 0
 15032  008874  0012               	return		;funcret
 15033  008876                     __end_of_BufferCopy:
 15034                           	opt stack 0
 15035                           tblptru	equ	0xFF8
 15036                           tblptrh	equ	0xFF7
 15037                           tblptrl	equ	0xFF6
 15038                           tablat	equ	0xFF5
 15039                           prodh	equ	0xFF4
 15040                           prodl	equ	0xFF3
 15041                           intcon	equ	0xFF2
 15042                           indf0	equ	0xFEF
 15043                           postinc0	equ	0xFEE
 15044                           fsr0h	equ	0xFEA
 15045                           fsr0l	equ	0xFE9
 15046                           wreg	equ	0xFE8
 15047                           indf1	equ	0xFE7
 15048                           postdec1	equ	0xFE5
 15049                           fsr1h	equ	0xFE2
 15050                           fsr1l	equ	0xFE1
 15051                           indf2	equ	0xFDF
 15052                           postinc2	equ	0xFDE
 15053                           fsr2h	equ	0xFDA
 15054                           fsr2l	equ	0xFD9
 15055                           status	equ	0xFD8
 15056                           
 15057 ;; *************** function _SendRF_wait *****************
 15058 ;; Defined at:
 15059 ;;		line 145 in file "RF.c"
 15060 ;; Parameters:    Size  Location     Type
 15061 ;;  Code            2   36[BANK0 ] PTR const unsigned char 
 15062 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 15063 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 15064 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 15065 ;;		 -> Conf1_ChannelD(12), 
 15066 ;;  Config          1   38[BANK0 ] unsigned char 
 15067 ;;  size            1   39[BANK0 ] unsigned char 
 15068 ;;  amount          1   40[BANK0 ] unsigned char 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;		None
 15071 ;; Return value:  Size  Location     Type
 15072 ;;		None               void
 15073 ;; Registers used:
 15074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15075 ;; Tracked objects:
 15076 ;;		On entry : 0/0
 15077 ;;		On exit  : 0/0
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15080 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15083 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15084 ;;Total ram usage:        5 bytes
 15085 ;; Hardware stack levels used:    1
 15086 ;; Hardware stack levels required when called:    8
 15087 ;; This function calls:
 15088 ;;		_LEDTimerON
 15089 ;;		_ReadIRpin
 15090 ;;		_SendRF
 15091 ;; This function is called by:
 15092 ;;		_UseBluetooth
 15093 ;;		_SendRF_Channel
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           	psect	text15
 15098  00916C                     __ptext15:
 15099                           	opt stack 0
 15100  00916C                     _SendRF_wait:
 15101                           	opt stack 20
 15102                           
 15103                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;incstack = 0
 15107  00916C  987D               	bcf	3965,4,c	;volatile
 15108                           
 15109                           ;RF.c: 148: INTCONbits.RBIE = 0;
 15110  00916E  96F2               	bcf	intcon,3,c	;volatile
 15111                           
 15112                           ;RF.c: 149: INTCONbits.PEIE = 0;
 15113  009170  9CF2               	bcf	intcon,6,c	;volatile
 15114                           
 15115                           ;RF.c: 150: LEDTimerON();
 15116  009172  EC6A  F04A         	call	_LEDTimerON	;wreg free
 15117                           
 15118                           ;RF.c: 151: (LATC |= 0x04);
 15119  009176  848B               	bsf	3979,2,c	;volatile
 15120                           
 15121                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 15122  009178  C084  F07C         	movff	SendRF_wait@Code,SendRF@Code
 15123  00917C  C085  F07D         	movff	SendRF_wait@Code+1,SendRF@Code+1
 15124  009180  C086  F07E         	movff	SendRF_wait@Config,SendRF@Config
 15125  009184  C087  F07F         	movff	SendRF_wait@size,SendRF@size
 15126  009188  C088  F080         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 15127  00918C  ECF2  F03D         	call	_SendRF	;wreg free
 15128                           
 15129                           ;RF.c: 153: while(!Sent);
 15130  009190  D000               	goto	l14241
 15131  009192                     l14241:
 15132  009192  0100               	movlb	0	; () banked
 15133  009194  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15134  009196  B4D8               	btfsc	status,2,c
 15135  009198  D7FC               	goto	l14241
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;RF.c: 154: INTCONbits.PEIE = 1;
 15139  00919A  8CF2               	bsf	intcon,6,c	;volatile
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 15143  00919C  ECA7  F04A         	call	_ReadIRpin	;wreg free
 15144  0091A0  6E2F               	movwf	_IRpinOLD,c
 15145                           
 15146                           ;RF.c: 156: INTCONbits.RBIF = 0;
 15147  0091A2  90F2               	bcf	intcon,0,c	;volatile
 15148                           
 15149                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 15150  0091A4  887D               	bsf	3965,4,c	;volatile
 15151                           
 15152                           ;RF.c: 158: INTCONbits.RBIE = 1;
 15153  0091A6  86F2               	bsf	intcon,3,c	;volatile
 15154  0091A8  0012               	return		;funcret
 15155  0091AA                     __end_of_SendRF_wait:
 15156                           	opt stack 0
 15157                           tblptru	equ	0xFF8
 15158                           tblptrh	equ	0xFF7
 15159                           tblptrl	equ	0xFF6
 15160                           tablat	equ	0xFF5
 15161                           prodh	equ	0xFF4
 15162                           prodl	equ	0xFF3
 15163                           intcon	equ	0xFF2
 15164                           indf0	equ	0xFEF
 15165                           postinc0	equ	0xFEE
 15166                           fsr0h	equ	0xFEA
 15167                           fsr0l	equ	0xFE9
 15168                           wreg	equ	0xFE8
 15169                           indf1	equ	0xFE7
 15170                           postdec1	equ	0xFE5
 15171                           fsr1h	equ	0xFE2
 15172                           fsr1l	equ	0xFE1
 15173                           indf2	equ	0xFDF
 15174                           postinc2	equ	0xFDE
 15175                           fsr2h	equ	0xFDA
 15176                           fsr2l	equ	0xFD9
 15177                           status	equ	0xFD8
 15178                           
 15179 ;; *************** function _SendRF *****************
 15180 ;; Defined at:
 15181 ;;		line 68 in file "RF.c"
 15182 ;; Parameters:    Size  Location     Type
 15183 ;;  Code            2   28[BANK0 ] PTR const unsigned char 
 15184 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 15185 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 15186 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 15187 ;;		 -> Conf1_ChannelD(12), 
 15188 ;;  Config          1   30[BANK0 ] unsigned char 
 15189 ;;  size            1   31[BANK0 ] unsigned char 
 15190 ;;  RepeatAmount    1   32[BANK0 ] unsigned char 
 15191 ;; Auto vars:     Size  Location     Type
 15192 ;;  i               1   35[BANK0 ] unsigned char 
 15193 ;; Return value:  Size  Location     Type
 15194 ;;                  1    wreg      unsigned char 
 15195 ;; Registers used:
 15196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15197 ;; Tracked objects:
 15198 ;;		On entry : 0/0
 15199 ;;		On exit  : 0/0
 15200 ;;		Unchanged: 0/0
 15201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15202 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15205 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15206 ;;Total ram usage:        8 bytes
 15207 ;; Hardware stack levels used:    1
 15208 ;; Hardware stack levels required when called:    6
 15209 ;; This function calls:
 15210 ;;		Nothing
 15211 ;; This function is called by:
 15212 ;;		_SendRF_wait
 15213 ;; This function uses a non-reentrant model
 15214 ;;
 15215                           
 15216                           	psect	text16
 15217  007BE4                     __ptext16:
 15218                           	opt stack 0
 15219  007BE4                     _SendRF:
 15220                           	opt stack 21
 15221                           
 15222                           ;RF.c: 70: unsigned char i;
 15223                           ;RF.c: 71: if(Sent)
 15224                           
 15225                           ;incstack = 0
 15226  007BE4  0100               	movlb	0	; () banked
 15227  007BE6  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15228  007BE8  B4D8               	btfsc	status,2,c
 15229  007BEA  0012               	return	
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;RF.c: 72: {
 15233                           ;RF.c: 74: RF_IR = 55;
 15234  007BEC  0E37               	movlw	55
 15235  007BEE  6E42               	movwf	_RF_IR,c
 15236                           
 15237                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 15238  007BF0  0100               	movlb	0	; () banked
 15239  007BF2  517E               	movf	SendRF@Config& (0+255),w,b
 15240  007BF4  0100               	movlb	0	; () banked
 15241  007BF6  B4D8               	btfsc	status,2,c
 15242  007BF8  0012               	return	
 15243                           
 15244                           ; BSR set to: 0
 15245  007BFA  0E02               	movlw	2
 15246  007BFC  0100               	movlb	0	; () banked
 15247  007BFE  657E               	cpfsgt	SendRF@Config& (0+255),b
 15248  007C00  D002               	goto	l2119
 15249  007C02  0012               	return	
 15250                           
 15251                           ; BSR set to: 0
 15252                           ;RF.c: 76: {
 15253                           ;RF.c: 77: return 0;
 15254                           ;	Return value of _SendRF is never used
 15255  007C04  0012               	return	
 15256  007C06                     l2119:
 15257                           
 15258                           ; BSR set to: 0
 15259                           ;RF.c: 78: }
 15260                           ;RF.c: 79: RFConfig = Config;
 15261  007C06  C07E  F034         	movff	SendRF@Config,_RFConfig
 15262                           
 15263                           ; BSR set to: 0
 15264                           ;RF.c: 80: if(Config == 1)
 15265  007C0A  0100               	movlb	0	; () banked
 15266  007C0C  057E               	decf	SendRF@Config& (0+255),w,b
 15267  007C0E  A4D8               	btfss	status,2,c
 15268  007C10  D002               	goto	l13751
 15269                           
 15270                           ; BSR set to: 0
 15271                           ;RF.c: 81: {
 15272                           ;RF.c: 82: RF_IR_Postscaler = 2;
 15273  007C12  0E02               	movlw	2
 15274  007C14  D006               	goto	L11
 15275  007C16                     l13751:
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;RF.c: 84: else if(Config == 2)
 15279  007C16  0E02               	movlw	2
 15280  007C18  0100               	movlb	0	; () banked
 15281  007C1A  197E               	xorwf	SendRF@Config& (0+255),w,b
 15282  007C1C  A4D8               	btfss	status,2,c
 15283  007C1E  0012               	return	
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;RF.c: 85: {
 15287                           ;RF.c: 86: RF_IR_Postscaler = 4;
 15288  007C20  0E04               	movlw	4
 15289  007C22                     L11:
 15290  007C22  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15291                           
 15292                           ;RF.c: 87: }
 15293  007C24  D002               	goto	l13755
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;RF.c: 88: else
 15297                           ;RF.c: 89: {
 15298                           ;RF.c: 90: return 0;
 15299                           ;	Return value of _SendRF is never used
 15300  007C26  0012               	return	
 15301                           
 15302                           ; BSR set to: 0
 15303  007C28  D000               	goto	l13755
 15304  007C2A                     l13755:
 15305                           
 15306                           ; BSR set to: 0
 15307                           ;RF.c: 91: }
 15308                           ;RF.c: 93: Sent = 0;
 15309  007C2A  0E00               	movlw	0
 15310  007C2C  0100               	movlb	0	; () banked
 15311  007C2E  6FE3               	movwf	_Sent& (0+255),b	;volatile
 15312                           
 15313                           ; BSR set to: 0
 15314                           ;RF.c: 94: Sendcount = RepeatAmount;
 15315  007C30  C080  F038         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 15316                           
 15317                           ;RF.c: 95: RFsendFlag = 1;
 15318  007C34  0E01               	movlw	1
 15319  007C36  6E37               	movwf	_RFsendFlag,c	;volatile
 15320                           
 15321                           ;RF.c: 96: RFcodeBit = 0;
 15322  007C38  0E00               	movlw	0
 15323  007C3A  6E35               	movwf	_RFcodeBit,c
 15324                           
 15325                           ;RF.c: 97: RFcodePlace = 1;
 15326  007C3C  0E01               	movlw	1
 15327  007C3E  6E36               	movwf	_RFcodePlace,c
 15328                           
 15329                           ; BSR set to: 0
 15330                           ;RF.c: 100: if(size >= 20)
 15331  007C40  0E13               	movlw	19
 15332  007C42  0100               	movlb	0	; () banked
 15333  007C44  657F               	cpfsgt	SendRF@size& (0+255),b
 15334  007C46  D002               	goto	l13763
 15335  007C48  0012               	return	
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;RF.c: 101: {
 15339                           ;RF.c: 102: return 0;
 15340                           ;	Return value of _SendRF is never used
 15341  007C4A  0012               	return	
 15342  007C4C                     l13763:
 15343                           
 15344                           ; BSR set to: 0
 15345                           ;RF.c: 103: }
 15346                           ;RF.c: 104: for(i=0;i<size;i++)
 15347  007C4C  0E00               	movlw	0
 15348  007C4E  0100               	movlb	0	; () banked
 15349  007C50  6F83               	movwf	SendRF@i& (0+255),b
 15350  007C52  D021               	goto	l13769
 15351  007C54                     l13765:
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;RF.c: 105: {
 15355                           ;RF.c: 106: RFsendCode[i] = Code[i];
 15356  007C54  0100               	movlb	0	; () banked
 15357  007C56  5183               	movf	SendRF@i& (0+255),w,b
 15358  007C58  0D01               	mullw	1
 15359  007C5A  C07C  F081         	movff	SendRF@Code,??_SendRF
 15360  007C5E  C07D  F082         	movff	SendRF@Code+1,??_SendRF+1
 15361  007C62  50F3               	movf	prodl,w,c
 15362  007C64  0100               	movlb	0	; () banked
 15363  007C66  2781               	addwf	??_SendRF& (0+255),f,b
 15364  007C68  50F4               	movf	prodh,w,c
 15365  007C6A  0100               	movlb	0	; () banked
 15366  007C6C  2382               	addwfc	(??_SendRF+1)& (0+255),f,b
 15367  007C6E  C081  FFF6         	movff	??_SendRF,tblptrl
 15368  007C72  C082  FFF7         	movff	??_SendRF+1,tblptrh
 15369  007C76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15370  007C76  6AF8               	clrf	tblptru,c
 15371  007C78                     	endif
 15372  007C78                     	if	0	;tblptru may be non-zero
 15373  007C78                     	endif
 15374  007C78  0100               	movlb	0	; () banked
 15375  007C7A  5183               	movf	SendRF@i& (0+255),w,b
 15376  007C7C  0D01               	mullw	1
 15377  007C7E  0ECF               	movlw	low _RFsendCode
 15378  007C80  24F3               	addwf	prodl,w,c
 15379  007C82  6ED9               	movwf	fsr2l,c
 15380  007C84  0E02               	movlw	high _RFsendCode
 15381  007C86  20F4               	addwfc	prodh,w,c
 15382  007C88  6EDA               	movwf	fsr2h,c
 15383  007C8A  0008               	tblrd		*
 15384  007C8C  CFF5 FFDF          	movff	tablat,indf2
 15385                           
 15386                           ; BSR set to: 0
 15387  007C90  0100               	movlb	0	; () banked
 15388  007C92  2B83               	incf	SendRF@i& (0+255),f,b
 15389  007C94  D000               	goto	l13769
 15390  007C96                     l13769:
 15391                           
 15392                           ; BSR set to: 0
 15393  007C96  0100               	movlb	0	; () banked
 15394  007C98  517F               	movf	SendRF@size& (0+255),w,b
 15395  007C9A  0100               	movlb	0	; () banked
 15396  007C9C  5D83               	subwf	SendRF@i& (0+255),w,b
 15397  007C9E  A0D8               	btfss	status,0,c
 15398  007CA0  D7D9               	goto	l13765
 15399                           
 15400                           ; BSR set to: 0
 15401                           ;RF.c: 107: }
 15402                           ;RF.c: 108: RFsendCode[i] = 99;
 15403                           
 15404                           ; BSR set to: 0
 15405  007CA2  0100               	movlb	0	; () banked
 15406  007CA4  5183               	movf	SendRF@i& (0+255),w,b
 15407  007CA6  0D01               	mullw	1
 15408  007CA8  0ECF               	movlw	low _RFsendCode
 15409  007CAA  24F3               	addwf	prodl,w,c
 15410  007CAC  6ED9               	movwf	fsr2l,c
 15411  007CAE  0E02               	movlw	high _RFsendCode
 15412  007CB0  20F4               	addwfc	prodh,w,c
 15413  007CB2  6EDA               	movwf	fsr2h,c
 15414  007CB4  0E63               	movlw	99
 15415  007CB6  6EDF               	movwf	indf2,c
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;RF.c: 110: (TMR2 = 0);
 15419  007CB8  0E00               	movlw	0
 15420  007CBA  6ECC               	movwf	4044,c	;volatile
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;RF.c: 111: if(Config == 1)
 15424  007CBC  0100               	movlb	0	; () banked
 15425  007CBE  057E               	decf	SendRF@Config& (0+255),w,b
 15426  007CC0  A4D8               	btfss	status,2,c
 15427  007CC2  D002               	goto	l13779
 15428                           
 15429                           ; BSR set to: 0
 15430                           ;RF.c: 112: {
 15431                           ;RF.c: 113: (PR2 = 250);
 15432  007CC4  0EFA               	movlw	250
 15433  007CC6  D001               	goto	L12
 15434  007CC8                     l13779:
 15435                           
 15436                           ; BSR set to: 0
 15437                           ;RF.c: 115: else
 15438                           ;RF.c: 116: {
 15439                           ;RF.c: 117: (PR2 = 149);
 15440  007CC8  0E95               	movlw	149
 15441  007CCA                     L12:
 15442  007CCA  6ECB               	movwf	4043,c	;volatile
 15443  007CCC  D000               	goto	l13781
 15444  007CCE                     l13781:
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;RF.c: 118: }
 15448                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 15449  007CCE  84CA               	bsf	4042,2,c	;volatile
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;RF.c: 120: return 1;
 15453                           ;	Return value of _SendRF is never used
 15454  007CD0  0012               	return	
 15455                           
 15456                           ; BSR set to: 0
 15457                           
 15458                           ; BSR set to: 0
 15459                           ;RF.c: 121: }
 15460                           ;RF.c: 122: return 2;
 15461                           ;	Return value of _SendRF is never used
 15462  007CD2  0012               	return		;funcret
 15463  007CD4                     __end_of_SendRF:
 15464                           	opt stack 0
 15465                           tblptru	equ	0xFF8
 15466                           tblptrh	equ	0xFF7
 15467                           tblptrl	equ	0xFF6
 15468                           tablat	equ	0xFF5
 15469                           prodh	equ	0xFF4
 15470                           prodl	equ	0xFF3
 15471                           intcon	equ	0xFF2
 15472                           indf0	equ	0xFEF
 15473                           postinc0	equ	0xFEE
 15474                           fsr0h	equ	0xFEA
 15475                           fsr0l	equ	0xFE9
 15476                           wreg	equ	0xFE8
 15477                           indf1	equ	0xFE7
 15478                           postdec1	equ	0xFE5
 15479                           fsr1h	equ	0xFE2
 15480                           fsr1l	equ	0xFE1
 15481                           indf2	equ	0xFDF
 15482                           postinc2	equ	0xFDE
 15483                           fsr2h	equ	0xFDA
 15484                           fsr2l	equ	0xFD9
 15485                           status	equ	0xFD8
 15486                           
 15487 ;; *************** function _LEDTimerON *****************
 15488 ;; Defined at:
 15489 ;;		line 149 in file "Timer.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;		None
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;		None
 15494 ;; Return value:  Size  Location     Type
 15495 ;;		None               void
 15496 ;; Registers used:
 15497 ;;		wreg, status,2, cstack
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/0
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15507 ;;Total ram usage:        0 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; Hardware stack levels required when called:    7
 15510 ;; This function calls:
 15511 ;;		_ResetTimer1
 15512 ;; This function is called by:
 15513 ;;		_UseIRCode
 15514 ;;		_WaitForIRsignal
 15515 ;;		_SendRF_wait
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text17
 15520  0094D4                     __ptext17:
 15521                           	opt stack 0
 15522  0094D4                     _LEDTimerON:
 15523                           	opt stack 20
 15524                           
 15525                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;incstack = 0
 15529  0094D4  90CD               	bcf	4045,0,c	;volatile
 15530                           
 15531                           ;Timer.c: 152: ResetTimer1();
 15532  0094D6  ECCA  F04A         	call	_ResetTimer1	;wreg free
 15533                           
 15534                           ;Timer.c: 153: Timer1_Postscaler = 0;
 15535  0094DA  0E00               	movlw	0
 15536  0094DC  6E39               	movwf	_Timer1_Postscaler,c
 15537                           
 15538                           ;Timer.c: 154: ResetTimer1();
 15539  0094DE  ECCA  F04A         	call	_ResetTimer1	;wreg free
 15540                           
 15541                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 15542  0094E2  80CD               	bsf	4045,0,c	;volatile
 15543  0094E4  0012               	return		;funcret
 15544  0094E6                     __end_of_LEDTimerON:
 15545                           	opt stack 0
 15546                           tblptru	equ	0xFF8
 15547                           tblptrh	equ	0xFF7
 15548                           tblptrl	equ	0xFF6
 15549                           tablat	equ	0xFF5
 15550                           prodh	equ	0xFF4
 15551                           prodl	equ	0xFF3
 15552                           intcon	equ	0xFF2
 15553                           indf0	equ	0xFEF
 15554                           postinc0	equ	0xFEE
 15555                           fsr0h	equ	0xFEA
 15556                           fsr0l	equ	0xFE9
 15557                           wreg	equ	0xFE8
 15558                           indf1	equ	0xFE7
 15559                           postdec1	equ	0xFE5
 15560                           fsr1h	equ	0xFE2
 15561                           fsr1l	equ	0xFE1
 15562                           indf2	equ	0xFDF
 15563                           postinc2	equ	0xFDE
 15564                           fsr2h	equ	0xFDA
 15565                           fsr2l	equ	0xFD9
 15566                           status	equ	0xFD8
 15567                           
 15568 ;; *************** function _ResetTimer1 *****************
 15569 ;; Defined at:
 15570 ;;		line 123 in file "Timer.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;		None
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;		None
 15575 ;; Return value:  Size  Location     Type
 15576 ;;		None               void
 15577 ;; Registers used:
 15578 ;;		wreg, status,2
 15579 ;; Tracked objects:
 15580 ;;		On entry : 0/0
 15581 ;;		On exit  : 0/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15588 ;;Total ram usage:        0 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    6
 15591 ;; This function calls:
 15592 ;;		Nothing
 15593 ;; This function is called by:
 15594 ;;		_LEDTimerON
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text18
 15599  009594                     __ptext18:
 15600                           	opt stack 0
 15601  009594                     _ResetTimer1:
 15602                           	opt stack 20
 15603                           
 15604                           ;Timer.c: 129: TMR1H = 0;
 15605                           
 15606                           ;incstack = 0
 15607  009594  0E00               	movlw	0
 15608  009596  6ECF               	movwf	4047,c	;volatile
 15609                           
 15610                           ;Timer.c: 130: TMR1L = 2;
 15611  009598  0E02               	movlw	2
 15612  00959A  6ECE               	movwf	4046,c	;volatile
 15613  00959C  0012               	return		;funcret
 15614  00959E                     __end_of_ResetTimer1:
 15615                           	opt stack 0
 15616                           tblptru	equ	0xFF8
 15617                           tblptrh	equ	0xFF7
 15618                           tblptrl	equ	0xFF6
 15619                           tablat	equ	0xFF5
 15620                           prodh	equ	0xFF4
 15621                           prodl	equ	0xFF3
 15622                           intcon	equ	0xFF2
 15623                           indf0	equ	0xFEF
 15624                           postinc0	equ	0xFEE
 15625                           fsr0h	equ	0xFEA
 15626                           fsr0l	equ	0xFE9
 15627                           wreg	equ	0xFE8
 15628                           indf1	equ	0xFE7
 15629                           postdec1	equ	0xFE5
 15630                           fsr1h	equ	0xFE2
 15631                           fsr1l	equ	0xFE1
 15632                           indf2	equ	0xFDF
 15633                           postinc2	equ	0xFDE
 15634                           fsr2h	equ	0xFDA
 15635                           fsr2l	equ	0xFD9
 15636                           status	equ	0xFD8
 15637                           
 15638 ;; *************** function _SendNEC_wait *****************
 15639 ;; Defined at:
 15640 ;;		line 419 in file "IR.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;  code            4   49[BANK0 ] unsigned long 
 15643 ;;  RepeatAmount    1   53[BANK0 ] unsigned char 
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;  toggle          1   54[BANK0 ] unsigned char 
 15646 ;; Return value:  Size  Location     Type
 15647 ;;		None               void
 15648 ;; Registers used:
 15649 ;;		wreg, status,2, status,0, cstack
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15655 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15658 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15659 ;;Total ram usage:        6 bytes
 15660 ;; Hardware stack levels used:    1
 15661 ;; Hardware stack levels required when called:    8
 15662 ;; This function calls:
 15663 ;;		_CheckReceivingIR
 15664 ;;		_ReadIRpin
 15665 ;;		_SendNEC_bytes
 15666 ;;		_delayUS
 15667 ;; This function is called by:
 15668 ;;		_UseBluetooth
 15669 ;; This function uses a non-reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text19
 15673  00862A                     __ptext19:
 15674                           	opt stack 0
 15675  00862A                     _SendNEC_wait:
 15676                           	opt stack 21
 15677                           
 15678                           ;IR.c: 421: unsigned char toggle = 0;
 15679                           
 15680                           ;incstack = 0
 15681  00862A  0E00               	movlw	0
 15682  00862C  0100               	movlb	0	; () banked
 15683  00862E  6F96               	movwf	SendNEC_wait@toggle& (0+255),b
 15684                           
 15685                           ; BSR set to: 0
 15686                           
 15687                           ;IR.c: 422: while(CheckReceivingIR());
 15688  008630  D000               	goto	l15109
 15689  008632                     l15109:
 15690  008632  EC73  F04A         	call	_CheckReceivingIR	;wreg free
 15691  008636  0900               	iorlw	0
 15692  008638  A4D8               	btfss	status,2,c
 15693  00863A  D7FB               	goto	l15109
 15694                           
 15695                           ;IR.c: 424: (IOCBbits.IOCB4 = 0);
 15696  00863C  987D               	bcf	3965,4,c	;volatile
 15697                           
 15698                           ;IR.c: 425: INTCONbits.RBIE = 0;
 15699  00863E  96F2               	bcf	intcon,3,c	;volatile
 15700                           
 15701                           ;IR.c: 426: INTCONbits.PEIE = 0;
 15702  008640  9CF2               	bcf	intcon,6,c	;volatile
 15703                           
 15704                           ;IR.c: 428: SendNEC_bytes(code, RepeatAmount);
 15705  008642  C091  F08C         	movff	SendNEC_wait@code,SendNEC_bytes@code
 15706  008646  C092  F08D         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 15707  00864A  C093  F08E         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 15708  00864E  C094  F08F         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 15709  008652  C095  F090         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 15710  008656  EC3B  F044         	call	_SendNEC_bytes	;wreg free
 15711                           
 15712                           ;IR.c: 429: while(!Sent)
 15713  00865A  D01C               	goto	l15131
 15714  00865C                     l15113:
 15715                           
 15716                           ;IR.c: 430: {
 15717                           ;IR.c: 431: if(IRmod)
 15718  00865C  0100               	movlb	0	; () banked
 15719  00865E  51DA               	movf	_IRmod& (0+255),w,b	;volatile
 15720  008660  B4D8               	btfsc	status,2,c
 15721  008662  D013               	goto	l15127
 15722                           
 15723                           ; BSR set to: 0
 15724                           ;IR.c: 432: {
 15725                           ;IR.c: 434: if(toggle < 9)
 15726  008664  0E09               	movlw	9
 15727  008666  0100               	movlb	0	; () banked
 15728  008668  6196               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15729  00866A  D002               	goto	l15119
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;IR.c: 435: {
 15733                           ;IR.c: 436: (LATC |= 0x08);
 15734  00866C  868B               	bsf	3979,3,c	;volatile
 15735                           
 15736                           ;IR.c: 437: }
 15737  00866E  D00A               	goto	l15125
 15738  008670                     l15119:
 15739                           
 15740                           ; BSR set to: 0
 15741                           ;IR.c: 438: else if(toggle < 17)
 15742  008670  0E11               	movlw	17
 15743  008672  0100               	movlb	0	; () banked
 15744  008674  6196               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15745  008676  D002               	goto	l15123
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;IR.c: 439: {
 15749                           ;IR.c: 440: (LATC &= ~0x08);
 15750  008678  968B               	bcf	3979,3,c	;volatile
 15751                           
 15752                           ;IR.c: 441: }
 15753  00867A  D004               	goto	l15125
 15754  00867C                     l15123:
 15755                           
 15756                           ; BSR set to: 0
 15757                           ;IR.c: 442: else
 15758                           ;IR.c: 443: {
 15759                           ;IR.c: 444: toggle = 0;
 15760  00867C  0E00               	movlw	0
 15761  00867E  0100               	movlb	0	; () banked
 15762  008680  6F96               	movwf	SendNEC_wait@toggle& (0+255),b
 15763                           
 15764                           ; BSR set to: 0
 15765  008682  D000               	goto	l15125
 15766  008684                     l15125:
 15767                           
 15768                           ; BSR set to: 0
 15769                           ;IR.c: 445: }
 15770                           ;IR.c: 446: toggle++;
 15771  008684  0100               	movlb	0	; () banked
 15772  008686  2B96               	incf	SendNEC_wait@toggle& (0+255),f,b
 15773                           
 15774                           ;IR.c: 447: }
 15775  008688  D005               	goto	l15131
 15776  00868A                     l15127:
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;IR.c: 448: else
 15780                           ;IR.c: 449: {
 15781                           ;IR.c: 450: (LATC &= ~0x08);
 15782  00868A  968B               	bcf	3979,3,c	;volatile
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;IR.c: 451: toggle = 0;
 15786  00868C  0E00               	movlw	0
 15787  00868E  0100               	movlb	0	; () banked
 15788  008690  6F96               	movwf	SendNEC_wait@toggle& (0+255),b
 15789                           
 15790                           ; BSR set to: 0
 15791  008692  D000               	goto	l15131
 15792  008694                     l15131:
 15793  008694  0100               	movlb	0	; () banked
 15794  008696  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15795  008698  B4D8               	btfsc	status,2,c
 15796  00869A  D7E0               	goto	l15113
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;IR.c: 452: }
 15800                           ;IR.c: 453: }
 15801                           ;IR.c: 455: if(IRbitPosition)
 15802                           
 15803                           ; BSR set to: 0
 15804  00869C  5040               	movf	_IRbitPosition,w,c	;volatile
 15805  00869E  A4D8               	btfss	status,2,c
 15806                           
 15807                           ; BSR set to: 0
 15808                           ;IR.c: 456: {
 15809                           ;IR.c: 458: __nop();
 15810  0086A0  F000               	nop	
 15811                           
 15812                           ;IR.c: 459: }
 15813                           ;IR.c: 461: INTCONbits.PEIE = 1;
 15814  0086A2  8CF2               	bsf	intcon,6,c	;volatile
 15815                           
 15816                           ;IR.c: 462: delayUS(8000);
 15817  0086A4  0E40               	movlw	64
 15818  0086A6  0100               	movlb	0	; () banked
 15819  0086A8  6F7C               	movwf	delayUS@US& (0+255),b
 15820  0086AA  0E1F               	movlw	31
 15821  0086AC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 15822  0086AE  0E00               	movlw	0
 15823  0086B0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 15824  0086B2  0E00               	movlw	0
 15825  0086B4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 15826  0086B6  EC8C  F047         	call	_delayUS	;wreg free
 15827                           
 15828                           ;IR.c: 463: IRpinOLD = ReadIRpin();
 15829  0086BA  ECA7  F04A         	call	_ReadIRpin	;wreg free
 15830  0086BE  6E2F               	movwf	_IRpinOLD,c
 15831                           
 15832                           ;IR.c: 464: INTCONbits.RBIF = 0;
 15833  0086C0  90F2               	bcf	intcon,0,c	;volatile
 15834                           
 15835                           ;IR.c: 465: (IOCBbits.IOCB4 = 1);
 15836  0086C2  887D               	bsf	3965,4,c	;volatile
 15837                           
 15838                           ;IR.c: 466: INTCONbits.RBIE = 1;
 15839  0086C4  86F2               	bsf	intcon,3,c	;volatile
 15840  0086C6  0012               	return		;funcret
 15841  0086C8                     __end_of_SendNEC_wait:
 15842                           	opt stack 0
 15843                           tblptru	equ	0xFF8
 15844                           tblptrh	equ	0xFF7
 15845                           tblptrl	equ	0xFF6
 15846                           tablat	equ	0xFF5
 15847                           prodh	equ	0xFF4
 15848                           prodl	equ	0xFF3
 15849                           intcon	equ	0xFF2
 15850                           indf0	equ	0xFEF
 15851                           postinc0	equ	0xFEE
 15852                           fsr0h	equ	0xFEA
 15853                           fsr0l	equ	0xFE9
 15854                           wreg	equ	0xFE8
 15855                           indf1	equ	0xFE7
 15856                           postdec1	equ	0xFE5
 15857                           fsr1h	equ	0xFE2
 15858                           fsr1l	equ	0xFE1
 15859                           indf2	equ	0xFDF
 15860                           postinc2	equ	0xFDE
 15861                           fsr2h	equ	0xFDA
 15862                           fsr2l	equ	0xFD9
 15863                           status	equ	0xFD8
 15864                           
 15865 ;; *************** function _SendNEC_bytes *****************
 15866 ;; Defined at:
 15867 ;;		line 356 in file "IR.c"
 15868 ;; Parameters:    Size  Location     Type
 15869 ;;  code            4   44[BANK0 ] unsigned long 
 15870 ;;  RepeatAmount    1   48[BANK0 ] unsigned char 
 15871 ;; Auto vars:     Size  Location     Type
 15872 ;;		None
 15873 ;; Return value:  Size  Location     Type
 15874 ;;                  1    wreg      unsigned char 
 15875 ;; Registers used:
 15876 ;;		wreg, status,2, status,0, cstack
 15877 ;; Tracked objects:
 15878 ;;		On entry : 0/0
 15879 ;;		On exit  : 0/0
 15880 ;;		Unchanged: 0/0
 15881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15882 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15886 ;;Total ram usage:        5 bytes
 15887 ;; Hardware stack levels used:    1
 15888 ;; Hardware stack levels required when called:    7
 15889 ;; This function calls:
 15890 ;;		_Reverse_4Byte
 15891 ;; This function is called by:
 15892 ;;		_SendNEC_wait
 15893 ;; This function uses a non-reentrant model
 15894 ;;
 15895                           
 15896                           	psect	text20
 15897  008876                     __ptext20:
 15898                           	opt stack 0
 15899  008876                     _SendNEC_bytes:
 15900                           	opt stack 21
 15901                           
 15902                           ;IR.c: 385: if(Sent)
 15903                           
 15904                           ;incstack = 0
 15905  008876  0100               	movlb	0	; () banked
 15906  008878  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15907  00887A  B4D8               	btfsc	status,2,c
 15908  00887C  0012               	return	
 15909                           
 15910                           ; BSR set to: 0
 15911                           ;IR.c: 386: {
 15912                           ;IR.c: 388: if(!code)
 15913  00887E  0100               	movlb	0	; () banked
 15914  008880  518C               	movf	SendNEC_bytes@code& (0+255),w,b
 15915  008882  0100               	movlb	0	; () banked
 15916  008884  118D               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 15917  008886  0100               	movlb	0	; () banked
 15918  008888  118E               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 15919  00888A  0100               	movlb	0	; () banked
 15920  00888C  118F               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 15921  00888E  B4D8               	btfsc	status,2,c
 15922  008890  0012               	return	
 15923  008892  D001               	goto	l14075
 15924                           
 15925                           ; BSR set to: 0
 15926                           ;IR.c: 389: {
 15927                           ;IR.c: 390: return 0;
 15928                           ;	Return value of _SendNEC_bytes is never used
 15929  008894  0012               	return	
 15930  008896                     l14075:
 15931                           
 15932                           ; BSR set to: 0
 15933                           ;IR.c: 391: }
 15934                           ;IR.c: 392: RF_IR = 66;
 15935  008896  0E42               	movlw	66
 15936  008898  6E42               	movwf	_RF_IR,c
 15937                           
 15938                           ;IR.c: 393: Sent = 0;
 15939  00889A  0E00               	movlw	0
 15940  00889C  0100               	movlb	0	; () banked
 15941  00889E  6FE3               	movwf	_Sent& (0+255),b	;volatile
 15942                           
 15943                           ;IR.c: 394: IRsendFlag = 1;
 15944  0088A0  0E01               	movlw	1
 15945  0088A2  6E33               	movwf	_IRsendFlag,c
 15946                           
 15947                           ;IR.c: 395: IRcodeBit = 0;
 15948  0088A4  0E00               	movlw	0
 15949  0088A6  6E2E               	movwf	_IRcodeBit,c
 15950                           
 15951                           ;IR.c: 396: IRcodePlace = 7;
 15952  0088A8  0E07               	movlw	7
 15953  0088AA  6E41               	movwf	_IRcodePlace,c
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;IR.c: 397: IRsendCode = Reverse_4Byte(code);
 15957  0088AC  C08C  F07C         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 15958  0088B0  C08D  F07D         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 15959  0088B4  C08E  F07E         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 15960  0088B8  C08F  F07F         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 15961  0088BC  EC91  F018         	call	_Reverse_4Byte	;wreg free
 15962  0088C0  C07C  F023         	movff	?_Reverse_4Byte,_IRsendCode
 15963  0088C4  C07D  F024         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 15964  0088C8  C07E  F025         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 15965  0088CC  C07F  F026         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 15966                           
 15967                           ;IR.c: 398: if(RepeatAmount)
 15968  0088D0  0100               	movlb	0	; () banked
 15969  0088D2  5190               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 15970  0088D4  0100               	movlb	0	; () banked
 15971  0088D6  B4D8               	btfsc	status,2,c
 15972  0088D8  D003               	goto	l14083
 15973                           
 15974                           ; BSR set to: 0
 15975                           ;IR.c: 399: {
 15976                           ;IR.c: 400: IRrepeatflag = 1;
 15977  0088DA  0E01               	movlw	1
 15978  0088DC  6E32               	movwf	_IRrepeatflag,c
 15979  0088DE  D000               	goto	l14083
 15980  0088E0                     l14083:
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;IR.c: 401: }
 15984                           ;IR.c: 402: IRrepeatAmount = RepeatAmount;
 15985  0088E0  C090  F031         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 15986                           
 15987                           ;IR.c: 403: (TMR2 = 0);
 15988  0088E4  0E00               	movlw	0
 15989  0088E6  6ECC               	movwf	4044,c	;volatile
 15990                           
 15991                           ;IR.c: 404: (PR2 = 150);
 15992  0088E8  0E96               	movlw	150
 15993  0088EA  6ECB               	movwf	4043,c	;volatile
 15994                           
 15995                           ;IR.c: 405: RF_IR_Postscaler = 4;
 15996  0088EC  0E04               	movlw	4
 15997  0088EE  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15998                           
 15999                           ;IR.c: 406: (IRmod = 1);
 16000  0088F0  0E01               	movlw	1
 16001  0088F2  0100               	movlb	0	; () banked
 16002  0088F4  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 16003                           
 16004                           ; BSR set to: 0
 16005                           ;IR.c: 407: (T2CONbits.TMR2ON = 1);
 16006  0088F6  84CA               	bsf	4042,2,c	;volatile
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;IR.c: 408: return 1;
 16010                           ;	Return value of _SendNEC_bytes is never used
 16011  0088F8  0012               	return	
 16012                           
 16013                           ; BSR set to: 0
 16014                           
 16015                           ; BSR set to: 0
 16016                           ;IR.c: 409: }
 16017                           ;IR.c: 410: return 2;
 16018                           ;	Return value of _SendNEC_bytes is never used
 16019  0088FA  0012               	return		;funcret
 16020  0088FC                     __end_of_SendNEC_bytes:
 16021                           	opt stack 0
 16022                           tblptru	equ	0xFF8
 16023                           tblptrh	equ	0xFF7
 16024                           tblptrl	equ	0xFF6
 16025                           tablat	equ	0xFF5
 16026                           prodh	equ	0xFF4
 16027                           prodl	equ	0xFF3
 16028                           intcon	equ	0xFF2
 16029                           indf0	equ	0xFEF
 16030                           postinc0	equ	0xFEE
 16031                           fsr0h	equ	0xFEA
 16032                           fsr0l	equ	0xFE9
 16033                           wreg	equ	0xFE8
 16034                           indf1	equ	0xFE7
 16035                           postdec1	equ	0xFE5
 16036                           fsr1h	equ	0xFE2
 16037                           fsr1l	equ	0xFE1
 16038                           indf2	equ	0xFDF
 16039                           postinc2	equ	0xFDE
 16040                           fsr2h	equ	0xFDA
 16041                           fsr2l	equ	0xFD9
 16042                           status	equ	0xFD8
 16043                           
 16044 ;; *************** function _Reverse_4Byte *****************
 16045 ;; Defined at:
 16046 ;;		line 412 in file "MISC.c"
 16047 ;; Parameters:    Size  Location     Type
 16048 ;;  This            4   28[BANK0 ] unsigned long 
 16049 ;; Auto vars:     Size  Location     Type
 16050 ;;  temp            4   40[BANK0 ] unsigned long 
 16051 ;; Return value:  Size  Location     Type
 16052 ;;                  4   28[BANK0 ] unsigned long 
 16053 ;; Registers used:
 16054 ;;		wreg, status,2, status,0
 16055 ;; Tracked objects:
 16056 ;;		On entry : 0/0
 16057 ;;		On exit  : 0/0
 16058 ;;		Unchanged: 0/0
 16059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16061 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16062 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16063 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16064 ;;Total ram usage:       16 bytes
 16065 ;; Hardware stack levels used:    1
 16066 ;; Hardware stack levels required when called:    6
 16067 ;; This function calls:
 16068 ;;		Nothing
 16069 ;; This function is called by:
 16070 ;;		_SendNEC_bytes
 16071 ;; This function uses a non-reentrant model
 16072 ;;
 16073                           
 16074                           	psect	text21
 16075  003122                     __ptext21:
 16076                           	opt stack 0
 16077  003122                     _Reverse_4Byte:
 16078                           	opt stack 21
 16079                           
 16080                           ;MISC.c: 414: unsigned long temp=0;
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;incstack = 0
 16084  003122  0E00               	movlw	0
 16085  003124  0100               	movlb	0	; () banked
 16086  003126  6F88               	movwf	Reverse_4Byte@temp& (0+255),b
 16087  003128  0E00               	movlw	0
 16088  00312A  6F89               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 16089  00312C  0E00               	movlw	0
 16090  00312E  6F8A               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 16091  003130  0E00               	movlw	0
 16092  003132  6F8B               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 16093                           
 16094                           ; BSR set to: 0
 16095                           ;MISC.c: 416: temp += (This & 0x00000001) << 31;
 16096  003134  0E01               	movlw	1
 16097  003136  0100               	movlb	0	; () banked
 16098  003138  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16099  00313A  0100               	movlb	0	; () banked
 16100  00313C  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16101  00313E  0E00               	movlw	0
 16102  003140  0100               	movlb	0	; () banked
 16103  003142  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16104  003144  0100               	movlb	0	; () banked
 16105  003146  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16106  003148  0E00               	movlw	0
 16107  00314A  0100               	movlb	0	; () banked
 16108  00314C  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16109  00314E  0100               	movlb	0	; () banked
 16110  003150  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16111  003152  0E00               	movlw	0
 16112  003154  0100               	movlb	0	; () banked
 16113  003156  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16114  003158  0100               	movlb	0	; () banked
 16115  00315A  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16116  00315C  0E1F               	movlw	31
 16117  00315E                     u15875:
 16118  00315E  90D8               	bcf	status,0,c
 16119  003160  0100               	movlb	0	; () banked
 16120  003162  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16121  003164  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16122  003166  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16123  003168  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16124  00316A  2EE8               	decfsz	wreg,f,c
 16125  00316C  D7F8               	goto	u15875
 16126  00316E  0100               	movlb	0	; () banked
 16127  003170  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16128  003172  0100               	movlb	0	; () banked
 16129  003174  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16130  003176  0100               	movlb	0	; () banked
 16131  003178  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16132  00317A  0100               	movlb	0	; () banked
 16133  00317C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16134  00317E  0100               	movlb	0	; () banked
 16135  003180  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16136  003182  0100               	movlb	0	; () banked
 16137  003184  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16138  003186  0100               	movlb	0	; () banked
 16139  003188  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16140  00318A  0100               	movlb	0	; () banked
 16141  00318C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;MISC.c: 417: temp += (This & 0x00000002) << 29;
 16145  00318E  0E02               	movlw	2
 16146  003190  0100               	movlb	0	; () banked
 16147  003192  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16148  003194  0100               	movlb	0	; () banked
 16149  003196  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16150  003198  0E00               	movlw	0
 16151  00319A  0100               	movlb	0	; () banked
 16152  00319C  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16153  00319E  0100               	movlb	0	; () banked
 16154  0031A0  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16155  0031A2  0E00               	movlw	0
 16156  0031A4  0100               	movlb	0	; () banked
 16157  0031A6  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16158  0031A8  0100               	movlb	0	; () banked
 16159  0031AA  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16160  0031AC  0E00               	movlw	0
 16161  0031AE  0100               	movlb	0	; () banked
 16162  0031B0  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16163  0031B2  0100               	movlb	0	; () banked
 16164  0031B4  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16165  0031B6  0E1D               	movlw	29
 16166  0031B8                     u15885:
 16167  0031B8  90D8               	bcf	status,0,c
 16168  0031BA  0100               	movlb	0	; () banked
 16169  0031BC  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16170  0031BE  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16171  0031C0  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16172  0031C2  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16173  0031C4  2EE8               	decfsz	wreg,f,c
 16174  0031C6  D7F8               	goto	u15885
 16175  0031C8  0100               	movlb	0	; () banked
 16176  0031CA  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16177  0031CC  0100               	movlb	0	; () banked
 16178  0031CE  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16179  0031D0  0100               	movlb	0	; () banked
 16180  0031D2  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16181  0031D4  0100               	movlb	0	; () banked
 16182  0031D6  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16183  0031D8  0100               	movlb	0	; () banked
 16184  0031DA  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16185  0031DC  0100               	movlb	0	; () banked
 16186  0031DE  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16187  0031E0  0100               	movlb	0	; () banked
 16188  0031E2  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16189  0031E4  0100               	movlb	0	; () banked
 16190  0031E6  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16191                           
 16192                           ; BSR set to: 0
 16193                           ;MISC.c: 418: temp += (This & 0x00000004) << 27;
 16194  0031E8  0E04               	movlw	4
 16195  0031EA  0100               	movlb	0	; () banked
 16196  0031EC  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16197  0031EE  0100               	movlb	0	; () banked
 16198  0031F0  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16199  0031F2  0E00               	movlw	0
 16200  0031F4  0100               	movlb	0	; () banked
 16201  0031F6  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16202  0031F8  0100               	movlb	0	; () banked
 16203  0031FA  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16204  0031FC  0E00               	movlw	0
 16205  0031FE  0100               	movlb	0	; () banked
 16206  003200  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16207  003202  0100               	movlb	0	; () banked
 16208  003204  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16209  003206  0E00               	movlw	0
 16210  003208  0100               	movlb	0	; () banked
 16211  00320A  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16212  00320C  0100               	movlb	0	; () banked
 16213  00320E  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16214  003210  0E1B               	movlw	27
 16215  003212                     u15895:
 16216  003212  90D8               	bcf	status,0,c
 16217  003214  0100               	movlb	0	; () banked
 16218  003216  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16219  003218  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16220  00321A  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16221  00321C  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16222  00321E  2EE8               	decfsz	wreg,f,c
 16223  003220  D7F8               	goto	u15895
 16224  003222  0100               	movlb	0	; () banked
 16225  003224  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16226  003226  0100               	movlb	0	; () banked
 16227  003228  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16228  00322A  0100               	movlb	0	; () banked
 16229  00322C  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16230  00322E  0100               	movlb	0	; () banked
 16231  003230  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16232  003232  0100               	movlb	0	; () banked
 16233  003234  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16234  003236  0100               	movlb	0	; () banked
 16235  003238  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16236  00323A  0100               	movlb	0	; () banked
 16237  00323C  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16238  00323E  0100               	movlb	0	; () banked
 16239  003240  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;MISC.c: 419: temp += (This & 0x00000008) << 25;
 16243  003242  0E08               	movlw	8
 16244  003244  0100               	movlb	0	; () banked
 16245  003246  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16246  003248  0100               	movlb	0	; () banked
 16247  00324A  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16248  00324C  0E00               	movlw	0
 16249  00324E  0100               	movlb	0	; () banked
 16250  003250  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16251  003252  0100               	movlb	0	; () banked
 16252  003254  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16253  003256  0E00               	movlw	0
 16254  003258  0100               	movlb	0	; () banked
 16255  00325A  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16256  00325C  0100               	movlb	0	; () banked
 16257  00325E  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16258  003260  0E00               	movlw	0
 16259  003262  0100               	movlb	0	; () banked
 16260  003264  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16261  003266  0100               	movlb	0	; () banked
 16262  003268  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16263  00326A  0E19               	movlw	25
 16264  00326C                     u15905:
 16265  00326C  90D8               	bcf	status,0,c
 16266  00326E  0100               	movlb	0	; () banked
 16267  003270  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16268  003272  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16269  003274  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16270  003276  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16271  003278  2EE8               	decfsz	wreg,f,c
 16272  00327A  D7F8               	goto	u15905
 16273  00327C  0100               	movlb	0	; () banked
 16274  00327E  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16275  003280  0100               	movlb	0	; () banked
 16276  003282  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16277  003284  0100               	movlb	0	; () banked
 16278  003286  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16279  003288  0100               	movlb	0	; () banked
 16280  00328A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16281  00328C  0100               	movlb	0	; () banked
 16282  00328E  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16283  003290  0100               	movlb	0	; () banked
 16284  003292  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16285  003294  0100               	movlb	0	; () banked
 16286  003296  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16287  003298  0100               	movlb	0	; () banked
 16288  00329A  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16289                           
 16290                           ; BSR set to: 0
 16291                           ;MISC.c: 420: temp += (This & 0x00000010) << 23;
 16292  00329C  0E10               	movlw	16
 16293  00329E  0100               	movlb	0	; () banked
 16294  0032A0  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16295  0032A2  0100               	movlb	0	; () banked
 16296  0032A4  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16297  0032A6  0E00               	movlw	0
 16298  0032A8  0100               	movlb	0	; () banked
 16299  0032AA  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16300  0032AC  0100               	movlb	0	; () banked
 16301  0032AE  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16302  0032B0  0E00               	movlw	0
 16303  0032B2  0100               	movlb	0	; () banked
 16304  0032B4  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16305  0032B6  0100               	movlb	0	; () banked
 16306  0032B8  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16307  0032BA  0E00               	movlw	0
 16308  0032BC  0100               	movlb	0	; () banked
 16309  0032BE  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16310  0032C0  0100               	movlb	0	; () banked
 16311  0032C2  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16312  0032C4  0E17               	movlw	23
 16313  0032C6                     u15915:
 16314  0032C6  90D8               	bcf	status,0,c
 16315  0032C8  0100               	movlb	0	; () banked
 16316  0032CA  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16317  0032CC  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16318  0032CE  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16319  0032D0  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16320  0032D2  2EE8               	decfsz	wreg,f,c
 16321  0032D4  D7F8               	goto	u15915
 16322  0032D6  0100               	movlb	0	; () banked
 16323  0032D8  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16324  0032DA  0100               	movlb	0	; () banked
 16325  0032DC  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16326  0032DE  0100               	movlb	0	; () banked
 16327  0032E0  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16328  0032E2  0100               	movlb	0	; () banked
 16329  0032E4  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16330  0032E6  0100               	movlb	0	; () banked
 16331  0032E8  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16332  0032EA  0100               	movlb	0	; () banked
 16333  0032EC  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16334  0032EE  0100               	movlb	0	; () banked
 16335  0032F0  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16336  0032F2  0100               	movlb	0	; () banked
 16337  0032F4  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;MISC.c: 421: temp += (This & 0x00000020) << 21;
 16341  0032F6  0E20               	movlw	32
 16342  0032F8  0100               	movlb	0	; () banked
 16343  0032FA  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16344  0032FC  0100               	movlb	0	; () banked
 16345  0032FE  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16346  003300  0E00               	movlw	0
 16347  003302  0100               	movlb	0	; () banked
 16348  003304  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16349  003306  0100               	movlb	0	; () banked
 16350  003308  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16351  00330A  0E00               	movlw	0
 16352  00330C  0100               	movlb	0	; () banked
 16353  00330E  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16354  003310  0100               	movlb	0	; () banked
 16355  003312  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16356  003314  0E00               	movlw	0
 16357  003316  0100               	movlb	0	; () banked
 16358  003318  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16359  00331A  0100               	movlb	0	; () banked
 16360  00331C  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16361  00331E  0E15               	movlw	21
 16362  003320                     u15925:
 16363  003320  90D8               	bcf	status,0,c
 16364  003322  0100               	movlb	0	; () banked
 16365  003324  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16366  003326  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16367  003328  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16368  00332A  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16369  00332C  2EE8               	decfsz	wreg,f,c
 16370  00332E  D7F8               	goto	u15925
 16371  003330  0100               	movlb	0	; () banked
 16372  003332  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16373  003334  0100               	movlb	0	; () banked
 16374  003336  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16375  003338  0100               	movlb	0	; () banked
 16376  00333A  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16377  00333C  0100               	movlb	0	; () banked
 16378  00333E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16379  003340  0100               	movlb	0	; () banked
 16380  003342  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16381  003344  0100               	movlb	0	; () banked
 16382  003346  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16383  003348  0100               	movlb	0	; () banked
 16384  00334A  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16385  00334C  0100               	movlb	0	; () banked
 16386  00334E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;MISC.c: 422: temp += (This & 0x00000040) << 19;
 16390  003350  0E40               	movlw	64
 16391  003352  0100               	movlb	0	; () banked
 16392  003354  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16393  003356  0100               	movlb	0	; () banked
 16394  003358  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16395  00335A  0E00               	movlw	0
 16396  00335C  0100               	movlb	0	; () banked
 16397  00335E  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16398  003360  0100               	movlb	0	; () banked
 16399  003362  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16400  003364  0E00               	movlw	0
 16401  003366  0100               	movlb	0	; () banked
 16402  003368  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16403  00336A  0100               	movlb	0	; () banked
 16404  00336C  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16405  00336E  0E00               	movlw	0
 16406  003370  0100               	movlb	0	; () banked
 16407  003372  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16408  003374  0100               	movlb	0	; () banked
 16409  003376  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16410  003378  0E13               	movlw	19
 16411  00337A                     u15935:
 16412  00337A  90D8               	bcf	status,0,c
 16413  00337C  0100               	movlb	0	; () banked
 16414  00337E  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16415  003380  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16416  003382  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16417  003384  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16418  003386  2EE8               	decfsz	wreg,f,c
 16419  003388  D7F8               	goto	u15935
 16420  00338A  0100               	movlb	0	; () banked
 16421  00338C  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16422  00338E  0100               	movlb	0	; () banked
 16423  003390  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16424  003392  0100               	movlb	0	; () banked
 16425  003394  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16426  003396  0100               	movlb	0	; () banked
 16427  003398  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16428  00339A  0100               	movlb	0	; () banked
 16429  00339C  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16430  00339E  0100               	movlb	0	; () banked
 16431  0033A0  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16432  0033A2  0100               	movlb	0	; () banked
 16433  0033A4  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16434  0033A6  0100               	movlb	0	; () banked
 16435  0033A8  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;MISC.c: 423: temp += (This & 0x00000080) << 17;
 16439  0033AA  0E80               	movlw	128
 16440  0033AC  0100               	movlb	0	; () banked
 16441  0033AE  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16442  0033B0  0100               	movlb	0	; () banked
 16443  0033B2  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16444  0033B4  0E00               	movlw	0
 16445  0033B6  0100               	movlb	0	; () banked
 16446  0033B8  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16447  0033BA  0100               	movlb	0	; () banked
 16448  0033BC  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16449  0033BE  0E00               	movlw	0
 16450  0033C0  0100               	movlb	0	; () banked
 16451  0033C2  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16452  0033C4  0100               	movlb	0	; () banked
 16453  0033C6  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16454  0033C8  0E00               	movlw	0
 16455  0033CA  0100               	movlb	0	; () banked
 16456  0033CC  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16457  0033CE  0100               	movlb	0	; () banked
 16458  0033D0  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16459  0033D2  0E11               	movlw	17
 16460  0033D4                     u15945:
 16461  0033D4  90D8               	bcf	status,0,c
 16462  0033D6  0100               	movlb	0	; () banked
 16463  0033D8  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16464  0033DA  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16465  0033DC  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16466  0033DE  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16467  0033E0  2EE8               	decfsz	wreg,f,c
 16468  0033E2  D7F8               	goto	u15945
 16469  0033E4  0100               	movlb	0	; () banked
 16470  0033E6  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16471  0033E8  0100               	movlb	0	; () banked
 16472  0033EA  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16473  0033EC  0100               	movlb	0	; () banked
 16474  0033EE  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16475  0033F0  0100               	movlb	0	; () banked
 16476  0033F2  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16477  0033F4  0100               	movlb	0	; () banked
 16478  0033F6  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16479  0033F8  0100               	movlb	0	; () banked
 16480  0033FA  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16481  0033FC  0100               	movlb	0	; () banked
 16482  0033FE  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16483  003400  0100               	movlb	0	; () banked
 16484  003402  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;MISC.c: 424: temp += (This & 0x00000100) << 15;
 16488  003404  0E00               	movlw	0
 16489  003406  0100               	movlb	0	; () banked
 16490  003408  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16491  00340A  0100               	movlb	0	; () banked
 16492  00340C  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16493  00340E  0E01               	movlw	1
 16494  003410  0100               	movlb	0	; () banked
 16495  003412  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16496  003414  0100               	movlb	0	; () banked
 16497  003416  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16498  003418  0E00               	movlw	0
 16499  00341A  0100               	movlb	0	; () banked
 16500  00341C  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16501  00341E  0100               	movlb	0	; () banked
 16502  003420  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16503  003422  0E00               	movlw	0
 16504  003424  0100               	movlb	0	; () banked
 16505  003426  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16506  003428  0100               	movlb	0	; () banked
 16507  00342A  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16508  00342C  0E0F               	movlw	15
 16509  00342E                     u15955:
 16510  00342E  90D8               	bcf	status,0,c
 16511  003430  0100               	movlb	0	; () banked
 16512  003432  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16513  003434  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16514  003436  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16515  003438  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16516  00343A  2EE8               	decfsz	wreg,f,c
 16517  00343C  D7F8               	goto	u15955
 16518  00343E  0100               	movlb	0	; () banked
 16519  003440  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16520  003442  0100               	movlb	0	; () banked
 16521  003444  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16522  003446  0100               	movlb	0	; () banked
 16523  003448  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16524  00344A  0100               	movlb	0	; () banked
 16525  00344C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16526  00344E  0100               	movlb	0	; () banked
 16527  003450  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16528  003452  0100               	movlb	0	; () banked
 16529  003454  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16530  003456  0100               	movlb	0	; () banked
 16531  003458  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16532  00345A  0100               	movlb	0	; () banked
 16533  00345C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16534                           
 16535                           ; BSR set to: 0
 16536                           ;MISC.c: 425: temp += (This & 0x00000200) << 13;
 16537  00345E  0E00               	movlw	0
 16538  003460  0100               	movlb	0	; () banked
 16539  003462  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16540  003464  0100               	movlb	0	; () banked
 16541  003466  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16542  003468  0E02               	movlw	2
 16543  00346A  0100               	movlb	0	; () banked
 16544  00346C  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16545  00346E  0100               	movlb	0	; () banked
 16546  003470  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16547  003472  0E00               	movlw	0
 16548  003474  0100               	movlb	0	; () banked
 16549  003476  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16550  003478  0100               	movlb	0	; () banked
 16551  00347A  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16552  00347C  0E00               	movlw	0
 16553  00347E  0100               	movlb	0	; () banked
 16554  003480  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16555  003482  0100               	movlb	0	; () banked
 16556  003484  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16557  003486  0E0D               	movlw	13
 16558  003488                     u15965:
 16559  003488  90D8               	bcf	status,0,c
 16560  00348A  0100               	movlb	0	; () banked
 16561  00348C  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16562  00348E  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16563  003490  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16564  003492  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16565  003494  2EE8               	decfsz	wreg,f,c
 16566  003496  D7F8               	goto	u15965
 16567  003498  0100               	movlb	0	; () banked
 16568  00349A  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16569  00349C  0100               	movlb	0	; () banked
 16570  00349E  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16571  0034A0  0100               	movlb	0	; () banked
 16572  0034A2  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16573  0034A4  0100               	movlb	0	; () banked
 16574  0034A6  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16575  0034A8  0100               	movlb	0	; () banked
 16576  0034AA  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16577  0034AC  0100               	movlb	0	; () banked
 16578  0034AE  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16579  0034B0  0100               	movlb	0	; () banked
 16580  0034B2  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16581  0034B4  0100               	movlb	0	; () banked
 16582  0034B6  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;MISC.c: 426: temp += (This & 0x00000400) << 11;
 16586  0034B8  0E00               	movlw	0
 16587  0034BA  0100               	movlb	0	; () banked
 16588  0034BC  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16589  0034BE  0100               	movlb	0	; () banked
 16590  0034C0  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16591  0034C2  0E04               	movlw	4
 16592  0034C4  0100               	movlb	0	; () banked
 16593  0034C6  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16594  0034C8  0100               	movlb	0	; () banked
 16595  0034CA  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16596  0034CC  0E00               	movlw	0
 16597  0034CE  0100               	movlb	0	; () banked
 16598  0034D0  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16599  0034D2  0100               	movlb	0	; () banked
 16600  0034D4  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16601  0034D6  0E00               	movlw	0
 16602  0034D8  0100               	movlb	0	; () banked
 16603  0034DA  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16604  0034DC  0100               	movlb	0	; () banked
 16605  0034DE  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16606  0034E0  0E0B               	movlw	11
 16607  0034E2                     u15975:
 16608  0034E2  90D8               	bcf	status,0,c
 16609  0034E4  0100               	movlb	0	; () banked
 16610  0034E6  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16611  0034E8  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16612  0034EA  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16613  0034EC  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16614  0034EE  2EE8               	decfsz	wreg,f,c
 16615  0034F0  D7F8               	goto	u15975
 16616  0034F2  0100               	movlb	0	; () banked
 16617  0034F4  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16618  0034F6  0100               	movlb	0	; () banked
 16619  0034F8  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16620  0034FA  0100               	movlb	0	; () banked
 16621  0034FC  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16622  0034FE  0100               	movlb	0	; () banked
 16623  003500  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16624  003502  0100               	movlb	0	; () banked
 16625  003504  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16626  003506  0100               	movlb	0	; () banked
 16627  003508  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16628  00350A  0100               	movlb	0	; () banked
 16629  00350C  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16630  00350E  0100               	movlb	0	; () banked
 16631  003510  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;MISC.c: 427: temp += (This & 0x00000800) << 9;
 16635  003512  0E00               	movlw	0
 16636  003514  0100               	movlb	0	; () banked
 16637  003516  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16638  003518  0100               	movlb	0	; () banked
 16639  00351A  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16640  00351C  0E08               	movlw	8
 16641  00351E  0100               	movlb	0	; () banked
 16642  003520  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16643  003522  0100               	movlb	0	; () banked
 16644  003524  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16645  003526  0E00               	movlw	0
 16646  003528  0100               	movlb	0	; () banked
 16647  00352A  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16648  00352C  0100               	movlb	0	; () banked
 16649  00352E  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16650  003530  0E00               	movlw	0
 16651  003532  0100               	movlb	0	; () banked
 16652  003534  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16653  003536  0100               	movlb	0	; () banked
 16654  003538  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16655  00353A  0E09               	movlw	9
 16656  00353C                     u15985:
 16657  00353C  90D8               	bcf	status,0,c
 16658  00353E  0100               	movlb	0	; () banked
 16659  003540  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16660  003542  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16661  003544  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16662  003546  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16663  003548  2EE8               	decfsz	wreg,f,c
 16664  00354A  D7F8               	goto	u15985
 16665  00354C  0100               	movlb	0	; () banked
 16666  00354E  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16667  003550  0100               	movlb	0	; () banked
 16668  003552  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16669  003554  0100               	movlb	0	; () banked
 16670  003556  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16671  003558  0100               	movlb	0	; () banked
 16672  00355A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16673  00355C  0100               	movlb	0	; () banked
 16674  00355E  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16675  003560  0100               	movlb	0	; () banked
 16676  003562  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16677  003564  0100               	movlb	0	; () banked
 16678  003566  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16679  003568  0100               	movlb	0	; () banked
 16680  00356A  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16681                           
 16682                           ; BSR set to: 0
 16683                           ;MISC.c: 428: temp += (This & 0x00001000) << 7;
 16684  00356C  0E00               	movlw	0
 16685  00356E  0100               	movlb	0	; () banked
 16686  003570  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16687  003572  0100               	movlb	0	; () banked
 16688  003574  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16689  003576  0E10               	movlw	16
 16690  003578  0100               	movlb	0	; () banked
 16691  00357A  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16692  00357C  0100               	movlb	0	; () banked
 16693  00357E  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16694  003580  0E00               	movlw	0
 16695  003582  0100               	movlb	0	; () banked
 16696  003584  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16697  003586  0100               	movlb	0	; () banked
 16698  003588  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16699  00358A  0E00               	movlw	0
 16700  00358C  0100               	movlb	0	; () banked
 16701  00358E  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16702  003590  0100               	movlb	0	; () banked
 16703  003592  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16704  003594  0E07               	movlw	7
 16705  003596                     u15995:
 16706  003596  90D8               	bcf	status,0,c
 16707  003598  0100               	movlb	0	; () banked
 16708  00359A  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16709  00359C  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16710  00359E  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16711  0035A0  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16712  0035A2  2EE8               	decfsz	wreg,f,c
 16713  0035A4  D7F8               	goto	u15995
 16714  0035A6  0100               	movlb	0	; () banked
 16715  0035A8  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16716  0035AA  0100               	movlb	0	; () banked
 16717  0035AC  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16718  0035AE  0100               	movlb	0	; () banked
 16719  0035B0  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16720  0035B2  0100               	movlb	0	; () banked
 16721  0035B4  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16722  0035B6  0100               	movlb	0	; () banked
 16723  0035B8  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16724  0035BA  0100               	movlb	0	; () banked
 16725  0035BC  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16726  0035BE  0100               	movlb	0	; () banked
 16727  0035C0  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16728  0035C2  0100               	movlb	0	; () banked
 16729  0035C4  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;MISC.c: 429: temp += (This & 0x00002000) << 5;
 16733  0035C6  0E00               	movlw	0
 16734  0035C8  0100               	movlb	0	; () banked
 16735  0035CA  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16736  0035CC  0100               	movlb	0	; () banked
 16737  0035CE  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16738  0035D0  0E20               	movlw	32
 16739  0035D2  0100               	movlb	0	; () banked
 16740  0035D4  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16741  0035D6  0100               	movlb	0	; () banked
 16742  0035D8  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16743  0035DA  0E00               	movlw	0
 16744  0035DC  0100               	movlb	0	; () banked
 16745  0035DE  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16746  0035E0  0100               	movlb	0	; () banked
 16747  0035E2  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16748  0035E4  0E00               	movlw	0
 16749  0035E6  0100               	movlb	0	; () banked
 16750  0035E8  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16751  0035EA  0100               	movlb	0	; () banked
 16752  0035EC  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16753  0035EE  0E05               	movlw	5
 16754  0035F0                     u16005:
 16755  0035F0  90D8               	bcf	status,0,c
 16756  0035F2  0100               	movlb	0	; () banked
 16757  0035F4  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16758  0035F6  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16759  0035F8  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16760  0035FA  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16761  0035FC  2EE8               	decfsz	wreg,f,c
 16762  0035FE  D7F8               	goto	u16005
 16763  003600  0100               	movlb	0	; () banked
 16764  003602  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16765  003604  0100               	movlb	0	; () banked
 16766  003606  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16767  003608  0100               	movlb	0	; () banked
 16768  00360A  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16769  00360C  0100               	movlb	0	; () banked
 16770  00360E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16771  003610  0100               	movlb	0	; () banked
 16772  003612  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16773  003614  0100               	movlb	0	; () banked
 16774  003616  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16775  003618  0100               	movlb	0	; () banked
 16776  00361A  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16777  00361C  0100               	movlb	0	; () banked
 16778  00361E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16779                           
 16780                           ; BSR set to: 0
 16781                           ;MISC.c: 430: temp += (This & 0x00004000) << 3;
 16782  003620  0E00               	movlw	0
 16783  003622  0100               	movlb	0	; () banked
 16784  003624  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16785  003626  0100               	movlb	0	; () banked
 16786  003628  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16787  00362A  0E40               	movlw	64
 16788  00362C  0100               	movlb	0	; () banked
 16789  00362E  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16790  003630  0100               	movlb	0	; () banked
 16791  003632  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16792  003634  0E00               	movlw	0
 16793  003636  0100               	movlb	0	; () banked
 16794  003638  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16795  00363A  0100               	movlb	0	; () banked
 16796  00363C  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16797  00363E  0E00               	movlw	0
 16798  003640  0100               	movlb	0	; () banked
 16799  003642  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16800  003644  0100               	movlb	0	; () banked
 16801  003646  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16802  003648  0E03               	movlw	3
 16803  00364A                     u16015:
 16804  00364A  90D8               	bcf	status,0,c
 16805  00364C  0100               	movlb	0	; () banked
 16806  00364E  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16807  003650  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16808  003652  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16809  003654  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16810  003656  2EE8               	decfsz	wreg,f,c
 16811  003658  D7F8               	goto	u16015
 16812  00365A  0100               	movlb	0	; () banked
 16813  00365C  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16814  00365E  0100               	movlb	0	; () banked
 16815  003660  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16816  003662  0100               	movlb	0	; () banked
 16817  003664  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16818  003666  0100               	movlb	0	; () banked
 16819  003668  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16820  00366A  0100               	movlb	0	; () banked
 16821  00366C  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16822  00366E  0100               	movlb	0	; () banked
 16823  003670  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16824  003672  0100               	movlb	0	; () banked
 16825  003674  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16826  003676  0100               	movlb	0	; () banked
 16827  003678  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;MISC.c: 431: temp += (This & 0x00008000) << 1;
 16831  00367A  0E00               	movlw	0
 16832  00367C  0100               	movlb	0	; () banked
 16833  00367E  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16834  003680  0100               	movlb	0	; () banked
 16835  003682  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16836  003684  0E80               	movlw	128
 16837  003686  0100               	movlb	0	; () banked
 16838  003688  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16839  00368A  0100               	movlb	0	; () banked
 16840  00368C  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16841  00368E  0E00               	movlw	0
 16842  003690  0100               	movlb	0	; () banked
 16843  003692  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16844  003694  0100               	movlb	0	; () banked
 16845  003696  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16846  003698  0E00               	movlw	0
 16847  00369A  0100               	movlb	0	; () banked
 16848  00369C  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16849  00369E  0100               	movlb	0	; () banked
 16850  0036A0  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16851  0036A2  90D8               	bcf	status,0,c
 16852  0036A4  0100               	movlb	0	; () banked
 16853  0036A6  3580               	rlcf	??_Reverse_4Byte& (0+255),w,b
 16854  0036A8  0100               	movlb	0	; () banked
 16855  0036AA  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16856  0036AC  0100               	movlb	0	; () banked
 16857  0036AE  3581               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 16858  0036B0  0100               	movlb	0	; () banked
 16859  0036B2  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16860  0036B4  0100               	movlb	0	; () banked
 16861  0036B6  3582               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 16862  0036B8  0100               	movlb	0	; () banked
 16863  0036BA  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16864  0036BC  0100               	movlb	0	; () banked
 16865  0036BE  3583               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 16866  0036C0  0100               	movlb	0	; () banked
 16867  0036C2  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16868  0036C4  0100               	movlb	0	; () banked
 16869  0036C6  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16870  0036C8  0100               	movlb	0	; () banked
 16871  0036CA  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16872  0036CC  0100               	movlb	0	; () banked
 16873  0036CE  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16874  0036D0  0100               	movlb	0	; () banked
 16875  0036D2  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16876  0036D4  0100               	movlb	0	; () banked
 16877  0036D6  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16878  0036D8  0100               	movlb	0	; () banked
 16879  0036DA  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16880  0036DC  0100               	movlb	0	; () banked
 16881  0036DE  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16882  0036E0  0100               	movlb	0	; () banked
 16883  0036E2  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16884                           
 16885                           ; BSR set to: 0
 16886                           ;MISC.c: 432: temp += (This & 0x00010000) >> 1;
 16887  0036E4  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16888  0036E8  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16889  0036EC  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16890  0036F0  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16891  0036F4  0100               	movlb	0	; () banked
 16892  0036F6  90D8               	bcf	status,0,c
 16893  0036F8  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16894  0036FA  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16895  0036FC  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16896  0036FE  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16897  003700  0E00               	movlw	0
 16898  003702  0100               	movlb	0	; () banked
 16899  003704  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 16900  003706  0100               	movlb	0	; () banked
 16901  003708  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16902  00370A  0E80               	movlw	128
 16903  00370C  0100               	movlb	0	; () banked
 16904  00370E  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16905  003710  0100               	movlb	0	; () banked
 16906  003712  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16907  003714  0E00               	movlw	0
 16908  003716  0100               	movlb	0	; () banked
 16909  003718  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16910  00371A  0100               	movlb	0	; () banked
 16911  00371C  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16912  00371E  0E00               	movlw	0
 16913  003720  0100               	movlb	0	; () banked
 16914  003722  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16915  003724  0100               	movlb	0	; () banked
 16916  003726  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16917  003728  0100               	movlb	0	; () banked
 16918  00372A  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16919  00372C  0100               	movlb	0	; () banked
 16920  00372E  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16921  003730  0100               	movlb	0	; () banked
 16922  003732  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16923  003734  0100               	movlb	0	; () banked
 16924  003736  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16925  003738  0100               	movlb	0	; () banked
 16926  00373A  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16927  00373C  0100               	movlb	0	; () banked
 16928  00373E  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16929  003740  0100               	movlb	0	; () banked
 16930  003742  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16931  003744  0100               	movlb	0	; () banked
 16932  003746  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;MISC.c: 433: temp += (This & 0x00020000) >> 3;
 16936  003748  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16937  00374C  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16938  003750  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16939  003754  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16940  003758  0E04               	movlw	4
 16941  00375A  D006               	goto	u16020
 16942  00375C                     u16025:
 16943  00375C  0100               	movlb	0	; () banked
 16944  00375E  90D8               	bcf	status,0,c
 16945  003760  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16946  003762  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16947  003764  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16948  003766  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16949  003768                     u16020:
 16950  003768  2EE8               	decfsz	wreg,f,c
 16951  00376A  D7F8               	goto	u16025
 16952  00376C  0E00               	movlw	0
 16953  00376E  0100               	movlb	0	; () banked
 16954  003770  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 16955  003772  0100               	movlb	0	; () banked
 16956  003774  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16957  003776  0E40               	movlw	64
 16958  003778  0100               	movlb	0	; () banked
 16959  00377A  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16960  00377C  0100               	movlb	0	; () banked
 16961  00377E  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16962  003780  0E00               	movlw	0
 16963  003782  0100               	movlb	0	; () banked
 16964  003784  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16965  003786  0100               	movlb	0	; () banked
 16966  003788  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16967  00378A  0E00               	movlw	0
 16968  00378C  0100               	movlb	0	; () banked
 16969  00378E  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16970  003790  0100               	movlb	0	; () banked
 16971  003792  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16972  003794  0100               	movlb	0	; () banked
 16973  003796  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16974  003798  0100               	movlb	0	; () banked
 16975  00379A  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16976  00379C  0100               	movlb	0	; () banked
 16977  00379E  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16978  0037A0  0100               	movlb	0	; () banked
 16979  0037A2  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16980  0037A4  0100               	movlb	0	; () banked
 16981  0037A6  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16982  0037A8  0100               	movlb	0	; () banked
 16983  0037AA  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16984  0037AC  0100               	movlb	0	; () banked
 16985  0037AE  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16986  0037B0  0100               	movlb	0	; () banked
 16987  0037B2  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16988                           
 16989                           ; BSR set to: 0
 16990                           ;MISC.c: 434: temp += (This & 0x00040000) >> 5;
 16991  0037B4  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16992  0037B8  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16993  0037BC  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16994  0037C0  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16995  0037C4  0E06               	movlw	6
 16996  0037C6  D006               	goto	u16030
 16997  0037C8                     u16035:
 16998  0037C8  0100               	movlb	0	; () banked
 16999  0037CA  90D8               	bcf	status,0,c
 17000  0037CC  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17001  0037CE  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17002  0037D0  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17003  0037D2  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17004  0037D4                     u16030:
 17005  0037D4  2EE8               	decfsz	wreg,f,c
 17006  0037D6  D7F8               	goto	u16035
 17007  0037D8  0E00               	movlw	0
 17008  0037DA  0100               	movlb	0	; () banked
 17009  0037DC  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17010  0037DE  0100               	movlb	0	; () banked
 17011  0037E0  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17012  0037E2  0E20               	movlw	32
 17013  0037E4  0100               	movlb	0	; () banked
 17014  0037E6  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17015  0037E8  0100               	movlb	0	; () banked
 17016  0037EA  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17017  0037EC  0E00               	movlw	0
 17018  0037EE  0100               	movlb	0	; () banked
 17019  0037F0  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17020  0037F2  0100               	movlb	0	; () banked
 17021  0037F4  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17022  0037F6  0E00               	movlw	0
 17023  0037F8  0100               	movlb	0	; () banked
 17024  0037FA  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17025  0037FC  0100               	movlb	0	; () banked
 17026  0037FE  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17027  003800  0100               	movlb	0	; () banked
 17028  003802  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17029  003804  0100               	movlb	0	; () banked
 17030  003806  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17031  003808  0100               	movlb	0	; () banked
 17032  00380A  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17033  00380C  0100               	movlb	0	; () banked
 17034  00380E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17035  003810  0100               	movlb	0	; () banked
 17036  003812  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17037  003814  0100               	movlb	0	; () banked
 17038  003816  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17039  003818  0100               	movlb	0	; () banked
 17040  00381A  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17041  00381C  0100               	movlb	0	; () banked
 17042  00381E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17043                           
 17044                           ; BSR set to: 0
 17045                           ;MISC.c: 435: temp += (This & 0x00080000) >> 7;
 17046  003820  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17047  003824  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17048  003828  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17049  00382C  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17050  003830  0E08               	movlw	8
 17051  003832  D006               	goto	u16040
 17052  003834                     u16045:
 17053  003834  0100               	movlb	0	; () banked
 17054  003836  90D8               	bcf	status,0,c
 17055  003838  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17056  00383A  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17057  00383C  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17058  00383E  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17059  003840                     u16040:
 17060  003840  2EE8               	decfsz	wreg,f,c
 17061  003842  D7F8               	goto	u16045
 17062  003844  0E00               	movlw	0
 17063  003846  0100               	movlb	0	; () banked
 17064  003848  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17065  00384A  0100               	movlb	0	; () banked
 17066  00384C  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17067  00384E  0E10               	movlw	16
 17068  003850  0100               	movlb	0	; () banked
 17069  003852  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17070  003854  0100               	movlb	0	; () banked
 17071  003856  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17072  003858  0E00               	movlw	0
 17073  00385A  0100               	movlb	0	; () banked
 17074  00385C  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17075  00385E  0100               	movlb	0	; () banked
 17076  003860  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17077  003862  0E00               	movlw	0
 17078  003864  0100               	movlb	0	; () banked
 17079  003866  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17080  003868  0100               	movlb	0	; () banked
 17081  00386A  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17082  00386C  0100               	movlb	0	; () banked
 17083  00386E  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17084  003870  0100               	movlb	0	; () banked
 17085  003872  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17086  003874  0100               	movlb	0	; () banked
 17087  003876  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17088  003878  0100               	movlb	0	; () banked
 17089  00387A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17090  00387C  0100               	movlb	0	; () banked
 17091  00387E  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17092  003880  0100               	movlb	0	; () banked
 17093  003882  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17094  003884  0100               	movlb	0	; () banked
 17095  003886  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17096  003888  0100               	movlb	0	; () banked
 17097  00388A  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17098                           
 17099                           ; BSR set to: 0
 17100                           ;MISC.c: 436: temp += (This & 0x00100000) >> 9;
 17101  00388C  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17102  003890  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17103  003894  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17104  003898  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17105  00389C  0E0A               	movlw	10
 17106  00389E  D006               	goto	u16050
 17107  0038A0                     u16055:
 17108  0038A0  0100               	movlb	0	; () banked
 17109  0038A2  90D8               	bcf	status,0,c
 17110  0038A4  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17111  0038A6  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17112  0038A8  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17113  0038AA  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17114  0038AC                     u16050:
 17115  0038AC  2EE8               	decfsz	wreg,f,c
 17116  0038AE  D7F8               	goto	u16055
 17117  0038B0  0E00               	movlw	0
 17118  0038B2  0100               	movlb	0	; () banked
 17119  0038B4  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17120  0038B6  0100               	movlb	0	; () banked
 17121  0038B8  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17122  0038BA  0E08               	movlw	8
 17123  0038BC  0100               	movlb	0	; () banked
 17124  0038BE  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17125  0038C0  0100               	movlb	0	; () banked
 17126  0038C2  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17127  0038C4  0E00               	movlw	0
 17128  0038C6  0100               	movlb	0	; () banked
 17129  0038C8  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17130  0038CA  0100               	movlb	0	; () banked
 17131  0038CC  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17132  0038CE  0E00               	movlw	0
 17133  0038D0  0100               	movlb	0	; () banked
 17134  0038D2  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17135  0038D4  0100               	movlb	0	; () banked
 17136  0038D6  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17137  0038D8  0100               	movlb	0	; () banked
 17138  0038DA  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17139  0038DC  0100               	movlb	0	; () banked
 17140  0038DE  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17141  0038E0  0100               	movlb	0	; () banked
 17142  0038E2  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17143  0038E4  0100               	movlb	0	; () banked
 17144  0038E6  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17145  0038E8  0100               	movlb	0	; () banked
 17146  0038EA  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17147  0038EC  0100               	movlb	0	; () banked
 17148  0038EE  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17149  0038F0  0100               	movlb	0	; () banked
 17150  0038F2  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17151  0038F4  0100               	movlb	0	; () banked
 17152  0038F6  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;MISC.c: 437: temp += (This & 0x00200000) >> 11;
 17156  0038F8  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17157  0038FC  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17158  003900  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17159  003904  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17160  003908  0E0C               	movlw	12
 17161  00390A  D006               	goto	u16060
 17162  00390C                     u16065:
 17163  00390C  0100               	movlb	0	; () banked
 17164  00390E  90D8               	bcf	status,0,c
 17165  003910  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17166  003912  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17167  003914  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17168  003916  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17169  003918                     u16060:
 17170  003918  2EE8               	decfsz	wreg,f,c
 17171  00391A  D7F8               	goto	u16065
 17172  00391C  0E00               	movlw	0
 17173  00391E  0100               	movlb	0	; () banked
 17174  003920  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17175  003922  0100               	movlb	0	; () banked
 17176  003924  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17177  003926  0E04               	movlw	4
 17178  003928  0100               	movlb	0	; () banked
 17179  00392A  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17180  00392C  0100               	movlb	0	; () banked
 17181  00392E  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17182  003930  0E00               	movlw	0
 17183  003932  0100               	movlb	0	; () banked
 17184  003934  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17185  003936  0100               	movlb	0	; () banked
 17186  003938  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17187  00393A  0E00               	movlw	0
 17188  00393C  0100               	movlb	0	; () banked
 17189  00393E  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17190  003940  0100               	movlb	0	; () banked
 17191  003942  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17192  003944  0100               	movlb	0	; () banked
 17193  003946  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17194  003948  0100               	movlb	0	; () banked
 17195  00394A  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17196  00394C  0100               	movlb	0	; () banked
 17197  00394E  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17198  003950  0100               	movlb	0	; () banked
 17199  003952  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17200  003954  0100               	movlb	0	; () banked
 17201  003956  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17202  003958  0100               	movlb	0	; () banked
 17203  00395A  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17204  00395C  0100               	movlb	0	; () banked
 17205  00395E  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17206  003960  0100               	movlb	0	; () banked
 17207  003962  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17208                           
 17209                           ; BSR set to: 0
 17210                           ;MISC.c: 438: temp += (This & 0x00400000) >> 13;
 17211  003964  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17212  003968  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17213  00396C  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17214  003970  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17215  003974  0E0E               	movlw	14
 17216  003976  D006               	goto	u16070
 17217  003978                     u16075:
 17218  003978  0100               	movlb	0	; () banked
 17219  00397A  90D8               	bcf	status,0,c
 17220  00397C  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17221  00397E  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17222  003980  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17223  003982  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17224  003984                     u16070:
 17225  003984  2EE8               	decfsz	wreg,f,c
 17226  003986  D7F8               	goto	u16075
 17227  003988  0E00               	movlw	0
 17228  00398A  0100               	movlb	0	; () banked
 17229  00398C  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17230  00398E  0100               	movlb	0	; () banked
 17231  003990  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17232  003992  0E02               	movlw	2
 17233  003994  0100               	movlb	0	; () banked
 17234  003996  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17235  003998  0100               	movlb	0	; () banked
 17236  00399A  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17237  00399C  0E00               	movlw	0
 17238  00399E  0100               	movlb	0	; () banked
 17239  0039A0  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17240  0039A2  0100               	movlb	0	; () banked
 17241  0039A4  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17242  0039A6  0E00               	movlw	0
 17243  0039A8  0100               	movlb	0	; () banked
 17244  0039AA  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17245  0039AC  0100               	movlb	0	; () banked
 17246  0039AE  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17247  0039B0  0100               	movlb	0	; () banked
 17248  0039B2  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17249  0039B4  0100               	movlb	0	; () banked
 17250  0039B6  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17251  0039B8  0100               	movlb	0	; () banked
 17252  0039BA  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17253  0039BC  0100               	movlb	0	; () banked
 17254  0039BE  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17255  0039C0  0100               	movlb	0	; () banked
 17256  0039C2  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17257  0039C4  0100               	movlb	0	; () banked
 17258  0039C6  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17259  0039C8  0100               	movlb	0	; () banked
 17260  0039CA  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17261  0039CC  0100               	movlb	0	; () banked
 17262  0039CE  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17263                           
 17264                           ; BSR set to: 0
 17265                           ;MISC.c: 439: temp += (This & 0x00800000) >> 15;
 17266  0039D0  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17267  0039D4  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17268  0039D8  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17269  0039DC  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17270  0039E0  0E10               	movlw	16
 17271  0039E2  D006               	goto	u16080
 17272  0039E4                     u16085:
 17273  0039E4  0100               	movlb	0	; () banked
 17274  0039E6  90D8               	bcf	status,0,c
 17275  0039E8  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17276  0039EA  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17277  0039EC  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17278  0039EE  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17279  0039F0                     u16080:
 17280  0039F0  2EE8               	decfsz	wreg,f,c
 17281  0039F2  D7F8               	goto	u16085
 17282  0039F4  0E00               	movlw	0
 17283  0039F6  0100               	movlb	0	; () banked
 17284  0039F8  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17285  0039FA  0100               	movlb	0	; () banked
 17286  0039FC  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17287  0039FE  0E01               	movlw	1
 17288  003A00  0100               	movlb	0	; () banked
 17289  003A02  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17290  003A04  0100               	movlb	0	; () banked
 17291  003A06  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17292  003A08  0E00               	movlw	0
 17293  003A0A  0100               	movlb	0	; () banked
 17294  003A0C  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17295  003A0E  0100               	movlb	0	; () banked
 17296  003A10  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17297  003A12  0E00               	movlw	0
 17298  003A14  0100               	movlb	0	; () banked
 17299  003A16  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17300  003A18  0100               	movlb	0	; () banked
 17301  003A1A  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17302  003A1C  0100               	movlb	0	; () banked
 17303  003A1E  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17304  003A20  0100               	movlb	0	; () banked
 17305  003A22  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17306  003A24  0100               	movlb	0	; () banked
 17307  003A26  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17308  003A28  0100               	movlb	0	; () banked
 17309  003A2A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17310  003A2C  0100               	movlb	0	; () banked
 17311  003A2E  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17312  003A30  0100               	movlb	0	; () banked
 17313  003A32  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17314  003A34  0100               	movlb	0	; () banked
 17315  003A36  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17316  003A38  0100               	movlb	0	; () banked
 17317  003A3A  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;MISC.c: 440: temp += (This & 0x01000000) >> 17;
 17321  003A3C  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17322  003A40  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17323  003A44  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17324  003A48  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17325  003A4C  0E12               	movlw	18
 17326  003A4E  D006               	goto	u16090
 17327  003A50                     u16095:
 17328  003A50  0100               	movlb	0	; () banked
 17329  003A52  90D8               	bcf	status,0,c
 17330  003A54  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17331  003A56  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17332  003A58  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17333  003A5A  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17334  003A5C                     u16090:
 17335  003A5C  2EE8               	decfsz	wreg,f,c
 17336  003A5E  D7F8               	goto	u16095
 17337  003A60  0E80               	movlw	128
 17338  003A62  0100               	movlb	0	; () banked
 17339  003A64  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17340  003A66  0100               	movlb	0	; () banked
 17341  003A68  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17342  003A6A  0E00               	movlw	0
 17343  003A6C  0100               	movlb	0	; () banked
 17344  003A6E  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17345  003A70  0100               	movlb	0	; () banked
 17346  003A72  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17347  003A74  0E00               	movlw	0
 17348  003A76  0100               	movlb	0	; () banked
 17349  003A78  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17350  003A7A  0100               	movlb	0	; () banked
 17351  003A7C  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17352  003A7E  0E00               	movlw	0
 17353  003A80  0100               	movlb	0	; () banked
 17354  003A82  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17355  003A84  0100               	movlb	0	; () banked
 17356  003A86  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17357  003A88  0100               	movlb	0	; () banked
 17358  003A8A  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17359  003A8C  0100               	movlb	0	; () banked
 17360  003A8E  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17361  003A90  0100               	movlb	0	; () banked
 17362  003A92  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17363  003A94  0100               	movlb	0	; () banked
 17364  003A96  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17365  003A98  0100               	movlb	0	; () banked
 17366  003A9A  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17367  003A9C  0100               	movlb	0	; () banked
 17368  003A9E  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17369  003AA0  0100               	movlb	0	; () banked
 17370  003AA2  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17371  003AA4  0100               	movlb	0	; () banked
 17372  003AA6  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17373                           
 17374                           ; BSR set to: 0
 17375                           ;MISC.c: 441: temp += (This & 0x02000000) >> 19;
 17376  003AA8  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17377  003AAC  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17378  003AB0  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17379  003AB4  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17380  003AB8  0E14               	movlw	20
 17381  003ABA  D006               	goto	u16100
 17382  003ABC                     u16105:
 17383  003ABC  0100               	movlb	0	; () banked
 17384  003ABE  90D8               	bcf	status,0,c
 17385  003AC0  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17386  003AC2  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17387  003AC4  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17388  003AC6  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17389  003AC8                     u16100:
 17390  003AC8  2EE8               	decfsz	wreg,f,c
 17391  003ACA  D7F8               	goto	u16105
 17392  003ACC  0E40               	movlw	64
 17393  003ACE  0100               	movlb	0	; () banked
 17394  003AD0  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17395  003AD2  0100               	movlb	0	; () banked
 17396  003AD4  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17397  003AD6  0E00               	movlw	0
 17398  003AD8  0100               	movlb	0	; () banked
 17399  003ADA  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17400  003ADC  0100               	movlb	0	; () banked
 17401  003ADE  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17402  003AE0  0E00               	movlw	0
 17403  003AE2  0100               	movlb	0	; () banked
 17404  003AE4  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17405  003AE6  0100               	movlb	0	; () banked
 17406  003AE8  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17407  003AEA  0E00               	movlw	0
 17408  003AEC  0100               	movlb	0	; () banked
 17409  003AEE  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17410  003AF0  0100               	movlb	0	; () banked
 17411  003AF2  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17412  003AF4  0100               	movlb	0	; () banked
 17413  003AF6  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17414  003AF8  0100               	movlb	0	; () banked
 17415  003AFA  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17416  003AFC  0100               	movlb	0	; () banked
 17417  003AFE  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17418  003B00  0100               	movlb	0	; () banked
 17419  003B02  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17420  003B04  0100               	movlb	0	; () banked
 17421  003B06  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17422  003B08  0100               	movlb	0	; () banked
 17423  003B0A  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17424  003B0C  0100               	movlb	0	; () banked
 17425  003B0E  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17426  003B10  0100               	movlb	0	; () banked
 17427  003B12  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;MISC.c: 442: temp += (This & 0x04000000) >> 21;
 17431  003B14  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17432  003B18  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17433  003B1C  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17434  003B20  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17435  003B24  0E16               	movlw	22
 17436  003B26  D006               	goto	u16110
 17437  003B28                     u16115:
 17438  003B28  0100               	movlb	0	; () banked
 17439  003B2A  90D8               	bcf	status,0,c
 17440  003B2C  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17441  003B2E  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17442  003B30  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17443  003B32  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17444  003B34                     u16110:
 17445  003B34  2EE8               	decfsz	wreg,f,c
 17446  003B36  D7F8               	goto	u16115
 17447  003B38  0E20               	movlw	32
 17448  003B3A  0100               	movlb	0	; () banked
 17449  003B3C  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17450  003B3E  0100               	movlb	0	; () banked
 17451  003B40  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17452  003B42  0E00               	movlw	0
 17453  003B44  0100               	movlb	0	; () banked
 17454  003B46  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17455  003B48  0100               	movlb	0	; () banked
 17456  003B4A  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17457  003B4C  0E00               	movlw	0
 17458  003B4E  0100               	movlb	0	; () banked
 17459  003B50  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17460  003B52  0100               	movlb	0	; () banked
 17461  003B54  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17462  003B56  0E00               	movlw	0
 17463  003B58  0100               	movlb	0	; () banked
 17464  003B5A  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17465  003B5C  0100               	movlb	0	; () banked
 17466  003B5E  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17467  003B60  0100               	movlb	0	; () banked
 17468  003B62  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17469  003B64  0100               	movlb	0	; () banked
 17470  003B66  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17471  003B68  0100               	movlb	0	; () banked
 17472  003B6A  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17473  003B6C  0100               	movlb	0	; () banked
 17474  003B6E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17475  003B70  0100               	movlb	0	; () banked
 17476  003B72  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17477  003B74  0100               	movlb	0	; () banked
 17478  003B76  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17479  003B78  0100               	movlb	0	; () banked
 17480  003B7A  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17481  003B7C  0100               	movlb	0	; () banked
 17482  003B7E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;MISC.c: 443: temp += (This & 0x08000000) >> 23;
 17486  003B80  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17487  003B84  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17488  003B88  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17489  003B8C  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17490  003B90  0E18               	movlw	24
 17491  003B92  D006               	goto	u16120
 17492  003B94                     u16125:
 17493  003B94  0100               	movlb	0	; () banked
 17494  003B96  90D8               	bcf	status,0,c
 17495  003B98  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17496  003B9A  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17497  003B9C  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17498  003B9E  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17499  003BA0                     u16120:
 17500  003BA0  2EE8               	decfsz	wreg,f,c
 17501  003BA2  D7F8               	goto	u16125
 17502  003BA4  0E10               	movlw	16
 17503  003BA6  0100               	movlb	0	; () banked
 17504  003BA8  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17505  003BAA  0100               	movlb	0	; () banked
 17506  003BAC  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17507  003BAE  0E00               	movlw	0
 17508  003BB0  0100               	movlb	0	; () banked
 17509  003BB2  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17510  003BB4  0100               	movlb	0	; () banked
 17511  003BB6  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17512  003BB8  0E00               	movlw	0
 17513  003BBA  0100               	movlb	0	; () banked
 17514  003BBC  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17515  003BBE  0100               	movlb	0	; () banked
 17516  003BC0  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17517  003BC2  0E00               	movlw	0
 17518  003BC4  0100               	movlb	0	; () banked
 17519  003BC6  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17520  003BC8  0100               	movlb	0	; () banked
 17521  003BCA  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17522  003BCC  0100               	movlb	0	; () banked
 17523  003BCE  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17524  003BD0  0100               	movlb	0	; () banked
 17525  003BD2  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17526  003BD4  0100               	movlb	0	; () banked
 17527  003BD6  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17528  003BD8  0100               	movlb	0	; () banked
 17529  003BDA  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17530  003BDC  0100               	movlb	0	; () banked
 17531  003BDE  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17532  003BE0  0100               	movlb	0	; () banked
 17533  003BE2  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17534  003BE4  0100               	movlb	0	; () banked
 17535  003BE6  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17536  003BE8  0100               	movlb	0	; () banked
 17537  003BEA  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;MISC.c: 444: temp += (This & 0x10000000) >> 25;
 17541  003BEC  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17542  003BF0  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17543  003BF4  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17544  003BF8  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17545  003BFC  0E1A               	movlw	26
 17546  003BFE  D006               	goto	u16130
 17547  003C00                     u16135:
 17548  003C00  0100               	movlb	0	; () banked
 17549  003C02  90D8               	bcf	status,0,c
 17550  003C04  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17551  003C06  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17552  003C08  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17553  003C0A  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17554  003C0C                     u16130:
 17555  003C0C  2EE8               	decfsz	wreg,f,c
 17556  003C0E  D7F8               	goto	u16135
 17557  003C10  0E08               	movlw	8
 17558  003C12  0100               	movlb	0	; () banked
 17559  003C14  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17560  003C16  0100               	movlb	0	; () banked
 17561  003C18  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17562  003C1A  0E00               	movlw	0
 17563  003C1C  0100               	movlb	0	; () banked
 17564  003C1E  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17565  003C20  0100               	movlb	0	; () banked
 17566  003C22  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17567  003C24  0E00               	movlw	0
 17568  003C26  0100               	movlb	0	; () banked
 17569  003C28  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17570  003C2A  0100               	movlb	0	; () banked
 17571  003C2C  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17572  003C2E  0E00               	movlw	0
 17573  003C30  0100               	movlb	0	; () banked
 17574  003C32  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17575  003C34  0100               	movlb	0	; () banked
 17576  003C36  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17577  003C38  0100               	movlb	0	; () banked
 17578  003C3A  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17579  003C3C  0100               	movlb	0	; () banked
 17580  003C3E  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17581  003C40  0100               	movlb	0	; () banked
 17582  003C42  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17583  003C44  0100               	movlb	0	; () banked
 17584  003C46  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17585  003C48  0100               	movlb	0	; () banked
 17586  003C4A  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17587  003C4C  0100               	movlb	0	; () banked
 17588  003C4E  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17589  003C50  0100               	movlb	0	; () banked
 17590  003C52  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17591  003C54  0100               	movlb	0	; () banked
 17592  003C56  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;MISC.c: 445: temp += (This & 0x20000000) >> 27;
 17596  003C58  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17597  003C5C  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17598  003C60  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17599  003C64  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17600  003C68  0E1C               	movlw	28
 17601  003C6A  D006               	goto	u16140
 17602  003C6C                     u16145:
 17603  003C6C  0100               	movlb	0	; () banked
 17604  003C6E  90D8               	bcf	status,0,c
 17605  003C70  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17606  003C72  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17607  003C74  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17608  003C76  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17609  003C78                     u16140:
 17610  003C78  2EE8               	decfsz	wreg,f,c
 17611  003C7A  D7F8               	goto	u16145
 17612  003C7C  0E04               	movlw	4
 17613  003C7E  0100               	movlb	0	; () banked
 17614  003C80  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17615  003C82  0100               	movlb	0	; () banked
 17616  003C84  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17617  003C86  0E00               	movlw	0
 17618  003C88  0100               	movlb	0	; () banked
 17619  003C8A  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17620  003C8C  0100               	movlb	0	; () banked
 17621  003C8E  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17622  003C90  0E00               	movlw	0
 17623  003C92  0100               	movlb	0	; () banked
 17624  003C94  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17625  003C96  0100               	movlb	0	; () banked
 17626  003C98  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17627  003C9A  0E00               	movlw	0
 17628  003C9C  0100               	movlb	0	; () banked
 17629  003C9E  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17630  003CA0  0100               	movlb	0	; () banked
 17631  003CA2  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17632  003CA4  0100               	movlb	0	; () banked
 17633  003CA6  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17634  003CA8  0100               	movlb	0	; () banked
 17635  003CAA  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17636  003CAC  0100               	movlb	0	; () banked
 17637  003CAE  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17638  003CB0  0100               	movlb	0	; () banked
 17639  003CB2  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17640  003CB4  0100               	movlb	0	; () banked
 17641  003CB6  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17642  003CB8  0100               	movlb	0	; () banked
 17643  003CBA  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17644  003CBC  0100               	movlb	0	; () banked
 17645  003CBE  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17646  003CC0  0100               	movlb	0	; () banked
 17647  003CC2  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17648                           
 17649                           ; BSR set to: 0
 17650                           ;MISC.c: 446: temp += (This & 0x40000000) >> 29;
 17651  003CC4  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17652  003CC8  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17653  003CCC  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17654  003CD0  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17655  003CD4  0E1E               	movlw	30
 17656  003CD6  D006               	goto	u16150
 17657  003CD8                     u16155:
 17658  003CD8  0100               	movlb	0	; () banked
 17659  003CDA  90D8               	bcf	status,0,c
 17660  003CDC  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17661  003CDE  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17662  003CE0  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17663  003CE2  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17664  003CE4                     u16150:
 17665  003CE4  2EE8               	decfsz	wreg,f,c
 17666  003CE6  D7F8               	goto	u16155
 17667  003CE8  0E02               	movlw	2
 17668  003CEA  0100               	movlb	0	; () banked
 17669  003CEC  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17670  003CEE  0100               	movlb	0	; () banked
 17671  003CF0  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17672  003CF2  0E00               	movlw	0
 17673  003CF4  0100               	movlb	0	; () banked
 17674  003CF6  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17675  003CF8  0100               	movlb	0	; () banked
 17676  003CFA  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17677  003CFC  0E00               	movlw	0
 17678  003CFE  0100               	movlb	0	; () banked
 17679  003D00  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17680  003D02  0100               	movlb	0	; () banked
 17681  003D04  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17682  003D06  0E00               	movlw	0
 17683  003D08  0100               	movlb	0	; () banked
 17684  003D0A  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17685  003D0C  0100               	movlb	0	; () banked
 17686  003D0E  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17687  003D10  0100               	movlb	0	; () banked
 17688  003D12  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17689  003D14  0100               	movlb	0	; () banked
 17690  003D16  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17691  003D18  0100               	movlb	0	; () banked
 17692  003D1A  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17693  003D1C  0100               	movlb	0	; () banked
 17694  003D1E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17695  003D20  0100               	movlb	0	; () banked
 17696  003D22  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17697  003D24  0100               	movlb	0	; () banked
 17698  003D26  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17699  003D28  0100               	movlb	0	; () banked
 17700  003D2A  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17701  003D2C  0100               	movlb	0	; () banked
 17702  003D2E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;MISC.c: 447: temp += (This & 0x80000000) >> 31;
 17706  003D30  0E00               	movlw	0
 17707  003D32  0100               	movlb	0	; () banked
 17708  003D34  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 17709  003D36  0100               	movlb	0	; () banked
 17710  003D38  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 17711  003D3A  0E00               	movlw	0
 17712  003D3C  0100               	movlb	0	; () banked
 17713  003D3E  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17714  003D40  0100               	movlb	0	; () banked
 17715  003D42  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17716  003D44  0E00               	movlw	0
 17717  003D46  0100               	movlb	0	; () banked
 17718  003D48  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17719  003D4A  0100               	movlb	0	; () banked
 17720  003D4C  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17721  003D4E  0E80               	movlw	128
 17722  003D50  0100               	movlb	0	; () banked
 17723  003D52  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17724  003D54  0100               	movlb	0	; () banked
 17725  003D56  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17726  003D58  0E20               	movlw	32
 17727  003D5A  D006               	goto	u16160
 17728  003D5C                     u16165:
 17729  003D5C  0100               	movlb	0	; () banked
 17730  003D5E  90D8               	bcf	status,0,c
 17731  003D60  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17732  003D62  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17733  003D64  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17734  003D66  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17735  003D68                     u16160:
 17736  003D68  2EE8               	decfsz	wreg,f,c
 17737  003D6A  D7F8               	goto	u16165
 17738  003D6C  0100               	movlb	0	; () banked
 17739  003D6E  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 17740  003D70  0100               	movlb	0	; () banked
 17741  003D72  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17742  003D74  0100               	movlb	0	; () banked
 17743  003D76  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17744  003D78  0100               	movlb	0	; () banked
 17745  003D7A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17746  003D7C  0100               	movlb	0	; () banked
 17747  003D7E  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17748  003D80  0100               	movlb	0	; () banked
 17749  003D82  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17750  003D84  0100               	movlb	0	; () banked
 17751  003D86  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17752  003D88  0100               	movlb	0	; () banked
 17753  003D8A  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;MISC.c: 449: return temp;
 17757  003D8C  C088  F07C         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 17758  003D90  C089  F07D         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 17759  003D94  C08A  F07E         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 17760  003D98  C08B  F07F         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 17761  003D9C  0012               	return	
 17762                           
 17763                           ; BSR set to: 0
 17764                           
 17765                           ; BSR set to: 0
 17766  003D9E  0012               	return		;funcret
 17767  003DA0                     __end_of_Reverse_4Byte:
 17768                           	opt stack 0
 17769                           tblptru	equ	0xFF8
 17770                           tblptrh	equ	0xFF7
 17771                           tblptrl	equ	0xFF6
 17772                           tablat	equ	0xFF5
 17773                           prodh	equ	0xFF4
 17774                           prodl	equ	0xFF3
 17775                           intcon	equ	0xFF2
 17776                           indf0	equ	0xFEF
 17777                           postinc0	equ	0xFEE
 17778                           fsr0h	equ	0xFEA
 17779                           fsr0l	equ	0xFE9
 17780                           wreg	equ	0xFE8
 17781                           indf1	equ	0xFE7
 17782                           postdec1	equ	0xFE5
 17783                           fsr1h	equ	0xFE2
 17784                           fsr1l	equ	0xFE1
 17785                           indf2	equ	0xFDF
 17786                           postinc2	equ	0xFDE
 17787                           fsr2h	equ	0xFDA
 17788                           fsr2l	equ	0xFD9
 17789                           status	equ	0xFD8
 17790                           
 17791 ;; *************** function _CheckReceivingIR *****************
 17792 ;; Defined at:
 17793 ;;		line 508 in file "IR.c"
 17794 ;; Parameters:    Size  Location     Type
 17795 ;;		None
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;		None
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  1    wreg      unsigned char 
 17800 ;; Registers used:
 17801 ;;		wreg, status,2, status,0
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17811 ;;Total ram usage:        0 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; Hardware stack levels required when called:    6
 17814 ;; This function calls:
 17815 ;;		Nothing
 17816 ;; This function is called by:
 17817 ;;		_SendNEC_wait
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           	psect	text22
 17822  0094E6                     __ptext22:
 17823                           	opt stack 0
 17824  0094E6                     _CheckReceivingIR:
 17825                           	opt stack 22
 17826                           
 17827                           ;IR.c: 510: if(ReceivingIR == 13)
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;incstack = 0
 17831  0094E6  0E0D               	movlw	13
 17832  0094E8  1844               	xorwf	_ReceivingIR,w,c	;volatile
 17833  0094EA  A4D8               	btfss	status,2,c
 17834  0094EC  D002               	goto	l14095
 17835                           
 17836                           ;IR.c: 511: {
 17837                           ;IR.c: 512: return 0;
 17838  0094EE  0E00               	movlw	0
 17839  0094F0  0012               	return	
 17840  0094F2                     l14095:
 17841                           
 17842                           ;IR.c: 513: }
 17843                           ;IR.c: 514: return 1;
 17844  0094F2  0E01               	movlw	1
 17845  0094F4  0012               	return	
 17846  0094F6  0012               	return		;funcret
 17847  0094F8                     __end_of_CheckReceivingIR:
 17848                           	opt stack 0
 17849                           tblptru	equ	0xFF8
 17850                           tblptrh	equ	0xFF7
 17851                           tblptrl	equ	0xFF6
 17852                           tablat	equ	0xFF5
 17853                           prodh	equ	0xFF4
 17854                           prodl	equ	0xFF3
 17855                           intcon	equ	0xFF2
 17856                           indf0	equ	0xFEF
 17857                           postinc0	equ	0xFEE
 17858                           fsr0h	equ	0xFEA
 17859                           fsr0l	equ	0xFE9
 17860                           wreg	equ	0xFE8
 17861                           indf1	equ	0xFE7
 17862                           postdec1	equ	0xFE5
 17863                           fsr1h	equ	0xFE2
 17864                           fsr1l	equ	0xFE1
 17865                           indf2	equ	0xFDF
 17866                           postinc2	equ	0xFDE
 17867                           fsr2h	equ	0xFDA
 17868                           fsr2l	equ	0xFD9
 17869                           status	equ	0xFD8
 17870                           
 17871 ;; *************** function _ReadVoltage *****************
 17872 ;; Defined at:
 17873 ;;		line 60 in file "ADC.c"
 17874 ;; Parameters:    Size  Location     Type
 17875 ;;		None
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;  voltage         3   72[BANK0 ] unsigned char 
 17878 ;;  temp            2   75[BANK0 ] unsigned int 
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  3   69[BANK0 ] unsigned int 
 17881 ;; Registers used:
 17882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17888 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;Total ram usage:        8 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:    8
 17895 ;; This function calls:
 17896 ;;		_InternalADC_Read
 17897 ;;		_VoltageDividerOFF
 17898 ;;		_VoltageDividerON
 17899 ;;		___ftdiv
 17900 ;;		___ftmul
 17901 ;;		___lwtoft
 17902 ;;		_delayUS
 17903 ;; This function is called by:
 17904 ;;		_main
 17905 ;;		_UseBluetooth
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           	psect	text23
 17910  0080C0                     __ptext23:
 17911                           	opt stack 0
 17912  0080C0                     _ReadVoltage:
 17913                           	opt stack 21
 17914                           
 17915                           ;ADC.c: 62: unsigned int temp;
 17916                           ;ADC.c: 63: double voltage;
 17917                           ;ADC.c: 65: VoltageDividerON();
 17918                           
 17919                           ;incstack = 0
 17920  0080C0  ECED  F04A         	call	_VoltageDividerON	;wreg free
 17921                           
 17922                           ;ADC.c: 66: delayUS(5);
 17923  0080C4  0E05               	movlw	5
 17924  0080C6  0100               	movlb	0	; () banked
 17925  0080C8  6F7C               	movwf	delayUS@US& (0+255),b
 17926  0080CA  0E00               	movlw	0
 17927  0080CC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 17928  0080CE  0E00               	movlw	0
 17929  0080D0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 17930  0080D2  0E00               	movlw	0
 17931  0080D4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 17932  0080D6  EC8C  F047         	call	_delayUS	;wreg free
 17933                           
 17934                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 17935  0080DA  0EAB               	movlw	low ReadVoltage@temp
 17936  0080DC  0100               	movlb	0	; () banked
 17937  0080DE  6F85               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 17938  0080E0  0E00               	movlw	high ReadVoltage@temp
 17939  0080E2  0100               	movlb	0	; () banked
 17940  0080E4  6F86               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 17941  0080E6  0E00               	movlw	0
 17942  0080E8  EC73  F042         	call	_InternalADC_Read
 17943  0080EC  0900               	iorlw	0
 17944  0080EE  B4D8               	btfsc	status,2,c
 17945  0080F0  D02F               	goto	l14319
 17946                           
 17947                           ;ADC.c: 68: {
 17948                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 17949  0080F2  0E00               	movlw	0
 17950  0080F4  0100               	movlb	0	; () banked
 17951  0080F6  6F8A               	movwf	___ftdiv@f2& (0+255),b
 17952  0080F8  0E80               	movlw	128
 17953  0080FA  0100               	movlb	0	; () banked
 17954  0080FC  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 17955  0080FE  0E44               	movlw	68
 17956  008100  0100               	movlb	0	; () banked
 17957  008102  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 17958  008104  C0AB  F084         	movff	ReadVoltage@temp,___lwtoft@c
 17959  008108  C0AC  F085         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 17960  00810C  EC90  F049         	call	___lwtoft	;wreg free
 17961  008110  C084  F087         	movff	?___lwtoft,___ftdiv@f1
 17962  008114  C085  F088         	movff	?___lwtoft+1,___ftdiv@f1+1
 17963  008118  C086  F089         	movff	?___lwtoft+2,___ftdiv@f1+2
 17964  00811C  EC1C  F038         	call	___ftdiv	;wreg free
 17965  008120  C087  F096         	movff	?___ftdiv,___ftmul@f1
 17966  008124  C088  F097         	movff	?___ftdiv+1,___ftmul@f1+1
 17967  008128  C089  F098         	movff	?___ftdiv+2,___ftmul@f1+2
 17968  00812C  0E33               	movlw	51
 17969  00812E  0100               	movlb	0	; () banked
 17970  008130  6F99               	movwf	___ftmul@f2& (0+255),b
 17971  008132  0E11               	movlw	17
 17972  008134  0100               	movlb	0	; () banked
 17973  008136  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 17974  008138  0E42               	movlw	66
 17975  00813A  0100               	movlb	0	; () banked
 17976  00813C  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 17977  00813E  EC66  F037         	call	___ftmul	;wreg free
 17978  008142  C096  F0A8         	movff	?___ftmul,ReadVoltage@voltage
 17979  008146  C097  F0A9         	movff	?___ftmul+1,ReadVoltage@voltage+1
 17980  00814A  C098  F0AA         	movff	?___ftmul+2,ReadVoltage@voltage+2
 17981                           
 17982                           ;ADC.c: 70: }
 17983  00814E  D00A               	goto	l14321
 17984  008150                     l14319:
 17985                           
 17986                           ;ADC.c: 71: else
 17987                           ;ADC.c: 72: {
 17988                           ;ADC.c: 73: voltage = 0.0;
 17989  008150  0E00               	movlw	0
 17990  008152  0100               	movlb	0	; () banked
 17991  008154  6FA8               	movwf	ReadVoltage@voltage& (0+255),b
 17992  008156  0E00               	movlw	0
 17993  008158  0100               	movlb	0	; () banked
 17994  00815A  6FA9               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 17995  00815C  0E00               	movlw	0
 17996  00815E  0100               	movlb	0	; () banked
 17997  008160  6FAA               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 17998  008162  D000               	goto	l14321
 17999  008164                     l14321:
 18000                           
 18001                           ;ADC.c: 74: }
 18002                           ;ADC.c: 75: VoltageDividerOFF();
 18003  008164  ECF0  F04A         	call	_VoltageDividerOFF	;wreg free
 18004                           
 18005                           ;ADC.c: 76: return voltage;
 18006  008168  C0A8  F0A5         	movff	ReadVoltage@voltage,?_ReadVoltage
 18007  00816C  C0A9  F0A6         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 18008  008170  C0AA  F0A7         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 18009  008174  0012               	return	
 18010  008176  0012               	return		;funcret
 18011  008178                     __end_of_ReadVoltage:
 18012                           	opt stack 0
 18013                           tblptru	equ	0xFF8
 18014                           tblptrh	equ	0xFF7
 18015                           tblptrl	equ	0xFF6
 18016                           tablat	equ	0xFF5
 18017                           prodh	equ	0xFF4
 18018                           prodl	equ	0xFF3
 18019                           intcon	equ	0xFF2
 18020                           indf0	equ	0xFEF
 18021                           postinc0	equ	0xFEE
 18022                           fsr0h	equ	0xFEA
 18023                           fsr0l	equ	0xFE9
 18024                           wreg	equ	0xFE8
 18025                           indf1	equ	0xFE7
 18026                           postdec1	equ	0xFE5
 18027                           fsr1h	equ	0xFE2
 18028                           fsr1l	equ	0xFE1
 18029                           indf2	equ	0xFDF
 18030                           postinc2	equ	0xFDE
 18031                           fsr2h	equ	0xFDA
 18032                           fsr2l	equ	0xFD9
 18033                           status	equ	0xFD8
 18034                           
 18035 ;; *************** function ___lwtoft *****************
 18036 ;; Defined at:
 18037 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;  c               2   36[BANK0 ] unsigned int 
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;		None
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  3   36[BANK0 ] float 
 18044 ;; Registers used:
 18045 ;;		wreg, status,2, status,0, cstack
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18051 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18055 ;;Total ram usage:        3 bytes
 18056 ;; Hardware stack levels used:    1
 18057 ;; Hardware stack levels required when called:    7
 18058 ;; This function calls:
 18059 ;;		___ftpack
 18060 ;; This function is called by:
 18061 ;;		_ReadVoltage
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text24
 18066  009320                     __ptext24:
 18067                           	opt stack 0
 18068  009320                     ___lwtoft:
 18069                           	opt stack 21
 18070                           
 18071                           ;incstack = 0
 18072  009320  C084  F07C         	movff	___lwtoft@c,___ftpack@arg
 18073  009324  C085  F07D         	movff	___lwtoft@c+1,___ftpack@arg+1
 18074  009328  0100               	movlb	0	; () banked
 18075  00932A  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 18076  00932C  0E8E               	movlw	142
 18077  00932E  0100               	movlb	0	; () banked
 18078  009330  6F7F               	movwf	___ftpack@exp& (0+255),b
 18079  009332  0E00               	movlw	0
 18080  009334  0100               	movlb	0	; () banked
 18081  009336  6F80               	movwf	___ftpack@sign& (0+255),b
 18082  009338  EC3C  F03B         	call	___ftpack	;wreg free
 18083  00933C  C07C  F084         	movff	?___ftpack,?___lwtoft
 18084  009340  C07D  F085         	movff	?___ftpack+1,?___lwtoft+1
 18085  009344  C07E  F086         	movff	?___ftpack+2,?___lwtoft+2
 18086  009348  0012               	return	
 18087  00934A  0012               	return		;funcret
 18088  00934C                     __end_of___lwtoft:
 18089                           	opt stack 0
 18090                           tblptru	equ	0xFF8
 18091                           tblptrh	equ	0xFF7
 18092                           tblptrl	equ	0xFF6
 18093                           tablat	equ	0xFF5
 18094                           prodh	equ	0xFF4
 18095                           prodl	equ	0xFF3
 18096                           intcon	equ	0xFF2
 18097                           indf0	equ	0xFEF
 18098                           postinc0	equ	0xFEE
 18099                           fsr0h	equ	0xFEA
 18100                           fsr0l	equ	0xFE9
 18101                           wreg	equ	0xFE8
 18102                           indf1	equ	0xFE7
 18103                           postdec1	equ	0xFE5
 18104                           fsr1h	equ	0xFE2
 18105                           fsr1l	equ	0xFE1
 18106                           indf2	equ	0xFDF
 18107                           postinc2	equ	0xFDE
 18108                           fsr2h	equ	0xFDA
 18109                           fsr2l	equ	0xFD9
 18110                           status	equ	0xFD8
 18111                           
 18112 ;; *************** function ___ftdiv *****************
 18113 ;; Defined at:
 18114 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 18115 ;; Parameters:    Size  Location     Type
 18116 ;;  f1              3   39[BANK0 ] float 
 18117 ;;  f2              3   42[BANK0 ] float 
 18118 ;; Auto vars:     Size  Location     Type
 18119 ;;  f3              3   49[BANK0 ] float 
 18120 ;;  sign            1   53[BANK0 ] unsigned char 
 18121 ;;  exp             1   52[BANK0 ] unsigned char 
 18122 ;;  cntr            1   48[BANK0 ] unsigned char 
 18123 ;; Return value:  Size  Location     Type
 18124 ;;                  3   39[BANK0 ] float 
 18125 ;; Registers used:
 18126 ;;		wreg, status,2, status,0, cstack
 18127 ;; Tracked objects:
 18128 ;;		On entry : 0/0
 18129 ;;		On exit  : 0/0
 18130 ;;		Unchanged: 0/0
 18131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18133 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18134 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18135 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18136 ;;Total ram usage:       15 bytes
 18137 ;; Hardware stack levels used:    1
 18138 ;; Hardware stack levels required when called:    7
 18139 ;; This function calls:
 18140 ;;		___ftpack
 18141 ;; This function is called by:
 18142 ;;		_ReadVoltage
 18143 ;; This function uses a non-reentrant model
 18144 ;;
 18145                           
 18146                           	psect	text25
 18147  007038                     __ptext25:
 18148                           	opt stack 0
 18149  007038                     ___ftdiv:
 18150                           	opt stack 21
 18151                           
 18152                           ;incstack = 0
 18153  007038  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 18154  00703C  0100               	movlb	0	; () banked
 18155  00703E  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 18156  007040  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 18157  007042  0100               	movlb	0	; () banked
 18158  007044  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 18159  007046  0100               	movlb	0	; () banked
 18160  007048  378D               	rlcf	??___ftdiv& (0+255),f,b
 18161  00704A  E301               	bnc	u17501
 18162  00704C  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 18163  00704E                     u17501:
 18164  00704E  0100               	movlb	0	; () banked
 18165  007050  518D               	movf	??___ftdiv& (0+255),w,b
 18166  007052  0100               	movlb	0	; () banked
 18167  007054  6F94               	movwf	___ftdiv@exp& (0+255),b
 18168  007056  0100               	movlb	0	; () banked
 18169  007058  5194               	movf	___ftdiv@exp& (0+255),w,b
 18170  00705A  A4D8               	btfss	status,2,c
 18171  00705C  D00A               	goto	l14267
 18172                           
 18173                           ; BSR set to: 0
 18174  00705E  0E00               	movlw	0
 18175  007060  0100               	movlb	0	; () banked
 18176  007062  6F87               	movwf	?___ftdiv& (0+255),b
 18177  007064  0E00               	movlw	0
 18178  007066  0100               	movlb	0	; () banked
 18179  007068  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 18180  00706A  0E00               	movlw	0
 18181  00706C  0100               	movlb	0	; () banked
 18182  00706E  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 18183                           
 18184                           ; BSR set to: 0
 18185  007070  0012               	return	
 18186  007072                     l14267:
 18187                           
 18188                           ; BSR set to: 0
 18189  007072  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 18190  007076  0100               	movlb	0	; () banked
 18191  007078  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 18192  00707A  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 18193  00707C  0100               	movlb	0	; () banked
 18194  00707E  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 18195  007080  0100               	movlb	0	; () banked
 18196  007082  378D               	rlcf	??___ftdiv& (0+255),f,b
 18197  007084  E301               	bnc	u17521
 18198  007086  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 18199  007088                     u17521:
 18200  007088  0100               	movlb	0	; () banked
 18201  00708A  518D               	movf	??___ftdiv& (0+255),w,b
 18202  00708C  0100               	movlb	0	; () banked
 18203  00708E  6F95               	movwf	___ftdiv@sign& (0+255),b
 18204  007090  0100               	movlb	0	; () banked
 18205  007092  5195               	movf	___ftdiv@sign& (0+255),w,b
 18206  007094  A4D8               	btfss	status,2,c
 18207  007096  D00A               	goto	l14273
 18208                           
 18209                           ; BSR set to: 0
 18210  007098  0E00               	movlw	0
 18211  00709A  0100               	movlb	0	; () banked
 18212  00709C  6F87               	movwf	?___ftdiv& (0+255),b
 18213  00709E  0E00               	movlw	0
 18214  0070A0  0100               	movlb	0	; () banked
 18215  0070A2  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 18216  0070A4  0E00               	movlw	0
 18217  0070A6  0100               	movlb	0	; () banked
 18218  0070A8  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 18219                           
 18220                           ; BSR set to: 0
 18221  0070AA  0012               	return	
 18222  0070AC                     l14273:
 18223                           
 18224                           ; BSR set to: 0
 18225  0070AC  0E00               	movlw	0
 18226  0070AE  0100               	movlb	0	; () banked
 18227  0070B0  6F91               	movwf	___ftdiv@f3& (0+255),b
 18228  0070B2  0E00               	movlw	0
 18229  0070B4  0100               	movlb	0	; () banked
 18230  0070B6  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 18231  0070B8  0E00               	movlw	0
 18232  0070BA  0100               	movlb	0	; () banked
 18233  0070BC  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 18234                           
 18235                           ; BSR set to: 0
 18236  0070BE  0100               	movlb	0	; () banked
 18237  0070C0  5195               	movf	___ftdiv@sign& (0+255),w,b
 18238  0070C2  0F89               	addlw	137
 18239  0070C4  0100               	movlb	0	; () banked
 18240  0070C6  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 18241                           
 18242                           ; BSR set to: 0
 18243  0070C8  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 18244                           
 18245                           ; BSR set to: 0
 18246  0070CC  0100               	movlb	0	; () banked
 18247  0070CE  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18248  0070D0  0100               	movlb	0	; () banked
 18249  0070D2  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 18250                           
 18251                           ; BSR set to: 0
 18252  0070D4  0E80               	movlw	128
 18253  0070D6  0100               	movlb	0	; () banked
 18254  0070D8  1795               	andwf	___ftdiv@sign& (0+255),f,b
 18255                           
 18256                           ; BSR set to: 0
 18257  0070DA  0100               	movlb	0	; () banked
 18258  0070DC  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 18259                           
 18260                           ; BSR set to: 0
 18261  0070DE  0EFF               	movlw	255
 18262  0070E0  0100               	movlb	0	; () banked
 18263  0070E2  1787               	andwf	___ftdiv@f1& (0+255),f,b
 18264  0070E4  0EFF               	movlw	255
 18265  0070E6  0100               	movlb	0	; () banked
 18266  0070E8  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 18267  0070EA  0E00               	movlw	0
 18268  0070EC  0100               	movlb	0	; () banked
 18269  0070EE  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 18270                           
 18271                           ; BSR set to: 0
 18272  0070F0  0100               	movlb	0	; () banked
 18273  0070F2  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 18274                           
 18275                           ; BSR set to: 0
 18276  0070F4  0EFF               	movlw	255
 18277  0070F6  0100               	movlb	0	; () banked
 18278  0070F8  178A               	andwf	___ftdiv@f2& (0+255),f,b
 18279  0070FA  0EFF               	movlw	255
 18280  0070FC  0100               	movlb	0	; () banked
 18281  0070FE  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 18282  007100  0E00               	movlw	0
 18283  007102  0100               	movlb	0	; () banked
 18284  007104  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 18285                           
 18286                           ; BSR set to: 0
 18287  007106  0E18               	movlw	24
 18288  007108  0100               	movlb	0	; () banked
 18289  00710A  6F90               	movwf	___ftdiv@cntr& (0+255),b
 18290  00710C  D000               	goto	l14293
 18291  00710E                     l14293:
 18292                           
 18293                           ; BSR set to: 0
 18294  00710E  0100               	movlb	0	; () banked
 18295  007110  90D8               	bcf	status,0,c
 18296  007112  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 18297  007114  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 18298  007116  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 18299                           
 18300                           ; BSR set to: 0
 18301  007118  0100               	movlb	0	; () banked
 18302  00711A  518A               	movf	___ftdiv@f2& (0+255),w,b
 18303  00711C  0100               	movlb	0	; () banked
 18304  00711E  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 18305  007120  0100               	movlb	0	; () banked
 18306  007122  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18307  007124  0100               	movlb	0	; () banked
 18308  007126  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 18309  007128  0100               	movlb	0	; () banked
 18310  00712A  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18311  00712C  0100               	movlb	0	; () banked
 18312  00712E  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 18313  007130  A0D8               	btfss	status,0,c
 18314  007132  D00E               	goto	l2731
 18315                           
 18316                           ; BSR set to: 0
 18317  007134  0100               	movlb	0	; () banked
 18318  007136  518A               	movf	___ftdiv@f2& (0+255),w,b
 18319  007138  0100               	movlb	0	; () banked
 18320  00713A  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 18321  00713C  0100               	movlb	0	; () banked
 18322  00713E  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18323  007140  0100               	movlb	0	; () banked
 18324  007142  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 18325  007144  0100               	movlb	0	; () banked
 18326  007146  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18327  007148  0100               	movlb	0	; () banked
 18328  00714A  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 18329                           
 18330                           ; BSR set to: 0
 18331  00714C  0100               	movlb	0	; () banked
 18332  00714E  8191               	bsf	___ftdiv@f3& (0+255),0,b
 18333  007150                     l2731:
 18334                           
 18335                           ; BSR set to: 0
 18336  007150  0100               	movlb	0	; () banked
 18337  007152  90D8               	bcf	status,0,c
 18338  007154  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 18339  007156  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 18340  007158  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 18341                           
 18342                           ; BSR set to: 0
 18343  00715A  0100               	movlb	0	; () banked
 18344  00715C  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 18345  00715E  D7D7               	goto	l14293
 18346  007160  D000               	goto	l14303
 18347  007162                     l14303:
 18348                           
 18349                           ; BSR set to: 0
 18350  007162  C091  F07C         	movff	___ftdiv@f3,___ftpack@arg
 18351  007166  C092  F07D         	movff	___ftdiv@f3+1,___ftpack@arg+1
 18352  00716A  C093  F07E         	movff	___ftdiv@f3+2,___ftpack@arg+2
 18353  00716E  C094  F07F         	movff	___ftdiv@exp,___ftpack@exp
 18354  007172  C095  F080         	movff	___ftdiv@sign,___ftpack@sign
 18355  007176  EC3C  F03B         	call	___ftpack	;wreg free
 18356  00717A  C07C  F087         	movff	?___ftpack,?___ftdiv
 18357  00717E  C07D  F088         	movff	?___ftpack+1,?___ftdiv+1
 18358  007182  C07E  F089         	movff	?___ftpack+2,?___ftdiv+2
 18359  007186  0012               	return	
 18360  007188  0012               	return		;funcret
 18361  00718A                     __end_of___ftdiv:
 18362                           	opt stack 0
 18363                           tblptru	equ	0xFF8
 18364                           tblptrh	equ	0xFF7
 18365                           tblptrl	equ	0xFF6
 18366                           tablat	equ	0xFF5
 18367                           prodh	equ	0xFF4
 18368                           prodl	equ	0xFF3
 18369                           intcon	equ	0xFF2
 18370                           indf0	equ	0xFEF
 18371                           postinc0	equ	0xFEE
 18372                           fsr0h	equ	0xFEA
 18373                           fsr0l	equ	0xFE9
 18374                           wreg	equ	0xFE8
 18375                           indf1	equ	0xFE7
 18376                           postdec1	equ	0xFE5
 18377                           fsr1h	equ	0xFE2
 18378                           fsr1l	equ	0xFE1
 18379                           indf2	equ	0xFDF
 18380                           postinc2	equ	0xFDE
 18381                           fsr2h	equ	0xFDA
 18382                           fsr2l	equ	0xFD9
 18383                           status	equ	0xFD8
 18384                           
 18385 ;; *************** function _VoltageDividerON *****************
 18386 ;; Defined at:
 18387 ;;		line 148 in file "ADC.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;		None
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;		None
 18392 ;; Return value:  Size  Location     Type
 18393 ;;		None               void
 18394 ;; Registers used:
 18395 ;;		status,2, status,0
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;Total ram usage:        0 bytes
 18406 ;; Hardware stack levels used:    1
 18407 ;; Hardware stack levels required when called:    6
 18408 ;; This function calls:
 18409 ;;		Nothing
 18410 ;; This function is called by:
 18411 ;;		_ReadVoltage
 18412 ;; This function uses a non-reentrant model
 18413 ;;
 18414                           
 18415                           	psect	text26
 18416  0095DA                     __ptext26:
 18417                           	opt stack 0
 18418  0095DA                     _VoltageDividerON:
 18419                           	opt stack 22
 18420                           
 18421                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 18422                           
 18423                           ;incstack = 0
 18424  0095DA  9A93               	bcf	3987,5,c	;volatile
 18425                           
 18426                           ;ADC.c: 151: LATB &= ~0x20;
 18427  0095DC  9A8A               	bcf	3978,5,c	;volatile
 18428  0095DE  0012               	return		;funcret
 18429  0095E0                     __end_of_VoltageDividerON:
 18430                           	opt stack 0
 18431                           tblptru	equ	0xFF8
 18432                           tblptrh	equ	0xFF7
 18433                           tblptrl	equ	0xFF6
 18434                           tablat	equ	0xFF5
 18435                           prodh	equ	0xFF4
 18436                           prodl	equ	0xFF3
 18437                           intcon	equ	0xFF2
 18438                           indf0	equ	0xFEF
 18439                           postinc0	equ	0xFEE
 18440                           fsr0h	equ	0xFEA
 18441                           fsr0l	equ	0xFE9
 18442                           wreg	equ	0xFE8
 18443                           indf1	equ	0xFE7
 18444                           postdec1	equ	0xFE5
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           fsr2h	equ	0xFDA
 18450                           fsr2l	equ	0xFD9
 18451                           status	equ	0xFD8
 18452                           
 18453 ;; *************** function _VoltageDividerOFF *****************
 18454 ;; Defined at:
 18455 ;;		line 159 in file "ADC.c"
 18456 ;; Parameters:    Size  Location     Type
 18457 ;;		None
 18458 ;; Auto vars:     Size  Location     Type
 18459 ;;		None
 18460 ;; Return value:  Size  Location     Type
 18461 ;;		None               void
 18462 ;; Registers used:
 18463 ;;		None
 18464 ;; Tracked objects:
 18465 ;;		On entry : 0/0
 18466 ;;		On exit  : 0/0
 18467 ;;		Unchanged: 0/0
 18468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18473 ;;Total ram usage:        0 bytes
 18474 ;; Hardware stack levels used:    1
 18475 ;; Hardware stack levels required when called:    6
 18476 ;; This function calls:
 18477 ;;		Nothing
 18478 ;; This function is called by:
 18479 ;;		_ReadVoltage
 18480 ;; This function uses a non-reentrant model
 18481 ;;
 18482                           
 18483                           	psect	text27
 18484  0095E0                     __ptext27:
 18485                           	opt stack 0
 18486  0095E0                     _VoltageDividerOFF:
 18487                           	opt stack 22
 18488                           
 18489                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 18490                           
 18491                           ;incstack = 0
 18492  0095E0  8A93               	bsf	3987,5,c	;volatile
 18493  0095E2  0012               	return		;funcret
 18494  0095E4                     __end_of_VoltageDividerOFF:
 18495                           	opt stack 0
 18496                           tblptru	equ	0xFF8
 18497                           tblptrh	equ	0xFF7
 18498                           tblptrl	equ	0xFF6
 18499                           tablat	equ	0xFF5
 18500                           prodh	equ	0xFF4
 18501                           prodl	equ	0xFF3
 18502                           intcon	equ	0xFF2
 18503                           indf0	equ	0xFEF
 18504                           postinc0	equ	0xFEE
 18505                           fsr0h	equ	0xFEA
 18506                           fsr0l	equ	0xFE9
 18507                           wreg	equ	0xFE8
 18508                           indf1	equ	0xFE7
 18509                           postdec1	equ	0xFE5
 18510                           fsr1h	equ	0xFE2
 18511                           fsr1l	equ	0xFE1
 18512                           indf2	equ	0xFDF
 18513                           postinc2	equ	0xFDE
 18514                           fsr2h	equ	0xFDA
 18515                           fsr2l	equ	0xFD9
 18516                           status	equ	0xFD8
 18517                           
 18518 ;; *************** function _InternalADC_Read *****************
 18519 ;; Defined at:
 18520 ;;		line 84 in file "ADC.c"
 18521 ;; Parameters:    Size  Location     Type
 18522 ;;  channel         1    wreg     unsigned char 
 18523 ;;  ADCcounts       2   37[BANK0 ] PTR unsigned int 
 18524 ;;		 -> ReadVoltage@temp(2), 
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;  channel         1   42[BANK0 ] unsigned char 
 18527 ;;  AnaChanSel      1   41[BANK0 ] unsigned char 
 18528 ;; Return value:  Size  Location     Type
 18529 ;;                  1    wreg      unsigned char 
 18530 ;; Registers used:
 18531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18532 ;; Tracked objects:
 18533 ;;		On entry : 0/0
 18534 ;;		On exit  : 0/0
 18535 ;;		Unchanged: 0/0
 18536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18538 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18539 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18540 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18541 ;;Total ram usage:        6 bytes
 18542 ;; Hardware stack levels used:    1
 18543 ;; Hardware stack levels required when called:    7
 18544 ;; This function calls:
 18545 ;;		_delayUS
 18546 ;; This function is called by:
 18547 ;;		_ReadVoltage
 18548 ;; This function uses a non-reentrant model
 18549 ;;
 18550                           
 18551                           	psect	text28
 18552  0084E6                     __ptext28:
 18553                           	opt stack 0
 18554  0084E6                     _InternalADC_Read:
 18555                           	opt stack 21
 18556                           
 18557                           ;incstack = 0
 18558                           ;InternalADC_Read@channel stored from wreg
 18559  0084E6  0100               	movlb	0	; () banked
 18560  0084E8  6F8A               	movwf	InternalADC_Read@channel& (0+255),b
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 18564  0084EA  0E01               	movlw	1
 18565  0084EC  0100               	movlb	0	; () banked
 18566  0084EE  6F89               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;ADC.c: 87: if(channel > 0b1100)
 18570  0084F0  0E0C               	movlw	12
 18571  0084F2  0100               	movlb	0	; () banked
 18572  0084F4  658A               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18573  0084F6  D00A               	goto	l13951
 18574                           
 18575                           ; BSR set to: 0
 18576                           ;ADC.c: 88: {
 18577                           ;ADC.c: 89: *ADCcounts = 0;
 18578  0084F8  C085  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18579  0084FC  C086  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18580  008500  0E00               	movlw	0
 18581  008502  6EDE               	movwf	postinc2,c
 18582  008504  0E00               	movlw	0
 18583  008506  6EDD               	movwf	postdec2,c
 18584                           
 18585                           ; BSR set to: 0
 18586                           ;ADC.c: 90: return 0;
 18587  008508  0E00               	movlw	0
 18588                           
 18589                           ; BSR set to: 0
 18590  00850A  0012               	return	
 18591  00850C                     l13951:
 18592                           
 18593                           ; BSR set to: 0
 18594                           ;ADC.c: 91: }
 18595                           ;ADC.c: 92: if(channel > 1)
 18596  00850C  0E01               	movlw	1
 18597  00850E  0100               	movlb	0	; () banked
 18598  008510  658A               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18599  008512  D001               	goto	l13955
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;ADC.c: 95: }
 18603  008514  D009               	goto	l13959
 18604  008516                     l13955:
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;ADC.c: 96: else if (channel == 0)
 18608  008516  0100               	movlb	0	; () banked
 18609  008518  518A               	movf	InternalADC_Read@channel& (0+255),w,b
 18610  00851A  0100               	movlb	0	; () banked
 18611  00851C  A4D8               	btfss	status,2,c
 18612  00851E  D004               	goto	l13959
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;ADC.c: 97: {
 18616                           ;ADC.c: 98: AnaChanSel = 0;
 18617  008520  0E00               	movlw	0
 18618  008522  0100               	movlb	0	; () banked
 18619  008524  6F89               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18620                           
 18621                           ; BSR set to: 0
 18622  008526  D000               	goto	l13959
 18623  008528                     l13959:
 18624                           
 18625                           ; BSR set to: 0
 18626                           ;ADC.c: 99: }
 18627                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 18628  008528  0100               	movlb	0	; () banked
 18629  00852A  4589               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 18630  00852C  46E8               	rlncf	wreg,f,c
 18631  00852E  0BFC               	andlw	252
 18632  008530  12C2               	iorwf	4034,f,c	;volatile
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 18636  008532  98C1               	bcf	4033,4,c	;volatile
 18637                           
 18638                           ; BSR set to: 0
 18639                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 18640  008534  9AC1               	bcf	4033,5,c	;volatile
 18641                           
 18642                           ; BSR set to: 0
 18643                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 18644  008536  80C2               	bsf	4034,0,c	;volatile
 18645                           
 18646                           ; BSR set to: 0
 18647                           ;ADC.c: 107: delayUS(50);
 18648  008538  0E32               	movlw	50
 18649  00853A  0100               	movlb	0	; () banked
 18650  00853C  6F7C               	movwf	delayUS@US& (0+255),b
 18651  00853E  0E00               	movlw	0
 18652  008540  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 18653  008542  0E00               	movlw	0
 18654  008544  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 18655  008546  0E00               	movlw	0
 18656  008548  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 18657  00854A  EC8C  F047         	call	_delayUS	;wreg free
 18658                           
 18659                           ;ADC.c: 109: ADCON0bits.GO = 1;
 18660  00854E  82C2               	bsf	4034,1,c	;volatile
 18661                           
 18662                           ;ADC.c: 110: while(ADCON0bits.GO);
 18663  008550  D000               	goto	l748
 18664  008552                     l748:
 18665  008552  B2C2               	btfsc	4034,1,c	;volatile
 18666  008554  D7FE               	goto	l748
 18667                           
 18668                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 18669  008556  90C2               	bcf	4034,0,c	;volatile
 18670                           
 18671                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 18672  008558  50C3               	movf	4035,w,c	;volatile
 18673  00855A  CFC4 F087          	movff	4036,??_InternalADC_Read	;volatile
 18674  00855E  0100               	movlb	0	; () banked
 18675  008560  6B88               	clrf	(??_InternalADC_Read+1)& (0+255),b
 18676  008562  C087  F088         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 18677  008566  0100               	movlb	0	; () banked
 18678  008568  6B87               	clrf	??_InternalADC_Read& (0+255),b
 18679  00856A  0100               	movlb	0	; () banked
 18680  00856C  2787               	addwf	??_InternalADC_Read& (0+255),f,b
 18681  00856E  0E00               	movlw	0
 18682  008570  2388               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 18683  008572  C085  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18684  008576  C086  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18685  00857A  C087  FFDE         	movff	??_InternalADC_Read,postinc2
 18686  00857E  C088  FFDD         	movff	??_InternalADC_Read+1,postdec2
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;ADC.c: 114: return 1;
 18690  008582  0E01               	movlw	1
 18691  008584  0012               	return	
 18692                           
 18693                           ; BSR set to: 0
 18694                           
 18695                           ; BSR set to: 0
 18696  008586  0012               	return		;funcret
 18697  008588                     __end_of_InternalADC_Read:
 18698                           	opt stack 0
 18699                           tblptru	equ	0xFF8
 18700                           tblptrh	equ	0xFF7
 18701                           tblptrl	equ	0xFF6
 18702                           tablat	equ	0xFF5
 18703                           prodh	equ	0xFF4
 18704                           prodl	equ	0xFF3
 18705                           intcon	equ	0xFF2
 18706                           indf0	equ	0xFEF
 18707                           postinc0	equ	0xFEE
 18708                           fsr0h	equ	0xFEA
 18709                           fsr0l	equ	0xFE9
 18710                           wreg	equ	0xFE8
 18711                           indf1	equ	0xFE7
 18712                           postdec1	equ	0xFE5
 18713                           fsr1h	equ	0xFE2
 18714                           fsr1l	equ	0xFE1
 18715                           indf2	equ	0xFDF
 18716                           postinc2	equ	0xFDE
 18717                           postdec2	equ	0xFDD
 18718                           fsr2h	equ	0xFDA
 18719                           fsr2l	equ	0xFD9
 18720                           status	equ	0xFD8
 18721                           
 18722 ;; *************** function _GetStringAfterComma *****************
 18723 ;; Defined at:
 18724 ;;		line 646 in file "MISC.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;  This            2   28[BANK0 ] PTR unsigned char 
 18727 ;;		 -> main@BluetoothString(255), 
 18728 ;;  CommaNumber     1   30[BANK0 ] unsigned char 
 18729 ;;  result          2   31[BANK0 ] PTR unsigned char 
 18730 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 18731 ;; Auto vars:     Size  Location     Type
 18732 ;;  count           1   35[BANK0 ] unsigned char 
 18733 ;;  tempCommaNum    1   34[BANK0 ] unsigned char 
 18734 ;; Return value:  Size  Location     Type
 18735 ;;                  1    wreg      unsigned char 
 18736 ;; Registers used:
 18737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18738 ;; Tracked objects:
 18739 ;;		On entry : 0/0
 18740 ;;		On exit  : 0/0
 18741 ;;		Unchanged: 0/0
 18742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18743 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18746 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18747 ;;Total ram usage:        8 bytes
 18748 ;; Hardware stack levels used:    1
 18749 ;; Hardware stack levels required when called:    6
 18750 ;; This function calls:
 18751 ;;		Nothing
 18752 ;; This function is called by:
 18753 ;;		_UseBluetooth
 18754 ;; This function uses a non-reentrant model
 18755 ;;
 18756                           
 18757                           	psect	text29
 18758  0078B6                     __ptext29:
 18759                           	opt stack 0
 18760  0078B6                     _GetStringAfterComma:
 18761                           	opt stack 23
 18762                           
 18763                           ;MISC.c: 648: unsigned char tempCommaNumber = 1;
 18764                           
 18765                           ; BSR set to: 0
 18766                           ;incstack = 0
 18767  0078B6  0E01               	movlw	1
 18768  0078B8  0100               	movlb	0	; () banked
 18769  0078BA  6F82               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 18770                           
 18771                           ;MISC.c: 649: unsigned char count = 0;
 18772  0078BC  0E00               	movlw	0
 18773  0078BE  0100               	movlb	0	; () banked
 18774  0078C0  6F83               	movwf	GetStringAfterComma@count& (0+255),b
 18775                           
 18776                           ; BSR set to: 0
 18777                           
 18778                           ;MISC.c: 651: SCAN:while(*This != ',' && *This != 0)
 18779  0078C2  D001               	goto	l14891
 18780                           
 18781                           ; BSR set to: 0
 18782  0078C4  D02B               	goto	L13
 18783  0078C6                     l14891:
 18784                           
 18785                           ; BSR set to: 0
 18786  0078C6  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18787  0078CA  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18788  0078CE  0E2C               	movlw	44
 18789  0078D0  18DE               	xorwf	postinc2,w,c
 18790  0078D2  B4D8               	btfsc	status,2,c
 18791  0078D4  D009               	goto	l14895
 18792                           
 18793                           ; BSR set to: 0
 18794  0078D6  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18795  0078DA  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18796  0078DE  50DF               	movf	indf2,w,c
 18797  0078E0  B4D8               	btfsc	status,2,c
 18798  0078E2  D002               	goto	l14895
 18799  0078E4  D01B               	goto	L13
 18800                           
 18801                           ; BSR set to: 0
 18802  0078E6  D000               	goto	l14895
 18803  0078E8                     l14895:
 18804                           
 18805                           ; BSR set to: 0
 18806                           ;MISC.c: 655: }
 18807                           ;MISC.c: 656: if(*This == 0)
 18808  0078E8  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18809  0078EC  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18810  0078F0  50DF               	movf	indf2,w,c
 18811  0078F2  A4D8               	btfss	status,2,c
 18812  0078F4  D003               	goto	l14903
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;MISC.c: 657: {
 18816                           ;MISC.c: 658: return 1;
 18817  0078F6  0E01               	movlw	1
 18818                           
 18819                           ; BSR set to: 0
 18820  0078F8  0012               	return	
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;MISC.c: 659: }
 18824  0078FA  D015               	goto	l14909
 18825  0078FC                     l14903:
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;MISC.c: 660: else if(*This != ',')
 18829  0078FC  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18830  007900  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18831  007904  0E2C               	movlw	44
 18832  007906  18DE               	xorwf	postinc2,w,c
 18833  007908  B4D8               	btfsc	status,2,c
 18834  00790A  D00D               	goto	l14909
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;MISC.c: 661: {
 18838                           ;MISC.c: 662: if(tempCommaNumber < CommaNumber)
 18839  00790C  0100               	movlb	0	; () banked
 18840  00790E  517E               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 18841  007910  0100               	movlb	0	; () banked
 18842  007912  5D82               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 18843  007914  B0D8               	btfsc	status,0,c
 18844  007916  D007               	goto	l14909
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;MISC.c: 663: {
 18848                           ;MISC.c: 664: tempCommaNumber++;
 18849  007918  0100               	movlb	0	; () banked
 18850  00791A  2B82               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 18851  00791C                     L13:
 18852                           
 18853                           ;MISC.c: 665: This++;
 18854  00791C  0100               	movlb	0	; () banked
 18855  00791E  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18856  007920  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18857                           
 18858                           ;MISC.c: 666: goto SCAN;
 18859  007922  D7D1               	goto	l14891
 18860                           
 18861                           ; BSR set to: 0
 18862                           
 18863                           ; BSR set to: 0
 18864  007924  D000               	goto	l14909
 18865  007926                     l14909:
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;MISC.c: 667: }
 18869                           ;MISC.c: 668: }
 18870                           ;MISC.c: 669: if(*This == 0)
 18871  007926  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18872  00792A  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18873  00792E  50DF               	movf	indf2,w,c
 18874  007930  A4D8               	btfss	status,2,c
 18875  007932  D002               	goto	l14915
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;MISC.c: 670: {
 18879                           ;MISC.c: 671: return 1;
 18880  007934  0E01               	movlw	1
 18881                           
 18882                           ; BSR set to: 0
 18883  007936  0012               	return	
 18884  007938                     l14915:
 18885                           
 18886                           ; BSR set to: 0
 18887                           ;MISC.c: 672: }
 18888                           ;MISC.c: 673: This++;
 18889  007938  0100               	movlb	0	; () banked
 18890  00793A  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18891  00793C  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;MISC.c: 674: if(*This == ' ')
 18895  00793E  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18896  007942  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18897  007946  0E20               	movlw	32
 18898  007948  18DE               	xorwf	postinc2,w,c
 18899  00794A  A4D8               	btfss	status,2,c
 18900  00794C  D004               	goto	l14921
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;MISC.c: 675: {
 18904                           ;MISC.c: 676: This++;
 18905  00794E  0100               	movlb	0	; () banked
 18906  007950  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18907  007952  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18908                           
 18909                           ;MISC.c: 678: }
 18910  007954  D028               	goto	l14943
 18911  007956                     l14921:
 18912                           
 18913                           ; BSR set to: 0
 18914                           ;MISC.c: 679: else if (*This == ',')
 18915  007956  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18916  00795A  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18917  00795E  0E2C               	movlw	44
 18918  007960  18DE               	xorwf	postinc2,w,c
 18919  007962  A4D8               	btfss	status,2,c
 18920  007964  D003               	goto	l14929
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;MISC.c: 680: {
 18924                           ;MISC.c: 681: return 2;
 18925  007966  0E02               	movlw	2
 18926                           
 18927                           ; BSR set to: 0
 18928  007968  0012               	return	
 18929                           
 18930                           ; BSR set to: 0
 18931                           ;MISC.c: 682: }
 18932  00796A  D01D               	goto	l14943
 18933  00796C                     l14929:
 18934                           
 18935                           ; BSR set to: 0
 18936                           ;MISC.c: 683: else if(*This == 0)
 18937  00796C  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18938  007970  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18939  007974  50DF               	movf	indf2,w,c
 18940  007976  A4D8               	btfss	status,2,c
 18941  007978  D016               	goto	l14943
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;MISC.c: 684: {
 18945                           ;MISC.c: 685: return 3;
 18946  00797A  0E03               	movlw	3
 18947                           
 18948                           ; BSR set to: 0
 18949  00797C  0012               	return	
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;MISC.c: 686: }
 18953                           ;MISC.c: 687: while(*This != 0 && *This != ' ' && count < 10)
 18954                           
 18955                           ; BSR set to: 0
 18956                           
 18957                           ; BSR set to: 0
 18958  00797E  D013               	goto	l14943
 18959  007980                     l14935:
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;MISC.c: 688: {
 18963                           ;MISC.c: 689: *result = *This;
 18964  007980  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18965  007984  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18966  007988  C07F  FFE1         	movff	GetStringAfterComma@result,fsr1l
 18967  00798C  C080  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 18968  007990  CFDF FFE7          	movff	indf2,indf1
 18969                           
 18970                           ; BSR set to: 0
 18971                           ;MISC.c: 690: result++;
 18972  007994  0100               	movlb	0	; () banked
 18973  007996  4B7F               	infsnz	GetStringAfterComma@result& (0+255),f,b
 18974  007998  2B80               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;MISC.c: 691: This++;
 18978  00799A  0100               	movlb	0	; () banked
 18979  00799C  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18980  00799E  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18981                           
 18982                           ; BSR set to: 0
 18983                           ;MISC.c: 692: count++;
 18984  0079A0  0100               	movlb	0	; () banked
 18985  0079A2  2B83               	incf	GetStringAfterComma@count& (0+255),f,b
 18986  0079A4  D000               	goto	l14943
 18987  0079A6                     l14943:
 18988                           
 18989                           ; BSR set to: 0
 18990  0079A6  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18991  0079AA  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18992  0079AE  50DF               	movf	indf2,w,c
 18993  0079B0  B4D8               	btfsc	status,2,c
 18994  0079B2  D00D               	goto	l14949
 18995                           
 18996                           ; BSR set to: 0
 18997  0079B4  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18998  0079B8  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18999  0079BC  0E20               	movlw	32
 19000  0079BE  18DE               	xorwf	postinc2,w,c
 19001  0079C0  B4D8               	btfsc	status,2,c
 19002  0079C2  D005               	goto	l14949
 19003                           
 19004                           ; BSR set to: 0
 19005  0079C4  0E09               	movlw	9
 19006  0079C6  0100               	movlb	0	; () banked
 19007  0079C8  6583               	cpfsgt	GetStringAfterComma@count& (0+255),b
 19008  0079CA  D7DA               	goto	l14935
 19009                           
 19010                           ; BSR set to: 0
 19011  0079CC  D000               	goto	l14949
 19012  0079CE                     l14949:
 19013                           
 19014                           ; BSR set to: 0
 19015                           ;MISC.c: 693: }
 19016                           ;MISC.c: 694: return 0;
 19017  0079CE  0E00               	movlw	0
 19018  0079D0  0012               	return	
 19019                           
 19020                           ; BSR set to: 0
 19021                           
 19022                           ; BSR set to: 0
 19023  0079D2  0012               	return		;funcret
 19024  0079D4                     __end_of_GetStringAfterComma:
 19025                           	opt stack 0
 19026                           tblptru	equ	0xFF8
 19027                           tblptrh	equ	0xFF7
 19028                           tblptrl	equ	0xFF6
 19029                           tablat	equ	0xFF5
 19030                           prodh	equ	0xFF4
 19031                           prodl	equ	0xFF3
 19032                           intcon	equ	0xFF2
 19033                           indf0	equ	0xFEF
 19034                           postinc0	equ	0xFEE
 19035                           fsr0h	equ	0xFEA
 19036                           fsr0l	equ	0xFE9
 19037                           wreg	equ	0xFE8
 19038                           indf1	equ	0xFE7
 19039                           postdec1	equ	0xFE5
 19040                           fsr1h	equ	0xFE2
 19041                           fsr1l	equ	0xFE1
 19042                           indf2	equ	0xFDF
 19043                           postinc2	equ	0xFDE
 19044                           postdec2	equ	0xFDD
 19045                           fsr2h	equ	0xFDA
 19046                           fsr2l	equ	0xFD9
 19047                           status	equ	0xFD8
 19048                           
 19049 ;; *************** function _GetNumber *****************
 19050 ;; Defined at:
 19051 ;;		line 457 in file "MISC.c"
 19052 ;; Parameters:    Size  Location     Type
 19053 ;;  This            2   40[BANK0 ] PTR unsigned char 
 19054 ;;		 -> main@BluetoothString(255), 
 19055 ;;  CommaNumber     1   42[BANK0 ] unsigned char 
 19056 ;;  result          2   43[BANK0 ] PTR unsigned long 
 19057 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 19058 ;; Auto vars:     Size  Location     Type
 19059 ;;  temp            4   56[BANK0 ] long 
 19060 ;;  tempThis        1   55[BANK0 ] unsigned char 
 19061 ;;  i               1   54[BANK0 ] unsigned char 
 19062 ;;  Hex             1   53[BANK0 ] unsigned char 
 19063 ;;  count           1   52[BANK0 ] unsigned char 
 19064 ;;  negative        1   51[BANK0 ] unsigned char 
 19065 ;;  tempCommaNum    1   50[BANK0 ] unsigned char 
 19066 ;; Return value:  Size  Location     Type
 19067 ;;                  1    wreg      unsigned char 
 19068 ;; Registers used:
 19069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19070 ;; Tracked objects:
 19071 ;;		On entry : 0/0
 19072 ;;		On exit  : 0/0
 19073 ;;		Unchanged: 0/0
 19074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19075 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19076 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19077 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19078 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19079 ;;Total ram usage:       20 bytes
 19080 ;; Hardware stack levels used:    1
 19081 ;; Hardware stack levels required when called:    7
 19082 ;; This function calls:
 19083 ;;		_IsLetter
 19084 ;;		___lmul
 19085 ;;		_lowercaseChar
 19086 ;; This function is called by:
 19087 ;;		_UseBluetooth
 19088 ;; This function uses a non-reentrant model
 19089 ;;
 19090                           
 19091                           	psect	text30
 19092  004860                     __ptext30:
 19093                           	opt stack 0
 19094  004860                     _GetNumber:
 19095                           	opt stack 22
 19096                           
 19097                           ;MISC.c: 459: unsigned char i =0;
 19098                           
 19099                           ; BSR set to: 0
 19100                           ;incstack = 0
 19101  004860  0E00               	movlw	0
 19102  004862  0100               	movlb	0	; () banked
 19103  004864  6F96               	movwf	GetNumber@i& (0+255),b
 19104                           
 19105                           ;MISC.c: 460: long temp =0;
 19106  004866  0E00               	movlw	0
 19107  004868  0100               	movlb	0	; () banked
 19108  00486A  6F98               	movwf	GetNumber@temp& (0+255),b
 19109  00486C  0E00               	movlw	0
 19110  00486E  6F99               	movwf	(GetNumber@temp+1)& (0+255),b
 19111  004870  0E00               	movlw	0
 19112  004872  6F9A               	movwf	(GetNumber@temp+2)& (0+255),b
 19113  004874  0E00               	movlw	0
 19114  004876  6F9B               	movwf	(GetNumber@temp+3)& (0+255),b
 19115                           
 19116                           ;MISC.c: 461: unsigned char negative =0;
 19117  004878  0E00               	movlw	0
 19118  00487A  0100               	movlb	0	; () banked
 19119  00487C  6F93               	movwf	GetNumber@negative& (0+255),b
 19120                           
 19121                           ;MISC.c: 462: unsigned char tempCommaNumber = 1;
 19122  00487E  0E01               	movlw	1
 19123  004880  0100               	movlb	0	; () banked
 19124  004882  6F92               	movwf	GetNumber@tempCommaNumber& (0+255),b
 19125                           
 19126                           ;MISC.c: 463: unsigned char count =0;
 19127  004884  0E00               	movlw	0
 19128  004886  0100               	movlb	0	; () banked
 19129  004888  6F94               	movwf	GetNumber@count& (0+255),b
 19130                           
 19131                           ;MISC.c: 464: unsigned char Hex = 0;
 19132  00488A  0E00               	movlw	0
 19133  00488C  0100               	movlb	0	; () banked
 19134  00488E  6F95               	movwf	GetNumber@Hex& (0+255),b
 19135                           
 19136                           ;MISC.c: 465: unsigned char tempThis;
 19137                           ;MISC.c: 467: while(*This != 0)
 19138  004890  D038               	goto	l14673
 19139  004892                     l14653:
 19140                           
 19141                           ; BSR set to: 0
 19142                           ;MISC.c: 468: {
 19143                           ;MISC.c: 469: if(*This == '0')
 19144  004892  C088  FFD9         	movff	GetNumber@This,fsr2l
 19145  004896  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19146  00489A  0E30               	movlw	48
 19147  00489C  18DE               	xorwf	postinc2,w,c
 19148  00489E  A4D8               	btfss	status,2,c
 19149  0048A0  D02A               	goto	l14669
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;MISC.c: 470: {
 19153                           ;MISC.c: 471: count++;
 19154  0048A2  0100               	movlb	0	; () banked
 19155  0048A4  2B94               	incf	GetNumber@count& (0+255),f,b
 19156                           
 19157                           ;MISC.c: 472: This++;
 19158  0048A6  0100               	movlb	0	; () banked
 19159  0048A8  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19160  0048AA  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;MISC.c: 473: if(*This == 'x' || *This == 'X')
 19164  0048AC  C088  FFD9         	movff	GetNumber@This,fsr2l
 19165  0048B0  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19166  0048B4  0E78               	movlw	120
 19167  0048B6  18DE               	xorwf	postinc2,w,c
 19168  0048B8  B4D8               	btfsc	status,2,c
 19169  0048BA  D008               	goto	l14661
 19170                           
 19171                           ; BSR set to: 0
 19172  0048BC  C088  FFD9         	movff	GetNumber@This,fsr2l
 19173  0048C0  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19174  0048C4  0E58               	movlw	88
 19175  0048C6  18DE               	xorwf	postinc2,w,c
 19176  0048C8  A4D8               	btfss	status,2,c
 19177  0048CA  D015               	goto	l14669
 19178  0048CC                     l14661:
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;MISC.c: 474: {
 19182                           ;MISC.c: 475: This++;
 19183  0048CC  0100               	movlb	0	; () banked
 19184  0048CE  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19185  0048D0  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;MISC.c: 476: if(*This >='0' && *This <='9')
 19189  0048D2  C088  FFD9         	movff	GetNumber@This,fsr2l
 19190  0048D6  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19191  0048DA  0E2F               	movlw	47
 19192  0048DC  64DF               	cpfsgt	indf2,c
 19193  0048DE  D00B               	goto	l14669
 19194                           
 19195                           ; BSR set to: 0
 19196  0048E0  C088  FFD9         	movff	GetNumber@This,fsr2l
 19197  0048E4  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19198  0048E8  0E3A               	movlw	58
 19199  0048EA  60DF               	cpfslt	indf2,c
 19200  0048EC  D004               	goto	l14669
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;MISC.c: 477: {
 19204                           ;MISC.c: 478: Hex = 1;
 19205  0048EE  0E01               	movlw	1
 19206  0048F0  0100               	movlb	0	; () banked
 19207  0048F2  6F95               	movwf	GetNumber@Hex& (0+255),b
 19208                           
 19209                           ; BSR set to: 0
 19210                           
 19211                           ; BSR set to: 0
 19212  0048F4  D000               	goto	l14669
 19213  0048F6                     l14669:
 19214                           
 19215                           ; BSR set to: 0
 19216                           ;MISC.c: 479: }
 19217                           ;MISC.c: 480: }
 19218                           ;MISC.c: 481: }
 19219                           ;MISC.c: 482: count++;
 19220  0048F6  0100               	movlb	0	; () banked
 19221  0048F8  2B94               	incf	GetNumber@count& (0+255),f,b
 19222                           
 19223                           ; BSR set to: 0
 19224                           ;MISC.c: 483: This++;
 19225  0048FA  0100               	movlb	0	; () banked
 19226  0048FC  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19227  0048FE  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19228  004900  D000               	goto	l14673
 19229  004902                     l14673:
 19230                           
 19231                           ; BSR set to: 0
 19232  004902  C088  FFD9         	movff	GetNumber@This,fsr2l
 19233  004906  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19234  00490A  50DF               	movf	indf2,w,c
 19235  00490C  A4D8               	btfss	status,2,c
 19236  00490E  D7C1               	goto	l14653
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;MISC.c: 484: }
 19240                           ;MISC.c: 485: This-=count;
 19241                           
 19242                           ; BSR set to: 0
 19243  004910  0100               	movlb	0	; () banked
 19244  004912  5194               	movf	GetNumber@count& (0+255),w,b
 19245  004914  0D01               	mullw	1
 19246  004916  50F3               	movf	prodl,w,c
 19247  004918  0100               	movlb	0	; () banked
 19248  00491A  5F88               	subwf	GetNumber@This& (0+255),f,b
 19249  00491C  50F4               	movf	prodh,w,c
 19250  00491E  0100               	movlb	0	; () banked
 19251  004920  5B89               	subwfb	(GetNumber@This+1)& (0+255),f,b
 19252                           
 19253                           ; BSR set to: 0
 19254                           
 19255                           ;MISC.c: 487: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 19256  004922  D001               	goto	l14679
 19257                           
 19258                           ; BSR set to: 0
 19259  004924  D03B               	goto	L14
 19260  004926                     l14679:
 19261                           
 19262                           ; BSR set to: 0
 19263  004926  C088  FFD9         	movff	GetNumber@This,fsr2l
 19264  00492A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19265  00492E  0E3D               	movlw	61
 19266  004930  18DE               	xorwf	postinc2,w,c
 19267  004932  B4D8               	btfsc	status,2,c
 19268  004934  D011               	goto	l14685
 19269                           
 19270                           ; BSR set to: 0
 19271  004936  C088  FFD9         	movff	GetNumber@This,fsr2l
 19272  00493A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19273  00493E  0E2C               	movlw	44
 19274  004940  18DE               	xorwf	postinc2,w,c
 19275  004942  B4D8               	btfsc	status,2,c
 19276  004944  D009               	goto	l14685
 19277                           
 19278                           ; BSR set to: 0
 19279  004946  C088  FFD9         	movff	GetNumber@This,fsr2l
 19280  00494A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19281  00494E  50DF               	movf	indf2,w,c
 19282  004950  B4D8               	btfsc	status,2,c
 19283  004952  D002               	goto	l14685
 19284  004954  D023               	goto	L14
 19285                           
 19286                           ; BSR set to: 0
 19287  004956  D000               	goto	l14685
 19288  004958                     l14685:
 19289                           
 19290                           ; BSR set to: 0
 19291                           ;MISC.c: 491: }
 19292                           ;MISC.c: 492: if(*This == 0)
 19293  004958  C088  FFD9         	movff	GetNumber@This,fsr2l
 19294  00495C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19295  004960  50DF               	movf	indf2,w,c
 19296  004962  A4D8               	btfss	status,2,c
 19297  004964  D003               	goto	l14693
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;MISC.c: 493: {
 19301                           ;MISC.c: 494: return 1;
 19302  004966  0E01               	movlw	1
 19303                           
 19304                           ; BSR set to: 0
 19305  004968  0012               	return	
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;MISC.c: 495: }
 19309  00496A  D01D               	goto	l14701
 19310  00496C                     l14693:
 19311                           
 19312                           ; BSR set to: 0
 19313                           ;MISC.c: 496: else if(*This != '=' || *This != ',')
 19314  00496C  C088  FFD9         	movff	GetNumber@This,fsr2l
 19315  004970  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19316  004974  0E3D               	movlw	61
 19317  004976  18DE               	xorwf	postinc2,w,c
 19318  004978  A4D8               	btfss	status,2,c
 19319  00497A  D008               	goto	l14697
 19320                           
 19321                           ; BSR set to: 0
 19322  00497C  C088  FFD9         	movff	GetNumber@This,fsr2l
 19323  004980  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19324  004984  0E2C               	movlw	44
 19325  004986  18DE               	xorwf	postinc2,w,c
 19326  004988  B4D8               	btfsc	status,2,c
 19327  00498A  D00D               	goto	l14701
 19328  00498C                     l14697:
 19329                           
 19330                           ; BSR set to: 0
 19331                           ;MISC.c: 497: {
 19332                           ;MISC.c: 498: if(tempCommaNumber < CommaNumber)
 19333  00498C  0100               	movlb	0	; () banked
 19334  00498E  518A               	movf	GetNumber@CommaNumber& (0+255),w,b
 19335  004990  0100               	movlb	0	; () banked
 19336  004992  5D92               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 19337  004994  B0D8               	btfsc	status,0,c
 19338  004996  D007               	goto	l14701
 19339                           
 19340                           ; BSR set to: 0
 19341                           ;MISC.c: 499: {
 19342                           ;MISC.c: 500: tempCommaNumber++;
 19343  004998  0100               	movlb	0	; () banked
 19344  00499A  2B92               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 19345  00499C                     L14:
 19346                           
 19347                           ;MISC.c: 501: This++;
 19348  00499C  0100               	movlb	0	; () banked
 19349  00499E  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19350  0049A0  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19351                           
 19352                           ;MISC.c: 502: goto SCAN;
 19353  0049A2  D7C1               	goto	l14679
 19354                           
 19355                           ; BSR set to: 0
 19356                           
 19357                           ; BSR set to: 0
 19358  0049A4  D000               	goto	l14701
 19359  0049A6                     l14701:
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;MISC.c: 503: }
 19363                           ;MISC.c: 504: }
 19364                           ;MISC.c: 505: if(*This == 0)
 19365  0049A6  C088  FFD9         	movff	GetNumber@This,fsr2l
 19366  0049AA  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19367  0049AE  50DF               	movf	indf2,w,c
 19368  0049B0  A4D8               	btfss	status,2,c
 19369  0049B2  D002               	goto	l14707
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;MISC.c: 506: {
 19373                           ;MISC.c: 507: return 1;
 19374  0049B4  0E01               	movlw	1
 19375                           
 19376                           ; BSR set to: 0
 19377  0049B6  0012               	return	
 19378  0049B8                     l14707:
 19379                           
 19380                           ; BSR set to: 0
 19381                           ;MISC.c: 508: }
 19382                           ;MISC.c: 509: This++;
 19383  0049B8  0100               	movlb	0	; () banked
 19384  0049BA  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19385  0049BC  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;MISC.c: 510: if(*This == ' ')
 19389  0049BE  C088  FFD9         	movff	GetNumber@This,fsr2l
 19390  0049C2  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19391  0049C6  0E20               	movlw	32
 19392  0049C8  18DE               	xorwf	postinc2,w,c
 19393  0049CA  B4D8               	btfsc	status,2,c
 19394  0049CC  D01E               	goto	l14727
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;MISC.c: 515: else if (*This == '=' || *This == ',')
 19398                           
 19399                           ; BSR set to: 0
 19400                           
 19401                           ;MISC.c: 514: }
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;MISC.c: 511: {
 19405                           ;MISC.c: 512: This++;
 19406  0049CE  C088  FFD9         	movff	GetNumber@This,fsr2l
 19407  0049D2  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19408  0049D6  0E3D               	movlw	61
 19409  0049D8  18DE               	xorwf	postinc2,w,c
 19410  0049DA  B4D8               	btfsc	status,2,c
 19411  0049DC  D008               	goto	l14717
 19412                           
 19413                           ; BSR set to: 0
 19414  0049DE  C088  FFD9         	movff	GetNumber@This,fsr2l
 19415  0049E2  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19416  0049E6  0E2C               	movlw	44
 19417  0049E8  18DE               	xorwf	postinc2,w,c
 19418  0049EA  A4D8               	btfss	status,2,c
 19419  0049EC  D003               	goto	l14723
 19420  0049EE                     l14717:
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;MISC.c: 516: {
 19424                           ;MISC.c: 517: return 2;
 19425  0049EE  0E02               	movlw	2
 19426                           
 19427                           ; BSR set to: 0
 19428  0049F0  0012               	return	
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;MISC.c: 518: }
 19432  0049F2  D019               	goto	l14735
 19433  0049F4                     l14723:
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;MISC.c: 519: else if(*This == '-')
 19437  0049F4  C088  FFD9         	movff	GetNumber@This,fsr2l
 19438  0049F8  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19439  0049FC  0E2D               	movlw	45
 19440  0049FE  18DE               	xorwf	postinc2,w,c
 19441  004A00  A4D8               	btfss	status,2,c
 19442  004A02  D007               	goto	l14729
 19443                           
 19444                           ; BSR set to: 0
 19445                           ;MISC.c: 520: {
 19446                           ;MISC.c: 521: negative = 1;
 19447  004A04  0E01               	movlw	1
 19448  004A06  0100               	movlb	0	; () banked
 19449  004A08  6F93               	movwf	GetNumber@negative& (0+255),b
 19450  004A0A                     l14727:
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;MISC.c: 522: This++;
 19454  004A0A  0100               	movlb	0	; () banked
 19455  004A0C  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19456  004A0E  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19457                           
 19458                           ;MISC.c: 524: }
 19459  004A10  D00A               	goto	l14735
 19460  004A12                     l14729:
 19461                           
 19462                           ; BSR set to: 0
 19463                           ;MISC.c: 525: else if(*This == 0)
 19464  004A12  C088  FFD9         	movff	GetNumber@This,fsr2l
 19465  004A16  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19466  004A1A  50DF               	movf	indf2,w,c
 19467  004A1C  A4D8               	btfss	status,2,c
 19468  004A1E  D003               	goto	l14735
 19469                           
 19470                           ; BSR set to: 0
 19471                           ;MISC.c: 526: {
 19472                           ;MISC.c: 527: return 3;
 19473  004A20  0E03               	movlw	3
 19474                           
 19475                           ; BSR set to: 0
 19476  004A22  0012               	return	
 19477                           
 19478                           ; BSR set to: 0
 19479                           
 19480                           ; BSR set to: 0
 19481                           
 19482                           ; BSR set to: 0
 19483  004A24  D000               	goto	l14735
 19484  004A26                     l14735:
 19485                           
 19486                           ; BSR set to: 0
 19487                           ;MISC.c: 528: }
 19488                           ;MISC.c: 529: if(Hex)
 19489  004A26  0100               	movlb	0	; () banked
 19490  004A28  5195               	movf	GetNumber@Hex& (0+255),w,b
 19491  004A2A  0100               	movlb	0	; () banked
 19492  004A2C  B4D8               	btfsc	status,2,c
 19493  004A2E  D11C               	goto	l14799
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;MISC.c: 530: {
 19497                           ;MISC.c: 531: negative = 0;
 19498  004A30  0E00               	movlw	0
 19499  004A32  0100               	movlb	0	; () banked
 19500  004A34  6F93               	movwf	GetNumber@negative& (0+255),b
 19501                           
 19502                           ;MISC.c: 532: while(*This != 'x' && *This != 'X')
 19503  004A36  D004               	goto	l14741
 19504  004A38                     l14739:
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;MISC.c: 533: {
 19508                           ;MISC.c: 535: This++;
 19509  004A38  0100               	movlb	0	; () banked
 19510  004A3A  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19511  004A3C  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19512  004A3E  D000               	goto	l14741
 19513  004A40                     l14741:
 19514                           
 19515                           ; BSR set to: 0
 19516  004A40  C088  FFD9         	movff	GetNumber@This,fsr2l
 19517  004A44  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19518  004A48  0E78               	movlw	120
 19519  004A4A  18DE               	xorwf	postinc2,w,c
 19520  004A4C  B4D8               	btfsc	status,2,c
 19521  004A4E  D108               	goto	l14797
 19522                           
 19523                           ; BSR set to: 0
 19524  004A50  C088  FFD9         	movff	GetNumber@This,fsr2l
 19525  004A54  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19526  004A58  0E58               	movlw	88
 19527  004A5A  18DE               	xorwf	postinc2,w,c
 19528  004A5C  B4D8               	btfsc	status,2,c
 19529  004A5E  D100               	goto	l14797
 19530  004A60  D7EB               	goto	l14739
 19531                           
 19532                           ; BSR set to: 0
 19533  004A62  D0FE               	goto	l14797
 19534                           
 19535                           ; BSR set to: 0
 19536  004A64  D0FD               	goto	l14797
 19537                           
 19538                           ; BSR set to: 0
 19539                           ;MISC.c: 538: }
 19540                           ;MISC.c: 539: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;MISC.c: 536: }
 19544                           ;MISC.c: 537: This++;
 19545  004A66  D100               	goto	l14799
 19546  004A68                     l14747:
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;MISC.c: 540: {
 19550                           ;MISC.c: 541: if(!Hex)
 19551  004A68  0100               	movlb	0	; () banked
 19552  004A6A  5195               	movf	GetNumber@Hex& (0+255),w,b
 19553  004A6C  0100               	movlb	0	; () banked
 19554  004A6E  A4D8               	btfss	status,2,c
 19555  004A70  D05B               	goto	l14765
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;MISC.c: 542: {
 19559                           ;MISC.c: 543: if(*This >=48 && *This <= 57)
 19560  004A72  C088  FFD9         	movff	GetNumber@This,fsr2l
 19561  004A76  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19562  004A7A  0E2F               	movlw	47
 19563  004A7C  64DF               	cpfsgt	indf2,c
 19564  004A7E  D0F0               	goto	l14797
 19565                           
 19566                           ; BSR set to: 0
 19567  004A80  C088  FFD9         	movff	GetNumber@This,fsr2l
 19568  004A84  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19569  004A88  0E3A               	movlw	58
 19570  004A8A  60DF               	cpfslt	indf2,c
 19571  004A8C  D0E9               	goto	l14797
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;MISC.c: 544: {
 19575                           ;MISC.c: 545: temp = temp * 10;
 19576  004A8E  C098  F07C         	movff	GetNumber@temp,___lmul@multiplier
 19577  004A92  C099  F07D         	movff	GetNumber@temp+1,___lmul@multiplier+1
 19578  004A96  C09A  F07E         	movff	GetNumber@temp+2,___lmul@multiplier+2
 19579  004A9A  C09B  F07F         	movff	GetNumber@temp+3,___lmul@multiplier+3
 19580  004A9E  0E0A               	movlw	10
 19581  004AA0  0100               	movlb	0	; () banked
 19582  004AA2  6F80               	movwf	___lmul@multiplicand& (0+255),b
 19583  004AA4  0E00               	movlw	0
 19584  004AA6  6F81               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19585  004AA8  0E00               	movlw	0
 19586  004AAA  6F82               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19587  004AAC  0E00               	movlw	0
 19588  004AAE  6F83               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19589  004AB0  ECFC  F044         	call	___lmul	;wreg free
 19590  004AB4  C07C  F098         	movff	?___lmul,GetNumber@temp
 19591  004AB8  C07D  F099         	movff	?___lmul+1,GetNumber@temp+1
 19592  004ABC  C07E  F09A         	movff	?___lmul+2,GetNumber@temp+2
 19593  004AC0  C07F  F09B         	movff	?___lmul+3,GetNumber@temp+3
 19594                           
 19595                           ;MISC.c: 546: temp += *This - 48;
 19596  004AC4  C088  FFD9         	movff	GetNumber@This,fsr2l
 19597  004AC8  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19598  004ACC  50DF               	movf	indf2,w,c
 19599  004ACE  0100               	movlb	0	; () banked
 19600  004AD0  6F8D               	movwf	??_GetNumber& (0+255),b
 19601  004AD2  0ED0               	movlw	208
 19602  004AD4  0100               	movlb	0	; () banked
 19603  004AD6  258D               	addwf	??_GetNumber& (0+255),w,b
 19604  004AD8  0100               	movlb	0	; () banked
 19605  004ADA  6F8E               	movwf	(??_GetNumber+1)& (0+255),b
 19606  004ADC  0100               	movlb	0	; () banked
 19607  004ADE  6B8F               	clrf	(??_GetNumber+2)& (0+255),b
 19608  004AE0  0EFF               	movlw	255
 19609  004AE2  238F               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19610  004AE4  0100               	movlb	0	; () banked
 19611  004AE6  6B90               	clrf	(??_GetNumber+3)& (0+255),b
 19612  004AE8  0100               	movlb	0	; () banked
 19613  004AEA  BF8F               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19614  004AEC  0790               	decf	(??_GetNumber+3)& (0+255),f,b
 19615  004AEE  0100               	movlb	0	; () banked
 19616  004AF0  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19617  004AF2  0100               	movlb	0	; () banked
 19618  004AF4  6F91               	movwf	(??_GetNumber+4)& (0+255),b
 19619  004AF6  0100               	movlb	0	; () banked
 19620  004AF8  518E               	movf	(??_GetNumber+1)& (0+255),w,b
 19621  004AFA  0100               	movlb	0	; () banked
 19622  004AFC  2798               	addwf	GetNumber@temp& (0+255),f,b
 19623  004AFE  0100               	movlb	0	; () banked
 19624  004B00  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19625  004B02  0100               	movlb	0	; () banked
 19626  004B04  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19627  004B06  0100               	movlb	0	; () banked
 19628  004B08  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19629  004B0A  0100               	movlb	0	; () banked
 19630  004B0C  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19631  004B0E  0100               	movlb	0	; () banked
 19632  004B10  5191               	movf	(??_GetNumber+4)& (0+255),w,b
 19633  004B12  0100               	movlb	0	; () banked
 19634  004B14  239B               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19635                           
 19636                           ; BSR set to: 0
 19637                           ;MISC.c: 547: i++;
 19638  004B16  0100               	movlb	0	; () banked
 19639  004B18  2B96               	incf	GetNumber@i& (0+255),f,b
 19640  004B1A                     l14759:
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;MISC.c: 548: if(i>32)
 19644  004B1A  0E20               	movlw	32
 19645  004B1C  0100               	movlb	0	; () banked
 19646  004B1E  6596               	cpfsgt	GetNumber@i& (0+255),b
 19647  004B20  D09F               	goto	l14797
 19648                           
 19649                           ; BSR set to: 0
 19650                           ;MISC.c: 549: {
 19651                           ;MISC.c: 550: return 4;
 19652  004B22  0E04               	movlw	4
 19653                           
 19654                           ; BSR set to: 0
 19655  004B24  0012               	return	
 19656                           
 19657                           ; BSR set to: 0
 19658                           ;MISC.c: 551: }
 19659                           ;MISC.c: 552: }
 19660                           ;MISC.c: 553: }
 19661                           
 19662                           ; BSR set to: 0
 19663  004B26  D09C               	goto	l14797
 19664  004B28                     l14765:
 19665                           
 19666                           ; BSR set to: 0
 19667                           ;MISC.c: 554: else
 19668                           ;MISC.c: 555: {
 19669                           ;MISC.c: 556: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 19670  004B28  C088  FFD9         	movff	GetNumber@This,fsr2l
 19671  004B2C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19672  004B30  0E2F               	movlw	47
 19673  004B32  64DF               	cpfsgt	indf2,c
 19674  004B34  D008               	goto	l14769
 19675                           
 19676                           ; BSR set to: 0
 19677  004B36  C088  FFD9         	movff	GetNumber@This,fsr2l
 19678  004B3A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19679  004B3E  0E39               	movlw	57
 19680  004B40  64DF               	cpfsgt	indf2,c
 19681  004B42  D01F               	goto	l14777
 19682  004B44  D000               	goto	l14769
 19683  004B46                     l14769:
 19684                           
 19685                           ; BSR set to: 0
 19686  004B46  C088  FFD9         	movff	GetNumber@This,fsr2l
 19687  004B4A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19688  004B4E  0E40               	movlw	64
 19689  004B50  64DF               	cpfsgt	indf2,c
 19690  004B52  D008               	goto	l14773
 19691                           
 19692                           ; BSR set to: 0
 19693  004B54  C088  FFD9         	movff	GetNumber@This,fsr2l
 19694  004B58  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19695  004B5C  0E46               	movlw	70
 19696  004B5E  64DF               	cpfsgt	indf2,c
 19697  004B60  D010               	goto	l14777
 19698  004B62  D000               	goto	l14773
 19699  004B64                     l14773:
 19700                           
 19701                           ; BSR set to: 0
 19702  004B64  C088  FFD9         	movff	GetNumber@This,fsr2l
 19703  004B68  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19704  004B6C  0E60               	movlw	96
 19705  004B6E  64DF               	cpfsgt	indf2,c
 19706  004B70  D077               	goto	l14797
 19707                           
 19708                           ; BSR set to: 0
 19709  004B72  C088  FFD9         	movff	GetNumber@This,fsr2l
 19710  004B76  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19711  004B7A  0E67               	movlw	103
 19712  004B7C  60DF               	cpfslt	indf2,c
 19713  004B7E  D070               	goto	l14797
 19714  004B80  D000               	goto	l14777
 19715  004B82                     l14777:
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;MISC.c: 557: {
 19719                           ;MISC.c: 558: temp <<= 4;
 19720  004B82  0100               	movlb	0	; () banked
 19721  004B84  0E04               	movlw	4
 19722  004B86                     u18325:
 19723  004B86  90D8               	bcf	status,0,c
 19724  004B88  3798               	rlcf	GetNumber@temp& (0+255),f,b
 19725  004B8A  3799               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 19726  004B8C  379A               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 19727  004B8E  379B               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 19728  004B90  2EE8               	decfsz	wreg,f,c
 19729  004B92  D7F9               	goto	u18325
 19730                           
 19731                           ; BSR set to: 0
 19732                           ;MISC.c: 559: tempThis = *This;
 19733  004B94  C088  FFD9         	movff	GetNumber@This,fsr2l
 19734  004B98  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19735  004B9C  50DF               	movf	indf2,w,c
 19736  004B9E  0100               	movlb	0	; () banked
 19737  004BA0  6F97               	movwf	GetNumber@tempThis& (0+255),b
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;MISC.c: 560: if(IsLetter(tempThis))
 19741  004BA2  0100               	movlb	0	; () banked
 19742  004BA4  5197               	movf	GetNumber@tempThis& (0+255),w,b
 19743  004BA6  ECE5  F049         	call	_IsLetter
 19744  004BAA  0900               	iorlw	0
 19745  004BAC  B4D8               	btfsc	status,2,c
 19746  004BAE  D029               	goto	l14787
 19747                           
 19748                           ;MISC.c: 561: {
 19749                           ;MISC.c: 562: lowercaseChar(&tempThis);
 19750  004BB0  0E97               	movlw	low GetNumber@tempThis
 19751  004BB2  0100               	movlb	0	; () banked
 19752  004BB4  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 19753  004BB6  0E00               	movlw	high GetNumber@tempThis
 19754  004BB8  0100               	movlb	0	; () banked
 19755  004BBA  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 19756  004BBC  ECA6  F049         	call	_lowercaseChar	;wreg free
 19757                           
 19758                           ;MISC.c: 563: temp += (tempThis - 87);
 19759  004BC0  0EA9               	movlw	169
 19760  004BC2  0100               	movlb	0	; () banked
 19761  004BC4  2597               	addwf	GetNumber@tempThis& (0+255),w,b
 19762  004BC6  0100               	movlb	0	; () banked
 19763  004BC8  6F8D               	movwf	??_GetNumber& (0+255),b
 19764  004BCA  0100               	movlb	0	; () banked
 19765  004BCC  6B8E               	clrf	(??_GetNumber+1)& (0+255),b
 19766  004BCE  0EFF               	movlw	255
 19767  004BD0  238E               	addwfc	(??_GetNumber+1)& (0+255),f,b
 19768  004BD2  0100               	movlb	0	; () banked
 19769  004BD4  6B8F               	clrf	(??_GetNumber+2)& (0+255),b
 19770  004BD6  0100               	movlb	0	; () banked
 19771  004BD8  BF8E               	btfsc	(??_GetNumber+1)& (0+255),7,b
 19772  004BDA  078F               	decf	(??_GetNumber+2)& (0+255),f,b
 19773  004BDC  0100               	movlb	0	; () banked
 19774  004BDE  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19775  004BE0  0100               	movlb	0	; () banked
 19776  004BE2  6F90               	movwf	(??_GetNumber+3)& (0+255),b
 19777  004BE4  0100               	movlb	0	; () banked
 19778  004BE6  518D               	movf	??_GetNumber& (0+255),w,b
 19779  004BE8  0100               	movlb	0	; () banked
 19780  004BEA  2798               	addwf	GetNumber@temp& (0+255),f,b
 19781  004BEC  0100               	movlb	0	; () banked
 19782  004BEE  518E               	movf	(??_GetNumber+1)& (0+255),w,b
 19783  004BF0  0100               	movlb	0	; () banked
 19784  004BF2  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19785  004BF4  0100               	movlb	0	; () banked
 19786  004BF6  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19787  004BF8  0100               	movlb	0	; () banked
 19788  004BFA  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19789  004BFC  0100               	movlb	0	; () banked
 19790  004BFE  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19791  004C00  D027               	goto	L15
 19792  004C02                     l14787:
 19793                           
 19794                           ;MISC.c: 565: else
 19795                           ;MISC.c: 566: {
 19796                           ;MISC.c: 567: temp += (*This - 48);
 19797  004C02  C088  FFD9         	movff	GetNumber@This,fsr2l
 19798  004C06  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19799  004C0A  50DF               	movf	indf2,w,c
 19800  004C0C  0100               	movlb	0	; () banked
 19801  004C0E  6F8D               	movwf	??_GetNumber& (0+255),b
 19802  004C10  0ED0               	movlw	208
 19803  004C12  0100               	movlb	0	; () banked
 19804  004C14  258D               	addwf	??_GetNumber& (0+255),w,b
 19805  004C16  0100               	movlb	0	; () banked
 19806  004C18  6F8E               	movwf	(??_GetNumber+1)& (0+255),b
 19807  004C1A  0100               	movlb	0	; () banked
 19808  004C1C  6B8F               	clrf	(??_GetNumber+2)& (0+255),b
 19809  004C1E  0EFF               	movlw	255
 19810  004C20  238F               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19811  004C22  0100               	movlb	0	; () banked
 19812  004C24  6B90               	clrf	(??_GetNumber+3)& (0+255),b
 19813  004C26  0100               	movlb	0	; () banked
 19814  004C28  BF8F               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19815  004C2A  0790               	decf	(??_GetNumber+3)& (0+255),f,b
 19816  004C2C  0100               	movlb	0	; () banked
 19817  004C2E  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19818  004C30  0100               	movlb	0	; () banked
 19819  004C32  6F91               	movwf	(??_GetNumber+4)& (0+255),b
 19820  004C34  0100               	movlb	0	; () banked
 19821  004C36  518E               	movf	(??_GetNumber+1)& (0+255),w,b
 19822  004C38  0100               	movlb	0	; () banked
 19823  004C3A  2798               	addwf	GetNumber@temp& (0+255),f,b
 19824  004C3C  0100               	movlb	0	; () banked
 19825  004C3E  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19826  004C40  0100               	movlb	0	; () banked
 19827  004C42  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19828  004C44  0100               	movlb	0	; () banked
 19829  004C46  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19830  004C48  0100               	movlb	0	; () banked
 19831  004C4A  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19832  004C4C  0100               	movlb	0	; () banked
 19833  004C4E  5191               	movf	(??_GetNumber+4)& (0+255),w,b
 19834  004C50                     L15:
 19835  004C50  0100               	movlb	0	; () banked
 19836  004C52  239B               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19837  004C54  D000               	goto	l14789
 19838  004C56                     l14789:
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;MISC.c: 568: }
 19842                           ;MISC.c: 569: i++;
 19843  004C56  0100               	movlb	0	; () banked
 19844  004C58  2B96               	incf	GetNumber@i& (0+255),f,b
 19845  004C5A  D75F               	goto	l14759
 19846                           
 19847                           ; BSR set to: 0
 19848                           
 19849                           ; BSR set to: 0
 19850                           ;MISC.c: 571: {
 19851                           ;MISC.c: 572: return 4;
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;MISC.c: 570: if(i>32)
 19855  004C5C  0012               	return	
 19856                           
 19857                           ; BSR set to: 0
 19858                           
 19859                           ; BSR set to: 0
 19860  004C5E  D000               	goto	l14797
 19861  004C60                     l14797:
 19862                           
 19863                           ; BSR set to: 0
 19864                           ;MISC.c: 573: }
 19865                           ;MISC.c: 574: }
 19866                           ;MISC.c: 575: }
 19867                           ;MISC.c: 576: This++;
 19868  004C60  0100               	movlb	0	; () banked
 19869  004C62  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19870  004C64  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19871  004C66  D000               	goto	l14799
 19872  004C68                     l14799:
 19873                           
 19874                           ; BSR set to: 0
 19875  004C68  C088  FFD9         	movff	GetNumber@This,fsr2l
 19876  004C6C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19877  004C70  50DF               	movf	indf2,w,c
 19878  004C72  B4D8               	btfsc	status,2,c
 19879  004C74  D01A               	goto	l14807
 19880                           
 19881                           ; BSR set to: 0
 19882  004C76  C088  FFD9         	movff	GetNumber@This,fsr2l
 19883  004C7A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19884  004C7E  0E20               	movlw	32
 19885  004C80  18DE               	xorwf	postinc2,w,c
 19886  004C82  B4D8               	btfsc	status,2,c
 19887  004C84  D012               	goto	l14807
 19888                           
 19889                           ; BSR set to: 0
 19890  004C86  C088  FFD9         	movff	GetNumber@This,fsr2l
 19891  004C8A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19892  004C8E  0E2C               	movlw	44
 19893  004C90  18DE               	xorwf	postinc2,w,c
 19894  004C92  B4D8               	btfsc	status,2,c
 19895  004C94  D00A               	goto	l14807
 19896                           
 19897                           ; BSR set to: 0
 19898  004C96  C088  FFD9         	movff	GetNumber@This,fsr2l
 19899  004C9A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19900  004C9E  0E3D               	movlw	61
 19901  004CA0  18DE               	xorwf	postinc2,w,c
 19902  004CA2  B4D8               	btfsc	status,2,c
 19903  004CA4  D002               	goto	l14807
 19904  004CA6  D6E0               	goto	l14747
 19905                           
 19906                           ; BSR set to: 0
 19907  004CA8  D000               	goto	l14807
 19908  004CAA                     l14807:
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;MISC.c: 577: }
 19912                           ;MISC.c: 578: if(negative)
 19913  004CAA  0100               	movlb	0	; () banked
 19914  004CAC  5193               	movf	GetNumber@negative& (0+255),w,b
 19915  004CAE  0100               	movlb	0	; () banked
 19916  004CB0  B4D8               	btfsc	status,2,c
 19917  004CB2  D00A               	goto	l14811
 19918                           
 19919                           ; BSR set to: 0
 19920                           ;MISC.c: 579: {
 19921                           ;MISC.c: 580: temp = (temp * -1);
 19922  004CB4  0100               	movlb	0	; () banked
 19923  004CB6  1F9B               	comf	(GetNumber@temp+3)& (0+255),f,b
 19924  004CB8  1F9A               	comf	(GetNumber@temp+2)& (0+255),f,b
 19925  004CBA  1F99               	comf	(GetNumber@temp+1)& (0+255),f,b
 19926  004CBC  6D98               	negf	GetNumber@temp& (0+255),b
 19927  004CBE  0E00               	movlw	0
 19928  004CC0  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19929  004CC2  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19930  004CC4  239B               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19931  004CC6  D000               	goto	l14811
 19932  004CC8                     l14811:
 19933                           
 19934                           ; BSR set to: 0
 19935                           ;MISC.c: 581: }
 19936                           ;MISC.c: 582: *result = temp;
 19937  004CC8  C08B  FFD9         	movff	GetNumber@result,fsr2l
 19938  004CCC  C08C  FFDA         	movff	GetNumber@result+1,fsr2h
 19939  004CD0  C098  FFDE         	movff	GetNumber@temp,postinc2
 19940  004CD4  C099  FFDE         	movff	GetNumber@temp+1,postinc2
 19941  004CD8  C09A  FFDE         	movff	GetNumber@temp+2,postinc2
 19942  004CDC  C09B  FFDE         	movff	GetNumber@temp+3,postinc2
 19943                           
 19944                           ; BSR set to: 0
 19945                           ;MISC.c: 583: return 0;
 19946  004CE0  0E00               	movlw	0
 19947  004CE2  0012               	return	
 19948                           
 19949                           ; BSR set to: 0
 19950                           
 19951                           ; BSR set to: 0
 19952  004CE4  0012               	return		;funcret
 19953  004CE6                     __end_of_GetNumber:
 19954                           	opt stack 0
 19955                           tblptru	equ	0xFF8
 19956                           tblptrh	equ	0xFF7
 19957                           tblptrl	equ	0xFF6
 19958                           tablat	equ	0xFF5
 19959                           prodh	equ	0xFF4
 19960                           prodl	equ	0xFF3
 19961                           intcon	equ	0xFF2
 19962                           indf0	equ	0xFEF
 19963                           postinc0	equ	0xFEE
 19964                           fsr0h	equ	0xFEA
 19965                           fsr0l	equ	0xFE9
 19966                           wreg	equ	0xFE8
 19967                           indf1	equ	0xFE7
 19968                           postdec1	equ	0xFE5
 19969                           fsr1h	equ	0xFE2
 19970                           fsr1l	equ	0xFE1
 19971                           indf2	equ	0xFDF
 19972                           postinc2	equ	0xFDE
 19973                           postdec2	equ	0xFDD
 19974                           fsr2h	equ	0xFDA
 19975                           fsr2l	equ	0xFD9
 19976                           status	equ	0xFD8
 19977                           
 19978 ;; *************** function _lowercaseChar *****************
 19979 ;; Defined at:
 19980 ;;		line 349 in file "MISC.c"
 19981 ;; Parameters:    Size  Location     Type
 19982 ;;  Input           2   28[BANK0 ] PTR unsigned char 
 19983 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 19984 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 19985 ;; Auto vars:     Size  Location     Type
 19986 ;;		None
 19987 ;; Return value:  Size  Location     Type
 19988 ;;		None               void
 19989 ;; Registers used:
 19990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19991 ;; Tracked objects:
 19992 ;;		On entry : 0/0
 19993 ;;		On exit  : 0/0
 19994 ;;		Unchanged: 0/0
 19995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20000 ;;Total ram usage:        3 bytes
 20001 ;; Hardware stack levels used:    1
 20002 ;; Hardware stack levels required when called:    6
 20003 ;; This function calls:
 20004 ;;		Nothing
 20005 ;; This function is called by:
 20006 ;;		_StringMatchCaseInsensitive
 20007 ;;		_StringContainsCaseInsensitive
 20008 ;;		_GetNumber
 20009 ;; This function uses a non-reentrant model
 20010 ;;
 20011                           
 20012                           	psect	text31
 20013  00934C                     __ptext31:
 20014                           	opt stack 0
 20015  00934C                     _lowercaseChar:
 20016                           	opt stack 22
 20017                           
 20018                           ;MISC.c: 351: if((*Input >= 65) && (*Input <= 90 ))
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;incstack = 0
 20022  00934C  C07C  FFD9         	movff	lowercaseChar@Input,fsr2l
 20023  009350  C07D  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 20024  009354  0E40               	movlw	64
 20025  009356  64DF               	cpfsgt	indf2,c
 20026  009358  0012               	return	
 20027  00935A  C07C  FFD9         	movff	lowercaseChar@Input,fsr2l
 20028  00935E  C07D  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 20029  009362  0E5B               	movlw	91
 20030  009364  60DF               	cpfslt	indf2,c
 20031  009366  0012               	return	
 20032                           
 20033                           ;MISC.c: 352: {
 20034                           ;MISC.c: 353: *Input += 32;
 20035  009368  C07C  FFD9         	movff	lowercaseChar@Input,fsr2l
 20036  00936C  C07D  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 20037  009370  0E20               	movlw	32
 20038  009372  26DF               	addwf	indf2,f,c
 20039  009374  0012               	return	
 20040  009376  0012               	return		;funcret
 20041  009378                     __end_of_lowercaseChar:
 20042                           	opt stack 0
 20043                           tblptru	equ	0xFF8
 20044                           tblptrh	equ	0xFF7
 20045                           tblptrl	equ	0xFF6
 20046                           tablat	equ	0xFF5
 20047                           prodh	equ	0xFF4
 20048                           prodl	equ	0xFF3
 20049                           intcon	equ	0xFF2
 20050                           indf0	equ	0xFEF
 20051                           postinc0	equ	0xFEE
 20052                           fsr0h	equ	0xFEA
 20053                           fsr0l	equ	0xFE9
 20054                           wreg	equ	0xFE8
 20055                           indf1	equ	0xFE7
 20056                           postdec1	equ	0xFE5
 20057                           fsr1h	equ	0xFE2
 20058                           fsr1l	equ	0xFE1
 20059                           indf2	equ	0xFDF
 20060                           postinc2	equ	0xFDE
 20061                           postdec2	equ	0xFDD
 20062                           fsr2h	equ	0xFDA
 20063                           fsr2l	equ	0xFD9
 20064                           status	equ	0xFD8
 20065                           
 20066 ;; *************** function ___lmul *****************
 20067 ;; Defined at:
 20068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 20069 ;; Parameters:    Size  Location     Type
 20070 ;;  multiplier      4   28[BANK0 ] unsigned long 
 20071 ;;  multiplicand    4   32[BANK0 ] unsigned long 
 20072 ;; Auto vars:     Size  Location     Type
 20073 ;;  product         4   36[BANK0 ] unsigned long 
 20074 ;; Return value:  Size  Location     Type
 20075 ;;                  4   28[BANK0 ] unsigned long 
 20076 ;; Registers used:
 20077 ;;		wreg, status,2, status,0
 20078 ;; Tracked objects:
 20079 ;;		On entry : 0/0
 20080 ;;		On exit  : 0/0
 20081 ;;		Unchanged: 0/0
 20082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20083 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20086 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20087 ;;Total ram usage:       12 bytes
 20088 ;; Hardware stack levels used:    1
 20089 ;; Hardware stack levels required when called:    6
 20090 ;; This function calls:
 20091 ;;		Nothing
 20092 ;; This function is called by:
 20093 ;;		_GetNumber
 20094 ;; This function uses a non-reentrant model
 20095 ;;
 20096                           
 20097                           	psect	text32
 20098  0089F8                     __ptext32:
 20099                           	opt stack 0
 20100  0089F8                     ___lmul:
 20101                           	opt stack 22
 20102                           
 20103                           ;incstack = 0
 20104  0089F8  0E00               	movlw	0
 20105  0089FA  0100               	movlb	0	; () banked
 20106  0089FC  6F84               	movwf	___lmul@product& (0+255),b
 20107  0089FE  0E00               	movlw	0
 20108  008A00  6F85               	movwf	(___lmul@product+1)& (0+255),b
 20109  008A02  0E00               	movlw	0
 20110  008A04  6F86               	movwf	(___lmul@product+2)& (0+255),b
 20111  008A06  0E00               	movlw	0
 20112  008A08  6F87               	movwf	(___lmul@product+3)& (0+255),b
 20113  008A0A  D000               	goto	l14253
 20114  008A0C                     l14253:
 20115                           
 20116                           ; BSR set to: 0
 20117  008A0C  0100               	movlb	0	; () banked
 20118  008A0E  A17C               	btfss	___lmul@multiplier& (0+255),0,b
 20119  008A10  D011               	goto	l14257
 20120                           
 20121                           ; BSR set to: 0
 20122  008A12  0100               	movlb	0	; () banked
 20123  008A14  5180               	movf	___lmul@multiplicand& (0+255),w,b
 20124  008A16  0100               	movlb	0	; () banked
 20125  008A18  2784               	addwf	___lmul@product& (0+255),f,b
 20126  008A1A  0100               	movlb	0	; () banked
 20127  008A1C  5181               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 20128  008A1E  0100               	movlb	0	; () banked
 20129  008A20  2385               	addwfc	(___lmul@product+1)& (0+255),f,b
 20130  008A22  0100               	movlb	0	; () banked
 20131  008A24  5182               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 20132  008A26  0100               	movlb	0	; () banked
 20133  008A28  2386               	addwfc	(___lmul@product+2)& (0+255),f,b
 20134  008A2A  0100               	movlb	0	; () banked
 20135  008A2C  5183               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 20136  008A2E  0100               	movlb	0	; () banked
 20137  008A30  2387               	addwfc	(___lmul@product+3)& (0+255),f,b
 20138  008A32  D000               	goto	l14257
 20139  008A34                     l14257:
 20140                           
 20141                           ; BSR set to: 0
 20142  008A34  0100               	movlb	0	; () banked
 20143  008A36  90D8               	bcf	status,0,c
 20144  008A38  3780               	rlcf	___lmul@multiplicand& (0+255),f,b
 20145  008A3A  3781               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 20146  008A3C  3782               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 20147  008A3E  3783               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 20148                           
 20149                           ; BSR set to: 0
 20150  008A40  0100               	movlb	0	; () banked
 20151  008A42  90D8               	bcf	status,0,c
 20152  008A44  337F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 20153  008A46  337E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 20154  008A48  337D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 20155  008A4A  337C               	rrcf	___lmul@multiplier& (0+255),f,b
 20156  008A4C  0100               	movlb	0	; () banked
 20157  008A4E  517C               	movf	___lmul@multiplier& (0+255),w,b
 20158  008A50  0100               	movlb	0	; () banked
 20159  008A52  117D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 20160  008A54  0100               	movlb	0	; () banked
 20161  008A56  117E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 20162  008A58  0100               	movlb	0	; () banked
 20163  008A5A  117F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 20164  008A5C  A4D8               	btfss	status,2,c
 20165  008A5E  D7D6               	goto	l14253
 20166                           
 20167                           ; BSR set to: 0
 20168  008A60  C084  F07C         	movff	___lmul@product,?___lmul
 20169  008A64  C085  F07D         	movff	___lmul@product+1,?___lmul+1
 20170  008A68  C086  F07E         	movff	___lmul@product+2,?___lmul+2
 20171  008A6C  C087  F07F         	movff	___lmul@product+3,?___lmul+3
 20172                           
 20173                           ; BSR set to: 0
 20174  008A70  0012               	return		;funcret
 20175  008A72                     __end_of___lmul:
 20176                           	opt stack 0
 20177                           tblptru	equ	0xFF8
 20178                           tblptrh	equ	0xFF7
 20179                           tblptrl	equ	0xFF6
 20180                           tablat	equ	0xFF5
 20181                           prodh	equ	0xFF4
 20182                           prodl	equ	0xFF3
 20183                           intcon	equ	0xFF2
 20184                           indf0	equ	0xFEF
 20185                           postinc0	equ	0xFEE
 20186                           fsr0h	equ	0xFEA
 20187                           fsr0l	equ	0xFE9
 20188                           wreg	equ	0xFE8
 20189                           indf1	equ	0xFE7
 20190                           postdec1	equ	0xFE5
 20191                           fsr1h	equ	0xFE2
 20192                           fsr1l	equ	0xFE1
 20193                           indf2	equ	0xFDF
 20194                           postinc2	equ	0xFDE
 20195                           postdec2	equ	0xFDD
 20196                           fsr2h	equ	0xFDA
 20197                           fsr2l	equ	0xFD9
 20198                           status	equ	0xFD8
 20199                           
 20200 ;; *************** function _IsLetter *****************
 20201 ;; Defined at:
 20202 ;;		line 99 in file "MISC.c"
 20203 ;; Parameters:    Size  Location     Type
 20204 ;;  data            1    wreg     unsigned char 
 20205 ;; Auto vars:     Size  Location     Type
 20206 ;;  data            1   28[BANK0 ] unsigned char 
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  1    wreg      unsigned char 
 20209 ;; Registers used:
 20210 ;;		wreg, status,2, status,0
 20211 ;; Tracked objects:
 20212 ;;		On entry : 0/0
 20213 ;;		On exit  : 0/0
 20214 ;;		Unchanged: 0/0
 20215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20220 ;;Total ram usage:        1 bytes
 20221 ;; Hardware stack levels used:    1
 20222 ;; Hardware stack levels required when called:    6
 20223 ;; This function calls:
 20224 ;;		Nothing
 20225 ;; This function is called by:
 20226 ;;		_GetNumber
 20227 ;; This function uses a non-reentrant model
 20228 ;;
 20229                           
 20230                           	psect	text33
 20231  0093CA                     __ptext33:
 20232                           	opt stack 0
 20233  0093CA                     _IsLetter:
 20234                           	opt stack 22
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;incstack = 0
 20238                           ;IsLetter@data stored from wreg
 20239  0093CA  0100               	movlb	0	; () banked
 20240  0093CC  6F7C               	movwf	IsLetter@data& (0+255),b
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;MISC.c: 101: if(data >= 65 && data <= 90)
 20244  0093CE  0E40               	movlw	64
 20245  0093D0  0100               	movlb	0	; () banked
 20246  0093D2  657C               	cpfsgt	IsLetter@data& (0+255),b
 20247  0093D4  D006               	goto	l13851
 20248                           
 20249                           ; BSR set to: 0
 20250  0093D6  0E5B               	movlw	91
 20251  0093D8  0100               	movlb	0	; () banked
 20252  0093DA  617C               	cpfslt	IsLetter@data& (0+255),b
 20253  0093DC  D002               	goto	l13851
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;MISC.c: 102: {
 20257                           ;MISC.c: 103: return 1;
 20258  0093DE  0E01               	movlw	1
 20259                           
 20260                           ; BSR set to: 0
 20261  0093E0  0012               	return	
 20262  0093E2                     l13851:
 20263                           
 20264                           ; BSR set to: 0
 20265                           ;MISC.c: 104: }
 20266                           ;MISC.c: 105: return 0;
 20267  0093E2  0E00               	movlw	0
 20268  0093E4  0012               	return	
 20269                           
 20270                           ; BSR set to: 0
 20271                           
 20272                           ; BSR set to: 0
 20273  0093E6  0012               	return		;funcret
 20274  0093E8                     __end_of_IsLetter:
 20275                           	opt stack 0
 20276                           tblptru	equ	0xFF8
 20277                           tblptrh	equ	0xFF7
 20278                           tblptrl	equ	0xFF6
 20279                           tablat	equ	0xFF5
 20280                           prodh	equ	0xFF4
 20281                           prodl	equ	0xFF3
 20282                           intcon	equ	0xFF2
 20283                           indf0	equ	0xFEF
 20284                           postinc0	equ	0xFEE
 20285                           fsr0h	equ	0xFEA
 20286                           fsr0l	equ	0xFE9
 20287                           wreg	equ	0xFE8
 20288                           indf1	equ	0xFE7
 20289                           postdec1	equ	0xFE5
 20290                           fsr1h	equ	0xFE2
 20291                           fsr1l	equ	0xFE1
 20292                           indf2	equ	0xFDF
 20293                           postinc2	equ	0xFDE
 20294                           postdec2	equ	0xFDD
 20295                           fsr2h	equ	0xFDA
 20296                           fsr2l	equ	0xFD9
 20297                           status	equ	0xFD8
 20298                           
 20299 ;; *************** function _EncodeNEC *****************
 20300 ;; Defined at:
 20301 ;;		line 522 in file "IR.c"
 20302 ;; Parameters:    Size  Location     Type
 20303 ;;  address         1    wreg     unsigned char 
 20304 ;;  command         1   32[BANK0 ] unsigned char 
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;  address         1   72[BANK0 ] unsigned char 
 20307 ;;  temp4           4   68[BANK0 ] unsigned long 
 20308 ;;  temp3           4   64[BANK0 ] unsigned long 
 20309 ;;  temp2           4   60[BANK0 ] unsigned long 
 20310 ;;  temp1           4   56[BANK0 ] unsigned long 
 20311 ;; Return value:  Size  Location     Type
 20312 ;;                  4   32[BANK0 ] unsigned long 
 20313 ;; Registers used:
 20314 ;;		wreg, status,2, status,0, cstack
 20315 ;; Tracked objects:
 20316 ;;		On entry : 0/0
 20317 ;;		On exit  : 0/0
 20318 ;;		Unchanged: 0/0
 20319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20321 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20322 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20323 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20324 ;;Total ram usage:       41 bytes
 20325 ;; Hardware stack levels used:    1
 20326 ;; Hardware stack levels required when called:    7
 20327 ;; This function calls:
 20328 ;;		_Reverse_Byte
 20329 ;; This function is called by:
 20330 ;;		_UseBluetooth
 20331 ;; This function uses a non-reentrant model
 20332 ;;
 20333                           
 20334                           	psect	text34
 20335  0072DC                     __ptext34:
 20336                           	opt stack 0
 20337  0072DC                     _EncodeNEC:
 20338                           	opt stack 22
 20339                           
 20340                           ; BSR set to: 0
 20341                           ;incstack = 0
 20342                           ;EncodeNEC@address stored from wreg
 20343  0072DC  0100               	movlb	0	; () banked
 20344  0072DE  6FA8               	movwf	EncodeNEC@address& (0+255),b
 20345                           
 20346                           ; BSR set to: 0
 20347                           ;IR.c: 524: unsigned long temp1,
 20348                           ;IR.c: 525: temp2,
 20349                           ;IR.c: 526: temp3,
 20350                           ;IR.c: 527: temp4;
 20351                           ;IR.c: 535: temp1 = (unsigned long) Reverse_Byte(address);
 20352  0072E0  0100               	movlb	0	; () banked
 20353  0072E2  51A8               	movf	EncodeNEC@address& (0+255),w,b
 20354  0072E4  ECBC  F040         	call	_Reverse_Byte
 20355  0072E8  0100               	movlb	0	; () banked
 20356  0072EA  6F84               	movwf	??_EncodeNEC& (0+255),b
 20357  0072EC  0100               	movlb	0	; () banked
 20358  0072EE  5184               	movf	??_EncodeNEC& (0+255),w,b
 20359  0072F0  0100               	movlb	0	; () banked
 20360  0072F2  6F98               	movwf	EncodeNEC@temp1& (0+255),b
 20361  0072F4  6B99               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 20362  0072F6  6B9A               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 20363  0072F8  6B9B               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 20364                           
 20365                           ;IR.c: 536: temp2 = (unsigned long) Reverse_Byte(~address);
 20366  0072FA  0100               	movlb	0	; () banked
 20367  0072FC  51A8               	movf	EncodeNEC@address& (0+255),w,b
 20368  0072FE  0AFF               	xorlw	255
 20369  007300  ECBC  F040         	call	_Reverse_Byte
 20370  007304  0100               	movlb	0	; () banked
 20371  007306  6F84               	movwf	??_EncodeNEC& (0+255),b
 20372  007308  0100               	movlb	0	; () banked
 20373  00730A  5184               	movf	??_EncodeNEC& (0+255),w,b
 20374  00730C  0100               	movlb	0	; () banked
 20375  00730E  6F9C               	movwf	EncodeNEC@temp2& (0+255),b
 20376  007310  6B9D               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 20377  007312  6B9E               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 20378  007314  6B9F               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 20379                           
 20380                           ;IR.c: 537: temp3 = (unsigned long) Reverse_Byte(command);
 20381  007316  0100               	movlb	0	; () banked
 20382  007318  5180               	movf	EncodeNEC@command& (0+255),w,b
 20383  00731A  ECBC  F040         	call	_Reverse_Byte
 20384  00731E  0100               	movlb	0	; () banked
 20385  007320  6F84               	movwf	??_EncodeNEC& (0+255),b
 20386  007322  0100               	movlb	0	; () banked
 20387  007324  5184               	movf	??_EncodeNEC& (0+255),w,b
 20388  007326  0100               	movlb	0	; () banked
 20389  007328  6FA0               	movwf	EncodeNEC@temp3& (0+255),b
 20390  00732A  6BA1               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 20391  00732C  6BA2               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 20392  00732E  6BA3               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 20393                           
 20394                           ;IR.c: 538: temp4 = (unsigned long) Reverse_Byte(~command);
 20395  007330  0100               	movlb	0	; () banked
 20396  007332  5180               	movf	EncodeNEC@command& (0+255),w,b
 20397  007334  0AFF               	xorlw	255
 20398  007336  ECBC  F040         	call	_Reverse_Byte
 20399  00733A  0100               	movlb	0	; () banked
 20400  00733C  6F84               	movwf	??_EncodeNEC& (0+255),b
 20401  00733E  0100               	movlb	0	; () banked
 20402  007340  5184               	movf	??_EncodeNEC& (0+255),w,b
 20403  007342  0100               	movlb	0	; () banked
 20404  007344  6FA4               	movwf	EncodeNEC@temp4& (0+255),b
 20405  007346  6BA5               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 20406  007348  6BA6               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 20407  00734A  6BA7               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 20408                           
 20409                           ; BSR set to: 0
 20410                           ;IR.c: 540: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 20411  00734C  C0A0  F085         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 20412  007350  C0A1  F086         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 20413  007354  C0A2  F087         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 20414  007358  0100               	movlb	0	; () banked
 20415  00735A  6B84               	clrf	??_EncodeNEC& (0+255),b
 20416  00735C  C09C  F088         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 20417  007360  C09D  F089         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 20418  007364  C09E  F08A         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 20419  007368  C09F  F08B         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 20420  00736C  C089  F08B         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 20421  007370  C088  F08A         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 20422  007374  0100               	movlb	0	; () banked
 20423  007376  6B89               	clrf	(??_EncodeNEC+5)& (0+255),b
 20424  007378  6B88               	clrf	(??_EncodeNEC+4)& (0+255),b
 20425  00737A  C098  F08C         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 20426  00737E  C099  F08D         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 20427  007382  C09A  F08E         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 20428  007386  C09B  F08F         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 20429  00738A  C08C  F08F         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 20430  00738E  0100               	movlb	0	; () banked
 20431  007390  6B8E               	clrf	(??_EncodeNEC+10)& (0+255),b
 20432  007392  6B8D               	clrf	(??_EncodeNEC+9)& (0+255),b
 20433  007394  6B8C               	clrf	(??_EncodeNEC+8)& (0+255),b
 20434  007396  0100               	movlb	0	; () banked
 20435  007398  5188               	movf	(??_EncodeNEC+4)& (0+255),w,b
 20436  00739A  0100               	movlb	0	; () banked
 20437  00739C  258C               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 20438  00739E  0100               	movlb	0	; () banked
 20439  0073A0  6F90               	movwf	(??_EncodeNEC+12)& (0+255),b
 20440  0073A2  0100               	movlb	0	; () banked
 20441  0073A4  5189               	movf	(??_EncodeNEC+5)& (0+255),w,b
 20442  0073A6  0100               	movlb	0	; () banked
 20443  0073A8  218D               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 20444  0073AA  0100               	movlb	0	; () banked
 20445  0073AC  6F91               	movwf	(??_EncodeNEC+13)& (0+255),b
 20446  0073AE  0100               	movlb	0	; () banked
 20447  0073B0  518A               	movf	(??_EncodeNEC+6)& (0+255),w,b
 20448  0073B2  0100               	movlb	0	; () banked
 20449  0073B4  218E               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 20450  0073B6  0100               	movlb	0	; () banked
 20451  0073B8  6F92               	movwf	(??_EncodeNEC+14)& (0+255),b
 20452  0073BA  0100               	movlb	0	; () banked
 20453  0073BC  518B               	movf	(??_EncodeNEC+7)& (0+255),w,b
 20454  0073BE  0100               	movlb	0	; () banked
 20455  0073C0  218F               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 20456  0073C2  0100               	movlb	0	; () banked
 20457  0073C4  6F93               	movwf	(??_EncodeNEC+15)& (0+255),b
 20458  0073C6  0100               	movlb	0	; () banked
 20459  0073C8  5184               	movf	??_EncodeNEC& (0+255),w,b
 20460  0073CA  0100               	movlb	0	; () banked
 20461  0073CC  2590               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 20462  0073CE  0100               	movlb	0	; () banked
 20463  0073D0  6F94               	movwf	(??_EncodeNEC+16)& (0+255),b
 20464  0073D2  0100               	movlb	0	; () banked
 20465  0073D4  5185               	movf	(??_EncodeNEC+1)& (0+255),w,b
 20466  0073D6  0100               	movlb	0	; () banked
 20467  0073D8  2191               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 20468  0073DA  0100               	movlb	0	; () banked
 20469  0073DC  6F95               	movwf	(??_EncodeNEC+17)& (0+255),b
 20470  0073DE  0100               	movlb	0	; () banked
 20471  0073E0  5186               	movf	(??_EncodeNEC+2)& (0+255),w,b
 20472  0073E2  0100               	movlb	0	; () banked
 20473  0073E4  2192               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 20474  0073E6  0100               	movlb	0	; () banked
 20475  0073E8  6F96               	movwf	(??_EncodeNEC+18)& (0+255),b
 20476  0073EA  0100               	movlb	0	; () banked
 20477  0073EC  5187               	movf	(??_EncodeNEC+3)& (0+255),w,b
 20478  0073EE  0100               	movlb	0	; () banked
 20479  0073F0  2193               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 20480  0073F2  0100               	movlb	0	; () banked
 20481  0073F4  6F97               	movwf	(??_EncodeNEC+19)& (0+255),b
 20482  0073F6  0100               	movlb	0	; () banked
 20483  0073F8  51A4               	movf	EncodeNEC@temp4& (0+255),w,b
 20484  0073FA  0100               	movlb	0	; () banked
 20485  0073FC  2594               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 20486  0073FE  0100               	movlb	0	; () banked
 20487  007400  6F80               	movwf	?_EncodeNEC& (0+255),b
 20488  007402  0100               	movlb	0	; () banked
 20489  007404  51A5               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 20490  007406  0100               	movlb	0	; () banked
 20491  007408  2195               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 20492  00740A  0100               	movlb	0	; () banked
 20493  00740C  6F81               	movwf	(?_EncodeNEC+1)& (0+255),b
 20494  00740E  0100               	movlb	0	; () banked
 20495  007410  51A6               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 20496  007412  0100               	movlb	0	; () banked
 20497  007414  2196               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 20498  007416  0100               	movlb	0	; () banked
 20499  007418  6F82               	movwf	(?_EncodeNEC+2)& (0+255),b
 20500  00741A  0100               	movlb	0	; () banked
 20501  00741C  51A7               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 20502  00741E  0100               	movlb	0	; () banked
 20503  007420  2197               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 20504  007422  0100               	movlb	0	; () banked
 20505  007424  6F83               	movwf	(?_EncodeNEC+3)& (0+255),b
 20506  007426  0012               	return	
 20507                           
 20508                           ; BSR set to: 0
 20509                           
 20510                           ; BSR set to: 0
 20511  007428  0012               	return		;funcret
 20512  00742A                     __end_of_EncodeNEC:
 20513                           	opt stack 0
 20514                           tblptru	equ	0xFF8
 20515                           tblptrh	equ	0xFF7
 20516                           tblptrl	equ	0xFF6
 20517                           tablat	equ	0xFF5
 20518                           prodh	equ	0xFF4
 20519                           prodl	equ	0xFF3
 20520                           intcon	equ	0xFF2
 20521                           indf0	equ	0xFEF
 20522                           postinc0	equ	0xFEE
 20523                           fsr0h	equ	0xFEA
 20524                           fsr0l	equ	0xFE9
 20525                           wreg	equ	0xFE8
 20526                           indf1	equ	0xFE7
 20527                           postdec1	equ	0xFE5
 20528                           fsr1h	equ	0xFE2
 20529                           fsr1l	equ	0xFE1
 20530                           indf2	equ	0xFDF
 20531                           postinc2	equ	0xFDE
 20532                           postdec2	equ	0xFDD
 20533                           fsr2h	equ	0xFDA
 20534                           fsr2l	equ	0xFD9
 20535                           status	equ	0xFD8
 20536                           
 20537 ;; *************** function _DecodeNEC *****************
 20538 ;; Defined at:
 20539 ;;		line 548 in file "IR.c"
 20540 ;; Parameters:    Size  Location     Type
 20541 ;;  Nec             4   32[BANK0 ] unsigned long 
 20542 ;;  address         2   36[BANK0 ] PTR unsigned char 
 20543 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 20544 ;;  command         2   38[BANK0 ] PTR unsigned char 
 20545 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 20546 ;; Auto vars:     Size  Location     Type
 20547 ;;  temp1           1   46[BANK0 ] unsigned char 
 20548 ;;  temp3           1   45[BANK0 ] unsigned char 
 20549 ;;  temp2           1   44[BANK0 ] unsigned char 
 20550 ;; Return value:  Size  Location     Type
 20551 ;;                  1    wreg      unsigned char 
 20552 ;; Registers used:
 20553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20554 ;; Tracked objects:
 20555 ;;		On entry : 0/0
 20556 ;;		On exit  : 0/0
 20557 ;;		Unchanged: 0/0
 20558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20559 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20561 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20562 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20563 ;;Total ram usage:       15 bytes
 20564 ;; Hardware stack levels used:    1
 20565 ;; Hardware stack levels required when called:    7
 20566 ;; This function calls:
 20567 ;;		_Reverse_Byte
 20568 ;; This function is called by:
 20569 ;;		_UseIRCode
 20570 ;;		_UseBluetooth
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           	psect	text35
 20575  008394                     __ptext35:
 20576                           	opt stack 0
 20577  008394                     _DecodeNEC:
 20578                           	opt stack 22
 20579                           
 20580                           ;IR.c: 550: unsigned char temp1,
 20581                           ;IR.c: 551: temp2,
 20582                           ;IR.c: 552: temp3;
 20583                           ;IR.c: 554: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;incstack = 0
 20587  008394  0100               	movlb	0	; () banked
 20588  008396  5180               	movf	DecodeNEC@Nec& (0+255),w,b
 20589  008398  ECBC  F040         	call	_Reverse_Byte
 20590  00839C  0AFF               	xorlw	255
 20591  00839E  0100               	movlb	0	; () banked
 20592  0083A0  6F8E               	movwf	DecodeNEC@temp1& (0+255),b
 20593                           
 20594                           ;IR.c: 555: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 20595  0083A2  0100               	movlb	0	; () banked
 20596  0083A4  5181               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 20597  0083A6  ECBC  F040         	call	_Reverse_Byte
 20598  0083AA  0100               	movlb	0	; () banked
 20599  0083AC  6F8C               	movwf	DecodeNEC@temp2& (0+255),b
 20600                           
 20601                           ; BSR set to: 0
 20602                           ;IR.c: 556: if(temp1 != temp2)
 20603  0083AE  0100               	movlb	0	; () banked
 20604  0083B0  518C               	movf	DecodeNEC@temp2& (0+255),w,b
 20605  0083B2  0100               	movlb	0	; () banked
 20606  0083B4  198E               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20607  0083B6  B4D8               	btfsc	status,2,c
 20608  0083B8  D002               	goto	l14995
 20609                           
 20610                           ; BSR set to: 0
 20611                           ;IR.c: 557: {
 20612                           ;IR.c: 559: return 0;
 20613  0083BA  0E00               	movlw	0
 20614                           
 20615                           ; BSR set to: 0
 20616  0083BC  0012               	return	
 20617  0083BE                     l14995:
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;IR.c: 560: }
 20621                           ;IR.c: 561: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 20622  0083BE  0100               	movlb	0	; () banked
 20623  0083C0  5182               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 20624  0083C2  ECBC  F040         	call	_Reverse_Byte
 20625  0083C6  0AFF               	xorlw	255
 20626  0083C8  0100               	movlb	0	; () banked
 20627  0083CA  6F8E               	movwf	DecodeNEC@temp1& (0+255),b
 20628                           
 20629                           ;IR.c: 562: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 20630  0083CC  0E00               	movlw	0
 20631  0083CE  0100               	movlb	0	; () banked
 20632  0083D0  1580               	andwf	DecodeNEC@Nec& (0+255),w,b
 20633  0083D2  0100               	movlb	0	; () banked
 20634  0083D4  6F88               	movwf	??_DecodeNEC& (0+255),b
 20635  0083D6  0E00               	movlw	0
 20636  0083D8  0100               	movlb	0	; () banked
 20637  0083DA  1581               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 20638  0083DC  0100               	movlb	0	; () banked
 20639  0083DE  6F89               	movwf	(??_DecodeNEC+1)& (0+255),b
 20640  0083E0  0E00               	movlw	0
 20641  0083E2  0100               	movlb	0	; () banked
 20642  0083E4  1582               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 20643  0083E6  0100               	movlb	0	; () banked
 20644  0083E8  6F8A               	movwf	(??_DecodeNEC+2)& (0+255),b
 20645  0083EA  0EFF               	movlw	255
 20646  0083EC  0100               	movlb	0	; () banked
 20647  0083EE  1583               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 20648  0083F0  0100               	movlb	0	; () banked
 20649  0083F2  6F8B               	movwf	(??_DecodeNEC+3)& (0+255),b
 20650  0083F4  0E19               	movlw	25
 20651  0083F6  D006               	goto	u18720
 20652  0083F8                     u18725:
 20653  0083F8  0100               	movlb	0	; () banked
 20654  0083FA  90D8               	bcf	status,0,c
 20655  0083FC  338B               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 20656  0083FE  338A               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 20657  008400  3389               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 20658  008402  3388               	rrcf	??_DecodeNEC& (0+255),f,b
 20659  008404                     u18720:
 20660  008404  2EE8               	decfsz	wreg,f,c
 20661  008406  D7F8               	goto	u18725
 20662  008408  0100               	movlb	0	; () banked
 20663  00840A  5188               	movf	??_DecodeNEC& (0+255),w,b
 20664  00840C  ECBC  F040         	call	_Reverse_Byte
 20665  008410  0100               	movlb	0	; () banked
 20666  008412  6F8D               	movwf	DecodeNEC@temp3& (0+255),b
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;IR.c: 563: if(temp1 != temp3)
 20670  008414  0100               	movlb	0	; () banked
 20671  008416  518D               	movf	DecodeNEC@temp3& (0+255),w,b
 20672  008418  0100               	movlb	0	; () banked
 20673  00841A  198E               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20674  00841C  B4D8               	btfsc	status,2,c
 20675  00841E  D002               	goto	l15003
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;IR.c: 564: {
 20679                           ;IR.c: 566: return 0;
 20680  008420  0E00               	movlw	0
 20681                           
 20682                           ; BSR set to: 0
 20683  008422  0012               	return	
 20684  008424                     l15003:
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;IR.c: 567: }
 20688                           ;IR.c: 568: *command = temp2;
 20689  008424  C086  FFD9         	movff	DecodeNEC@command,fsr2l
 20690  008428  C087  FFDA         	movff	DecodeNEC@command+1,fsr2h
 20691  00842C  C08C  FFDF         	movff	DecodeNEC@temp2,indf2
 20692                           
 20693                           ;IR.c: 569: *address = temp3;
 20694  008430  C084  FFD9         	movff	DecodeNEC@address,fsr2l
 20695  008434  C085  FFDA         	movff	DecodeNEC@address+1,fsr2h
 20696  008438  C08D  FFDF         	movff	DecodeNEC@temp3,indf2
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;IR.c: 570: return 1;
 20700  00843C  0E01               	movlw	1
 20701  00843E  0012               	return	
 20702                           
 20703                           ; BSR set to: 0
 20704                           
 20705                           ; BSR set to: 0
 20706  008440  0012               	return		;funcret
 20707  008442                     __end_of_DecodeNEC:
 20708                           	opt stack 0
 20709                           tblptru	equ	0xFF8
 20710                           tblptrh	equ	0xFF7
 20711                           tblptrl	equ	0xFF6
 20712                           tablat	equ	0xFF5
 20713                           prodh	equ	0xFF4
 20714                           prodl	equ	0xFF3
 20715                           intcon	equ	0xFF2
 20716                           indf0	equ	0xFEF
 20717                           postinc0	equ	0xFEE
 20718                           fsr0h	equ	0xFEA
 20719                           fsr0l	equ	0xFE9
 20720                           wreg	equ	0xFE8
 20721                           indf1	equ	0xFE7
 20722                           postdec1	equ	0xFE5
 20723                           fsr1h	equ	0xFE2
 20724                           fsr1l	equ	0xFE1
 20725                           indf2	equ	0xFDF
 20726                           postinc2	equ	0xFDE
 20727                           postdec2	equ	0xFDD
 20728                           fsr2h	equ	0xFDA
 20729                           fsr2l	equ	0xFD9
 20730                           status	equ	0xFD8
 20731                           
 20732 ;; *************** function _Reverse_Byte *****************
 20733 ;; Defined at:
 20734 ;;		line 362 in file "MISC.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;  This            1    wreg     unsigned char 
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  This            1   31[BANK0 ] unsigned char 
 20739 ;;  temp            1   30[BANK0 ] unsigned char 
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  1    wreg      unsigned char 
 20742 ;; Registers used:
 20743 ;;		wreg, status,2, status,0
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20750 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20752 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20753 ;;Total ram usage:        4 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; Hardware stack levels required when called:    6
 20756 ;; This function calls:
 20757 ;;		Nothing
 20758 ;; This function is called by:
 20759 ;;		_EncodeNEC
 20760 ;;		_DecodeNEC
 20761 ;; This function uses a non-reentrant model
 20762 ;;
 20763                           
 20764                           	psect	text36
 20765  008178                     __ptext36:
 20766                           	opt stack 0
 20767  008178                     _Reverse_Byte:
 20768                           	opt stack 22
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;incstack = 0
 20772                           ;Reverse_Byte@This stored from wreg
 20773  008178  0100               	movlb	0	; () banked
 20774  00817A  6F7F               	movwf	Reverse_Byte@This& (0+255),b
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;MISC.c: 364: unsigned char temp=0;
 20778  00817C  0E00               	movlw	0
 20779  00817E  0100               	movlb	0	; () banked
 20780  008180  6F7E               	movwf	Reverse_Byte@temp& (0+255),b
 20781                           
 20782                           ; BSR set to: 0
 20783                           ;MISC.c: 366: temp += (This & 0x01) << 7;
 20784  008182  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20785  008186  0E01               	movlw	1
 20786  008188  0100               	movlb	0	; () banked
 20787  00818A  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20788  00818C  0E00               	movlw	0
 20789  00818E  B17C               	btfsc	??_Reverse_Byte& (0+255),0,b
 20790  008190  0E80               	movlw	128
 20791  008192  6F7C               	movwf	??_Reverse_Byte& (0+255),b
 20792  008194  0100               	movlb	0	; () banked
 20793  008196  517C               	movf	??_Reverse_Byte& (0+255),w,b
 20794  008198  0100               	movlb	0	; () banked
 20795  00819A  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;MISC.c: 367: temp += (This & 0x02) << 5;
 20799  00819C  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20800  0081A0  0E02               	movlw	2
 20801  0081A2  0100               	movlb	0	; () banked
 20802  0081A4  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20803  0081A6  0E05               	movlw	5
 20804  0081A8  0100               	movlb	0	; () banked
 20805  0081AA  6F7D               	movwf	(??_Reverse_Byte+1)& (0+255),b
 20806  0081AC                     u17045:
 20807  0081AC  0100               	movlb	0	; () banked
 20808  0081AE  90D8               	bcf	status,0,c
 20809  0081B0  377C               	rlcf	??_Reverse_Byte& (0+255),f,b
 20810  0081B2  0100               	movlb	0	; () banked
 20811  0081B4  2F7D               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 20812  0081B6  D7FA               	goto	u17045
 20813  0081B8  0100               	movlb	0	; () banked
 20814  0081BA  517C               	movf	??_Reverse_Byte& (0+255),w,b
 20815  0081BC  0100               	movlb	0	; () banked
 20816  0081BE  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;MISC.c: 368: temp += (This & 0x04) << 3;
 20820  0081C0  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20821  0081C4  0E04               	movlw	4
 20822  0081C6  0100               	movlb	0	; () banked
 20823  0081C8  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20824  0081CA  0100               	movlb	0	; () banked
 20825  0081CC  90D8               	bcf	status,0,c
 20826  0081CE  377C               	rlcf	??_Reverse_Byte& (0+255),f,b
 20827  0081D0  0100               	movlb	0	; () banked
 20828  0081D2  90D8               	bcf	status,0,c
 20829  0081D4  377C               	rlcf	??_Reverse_Byte& (0+255),f,b
 20830  0081D6  0100               	movlb	0	; () banked
 20831  0081D8  90D8               	bcf	status,0,c
 20832  0081DA  357C               	rlcf	??_Reverse_Byte& (0+255),w,b
 20833  0081DC  0100               	movlb	0	; () banked
 20834  0081DE  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20835                           
 20836                           ; BSR set to: 0
 20837                           ;MISC.c: 369: temp += (This & 0x08) << 1;
 20838  0081E0  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20839  0081E4  0E08               	movlw	8
 20840  0081E6  0100               	movlb	0	; () banked
 20841  0081E8  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20842  0081EA  0100               	movlb	0	; () banked
 20843  0081EC  90D8               	bcf	status,0,c
 20844  0081EE  357C               	rlcf	??_Reverse_Byte& (0+255),w,b
 20845  0081F0  0100               	movlb	0	; () banked
 20846  0081F2  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20847                           
 20848                           ; BSR set to: 0
 20849                           ;MISC.c: 370: temp += (This & 0x10) >> 1;
 20850  0081F4  0100               	movlb	0	; () banked
 20851  0081F6  90D8               	bcf	status,0,c
 20852  0081F8  317F               	rrcf	Reverse_Byte@This& (0+255),w,b
 20853  0081FA  0B08               	andlw	8
 20854  0081FC  0100               	movlb	0	; () banked
 20855  0081FE  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20856                           
 20857                           ; BSR set to: 0
 20858                           ;MISC.c: 371: temp += (This & 0x20) >> 3;
 20859  008200  0100               	movlb	0	; () banked
 20860  008202  397F               	swapf	Reverse_Byte@This& (0+255),w,b
 20861  008204  46E8               	rlncf	wreg,f,c
 20862  008206  0B1F               	andlw	31
 20863  008208  0B04               	andlw	4
 20864  00820A  0100               	movlb	0	; () banked
 20865  00820C  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20866                           
 20867                           ; BSR set to: 0
 20868                           ;MISC.c: 372: temp += (This & 0x40) >> 5;
 20869  00820E  0100               	movlb	0	; () banked
 20870  008210  397F               	swapf	Reverse_Byte@This& (0+255),w,b
 20871  008212  42E8               	rrncf	wreg,f,c
 20872  008214  0B07               	andlw	7
 20873  008216  0B02               	andlw	2
 20874  008218  0100               	movlb	0	; () banked
 20875  00821A  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20876                           
 20877                           ; BSR set to: 0
 20878                           ;MISC.c: 373: temp += (This & 0x80) >> 7;
 20879  00821C  0100               	movlb	0	; () banked
 20880  00821E  457F               	rlncf	Reverse_Byte@This& (0+255),w,b
 20881  008220  0B01               	andlw	1
 20882  008222  0100               	movlb	0	; () banked
 20883  008224  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;MISC.c: 375: return temp;
 20887  008226  0100               	movlb	0	; () banked
 20888  008228  517E               	movf	Reverse_Byte@temp& (0+255),w,b
 20889  00822A  0012               	return	
 20890                           
 20891                           ; BSR set to: 0
 20892                           
 20893                           ; BSR set to: 0
 20894  00822C  0012               	return		;funcret
 20895  00822E                     __end_of_Reverse_Byte:
 20896                           	opt stack 0
 20897                           tblptru	equ	0xFF8
 20898                           tblptrh	equ	0xFF7
 20899                           tblptrl	equ	0xFF6
 20900                           tablat	equ	0xFF5
 20901                           prodh	equ	0xFF4
 20902                           prodl	equ	0xFF3
 20903                           intcon	equ	0xFF2
 20904                           indf0	equ	0xFEF
 20905                           postinc0	equ	0xFEE
 20906                           fsr0h	equ	0xFEA
 20907                           fsr0l	equ	0xFE9
 20908                           wreg	equ	0xFE8
 20909                           indf1	equ	0xFE7
 20910                           postdec1	equ	0xFE5
 20911                           fsr1h	equ	0xFE2
 20912                           fsr1l	equ	0xFE1
 20913                           indf2	equ	0xFDF
 20914                           postinc2	equ	0xFDE
 20915                           postdec2	equ	0xFDD
 20916                           fsr2h	equ	0xFDA
 20917                           fsr2l	equ	0xFD9
 20918                           status	equ	0xFD8
 20919                           
 20920 ;; *************** function _Init_System *****************
 20921 ;; Defined at:
 20922 ;;		line 105 in file "user.c"
 20923 ;; Parameters:    Size  Location     Type
 20924 ;;		None
 20925 ;; Auto vars:     Size  Location     Type
 20926 ;;		None
 20927 ;; Return value:  Size  Location     Type
 20928 ;;		None               void
 20929 ;; Registers used:
 20930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20931 ;; Tracked objects:
 20932 ;;		On entry : 0/0
 20933 ;;		On exit  : 0/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20940 ;;Total ram usage:        0 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:   13
 20943 ;; This function calls:
 20944 ;;		_EEPROMinitialized
 20945 ;;		_InitADC
 20946 ;;		_InitBluetooth
 20947 ;;		_InitIR
 20948 ;;		_InitTimers
 20949 ;;		_InitUART
 20950 ;;		_SetEEPROMdefault
 20951 ;;		_SyncEEPROMToGlobal
 20952 ;;		_SyncGlobalToEEPROM
 20953 ;;		_cleanBuffer
 20954 ;; This function is called by:
 20955 ;;		_main
 20956 ;; This function uses a non-reentrant model
 20957 ;;
 20958                           
 20959                           	psect	text37
 20960  008AEA                     __ptext37:
 20961                           	opt stack 0
 20962  008AEA                     _Init_System:
 20963                           	opt stack 17
 20964                           
 20965                           ;user.c: 107: cleanBuffer(&ReceivedString, 255);
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;incstack = 0
 20969  008AEA  0E00               	movlw	low _ReceivedString
 20970  008AEC  0100               	movlb	0	; () banked
 20971  008AEE  6F7C               	movwf	cleanBuffer@data& (0+255),b
 20972  008AF0  0E06               	movlw	high _ReceivedString
 20973  008AF2  0100               	movlb	0	; () banked
 20974  008AF4  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 20975  008AF6  0E00               	movlw	0
 20976  008AF8  0100               	movlb	0	; () banked
 20977  008AFA  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 20978  008AFC  697E               	setf	cleanBuffer@count& (0+255),b
 20979  008AFE  ECDB  F046         	call	_cleanBuffer	;wreg free
 20980                           
 20981                           ;user.c: 110: IPR1bits.RCIP = 0;
 20982  008B02  9A9F               	bcf	3999,5,c	;volatile
 20983                           
 20984                           ;user.c: 111: INTCON2bits.RBIP = 1;
 20985  008B04  80F1               	bsf	intcon2,0,c	;volatile
 20986                           
 20987                           ;user.c: 112: INTCON2bits.TMR0IP = 1;
 20988  008B06  84F1               	bsf	intcon2,2,c	;volatile
 20989                           
 20990                           ;user.c: 113: IPR1bits.TMR2IP = 1;
 20991  008B08  829F               	bsf	3999,1,c	;volatile
 20992                           
 20993                           ;user.c: 114: IPR1bits.TMR1IP = 0;
 20994  008B0A  909F               	bcf	3999,0,c	;volatile
 20995                           
 20996                           ;user.c: 115: IPR2bits.TMR3IP = 1;
 20997  008B0C  82A2               	bsf	4002,1,c	;volatile
 20998                           
 20999                           ;user.c: 118: RCONbits.IPEN = 1;
 21000  008B0E  8ED0               	bsf	4048,7,c	;volatile
 21001                           
 21002                           ;user.c: 119: INTCONbits.PEIE = 1;
 21003  008B10  8CF2               	bsf	intcon,6,c	;volatile
 21004                           
 21005                           ;user.c: 120: INTCONbits.GIE = 1;
 21006  008B12  8EF2               	bsf	intcon,7,c	;volatile
 21007                           
 21008                           ;user.c: 122: SyncEEPROMToGlobal();
 21009  008B14  EC63  F033         	call	_SyncEEPROMToGlobal	;wreg free
 21010                           
 21011                           ;user.c: 123: if(!EEPROMinitialized())
 21012  008B18  EC60  F04A         	call	_EEPROMinitialized	;wreg free
 21013  008B1C  0900               	iorlw	0
 21014  008B1E  A4D8               	btfss	status,2,c
 21015  008B20  D008               	goto	l15265
 21016                           
 21017                           ;user.c: 124: {
 21018                           ;user.c: 125: SetEEPROMdefault();
 21019  008B22  EC15  F03A         	call	_SetEEPROMdefault	;wreg free
 21020                           
 21021                           ;user.c: 126: Global.EEPROMinitFlag = 59;
 21022  008B26  0E3B               	movlw	59
 21023  008B28  0104               	movlb	4	; () banked
 21024  008B2A  6F2D               	movwf	(_Global+45)& (0+255),b
 21025                           
 21026                           ; BSR set to: 4
 21027                           ;user.c: 127: SyncGlobalToEEPROM();
 21028  008B2C  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
 21029  008B30  D000               	goto	l15265
 21030  008B32                     l15265:
 21031                           
 21032                           ;user.c: 128: }
 21033                           ;user.c: 129: InitADC();
 21034  008B32  EC40  F04A         	call	_InitADC	;wreg free
 21035                           
 21036                           ;user.c: 130: InitIR();
 21037  008B36  EC09  F048         	call	_InitIR	;wreg free
 21038                           
 21039                           ;user.c: 132: InitUART(115200);
 21040  008B3A  0E00               	movlw	0
 21041  008B3C  0100               	movlb	0	; () banked
 21042  008B3E  6FD1               	movwf	InitUART@Baud& (0+255),b
 21043  008B40  0EC2               	movlw	194
 21044  008B42  6FD2               	movwf	(InitUART@Baud+1)& (0+255),b
 21045  008B44  0E01               	movlw	1
 21046  008B46  6FD3               	movwf	(InitUART@Baud+2)& (0+255),b
 21047  008B48  0E00               	movlw	0
 21048  008B4A  6FD4               	movwf	(InitUART@Baud+3)& (0+255),b
 21049  008B4C  ECEA  F03C         	call	_InitUART	;wreg free
 21050                           
 21051                           ;user.c: 133: InitBluetooth();
 21052  008B50  EC61  F047         	call	_InitBluetooth	;wreg free
 21053                           
 21054                           ;user.c: 135: InitTimers();
 21055  008B54  EC56  F04A         	call	_InitTimers	;wreg free
 21056  008B58  0012               	return		;funcret
 21057  008B5A                     __end_of_Init_System:
 21058                           	opt stack 0
 21059                           tblptru	equ	0xFF8
 21060                           tblptrh	equ	0xFF7
 21061                           tblptrl	equ	0xFF6
 21062                           tablat	equ	0xFF5
 21063                           prodh	equ	0xFF4
 21064                           prodl	equ	0xFF3
 21065                           intcon	equ	0xFF2
 21066                           intcon2	equ	0xFF1
 21067                           indf0	equ	0xFEF
 21068                           postinc0	equ	0xFEE
 21069                           fsr0h	equ	0xFEA
 21070                           fsr0l	equ	0xFE9
 21071                           wreg	equ	0xFE8
 21072                           indf1	equ	0xFE7
 21073                           postdec1	equ	0xFE5
 21074                           fsr1h	equ	0xFE2
 21075                           fsr1l	equ	0xFE1
 21076                           indf2	equ	0xFDF
 21077                           postinc2	equ	0xFDE
 21078                           postdec2	equ	0xFDD
 21079                           fsr2h	equ	0xFDA
 21080                           fsr2l	equ	0xFD9
 21081                           status	equ	0xFD8
 21082                           
 21083 ;; *************** function _SyncEEPROMToGlobal *****************
 21084 ;; Defined at:
 21085 ;;		line 302 in file "EEPROM.c"
 21086 ;; Parameters:    Size  Location     Type
 21087 ;;		None
 21088 ;; Auto vars:     Size  Location     Type
 21089 ;;  Temp          136    3[BANK1 ] struct EEdata
 21090 ;;  j               1    2[BANK1 ] unsigned char 
 21091 ;;  i               1    1[BANK1 ] unsigned char 
 21092 ;;  k               1    0[BANK1 ] unsigned char 
 21093 ;; Return value:  Size  Location     Type
 21094 ;;		None               void
 21095 ;; Registers used:
 21096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/0
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21103 ;;      Locals:         0       0     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21105 ;;      Totals:         0       4     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21106 ;;Total ram usage:      143 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:    9
 21109 ;; This function calls:
 21110 ;;		_GetEEPROM
 21111 ;; This function is called by:
 21112 ;;		_Init_System
 21113 ;; This function uses a non-reentrant model
 21114 ;;
 21115                           
 21116                           	psect	text38
 21117  0066C6                     __ptext38:
 21118                           	opt stack 0
 21119  0066C6                     _SyncEEPROMToGlobal:
 21120                           	opt stack 20
 21121                           
 21122                           ;EEPROM.c: 304: unsigned char i,j,k;
 21123                           ;EEPROM.c: 305: GBLdata Temp;
 21124                           ;EEPROM.c: 307: GetEEPROM(&Temp);
 21125                           
 21126                           ;incstack = 0
 21127  0066C6  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21128  0066C8  0100               	movlb	0	; () banked
 21129  0066CA  6FA1               	movwf	GetEEPROM@Temp& (0+255),b
 21130  0066CC  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21131  0066CE  0100               	movlb	0	; () banked
 21132  0066D0  6FA2               	movwf	(GetEEPROM@Temp+1)& (0+255),b
 21133  0066D2  ECE7  F035         	call	_GetEEPROM	;wreg free
 21134                           
 21135                           ;EEPROM.c: 309: Global.BlueToothFlag = Temp.BlueToothFlag;
 21136  0066D6  C103  F400         	movff	SyncEEPROMToGlobal@Temp,_Global
 21137                           
 21138                           ;EEPROM.c: 310: Global.SWNECcode = Temp.SWNECcode;
 21139  0066DA  C104  F401         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 21140  0066DE  C105  F402         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 21141  0066E2  C106  F403         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 21142  0066E6  C107  F404         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 21143                           
 21144                           ;EEPROM.c: 311: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 21145  0066EA  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 21146                           
 21147                           ;EEPROM.c: 312: for(i=0; i< 20; i++)
 21148  0066EE  0E00               	movlw	0
 21149  0066F0  0101               	movlb	1	; () banked
 21150  0066F2  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 21151  0066F4  D04F               	goto	l14355
 21152                           
 21153                           ; BSR set to: 1
 21154                           
 21155                           ; BSR set to: 1
 21156  0066F6  D052               	goto	l1001
 21157  0066F8                     l14341:
 21158                           
 21159                           ; BSR set to: 1
 21160                           ;EEPROM.c: 313: {
 21161                           ;EEPROM.c: 314: for(j=0; j < 2; j++)
 21162  0066F8  0E00               	movlw	0
 21163  0066FA  0101               	movlb	1	; () banked
 21164  0066FC  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 21165  0066FE                     l14343:
 21166                           
 21167                           ; BSR set to: 1
 21168  0066FE  0E01               	movlw	1
 21169  006700  0101               	movlb	1	; () banked
 21170  006702  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 21171  006704  D001               	goto	l14347
 21172                           
 21173                           ; BSR set to: 1
 21174  006706  D044               	goto	l14353
 21175  006708                     l14347:
 21176                           
 21177                           ; BSR set to: 1
 21178                           ;EEPROM.c: 315: {
 21179                           ;EEPROM.c: 316: Global.RemoteButtonNEC[i][j] = Temp.RemoteButtonNEC[i][j];
 21180  006708  0101               	movlb	1	; () banked
 21181  00670A  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21182  00670C  0D02               	mullw	2
 21183  00670E  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21184  006710  0100               	movlb	0	; () banked
 21185  006712  6FA9               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 21186  006714  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21187  006716  0100               	movlb	0	; () banked
 21188  006718  6FAA               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 21189  00671A  50F3               	movf	prodl,w,c
 21190  00671C  0100               	movlb	0	; () banked
 21191  00671E  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21192  006720  50F4               	movf	prodh,w,c
 21193  006722  0100               	movlb	0	; () banked
 21194  006724  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21195  006726  0101               	movlb	1	; () banked
 21196  006728  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21197  00672A  0D01               	mullw	1
 21198  00672C  50F3               	movf	prodl,w,c
 21199  00672E  0100               	movlb	0	; () banked
 21200  006730  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21201  006732  50F4               	movf	prodh,w,c
 21202  006734  0100               	movlb	0	; () banked
 21203  006736  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21204  006738  0E05               	movlw	5
 21205  00673A  0100               	movlb	0	; () banked
 21206  00673C  25A9               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 21207  00673E  6ED9               	movwf	fsr2l,c
 21208  006740  0E00               	movlw	0
 21209  006742  0100               	movlb	0	; () banked
 21210  006744  21AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 21211  006746  6EDA               	movwf	fsr2h,c
 21212  006748  0101               	movlb	1	; () banked
 21213  00674A  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21214  00674C  0D02               	mullw	2
 21215  00674E  0E00               	movlw	low _Global
 21216  006750  0100               	movlb	0	; () banked
 21217  006752  6FAB               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 21218  006754  0E04               	movlw	high _Global
 21219  006756  0100               	movlb	0	; () banked
 21220  006758  6FAC               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 21221  00675A  0E05               	movlw	5
 21222  00675C  0100               	movlb	0	; () banked
 21223  00675E  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21224  006760  0E00               	movlw	0
 21225  006762  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21226  006764  50F3               	movf	prodl,w,c
 21227  006766  0100               	movlb	0	; () banked
 21228  006768  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21229  00676A  50F4               	movf	prodh,w,c
 21230  00676C  0100               	movlb	0	; () banked
 21231  00676E  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21232  006770  0101               	movlb	1	; () banked
 21233  006772  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21234  006774  0D01               	mullw	1
 21235  006776  50F3               	movf	prodl,w,c
 21236  006778  0100               	movlb	0	; () banked
 21237  00677A  25AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 21238  00677C  6EE1               	movwf	fsr1l,c
 21239  00677E  50F4               	movf	prodh,w,c
 21240  006780  0100               	movlb	0	; () banked
 21241  006782  21AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 21242  006784  6EE2               	movwf	fsr1h,c
 21243  006786  CFDF FFE7          	movff	indf2,indf1
 21244                           
 21245                           ; BSR set to: 0
 21246  00678A  0101               	movlb	1	; () banked
 21247  00678C  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21248  00678E  D7B7               	goto	l14343
 21249  006790                     l14353:
 21250                           
 21251                           ; BSR set to: 1
 21252  006790  0101               	movlb	1	; () banked
 21253  006792  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21254  006794                     l14355:
 21255                           
 21256                           ; BSR set to: 1
 21257  006794  0E13               	movlw	19
 21258  006796  0101               	movlb	1	; () banked
 21259  006798  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21260  00679A  D7AE               	goto	l14341
 21261  00679C                     l1001:
 21262                           
 21263                           ; BSR set to: 1
 21264                           ;EEPROM.c: 317: }
 21265                           ;EEPROM.c: 318: }
 21266                           ;EEPROM.c: 319: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 21267  00679C  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 21268                           
 21269                           ; BSR set to: 1
 21270                           ;EEPROM.c: 320: for(i=0; i< 15; i++)
 21271  0067A0  0E00               	movlw	0
 21272  0067A2  0101               	movlb	1	; () banked
 21273  0067A4  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 21274                           
 21275                           ; BSR set to: 1
 21276  0067A6  0E0E               	movlw	14
 21277  0067A8  0101               	movlb	1	; () banked
 21278  0067AA  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21279  0067AC  D002               	goto	l14363
 21280  0067AE  0012               	return	
 21281                           
 21282                           ; BSR set to: 1
 21283  0067B0  0012               	return	
 21284  0067B2                     l14363:
 21285                           
 21286                           ; BSR set to: 1
 21287                           ;EEPROM.c: 321: {
 21288                           ;EEPROM.c: 322: for(j=0; j < 3; j++)
 21289  0067B2  0E00               	movlw	0
 21290  0067B4  0101               	movlb	1	; () banked
 21291  0067B6  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 21292  0067B8                     l14365:
 21293                           
 21294                           ; BSR set to: 1
 21295  0067B8  0E02               	movlw	2
 21296  0067BA  0101               	movlb	1	; () banked
 21297  0067BC  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 21298  0067BE  D001               	goto	l14369
 21299                           
 21300                           ; BSR set to: 1
 21301  0067C0  D061               	goto	l14385
 21302  0067C2                     l14369:
 21303                           
 21304                           ; BSR set to: 1
 21305                           ;EEPROM.c: 323: {
 21306                           ;EEPROM.c: 324: for(k=0; k < 2; k++)
 21307  0067C2  0E00               	movlw	0
 21308  0067C4  0101               	movlb	1	; () banked
 21309  0067C6  6F00               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 21310  0067C8                     l14371:
 21311                           
 21312                           ; BSR set to: 1
 21313  0067C8  0E01               	movlw	1
 21314  0067CA  0101               	movlb	1	; () banked
 21315  0067CC  6500               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 21316  0067CE  D001               	goto	l14375
 21317                           
 21318                           ; BSR set to: 1
 21319  0067D0  D056               	goto	l14381
 21320  0067D2                     l14375:
 21321                           
 21322                           ; BSR set to: 1
 21323                           ;EEPROM.c: 325: {
 21324                           ;EEPROM.c: 326: Global.RemoteButtonRF[i][j][k] = Temp.RemoteButtonRF[i][j][k];
 21325  0067D2  0101               	movlb	1	; () banked
 21326  0067D4  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21327  0067D6  0D06               	mullw	6
 21328  0067D8  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21329  0067DA  0100               	movlb	0	; () banked
 21330  0067DC  6FA9               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 21331  0067DE  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21332  0067E0  0100               	movlb	0	; () banked
 21333  0067E2  6FAA               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 21334  0067E4  50F3               	movf	prodl,w,c
 21335  0067E6  0100               	movlb	0	; () banked
 21336  0067E8  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21337  0067EA  50F4               	movf	prodh,w,c
 21338  0067EC  0100               	movlb	0	; () banked
 21339  0067EE  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21340  0067F0  0101               	movlb	1	; () banked
 21341  0067F2  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21342  0067F4  0D02               	mullw	2
 21343  0067F6  50F3               	movf	prodl,w,c
 21344  0067F8  0100               	movlb	0	; () banked
 21345  0067FA  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21346  0067FC  50F4               	movf	prodh,w,c
 21347  0067FE  0100               	movlb	0	; () banked
 21348  006800  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21349  006802  0101               	movlb	1	; () banked
 21350  006804  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21351  006806  0D01               	mullw	1
 21352  006808  50F3               	movf	prodl,w,c
 21353  00680A  0100               	movlb	0	; () banked
 21354  00680C  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21355  00680E  50F4               	movf	prodh,w,c
 21356  006810  0100               	movlb	0	; () banked
 21357  006812  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21358  006814  0E2E               	movlw	46
 21359  006816  0100               	movlb	0	; () banked
 21360  006818  25A9               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 21361  00681A  6ED9               	movwf	fsr2l,c
 21362  00681C  0E00               	movlw	0
 21363  00681E  0100               	movlb	0	; () banked
 21364  006820  21AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 21365  006822  6EDA               	movwf	fsr2h,c
 21366  006824  0101               	movlb	1	; () banked
 21367  006826  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21368  006828  0D06               	mullw	6
 21369  00682A  0E00               	movlw	low _Global
 21370  00682C  0100               	movlb	0	; () banked
 21371  00682E  6FAB               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 21372  006830  0E04               	movlw	high _Global
 21373  006832  0100               	movlb	0	; () banked
 21374  006834  6FAC               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 21375  006836  0E2E               	movlw	46
 21376  006838  0100               	movlb	0	; () banked
 21377  00683A  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21378  00683C  0E00               	movlw	0
 21379  00683E  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21380  006840  50F3               	movf	prodl,w,c
 21381  006842  0100               	movlb	0	; () banked
 21382  006844  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21383  006846  50F4               	movf	prodh,w,c
 21384  006848  0100               	movlb	0	; () banked
 21385  00684A  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21386  00684C  0101               	movlb	1	; () banked
 21387  00684E  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21388  006850  0D02               	mullw	2
 21389  006852  50F3               	movf	prodl,w,c
 21390  006854  0100               	movlb	0	; () banked
 21391  006856  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21392  006858  50F4               	movf	prodh,w,c
 21393  00685A  0100               	movlb	0	; () banked
 21394  00685C  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21395  00685E  0101               	movlb	1	; () banked
 21396  006860  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21397  006862  0D01               	mullw	1
 21398  006864  50F3               	movf	prodl,w,c
 21399  006866  0100               	movlb	0	; () banked
 21400  006868  25AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 21401  00686A  6EE1               	movwf	fsr1l,c
 21402  00686C  50F4               	movf	prodh,w,c
 21403  00686E  0100               	movlb	0	; () banked
 21404  006870  21AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 21405  006872  6EE2               	movwf	fsr1h,c
 21406  006874  CFDF FFE7          	movff	indf2,indf1
 21407                           
 21408                           ; BSR set to: 0
 21409  006878  0101               	movlb	1	; () banked
 21410  00687A  2B00               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 21411  00687C  D7A5               	goto	l14371
 21412  00687E                     l14381:
 21413                           
 21414                           ; BSR set to: 1
 21415  00687E  0101               	movlb	1	; () banked
 21416  006880  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21417  006882  D79A               	goto	l14365
 21418  006884                     l14385:
 21419                           
 21420                           ; BSR set to: 1
 21421  006884  0101               	movlb	1	; () banked
 21422  006886  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21423                           
 21424                           ; BSR set to: 1
 21425  006888  0E0E               	movlw	14
 21426  00688A  0101               	movlb	1	; () banked
 21427  00688C  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21428  00688E  D791               	goto	l14363
 21429  006890  0012               	return	
 21430                           
 21431                           ; BSR set to: 1
 21432                           
 21433                           ; BSR set to: 1
 21434  006892  0012               	return		;funcret
 21435  006894                     __end_of_SyncEEPROMToGlobal:
 21436                           	opt stack 0
 21437                           tblptru	equ	0xFF8
 21438                           tblptrh	equ	0xFF7
 21439                           tblptrl	equ	0xFF6
 21440                           tablat	equ	0xFF5
 21441                           prodh	equ	0xFF4
 21442                           prodl	equ	0xFF3
 21443                           intcon	equ	0xFF2
 21444                           intcon2	equ	0xFF1
 21445                           indf0	equ	0xFEF
 21446                           postinc0	equ	0xFEE
 21447                           fsr0h	equ	0xFEA
 21448                           fsr0l	equ	0xFE9
 21449                           wreg	equ	0xFE8
 21450                           indf1	equ	0xFE7
 21451                           postdec1	equ	0xFE5
 21452                           fsr1h	equ	0xFE2
 21453                           fsr1l	equ	0xFE1
 21454                           indf2	equ	0xFDF
 21455                           postinc2	equ	0xFDE
 21456                           postdec2	equ	0xFDD
 21457                           fsr2h	equ	0xFDA
 21458                           fsr2l	equ	0xFD9
 21459                           status	equ	0xFD8
 21460                           
 21461 ;; *************** function _GetEEPROM *****************
 21462 ;; Defined at:
 21463 ;;		line 134 in file "EEPROM.c"
 21464 ;; Parameters:    Size  Location     Type
 21465 ;;  Temp            2   65[BANK0 ] PTR struct EEdata
 21466 ;;		 -> SyncEEPROMToGlobal@Temp(136), 
 21467 ;; Auto vars:     Size  Location     Type
 21468 ;;  j               1   72[BANK0 ] unsigned char 
 21469 ;;  i               1   71[BANK0 ] unsigned char 
 21470 ;;  k               1   70[BANK0 ] unsigned char 
 21471 ;;  Arrayspot       1   69[BANK0 ] unsigned char 
 21472 ;; Return value:  Size  Location     Type
 21473 ;;		None               void
 21474 ;; Registers used:
 21475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21476 ;; Tracked objects:
 21477 ;;		On entry : 0/0
 21478 ;;		On exit  : 0/0
 21479 ;;		Unchanged: 0/0
 21480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21481 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21482 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21483 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21484 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21485 ;;Total ram usage:        8 bytes
 21486 ;; Hardware stack levels used:    1
 21487 ;; Hardware stack levels required when called:    8
 21488 ;; This function calls:
 21489 ;;		_GetMemoryChar
 21490 ;;		_GetMemoryLong
 21491 ;; This function is called by:
 21492 ;;		_SyncEEPROMToGlobal
 21493 ;; This function uses a non-reentrant model
 21494 ;;
 21495                           
 21496                           	psect	text39
 21497  006BCE                     __ptext39:
 21498                           	opt stack 0
 21499  006BCE                     _GetEEPROM:
 21500                           	opt stack 20
 21501                           
 21502                           ;EEPROM.c: 136: unsigned char i,j,k;
 21503                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 21504                           
 21505                           ; BSR set to: 1
 21506                           ;incstack = 0
 21507  006BCE  0E05               	movlw	5
 21508  006BD0  0100               	movlb	0	; () banked
 21509  006BD2  6FA5               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 21513  006BD4  0E00               	movlw	0
 21514  006BD6  ECBC  F049         	call	_GetMemoryChar
 21515  006BDA  0100               	movlb	0	; () banked
 21516  006BDC  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21517  006BDE  C0A1  FFD9         	movff	GetEEPROM@Temp,fsr2l
 21518  006BE2  C0A2  FFDA         	movff	GetEEPROM@Temp+1,fsr2h
 21519  006BE6  6EDF               	movwf	indf2,c
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 21523  006BE8  0E01               	movlw	1
 21524  006BEA  ECAE  F036         	call	_GetMemoryLong
 21525  006BEE  0100               	movlb	0	; () banked
 21526  006BF0  EE20 F001          	lfsr	2,1
 21527  006BF4  51A1               	movf	GetEEPROM@Temp& (0+255),w,b
 21528  006BF6  26D9               	addwf	fsr2l,f,c
 21529  006BF8  51A2               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21530  006BFA  22DA               	addwfc	fsr2h,f,c
 21531  006BFC  0100               	movlb	0	; () banked
 21532  006BFE  C080  FFDE         	movff	?_GetMemoryLong,postinc2
 21533  006C02  0100               	movlb	0	; () banked
 21534  006C04  C081  FFDE         	movff	?_GetMemoryLong+1,postinc2
 21535  006C08  0100               	movlb	0	; () banked
 21536  006C0A  C082  FFDE         	movff	?_GetMemoryLong+2,postinc2
 21537  006C0E  0100               	movlb	0	; () banked
 21538  006C10  C083  FFDE         	movff	?_GetMemoryLong+3,postinc2
 21539                           
 21540                           ;EEPROM.c: 141: for(i=0; i< 20; i++)
 21541  006C14  0E00               	movlw	0
 21542  006C16  0100               	movlb	0	; () banked
 21543  006C18  6FA7               	movwf	GetEEPROM@i& (0+255),b
 21544  006C1A                     l14009:
 21545                           
 21546                           ; BSR set to: 0
 21547  006C1A  0E13               	movlw	19
 21548  006C1C  0100               	movlb	0	; () banked
 21549  006C1E  65A7               	cpfsgt	GetEEPROM@i& (0+255),b
 21550  006C20  D001               	goto	l14013
 21551                           
 21552                           ; BSR set to: 0
 21553  006C22  D035               	goto	l14031
 21554  006C24                     l14013:
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;EEPROM.c: 142: {
 21558                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 21559  006C24  0E00               	movlw	0
 21560  006C26  0100               	movlb	0	; () banked
 21561  006C28  6FA8               	movwf	GetEEPROM@j& (0+255),b
 21562  006C2A                     l14015:
 21563                           
 21564                           ; BSR set to: 0
 21565  006C2A  0E01               	movlw	1
 21566  006C2C  0100               	movlb	0	; () banked
 21567  006C2E  65A8               	cpfsgt	GetEEPROM@j& (0+255),b
 21568  006C30  D001               	goto	l14019
 21569                           
 21570                           ; BSR set to: 0
 21571  006C32  D02A               	goto	l14027
 21572  006C34                     l14019:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;EEPROM.c: 144: {
 21576                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 21577  006C34  0100               	movlb	0	; () banked
 21578  006C36  51A7               	movf	GetEEPROM@i& (0+255),w,b
 21579  006C38  0D02               	mullw	2
 21580  006C3A  C0A1  F0A3         	movff	GetEEPROM@Temp,??_GetEEPROM
 21581  006C3E  C0A2  F0A4         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21582  006C42  50F3               	movf	prodl,w,c
 21583  006C44  0100               	movlb	0	; () banked
 21584  006C46  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21585  006C48  50F4               	movf	prodh,w,c
 21586  006C4A  0100               	movlb	0	; () banked
 21587  006C4C  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21588  006C4E  0100               	movlb	0	; () banked
 21589  006C50  51A8               	movf	GetEEPROM@j& (0+255),w,b
 21590  006C52  0D01               	mullw	1
 21591  006C54  50F3               	movf	prodl,w,c
 21592  006C56  0100               	movlb	0	; () banked
 21593  006C58  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21594  006C5A  50F4               	movf	prodh,w,c
 21595  006C5C  0100               	movlb	0	; () banked
 21596  006C5E  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21597  006C60  0E05               	movlw	5
 21598  006C62  0100               	movlb	0	; () banked
 21599  006C64  25A3               	addwf	??_GetEEPROM& (0+255),w,b
 21600  006C66  6ED9               	movwf	fsr2l,c
 21601  006C68  0E00               	movlw	0
 21602  006C6A  0100               	movlb	0	; () banked
 21603  006C6C  21A4               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21604  006C6E  6EDA               	movwf	fsr2h,c
 21605  006C70  0100               	movlb	0	; () banked
 21606  006C72  51A5               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21607  006C74  ECBC  F049         	call	_GetMemoryChar
 21608  006C78  0100               	movlb	0	; () banked
 21609  006C7A  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21610  006C7C  6EDF               	movwf	indf2,c
 21611                           
 21612                           ; BSR set to: 0
 21613  006C7E  0100               	movlb	0	; () banked
 21614  006C80  2BA5               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21615                           
 21616                           ; BSR set to: 0
 21617  006C82  0100               	movlb	0	; () banked
 21618  006C84  2BA8               	incf	GetEEPROM@j& (0+255),f,b
 21619  006C86  D7D1               	goto	l14015
 21620  006C88                     l14027:
 21621                           
 21622                           ; BSR set to: 0
 21623  006C88  0100               	movlb	0	; () banked
 21624  006C8A  2BA7               	incf	GetEEPROM@i& (0+255),f,b
 21625  006C8C  D7C6               	goto	l14009
 21626  006C8E                     l14031:
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;EEPROM.c: 146: }
 21630                           ;EEPROM.c: 147: }
 21631                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*20 + 5));
 21632  006C8E  0100               	movlb	0	; () banked
 21633  006C90  EE20 F02D          	lfsr	2,45
 21634  006C94  51A1               	movf	GetEEPROM@Temp& (0+255),w,b
 21635  006C96  26D9               	addwf	fsr2l,f,c
 21636  006C98  51A2               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21637  006C9A  22DA               	addwfc	fsr2h,f,c
 21638  006C9C  0E2D               	movlw	45
 21639  006C9E  ECBC  F049         	call	_GetMemoryChar
 21640  006CA2  0100               	movlb	0	; () banked
 21641  006CA4  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21642  006CA6  6EDF               	movwf	indf2,c
 21643                           
 21644                           ; BSR set to: 0
 21645                           ;EEPROM.c: 149: Arrayspot=(2*20 + 7);
 21646  006CA8  0E2F               	movlw	47
 21647  006CAA  0100               	movlb	0	; () banked
 21648  006CAC  6FA5               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21649                           
 21650                           ; BSR set to: 0
 21651                           ;EEPROM.c: 150: for(i=0; i< 15; i++)
 21652  006CAE  0E00               	movlw	0
 21653  006CB0  0100               	movlb	0	; () banked
 21654  006CB2  6FA7               	movwf	GetEEPROM@i& (0+255),b
 21655                           
 21656                           ; BSR set to: 0
 21657  006CB4  0E0E               	movlw	14
 21658  006CB6  0100               	movlb	0	; () banked
 21659  006CB8  65A7               	cpfsgt	GetEEPROM@i& (0+255),b
 21660  006CBA  D002               	goto	l14041
 21661  006CBC  0012               	return	
 21662                           
 21663                           ; BSR set to: 0
 21664  006CBE  0012               	return	
 21665  006CC0                     l14041:
 21666                           
 21667                           ; BSR set to: 0
 21668                           ;EEPROM.c: 151: {
 21669                           ;EEPROM.c: 152: for(j=0; j < 3; j++)
 21670  006CC0  0E00               	movlw	0
 21671  006CC2  0100               	movlb	0	; () banked
 21672  006CC4  6FA8               	movwf	GetEEPROM@j& (0+255),b
 21673  006CC6                     l14043:
 21674                           
 21675                           ; BSR set to: 0
 21676  006CC6  0E02               	movlw	2
 21677  006CC8  0100               	movlb	0	; () banked
 21678  006CCA  65A8               	cpfsgt	GetEEPROM@j& (0+255),b
 21679  006CCC  D001               	goto	l14047
 21680                           
 21681                           ; BSR set to: 0
 21682  006CCE  D03E               	goto	l14065
 21683  006CD0                     l14047:
 21684                           
 21685                           ; BSR set to: 0
 21686                           ;EEPROM.c: 153: {
 21687                           ;EEPROM.c: 154: for(k=0; k < 2; k++)
 21688  006CD0  0E00               	movlw	0
 21689  006CD2  0100               	movlb	0	; () banked
 21690  006CD4  6FA6               	movwf	GetEEPROM@k& (0+255),b
 21691  006CD6                     l14049:
 21692                           
 21693                           ; BSR set to: 0
 21694  006CD6  0E01               	movlw	1
 21695  006CD8  0100               	movlb	0	; () banked
 21696  006CDA  65A6               	cpfsgt	GetEEPROM@k& (0+255),b
 21697  006CDC  D001               	goto	l14053
 21698                           
 21699                           ; BSR set to: 0
 21700  006CDE  D033               	goto	l14061
 21701  006CE0                     l14053:
 21702                           
 21703                           ; BSR set to: 0
 21704                           ;EEPROM.c: 155: {
 21705                           ;EEPROM.c: 156: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 21706  006CE0  0100               	movlb	0	; () banked
 21707  006CE2  51A7               	movf	GetEEPROM@i& (0+255),w,b
 21708  006CE4  0D06               	mullw	6
 21709  006CE6  C0A1  F0A3         	movff	GetEEPROM@Temp,??_GetEEPROM
 21710  006CEA  C0A2  F0A4         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21711  006CEE  50F3               	movf	prodl,w,c
 21712  006CF0  0100               	movlb	0	; () banked
 21713  006CF2  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21714  006CF4  50F4               	movf	prodh,w,c
 21715  006CF6  0100               	movlb	0	; () banked
 21716  006CF8  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21717  006CFA  0100               	movlb	0	; () banked
 21718  006CFC  51A8               	movf	GetEEPROM@j& (0+255),w,b
 21719  006CFE  0D02               	mullw	2
 21720  006D00  50F3               	movf	prodl,w,c
 21721  006D02  0100               	movlb	0	; () banked
 21722  006D04  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21723  006D06  50F4               	movf	prodh,w,c
 21724  006D08  0100               	movlb	0	; () banked
 21725  006D0A  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21726  006D0C  0100               	movlb	0	; () banked
 21727  006D0E  51A6               	movf	GetEEPROM@k& (0+255),w,b
 21728  006D10  0D01               	mullw	1
 21729  006D12  50F3               	movf	prodl,w,c
 21730  006D14  0100               	movlb	0	; () banked
 21731  006D16  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21732  006D18  50F4               	movf	prodh,w,c
 21733  006D1A  0100               	movlb	0	; () banked
 21734  006D1C  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21735  006D1E  0E2E               	movlw	46
 21736  006D20  0100               	movlb	0	; () banked
 21737  006D22  25A3               	addwf	??_GetEEPROM& (0+255),w,b
 21738  006D24  6ED9               	movwf	fsr2l,c
 21739  006D26  0E00               	movlw	0
 21740  006D28  0100               	movlb	0	; () banked
 21741  006D2A  21A4               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21742  006D2C  6EDA               	movwf	fsr2h,c
 21743  006D2E  0100               	movlb	0	; () banked
 21744  006D30  51A5               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21745  006D32  ECBC  F049         	call	_GetMemoryChar
 21746  006D36  0100               	movlb	0	; () banked
 21747  006D38  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21748  006D3A  6EDF               	movwf	indf2,c
 21749                           
 21750                           ; BSR set to: 0
 21751  006D3C  0100               	movlb	0	; () banked
 21752  006D3E  2BA5               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21753                           
 21754                           ; BSR set to: 0
 21755  006D40  0100               	movlb	0	; () banked
 21756  006D42  2BA6               	incf	GetEEPROM@k& (0+255),f,b
 21757  006D44  D7C8               	goto	l14049
 21758  006D46                     l14061:
 21759                           
 21760                           ; BSR set to: 0
 21761  006D46  0100               	movlb	0	; () banked
 21762  006D48  2BA8               	incf	GetEEPROM@j& (0+255),f,b
 21763  006D4A  D7BD               	goto	l14043
 21764  006D4C                     l14065:
 21765                           
 21766                           ; BSR set to: 0
 21767  006D4C  0100               	movlb	0	; () banked
 21768  006D4E  2BA7               	incf	GetEEPROM@i& (0+255),f,b
 21769                           
 21770                           ; BSR set to: 0
 21771  006D50  0E0E               	movlw	14
 21772  006D52  0100               	movlb	0	; () banked
 21773  006D54  65A7               	cpfsgt	GetEEPROM@i& (0+255),b
 21774  006D56  D7B4               	goto	l14041
 21775  006D58  0012               	return	
 21776                           
 21777                           ; BSR set to: 0
 21778                           
 21779                           ; BSR set to: 0
 21780  006D5A  0012               	return		;funcret
 21781  006D5C                     __end_of_GetEEPROM:
 21782                           	opt stack 0
 21783                           tblptru	equ	0xFF8
 21784                           tblptrh	equ	0xFF7
 21785                           tblptrl	equ	0xFF6
 21786                           tablat	equ	0xFF5
 21787                           prodh	equ	0xFF4
 21788                           prodl	equ	0xFF3
 21789                           intcon	equ	0xFF2
 21790                           intcon2	equ	0xFF1
 21791                           indf0	equ	0xFEF
 21792                           postinc0	equ	0xFEE
 21793                           fsr0h	equ	0xFEA
 21794                           fsr0l	equ	0xFE9
 21795                           wreg	equ	0xFE8
 21796                           indf1	equ	0xFE7
 21797                           postdec1	equ	0xFE5
 21798                           fsr1h	equ	0xFE2
 21799                           fsr1l	equ	0xFE1
 21800                           indf2	equ	0xFDF
 21801                           postinc2	equ	0xFDE
 21802                           postdec2	equ	0xFDD
 21803                           fsr2h	equ	0xFDA
 21804                           fsr2l	equ	0xFD9
 21805                           status	equ	0xFD8
 21806                           
 21807 ;; *************** function _SetEEPROMdefault *****************
 21808 ;; Defined at:
 21809 ;;		line 255 in file "EEPROM.c"
 21810 ;; Parameters:    Size  Location     Type
 21811 ;;		None
 21812 ;; Auto vars:     Size  Location     Type
 21813 ;;  j               1   97[BANK0 ] unsigned char 
 21814 ;;  i               1   96[BANK0 ] unsigned char 
 21815 ;;  k               1   95[BANK0 ] unsigned char 
 21816 ;; Return value:  Size  Location     Type
 21817 ;;		None               void
 21818 ;; Registers used:
 21819 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21820 ;; Tracked objects:
 21821 ;;		On entry : 0/0
 21822 ;;		On exit  : 0/0
 21823 ;;		Unchanged: 0/0
 21824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21826 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21828 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21829 ;;Total ram usage:        5 bytes
 21830 ;; Hardware stack levels used:    1
 21831 ;; Hardware stack levels required when called:   11
 21832 ;; This function calls:
 21833 ;;		_SyncGlobalToEEPROM
 21834 ;; This function is called by:
 21835 ;;		_Init_System
 21836 ;; This function uses a non-reentrant model
 21837 ;;
 21838                           
 21839                           	psect	text40
 21840  00742A                     __ptext40:
 21841                           	opt stack 0
 21842  00742A                     _SetEEPROMdefault:
 21843                           	opt stack 18
 21844                           
 21845                           ;EEPROM.c: 257: unsigned char i,j,k;
 21846                           ;EEPROM.c: 259: Global.BlueToothFlag = 0;
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;incstack = 0
 21850  00742A  0E00               	movlw	0
 21851  00742C  0104               	movlb	4	; () banked
 21852  00742E  6F00               	movwf	_Global& (0+255),b
 21853                           
 21854                           ;EEPROM.c: 260: Global.SWNECcode = 0x00FF00FF;
 21855  007430  0EFF               	movlw	255
 21856  007432  0104               	movlb	4	; () banked
 21857  007434  6F01               	movwf	(_Global+1)& (0+255),b
 21858  007436  0E00               	movlw	0
 21859  007438  6F02               	movwf	(_Global+2)& (0+255),b
 21860  00743A  0EFF               	movlw	255
 21861  00743C  6F03               	movwf	(_Global+3)& (0+255),b
 21862  00743E  0E00               	movlw	0
 21863  007440  6F04               	movwf	(_Global+4)& (0+255),b
 21864                           
 21865                           ;EEPROM.c: 261: Global.EEPROMinitFlag = 0;
 21866  007442  0E00               	movlw	0
 21867  007444  0104               	movlb	4	; () banked
 21868  007446  6F2D               	movwf	(_Global+45)& (0+255),b
 21869                           
 21870                           ;EEPROM.c: 262: for(i=0; i< 20; i++)
 21871  007448  0E00               	movlw	0
 21872  00744A  0100               	movlb	0	; () banked
 21873  00744C  6FC0               	movwf	SetEEPROMdefault@i& (0+255),b
 21874  00744E                     l14401:
 21875                           
 21876                           ; BSR set to: 0
 21877  00744E  0E13               	movlw	19
 21878  007450  0100               	movlb	0	; () banked
 21879  007452  65C0               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21880  007454  D001               	goto	l14405
 21881                           
 21882                           ; BSR set to: 0
 21883  007456  D02F               	goto	l14421
 21884  007458                     l14405:
 21885                           
 21886                           ; BSR set to: 0
 21887                           ;EEPROM.c: 263: {
 21888                           ;EEPROM.c: 264: for(j=0; j < 2; j++)
 21889  007458  0E00               	movlw	0
 21890  00745A  0100               	movlb	0	; () banked
 21891  00745C  6FC1               	movwf	SetEEPROMdefault@j& (0+255),b
 21892  00745E                     l14407:
 21893                           
 21894                           ; BSR set to: 0
 21895  00745E  0E01               	movlw	1
 21896  007460  0100               	movlb	0	; () banked
 21897  007462  65C1               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21898  007464  D001               	goto	l14411
 21899                           
 21900                           ; BSR set to: 0
 21901  007466  D024               	goto	l14417
 21902  007468                     l14411:
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;EEPROM.c: 265: {
 21906                           ;EEPROM.c: 266: Global.RemoteButtonNEC[i][j] = 0x00;
 21907  007468  0100               	movlb	0	; () banked
 21908  00746A  51C0               	movf	SetEEPROMdefault@i& (0+255),w,b
 21909  00746C  0D02               	mullw	2
 21910  00746E  0E00               	movlw	low _Global
 21911  007470  0100               	movlb	0	; () banked
 21912  007472  6FBD               	movwf	??_SetEEPROMdefault& (0+255),b
 21913  007474  0E04               	movlw	high _Global
 21914  007476  0100               	movlb	0	; () banked
 21915  007478  6FBE               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21916  00747A  0E05               	movlw	5
 21917  00747C  0100               	movlb	0	; () banked
 21918  00747E  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21919  007480  0E00               	movlw	0
 21920  007482  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21921  007484  50F3               	movf	prodl,w,c
 21922  007486  0100               	movlb	0	; () banked
 21923  007488  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21924  00748A  50F4               	movf	prodh,w,c
 21925  00748C  0100               	movlb	0	; () banked
 21926  00748E  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21927  007490  0100               	movlb	0	; () banked
 21928  007492  51C1               	movf	SetEEPROMdefault@j& (0+255),w,b
 21929  007494  0D01               	mullw	1
 21930  007496  50F3               	movf	prodl,w,c
 21931  007498  0100               	movlb	0	; () banked
 21932  00749A  25BD               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21933  00749C  6ED9               	movwf	fsr2l,c
 21934  00749E  50F4               	movf	prodh,w,c
 21935  0074A0  0100               	movlb	0	; () banked
 21936  0074A2  21BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21937  0074A4  6EDA               	movwf	fsr2h,c
 21938  0074A6  0E00               	movlw	0
 21939  0074A8  6EDF               	movwf	indf2,c
 21940                           
 21941                           ; BSR set to: 0
 21942  0074AA  0100               	movlb	0	; () banked
 21943  0074AC  2BC1               	incf	SetEEPROMdefault@j& (0+255),f,b
 21944  0074AE  D7D7               	goto	l14407
 21945  0074B0                     l14417:
 21946                           
 21947                           ; BSR set to: 0
 21948  0074B0  0100               	movlb	0	; () banked
 21949  0074B2  2BC0               	incf	SetEEPROMdefault@i& (0+255),f,b
 21950  0074B4  D7CC               	goto	l14401
 21951  0074B6                     l14421:
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;EEPROM.c: 267: }
 21955                           ;EEPROM.c: 268: }
 21956                           ;EEPROM.c: 269: for(i=0; i< 15; i++)
 21957  0074B6  0E00               	movlw	0
 21958  0074B8  0100               	movlb	0	; () banked
 21959  0074BA  6FC0               	movwf	SetEEPROMdefault@i& (0+255),b
 21960  0074BC                     l14423:
 21961                           
 21962                           ; BSR set to: 0
 21963  0074BC  0E0E               	movlw	14
 21964  0074BE  0100               	movlb	0	; () banked
 21965  0074C0  65C0               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21966  0074C2  D001               	goto	l14427
 21967                           
 21968                           ; BSR set to: 0
 21969  0074C4  D043               	goto	l14453
 21970  0074C6                     l14427:
 21971                           
 21972                           ; BSR set to: 0
 21973                           ;EEPROM.c: 270: {
 21974                           ;EEPROM.c: 271: for(j=0; j < 3; j++)
 21975  0074C6  0E00               	movlw	0
 21976  0074C8  0100               	movlb	0	; () banked
 21977  0074CA  6FC1               	movwf	SetEEPROMdefault@j& (0+255),b
 21978  0074CC                     l14429:
 21979                           
 21980                           ; BSR set to: 0
 21981  0074CC  0E02               	movlw	2
 21982  0074CE  0100               	movlb	0	; () banked
 21983  0074D0  65C1               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21984  0074D2  D001               	goto	l14433
 21985                           
 21986                           ; BSR set to: 0
 21987  0074D4  D038               	goto	l14449
 21988  0074D6                     l14433:
 21989                           
 21990                           ; BSR set to: 0
 21991                           ;EEPROM.c: 272: {
 21992                           ;EEPROM.c: 273: for(k=0; k < 2; k++)
 21993  0074D6  0E00               	movlw	0
 21994  0074D8  0100               	movlb	0	; () banked
 21995  0074DA  6FBF               	movwf	SetEEPROMdefault@k& (0+255),b
 21996  0074DC                     l14435:
 21997                           
 21998                           ; BSR set to: 0
 21999  0074DC  0E01               	movlw	1
 22000  0074DE  0100               	movlb	0	; () banked
 22001  0074E0  65BF               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 22002  0074E2  D001               	goto	l14439
 22003                           
 22004                           ; BSR set to: 0
 22005  0074E4  D02D               	goto	l14445
 22006  0074E6                     l14439:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;EEPROM.c: 274: {
 22010                           ;EEPROM.c: 275: Global.RemoteButtonRF[i][j][k] = 0x00;
 22011  0074E6  0100               	movlb	0	; () banked
 22012  0074E8  51C0               	movf	SetEEPROMdefault@i& (0+255),w,b
 22013  0074EA  0D06               	mullw	6
 22014  0074EC  0E00               	movlw	low _Global
 22015  0074EE  0100               	movlb	0	; () banked
 22016  0074F0  6FBD               	movwf	??_SetEEPROMdefault& (0+255),b
 22017  0074F2  0E04               	movlw	high _Global
 22018  0074F4  0100               	movlb	0	; () banked
 22019  0074F6  6FBE               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 22020  0074F8  0E2E               	movlw	46
 22021  0074FA  0100               	movlb	0	; () banked
 22022  0074FC  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 22023  0074FE  0E00               	movlw	0
 22024  007500  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 22025  007502  50F3               	movf	prodl,w,c
 22026  007504  0100               	movlb	0	; () banked
 22027  007506  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 22028  007508  50F4               	movf	prodh,w,c
 22029  00750A  0100               	movlb	0	; () banked
 22030  00750C  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 22031  00750E  0100               	movlb	0	; () banked
 22032  007510  51C1               	movf	SetEEPROMdefault@j& (0+255),w,b
 22033  007512  0D02               	mullw	2
 22034  007514  50F3               	movf	prodl,w,c
 22035  007516  0100               	movlb	0	; () banked
 22036  007518  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 22037  00751A  50F4               	movf	prodh,w,c
 22038  00751C  0100               	movlb	0	; () banked
 22039  00751E  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 22040  007520  0100               	movlb	0	; () banked
 22041  007522  51BF               	movf	SetEEPROMdefault@k& (0+255),w,b
 22042  007524  0D01               	mullw	1
 22043  007526  50F3               	movf	prodl,w,c
 22044  007528  0100               	movlb	0	; () banked
 22045  00752A  25BD               	addwf	??_SetEEPROMdefault& (0+255),w,b
 22046  00752C  6ED9               	movwf	fsr2l,c
 22047  00752E  50F4               	movf	prodh,w,c
 22048  007530  0100               	movlb	0	; () banked
 22049  007532  21BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 22050  007534  6EDA               	movwf	fsr2h,c
 22051  007536  0E00               	movlw	0
 22052  007538  6EDF               	movwf	indf2,c
 22053                           
 22054                           ; BSR set to: 0
 22055  00753A  0100               	movlb	0	; () banked
 22056  00753C  2BBF               	incf	SetEEPROMdefault@k& (0+255),f,b
 22057  00753E  D7CE               	goto	l14435
 22058  007540                     l14445:
 22059                           
 22060                           ; BSR set to: 0
 22061  007540  0100               	movlb	0	; () banked
 22062  007542  2BC1               	incf	SetEEPROMdefault@j& (0+255),f,b
 22063  007544  D7C3               	goto	l14429
 22064  007546                     l14449:
 22065                           
 22066                           ; BSR set to: 0
 22067  007546  0100               	movlb	0	; () banked
 22068  007548  2BC0               	incf	SetEEPROMdefault@i& (0+255),f,b
 22069  00754A  D7B8               	goto	l14423
 22070  00754C                     l14453:
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;EEPROM.c: 276: }
 22074                           ;EEPROM.c: 277: }
 22075                           ;EEPROM.c: 278: }
 22076                           ;EEPROM.c: 279: SyncGlobalToEEPROM();
 22077  00754C  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
 22078  007550  0012               	return		;funcret
 22079  007552                     __end_of_SetEEPROMdefault:
 22080                           	opt stack 0
 22081                           tblptru	equ	0xFF8
 22082                           tblptrh	equ	0xFF7
 22083                           tblptrl	equ	0xFF6
 22084                           tablat	equ	0xFF5
 22085                           prodh	equ	0xFF4
 22086                           prodl	equ	0xFF3
 22087                           intcon	equ	0xFF2
 22088                           intcon2	equ	0xFF1
 22089                           indf0	equ	0xFEF
 22090                           postinc0	equ	0xFEE
 22091                           fsr0h	equ	0xFEA
 22092                           fsr0l	equ	0xFE9
 22093                           wreg	equ	0xFE8
 22094                           indf1	equ	0xFE7
 22095                           postdec1	equ	0xFE5
 22096                           fsr1h	equ	0xFE2
 22097                           fsr1l	equ	0xFE1
 22098                           indf2	equ	0xFDF
 22099                           postinc2	equ	0xFDE
 22100                           postdec2	equ	0xFDD
 22101                           fsr2h	equ	0xFDA
 22102                           fsr2l	equ	0xFD9
 22103                           status	equ	0xFD8
 22104                           
 22105 ;; *************** function _InitUART *****************
 22106 ;; Defined at:
 22107 ;;		line 80 in file "UART.c"
 22108 ;; Parameters:    Size  Location     Type
 22109 ;;  Baud            4  113[BANK0 ] unsigned long 
 22110 ;; Auto vars:     Size  Location     Type
 22111 ;;  temp            4    6[BANK1 ] unsigned long 
 22112 ;;  spbrg           2    3[BANK1 ] unsigned int 
 22113 ;;  config          1    5[BANK1 ] unsigned char 
 22114 ;; Return value:  Size  Location     Type
 22115 ;;		None               void
 22116 ;; Registers used:
 22117 ;;		wreg, status,2, status,0, cstack
 22118 ;; Tracked objects:
 22119 ;;		On entry : 0/0
 22120 ;;		On exit  : 0/0
 22121 ;;		Unchanged: 0/0
 22122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22124 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22126 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22127 ;;Total ram usage:       18 bytes
 22128 ;; Hardware stack levels used:    1
 22129 ;; Hardware stack levels required when called:    9
 22130 ;; This function calls:
 22131 ;;		_ClearUSART
 22132 ;;		_Local_CloseUSART
 22133 ;;		_OpenUSART
 22134 ;;		_Round
 22135 ;;		___fttol
 22136 ;;		___lldiv
 22137 ;;		___lltoft
 22138 ;; This function is called by:
 22139 ;;		_Init_System
 22140 ;; This function uses a non-reentrant model
 22141 ;;
 22142                           
 22143                           	psect	text41
 22144  0079D4                     __ptext41:
 22145                           	opt stack 0
 22146  0079D4                     _InitUART:
 22147                           	opt stack 20
 22148                           
 22149                           ;UART.c: 82: unsigned long temp;
 22150                           ;UART.c: 83: unsigned char config = 0;
 22151                           
 22152                           ;incstack = 0
 22153  0079D4  0E00               	movlw	0
 22154  0079D6  0101               	movlb	1	; () banked
 22155  0079D8  6F05               	movwf	InitUART@config& (0+255),b
 22156                           
 22157                           ; BSR set to: 1
 22158                           ;UART.c: 84: unsigned int spbrg;
 22159                           ;UART.c: 86: Local_CloseUSART();
 22160  0079DA  EC8B  F04A         	call	_Local_CloseUSART	;wreg free
 22161                           
 22162                           ;UART.c: 91: config |= 0b00001000;
 22163  0079DE  0101               	movlb	1	; () banked
 22164  0079E0  8705               	bsf	InitUART@config& (0+255),3,b
 22165                           
 22166                           ; BSR set to: 1
 22167                           ;UART.c: 92: config |= 0b00010000;
 22168  0079E2  0101               	movlb	1	; () banked
 22169  0079E4  8905               	bsf	InitUART@config& (0+255),4,b
 22170                           
 22171                           ; BSR set to: 1
 22172                           ;UART.c: 93: config &= ~0b00000010;
 22173  0079E6  0101               	movlb	1	; () banked
 22174  0079E8  9305               	bcf	InitUART@config& (0+255),1,b
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;UART.c: 96: temp = (64000000L / Baud) - 1;
 22178  0079EA  0E00               	movlw	0
 22179  0079EC  0100               	movlb	0	; () banked
 22180  0079EE  6F7C               	movwf	___lldiv@dividend& (0+255),b
 22181  0079F0  0E90               	movlw	144
 22182  0079F2  6F7D               	movwf	(___lldiv@dividend+1)& (0+255),b
 22183  0079F4  0ED0               	movlw	208
 22184  0079F6  6F7E               	movwf	(___lldiv@dividend+2)& (0+255),b
 22185  0079F8  0E03               	movlw	3
 22186  0079FA  6F7F               	movwf	(___lldiv@dividend+3)& (0+255),b
 22187  0079FC  C0D1  F080         	movff	InitUART@Baud,___lldiv@divisor
 22188  007A00  C0D2  F081         	movff	InitUART@Baud+1,___lldiv@divisor+1
 22189  007A04  C0D3  F082         	movff	InitUART@Baud+2,___lldiv@divisor+2
 22190  007A08  C0D4  F083         	movff	InitUART@Baud+3,___lldiv@divisor+3
 22191  007A0C  EC9D  F03F         	call	___lldiv	;wreg free
 22192  007A10  0EFF               	movlw	255
 22193  007A12  0100               	movlb	0	; () banked
 22194  007A14  257C               	addwf	?___lldiv& (0+255),w,b
 22195  007A16  0101               	movlb	1	; () banked
 22196  007A18  6F06               	movwf	InitUART@temp& (0+255),b
 22197  007A1A  0EFF               	movlw	255
 22198  007A1C  0100               	movlb	0	; () banked
 22199  007A1E  217D               	addwfc	(?___lldiv+1)& (0+255),w,b
 22200  007A20  0101               	movlb	1	; () banked
 22201  007A22  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 22202  007A24  0EFF               	movlw	255
 22203  007A26  0100               	movlb	0	; () banked
 22204  007A28  217E               	addwfc	(?___lldiv+2)& (0+255),w,b
 22205  007A2A  0101               	movlb	1	; () banked
 22206  007A2C  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 22207  007A2E  0EFF               	movlw	255
 22208  007A30  0100               	movlb	0	; () banked
 22209  007A32  217F               	addwfc	(?___lldiv+3)& (0+255),w,b
 22210  007A34  0101               	movlb	1	; () banked
 22211  007A36  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 22212                           
 22213                           ; BSR set to: 1
 22214                           ;UART.c: 97: temp = (temp >> 2) - 1;
 22215  007A38  C106  F0D5         	movff	InitUART@temp,??_InitUART
 22216  007A3C  C107  F0D6         	movff	InitUART@temp+1,??_InitUART+1
 22217  007A40  C108  F0D7         	movff	InitUART@temp+2,??_InitUART+2
 22218  007A44  C109  F0D8         	movff	InitUART@temp+3,??_InitUART+3
 22219  007A48  0E03               	movlw	3
 22220  007A4A  D006               	goto	u17770
 22221  007A4C                     u17775:
 22222  007A4C  0100               	movlb	0	; () banked
 22223  007A4E  90D8               	bcf	status,0,c
 22224  007A50  33D8               	rrcf	(??_InitUART+3)& (0+255),f,b
 22225  007A52  33D7               	rrcf	(??_InitUART+2)& (0+255),f,b
 22226  007A54  33D6               	rrcf	(??_InitUART+1)& (0+255),f,b
 22227  007A56  33D5               	rrcf	??_InitUART& (0+255),f,b
 22228  007A58                     u17770:
 22229  007A58  2EE8               	decfsz	wreg,f,c
 22230  007A5A  D7F8               	goto	u17775
 22231  007A5C  0EFF               	movlw	255
 22232  007A5E  0100               	movlb	0	; () banked
 22233  007A60  25D5               	addwf	??_InitUART& (0+255),w,b
 22234  007A62  0101               	movlb	1	; () banked
 22235  007A64  6F06               	movwf	InitUART@temp& (0+255),b
 22236  007A66  0EFF               	movlw	255
 22237  007A68  0100               	movlb	0	; () banked
 22238  007A6A  21D6               	addwfc	(??_InitUART+1)& (0+255),w,b
 22239  007A6C  0101               	movlb	1	; () banked
 22240  007A6E  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 22241  007A70  0EFF               	movlw	255
 22242  007A72  0100               	movlb	0	; () banked
 22243  007A74  21D7               	addwfc	(??_InitUART+2)& (0+255),w,b
 22244  007A76  0101               	movlb	1	; () banked
 22245  007A78  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 22246  007A7A  0EFF               	movlw	255
 22247  007A7C  0100               	movlb	0	; () banked
 22248  007A7E  21D8               	addwfc	(??_InitUART+3)& (0+255),w,b
 22249  007A80  0101               	movlb	1	; () banked
 22250  007A82  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 22251                           
 22252                           ; BSR set to: 1
 22253                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22254  007A84  C106  F084         	movff	InitUART@temp,___lltoft@c
 22255  007A88  C107  F085         	movff	InitUART@temp+1,___lltoft@c+1
 22256  007A8C  C108  F086         	movff	InitUART@temp+2,___lltoft@c+2
 22257  007A90  C109  F087         	movff	InitUART@temp+3,___lltoft@c+3
 22258  007A94  EC7E  F044         	call	___lltoft	;wreg free
 22259  007A98  C084  F0CA         	movff	?___lltoft,Round@input
 22260  007A9C  C085  F0CB         	movff	?___lltoft+1,Round@input+1
 22261  007AA0  C086  F0CC         	movff	?___lltoft+2,Round@input+2
 22262  007AA4  ECE2  F045         	call	_Round	;wreg free
 22263  007AA8  C0CA  F100         	movff	?_Round,_InitUART$3806
 22264  007AAC  C0CB  F101         	movff	?_Round+1,_InitUART$3806+1
 22265  007AB0  C0CC  F102         	movff	?_Round+2,_InitUART$3806+2
 22266                           
 22267                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22268  007AB4  C100  F0BB         	movff	_InitUART$3806,___fttol@f1
 22269  007AB8  C101  F0BC         	movff	_InitUART$3806+1,___fttol@f1+1
 22270  007ABC  C102  F0BD         	movff	_InitUART$3806+2,___fttol@f1+2
 22271  007AC0  ECC5  F038         	call	___fttol	;wreg free
 22272  007AC4  C0BB  F103         	movff	?___fttol,InitUART@spbrg
 22273  007AC8  C0BC  F104         	movff	?___fttol+1,InitUART@spbrg+1
 22274                           
 22275                           ;UART.c: 100: BAUDCONbits.BRG16 = 1;
 22276  007ACC  86B8               	bsf	4024,3,c	;volatile
 22277                           
 22278                           ;UART.c: 102: ClearUSART();
 22279  007ACE  EC92  F04A         	call	_ClearUSART	;wreg free
 22280                           
 22281                           ;UART.c: 103: OpenUSART(config, spbrg);
 22282  007AD2  C103  F07C         	movff	InitUART@spbrg,OpenUSART@spbrg
 22283  007AD6  C104  F07D         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 22284  007ADA  0101               	movlb	1	; () banked
 22285  007ADC  5105               	movf	InitUART@config& (0+255),w,b
 22286  007ADE  ECBE  F044         	call	_OpenUSART
 22287                           
 22288                           ;UART.c: 105: PIR1bits.RCIF = 0;
 22289  007AE2  9A9E               	bcf	3998,5,c	;volatile
 22290                           
 22291                           ;UART.c: 106: PIE1bits.RCIE = 1;
 22292  007AE4  8A9D               	bsf	3997,5,c	;volatile
 22293                           
 22294                           ;UART.c: 107: INTCONbits.PEIE = 1;
 22295  007AE6  8CF2               	bsf	intcon,6,c	;volatile
 22296  007AE8  0012               	return		;funcret
 22297  007AEA                     __end_of_InitUART:
 22298                           	opt stack 0
 22299                           tblptru	equ	0xFF8
 22300                           tblptrh	equ	0xFF7
 22301                           tblptrl	equ	0xFF6
 22302                           tablat	equ	0xFF5
 22303                           prodh	equ	0xFF4
 22304                           prodl	equ	0xFF3
 22305                           intcon	equ	0xFF2
 22306                           intcon2	equ	0xFF1
 22307                           indf0	equ	0xFEF
 22308                           postinc0	equ	0xFEE
 22309                           fsr0h	equ	0xFEA
 22310                           fsr0l	equ	0xFE9
 22311                           wreg	equ	0xFE8
 22312                           indf1	equ	0xFE7
 22313                           postdec1	equ	0xFE5
 22314                           fsr1h	equ	0xFE2
 22315                           fsr1l	equ	0xFE1
 22316                           indf2	equ	0xFDF
 22317                           postinc2	equ	0xFDE
 22318                           postdec2	equ	0xFDD
 22319                           fsr2h	equ	0xFDA
 22320                           fsr2l	equ	0xFD9
 22321                           status	equ	0xFD8
 22322                           
 22323 ;; *************** function _Round *****************
 22324 ;; Defined at:
 22325 ;;		line 155 in file "MISC.c"
 22326 ;; Parameters:    Size  Location     Type
 22327 ;;  input           3  106[BANK0 ] unsigned char 
 22328 ;; Auto vars:     Size  Location     Type
 22329 ;;  temp            4  109[BANK0 ] long 
 22330 ;; Return value:  Size  Location     Type
 22331 ;;                  3  106[BANK0 ] long 
 22332 ;; Registers used:
 22333 ;;		wreg, status,2, status,0, cstack
 22334 ;; Tracked objects:
 22335 ;;		On entry : 0/0
 22336 ;;		On exit  : 0/0
 22337 ;;		Unchanged: 0/0
 22338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22339 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22340 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22342 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22343 ;;Total ram usage:        7 bytes
 22344 ;; Hardware stack levels used:    1
 22345 ;; Hardware stack levels required when called:    8
 22346 ;; This function calls:
 22347 ;;		___altoft
 22348 ;;		___ftadd
 22349 ;;		___fttol
 22350 ;; This function is called by:
 22351 ;;		_InitUART
 22352 ;; This function uses a non-reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text42
 22356  008BC4                     __ptext42:
 22357                           	opt stack 0
 22358  008BC4                     _Round:
 22359                           	opt stack 20
 22360                           
 22361                           ;MISC.c: 157: long temp = (long)(input + 0.5);
 22362                           
 22363                           ;incstack = 0
 22364  008BC4  0E00               	movlw	0
 22365  008BC6  0100               	movlb	0	; () banked
 22366  008BC8  6FB2               	movwf	___ftadd@f2& (0+255),b
 22367  008BCA  0E00               	movlw	0
 22368  008BCC  0100               	movlb	0	; () banked
 22369  008BCE  6FB3               	movwf	(___ftadd@f2+1)& (0+255),b
 22370  008BD0  0E3F               	movlw	63
 22371  008BD2  0100               	movlb	0	; () banked
 22372  008BD4  6FB4               	movwf	(___ftadd@f2+2)& (0+255),b
 22373  008BD6  C0CA  F0AF         	movff	Round@input,___ftadd@f1
 22374  008BDA  C0CB  F0B0         	movff	Round@input+1,___ftadd@f1+1
 22375  008BDE  C0CC  F0B1         	movff	Round@input+2,___ftadd@f1+2
 22376  008BE2  ECCE  F02D         	call	___ftadd	;wreg free
 22377  008BE6  C0AF  F0BB         	movff	?___ftadd,___fttol@f1
 22378  008BEA  C0B0  F0BC         	movff	?___ftadd+1,___fttol@f1+1
 22379  008BEE  C0B1  F0BD         	movff	?___ftadd+2,___fttol@f1+2
 22380  008BF2  ECC5  F038         	call	___fttol	;wreg free
 22381  008BF6  C0BB  F0CD         	movff	?___fttol,Round@temp
 22382  008BFA  C0BC  F0CE         	movff	?___fttol+1,Round@temp+1
 22383  008BFE  C0BD  F0CF         	movff	?___fttol+2,Round@temp+2
 22384  008C02  C0BE  F0D0         	movff	?___fttol+3,Round@temp+3
 22385                           
 22386                           ;MISC.c: 159: return temp;
 22387  008C06  C0CD  F084         	movff	Round@temp,___altoft@c
 22388  008C0A  C0CE  F085         	movff	Round@temp+1,___altoft@c+1
 22389  008C0E  C0CF  F086         	movff	Round@temp+2,___altoft@c+2
 22390  008C12  C0D0  F087         	movff	Round@temp+3,___altoft@c+3
 22391  008C16  ECC4  F042         	call	___altoft	;wreg free
 22392  008C1A  C084  F0CA         	movff	?___altoft,?_Round
 22393  008C1E  C085  F0CB         	movff	?___altoft+1,?_Round+1
 22394  008C22  C086  F0CC         	movff	?___altoft+2,?_Round+2
 22395  008C26  0012               	return	
 22396  008C28  0012               	return		;funcret
 22397  008C2A                     __end_of_Round:
 22398                           	opt stack 0
 22399                           tblptru	equ	0xFF8
 22400                           tblptrh	equ	0xFF7
 22401                           tblptrl	equ	0xFF6
 22402                           tablat	equ	0xFF5
 22403                           prodh	equ	0xFF4
 22404                           prodl	equ	0xFF3
 22405                           intcon	equ	0xFF2
 22406                           intcon2	equ	0xFF1
 22407                           indf0	equ	0xFEF
 22408                           postinc0	equ	0xFEE
 22409                           fsr0h	equ	0xFEA
 22410                           fsr0l	equ	0xFE9
 22411                           wreg	equ	0xFE8
 22412                           indf1	equ	0xFE7
 22413                           postdec1	equ	0xFE5
 22414                           fsr1h	equ	0xFE2
 22415                           fsr1l	equ	0xFE1
 22416                           indf2	equ	0xFDF
 22417                           postinc2	equ	0xFDE
 22418                           postdec2	equ	0xFDD
 22419                           fsr2h	equ	0xFDA
 22420                           fsr2l	equ	0xFD9
 22421                           status	equ	0xFD8
 22422                           
 22423 ;; *************** function ___altoft *****************
 22424 ;; Defined at:
 22425 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 22426 ;; Parameters:    Size  Location     Type
 22427 ;;  c               4   36[BANK0 ] long 
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;  sign            1   45[BANK0 ] unsigned char 
 22430 ;;  exp             1   44[BANK0 ] unsigned char 
 22431 ;; Return value:  Size  Location     Type
 22432 ;;                  3   36[BANK0 ] float 
 22433 ;; Registers used:
 22434 ;;		wreg, status,2, status,0, cstack
 22435 ;; Tracked objects:
 22436 ;;		On entry : 0/0
 22437 ;;		On exit  : 0/0
 22438 ;;		Unchanged: 0/0
 22439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22441 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22442 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22443 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22444 ;;Total ram usage:       10 bytes
 22445 ;; Hardware stack levels used:    1
 22446 ;; Hardware stack levels required when called:    7
 22447 ;; This function calls:
 22448 ;;		___ftpack
 22449 ;; This function is called by:
 22450 ;;		_Round
 22451 ;; This function uses a non-reentrant model
 22452 ;;
 22453                           
 22454                           	psect	text43
 22455  008588                     __ptext43:
 22456                           	opt stack 0
 22457  008588                     ___altoft:
 22458                           	opt stack 20
 22459                           
 22460                           ;incstack = 0
 22461  008588  0E00               	movlw	0
 22462  00858A  0100               	movlb	0	; () banked
 22463  00858C  6F8D               	movwf	___altoft@sign& (0+255),b
 22464  00858E  0E8E               	movlw	142
 22465  008590  0100               	movlb	0	; () banked
 22466  008592  6F8C               	movwf	___altoft@exp& (0+255),b
 22467                           
 22468                           ; BSR set to: 0
 22469  008594  0100               	movlb	0	; () banked
 22470  008596  AF87               	btfss	(___altoft@c+3)& (0+255),7,b
 22471  008598  D016               	goto	l13795
 22472                           
 22473                           ; BSR set to: 0
 22474  00859A  0100               	movlb	0	; () banked
 22475  00859C  1F87               	comf	(___altoft@c+3)& (0+255),f,b
 22476  00859E  1F86               	comf	(___altoft@c+2)& (0+255),f,b
 22477  0085A0  1F85               	comf	(___altoft@c+1)& (0+255),f,b
 22478  0085A2  6D84               	negf	___altoft@c& (0+255),b
 22479  0085A4  0E00               	movlw	0
 22480  0085A6  2385               	addwfc	(___altoft@c+1)& (0+255),f,b
 22481  0085A8  2386               	addwfc	(___altoft@c+2)& (0+255),f,b
 22482  0085AA  2387               	addwfc	(___altoft@c+3)& (0+255),f,b
 22483                           
 22484                           ; BSR set to: 0
 22485  0085AC  0E01               	movlw	1
 22486  0085AE  0100               	movlb	0	; () banked
 22487  0085B0  6F8D               	movwf	___altoft@sign& (0+255),b
 22488                           
 22489                           ; BSR set to: 0
 22490  0085B2  D009               	goto	l13795
 22491  0085B4                     l13793:
 22492                           
 22493                           ; BSR set to: 0
 22494  0085B4  0100               	movlb	0	; () banked
 22495  0085B6  90D8               	bcf	status,0,c
 22496  0085B8  3387               	rrcf	(___altoft@c+3)& (0+255),f,b
 22497  0085BA  3386               	rrcf	(___altoft@c+2)& (0+255),f,b
 22498  0085BC  3385               	rrcf	(___altoft@c+1)& (0+255),f,b
 22499  0085BE  3384               	rrcf	___altoft@c& (0+255),f,b
 22500  0085C0  0100               	movlb	0	; () banked
 22501  0085C2  2B8C               	incf	___altoft@exp& (0+255),f,b
 22502  0085C4  D000               	goto	l13795
 22503  0085C6                     l13795:
 22504                           
 22505                           ; BSR set to: 0
 22506  0085C6  0E00               	movlw	0
 22507  0085C8  0100               	movlb	0	; () banked
 22508  0085CA  1584               	andwf	___altoft@c& (0+255),w,b
 22509  0085CC  0100               	movlb	0	; () banked
 22510  0085CE  6F88               	movwf	??___altoft& (0+255),b
 22511  0085D0  0E00               	movlw	0
 22512  0085D2  0100               	movlb	0	; () banked
 22513  0085D4  1585               	andwf	(___altoft@c+1)& (0+255),w,b
 22514  0085D6  0100               	movlb	0	; () banked
 22515  0085D8  6F89               	movwf	(??___altoft+1)& (0+255),b
 22516  0085DA  0E00               	movlw	0
 22517  0085DC  0100               	movlb	0	; () banked
 22518  0085DE  1586               	andwf	(___altoft@c+2)& (0+255),w,b
 22519  0085E0  0100               	movlb	0	; () banked
 22520  0085E2  6F8A               	movwf	(??___altoft+2)& (0+255),b
 22521  0085E4  0EFF               	movlw	255
 22522  0085E6  0100               	movlb	0	; () banked
 22523  0085E8  1587               	andwf	(___altoft@c+3)& (0+255),w,b
 22524  0085EA  0100               	movlb	0	; () banked
 22525  0085EC  6F8B               	movwf	(??___altoft+3)& (0+255),b
 22526  0085EE  0100               	movlb	0	; () banked
 22527  0085F0  5188               	movf	??___altoft& (0+255),w,b
 22528  0085F2  0100               	movlb	0	; () banked
 22529  0085F4  1189               	iorwf	(??___altoft+1)& (0+255),w,b
 22530  0085F6  0100               	movlb	0	; () banked
 22531  0085F8  118A               	iorwf	(??___altoft+2)& (0+255),w,b
 22532  0085FA  0100               	movlb	0	; () banked
 22533  0085FC  118B               	iorwf	(??___altoft+3)& (0+255),w,b
 22534  0085FE  A4D8               	btfss	status,2,c
 22535  008600  D7D9               	goto	l13793
 22536                           
 22537                           ; BSR set to: 0
 22538                           
 22539                           ; BSR set to: 0
 22540  008602  C084  F07C         	movff	___altoft@c,___ftpack@arg
 22541  008606  C085  F07D         	movff	___altoft@c+1,___ftpack@arg+1
 22542  00860A  C086  F07E         	movff	___altoft@c+2,___ftpack@arg+2
 22543  00860E  C08C  F07F         	movff	___altoft@exp,___ftpack@exp
 22544  008612  C08D  F080         	movff	___altoft@sign,___ftpack@sign
 22545  008616  EC3C  F03B         	call	___ftpack	;wreg free
 22546  00861A  C07C  F084         	movff	?___ftpack,?___altoft
 22547  00861E  C07D  F085         	movff	?___ftpack+1,?___altoft+1
 22548  008622  C07E  F086         	movff	?___ftpack+2,?___altoft+2
 22549  008626  0012               	return	
 22550  008628  0012               	return		;funcret
 22551  00862A                     __end_of___altoft:
 22552                           	opt stack 0
 22553                           tblptru	equ	0xFF8
 22554                           tblptrh	equ	0xFF7
 22555                           tblptrl	equ	0xFF6
 22556                           tablat	equ	0xFF5
 22557                           prodh	equ	0xFF4
 22558                           prodl	equ	0xFF3
 22559                           intcon	equ	0xFF2
 22560                           intcon2	equ	0xFF1
 22561                           indf0	equ	0xFEF
 22562                           postinc0	equ	0xFEE
 22563                           fsr0h	equ	0xFEA
 22564                           fsr0l	equ	0xFE9
 22565                           wreg	equ	0xFE8
 22566                           indf1	equ	0xFE7
 22567                           postdec1	equ	0xFE5
 22568                           fsr1h	equ	0xFE2
 22569                           fsr1l	equ	0xFE1
 22570                           indf2	equ	0xFDF
 22571                           postinc2	equ	0xFDE
 22572                           postdec2	equ	0xFDD
 22573                           fsr2h	equ	0xFDA
 22574                           fsr2l	equ	0xFD9
 22575                           status	equ	0xFD8
 22576                           
 22577 ;; *************** function _OpenUSART *****************
 22578 ;; Defined at:
 22579 ;;		line 115 in file "UART.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;  config          1    wreg     unsigned char 
 22582 ;;  spbrg           2   28[BANK0 ] unsigned int 
 22583 ;; Auto vars:     Size  Location     Type
 22584 ;;  config          1   30[BANK0 ] unsigned char 
 22585 ;; Return value:  Size  Location     Type
 22586 ;;		None               void
 22587 ;; Registers used:
 22588 ;;		wreg, status,2
 22589 ;; Tracked objects:
 22590 ;;		On entry : 0/0
 22591 ;;		On exit  : 0/0
 22592 ;;		Unchanged: 0/0
 22593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22597 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22598 ;;Total ram usage:        3 bytes
 22599 ;; Hardware stack levels used:    1
 22600 ;; Hardware stack levels required when called:    6
 22601 ;; This function calls:
 22602 ;;		Nothing
 22603 ;; This function is called by:
 22604 ;;		_InitUART
 22605 ;; This function uses a non-reentrant model
 22606 ;;
 22607                           
 22608                           	psect	text44
 22609  00897C                     __ptext44:
 22610                           	opt stack 0
 22611  00897C                     _OpenUSART:
 22612                           	opt stack 22
 22613                           
 22614                           ;incstack = 0
 22615                           ;OpenUSART@config stored from wreg
 22616  00897C  0100               	movlb	0	; () banked
 22617  00897E  6F7E               	movwf	OpenUSART@config& (0+255),b
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;UART.c: 117: TXSTA = 0;
 22621  008980  0E00               	movlw	0
 22622  008982  6EAC               	movwf	4012,c	;volatile
 22623                           
 22624                           ;UART.c: 118: RCSTA = 0;
 22625  008984  0E00               	movlw	0
 22626  008986  6EAB               	movwf	4011,c	;volatile
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;UART.c: 120: if(config&0x01)
 22630  008988  0100               	movlb	0	; () banked
 22631  00898A  A17E               	btfss	OpenUSART@config& (0+255),0,b
 22632  00898C  D002               	goto	l13903
 22633                           
 22634                           ; BSR set to: 0
 22635                           ;UART.c: 121: {
 22636                           ;UART.c: 122: TXSTAbits.SYNC = 1;
 22637  00898E  88AC               	bsf	4012,4,c	;volatile
 22638  008990  D000               	goto	l13903
 22639  008992                     l13903:
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;UART.c: 123: }
 22643                           ;UART.c: 125: if(config&0x02)
 22644  008992  0100               	movlb	0	; () banked
 22645  008994  A37E               	btfss	OpenUSART@config& (0+255),1,b
 22646  008996  D003               	goto	l13907
 22647                           
 22648                           ; BSR set to: 0
 22649                           ;UART.c: 126: {
 22650                           ;UART.c: 127: TXSTAbits.TX9 = 1;
 22651  008998  8CAC               	bsf	4012,6,c	;volatile
 22652                           
 22653                           ;UART.c: 128: RCSTAbits.RX9 = 1;
 22654  00899A  8CAB               	bsf	4011,6,c	;volatile
 22655  00899C  D000               	goto	l13907
 22656  00899E                     l13907:
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;UART.c: 129: }
 22660                           ;UART.c: 131: if(config&0x04)
 22661  00899E  0100               	movlb	0	; () banked
 22662  0089A0  A57E               	btfss	OpenUSART@config& (0+255),2,b
 22663  0089A2  D002               	goto	l13911
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;UART.c: 132: {
 22667                           ;UART.c: 133: TXSTAbits.CSRC = 1;
 22668  0089A4  8EAC               	bsf	4012,7,c	;volatile
 22669  0089A6  D000               	goto	l13911
 22670  0089A8                     l13911:
 22671                           
 22672                           ; BSR set to: 0
 22673                           ;UART.c: 134: }
 22674                           ;UART.c: 136: if(config&0x08)
 22675  0089A8  0100               	movlb	0	; () banked
 22676  0089AA  A77E               	btfss	OpenUSART@config& (0+255),3,b
 22677  0089AC  D002               	goto	l641
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;UART.c: 137: {
 22681                           ;UART.c: 138: RCSTAbits.CREN = 1;
 22682  0089AE  88AB               	bsf	4011,4,c	;volatile
 22683                           
 22684                           ;UART.c: 139: }
 22685  0089B0  D002               	goto	l13915
 22686  0089B2                     l641:
 22687                           
 22688                           ; BSR set to: 0
 22689                           ;UART.c: 140: else
 22690                           ;UART.c: 141: {
 22691                           ;UART.c: 142: RCSTAbits.SREN = 1;
 22692  0089B2  8AAB               	bsf	4011,5,c	;volatile
 22693  0089B4  D000               	goto	l13915
 22694  0089B6                     l13915:
 22695                           
 22696                           ; BSR set to: 0
 22697                           ;UART.c: 143: }
 22698                           ;UART.c: 145: if(config&0x10)
 22699  0089B6  0100               	movlb	0	; () banked
 22700  0089B8  A97E               	btfss	OpenUSART@config& (0+255),4,b
 22701  0089BA  D002               	goto	l13919
 22702                           
 22703                           ; BSR set to: 0
 22704                           ;UART.c: 146: {
 22705                           ;UART.c: 147: TXSTAbits.BRGH = 1;
 22706  0089BC  84AC               	bsf	4012,2,c	;volatile
 22707  0089BE  D000               	goto	l13919
 22708  0089C0                     l13919:
 22709                           
 22710                           ; BSR set to: 0
 22711                           ;UART.c: 148: }
 22712                           ;UART.c: 150: if(config&0x20)
 22713  0089C0  0100               	movlb	0	; () banked
 22714  0089C2  AB7E               	btfss	OpenUSART@config& (0+255),5,b
 22715  0089C4  D002               	goto	l13923
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;UART.c: 151: {
 22719                           ;UART.c: 152: RCSTAbits.ADEN = 1;
 22720  0089C6  86AB               	bsf	4011,3,c	;volatile
 22721  0089C8  D000               	goto	l13923
 22722  0089CA                     l13923:
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;UART.c: 153: }
 22726                           ;UART.c: 155: if(config&0x40)
 22727  0089CA  0100               	movlb	0	; () banked
 22728  0089CC  AD7E               	btfss	OpenUSART@config& (0+255),6,b
 22729  0089CE  D003               	goto	l645
 22730                           
 22731                           ; BSR set to: 0
 22732                           ;UART.c: 156: {
 22733                           ;UART.c: 157: PIR1bits.RCIF = 0;
 22734  0089D0  9A9E               	bcf	3998,5,c	;volatile
 22735                           
 22736                           ;UART.c: 158: PIE1bits.RCIE = 1;
 22737  0089D2  8A9D               	bsf	3997,5,c	;volatile
 22738                           
 22739                           ;UART.c: 160: }
 22740  0089D4  D002               	goto	l13927
 22741  0089D6                     l645:
 22742                           
 22743                           ; BSR set to: 0
 22744                           ;UART.c: 161: else
 22745                           ;UART.c: 162: {
 22746                           ;UART.c: 163: PIE1bits.RCIE = 0;
 22747  0089D6  9A9D               	bcf	3997,5,c	;volatile
 22748  0089D8  D000               	goto	l13927
 22749  0089DA                     l13927:
 22750                           
 22751                           ; BSR set to: 0
 22752                           ;UART.c: 164: }
 22753                           ;UART.c: 166: if(config&0x80)
 22754  0089DA  0100               	movlb	0	; () banked
 22755  0089DC  AF7E               	btfss	OpenUSART@config& (0+255),7,b
 22756  0089DE  D003               	goto	l647
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;UART.c: 167: {
 22760                           ;UART.c: 168: PIR1bits.TXIF = 0;
 22761  0089E0  989E               	bcf	3998,4,c	;volatile
 22762                           
 22763                           ;UART.c: 169: PIE1bits.TXIE = 1;
 22764  0089E2  889D               	bsf	3997,4,c	;volatile
 22765                           
 22766                           ;UART.c: 170: }
 22767  0089E4  D001               	goto	l648
 22768  0089E6                     l647:
 22769                           
 22770                           ; BSR set to: 0
 22771                           ;UART.c: 171: else
 22772                           ;UART.c: 172: {
 22773                           ;UART.c: 173: PIE1bits.TXIE = 0;
 22774  0089E6  989D               	bcf	3997,4,c	;volatile
 22775  0089E8                     l648:
 22776                           
 22777                           ; BSR set to: 0
 22778                           ;UART.c: 174: }
 22779                           ;UART.c: 176: SPBRG = spbrg;
 22780  0089E8  C07C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 22781                           
 22782                           ; BSR set to: 0
 22783                           ;UART.c: 177: SPBRGH = spbrg >> 8;
 22784  0089EC  0100               	movlb	0	; () banked
 22785  0089EE  517D               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 22786  0089F0  6EB0               	movwf	4016,c	;volatile
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;UART.c: 179: TXSTAbits.TXEN = 1;
 22790  0089F2  8AAC               	bsf	4012,5,c	;volatile
 22791                           
 22792                           ; BSR set to: 0
 22793                           ;UART.c: 180: RCSTAbits.SPEN = 1;
 22794  0089F4  8EAB               	bsf	4011,7,c	;volatile
 22795                           
 22796                           ; BSR set to: 0
 22797  0089F6  0012               	return		;funcret
 22798  0089F8                     __end_of_OpenUSART:
 22799                           	opt stack 0
 22800                           tblptru	equ	0xFF8
 22801                           tblptrh	equ	0xFF7
 22802                           tblptrl	equ	0xFF6
 22803                           tablat	equ	0xFF5
 22804                           prodh	equ	0xFF4
 22805                           prodl	equ	0xFF3
 22806                           intcon	equ	0xFF2
 22807                           intcon2	equ	0xFF1
 22808                           indf0	equ	0xFEF
 22809                           postinc0	equ	0xFEE
 22810                           fsr0h	equ	0xFEA
 22811                           fsr0l	equ	0xFE9
 22812                           wreg	equ	0xFE8
 22813                           indf1	equ	0xFE7
 22814                           postdec1	equ	0xFE5
 22815                           fsr1h	equ	0xFE2
 22816                           fsr1l	equ	0xFE1
 22817                           indf2	equ	0xFDF
 22818                           postinc2	equ	0xFDE
 22819                           postdec2	equ	0xFDD
 22820                           fsr2h	equ	0xFDA
 22821                           fsr2l	equ	0xFD9
 22822                           status	equ	0xFD8
 22823                           
 22824 ;; *************** function _Local_CloseUSART *****************
 22825 ;; Defined at:
 22826 ;;		line 64 in file "UART.c"
 22827 ;; Parameters:    Size  Location     Type
 22828 ;;		None
 22829 ;; Auto vars:     Size  Location     Type
 22830 ;;		None
 22831 ;; Return value:  Size  Location     Type
 22832 ;;		None               void
 22833 ;; Registers used:
 22834 ;;		None
 22835 ;; Tracked objects:
 22836 ;;		On entry : 0/0
 22837 ;;		On exit  : 0/0
 22838 ;;		Unchanged: 0/0
 22839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22844 ;;Total ram usage:        0 bytes
 22845 ;; Hardware stack levels used:    1
 22846 ;; Hardware stack levels required when called:    6
 22847 ;; This function calls:
 22848 ;;		Nothing
 22849 ;; This function is called by:
 22850 ;;		_InitUART
 22851 ;; This function uses a non-reentrant model
 22852 ;;
 22853                           
 22854                           	psect	text45
 22855  009516                     __ptext45:
 22856                           	opt stack 0
 22857  009516                     _Local_CloseUSART:
 22858                           	opt stack 22
 22859                           
 22860                           ;UART.c: 66: PIE1bits.RCIE = 0;
 22861                           
 22862                           ; BSR set to: 0
 22863                           ;incstack = 0
 22864  009516  9A9D               	bcf	3997,5,c	;volatile
 22865                           
 22866                           ;UART.c: 67: PIE1bits.TXIE = 0;
 22867  009518  989D               	bcf	3997,4,c	;volatile
 22868                           
 22869                           ;UART.c: 68: RCSTAbits.SPEN = 0;
 22870  00951A  9EAB               	bcf	4011,7,c	;volatile
 22871                           
 22872                           ;UART.c: 69: RCSTAbits.CREN = 0;
 22873  00951C  98AB               	bcf	4011,4,c	;volatile
 22874                           
 22875                           ;UART.c: 70: RCSTAbits.FERR = 0;
 22876  00951E  94AB               	bcf	4011,2,c	;volatile
 22877                           
 22878                           ;UART.c: 71: TXSTAbits.TXEN = 0;
 22879  009520  9AAC               	bcf	4012,5,c	;volatile
 22880  009522  0012               	return		;funcret
 22881  009524                     __end_of_Local_CloseUSART:
 22882                           	opt stack 0
 22883                           tblptru	equ	0xFF8
 22884                           tblptrh	equ	0xFF7
 22885                           tblptrl	equ	0xFF6
 22886                           tablat	equ	0xFF5
 22887                           prodh	equ	0xFF4
 22888                           prodl	equ	0xFF3
 22889                           intcon	equ	0xFF2
 22890                           intcon2	equ	0xFF1
 22891                           indf0	equ	0xFEF
 22892                           postinc0	equ	0xFEE
 22893                           fsr0h	equ	0xFEA
 22894                           fsr0l	equ	0xFE9
 22895                           wreg	equ	0xFE8
 22896                           indf1	equ	0xFE7
 22897                           postdec1	equ	0xFE5
 22898                           fsr1h	equ	0xFE2
 22899                           fsr1l	equ	0xFE1
 22900                           indf2	equ	0xFDF
 22901                           postinc2	equ	0xFDE
 22902                           postdec2	equ	0xFDD
 22903                           fsr2h	equ	0xFDA
 22904                           fsr2l	equ	0xFD9
 22905                           status	equ	0xFD8
 22906                           
 22907 ;; *************** function _ClearUSART *****************
 22908 ;; Defined at:
 22909 ;;		line 216 in file "UART.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;		None
 22912 ;; Auto vars:     Size  Location     Type
 22913 ;;		None
 22914 ;; Return value:  Size  Location     Type
 22915 ;;		None               void
 22916 ;; Registers used:
 22917 ;;		wreg, status,2, cstack
 22918 ;; Tracked objects:
 22919 ;;		On entry : 0/0
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22927 ;;Total ram usage:        0 bytes
 22928 ;; Hardware stack levels used:    1
 22929 ;; Hardware stack levels required when called:    7
 22930 ;; This function calls:
 22931 ;;		_ReadUSART
 22932 ;; This function is called by:
 22933 ;;		_main
 22934 ;;		_InitUART
 22935 ;;		_UseBluetooth
 22936 ;; This function uses a non-reentrant model
 22937 ;;
 22938                           
 22939                           	psect	text46
 22940  009524                     __ptext46:
 22941                           	opt stack 0
 22942  009524                     _ClearUSART:
 22943                           	opt stack 22
 22944                           
 22945                           ;UART.c: 218: ReadUSART();
 22946                           
 22947                           ;incstack = 0
 22948  009524  EC11  F04A         	call	_ReadUSART	;wreg free
 22949                           
 22950                           ;UART.c: 219: ReadUSART();
 22951  009528  EC11  F04A         	call	_ReadUSART	;wreg free
 22952                           
 22953                           ;UART.c: 220: ReadUSART();
 22954  00952C  EC11  F04A         	call	_ReadUSART	;wreg free
 22955  009530  0012               	return		;funcret
 22956  009532                     __end_of_ClearUSART:
 22957                           	opt stack 0
 22958                           tblptru	equ	0xFF8
 22959                           tblptrh	equ	0xFF7
 22960                           tblptrl	equ	0xFF6
 22961                           tablat	equ	0xFF5
 22962                           prodh	equ	0xFF4
 22963                           prodl	equ	0xFF3
 22964                           intcon	equ	0xFF2
 22965                           intcon2	equ	0xFF1
 22966                           indf0	equ	0xFEF
 22967                           postinc0	equ	0xFEE
 22968                           fsr0h	equ	0xFEA
 22969                           fsr0l	equ	0xFE9
 22970                           wreg	equ	0xFE8
 22971                           indf1	equ	0xFE7
 22972                           postdec1	equ	0xFE5
 22973                           fsr1h	equ	0xFE2
 22974                           fsr1l	equ	0xFE1
 22975                           indf2	equ	0xFDF
 22976                           postinc2	equ	0xFDE
 22977                           postdec2	equ	0xFDD
 22978                           fsr2h	equ	0xFDA
 22979                           fsr2l	equ	0xFD9
 22980                           status	equ	0xFD8
 22981                           
 22982 ;; *************** function _ReadUSART *****************
 22983 ;; Defined at:
 22984 ;;		line 227 in file "UART.c"
 22985 ;; Parameters:    Size  Location     Type
 22986 ;;		None
 22987 ;; Auto vars:     Size  Location     Type
 22988 ;;  data            1   28[BANK0 ] unsigned char 
 22989 ;; Return value:  Size  Location     Type
 22990 ;;                  1    wreg      unsigned char 
 22991 ;; Registers used:
 22992 ;;		wreg, status,2
 22993 ;; Tracked objects:
 22994 ;;		On entry : 0/0
 22995 ;;		On exit  : 0/0
 22996 ;;		Unchanged: 0/0
 22997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23002 ;;Total ram usage:        1 bytes
 23003 ;; Hardware stack levels used:    1
 23004 ;; Hardware stack levels required when called:    6
 23005 ;; This function calls:
 23006 ;;		Nothing
 23007 ;; This function is called by:
 23008 ;;		_ClearUSART
 23009 ;; This function uses a non-reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text47
 23013  009422                     __ptext47:
 23014                           	opt stack 0
 23015  009422                     _ReadUSART:
 23016                           	opt stack 22
 23017                           
 23018                           ;UART.c: 229: unsigned char data;
 23019                           ;UART.c: 231: if(RCSTAbits.OERR)
 23020                           
 23021                           ;incstack = 0
 23022  009422  A2AB               	btfss	4011,1,c	;volatile
 23023  009424  D004               	goto	l668
 23024                           
 23025                           ;UART.c: 232: {
 23026                           ;UART.c: 234: RCSTAbits.CREN = 0;
 23027  009426  98AB               	bcf	4011,4,c	;volatile
 23028                           
 23029                           ;UART.c: 235: RCSTAbits.CREN = 1;
 23030  009428  88AB               	bsf	4011,4,c	;volatile
 23031                           
 23032                           ;UART.c: 236: return 0;
 23033  00942A  0E00               	movlw	0
 23034  00942C  0012               	return	
 23035  00942E                     l668:
 23036                           
 23037                           ;UART.c: 237: }
 23038                           ;UART.c: 239: data = RCREG;
 23039  00942E  CFAE F07C          	movff	4014,ReadUSART@data	;volatile
 23040                           
 23041                           ;UART.c: 240: return (data);
 23042  009432  0100               	movlb	0	; () banked
 23043  009434  517C               	movf	ReadUSART@data& (0+255),w,b
 23044  009436  0012               	return	
 23045                           
 23046                           ; BSR set to: 0
 23047  009438  0012               	return		;funcret
 23048  00943A                     __end_of_ReadUSART:
 23049                           	opt stack 0
 23050                           tblptru	equ	0xFF8
 23051                           tblptrh	equ	0xFF7
 23052                           tblptrl	equ	0xFF6
 23053                           tablat	equ	0xFF5
 23054                           prodh	equ	0xFF4
 23055                           prodl	equ	0xFF3
 23056                           intcon	equ	0xFF2
 23057                           intcon2	equ	0xFF1
 23058                           indf0	equ	0xFEF
 23059                           postinc0	equ	0xFEE
 23060                           fsr0h	equ	0xFEA
 23061                           fsr0l	equ	0xFE9
 23062                           wreg	equ	0xFE8
 23063                           indf1	equ	0xFE7
 23064                           postdec1	equ	0xFE5
 23065                           fsr1h	equ	0xFE2
 23066                           fsr1l	equ	0xFE1
 23067                           indf2	equ	0xFDF
 23068                           postinc2	equ	0xFDE
 23069                           postdec2	equ	0xFDD
 23070                           fsr2h	equ	0xFDA
 23071                           fsr2l	equ	0xFD9
 23072                           status	equ	0xFD8
 23073                           
 23074 ;; *************** function _InitTimers *****************
 23075 ;; Defined at:
 23076 ;;		line 51 in file "Timer.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;		None
 23079 ;; Auto vars:     Size  Location     Type
 23080 ;;		None
 23081 ;; Return value:  Size  Location     Type
 23082 ;;		None               void
 23083 ;; Registers used:
 23084 ;;		wreg, status,2, cstack
 23085 ;; Tracked objects:
 23086 ;;		On entry : 0/0
 23087 ;;		On exit  : 0/0
 23088 ;;		Unchanged: 0/0
 23089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23094 ;;Total ram usage:        0 bytes
 23095 ;; Hardware stack levels used:    1
 23096 ;; Hardware stack levels required when called:    7
 23097 ;; This function calls:
 23098 ;;		_InitTimer1
 23099 ;;		_InitTimer2
 23100 ;;		_InitTimer3
 23101 ;; This function is called by:
 23102 ;;		_Init_System
 23103 ;; This function uses a non-reentrant model
 23104 ;;
 23105                           
 23106                           	psect	text48
 23107  0094AC                     __ptext48:
 23108                           	opt stack 0
 23109  0094AC                     _InitTimers:
 23110                           	opt stack 22
 23111                           
 23112                           ;Timer.c: 53: InitTimer1();
 23113                           
 23114                           ;incstack = 0
 23115  0094AC  ECA0  F04A         	call	_InitTimer1	;wreg free
 23116                           
 23117                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 23118  0094B0  809D               	bsf	3997,0,c	;volatile
 23119                           
 23120                           ;Timer.c: 55: InitTimer2();
 23121  0094B2  EC99  F04A         	call	_InitTimer2	;wreg free
 23122                           
 23123                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 23124  0094B6  829D               	bsf	3997,1,c	;volatile
 23125                           
 23126                           ;Timer.c: 57: InitTimer3();
 23127  0094B8  ECCF  F04A         	call	_InitTimer3	;wreg free
 23128                           
 23129                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 23130  0094BC  82A0               	bsf	4000,1,c	;volatile
 23131  0094BE  0012               	return		;funcret
 23132  0094C0                     __end_of_InitTimers:
 23133                           	opt stack 0
 23134                           tblptru	equ	0xFF8
 23135                           tblptrh	equ	0xFF7
 23136                           tblptrl	equ	0xFF6
 23137                           tablat	equ	0xFF5
 23138                           prodh	equ	0xFF4
 23139                           prodl	equ	0xFF3
 23140                           intcon	equ	0xFF2
 23141                           intcon2	equ	0xFF1
 23142                           indf0	equ	0xFEF
 23143                           postinc0	equ	0xFEE
 23144                           fsr0h	equ	0xFEA
 23145                           fsr0l	equ	0xFE9
 23146                           wreg	equ	0xFE8
 23147                           indf1	equ	0xFE7
 23148                           postdec1	equ	0xFE5
 23149                           fsr1h	equ	0xFE2
 23150                           fsr1l	equ	0xFE1
 23151                           indf2	equ	0xFDF
 23152                           postinc2	equ	0xFDE
 23153                           postdec2	equ	0xFDD
 23154                           fsr2h	equ	0xFDA
 23155                           fsr2l	equ	0xFD9
 23156                           status	equ	0xFD8
 23157                           
 23158 ;; *************** function _InitTimer3 *****************
 23159 ;; Defined at:
 23160 ;;		line 163 in file "Timer.c"
 23161 ;; Parameters:    Size  Location     Type
 23162 ;;		None
 23163 ;; Auto vars:     Size  Location     Type
 23164 ;;		None
 23165 ;; Return value:  Size  Location     Type
 23166 ;;		None               void
 23167 ;; Registers used:
 23168 ;;		wreg, status,2
 23169 ;; Tracked objects:
 23170 ;;		On entry : 0/0
 23171 ;;		On exit  : 0/0
 23172 ;;		Unchanged: 0/0
 23173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23178 ;;Total ram usage:        0 bytes
 23179 ;; Hardware stack levels used:    1
 23180 ;; Hardware stack levels required when called:    6
 23181 ;; This function calls:
 23182 ;;		Nothing
 23183 ;; This function is called by:
 23184 ;;		_InitTimers
 23185 ;; This function uses a non-reentrant model
 23186 ;;
 23187                           
 23188                           	psect	text49
 23189  00959E                     __ptext49:
 23190                           	opt stack 0
 23191  00959E                     _InitTimer3:
 23192                           	opt stack 22
 23193                           
 23194                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 23195                           
 23196                           ;incstack = 0
 23197  00959E  8EB1               	bsf	4017,7,c	;volatile
 23198                           
 23199                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 23200  0095A0  0E30               	movlw	48
 23201  0095A2  12B1               	iorwf	4017,f,c	;volatile
 23202                           
 23203                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 23204  0095A4  92B1               	bcf	4017,1,c	;volatile
 23205  0095A6  0012               	return		;funcret
 23206  0095A8                     __end_of_InitTimer3:
 23207                           	opt stack 0
 23208                           tblptru	equ	0xFF8
 23209                           tblptrh	equ	0xFF7
 23210                           tblptrl	equ	0xFF6
 23211                           tablat	equ	0xFF5
 23212                           prodh	equ	0xFF4
 23213                           prodl	equ	0xFF3
 23214                           intcon	equ	0xFF2
 23215                           intcon2	equ	0xFF1
 23216                           indf0	equ	0xFEF
 23217                           postinc0	equ	0xFEE
 23218                           fsr0h	equ	0xFEA
 23219                           fsr0l	equ	0xFE9
 23220                           wreg	equ	0xFE8
 23221                           indf1	equ	0xFE7
 23222                           postdec1	equ	0xFE5
 23223                           fsr1h	equ	0xFE2
 23224                           fsr1l	equ	0xFE1
 23225                           indf2	equ	0xFDF
 23226                           postinc2	equ	0xFDE
 23227                           postdec2	equ	0xFDD
 23228                           fsr2h	equ	0xFDA
 23229                           fsr2l	equ	0xFD9
 23230                           status	equ	0xFD8
 23231                           
 23232 ;; *************** function _InitTimer2 *****************
 23233 ;; Defined at:
 23234 ;;		line 138 in file "Timer.c"
 23235 ;; Parameters:    Size  Location     Type
 23236 ;;		None
 23237 ;; Auto vars:     Size  Location     Type
 23238 ;;		None
 23239 ;; Return value:  Size  Location     Type
 23240 ;;		None               void
 23241 ;; Registers used:
 23242 ;;		wreg, status,2
 23243 ;; Tracked objects:
 23244 ;;		On entry : 0/0
 23245 ;;		On exit  : 0/0
 23246 ;;		Unchanged: 0/0
 23247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23252 ;;Total ram usage:        0 bytes
 23253 ;; Hardware stack levels used:    1
 23254 ;; Hardware stack levels required when called:    6
 23255 ;; This function calls:
 23256 ;;		Nothing
 23257 ;; This function is called by:
 23258 ;;		_InitTimers
 23259 ;; This function uses a non-reentrant model
 23260 ;;
 23261                           
 23262                           	psect	text50
 23263  009532                     __ptext50:
 23264                           	opt stack 0
 23265  009532                     _InitTimer2:
 23266                           	opt stack 22
 23267                           
 23268                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 23269                           
 23270                           ;incstack = 0
 23271  009532  50CA               	movf	4042,w,c	;volatile
 23272  009534  0B87               	andlw	-121
 23273  009536  0970               	iorlw	112
 23274  009538  6ECA               	movwf	4042,c	;volatile
 23275                           
 23276                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 23277  00953A  0E03               	movlw	3
 23278  00953C  12CA               	iorwf	4042,f,c	;volatile
 23279  00953E  0012               	return		;funcret
 23280  009540                     __end_of_InitTimer2:
 23281                           	opt stack 0
 23282                           tblptru	equ	0xFF8
 23283                           tblptrh	equ	0xFF7
 23284                           tblptrl	equ	0xFF6
 23285                           tablat	equ	0xFF5
 23286                           prodh	equ	0xFF4
 23287                           prodl	equ	0xFF3
 23288                           intcon	equ	0xFF2
 23289                           intcon2	equ	0xFF1
 23290                           indf0	equ	0xFEF
 23291                           postinc0	equ	0xFEE
 23292                           fsr0h	equ	0xFEA
 23293                           fsr0l	equ	0xFE9
 23294                           wreg	equ	0xFE8
 23295                           indf1	equ	0xFE7
 23296                           postdec1	equ	0xFE5
 23297                           fsr1h	equ	0xFE2
 23298                           fsr1l	equ	0xFE1
 23299                           indf2	equ	0xFDF
 23300                           postinc2	equ	0xFDE
 23301                           postdec2	equ	0xFDD
 23302                           fsr2h	equ	0xFDA
 23303                           fsr2l	equ	0xFD9
 23304                           status	equ	0xFD8
 23305                           
 23306 ;; *************** function _InitTimer1 *****************
 23307 ;; Defined at:
 23308 ;;		line 109 in file "Timer.c"
 23309 ;; Parameters:    Size  Location     Type
 23310 ;;		None
 23311 ;; Auto vars:     Size  Location     Type
 23312 ;;		None
 23313 ;; Return value:  Size  Location     Type
 23314 ;;		None               void
 23315 ;; Registers used:
 23316 ;;		wreg, status,2
 23317 ;; Tracked objects:
 23318 ;;		On entry : 0/0
 23319 ;;		On exit  : 0/0
 23320 ;;		Unchanged: 0/0
 23321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23326 ;;Total ram usage:        0 bytes
 23327 ;; Hardware stack levels used:    1
 23328 ;; Hardware stack levels required when called:    6
 23329 ;; This function calls:
 23330 ;;		Nothing
 23331 ;; This function is called by:
 23332 ;;		_InitTimers
 23333 ;; This function uses a non-reentrant model
 23334 ;;
 23335                           
 23336                           	psect	text51
 23337  009540                     __ptext51:
 23338                           	opt stack 0
 23339  009540                     _InitTimer1:
 23340                           	opt stack 22
 23341                           
 23342                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 23343                           
 23344                           ;incstack = 0
 23345  009540  8ECD               	bsf	4045,7,c	;volatile
 23346                           
 23347                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 23348  009542  9CCD               	bcf	4045,6,c	;volatile
 23349                           
 23350                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 23351  009544  0E30               	movlw	48
 23352  009546  12CD               	iorwf	4045,f,c	;volatile
 23353                           
 23354                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 23355  009548  96CD               	bcf	4045,3,c	;volatile
 23356                           
 23357                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 23358  00954A  92CD               	bcf	4045,1,c	;volatile
 23359  00954C  0012               	return		;funcret
 23360  00954E                     __end_of_InitTimer1:
 23361                           	opt stack 0
 23362                           tblptru	equ	0xFF8
 23363                           tblptrh	equ	0xFF7
 23364                           tblptrl	equ	0xFF6
 23365                           tablat	equ	0xFF5
 23366                           prodh	equ	0xFF4
 23367                           prodl	equ	0xFF3
 23368                           intcon	equ	0xFF2
 23369                           intcon2	equ	0xFF1
 23370                           indf0	equ	0xFEF
 23371                           postinc0	equ	0xFEE
 23372                           fsr0h	equ	0xFEA
 23373                           fsr0l	equ	0xFE9
 23374                           wreg	equ	0xFE8
 23375                           indf1	equ	0xFE7
 23376                           postdec1	equ	0xFE5
 23377                           fsr1h	equ	0xFE2
 23378                           fsr1l	equ	0xFE1
 23379                           indf2	equ	0xFDF
 23380                           postinc2	equ	0xFDE
 23381                           postdec2	equ	0xFDD
 23382                           fsr2h	equ	0xFDA
 23383                           fsr2l	equ	0xFD9
 23384                           status	equ	0xFD8
 23385                           
 23386 ;; *************** function _InitIR *****************
 23387 ;; Defined at:
 23388 ;;		line 80 in file "IR.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;		None
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;		None
 23393 ;; Return value:  Size  Location     Type
 23394 ;;		None               void
 23395 ;; Registers used:
 23396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23406 ;;Total ram usage:        0 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:    7
 23409 ;; This function calls:
 23410 ;;		_InitTimer0
 23411 ;;		_ReadIRpin
 23412 ;;		_ResetTimer0
 23413 ;;		_cleanBuffer16bit
 23414 ;; This function is called by:
 23415 ;;		_Init_System
 23416 ;; This function uses a non-reentrant model
 23417 ;;
 23418                           
 23419                           	psect	text52
 23420  009012                     __ptext52:
 23421                           	opt stack 0
 23422  009012                     _InitIR:
 23423                           	opt stack 22
 23424                           
 23425                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 23426                           
 23427                           ;incstack = 0
 23428  009012  887D               	bsf	3965,4,c	;volatile
 23429                           
 23430                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 23431  009014  ECA7  F04A         	call	_ReadIRpin	;wreg free
 23432  009018  6E2F               	movwf	_IRpinOLD,c
 23433                           
 23434                           ;IR.c: 87: InitTimer0();
 23435  00901A  EC7C  F04A         	call	_InitTimer0	;wreg free
 23436                           
 23437                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 23438  00901E  0E00               	movlw	low _IRRawCode
 23439  009020  0100               	movlb	0	; () banked
 23440  009022  6F7C               	movwf	cleanBuffer16bit@data& (0+255),b
 23441  009024  0E07               	movlw	high _IRRawCode
 23442  009026  0100               	movlb	0	; () banked
 23443  009028  6F7D               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 23444  00902A  0E00               	movlw	0
 23445  00902C  0100               	movlb	0	; () banked
 23446  00902E  6F7F               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 23447  009030  0E64               	movlw	100
 23448  009032  6F7E               	movwf	cleanBuffer16bit@count& (0+255),b
 23449  009034  ECAC  F046         	call	_cleanBuffer16bit	;wreg free
 23450                           
 23451                           ;IR.c: 90: IR_NEC = 0;
 23452  009038  0E00               	movlw	0
 23453  00903A  0100               	movlb	0	; () banked
 23454  00903C  6FDD               	movwf	_IR_NEC& (0+255),b
 23455  00903E  0E00               	movlw	0
 23456  009040  6FDE               	movwf	(_IR_NEC+1)& (0+255),b
 23457  009042  0E00               	movlw	0
 23458  009044  6FDF               	movwf	(_IR_NEC+2)& (0+255),b
 23459  009046  0E00               	movlw	0
 23460  009048  6FE0               	movwf	(_IR_NEC+3)& (0+255),b
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 23464  00904A  9ED5               	bcf	4053,7,c	;volatile
 23465                           
 23466                           ; BSR set to: 0
 23467                           ;IR.c: 93: ResetTimer0();
 23468  00904C  ECD4  F04A         	call	_ResetTimer0	;wreg free
 23469                           
 23470                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 23471  009050  9AF2               	bcf	intcon,5,c	;volatile
 23472                           
 23473                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 23474  009052  94F2               	bcf	intcon,2,c	;volatile
 23475                           
 23476                           ;IR.c: 98: INTCONbits.RBIF = 0;
 23477  009054  90F2               	bcf	intcon,0,c	;volatile
 23478                           
 23479                           ;IR.c: 99: INTCONbits.RBIE = 1;
 23480  009056  86F2               	bsf	intcon,3,c	;volatile
 23481  009058  0012               	return		;funcret
 23482  00905A                     __end_of_InitIR:
 23483                           	opt stack 0
 23484                           tblptru	equ	0xFF8
 23485                           tblptrh	equ	0xFF7
 23486                           tblptrl	equ	0xFF6
 23487                           tablat	equ	0xFF5
 23488                           prodh	equ	0xFF4
 23489                           prodl	equ	0xFF3
 23490                           intcon	equ	0xFF2
 23491                           intcon2	equ	0xFF1
 23492                           indf0	equ	0xFEF
 23493                           postinc0	equ	0xFEE
 23494                           fsr0h	equ	0xFEA
 23495                           fsr0l	equ	0xFE9
 23496                           wreg	equ	0xFE8
 23497                           indf1	equ	0xFE7
 23498                           postdec1	equ	0xFE5
 23499                           fsr1h	equ	0xFE2
 23500                           fsr1l	equ	0xFE1
 23501                           indf2	equ	0xFDF
 23502                           postinc2	equ	0xFDE
 23503                           postdec2	equ	0xFDD
 23504                           fsr2h	equ	0xFDA
 23505                           fsr2l	equ	0xFD9
 23506                           status	equ	0xFD8
 23507                           
 23508 ;; *************** function _cleanBuffer16bit *****************
 23509 ;; Defined at:
 23510 ;;		line 141 in file "MISC.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;  data            2   28[BANK0 ] PTR unsigned int 
 23513 ;;		 -> IRRawCode(200), 
 23514 ;;  count           2   30[BANK0 ] int 
 23515 ;; Auto vars:     Size  Location     Type
 23516 ;;  i               1   35[BANK0 ] unsigned char 
 23517 ;; Return value:  Size  Location     Type
 23518 ;;		None               void
 23519 ;; Registers used:
 23520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23521 ;; Tracked objects:
 23522 ;;		On entry : 0/0
 23523 ;;		On exit  : 0/0
 23524 ;;		Unchanged: 0/0
 23525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23528 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23529 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23530 ;;Total ram usage:        8 bytes
 23531 ;; Hardware stack levels used:    1
 23532 ;; Hardware stack levels required when called:    6
 23533 ;; This function calls:
 23534 ;;		Nothing
 23535 ;; This function is called by:
 23536 ;;		_InitIR
 23537 ;; This function uses a non-reentrant model
 23538 ;;
 23539                           
 23540                           	psect	text53
 23541  008D58                     __ptext53:
 23542                           	opt stack 0
 23543  008D58                     _cleanBuffer16bit:
 23544                           	opt stack 22
 23545                           
 23546                           ;MISC.c: 143: unsigned char i=0;
 23547                           
 23548                           ;incstack = 0
 23549  008D58  0E00               	movlw	0
 23550  008D5A  0100               	movlb	0	; () banked
 23551  008D5C  6F83               	movwf	cleanBuffer16bit@i& (0+255),b
 23552                           
 23553                           ;MISC.c: 144: for(i=0; i<count;i++)
 23554  008D5E  0E00               	movlw	0
 23555  008D60  0100               	movlb	0	; () banked
 23556  008D62  6F83               	movwf	cleanBuffer16bit@i& (0+255),b
 23557  008D64  D012               	goto	l13861
 23558  008D66                     l13857:
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;MISC.c: 145: {
 23562                           ;MISC.c: 146: data[i]= 0;
 23563  008D66  0100               	movlb	0	; () banked
 23564  008D68  5183               	movf	cleanBuffer16bit@i& (0+255),w,b
 23565  008D6A  0D02               	mullw	2
 23566  008D6C  50F3               	movf	prodl,w,c
 23567  008D6E  0100               	movlb	0	; () banked
 23568  008D70  257C               	addwf	cleanBuffer16bit@data& (0+255),w,b
 23569  008D72  6ED9               	movwf	fsr2l,c
 23570  008D74  50F4               	movf	prodh,w,c
 23571  008D76  0100               	movlb	0	; () banked
 23572  008D78  217D               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 23573  008D7A  6EDA               	movwf	fsr2h,c
 23574  008D7C  0E00               	movlw	0
 23575  008D7E  6EDE               	movwf	postinc2,c
 23576  008D80  0E00               	movlw	0
 23577  008D82  6EDD               	movwf	postdec2,c
 23578                           
 23579                           ; BSR set to: 0
 23580  008D84  0100               	movlb	0	; () banked
 23581  008D86  2B83               	incf	cleanBuffer16bit@i& (0+255),f,b
 23582  008D88  D000               	goto	l13861
 23583  008D8A                     l13861:
 23584                           
 23585                           ; BSR set to: 0
 23586  008D8A  0100               	movlb	0	; () banked
 23587  008D8C  5183               	movf	cleanBuffer16bit@i& (0+255),w,b
 23588  008D8E  0100               	movlb	0	; () banked
 23589  008D90  6F80               	movwf	??_cleanBuffer16bit& (0+255),b
 23590  008D92  6B81               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 23591  008D94  0100               	movlb	0	; () banked
 23592  008D96  517E               	movf	cleanBuffer16bit@count& (0+255),w,b
 23593  008D98  0100               	movlb	0	; () banked
 23594  008D9A  5D80               	subwf	??_cleanBuffer16bit& (0+255),w,b
 23595  008D9C  0100               	movlb	0	; () banked
 23596  008D9E  5181               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 23597  008DA0  0A80               	xorlw	128
 23598  008DA2  0100               	movlb	0	; () banked
 23599  008DA4  6F82               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 23600  008DA6  0100               	movlb	0	; () banked
 23601  008DA8  517F               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 23602  008DAA  0A80               	xorlw	128
 23603  008DAC  0100               	movlb	0	; () banked
 23604  008DAE  5982               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 23605  008DB0  A0D8               	btfss	status,0,c
 23606  008DB2  D7D9               	goto	l13857
 23607                           
 23608                           ; BSR set to: 0
 23609                           
 23610                           ; BSR set to: 0
 23611  008DB4  0012               	return		;funcret
 23612  008DB6                     __end_of_cleanBuffer16bit:
 23613                           	opt stack 0
 23614                           tblptru	equ	0xFF8
 23615                           tblptrh	equ	0xFF7
 23616                           tblptrl	equ	0xFF6
 23617                           tablat	equ	0xFF5
 23618                           prodh	equ	0xFF4
 23619                           prodl	equ	0xFF3
 23620                           intcon	equ	0xFF2
 23621                           intcon2	equ	0xFF1
 23622                           indf0	equ	0xFEF
 23623                           postinc0	equ	0xFEE
 23624                           fsr0h	equ	0xFEA
 23625                           fsr0l	equ	0xFE9
 23626                           wreg	equ	0xFE8
 23627                           indf1	equ	0xFE7
 23628                           postdec1	equ	0xFE5
 23629                           fsr1h	equ	0xFE2
 23630                           fsr1l	equ	0xFE1
 23631                           indf2	equ	0xFDF
 23632                           postinc2	equ	0xFDE
 23633                           postdec2	equ	0xFDD
 23634                           fsr2h	equ	0xFDA
 23635                           fsr2l	equ	0xFD9
 23636                           status	equ	0xFD8
 23637                           
 23638 ;; *************** function _ResetTimer0 *****************
 23639 ;; Defined at:
 23640 ;;		line 79 in file "Timer.c"
 23641 ;; Parameters:    Size  Location     Type
 23642 ;;		None
 23643 ;; Auto vars:     Size  Location     Type
 23644 ;;		None
 23645 ;; Return value:  Size  Location     Type
 23646 ;;		None               void
 23647 ;; Registers used:
 23648 ;;		wreg, status,2
 23649 ;; Tracked objects:
 23650 ;;		On entry : 0/0
 23651 ;;		On exit  : 0/0
 23652 ;;		Unchanged: 0/0
 23653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23658 ;;Total ram usage:        0 bytes
 23659 ;; Hardware stack levels used:    1
 23660 ;; Hardware stack levels required when called:    6
 23661 ;; This function calls:
 23662 ;;		Nothing
 23663 ;; This function is called by:
 23664 ;;		_InitIR
 23665 ;; This function uses a non-reentrant model
 23666 ;;
 23667                           
 23668                           	psect	text54
 23669  0095A8                     __ptext54:
 23670                           	opt stack 0
 23671  0095A8                     _ResetTimer0:
 23672                           	opt stack 22
 23673                           
 23674                           ;Timer.c: 85: TMR0H = 0;
 23675                           
 23676                           ; BSR set to: 0
 23677                           ;incstack = 0
 23678  0095A8  0E00               	movlw	0
 23679  0095AA  6ED7               	movwf	4055,c	;volatile
 23680                           
 23681                           ;Timer.c: 86: TMR0L = 2;
 23682  0095AC  0E02               	movlw	2
 23683  0095AE  6ED6               	movwf	4054,c	;volatile
 23684  0095B0  0012               	return		;funcret
 23685  0095B2                     __end_of_ResetTimer0:
 23686                           	opt stack 0
 23687                           tblptru	equ	0xFF8
 23688                           tblptrh	equ	0xFF7
 23689                           tblptrl	equ	0xFF6
 23690                           tablat	equ	0xFF5
 23691                           prodh	equ	0xFF4
 23692                           prodl	equ	0xFF3
 23693                           intcon	equ	0xFF2
 23694                           intcon2	equ	0xFF1
 23695                           indf0	equ	0xFEF
 23696                           postinc0	equ	0xFEE
 23697                           fsr0h	equ	0xFEA
 23698                           fsr0l	equ	0xFE9
 23699                           wreg	equ	0xFE8
 23700                           indf1	equ	0xFE7
 23701                           postdec1	equ	0xFE5
 23702                           fsr1h	equ	0xFE2
 23703                           fsr1l	equ	0xFE1
 23704                           indf2	equ	0xFDF
 23705                           postinc2	equ	0xFDE
 23706                           postdec2	equ	0xFDD
 23707                           fsr2h	equ	0xFDA
 23708                           fsr2l	equ	0xFD9
 23709                           status	equ	0xFD8
 23710                           
 23711 ;; *************** function _ReadIRpin *****************
 23712 ;; Defined at:
 23713 ;;		line 107 in file "IR.c"
 23714 ;; Parameters:    Size  Location     Type
 23715 ;;		None
 23716 ;; Auto vars:     Size  Location     Type
 23717 ;;		None
 23718 ;; Return value:  Size  Location     Type
 23719 ;;                  1    wreg      unsigned char 
 23720 ;; Registers used:
 23721 ;;		wreg
 23722 ;; Tracked objects:
 23723 ;;		On entry : 0/0
 23724 ;;		On exit  : 0/0
 23725 ;;		Unchanged: 0/0
 23726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23731 ;;Total ram usage:        0 bytes
 23732 ;; Hardware stack levels used:    1
 23733 ;; Hardware stack levels required when called:    6
 23734 ;; This function calls:
 23735 ;;		Nothing
 23736 ;; This function is called by:
 23737 ;;		_main
 23738 ;;		_InitIR
 23739 ;;		_UseIRCode
 23740 ;;		_SendNEC_wait
 23741 ;;		_SendRF_wait
 23742 ;; This function uses a non-reentrant model
 23743 ;;
 23744                           
 23745                           	psect	text55
 23746  00954E                     __ptext55:
 23747                           	opt stack 0
 23748  00954E                     _ReadIRpin:
 23749                           	opt stack 21
 23750                           
 23751                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 23752                           
 23753                           ;incstack = 0
 23754  00954E  A881               	btfss	3969,4,c	;volatile
 23755  009550  D002               	goto	l13217
 23756                           
 23757                           ;IR.c: 111: {
 23758                           ;IR.c: 112: return (1);
 23759  009552  0E01               	movlw	1
 23760                           
 23761                           ;IR.c: 113: }
 23762  009554  0012               	return	
 23763  009556                     l13217:
 23764                           
 23765                           ;IR.c: 114: else
 23766                           ;IR.c: 115: {
 23767                           ;IR.c: 116: return 0;
 23768  009556  0E00               	movlw	0
 23769  009558  0012               	return	
 23770  00955A  0012               	return		;funcret
 23771  00955C                     __end_of_ReadIRpin:
 23772                           	opt stack 0
 23773                           tblptru	equ	0xFF8
 23774                           tblptrh	equ	0xFF7
 23775                           tblptrl	equ	0xFF6
 23776                           tablat	equ	0xFF5
 23777                           prodh	equ	0xFF4
 23778                           prodl	equ	0xFF3
 23779                           intcon	equ	0xFF2
 23780                           intcon2	equ	0xFF1
 23781                           indf0	equ	0xFEF
 23782                           postinc0	equ	0xFEE
 23783                           fsr0h	equ	0xFEA
 23784                           fsr0l	equ	0xFE9
 23785                           wreg	equ	0xFE8
 23786                           indf1	equ	0xFE7
 23787                           postdec1	equ	0xFE5
 23788                           fsr1h	equ	0xFE2
 23789                           fsr1l	equ	0xFE1
 23790                           indf2	equ	0xFDF
 23791                           postinc2	equ	0xFDE
 23792                           postdec2	equ	0xFDD
 23793                           fsr2h	equ	0xFDA
 23794                           fsr2l	equ	0xFD9
 23795                           status	equ	0xFD8
 23796                           
 23797 ;; *************** function _InitTimer0 *****************
 23798 ;; Defined at:
 23799 ;;		line 66 in file "Timer.c"
 23800 ;; Parameters:    Size  Location     Type
 23801 ;;		None
 23802 ;; Auto vars:     Size  Location     Type
 23803 ;;		None
 23804 ;; Return value:  Size  Location     Type
 23805 ;;		None               void
 23806 ;; Registers used:
 23807 ;;		wreg, status,2
 23808 ;; Tracked objects:
 23809 ;;		On entry : 0/0
 23810 ;;		On exit  : 0/0
 23811 ;;		Unchanged: 0/0
 23812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23817 ;;Total ram usage:        0 bytes
 23818 ;; Hardware stack levels used:    1
 23819 ;; Hardware stack levels required when called:    6
 23820 ;; This function calls:
 23821 ;;		Nothing
 23822 ;; This function is called by:
 23823 ;;		_InitIR
 23824 ;; This function uses a non-reentrant model
 23825 ;;
 23826                           
 23827                           	psect	text56
 23828  0094F8                     __ptext56:
 23829                           	opt stack 0
 23830  0094F8                     _InitTimer0:
 23831                           	opt stack 22
 23832                           
 23833                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 23834                           
 23835                           ;incstack = 0
 23836  0094F8  9CD5               	bcf	4053,6,c	;volatile
 23837                           
 23838                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 23839  0094FA  9AD5               	bcf	4053,5,c	;volatile
 23840                           
 23841                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 23842  0094FC  96D5               	bcf	4053,3,c	;volatile
 23843                           
 23844                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 23845  0094FE  50D5               	movf	4053,w,c	;volatile
 23846  009500  0BF8               	andlw	-8
 23847  009502  0904               	iorlw	4
 23848  009504  6ED5               	movwf	4053,c	;volatile
 23849  009506  0012               	return		;funcret
 23850  009508                     __end_of_InitTimer0:
 23851                           	opt stack 0
 23852                           tblptru	equ	0xFF8
 23853                           tblptrh	equ	0xFF7
 23854                           tblptrl	equ	0xFF6
 23855                           tablat	equ	0xFF5
 23856                           prodh	equ	0xFF4
 23857                           prodl	equ	0xFF3
 23858                           intcon	equ	0xFF2
 23859                           intcon2	equ	0xFF1
 23860                           indf0	equ	0xFEF
 23861                           postinc0	equ	0xFEE
 23862                           fsr0h	equ	0xFEA
 23863                           fsr0l	equ	0xFE9
 23864                           wreg	equ	0xFE8
 23865                           indf1	equ	0xFE7
 23866                           postdec1	equ	0xFE5
 23867                           fsr1h	equ	0xFE2
 23868                           fsr1l	equ	0xFE1
 23869                           indf2	equ	0xFDF
 23870                           postinc2	equ	0xFDE
 23871                           postdec2	equ	0xFDD
 23872                           fsr2h	equ	0xFDA
 23873                           fsr2l	equ	0xFD9
 23874                           status	equ	0xFD8
 23875                           
 23876 ;; *************** function _InitBluetooth *****************
 23877 ;; Defined at:
 23878 ;;		line 69 in file "Bluetooth.c"
 23879 ;; Parameters:    Size  Location     Type
 23880 ;;		None
 23881 ;; Auto vars:     Size  Location     Type
 23882 ;;		None
 23883 ;; Return value:  Size  Location     Type
 23884 ;;		None               void
 23885 ;; Registers used:
 23886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23887 ;; Tracked objects:
 23888 ;;		On entry : 0/0
 23889 ;;		On exit  : 0/0
 23890 ;;		Unchanged: 0/0
 23891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23896 ;;Total ram usage:        0 bytes
 23897 ;; Hardware stack levels used:    1
 23898 ;; Hardware stack levels required when called:   12
 23899 ;; This function calls:
 23900 ;;		_BluetoothConfigured
 23901 ;;		_BluetoothInitialSetup
 23902 ;;		_ResetBlue
 23903 ;;		_cleanBuffer
 23904 ;; This function is called by:
 23905 ;;		_Init_System
 23906 ;; This function uses a non-reentrant model
 23907 ;;
 23908                           
 23909                           	psect	text57
 23910  008EC2                     __ptext57:
 23911                           	opt stack 0
 23912  008EC2                     _InitBluetooth:
 23913                           	opt stack 17
 23914                           
 23915                           ;Bluetooth.c: 71: cleanBuffer(ReceivedString,255);
 23916                           
 23917                           ;incstack = 0
 23918  008EC2  0E00               	movlw	low _ReceivedString
 23919  008EC4  0100               	movlb	0	; () banked
 23920  008EC6  6F7C               	movwf	cleanBuffer@data& (0+255),b
 23921  008EC8  0E06               	movlw	high _ReceivedString
 23922  008ECA  0100               	movlb	0	; () banked
 23923  008ECC  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 23924  008ECE  0E00               	movlw	0
 23925  008ED0  0100               	movlb	0	; () banked
 23926  008ED2  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 23927  008ED4  697E               	setf	cleanBuffer@count& (0+255),b
 23928  008ED6  ECDB  F046         	call	_cleanBuffer	;wreg free
 23929                           
 23930                           ;Bluetooth.c: 72: ReceivedStringPos = 0;
 23931  008EDA  0E00               	movlw	0
 23932  008EDC  0100               	movlb	0	; () banked
 23933  008EDE  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 23934                           
 23935                           ; BSR set to: 0
 23936                           ;Bluetooth.c: 73: cleanBuffer(CommandString,255);
 23937  008EE0  0E00               	movlw	low _CommandString
 23938  008EE2  0100               	movlb	0	; () banked
 23939  008EE4  6F7C               	movwf	cleanBuffer@data& (0+255),b
 23940  008EE6  0E05               	movlw	high _CommandString
 23941  008EE8  0100               	movlb	0	; () banked
 23942  008EEA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 23943  008EEC  0E00               	movlw	0
 23944  008EEE  0100               	movlb	0	; () banked
 23945  008EF0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 23946  008EF2  697E               	setf	cleanBuffer@count& (0+255),b
 23947  008EF4  ECDB  F046         	call	_cleanBuffer	;wreg free
 23948                           
 23949                           ;Bluetooth.c: 74: CommandStringPos = 0;
 23950  008EF8  0E00               	movlw	0
 23951  008EFA  6E27               	movwf	_CommandStringPos,c
 23952                           
 23953                           ;Bluetooth.c: 76: LATA &= ~0x10;
 23954  008EFC  9889               	bcf	3977,4,c	;volatile
 23955                           
 23956                           ;Bluetooth.c: 77: LATA |= 0x08;
 23957  008EFE  8689               	bsf	3977,3,c	;volatile
 23958                           
 23959                           ;Bluetooth.c: 78: LATA &= ~0x10;
 23960  008F00  9889               	bcf	3977,4,c	;volatile
 23961                           
 23962                           ;Bluetooth.c: 79: if(!BluetoothConfigured())
 23963  008F02  EC03  F04A         	call	_BluetoothConfigured	;wreg free
 23964  008F06  0900               	iorlw	0
 23965  008F08  A4D8               	btfss	status,2,c
 23966  008F0A  0012               	return	
 23967                           
 23968                           ;Bluetooth.c: 80: {
 23969                           ;Bluetooth.c: 81: BluetoothInitialSetup();
 23970  008F0C  EC8E  F028         	call	_BluetoothInitialSetup	;wreg free
 23971                           
 23972                           ;Bluetooth.c: 82: ResetBlue();
 23973  008F10  EC48  F049         	call	_ResetBlue	;wreg free
 23974  008F14  0012               	return	
 23975  008F16  0012               	return		;funcret
 23976  008F18                     __end_of_InitBluetooth:
 23977                           	opt stack 0
 23978                           tblptru	equ	0xFF8
 23979                           tblptrh	equ	0xFF7
 23980                           tblptrl	equ	0xFF6
 23981                           tablat	equ	0xFF5
 23982                           prodh	equ	0xFF4
 23983                           prodl	equ	0xFF3
 23984                           intcon	equ	0xFF2
 23985                           intcon2	equ	0xFF1
 23986                           indf0	equ	0xFEF
 23987                           postinc0	equ	0xFEE
 23988                           fsr0h	equ	0xFEA
 23989                           fsr0l	equ	0xFE9
 23990                           wreg	equ	0xFE8
 23991                           indf1	equ	0xFE7
 23992                           postdec1	equ	0xFE5
 23993                           fsr1h	equ	0xFE2
 23994                           fsr1l	equ	0xFE1
 23995                           indf2	equ	0xFDF
 23996                           postinc2	equ	0xFDE
 23997                           postdec2	equ	0xFDD
 23998                           fsr2h	equ	0xFDA
 23999                           fsr2l	equ	0xFD9
 24000                           status	equ	0xFD8
 24001                           
 24002 ;; *************** function _BluetoothInitialSetup *****************
 24003 ;; Defined at:
 24004 ;;		line 152 in file "Bluetooth.c"
 24005 ;; Parameters:    Size  Location     Type
 24006 ;;		None
 24007 ;; Auto vars:     Size  Location     Type
 24008 ;;  buf            50   46[BANK1 ] unsigned char [50]
 24009 ;;  RFchannel      10   36[BANK1 ] unsigned char [10]
 24010 ;;  ok              1   96[BANK1 ] unsigned char 
 24011 ;; Return value:  Size  Location     Type
 24012 ;;                  1    wreg      unsigned char 
 24013 ;; Registers used:
 24014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24015 ;; Tracked objects:
 24016 ;;		On entry : 0/0
 24017 ;;		On exit  : 0/0
 24018 ;;		Unchanged: 0/0
 24019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24021 ;;      Locals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24023 ;;      Totals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24024 ;;Total ram usage:       61 bytes
 24025 ;; Hardware stack levels used:    1
 24026 ;; Hardware stack levels required when called:   10
 24027 ;; This function calls:
 24028 ;;		_EnterCommandMode
 24029 ;;		_StringContains
 24030 ;;		_UARTstring
 24031 ;;		_cleanBuffer
 24032 ;;		_delayUS
 24033 ;;		_sprintf
 24034 ;; This function is called by:
 24035 ;;		_InitBluetooth
 24036 ;; This function uses a non-reentrant model
 24037 ;;
 24038                           
 24039                           	psect	text58
 24040  00511C                     __ptext58:
 24041                           	opt stack 0
 24042  00511C                     _BluetoothInitialSetup:
 24043                           	opt stack 18
 24044                           
 24045                           ;Bluetooth.c: 154: unsigned char buf[50];
 24046                           ;Bluetooth.c: 155: unsigned char ok = 1;
 24047                           
 24048                           ;incstack = 0
 24049  00511C  0E01               	movlw	1
 24050  00511E  0101               	movlb	1	; () banked
 24051  005120  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24052                           
 24053                           ; BSR set to: 1
 24054                           ;Bluetooth.c: 156: unsigned char RFchannel[10];
 24055                           ;Bluetooth.c: 158: cleanBuffer(buf,50);
 24056  005122  0E2E               	movlw	low BluetoothInitialSetup@buf
 24057  005124  0100               	movlb	0	; () banked
 24058  005126  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24059  005128  0E01               	movlw	high BluetoothInitialSetup@buf
 24060  00512A  0100               	movlb	0	; () banked
 24061  00512C  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24062  00512E  0E00               	movlw	0
 24063  005130  0100               	movlb	0	; () banked
 24064  005132  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 24065  005134  0E32               	movlw	50
 24066  005136  6F7E               	movwf	cleanBuffer@count& (0+255),b
 24067  005138  ECDB  F046         	call	_cleanBuffer	;wreg free
 24068                           
 24069                           ;Bluetooth.c: 159: cleanBuffer(RFchannel,10);
 24070  00513C  0E24               	movlw	low BluetoothInitialSetup@RFchannel
 24071  00513E  0100               	movlb	0	; () banked
 24072  005140  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24073  005142  0E01               	movlw	high BluetoothInitialSetup@RFchannel
 24074  005144  0100               	movlb	0	; () banked
 24075  005146  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24076  005148  0E00               	movlw	0
 24077  00514A  0100               	movlb	0	; () banked
 24078  00514C  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 24079  00514E  0E0A               	movlw	10
 24080  005150  6F7E               	movwf	cleanBuffer@count& (0+255),b
 24081  005152  ECDB  F046         	call	_cleanBuffer	;wreg free
 24082                           
 24083                           ;Bluetooth.c: 161: if(!EnterCommandMode())
 24084  005156  EC39  F03F         	call	_EnterCommandMode	;wreg free
 24085  00515A  0900               	iorlw	0
 24086  00515C  B4D8               	btfsc	status,2,c
 24087  00515E  0012               	return	
 24088  005160  D001               	goto	l14123
 24089                           
 24090                           ;Bluetooth.c: 162: {
 24091                           ;Bluetooth.c: 163: return 0;
 24092                           ;	Return value of _BluetoothInitialSetup is never used
 24093  005162  0012               	return	
 24094  005164                     l14123:
 24095                           
 24096                           ;Bluetooth.c: 164: }
 24097                           ;Bluetooth.c: 165: sprintf(buf,"SN,Home Automation %ld\r",SN);
 24098  005164  0E2E               	movlw	low BluetoothInitialSetup@buf
 24099  005166  0100               	movlb	0	; () banked
 24100  005168  6FCA               	movwf	sprintf@sp& (0+255),b
 24101  00516A  0E01               	movlw	high BluetoothInitialSetup@buf
 24102  00516C  0100               	movlb	0	; () banked
 24103  00516E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 24104  005170  0E1D               	movlw	low STR_4
 24105  005172  0100               	movlb	0	; () banked
 24106  005174  6FCC               	movwf	sprintf@f& (0+255),b
 24107  005176  0EFC               	movlw	high STR_4
 24108  005178  0100               	movlb	0	; () banked
 24109  00517A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 24110  00517C  C03C  F0CE         	movff	_SN,?_sprintf+4
 24111  005180  C03D  F0CF         	movff	_SN+1,?_sprintf+5
 24112  005184  C03E  F0D0         	movff	_SN+2,?_sprintf+6
 24113  005188  C03F  F0D1         	movff	_SN+3,?_sprintf+7
 24114  00518C  ECEF  F010         	call	_sprintf	;wreg free
 24115                           
 24116                           ;Bluetooth.c: 166: UARTstring(buf);
 24117  005190  0E2E               	movlw	low BluetoothInitialSetup@buf
 24118  005192  0100               	movlb	0	; () banked
 24119  005194  6F7D               	movwf	UARTstring@data& (0+255),b
 24120  005196  0E01               	movlw	high BluetoothInitialSetup@buf
 24121  005198  0100               	movlb	0	; () banked
 24122  00519A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24123  00519C  EC08  F047         	call	_UARTstring	;wreg free
 24124                           
 24125                           ;Bluetooth.c: 167: delayUS(50000);
 24126  0051A0  0E50               	movlw	80
 24127  0051A2  0100               	movlb	0	; () banked
 24128  0051A4  6F7C               	movwf	delayUS@US& (0+255),b
 24129  0051A6  0EC3               	movlw	195
 24130  0051A8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24131  0051AA  0E00               	movlw	0
 24132  0051AC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24133  0051AE  0E00               	movlw	0
 24134  0051B0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24135  0051B2  EC8C  F047         	call	_delayUS	;wreg free
 24136                           
 24137                           ;Bluetooth.c: 168: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24138  0051B6  0E00               	movlw	low _CommandString
 24139  0051B8  0100               	movlb	0	; () banked
 24140  0051BA  6F7C               	movwf	StringContains@This& (0+255),b
 24141  0051BC  0E05               	movlw	high _CommandString
 24142  0051BE  0100               	movlb	0	; () banked
 24143  0051C0  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24144  0051C2  0EFA               	movlw	low STR_5
 24145  0051C4  0100               	movlb	0	; () banked
 24146  0051C6  6F7E               	movwf	StringContains@That& (0+255),b
 24147  0051C8  0EFF               	movlw	high STR_5
 24148  0051CA  0100               	movlb	0	; () banked
 24149  0051CC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24150  0051CE  EC71  F041         	call	_StringContains	;wreg free
 24151  0051D2  0900               	iorlw	0
 24152  0051D4  A4D8               	btfss	status,2,c
 24153  0051D6  D004               	goto	l14133
 24154                           
 24155                           ;Bluetooth.c: 169: {
 24156                           ;Bluetooth.c: 170: ok = 0;
 24157  0051D8  0E00               	movlw	0
 24158  0051DA  0101               	movlb	1	; () banked
 24159  0051DC  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24160  0051DE  D000               	goto	l14133
 24161  0051E0                     l14133:
 24162                           
 24163                           ;Bluetooth.c: 171: }
 24164                           ;Bluetooth.c: 172: cleanBuffer(CommandString,CommandStringPos);
 24165  0051E0  0E00               	movlw	low _CommandString
 24166  0051E2  0100               	movlb	0	; () banked
 24167  0051E4  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24168  0051E6  0E05               	movlw	high _CommandString
 24169  0051E8  0100               	movlb	0	; () banked
 24170  0051EA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24171  0051EC  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24172  0051F0  0100               	movlb	0	; () banked
 24173  0051F2  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24174  0051F4  ECDB  F046         	call	_cleanBuffer	;wreg free
 24175                           
 24176                           ;Bluetooth.c: 173: CommandStringPos = 0;
 24177  0051F8  0E00               	movlw	0
 24178  0051FA  6E27               	movwf	_CommandStringPos,c
 24179                           
 24180                           ;Bluetooth.c: 175: if(ok)
 24181  0051FC  0101               	movlb	1	; () banked
 24182  0051FE  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24183  005200  0101               	movlb	1	; () banked
 24184  005202  B4D8               	btfsc	status,2,c
 24185  005204  D028               	goto	l1826
 24186                           
 24187                           ; BSR set to: 1
 24188                           ;Bluetooth.c: 176: {
 24189                           ;Bluetooth.c: 177: UARTstring((unsigned char *)"SU, 115K\r");
 24190  005206  0E6E               	movlw	low STR_6
 24191  005208  0100               	movlb	0	; () banked
 24192  00520A  6F7D               	movwf	UARTstring@data& (0+255),b
 24193  00520C  0EFF               	movlw	high STR_6
 24194  00520E  0100               	movlb	0	; () banked
 24195  005210  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24196  005212  EC08  F047         	call	_UARTstring	;wreg free
 24197                           
 24198                           ;Bluetooth.c: 178: delayUS(50000);
 24199  005216  0E50               	movlw	80
 24200  005218  0100               	movlb	0	; () banked
 24201  00521A  6F7C               	movwf	delayUS@US& (0+255),b
 24202  00521C  0EC3               	movlw	195
 24203  00521E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24204  005220  0E00               	movlw	0
 24205  005222  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24206  005224  0E00               	movlw	0
 24207  005226  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24208  005228  EC8C  F047         	call	_delayUS	;wreg free
 24209                           
 24210                           ;Bluetooth.c: 179: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24211  00522C  0E00               	movlw	low _CommandString
 24212  00522E  0100               	movlb	0	; () banked
 24213  005230  6F7C               	movwf	StringContains@This& (0+255),b
 24214  005232  0E05               	movlw	high _CommandString
 24215  005234  0100               	movlb	0	; () banked
 24216  005236  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24217  005238  0EFA               	movlw	low STR_5
 24218  00523A  0100               	movlb	0	; () banked
 24219  00523C  6F7E               	movwf	StringContains@That& (0+255),b
 24220  00523E  0EFF               	movlw	high STR_5
 24221  005240  0100               	movlb	0	; () banked
 24222  005242  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24223  005244  EC71  F041         	call	_StringContains	;wreg free
 24224  005248  0900               	iorlw	0
 24225  00524A  A4D8               	btfss	status,2,c
 24226  00524C  D004               	goto	l1826
 24227                           
 24228                           ;Bluetooth.c: 180: {
 24229                           ;Bluetooth.c: 181: ok = 0;
 24230  00524E  0E00               	movlw	0
 24231  005250  0101               	movlb	1	; () banked
 24232  005252  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24233  005254  D000               	goto	l1826
 24234  005256                     l1826:
 24235                           
 24236                           ;Bluetooth.c: 182: }
 24237                           ;Bluetooth.c: 183: }
 24238                           ;Bluetooth.c: 185: if(ok)
 24239  005256  0101               	movlb	1	; () banked
 24240  005258  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24241  00525A  0101               	movlb	1	; () banked
 24242  00525C  B4D8               	btfsc	status,2,c
 24243  00525E  D028               	goto	l14155
 24244                           
 24245                           ; BSR set to: 1
 24246                           ;Bluetooth.c: 186: {
 24247                           ;Bluetooth.c: 187: UARTstring((unsigned char *)"SS, Home Automation\r");
 24248  005260  0EA7               	movlw	low STR_8
 24249  005262  0100               	movlb	0	; () banked
 24250  005264  6F7D               	movwf	UARTstring@data& (0+255),b
 24251  005266  0EFC               	movlw	high STR_8
 24252  005268  0100               	movlb	0	; () banked
 24253  00526A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24254  00526C  EC08  F047         	call	_UARTstring	;wreg free
 24255                           
 24256                           ;Bluetooth.c: 188: delayUS(50000);
 24257  005270  0E50               	movlw	80
 24258  005272  0100               	movlb	0	; () banked
 24259  005274  6F7C               	movwf	delayUS@US& (0+255),b
 24260  005276  0EC3               	movlw	195
 24261  005278  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24262  00527A  0E00               	movlw	0
 24263  00527C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24264  00527E  0E00               	movlw	0
 24265  005280  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24266  005282  EC8C  F047         	call	_delayUS	;wreg free
 24267                           
 24268                           ;Bluetooth.c: 189: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24269  005286  0E00               	movlw	low _CommandString
 24270  005288  0100               	movlb	0	; () banked
 24271  00528A  6F7C               	movwf	StringContains@This& (0+255),b
 24272  00528C  0E05               	movlw	high _CommandString
 24273  00528E  0100               	movlb	0	; () banked
 24274  005290  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24275  005292  0EFA               	movlw	low STR_5
 24276  005294  0100               	movlb	0	; () banked
 24277  005296  6F7E               	movwf	StringContains@That& (0+255),b
 24278  005298  0EFF               	movlw	high STR_5
 24279  00529A  0100               	movlb	0	; () banked
 24280  00529C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24281  00529E  EC71  F041         	call	_StringContains	;wreg free
 24282  0052A2  0900               	iorlw	0
 24283  0052A4  A4D8               	btfss	status,2,c
 24284  0052A6  D004               	goto	l14155
 24285                           
 24286                           ;Bluetooth.c: 190: {
 24287                           ;Bluetooth.c: 191: ok = 0;
 24288  0052A8  0E00               	movlw	0
 24289  0052AA  0101               	movlb	1	; () banked
 24290  0052AC  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24291                           
 24292                           ; BSR set to: 1
 24293  0052AE  D000               	goto	l14155
 24294  0052B0                     l14155:
 24295                           
 24296                           ;Bluetooth.c: 192: }
 24297                           ;Bluetooth.c: 193: }
 24298                           ;Bluetooth.c: 194: cleanBuffer(CommandString,CommandStringPos);
 24299  0052B0  0E00               	movlw	low _CommandString
 24300  0052B2  0100               	movlb	0	; () banked
 24301  0052B4  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24302  0052B6  0E05               	movlw	high _CommandString
 24303  0052B8  0100               	movlb	0	; () banked
 24304  0052BA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24305  0052BC  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24306  0052C0  0100               	movlb	0	; () banked
 24307  0052C2  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24308  0052C4  ECDB  F046         	call	_cleanBuffer	;wreg free
 24309                           
 24310                           ;Bluetooth.c: 195: CommandStringPos = 0;
 24311  0052C8  0E00               	movlw	0
 24312  0052CA  6E27               	movwf	_CommandStringPos,c
 24313                           
 24314                           ;Bluetooth.c: 197: if(ok)
 24315  0052CC  0101               	movlb	1	; () banked
 24316  0052CE  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24317  0052D0  0101               	movlb	1	; () banked
 24318  0052D2  B4D8               	btfsc	status,2,c
 24319  0052D4  D028               	goto	l14169
 24320                           
 24321                           ; BSR set to: 1
 24322                           ;Bluetooth.c: 198: {
 24323                           ;Bluetooth.c: 199: UARTstring((unsigned char *)"SY,0010\r");
 24324  0052D6  0E82               	movlw	low STR_10
 24325  0052D8  0100               	movlb	0	; () banked
 24326  0052DA  6F7D               	movwf	UARTstring@data& (0+255),b
 24327  0052DC  0EFF               	movlw	high STR_10
 24328  0052DE  0100               	movlb	0	; () banked
 24329  0052E0  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24330  0052E2  EC08  F047         	call	_UARTstring	;wreg free
 24331                           
 24332                           ;Bluetooth.c: 200: delayUS(50000);
 24333  0052E6  0E50               	movlw	80
 24334  0052E8  0100               	movlb	0	; () banked
 24335  0052EA  6F7C               	movwf	delayUS@US& (0+255),b
 24336  0052EC  0EC3               	movlw	195
 24337  0052EE  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24338  0052F0  0E00               	movlw	0
 24339  0052F2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24340  0052F4  0E00               	movlw	0
 24341  0052F6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24342  0052F8  EC8C  F047         	call	_delayUS	;wreg free
 24343                           
 24344                           ;Bluetooth.c: 201: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24345  0052FC  0E00               	movlw	low _CommandString
 24346  0052FE  0100               	movlb	0	; () banked
 24347  005300  6F7C               	movwf	StringContains@This& (0+255),b
 24348  005302  0E05               	movlw	high _CommandString
 24349  005304  0100               	movlb	0	; () banked
 24350  005306  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24351  005308  0EFA               	movlw	low STR_5
 24352  00530A  0100               	movlb	0	; () banked
 24353  00530C  6F7E               	movwf	StringContains@That& (0+255),b
 24354  00530E  0EFF               	movlw	high STR_5
 24355  005310  0100               	movlb	0	; () banked
 24356  005312  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24357  005314  EC71  F041         	call	_StringContains	;wreg free
 24358  005318  0900               	iorlw	0
 24359  00531A  A4D8               	btfss	status,2,c
 24360  00531C  D004               	goto	l14169
 24361                           
 24362                           ;Bluetooth.c: 202: {
 24363                           ;Bluetooth.c: 203: ok = 0;
 24364  00531E  0E00               	movlw	0
 24365  005320  0101               	movlb	1	; () banked
 24366  005322  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24367                           
 24368                           ; BSR set to: 1
 24369  005324  D000               	goto	l14169
 24370  005326                     l14169:
 24371                           
 24372                           ;Bluetooth.c: 204: }
 24373                           ;Bluetooth.c: 205: }
 24374                           ;Bluetooth.c: 206: cleanBuffer(CommandString,CommandStringPos);
 24375  005326  0E00               	movlw	low _CommandString
 24376  005328  0100               	movlb	0	; () banked
 24377  00532A  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24378  00532C  0E05               	movlw	high _CommandString
 24379  00532E  0100               	movlb	0	; () banked
 24380  005330  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24381  005332  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24382  005336  0100               	movlb	0	; () banked
 24383  005338  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24384  00533A  ECDB  F046         	call	_cleanBuffer	;wreg free
 24385                           
 24386                           ;Bluetooth.c: 207: CommandStringPos = 0;
 24387  00533E  0E00               	movlw	0
 24388  005340  6E27               	movwf	_CommandStringPos,c
 24389                           
 24390                           ;Bluetooth.c: 209: if(ok)
 24391  005342  0101               	movlb	1	; () banked
 24392  005344  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24393  005346  0101               	movlb	1	; () banked
 24394  005348  B4D8               	btfsc	status,2,c
 24395  00534A  D028               	goto	l14183
 24396                           
 24397                           ; BSR set to: 1
 24398                           ;Bluetooth.c: 210: {
 24399                           ;Bluetooth.c: 211: UARTstring((unsigned char *)"S~,0\r");
 24400  00534C  0EBA               	movlw	low STR_12
 24401  00534E  0100               	movlb	0	; () banked
 24402  005350  6F7D               	movwf	UARTstring@data& (0+255),b
 24403  005352  0EFF               	movlw	high STR_12
 24404  005354  0100               	movlb	0	; () banked
 24405  005356  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24406  005358  EC08  F047         	call	_UARTstring	;wreg free
 24407                           
 24408                           ;Bluetooth.c: 212: delayUS(50000);
 24409  00535C  0E50               	movlw	80
 24410  00535E  0100               	movlb	0	; () banked
 24411  005360  6F7C               	movwf	delayUS@US& (0+255),b
 24412  005362  0EC3               	movlw	195
 24413  005364  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24414  005366  0E00               	movlw	0
 24415  005368  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24416  00536A  0E00               	movlw	0
 24417  00536C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24418  00536E  EC8C  F047         	call	_delayUS	;wreg free
 24419                           
 24420                           ;Bluetooth.c: 213: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24421  005372  0E00               	movlw	low _CommandString
 24422  005374  0100               	movlb	0	; () banked
 24423  005376  6F7C               	movwf	StringContains@This& (0+255),b
 24424  005378  0E05               	movlw	high _CommandString
 24425  00537A  0100               	movlb	0	; () banked
 24426  00537C  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24427  00537E  0EFA               	movlw	low STR_5
 24428  005380  0100               	movlb	0	; () banked
 24429  005382  6F7E               	movwf	StringContains@That& (0+255),b
 24430  005384  0EFF               	movlw	high STR_5
 24431  005386  0100               	movlb	0	; () banked
 24432  005388  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24433  00538A  EC71  F041         	call	_StringContains	;wreg free
 24434  00538E  0900               	iorlw	0
 24435  005390  A4D8               	btfss	status,2,c
 24436  005392  D004               	goto	l14183
 24437                           
 24438                           ;Bluetooth.c: 214: {
 24439                           ;Bluetooth.c: 215: ok = 0;
 24440  005394  0E00               	movlw	0
 24441  005396  0101               	movlb	1	; () banked
 24442  005398  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24443                           
 24444                           ; BSR set to: 1
 24445  00539A  D000               	goto	l14183
 24446  00539C                     l14183:
 24447                           
 24448                           ;Bluetooth.c: 216: }
 24449                           ;Bluetooth.c: 217: }
 24450                           ;Bluetooth.c: 218: cleanBuffer(CommandString,CommandStringPos);
 24451  00539C  0E00               	movlw	low _CommandString
 24452  00539E  0100               	movlb	0	; () banked
 24453  0053A0  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24454  0053A2  0E05               	movlw	high _CommandString
 24455  0053A4  0100               	movlb	0	; () banked
 24456  0053A6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24457  0053A8  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24458  0053AC  0100               	movlb	0	; () banked
 24459  0053AE  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24460  0053B0  ECDB  F046         	call	_cleanBuffer	;wreg free
 24461                           
 24462                           ;Bluetooth.c: 219: CommandStringPos = 0;
 24463  0053B4  0E00               	movlw	0
 24464  0053B6  6E27               	movwf	_CommandStringPos,c
 24465                           
 24466                           ;Bluetooth.c: 221: if(ok)
 24467  0053B8  0101               	movlb	1	; () banked
 24468  0053BA  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24469  0053BC  0101               	movlb	1	; () banked
 24470  0053BE  B4D8               	btfsc	status,2,c
 24471  0053C0  D028               	goto	l14197
 24472                           
 24473                           ; BSR set to: 1
 24474                           ;Bluetooth.c: 222: {
 24475                           ;Bluetooth.c: 223: UARTstring((unsigned char *)"S~,0\r");
 24476  0053C2  0EBA               	movlw	low STR_12
 24477  0053C4  0100               	movlb	0	; () banked
 24478  0053C6  6F7D               	movwf	UARTstring@data& (0+255),b
 24479  0053C8  0EFF               	movlw	high STR_12
 24480  0053CA  0100               	movlb	0	; () banked
 24481  0053CC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24482  0053CE  EC08  F047         	call	_UARTstring	;wreg free
 24483                           
 24484                           ;Bluetooth.c: 224: delayUS(50000);
 24485  0053D2  0E50               	movlw	80
 24486  0053D4  0100               	movlb	0	; () banked
 24487  0053D6  6F7C               	movwf	delayUS@US& (0+255),b
 24488  0053D8  0EC3               	movlw	195
 24489  0053DA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24490  0053DC  0E00               	movlw	0
 24491  0053DE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24492  0053E0  0E00               	movlw	0
 24493  0053E2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24494  0053E4  EC8C  F047         	call	_delayUS	;wreg free
 24495                           
 24496                           ;Bluetooth.c: 225: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24497  0053E8  0E00               	movlw	low _CommandString
 24498  0053EA  0100               	movlb	0	; () banked
 24499  0053EC  6F7C               	movwf	StringContains@This& (0+255),b
 24500  0053EE  0E05               	movlw	high _CommandString
 24501  0053F0  0100               	movlb	0	; () banked
 24502  0053F2  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24503  0053F4  0EFA               	movlw	low STR_5
 24504  0053F6  0100               	movlb	0	; () banked
 24505  0053F8  6F7E               	movwf	StringContains@That& (0+255),b
 24506  0053FA  0EFF               	movlw	high STR_5
 24507  0053FC  0100               	movlb	0	; () banked
 24508  0053FE  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24509  005400  EC71  F041         	call	_StringContains	;wreg free
 24510  005404  0900               	iorlw	0
 24511  005406  A4D8               	btfss	status,2,c
 24512  005408  D004               	goto	l14197
 24513                           
 24514                           ;Bluetooth.c: 226: {
 24515                           ;Bluetooth.c: 227: ok = 0;
 24516  00540A  0E00               	movlw	0
 24517  00540C  0101               	movlb	1	; () banked
 24518  00540E  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24519                           
 24520                           ; BSR set to: 1
 24521  005410  D000               	goto	l14197
 24522  005412                     l14197:
 24523                           
 24524                           ;Bluetooth.c: 228: }
 24525                           ;Bluetooth.c: 229: }
 24526                           ;Bluetooth.c: 230: cleanBuffer(CommandString,CommandStringPos);
 24527  005412  0E00               	movlw	low _CommandString
 24528  005414  0100               	movlb	0	; () banked
 24529  005416  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24530  005418  0E05               	movlw	high _CommandString
 24531  00541A  0100               	movlb	0	; () banked
 24532  00541C  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24533  00541E  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24534  005422  0100               	movlb	0	; () banked
 24535  005424  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24536  005426  ECDB  F046         	call	_cleanBuffer	;wreg free
 24537                           
 24538                           ;Bluetooth.c: 231: CommandStringPos = 0;
 24539  00542A  0E00               	movlw	0
 24540  00542C  6E27               	movwf	_CommandStringPos,c
 24541                           
 24542                           ;Bluetooth.c: 233: if(ok)
 24543  00542E  0101               	movlb	1	; () banked
 24544  005430  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24545  005432  0101               	movlb	1	; () banked
 24546  005434  B4D8               	btfsc	status,2,c
 24547  005436  D03E               	goto	l14213
 24548                           
 24549                           ; BSR set to: 1
 24550                           ;Bluetooth.c: 234: {
 24551                           ;Bluetooth.c: 235: UARTstring((unsigned char *)"D,0\r");
 24552  005438  0ED7               	movlw	low STR_16
 24553  00543A  0100               	movlb	0	; () banked
 24554  00543C  6F7D               	movwf	UARTstring@data& (0+255),b
 24555  00543E  0EFF               	movlw	high STR_16
 24556  005440  0100               	movlb	0	; () banked
 24557  005442  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24558  005444  EC08  F047         	call	_UARTstring	;wreg free
 24559                           
 24560                           ;Bluetooth.c: 236: delayUS(50000);
 24561  005448  0E50               	movlw	80
 24562  00544A  0100               	movlb	0	; () banked
 24563  00544C  6F7C               	movwf	delayUS@US& (0+255),b
 24564  00544E  0EC3               	movlw	195
 24565  005450  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24566  005452  0E00               	movlw	0
 24567  005454  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24568  005456  0E00               	movlw	0
 24569  005458  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24570  00545A  EC8C  F047         	call	_delayUS	;wreg free
 24571                           
 24572                           ;Bluetooth.c: 237: sprintf(buf,"BTName=Home Automation %ld\r",SN);
 24573  00545E  0E2E               	movlw	low BluetoothInitialSetup@buf
 24574  005460  0100               	movlb	0	; () banked
 24575  005462  6FCA               	movwf	sprintf@sp& (0+255),b
 24576  005464  0E01               	movlw	high BluetoothInitialSetup@buf
 24577  005466  0100               	movlb	0	; () banked
 24578  005468  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 24579  00546A  0E7A               	movlw	low STR_17
 24580  00546C  0100               	movlb	0	; () banked
 24581  00546E  6FCC               	movwf	sprintf@f& (0+255),b
 24582  005470  0EFB               	movlw	high STR_17
 24583  005472  0100               	movlb	0	; () banked
 24584  005474  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 24585  005476  C03C  F0CE         	movff	_SN,?_sprintf+4
 24586  00547A  C03D  F0CF         	movff	_SN+1,?_sprintf+5
 24587  00547E  C03E  F0D0         	movff	_SN+2,?_sprintf+6
 24588  005482  C03F  F0D1         	movff	_SN+3,?_sprintf+7
 24589  005486  ECEF  F010         	call	_sprintf	;wreg free
 24590                           
 24591                           ;Bluetooth.c: 238: if(!StringContains(CommandString, buf))
 24592  00548A  0E00               	movlw	low _CommandString
 24593  00548C  0100               	movlb	0	; () banked
 24594  00548E  6F7C               	movwf	StringContains@This& (0+255),b
 24595  005490  0E05               	movlw	high _CommandString
 24596  005492  0100               	movlb	0	; () banked
 24597  005494  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24598  005496  0E2E               	movlw	low BluetoothInitialSetup@buf
 24599  005498  0100               	movlb	0	; () banked
 24600  00549A  6F7E               	movwf	StringContains@That& (0+255),b
 24601  00549C  0E01               	movlw	high BluetoothInitialSetup@buf
 24602  00549E  0100               	movlb	0	; () banked
 24603  0054A0  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24604  0054A2  EC71  F041         	call	_StringContains	;wreg free
 24605  0054A6  0900               	iorlw	0
 24606  0054A8  A4D8               	btfss	status,2,c
 24607  0054AA  D004               	goto	l14213
 24608                           
 24609                           ;Bluetooth.c: 239: {
 24610                           ;Bluetooth.c: 240: ok = 0;
 24611  0054AC  0E00               	movlw	0
 24612  0054AE  0101               	movlb	1	; () banked
 24613  0054B0  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24614                           
 24615                           ; BSR set to: 1
 24616  0054B2  D000               	goto	l14213
 24617  0054B4                     l14213:
 24618                           
 24619                           ;Bluetooth.c: 241: }
 24620                           ;Bluetooth.c: 242: }
 24621                           ;Bluetooth.c: 243: cleanBuffer(CommandString,CommandStringPos);
 24622  0054B4  0E00               	movlw	low _CommandString
 24623  0054B6  0100               	movlb	0	; () banked
 24624  0054B8  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24625  0054BA  0E05               	movlw	high _CommandString
 24626  0054BC  0100               	movlb	0	; () banked
 24627  0054BE  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24628  0054C0  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24629  0054C4  0100               	movlb	0	; () banked
 24630  0054C6  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24631  0054C8  ECDB  F046         	call	_cleanBuffer	;wreg free
 24632                           
 24633                           ;Bluetooth.c: 244: CommandStringPos = 0;
 24634  0054CC  0E00               	movlw	0
 24635  0054CE  6E27               	movwf	_CommandStringPos,c
 24636                           
 24637                           ;Bluetooth.c: 246: UARTstring((unsigned char *)"---\r");
 24638  0054D0  0ED2               	movlw	low STR_18
 24639  0054D2  0100               	movlb	0	; () banked
 24640  0054D4  6F7D               	movwf	UARTstring@data& (0+255),b
 24641  0054D6  0EFF               	movlw	high STR_18
 24642  0054D8  0100               	movlb	0	; () banked
 24643  0054DA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24644  0054DC  EC08  F047         	call	_UARTstring	;wreg free
 24645                           
 24646                           ;Bluetooth.c: 247: delayUS(50000);
 24647  0054E0  0E50               	movlw	80
 24648  0054E2  0100               	movlb	0	; () banked
 24649  0054E4  6F7C               	movwf	delayUS@US& (0+255),b
 24650  0054E6  0EC3               	movlw	195
 24651  0054E8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24652  0054EA  0E00               	movlw	0
 24653  0054EC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24654  0054EE  0E00               	movlw	0
 24655  0054F0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24656  0054F2  EC8C  F047         	call	_delayUS	;wreg free
 24657                           
 24658                           ;Bluetooth.c: 248: if(!StringContains(CommandString,(unsigned char *)"END"))
 24659  0054F6  0E00               	movlw	low _CommandString
 24660  0054F8  0100               	movlb	0	; () banked
 24661  0054FA  6F7C               	movwf	StringContains@This& (0+255),b
 24662  0054FC  0E05               	movlw	high _CommandString
 24663  0054FE  0100               	movlb	0	; () banked
 24664  005500  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24665  005502  0EF6               	movlw	low STR_19
 24666  005504  0100               	movlb	0	; () banked
 24667  005506  6F7E               	movwf	StringContains@That& (0+255),b
 24668  005508  0EFF               	movlw	high STR_19
 24669  00550A  0100               	movlb	0	; () banked
 24670  00550C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24671  00550E  EC71  F041         	call	_StringContains	;wreg free
 24672  005512  0900               	iorlw	0
 24673  005514  A4D8               	btfss	status,2,c
 24674  005516  D004               	goto	l14225
 24675                           
 24676                           ;Bluetooth.c: 249: {
 24677                           ;Bluetooth.c: 250: ok = 0;
 24678  005518  0E00               	movlw	0
 24679  00551A  0101               	movlb	1	; () banked
 24680  00551C  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24681  00551E  D000               	goto	l14225
 24682  005520                     l14225:
 24683                           
 24684                           ;Bluetooth.c: 251: }
 24685                           ;Bluetooth.c: 252: cleanBuffer(CommandString,CommandStringPos);
 24686  005520  0E00               	movlw	low _CommandString
 24687  005522  0100               	movlb	0	; () banked
 24688  005524  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24689  005526  0E05               	movlw	high _CommandString
 24690  005528  0100               	movlb	0	; () banked
 24691  00552A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24692  00552C  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24693  005530  0100               	movlb	0	; () banked
 24694  005532  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24695  005534  ECDB  F046         	call	_cleanBuffer	;wreg free
 24696                           
 24697                           ;Bluetooth.c: 253: CommandStringPos = 0;
 24698  005538  0E00               	movlw	0
 24699  00553A  6E27               	movwf	_CommandStringPos,c
 24700                           
 24701                           ;Bluetooth.c: 256: {
 24702                           ;Bluetooth.c: 257: return 1;
 24703                           ;	Return value of _BluetoothInitialSetup is never used
 24704  00553C  0012               	return	
 24705                           
 24706                           ;Bluetooth.c: 258: }
 24707                           ;Bluetooth.c: 259: return 0;
 24708                           ;	Return value of _BluetoothInitialSetup is never used
 24709  00553E  0012               	return		;funcret
 24710  005540                     __end_of_BluetoothInitialSetup:
 24711                           	opt stack 0
 24712                           tblptru	equ	0xFF8
 24713                           tblptrh	equ	0xFF7
 24714                           tblptrl	equ	0xFF6
 24715                           tablat	equ	0xFF5
 24716                           prodh	equ	0xFF4
 24717                           prodl	equ	0xFF3
 24718                           intcon	equ	0xFF2
 24719                           intcon2	equ	0xFF1
 24720                           indf0	equ	0xFEF
 24721                           postinc0	equ	0xFEE
 24722                           fsr0h	equ	0xFEA
 24723                           fsr0l	equ	0xFE9
 24724                           wreg	equ	0xFE8
 24725                           indf1	equ	0xFE7
 24726                           postdec1	equ	0xFE5
 24727                           fsr1h	equ	0xFE2
 24728                           fsr1l	equ	0xFE1
 24729                           indf2	equ	0xFDF
 24730                           postinc2	equ	0xFDE
 24731                           postdec2	equ	0xFDD
 24732                           fsr2h	equ	0xFDA
 24733                           fsr2l	equ	0xFD9
 24734                           status	equ	0xFD8
 24735                           
 24736 ;; *************** function _sprintf *****************
 24737 ;; Defined at:
 24738 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 24739 ;; Parameters:    Size  Location     Type
 24740 ;;  sp              2  106[BANK0 ] PTR unsigned char 
 24741 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), 
 24742 ;;  f               2  108[BANK0 ] PTR const unsigned char 
 24743 ;;		 -> STR_106(19), STR_104(15), STR_89(27), STR_88(16), 
 24744 ;;		 -> STR_87(29), STR_86(21), STR_84(20), STR_76(44), 
 24745 ;;		 -> STR_75(54), STR_74(54), STR_73(63), STR_51(44), 
 24746 ;;		 -> STR_50(46), STR_48(44), STR_47(21), STR_33(17), 
 24747 ;;		 -> STR_32(17), STR_31(20), STR_29(23), STR_28(21), 
 24748 ;;		 -> STR_27(21), STR_17(28), STR_4(24), 
 24749 ;; Auto vars:     Size  Location     Type
 24750 ;;  idx             1    9[BANK1 ] unsigned char 
 24751 ;;  val             4   24[BANK1 ] unsigned long 
 24752 ;;  tmpval          4   18[BANK1 ] struct .
 24753 ;;  fval            3   28[BANK1 ] struct .
 24754 ;;  flag            2   33[BANK1 ] unsigned short 
 24755 ;;  width           2   31[BANK1 ] int 
 24756 ;;  exp             2   22[BANK1 ] int 
 24757 ;;  prec            2   16[BANK1 ] int 
 24758 ;;  ap              2   14[BANK1 ] PTR void [1]
 24759 ;;		 -> ?_sprintf(2), 
 24760 ;;  len             2   12[BANK1 ] unsigned int 
 24761 ;;  cp              2   10[BANK1 ] PTR const unsigned char 
 24762 ;;		 -> STR_151(7), sprintf@c(1), Frequency(4), PCBVersion(5), 
 24763 ;;		 -> FirmVersion(9), GetNumber@temp(4), 
 24764 ;;  c               1   35[BANK1 ] char 
 24765 ;;  d               1    0        unsigned char 
 24766 ;; Return value:  Size  Location     Type
 24767 ;;                  2  106[BANK0 ] int 
 24768 ;; Registers used:
 24769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24770 ;; Tracked objects:
 24771 ;;		On entry : 0/0
 24772 ;;		On exit  : 0/0
 24773 ;;		Unchanged: 0/0
 24774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24775 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24776 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24777 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24778 ;;      Totals:         0      14      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24779 ;;Total ram usage:       50 bytes
 24780 ;; Hardware stack levels used:    1
 24781 ;; Hardware stack levels required when called:    9
 24782 ;; This function calls:
 24783 ;;		___awdiv
 24784 ;;		___ftadd
 24785 ;;		___ftge
 24786 ;;		___ftmul
 24787 ;;		___ftneg
 24788 ;;		___ftsub
 24789 ;;		___fttol
 24790 ;;		___lldiv
 24791 ;;		___llmod
 24792 ;;		___lltoft
 24793 ;;		___wmul
 24794 ;;		__div_to_l_
 24795 ;;		__tdiv_to_l_
 24796 ;;		_fround
 24797 ;;		_isdigit
 24798 ;;		_scale
 24799 ;; This function is called by:
 24800 ;;		_BluetoothInitialSetup
 24801 ;;		_UseBluetooth
 24802 ;; This function uses a non-reentrant model
 24803 ;;
 24804                           
 24805                           	psect	text59
 24806  0021DE                     __ptext59:
 24807                           	opt stack 0
 24808  0021DE                     _sprintf:
 24809                           	opt stack 20
 24810                           
 24811                           ;doprnt.c: 494: va_list ap;
 24812                           ;doprnt.c: 499: signed char c;
 24813                           ;doprnt.c: 501: int width;
 24814                           ;doprnt.c: 504: int prec;
 24815                           ;doprnt.c: 508: unsigned short flag;
 24816                           ;doprnt.c: 515: char d;
 24817                           ;doprnt.c: 516: double fval;
 24818                           ;doprnt.c: 517: int exp;
 24819                           ;doprnt.c: 523: union {
 24820                           ;doprnt.c: 524: unsigned long vd;
 24821                           ;doprnt.c: 525: double integ;
 24822                           ;doprnt.c: 526: } tmpval;
 24823                           ;doprnt.c: 528: unsigned long val;
 24824                           ;doprnt.c: 529: unsigned len;
 24825                           ;doprnt.c: 530: const char * cp;
 24826                           ;doprnt.c: 533: *ap = __va_start();
 24827                           
 24828                           ;incstack = 0
 24829  0021DE  0ECE               	movlw	low (?_sprintf+4)
 24830  0021E0  0101               	movlb	1	; () banked
 24831  0021E2  6F0E               	movwf	sprintf@ap& (0+255),b
 24832  0021E4  0E00               	movlw	high (?_sprintf+4)
 24833  0021E6  0101               	movlb	1	; () banked
 24834  0021E8  6F0F               	movwf	(sprintf@ap+1)& (0+255),b
 24835                           
 24836                           ;doprnt.c: 536: while(c = *f++) {
 24837  0021EA  EF77  F018         	goto	l13735
 24838  0021EE                     l13363:
 24839                           
 24840                           ; BSR set to: 1
 24841                           ;doprnt.c: 538: if(c != '%')
 24842  0021EE  0E25               	movlw	37
 24843  0021F0  0101               	movlb	1	; () banked
 24844  0021F2  1923               	xorwf	sprintf@c& (0+255),w,b
 24845  0021F4  B4D8               	btfsc	status,2,c
 24846  0021F6  D00B               	goto	l13369
 24847                           
 24848                           ; BSR set to: 1
 24849                           ;doprnt.c: 540: {
 24850                           ;doprnt.c: 541: ((*sp++ = (c)));
 24851  0021F8  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 24852  0021FC  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 24853  002200  C123  FFDF         	movff	sprintf@c,indf2
 24854                           
 24855                           ; BSR set to: 1
 24856  002204  0100               	movlb	0	; () banked
 24857  002206  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 24858  002208  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 24859                           
 24860                           ;doprnt.c: 542: continue;
 24861  00220A  EF77  F018         	goto	l13735
 24862  00220E                     l13369:
 24863                           
 24864                           ;doprnt.c: 543: }
 24865                           ;doprnt.c: 546: width = 0;
 24866  00220E  0E00               	movlw	0
 24867  002210  0101               	movlb	1	; () banked
 24868  002212  6F20               	movwf	(sprintf@width+1)& (0+255),b
 24869  002214  0E00               	movlw	0
 24870  002216  6F1F               	movwf	sprintf@width& (0+255),b
 24871                           
 24872                           ;doprnt.c: 548: flag = 0;
 24873  002218  0E00               	movlw	0
 24874  00221A  0101               	movlb	1	; () banked
 24875  00221C  6F22               	movwf	(sprintf@flag+1)& (0+255),b
 24876  00221E  0E00               	movlw	0
 24877  002220  6F21               	movwf	sprintf@flag& (0+255),b
 24878                           
 24879                           ; BSR set to: 1
 24880                           ;doprnt.c: 551: switch(*f) {
 24881                           
 24882                           ;doprnt.c: 550: for(;;) {
 24883  002222  D007               	goto	l13375
 24884  002224                     l13371:
 24885                           
 24886                           ;doprnt.c: 580: flag |= 0x04;
 24887  002224  0101               	movlb	1	; () banked
 24888  002226  8521               	bsf	sprintf@flag& (0+255),2,b
 24889                           
 24890                           ;doprnt.c: 581: f++;
 24891  002228  0100               	movlb	0	; () banked
 24892  00222A  4BCC               	infsnz	sprintf@f& (0+255),f,b
 24893  00222C  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 24894                           
 24895                           ;doprnt.c: 582: continue;
 24896  00222E  D001               	goto	l13375
 24897                           
 24898                           ; BSR set to: 0
 24899                           ;doprnt.c: 584: }
 24900  002230  D00C               	goto	l13377
 24901  002232                     l13375:
 24902  002232  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24903  002236  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24904  00223A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24905  00223A  6AF8               	clrf	tblptru,c
 24906  00223C                     	endif
 24907  00223C                     	if	0	;tblptru may be non-zero
 24908  00223C                     	endif
 24909  00223C  0008               	tblrd		*
 24910  00223E  50F5               	movf	tablat,w,c
 24911                           
 24912                           ; Switch size 1, requested type "space"
 24913                           ; Number of cases is 1, Range of values is 48 to 48
 24914                           ; switch strategies available:
 24915                           ; Name         Instructions Cycles
 24916                           ; simple_byte            4     3 (average)
 24917                           ;	Chosen strategy is simple_byte
 24918  002240  0A30               	xorlw	48	; case 48
 24919  002242  B4D8               	btfsc	status,2,c
 24920  002244  D7EF               	goto	l13371
 24921                           
 24922                           ;doprnt.c: 585: break;
 24923  002246  D001               	goto	l13377
 24924                           
 24925                           ;doprnt.c: 586: }
 24926  002248  D7F4               	goto	l13375
 24927  00224A                     l13377:
 24928                           
 24929                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 24930  00224A  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24931  00224E  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24932  002252                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24933  002252  6AF8               	clrf	tblptru,c
 24934  002254                     	endif
 24935  002254                     	if	0	;tblptru may be non-zero
 24936  002254                     	endif
 24937  002254  0008               	tblrd		*
 24938  002256  50F5               	movf	tablat,w,c
 24939  002258  EC79  F049         	call	_isdigit
 24940  00225C  A0D8               	btfss	status,0,c
 24941  00225E  D10D               	goto	l13439
 24942                           
 24943                           ;doprnt.c: 598: width = 0;
 24944  002260  0E00               	movlw	0
 24945  002262  0101               	movlb	1	; () banked
 24946  002264  6F20               	movwf	(sprintf@width+1)& (0+255),b
 24947  002266  0E00               	movlw	0
 24948  002268  6F1F               	movwf	sprintf@width& (0+255),b
 24949  00226A  D000               	goto	l13381
 24950  00226C                     l13381:
 24951                           
 24952                           ;doprnt.c: 600: width *= 10;
 24953  00226C  C11F  F08A         	movff	sprintf@width,___wmul@multiplier
 24954  002270  C120  F08B         	movff	sprintf@width+1,___wmul@multiplier+1
 24955  002274  0E00               	movlw	0
 24956  002276  0100               	movlb	0	; () banked
 24957  002278  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24958  00227A  0E0A               	movlw	10
 24959  00227C  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 24960  00227E  EC11  F049         	call	___wmul	;wreg free
 24961  002282  C08A  F11F         	movff	?___wmul,sprintf@width
 24962  002286  C08B  F120         	movff	?___wmul+1,sprintf@width+1
 24963                           
 24964                           ;doprnt.c: 601: width += *f++ - '0';
 24965  00228A  0ED0               	movlw	208
 24966  00228C  0101               	movlb	1	; () banked
 24967  00228E  6F00               	movwf	??_sprintf& (0+255),b
 24968  002290  0EFF               	movlw	255
 24969  002292  0101               	movlb	1	; () banked
 24970  002294  6F01               	movwf	(??_sprintf+1)& (0+255),b
 24971  002296  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24972  00229A  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24973  00229E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24974  00229E  6AF8               	clrf	tblptru,c
 24975  0022A0                     	endif
 24976  0022A0                     	if	0	;tblptru may be non-zero
 24977  0022A0                     	endif
 24978  0022A0  0008               	tblrd		*
 24979  0022A2  50F5               	movf	tablat,w,c
 24980  0022A4  0101               	movlb	1	; () banked
 24981  0022A6  6F02               	movwf	(??_sprintf+2)& (0+255),b
 24982  0022A8  6B03               	clrf	(??_sprintf+3)& (0+255),b
 24983  0022AA  0101               	movlb	1	; () banked
 24984  0022AC  5100               	movf	??_sprintf& (0+255),w,b
 24985  0022AE  0101               	movlb	1	; () banked
 24986  0022B0  2702               	addwf	(??_sprintf+2)& (0+255),f,b
 24987  0022B2  0101               	movlb	1	; () banked
 24988  0022B4  5101               	movf	(??_sprintf+1)& (0+255),w,b
 24989  0022B6  0101               	movlb	1	; () banked
 24990  0022B8  2303               	addwfc	(??_sprintf+3)& (0+255),f,b
 24991  0022BA  0101               	movlb	1	; () banked
 24992  0022BC  5102               	movf	(??_sprintf+2)& (0+255),w,b
 24993  0022BE  0101               	movlb	1	; () banked
 24994  0022C0  271F               	addwf	sprintf@width& (0+255),f,b
 24995  0022C2  0101               	movlb	1	; () banked
 24996  0022C4  5103               	movf	(??_sprintf+3)& (0+255),w,b
 24997  0022C6  0101               	movlb	1	; () banked
 24998  0022C8  2320               	addwfc	(sprintf@width+1)& (0+255),f,b
 24999                           
 25000                           ; BSR set to: 1
 25001  0022CA  0100               	movlb	0	; () banked
 25002  0022CC  4BCC               	infsnz	sprintf@f& (0+255),f,b
 25003  0022CE  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 25004                           
 25005                           ; BSR set to: 0
 25006                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 25007  0022D0  C0CC  FFF6         	movff	sprintf@f,tblptrl
 25008  0022D4  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 25009  0022D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25010  0022D8  6AF8               	clrf	tblptru,c
 25011  0022DA                     	endif
 25012  0022DA                     	if	0	;tblptru may be non-zero
 25013  0022DA                     	endif
 25014  0022DA  0008               	tblrd		*
 25015  0022DC  50F5               	movf	tablat,w,c
 25016  0022DE  EC79  F049         	call	_isdigit
 25017  0022E2  A0D8               	btfss	status,0,c
 25018  0022E4  D0CA               	goto	l13439
 25019  0022E6  D7C2               	goto	l13381
 25020                           
 25021                           ;doprnt.c: 635: switch(c = *f++) {
 25022                           
 25023                           ;doprnt.c: 608: }
 25024                           ;doprnt.c: 633: loop:
 25025  0022E8  D0C8               	goto	l13439
 25026                           
 25027                           ;doprnt.c: 638: goto alldone;
 25028                           
 25029                           ;doprnt.c: 637: case 0:
 25030  0022EA  EF89  F018         	goto	l13737
 25031  0022EE                     l13389:
 25032                           
 25033                           ;doprnt.c: 643: flag |= 0x10;
 25034  0022EE  0101               	movlb	1	; () banked
 25035  0022F0  8921               	bsf	sprintf@flag& (0+255),4,b
 25036                           
 25037                           ;doprnt.c: 644: goto loop;
 25038  0022F2  D0C3               	goto	l13439
 25039  0022F4                     l13391:
 25040                           
 25041                           ; BSR set to: 1
 25042                           ;doprnt.c: 663: flag |= 0x400;
 25043  0022F4  0101               	movlb	1	; () banked
 25044  0022F6  8522               	bsf	(sprintf@flag+1)& (0+255),2,b
 25045                           
 25046                           ; BSR set to: 1
 25047                           ;doprnt.c: 698: case 'i':
 25048                           ;doprnt.c: 699: break;
 25049                           
 25050                           ; BSR set to: 1
 25051                           
 25052                           ;doprnt.c: 697: case 'd':
 25053                           
 25054                           ;doprnt.c: 664: break;
 25055  0022F8  D0EA               	goto	l13441
 25056                           
 25057                           ; BSR set to: 1
 25058                           
 25059                           ;doprnt.c: 712: case 'X':
 25060  0022FA  D000               	goto	l13393
 25061  0022FC                     l13393:
 25062                           
 25063                           ; BSR set to: 1
 25064                           ;doprnt.c: 718: case 'x':
 25065                           ;doprnt.c: 721: flag |= 0x80;
 25066  0022FC  0101               	movlb	1	; () banked
 25067  0022FE  8F21               	bsf	sprintf@flag& (0+255),7,b
 25068                           
 25069                           ;doprnt.c: 723: break;
 25070  002300  D0E6               	goto	l13441
 25071  002302                     l13395:
 25072                           
 25073                           ; BSR set to: 1
 25074                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 25075  002302  C10E  FFD9         	movff	sprintf@ap,fsr2l
 25076  002306  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 25077  00230A  CFDE F10A          	movff	postinc2,sprintf@cp
 25078  00230E  CFDD F10B          	movff	postdec2,sprintf@cp+1
 25079                           
 25080                           ; BSR set to: 1
 25081  002312  0E02               	movlw	2
 25082  002314  0101               	movlb	1	; () banked
 25083  002316  270E               	addwf	sprintf@ap& (0+255),f,b
 25084  002318  0E00               	movlw	0
 25085  00231A  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25086                           
 25087                           ; BSR set to: 1
 25088                           ;doprnt.c: 740: if(!cp)
 25089  00231C  0101               	movlb	1	; () banked
 25090  00231E  510A               	movf	sprintf@cp& (0+255),w,b
 25091  002320  0101               	movlb	1	; () banked
 25092  002322  110B               	iorwf	(sprintf@cp+1)& (0+255),w,b
 25093  002324  A4D8               	btfss	status,2,c
 25094  002326  D007               	goto	l13403
 25095                           
 25096                           ; BSR set to: 1
 25097                           ;doprnt.c: 741: cp = "(null)";
 25098  002328  0EA5               	movlw	low STR_151
 25099  00232A  0101               	movlb	1	; () banked
 25100  00232C  6F0A               	movwf	sprintf@cp& (0+255),b
 25101  00232E  0EFF               	movlw	high STR_151
 25102  002330  0101               	movlb	1	; () banked
 25103  002332  6F0B               	movwf	(sprintf@cp+1)& (0+255),b
 25104  002334  D000               	goto	l13403
 25105  002336                     l13403:
 25106                           
 25107                           ; BSR set to: 1
 25108                           ;doprnt.c: 745: len = 0;
 25109  002336  0E00               	movlw	0
 25110  002338  0101               	movlb	1	; () banked
 25111  00233A  6F0D               	movwf	(sprintf@len+1)& (0+255),b
 25112  00233C  0E00               	movlw	0
 25113  00233E  6F0C               	movwf	sprintf@len& (0+255),b
 25114                           
 25115                           ;doprnt.c: 746: while(cp[len])
 25116  002340  D004               	goto	l13407
 25117  002342                     l13405:
 25118                           
 25119                           ;doprnt.c: 747: len++;
 25120  002342  0101               	movlb	1	; () banked
 25121  002344  4B0C               	infsnz	sprintf@len& (0+255),f,b
 25122  002346  2B0D               	incf	(sprintf@len+1)& (0+255),f,b
 25123  002348  D000               	goto	l13407
 25124  00234A                     l13407:
 25125                           
 25126                           ; BSR set to: 1
 25127  00234A  0101               	movlb	1	; () banked
 25128  00234C  510C               	movf	sprintf@len& (0+255),w,b
 25129  00234E  0101               	movlb	1	; () banked
 25130  002350  250A               	addwf	sprintf@cp& (0+255),w,b
 25131  002352  0101               	movlb	1	; () banked
 25132  002354  6F00               	movwf	??_sprintf& (0+255),b
 25133  002356  0101               	movlb	1	; () banked
 25134  002358  510D               	movf	(sprintf@len+1)& (0+255),w,b
 25135  00235A  0101               	movlb	1	; () banked
 25136  00235C  210B               	addwfc	(sprintf@cp+1)& (0+255),w,b
 25137  00235E  0101               	movlb	1	; () banked
 25138  002360  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25139  002362  C100  FFF6         	movff	??_sprintf,tblptrl
 25140  002366  C101  FFF7         	movff	??_sprintf+1,tblptrh
 25141  00236A  0E00               	movlw	low (__mediumconst shr (0+16))
 25142  00236C  6EF8               	movwf	tblptru,c
 25143  00236E  0E0F               	movlw	(high __ramtop+-1)
 25144  002370  64F7               	cpfsgt	tblptrh,c
 25145  002372  D003               	bra	u16257
 25146  002374  0008               	tblrd		*
 25147  002376  50F5               	movf	tablat,w,c
 25148  002378  D005               	bra	u16250
 25149  00237A                     u16257:
 25150  00237A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25151  00237E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25152  002382  50EF               	movf	indf0,w,c
 25153  002384                     u16250:
 25154  002384  0900               	iorlw	0
 25155  002386  B4D8               	btfsc	status,2,c
 25156  002388  D002               	goto	l13409
 25157  00238A  D7DB               	goto	l13405
 25158  00238C  D000               	goto	l13409
 25159  00238E                     l13409:
 25160                           
 25161                           ;doprnt.c: 757: if(width > len)
 25162  00238E  0101               	movlb	1	; () banked
 25163  002390  511F               	movf	sprintf@width& (0+255),w,b
 25164  002392  0101               	movlb	1	; () banked
 25165  002394  5D0C               	subwf	sprintf@len& (0+255),w,b
 25166  002396  0101               	movlb	1	; () banked
 25167  002398  5120               	movf	(sprintf@width+1)& (0+255),w,b
 25168  00239A  0101               	movlb	1	; () banked
 25169  00239C  590D               	subwfb	(sprintf@len+1)& (0+255),w,b
 25170  00239E  B0D8               	btfsc	status,0,c
 25171  0023A0  D009               	goto	l13413
 25172                           
 25173                           ; BSR set to: 1
 25174                           ;doprnt.c: 758: width -= len;
 25175  0023A2  0101               	movlb	1	; () banked
 25176  0023A4  510C               	movf	sprintf@len& (0+255),w,b
 25177  0023A6  0101               	movlb	1	; () banked
 25178  0023A8  5F1F               	subwf	sprintf@width& (0+255),f,b
 25179  0023AA  0101               	movlb	1	; () banked
 25180  0023AC  510D               	movf	(sprintf@len+1)& (0+255),w,b
 25181  0023AE  0101               	movlb	1	; () banked
 25182  0023B0  5B20               	subwfb	(sprintf@width+1)& (0+255),f,b
 25183  0023B2  D010               	goto	l13419
 25184  0023B4                     l13413:
 25185                           
 25186                           ; BSR set to: 1
 25187                           ;doprnt.c: 759: else
 25188                           ;doprnt.c: 760: width = 0;
 25189  0023B4  0E00               	movlw	0
 25190  0023B6  0101               	movlb	1	; () banked
 25191  0023B8  6F20               	movwf	(sprintf@width+1)& (0+255),b
 25192  0023BA  0E00               	movlw	0
 25193  0023BC  6F1F               	movwf	sprintf@width& (0+255),b
 25194                           
 25195                           ; BSR set to: 1
 25196                           ;doprnt.c: 764: while(width--)
 25197  0023BE  D00A               	goto	l13419
 25198  0023C0                     l13415:
 25199                           
 25200                           ; BSR set to: 1
 25201                           ;doprnt.c: 765: ((*sp++ = (' ')));
 25202  0023C0  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25203  0023C4  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25204  0023C8  0E20               	movlw	32
 25205  0023CA  6EDF               	movwf	indf2,c
 25206                           
 25207                           ; BSR set to: 1
 25208  0023CC  0100               	movlb	0	; () banked
 25209  0023CE  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 25210  0023D0  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 25211  0023D2  D000               	goto	l13419
 25212  0023D4                     l13419:
 25213  0023D4  0101               	movlb	1	; () banked
 25214  0023D6  071F               	decf	sprintf@width& (0+255),f,b
 25215  0023D8  A0D8               	btfss	status,0,c
 25216  0023DA  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25217  0023DC  0101               	movlb	1	; () banked
 25218  0023DE  291F               	incf	sprintf@width& (0+255),w,b
 25219  0023E0  E1EF               	bnz	l13415
 25220  0023E2  0101               	movlb	1	; () banked
 25221  0023E4  2920               	incf	(sprintf@width+1)& (0+255),w,b
 25222  0023E6  B4D8               	btfsc	status,2,c
 25223  0023E8  D01F               	goto	l13427
 25224  0023EA  D7EA               	goto	l13415
 25225                           
 25226                           ; BSR set to: 1
 25227                           ;doprnt.c: 767: while(len--)
 25228  0023EC  D01D               	goto	l13427
 25229  0023EE                     l13421:
 25230                           
 25231                           ; BSR set to: 1
 25232                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 25233  0023EE  C10A  FFF6         	movff	sprintf@cp,tblptrl
 25234  0023F2  C10B  FFF7         	movff	sprintf@cp+1,tblptrh
 25235  0023F6  0E00               	movlw	low (__mediumconst shr (0+16))
 25236  0023F8  6EF8               	movwf	tblptru,c
 25237  0023FA  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25238  0023FE  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25239  002402  0E0F               	movlw	(high __ramtop+-1)
 25240  002404  64F7               	cpfsgt	tblptrh,c
 25241  002406  D003               	bra	u16297
 25242  002408  0008               	tblrd		*
 25243  00240A  50F5               	movf	tablat,w,c
 25244  00240C  D005               	bra	u16290
 25245  00240E                     u16297:
 25246  00240E  CFF6 FFE9          	movff	tblptrl,fsr0l
 25247  002412  CFF7 FFEA          	movff	tblptrh,fsr0h
 25248  002416  50EF               	movf	indf0,w,c
 25249  002418                     u16290:
 25250  002418  6EDF               	movwf	indf2,c
 25251  00241A  0101               	movlb	1	; () banked
 25252  00241C  4B0A               	infsnz	sprintf@cp& (0+255),f,b
 25253  00241E  2B0B               	incf	(sprintf@cp+1)& (0+255),f,b
 25254                           
 25255                           ; BSR set to: 1
 25256  002420  0100               	movlb	0	; () banked
 25257  002422  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 25258  002424  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 25259  002426  D000               	goto	l13427
 25260  002428                     l13427:
 25261  002428  0101               	movlb	1	; () banked
 25262  00242A  070C               	decf	sprintf@len& (0+255),f,b
 25263  00242C  A0D8               	btfss	status,0,c
 25264  00242E  070D               	decf	(sprintf@len+1)& (0+255),f,b
 25265  002430  0101               	movlb	1	; () banked
 25266  002432  290C               	incf	sprintf@len& (0+255),w,b
 25267  002434  E1DC               	bnz	l13421
 25268  002436  0101               	movlb	1	; () banked
 25269  002438  290D               	incf	(sprintf@len+1)& (0+255),w,b
 25270  00243A  B4D8               	btfsc	status,2,c
 25271  00243C  EF77  F018         	goto	l13735
 25272  002440  D7D6               	goto	l13421
 25273                           
 25274                           ; BSR set to: 1
 25275                           ;doprnt.c: 774: continue;
 25276  002442  EF77  F018         	goto	l13735
 25277  002446                     l13429:
 25278                           
 25279                           ; BSR set to: 1
 25280                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 25281  002446  C10E  FFD9         	movff	sprintf@ap,fsr2l
 25282  00244A  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 25283  00244E  50DF               	movf	indf2,w,c
 25284  002450  0101               	movlb	1	; () banked
 25285  002452  6F23               	movwf	sprintf@c& (0+255),b
 25286                           
 25287                           ; BSR set to: 1
 25288  002454  0E02               	movlw	2
 25289  002456  0101               	movlb	1	; () banked
 25290  002458  270E               	addwf	sprintf@ap& (0+255),f,b
 25291  00245A  0E00               	movlw	0
 25292  00245C  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25293  00245E  D000               	goto	l13433
 25294  002460                     l13433:
 25295                           
 25296                           ; BSR set to: 1
 25297                           ;doprnt.c: 805: cp = (char *)&c;
 25298  002460  0E23               	movlw	low sprintf@c
 25299  002462  0101               	movlb	1	; () banked
 25300  002464  6F0A               	movwf	sprintf@cp& (0+255),b
 25301  002466  0E01               	movlw	high sprintf@c
 25302  002468  0101               	movlb	1	; () banked
 25303  00246A  6F0B               	movwf	(sprintf@cp+1)& (0+255),b
 25304                           
 25305                           ; BSR set to: 1
 25306                           ;doprnt.c: 806: len = 1;
 25307  00246C  0E00               	movlw	0
 25308  00246E  0101               	movlb	1	; () banked
 25309  002470  6F0D               	movwf	(sprintf@len+1)& (0+255),b
 25310  002472  0E01               	movlw	1
 25311  002474  6F0C               	movwf	sprintf@len& (0+255),b
 25312                           
 25313                           ;doprnt.c: 807: goto dostring;
 25314  002476  D78B               	goto	l13409
 25315                           
 25316                           ; BSR set to: 1
 25317                           ;doprnt.c: 822: }
 25318  002478  D02A               	goto	l13441
 25319  00247A                     l13439:
 25320  00247A  C0CC  FFF6         	movff	sprintf@f,tblptrl
 25321  00247E  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 25322  002482  0100               	movlb	0	; () banked
 25323  002484  4BCC               	infsnz	sprintf@f& (0+255),f,b
 25324  002486  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 25325  002488                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25326  002488  6AF8               	clrf	tblptru,c
 25327  00248A                     	endif
 25328  00248A                     	if	0	;tblptru may be non-zero
 25329  00248A                     	endif
 25330  00248A  0008               	tblrd		*
 25331  00248C  CFF5 F123          	movff	tablat,sprintf@c
 25332  002490  0101               	movlb	1	; () banked
 25333  002492  5123               	movf	sprintf@c& (0+255),w,b
 25334                           
 25335                           ; Switch size 1, requested type "space"
 25336                           ; Number of cases is 9, Range of values is 0 to 120
 25337                           ; switch strategies available:
 25338                           ; Name         Instructions Cycles
 25339                           ; simple_byte           28    15 (average)
 25340                           ;	Chosen strategy is simple_byte
 25341  002494  0A00               	xorlw	0	; case 0
 25342  002496  B4D8               	btfsc	status,2,c
 25343  002498  EF89  F018         	goto	l13737
 25344  00249C  0A58               	xorlw	88	; case 88
 25345  00249E  B4D8               	btfsc	status,2,c
 25346  0024A0  D72D               	goto	l13393
 25347  0024A2  0A3B               	xorlw	59	; case 99
 25348  0024A4  B4D8               	btfsc	status,2,c
 25349  0024A6  D7CF               	goto	l13429
 25350  0024A8  0A07               	xorlw	7	; case 100
 25351  0024AA  B4D8               	btfsc	status,2,c
 25352  0024AC  D010               	goto	l13441
 25353  0024AE  0A02               	xorlw	2	; case 102
 25354  0024B0  B4D8               	btfsc	status,2,c
 25355  0024B2  D720               	goto	l13391
 25356  0024B4  0A0F               	xorlw	15	; case 105
 25357  0024B6  B4D8               	btfsc	status,2,c
 25358  0024B8  D00A               	goto	l13441
 25359  0024BA  0A05               	xorlw	5	; case 108
 25360  0024BC  B4D8               	btfsc	status,2,c
 25361  0024BE  D717               	goto	l13389
 25362  0024C0  0A1F               	xorlw	31	; case 115
 25363  0024C2  B4D8               	btfsc	status,2,c
 25364  0024C4  D71E               	goto	l13395
 25365  0024C6  0A0B               	xorlw	11	; case 120
 25366  0024C8  B4D8               	btfsc	status,2,c
 25367  0024CA  D718               	goto	l13393
 25368  0024CC  D7C9               	goto	l13433
 25369  0024CE                     l13441:
 25370                           
 25371                           ; BSR set to: 1
 25372                           ;doprnt.c: 825: if(flag & (0x700)) {
 25373  0024CE  0E07               	movlw	7
 25374  0024D0  0101               	movlb	1	; () banked
 25375  0024D2  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 25376  0024D4  B4D8               	btfsc	status,2,c
 25377  0024D6  D3ED               	goto	l2242
 25378                           
 25379                           ; BSR set to: 1
 25380                           ;doprnt.c: 829: prec = 6;
 25381  0024D8  0E00               	movlw	0
 25382  0024DA  0101               	movlb	1	; () banked
 25383  0024DC  6F11               	movwf	(sprintf@prec+1)& (0+255),b
 25384  0024DE  0E06               	movlw	6
 25385  0024E0  6F10               	movwf	sprintf@prec& (0+255),b
 25386                           
 25387                           ; BSR set to: 1
 25388                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25389  0024E2  C10E  FFD9         	movff	sprintf@ap,fsr2l
 25390  0024E6  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 25391  0024EA  CFDE F11C          	movff	postinc2,sprintf@fval
 25392  0024EE  CFDE F11D          	movff	postinc2,sprintf@fval+1
 25393  0024F2  CFDD F11E          	movff	postdec2,sprintf@fval+2
 25394                           
 25395                           ; BSR set to: 1
 25396  0024F6  0E03               	movlw	3
 25397  0024F8  0101               	movlb	1	; () banked
 25398  0024FA  270E               	addwf	sprintf@ap& (0+255),f,b
 25399  0024FC  0E00               	movlw	0
 25400  0024FE  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25401                           
 25402                           ; BSR set to: 1
 25403                           ;doprnt.c: 831: if(fval < 0.0) {
 25404  002500  0101               	movlb	1	; () banked
 25405  002502  AF1E               	btfss	(sprintf@fval+2)& (0+255),7,b
 25406  002504  D012               	goto	l13455
 25407                           
 25408                           ; BSR set to: 1
 25409                           ;doprnt.c: 832: fval = -fval;
 25410  002506  C11C  F07C         	movff	sprintf@fval,___ftneg@f1
 25411  00250A  C11D  F07D         	movff	sprintf@fval+1,___ftneg@f1+1
 25412  00250E  C11E  F07E         	movff	sprintf@fval+2,___ftneg@f1+2
 25413  002512  EC61  F049         	call	___ftneg	;wreg free
 25414  002516  C07C  F11C         	movff	?___ftneg,sprintf@fval
 25415  00251A  C07D  F11D         	movff	?___ftneg+1,sprintf@fval+1
 25416  00251E  C07E  F11E         	movff	?___ftneg+2,sprintf@fval+2
 25417                           
 25418                           ;doprnt.c: 833: flag |= 0x03;
 25419  002522  0E03               	movlw	3
 25420  002524  0101               	movlb	1	; () banked
 25421  002526  1321               	iorwf	sprintf@flag& (0+255),f,b
 25422  002528  D000               	goto	l13455
 25423  00252A                     l13455:
 25424                           
 25425                           ; BSR set to: 1
 25426                           ;doprnt.c: 834: }
 25427                           ;doprnt.c: 835: exp = 0;
 25428  00252A  0E00               	movlw	0
 25429  00252C  0101               	movlb	1	; () banked
 25430  00252E  6F17               	movwf	(sprintf@exp+1)& (0+255),b
 25431  002530  0E00               	movlw	0
 25432  002532  6F16               	movwf	sprintf@exp& (0+255),b
 25433                           
 25434                           ; BSR set to: 1
 25435                           ;doprnt.c: 836: if( fval!=0) {
 25436  002534  0101               	movlb	1	; () banked
 25437  002536  511C               	movf	sprintf@fval& (0+255),w,b
 25438  002538  0101               	movlb	1	; () banked
 25439  00253A  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25440  00253C  0101               	movlb	1	; () banked
 25441  00253E  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25442  002540  B4D8               	btfsc	status,2,c
 25443  002542  D09D               	goto	l13483
 25444                           
 25445                           ; BSR set to: 1
 25446                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 25447  002544  0E82               	movlw	130
 25448  002546  0101               	movlb	1	; () banked
 25449  002548  6F00               	movwf	??_sprintf& (0+255),b
 25450  00254A  0EFF               	movlw	255
 25451  00254C  0101               	movlb	1	; () banked
 25452  00254E  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25453  002550  C11C  F102         	movff	sprintf@fval,??_sprintf+2
 25454  002554  C11D  F103         	movff	sprintf@fval+1,??_sprintf+3
 25455  002558  C11E  F104         	movff	sprintf@fval+2,??_sprintf+4
 25456  00255C  C11F  F105         	movff	sprintf@fval+3,??_sprintf+5
 25457  002560  0E10               	movlw	16
 25458  002562  D006               	goto	u16340
 25459  002564                     u16345:
 25460  002564  0101               	movlb	1	; () banked
 25461  002566  90D8               	bcf	status,0,c
 25462  002568  3305               	rrcf	(??_sprintf+5)& (0+255),f,b
 25463  00256A  3304               	rrcf	(??_sprintf+4)& (0+255),f,b
 25464  00256C  3303               	rrcf	(??_sprintf+3)& (0+255),f,b
 25465  00256E  3302               	rrcf	(??_sprintf+2)& (0+255),f,b
 25466  002570                     u16340:
 25467  002570  2EE8               	decfsz	wreg,f,c
 25468  002572  D7F8               	goto	u16345
 25469  002574  0101               	movlb	1	; () banked
 25470  002576  5102               	movf	(??_sprintf+2)& (0+255),w,b
 25471  002578  0101               	movlb	1	; () banked
 25472  00257A  2500               	addwf	??_sprintf& (0+255),w,b
 25473  00257C  0101               	movlb	1	; () banked
 25474  00257E  6F16               	movwf	sprintf@exp& (0+255),b
 25475  002580  0E00               	movlw	0
 25476  002582  0101               	movlb	1	; () banked
 25477  002584  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
 25478  002586  0101               	movlb	1	; () banked
 25479  002588  6F17               	movwf	(sprintf@exp+1)& (0+255),b
 25480                           
 25481                           ; BSR set to: 1
 25482                           ;doprnt.c: 838: exp--;
 25483  00258A  0101               	movlb	1	; () banked
 25484  00258C  0716               	decf	sprintf@exp& (0+255),f,b
 25485  00258E  A0D8               	btfss	status,0,c
 25486  002590  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 25487                           
 25488                           ; BSR set to: 1
 25489                           ;doprnt.c: 839: exp *= 3;
 25490  002592  C116  F08A         	movff	sprintf@exp,___wmul@multiplier
 25491  002596  C117  F08B         	movff	sprintf@exp+1,___wmul@multiplier+1
 25492  00259A  0E00               	movlw	0
 25493  00259C  0100               	movlb	0	; () banked
 25494  00259E  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25495  0025A0  0E03               	movlw	3
 25496  0025A2  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 25497  0025A4  EC11  F049         	call	___wmul	;wreg free
 25498  0025A8  C08A  F116         	movff	?___wmul,sprintf@exp
 25499  0025AC  C08B  F117         	movff	?___wmul+1,sprintf@exp+1
 25500                           
 25501                           ;doprnt.c: 840: exp /= 10;
 25502  0025B0  C116  F082         	movff	sprintf@exp,___awdiv@dividend
 25503  0025B4  C117  F083         	movff	sprintf@exp+1,___awdiv@dividend+1
 25504  0025B8  0E00               	movlw	0
 25505  0025BA  0100               	movlb	0	; () banked
 25506  0025BC  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 25507  0025BE  0E0A               	movlw	10
 25508  0025C0  6F84               	movwf	___awdiv@divisor& (0+255),b
 25509  0025C2  EC6A  F03E         	call	___awdiv	;wreg free
 25510  0025C6  C082  F116         	movff	?___awdiv,sprintf@exp
 25511  0025CA  C083  F117         	movff	?___awdiv+1,sprintf@exp+1
 25512                           
 25513                           ;doprnt.c: 841: if(exp < 0)
 25514  0025CE  0101               	movlb	1	; () banked
 25515  0025D0  AF17               	btfss	(sprintf@exp+1)& (0+255),7,b
 25516  0025D2  D005               	goto	l13471
 25517                           
 25518                           ; BSR set to: 1
 25519                           ;doprnt.c: 842: exp--;
 25520  0025D4  0101               	movlb	1	; () banked
 25521  0025D6  0716               	decf	sprintf@exp& (0+255),f,b
 25522  0025D8  A0D8               	btfss	status,0,c
 25523  0025DA  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 25524  0025DC  D000               	goto	l13471
 25525  0025DE                     l13471:
 25526                           
 25527                           ; BSR set to: 1
 25528                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25529  0025DE  0101               	movlb	1	; () banked
 25530  0025E0  5116               	movf	sprintf@exp& (0+255),w,b
 25531  0025E2  0800               	sublw	0
 25532  0025E4  ECAE  F021         	call	_scale
 25533  0025E8  C0A5  F112         	movff	?_scale,sprintf@tmpval
 25534  0025EC  C0A6  F113         	movff	?_scale+1,sprintf@tmpval+1
 25535  0025F0  C0A7  F114         	movff	?_scale+2,sprintf@tmpval+2
 25536                           
 25537                           ;doprnt.c: 847: tmpval.integ *= fval;
 25538  0025F4  C112  F096         	movff	sprintf@tmpval,___ftmul@f1
 25539  0025F8  C113  F097         	movff	sprintf@tmpval+1,___ftmul@f1+1
 25540  0025FC  C114  F098         	movff	sprintf@tmpval+2,___ftmul@f1+2
 25541  002600  C11C  F099         	movff	sprintf@fval,___ftmul@f2
 25542  002604  C11D  F09A         	movff	sprintf@fval+1,___ftmul@f2+1
 25543  002608  C11E  F09B         	movff	sprintf@fval+2,___ftmul@f2+2
 25544  00260C  EC66  F037         	call	___ftmul	;wreg free
 25545  002610  C096  F112         	movff	?___ftmul,sprintf@tmpval
 25546  002614  C097  F113         	movff	?___ftmul+1,sprintf@tmpval+1
 25547  002618  C098  F114         	movff	?___ftmul+2,sprintf@tmpval+2
 25548                           
 25549                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25550  00261C  C112  F07C         	movff	sprintf@tmpval,___ftge@ff1
 25551  002620  C113  F07D         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25552  002624  C114  F07E         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25553  002628  0E00               	movlw	0
 25554  00262A  0100               	movlb	0	; () banked
 25555  00262C  6F7F               	movwf	___ftge@ff2& (0+255),b
 25556  00262E  0E80               	movlw	128
 25557  002630  0100               	movlb	0	; () banked
 25558  002632  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 25559  002634  0E3F               	movlw	63
 25560  002636  0100               	movlb	0	; () banked
 25561  002638  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 25562  00263A  ECD2  F03E         	call	___ftge	;wreg free
 25563  00263E  0100               	movlb	0	; () banked
 25564  002640  B0D8               	btfsc	status,0,c
 25565  002642  D005               	goto	l13479
 25566                           
 25567                           ; BSR set to: 0
 25568                           ;doprnt.c: 849: exp--;
 25569  002644  0101               	movlb	1	; () banked
 25570  002646  0716               	decf	sprintf@exp& (0+255),f,b
 25571  002648  A0D8               	btfss	status,0,c
 25572  00264A  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 25573  00264C  D018               	goto	l13483
 25574  00264E                     l13479:
 25575                           
 25576                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25577  00264E  C112  F07C         	movff	sprintf@tmpval,___ftge@ff1
 25578  002652  C113  F07D         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25579  002656  C114  F07E         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25580  00265A  0E00               	movlw	0
 25581  00265C  0100               	movlb	0	; () banked
 25582  00265E  6F7F               	movwf	___ftge@ff2& (0+255),b
 25583  002660  0E20               	movlw	32
 25584  002662  0100               	movlb	0	; () banked
 25585  002664  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 25586  002666  0E41               	movlw	65
 25587  002668  0100               	movlb	0	; () banked
 25588  00266A  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 25589  00266C  ECD2  F03E         	call	___ftge	;wreg free
 25590  002670  0100               	movlb	0	; () banked
 25591  002672  A0D8               	btfss	status,0,c
 25592  002674  D004               	goto	l13483
 25593                           
 25594                           ; BSR set to: 0
 25595                           ;doprnt.c: 851: exp++;
 25596  002676  0101               	movlb	1	; () banked
 25597  002678  4B16               	infsnz	sprintf@exp& (0+255),f,b
 25598  00267A  2B17               	incf	(sprintf@exp+1)& (0+255),f,b
 25599                           
 25600                           ; BSR set to: 1
 25601                           
 25602                           ; BSR set to: 1
 25603  00267C  D000               	goto	l13483
 25604  00267E                     l13483:
 25605                           
 25606                           ;doprnt.c: 852: }
 25607                           ;doprnt.c: 1112: if(prec <= 12)
 25608  00267E  0101               	movlb	1	; () banked
 25609  002680  BF11               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25610  002682  D008               	goto	l13485
 25611  002684  0101               	movlb	1	; () banked
 25612  002686  5111               	movf	(sprintf@prec+1)& (0+255),w,b
 25613  002688  E11E               	bnz	l13487
 25614  00268A  0E0D               	movlw	13
 25615  00268C  0101               	movlb	1	; () banked
 25616  00268E  5D10               	subwf	sprintf@prec& (0+255),w,b
 25617  002690  B0D8               	btfsc	status,0,c
 25618  002692  D019               	goto	l13487
 25619  002694                     l13485:
 25620                           
 25621                           ; BSR set to: 1
 25622                           ;doprnt.c: 1113: fval += fround(prec);
 25623  002694  C11C  F0AF         	movff	sprintf@fval,___ftadd@f1
 25624  002698  C11D  F0B0         	movff	sprintf@fval+1,___ftadd@f1+1
 25625  00269C  C11E  F0B1         	movff	sprintf@fval+2,___ftadd@f1+2
 25626  0026A0  0101               	movlb	1	; () banked
 25627  0026A2  5110               	movf	sprintf@prec& (0+255),w,b
 25628  0026A4  EC62  F02C         	call	_fround
 25629  0026A8  C0A5  F0B2         	movff	?_fround,___ftadd@f2
 25630  0026AC  C0A6  F0B3         	movff	?_fround+1,___ftadd@f2+1
 25631  0026B0  C0A7  F0B4         	movff	?_fround+2,___ftadd@f2+2
 25632  0026B4  ECCE  F02D         	call	___ftadd	;wreg free
 25633  0026B8  C0AF  F11C         	movff	?___ftadd,sprintf@fval
 25634  0026BC  C0B0  F11D         	movff	?___ftadd+1,sprintf@fval+1
 25635  0026C0  C0B1  F11E         	movff	?___ftadd+2,sprintf@fval+2
 25636  0026C4  D000               	goto	l13487
 25637  0026C6                     l13487:
 25638                           
 25639                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25640  0026C6  0101               	movlb	1	; () banked
 25641  0026C8  BF17               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25642  0026CA  D008               	goto	l13489
 25643  0026CC  0101               	movlb	1	; () banked
 25644  0026CE  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 25645  0026D0  E12C               	bnz	l13495
 25646  0026D2  0E0A               	movlw	10
 25647  0026D4  0101               	movlb	1	; () banked
 25648  0026D6  5D16               	subwf	sprintf@exp& (0+255),w,b
 25649  0026D8  B0D8               	btfsc	status,0,c
 25650  0026DA  D027               	goto	l13495
 25651  0026DC                     l13489:
 25652                           
 25653                           ; BSR set to: 1
 25654  0026DC  0101               	movlb	1	; () banked
 25655  0026DE  511C               	movf	sprintf@fval& (0+255),w,b
 25656  0026E0  0101               	movlb	1	; () banked
 25657  0026E2  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25658  0026E4  0101               	movlb	1	; () banked
 25659  0026E6  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25660  0026E8  B4D8               	btfsc	status,2,c
 25661  0026EA  D07F               	goto	l13509
 25662                           
 25663                           ; BSR set to: 1
 25664  0026EC  C11C  F0BB         	movff	sprintf@fval,___fttol@f1
 25665  0026F0  C11D  F0BC         	movff	sprintf@fval+1,___fttol@f1+1
 25666  0026F4  C11E  F0BD         	movff	sprintf@fval+2,___fttol@f1+2
 25667  0026F8  ECC5  F038         	call	___fttol	;wreg free
 25668  0026FC  0100               	movlb	0	; () banked
 25669  0026FE  51BB               	movf	?___fttol& (0+255),w,b
 25670  002700  0100               	movlb	0	; () banked
 25671  002702  11BC               	iorwf	(?___fttol+1)& (0+255),w,b
 25672  002704  0100               	movlb	0	; () banked
 25673  002706  11BD               	iorwf	(?___fttol+2)& (0+255),w,b
 25674  002708  0100               	movlb	0	; () banked
 25675  00270A  11BE               	iorwf	(?___fttol+3)& (0+255),w,b
 25676  00270C  A4D8               	btfss	status,2,c
 25677  00270E  D06D               	goto	l13509
 25678                           
 25679                           ; BSR set to: 0
 25680  002710  0101               	movlb	1	; () banked
 25681  002712  BF17               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25682  002714  D06A               	goto	l13509
 25683  002716  0101               	movlb	1	; () banked
 25684  002718  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 25685  00271A  E107               	bnz	l13495
 25686  00271C  0E02               	movlw	2
 25687  00271E  0101               	movlb	1	; () banked
 25688  002720  5D16               	subwf	sprintf@exp& (0+255),w,b
 25689  002722  B0D8               	btfsc	status,0,c
 25690  002724  D002               	goto	l13495
 25691  002726  D061               	goto	l13509
 25692  002728  D000               	goto	l13495
 25693  00272A                     l13495:
 25694                           
 25695                           ; BSR set to: 1
 25696                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25697  00272A  C112  F07C         	movff	sprintf@tmpval,___ftge@ff1
 25698  00272E  C113  F07D         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25699  002732  C114  F07E         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25700  002736  0E70               	movlw	112
 25701  002738  0100               	movlb	0	; () banked
 25702  00273A  6F7F               	movwf	___ftge@ff2& (0+255),b
 25703  00273C  0E89               	movlw	137
 25704  00273E  0100               	movlb	0	; () banked
 25705  002740  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 25706  002742  0E40               	movlw	64
 25707  002744  0100               	movlb	0	; () banked
 25708  002746  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 25709  002748  ECD2  F03E         	call	___ftge	;wreg free
 25710  00274C  0100               	movlb	0	; () banked
 25711  00274E  B0D8               	btfsc	status,0,c
 25712  002750  D003               	goto	l13499
 25713                           
 25714                           ; BSR set to: 0
 25715                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25716  002752  0101               	movlb	1	; () banked
 25717  002754  0EF7               	movlw	247
 25718  002756  D002               	goto	L16
 25719  002758                     l13499:
 25720                           
 25721                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25722  002758  0101               	movlb	1	; () banked
 25723  00275A  0EF8               	movlw	248
 25724  00275C                     L16:
 25725  00275C  2716               	addwf	sprintf@exp& (0+255),f,b
 25726  00275E  0EFF               	movlw	255
 25727  002760  2317               	addwfc	(sprintf@exp+1)& (0+255),f,b
 25728  002762  D000               	goto	l13501
 25729  002764                     l13501:
 25730                           
 25731                           ; BSR set to: 1
 25732                           ;doprnt.c: 1124: }
 25733                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 25734  002764  0101               	movlb	1	; () banked
 25735  002766  5116               	movf	sprintf@exp& (0+255),w,b
 25736  002768  ECAE  F021         	call	_scale
 25737  00276C  C0A5  F112         	movff	?_scale,sprintf@tmpval
 25738  002770  C0A6  F113         	movff	?_scale+1,sprintf@tmpval+1
 25739  002774  C0A7  F114         	movff	?_scale+2,sprintf@tmpval+2
 25740                           
 25741                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25742  002778  D017               	goto	l13505
 25743  00277A  C11C  F07C         	movff	sprintf@fval,__div_to_l_@f1
 25744  00277E  C11D  F07D         	movff	sprintf@fval+1,__div_to_l_@f1+1
 25745  002782  C11E  F07E         	movff	sprintf@fval+2,__div_to_l_@f1+2
 25746  002786  C112  F07F         	movff	sprintf@tmpval,__div_to_l_@f2
 25747  00278A  C113  F080         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 25748  00278E  C114  F081         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 25749  002792  EC1D  F035         	call	__div_to_l_	;wreg free
 25750  002796  C07C  F118         	movff	?__div_to_l_,sprintf@val
 25751  00279A  C07D  F119         	movff	?__div_to_l_+1,sprintf@val+1
 25752  00279E  C07E  F11A         	movff	?__div_to_l_+2,sprintf@val+2
 25753  0027A2  C07F  F11B         	movff	?__div_to_l_+3,sprintf@val+3
 25754  0027A6  D017               	goto	l13507
 25755  0027A8                     l13505:
 25756  0027A8  C11C  F07C         	movff	sprintf@fval,__tdiv_to_l_@f1
 25757  0027AC  C11D  F07D         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 25758  0027B0  C11E  F07E         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 25759  0027B4  C112  F07F         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 25760  0027B8  C113  F080         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 25761  0027BC  C114  F081         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 25762  0027C0  EC4A  F034         	call	__tdiv_to_l_	;wreg free
 25763  0027C4  C07C  F118         	movff	?__tdiv_to_l_,sprintf@val
 25764  0027C8  C07D  F119         	movff	?__tdiv_to_l_+1,sprintf@val+1
 25765  0027CC  C07E  F11A         	movff	?__tdiv_to_l_+2,sprintf@val+2
 25766  0027D0  C07F  F11B         	movff	?__tdiv_to_l_+3,sprintf@val+3
 25767  0027D4  D000               	goto	l13507
 25768  0027D6                     l13507:
 25769                           
 25770                           ;doprnt.c: 1129: fval = 0.0;
 25771  0027D6  0E00               	movlw	0
 25772  0027D8  0101               	movlb	1	; () banked
 25773  0027DA  6F1C               	movwf	sprintf@fval& (0+255),b
 25774  0027DC  0E00               	movlw	0
 25775  0027DE  0101               	movlb	1	; () banked
 25776  0027E0  6F1D               	movwf	(sprintf@fval+1)& (0+255),b
 25777  0027E2  0E00               	movlw	0
 25778  0027E4  0101               	movlb	1	; () banked
 25779  0027E6  6F1E               	movwf	(sprintf@fval+2)& (0+255),b
 25780                           
 25781                           ;doprnt.c: 1130: } else {
 25782  0027E8  D034               	goto	l13513
 25783  0027EA                     l13509:
 25784                           
 25785                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25786  0027EA  C11C  F0BB         	movff	sprintf@fval,___fttol@f1
 25787  0027EE  C11D  F0BC         	movff	sprintf@fval+1,___fttol@f1+1
 25788  0027F2  C11E  F0BD         	movff	sprintf@fval+2,___fttol@f1+2
 25789  0027F6  ECC5  F038         	call	___fttol	;wreg free
 25790  0027FA  C0BB  F118         	movff	?___fttol,sprintf@val
 25791  0027FE  C0BC  F119         	movff	?___fttol+1,sprintf@val+1
 25792  002802  C0BD  F11A         	movff	?___fttol+2,sprintf@val+2
 25793  002806  C0BE  F11B         	movff	?___fttol+3,sprintf@val+3
 25794                           
 25795                           ;doprnt.c: 1132: fval -= (double)val;
 25796  00280A  C11C  F0BB         	movff	sprintf@fval,___ftsub@f1
 25797  00280E  C11D  F0BC         	movff	sprintf@fval+1,___ftsub@f1+1
 25798  002812  C11E  F0BD         	movff	sprintf@fval+2,___ftsub@f1+2
 25799  002816  C118  F084         	movff	sprintf@val,___lltoft@c
 25800  00281A  C119  F085         	movff	sprintf@val+1,___lltoft@c+1
 25801  00281E  C11A  F086         	movff	sprintf@val+2,___lltoft@c+2
 25802  002822  C11B  F087         	movff	sprintf@val+3,___lltoft@c+3
 25803  002826  EC7E  F044         	call	___lltoft	;wreg free
 25804  00282A  C084  F0BE         	movff	?___lltoft,___ftsub@f2
 25805  00282E  C085  F0BF         	movff	?___lltoft+1,___ftsub@f2+1
 25806  002832  C086  F0C0         	movff	?___lltoft+2,___ftsub@f2+2
 25807  002836  ECE1  F047         	call	___ftsub	;wreg free
 25808  00283A  C0BB  F11C         	movff	?___ftsub,sprintf@fval
 25809  00283E  C0BC  F11D         	movff	?___ftsub+1,sprintf@fval+1
 25810  002842  C0BD  F11E         	movff	?___ftsub+2,sprintf@fval+2
 25811                           
 25812                           ;doprnt.c: 1133: exp = 0;
 25813  002846  0E00               	movlw	0
 25814  002848  0101               	movlb	1	; () banked
 25815  00284A  6F17               	movwf	(sprintf@exp+1)& (0+255),b
 25816  00284C  0E00               	movlw	0
 25817  00284E  6F16               	movwf	sprintf@exp& (0+255),b
 25818  002850  D000               	goto	l13513
 25819  002852                     l13513:
 25820                           
 25821                           ; BSR set to: 1
 25822                           ;doprnt.c: 1134: }
 25823                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25824  002852  0E01               	movlw	1
 25825  002854  0101               	movlb	1	; () banked
 25826  002856  6F23               	movwf	sprintf@c& (0+255),b
 25827  002858                     l13515:
 25828                           
 25829                           ; BSR set to: 1
 25830  002858  0E0A               	movlw	10
 25831  00285A  0101               	movlb	1	; () banked
 25832  00285C  1923               	xorwf	sprintf@c& (0+255),w,b
 25833  00285E  B4D8               	btfsc	status,2,c
 25834  002860  D025               	goto	l13527
 25835  002862  D001               	goto	l13519
 25836                           
 25837                           ; BSR set to: 1
 25838  002864  D023               	goto	l13527
 25839  002866                     l13519:
 25840                           
 25841                           ; BSR set to: 1
 25842                           ;doprnt.c: 1137: if(val < dpowers[c])
 25843  002866  0101               	movlb	1	; () banked
 25844  002868  5123               	movf	sprintf@c& (0+255),w,b
 25845  00286A  0D04               	mullw	4
 25846  00286C  0E19               	movlw	low _dpowers
 25847  00286E  24F3               	addwf	prodl,w,c
 25848  002870  6EF6               	movwf	tblptrl,c
 25849  002872  0EF1               	movlw	high _dpowers
 25850  002874  20F4               	addwfc	prodh,w,c
 25851  002876  6EF7               	movwf	tblptrh,c
 25852  002878                     	if	1	;There are 3 active tblptr bytes
 25853  002878  6AF8               	clrf	tblptru,c
 25854  00287A  0E00               	movlw	low (__mediumconst shr (0+16))
 25855  00287C  22F8               	addwfc	tblptru,f,c
 25856  00287E                     	endif
 25857  00287E  0009               	tblrd		*+
 25858  002880  50F5               	movf	tablat,w,c
 25859  002882  0101               	movlb	1	; () banked
 25860  002884  5D18               	subwf	sprintf@val& (0+255),w,b
 25861  002886  0009               	tblrd		*+
 25862  002888  50F5               	movf	tablat,w,c
 25863  00288A  0101               	movlb	1	; () banked
 25864  00288C  5919               	subwfb	(sprintf@val+1)& (0+255),w,b
 25865  00288E  0009               	tblrd		*+
 25866  002890  50F5               	movf	tablat,w,c
 25867  002892  0101               	movlb	1	; () banked
 25868  002894  591A               	subwfb	(sprintf@val+2)& (0+255),w,b
 25869  002896  0009               	tblrd		*+
 25870  002898  50F5               	movf	tablat,w,c
 25871  00289A  0101               	movlb	1	; () banked
 25872  00289C  591B               	subwfb	(sprintf@val+3)& (0+255),w,b
 25873  00289E  A0D8               	btfss	status,0,c
 25874  0028A0  D005               	goto	l13527
 25875  0028A2  D001               	goto	l13523
 25876                           
 25877                           ; BSR set to: 1
 25878                           ;doprnt.c: 1138: break;
 25879  0028A4  D003               	goto	l13527
 25880  0028A6                     l13523:
 25881                           
 25882                           ; BSR set to: 1
 25883  0028A6  0101               	movlb	1	; () banked
 25884  0028A8  2B23               	incf	sprintf@c& (0+255),f,b
 25885  0028AA  D7D6               	goto	l13515
 25886  0028AC                     l13527:
 25887                           
 25888                           ; BSR set to: 1
 25889                           ;doprnt.c: 1142: width -= prec + c + exp;
 25890  0028AC  C123  F100         	movff	sprintf@c,??_sprintf
 25891  0028B0  0101               	movlb	1	; () banked
 25892  0028B2  6B01               	clrf	(??_sprintf+1)& (0+255),b
 25893  0028B4  BF00               	btfsc	??_sprintf& (0+255),7,b
 25894  0028B6  0701               	decf	(??_sprintf+1)& (0+255),f,b
 25895  0028B8  0101               	movlb	1	; () banked
 25896  0028BA  5110               	movf	sprintf@prec& (0+255),w,b
 25897  0028BC  0101               	movlb	1	; () banked
 25898  0028BE  2700               	addwf	??_sprintf& (0+255),f,b
 25899  0028C0  0101               	movlb	1	; () banked
 25900  0028C2  5111               	movf	(sprintf@prec+1)& (0+255),w,b
 25901  0028C4  0101               	movlb	1	; () banked
 25902  0028C6  2301               	addwfc	(??_sprintf+1)& (0+255),f,b
 25903  0028C8  0101               	movlb	1	; () banked
 25904  0028CA  5116               	movf	sprintf@exp& (0+255),w,b
 25905  0028CC  0101               	movlb	1	; () banked
 25906  0028CE  2700               	addwf	??_sprintf& (0+255),f,b
 25907  0028D0  0101               	movlb	1	; () banked
 25908  0028D2  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 25909  0028D4  0101               	movlb	1	; () banked
 25910  0028D6  2301               	addwfc	(??_sprintf+1)& (0+255),f,b
 25911  0028D8  0101               	movlb	1	; () banked
 25912  0028DA  5100               	movf	??_sprintf& (0+255),w,b
 25913  0028DC  0101               	movlb	1	; () banked
 25914  0028DE  5F1F               	subwf	sprintf@width& (0+255),f,b
 25915  0028E0  0101               	movlb	1	; () banked
 25916  0028E2  5101               	movf	(??_sprintf+1)& (0+255),w,b
 25917  0028E4  0101               	movlb	1	; () banked
 25918  0028E6  5B20               	subwfb	(sprintf@width+1)& (0+255),f,b
 25919                           
 25920                           ;doprnt.c: 1143: if(
 25921                           ;doprnt.c: 1147: prec)
 25922  0028E8  0101               	movlb	1	; () banked
 25923  0028EA  5110               	movf	sprintf@prec& (0+255),w,b
 25924  0028EC  0101               	movlb	1	; () banked
 25925  0028EE  1111               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25926  0028F0  B4D8               	btfsc	status,2,c
 25927  0028F2  D005               	goto	l13531
 25928                           
 25929                           ; BSR set to: 1
 25930                           ;doprnt.c: 1148: width--;
 25931  0028F4  0101               	movlb	1	; () banked
 25932  0028F6  071F               	decf	sprintf@width& (0+255),f,b
 25933  0028F8  A0D8               	btfss	status,0,c
 25934  0028FA  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25935  0028FC  D000               	goto	l13531
 25936  0028FE                     l13531:
 25937                           
 25938                           ; BSR set to: 1
 25939                           ;doprnt.c: 1149: if(flag & 0x03)
 25940  0028FE  0E03               	movlw	3
 25941  002900  0101               	movlb	1	; () banked
 25942  002902  1521               	andwf	sprintf@flag& (0+255),w,b
 25943  002904  0101               	movlb	1	; () banked
 25944  002906  6F00               	movwf	??_sprintf& (0+255),b
 25945  002908  0E00               	movlw	0
 25946  00290A  0101               	movlb	1	; () banked
 25947  00290C  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 25948  00290E  0101               	movlb	1	; () banked
 25949  002910  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25950  002912  0101               	movlb	1	; () banked
 25951  002914  5100               	movf	??_sprintf& (0+255),w,b
 25952  002916  0101               	movlb	1	; () banked
 25953  002918  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 25954  00291A  B4D8               	btfsc	status,2,c
 25955  00291C  D005               	goto	l13535
 25956                           
 25957                           ; BSR set to: 1
 25958                           ;doprnt.c: 1150: width--;
 25959  00291E  0101               	movlb	1	; () banked
 25960  002920  071F               	decf	sprintf@width& (0+255),f,b
 25961  002922  A0D8               	btfss	status,0,c
 25962  002924  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25963  002926  D000               	goto	l13535
 25964  002928                     l13535:
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;doprnt.c: 1153: if(flag & 0x04) {
 25968  002928  0101               	movlb	1	; () banked
 25969  00292A  A521               	btfss	sprintf@flag& (0+255),2,b
 25970  00292C  D043               	goto	l13557
 25971                           
 25972                           ; BSR set to: 1
 25973                           ;doprnt.c: 1157: if(flag & 0x03)
 25974  00292E  0E03               	movlw	3
 25975  002930  0101               	movlb	1	; () banked
 25976  002932  1521               	andwf	sprintf@flag& (0+255),w,b
 25977  002934  0101               	movlb	1	; () banked
 25978  002936  6F00               	movwf	??_sprintf& (0+255),b
 25979  002938  0E00               	movlw	0
 25980  00293A  0101               	movlb	1	; () banked
 25981  00293C  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 25982  00293E  0101               	movlb	1	; () banked
 25983  002940  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25984  002942  0101               	movlb	1	; () banked
 25985  002944  5100               	movf	??_sprintf& (0+255),w,b
 25986  002946  0101               	movlb	1	; () banked
 25987  002948  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 25988  00294A  B4D8               	btfsc	status,2,c
 25989  00294C  D018               	goto	l13549
 25990                           
 25991                           ; BSR set to: 1
 25992                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 25993  00294E  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25994  002952  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25995  002956  0E2D               	movlw	45
 25996  002958  6EDF               	movwf	indf2,c
 25997                           
 25998                           ; BSR set to: 1
 25999  00295A  0100               	movlb	0	; () banked
 26000  00295C  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26001  00295E  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26002                           
 26003                           ; BSR set to: 0
 26004                           ;doprnt.c: 1168: while(width > 0) {
 26005  002960  D00E               	goto	l13549
 26006  002962                     l13543:
 26007                           
 26008                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 26009  002962  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26010  002966  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26011  00296A  0E30               	movlw	48
 26012  00296C  6EDF               	movwf	indf2,c
 26013  00296E  0100               	movlb	0	; () banked
 26014  002970  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26015  002972  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26016                           
 26017                           ; BSR set to: 0
 26018                           ;doprnt.c: 1170: width--;
 26019  002974  0101               	movlb	1	; () banked
 26020  002976  071F               	decf	sprintf@width& (0+255),f,b
 26021  002978  A0D8               	btfss	status,0,c
 26022  00297A  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26023  00297C  D000               	goto	l13549
 26024  00297E                     l13549:
 26025  00297E  0101               	movlb	1	; () banked
 26026  002980  BF20               	btfsc	(sprintf@width+1)& (0+255),7,b
 26027  002982  D08A               	goto	l13573
 26028  002984  0101               	movlb	1	; () banked
 26029  002986  5120               	movf	(sprintf@width+1)& (0+255),w,b
 26030  002988  E1EC               	bnz	l13543
 26031  00298A  0101               	movlb	1	; () banked
 26032  00298C  051F               	decf	sprintf@width& (0+255),w,b
 26033  00298E  A0D8               	btfss	status,0,c
 26034  002990  D083               	goto	l13573
 26035  002992  D7E7               	goto	l13543
 26036                           
 26037                           ; BSR set to: 1
 26038                           ;doprnt.c: 1171: }
 26039                           ;doprnt.c: 1173: } else
 26040  002994  D081               	goto	l13573
 26041                           
 26042                           ; BSR set to: 1
 26043                           ;doprnt.c: 1175: {
 26044                           ;doprnt.c: 1180: while(width > 0) {
 26045  002996  D00E               	goto	l13557
 26046  002998                     l13551:
 26047                           
 26048                           ; BSR set to: 1
 26049                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 26050  002998  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26051  00299C  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26052  0029A0  0E20               	movlw	32
 26053  0029A2  6EDF               	movwf	indf2,c
 26054                           
 26055                           ; BSR set to: 1
 26056  0029A4  0100               	movlb	0	; () banked
 26057  0029A6  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26058  0029A8  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;doprnt.c: 1182: width--;
 26062  0029AA  0101               	movlb	1	; () banked
 26063  0029AC  071F               	decf	sprintf@width& (0+255),f,b
 26064  0029AE  A0D8               	btfss	status,0,c
 26065  0029B0  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26066  0029B2  D000               	goto	l13557
 26067  0029B4                     l13557:
 26068                           
 26069                           ; BSR set to: 1
 26070  0029B4  0101               	movlb	1	; () banked
 26071  0029B6  BF20               	btfsc	(sprintf@width+1)& (0+255),7,b
 26072  0029B8  D007               	goto	l13559
 26073  0029BA  0101               	movlb	1	; () banked
 26074  0029BC  5120               	movf	(sprintf@width+1)& (0+255),w,b
 26075  0029BE  E1EC               	bnz	l13551
 26076  0029C0  0101               	movlb	1	; () banked
 26077  0029C2  051F               	decf	sprintf@width& (0+255),w,b
 26078  0029C4  B0D8               	btfsc	status,0,c
 26079  0029C6  D7E8               	goto	l13551
 26080  0029C8                     l13559:
 26081                           
 26082                           ; BSR set to: 1
 26083                           ;doprnt.c: 1183: }
 26084                           ;doprnt.c: 1188: if(flag & 0x03)
 26085  0029C8  0E03               	movlw	3
 26086  0029CA  0101               	movlb	1	; () banked
 26087  0029CC  1521               	andwf	sprintf@flag& (0+255),w,b
 26088  0029CE  0101               	movlb	1	; () banked
 26089  0029D0  6F00               	movwf	??_sprintf& (0+255),b
 26090  0029D2  0E00               	movlw	0
 26091  0029D4  0101               	movlb	1	; () banked
 26092  0029D6  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26093  0029D8  0101               	movlb	1	; () banked
 26094  0029DA  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26095  0029DC  0101               	movlb	1	; () banked
 26096  0029DE  5100               	movf	??_sprintf& (0+255),w,b
 26097  0029E0  0101               	movlb	1	; () banked
 26098  0029E2  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26099  0029E4  B4D8               	btfsc	status,2,c
 26100  0029E6  D058               	goto	l13573
 26101                           
 26102                           ; BSR set to: 1
 26103                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 26104  0029E8  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26105  0029EC  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26106  0029F0  0E2D               	movlw	45
 26107  0029F2  D050               	goto	L17
 26108  0029F4                     l13563:
 26109                           
 26110                           ; BSR set to: 1
 26111  0029F4  0100               	movlb	0	; () banked
 26112  0029F6  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26113  0029F8  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26114                           
 26115                           ; BSR set to: 0
 26116                           ;doprnt.c: 1195: }
 26117                           ;doprnt.c: 1196: while(c--) {
 26118                           
 26119                           ; BSR set to: 0
 26120  0029FA  D04E               	goto	l13573
 26121  0029FC                     l13565:
 26122                           
 26123                           ;doprnt.c: 1200: {
 26124                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 26125  0029FC  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 26126  002A00  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 26127  002A04  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 26128  002A08  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 26129  002A0C  0101               	movlb	1	; () banked
 26130  002A0E  5123               	movf	sprintf@c& (0+255),w,b
 26131  002A10  0D04               	mullw	4
 26132  002A12  0E19               	movlw	low _dpowers
 26133  002A14  24F3               	addwf	prodl,w,c
 26134  002A16  6EF6               	movwf	tblptrl,c
 26135  002A18  0EF1               	movlw	high _dpowers
 26136  002A1A  20F4               	addwfc	prodh,w,c
 26137  002A1C  6EF7               	movwf	tblptrh,c
 26138  002A1E                     	if	1	;There are 3 active tblptr bytes
 26139  002A1E  6AF8               	clrf	tblptru,c
 26140  002A20  0E00               	movlw	low (__mediumconst shr (0+16))
 26141  002A22  22F8               	addwfc	tblptru,f,c
 26142  002A24                     	endif
 26143  002A24  0009               	tblrd		*+
 26144  002A26  CFF5 F080          	movff	tablat,___lldiv@divisor
 26145  002A2A  0009               	tblrd		*+
 26146  002A2C  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 26147  002A30  0009               	tblrd		*+
 26148  002A32  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 26149  002A36  000A               	tblrd		*-
 26150  002A38  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 26151  002A3C  EC9D  F03F         	call	___lldiv	;wreg free
 26152  002A40  C07C  F112         	movff	?___lldiv,sprintf@tmpval
 26153  002A44  C07D  F113         	movff	?___lldiv+1,sprintf@tmpval+1
 26154  002A48  C07E  F114         	movff	?___lldiv+2,sprintf@tmpval+2
 26155  002A4C  C07F  F115         	movff	?___lldiv+3,sprintf@tmpval+3
 26156                           
 26157                           ;doprnt.c: 1202: tmpval.vd %= 10;
 26158  002A50  C112  F089         	movff	sprintf@tmpval,___llmod@dividend
 26159  002A54  C113  F08A         	movff	sprintf@tmpval+1,___llmod@dividend+1
 26160  002A58  C114  F08B         	movff	sprintf@tmpval+2,___llmod@dividend+2
 26161  002A5C  C115  F08C         	movff	sprintf@tmpval+3,___llmod@dividend+3
 26162  002A60  0E0A               	movlw	10
 26163  002A62  0100               	movlb	0	; () banked
 26164  002A64  6F8D               	movwf	___llmod@divisor& (0+255),b
 26165  002A66  0E00               	movlw	0
 26166  002A68  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 26167  002A6A  0E00               	movlw	0
 26168  002A6C  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 26169  002A6E  0E00               	movlw	0
 26170  002A70  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 26171  002A72  EC21  F042         	call	___llmod	;wreg free
 26172  002A76  C089  F112         	movff	?___llmod,sprintf@tmpval
 26173  002A7A  C08A  F113         	movff	?___llmod+1,sprintf@tmpval+1
 26174  002A7E  C08B  F114         	movff	?___llmod+2,sprintf@tmpval+2
 26175  002A82  C08C  F115         	movff	?___llmod+3,sprintf@tmpval+3
 26176                           
 26177                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 26178  002A86  0101               	movlb	1	; () banked
 26179  002A88  5112               	movf	sprintf@tmpval& (0+255),w,b
 26180  002A8A  0F30               	addlw	48
 26181  002A8C  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26182  002A90  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26183  002A94                     L17:
 26184  002A94  6EDF               	movwf	indf2,c
 26185  002A96  D7AE               	goto	l13563
 26186  002A98                     l13573:
 26187  002A98  0101               	movlb	1	; () banked
 26188  002A9A  0723               	decf	sprintf@c& (0+255),f,b
 26189  002A9C  0101               	movlb	1	; () banked
 26190  002A9E  2923               	incf	sprintf@c& (0+255),w,b
 26191  002AA0  B4D8               	btfsc	status,2,c
 26192  002AA2  D010               	goto	l13581
 26193  002AA4  D7AB               	goto	l13565
 26194                           
 26195                           ; BSR set to: 1
 26196                           ;doprnt.c: 1204: }
 26197                           ;doprnt.c: 1206: }
 26198                           ;doprnt.c: 1207: while(exp > 0) {
 26199  002AA6  D00E               	goto	l13581
 26200  002AA8                     l13575:
 26201                           
 26202                           ; BSR set to: 1
 26203                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 26204  002AA8  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26205  002AAC  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26206  002AB0  0E30               	movlw	48
 26207  002AB2  6EDF               	movwf	indf2,c
 26208                           
 26209                           ; BSR set to: 1
 26210  002AB4  0100               	movlb	0	; () banked
 26211  002AB6  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26212  002AB8  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26213                           
 26214                           ; BSR set to: 0
 26215                           ;doprnt.c: 1209: exp--;
 26216  002ABA  0101               	movlb	1	; () banked
 26217  002ABC  0716               	decf	sprintf@exp& (0+255),f,b
 26218  002ABE  A0D8               	btfss	status,0,c
 26219  002AC0  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 26220  002AC2  D000               	goto	l13581
 26221  002AC4                     l13581:
 26222                           
 26223                           ; BSR set to: 1
 26224  002AC4  0101               	movlb	1	; () banked
 26225  002AC6  BF17               	btfsc	(sprintf@exp+1)& (0+255),7,b
 26226  002AC8  D007               	goto	l13583
 26227  002ACA  0101               	movlb	1	; () banked
 26228  002ACC  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 26229  002ACE  E1EC               	bnz	l13575
 26230  002AD0  0101               	movlb	1	; () banked
 26231  002AD2  0516               	decf	sprintf@exp& (0+255),w,b
 26232  002AD4  B0D8               	btfsc	status,0,c
 26233  002AD6  D7E8               	goto	l13575
 26234  002AD8                     l13583:
 26235                           
 26236                           ; BSR set to: 1
 26237                           ;doprnt.c: 1210: }
 26238                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 26239  002AD8  0101               	movlb	1	; () banked
 26240  002ADA  BF11               	btfsc	(sprintf@prec+1)& (0+255),7,b
 26241  002ADC  D00C               	goto	l2281
 26242  002ADE  0101               	movlb	1	; () banked
 26243  002AE0  5111               	movf	(sprintf@prec+1)& (0+255),w,b
 26244  002AE2  E105               	bnz	u16560
 26245  002AE4  0E09               	movlw	9
 26246  002AE6  0101               	movlb	1	; () banked
 26247  002AE8  5D10               	subwf	sprintf@prec& (0+255),w,b
 26248  002AEA  A0D8               	btfss	status,0,c
 26249  002AEC  D004               	goto	l2281
 26250  002AEE                     u16560:
 26251                           
 26252                           ; BSR set to: 1
 26253                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 26254  002AEE  0E08               	movlw	8
 26255  002AF0  0101               	movlb	1	; () banked
 26256  002AF2  6F23               	movwf	sprintf@c& (0+255),b
 26257  002AF4  D003               	goto	l13587
 26258  002AF6                     l2281:
 26259                           
 26260                           ; BSR set to: 1
 26261                           ;doprnt.c: 1213: else
 26262                           ;doprnt.c: 1214: c = prec;
 26263  002AF6  C110  F123         	movff	sprintf@prec,sprintf@c
 26264  002AFA  D000               	goto	l13587
 26265  002AFC                     l13587:
 26266                           
 26267                           ; BSR set to: 1
 26268                           ;doprnt.c: 1215: prec -= c;
 26269  002AFC  0101               	movlb	1	; () banked
 26270  002AFE  5123               	movf	sprintf@c& (0+255),w,b
 26271  002B00  0101               	movlb	1	; () banked
 26272  002B02  5F10               	subwf	sprintf@prec& (0+255),f,b
 26273  002B04  0E00               	movlw	0
 26274  002B06  0101               	movlb	1	; () banked
 26275  002B08  BF23               	btfsc	sprintf@c& (0+255),7,b
 26276  002B0A  0EFF               	movlw	255
 26277  002B0C  0101               	movlb	1	; () banked
 26278  002B0E  5B11               	subwfb	(sprintf@prec+1)& (0+255),f,b
 26279                           
 26280                           ; BSR set to: 1
 26281                           ;doprnt.c: 1219: if(c)
 26282  002B10  0101               	movlb	1	; () banked
 26283  002B12  5123               	movf	sprintf@c& (0+255),w,b
 26284  002B14  0101               	movlb	1	; () banked
 26285  002B16  B4D8               	btfsc	status,2,c
 26286  002B18  D00A               	goto	l13595
 26287                           
 26288                           ; BSR set to: 1
 26289                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 26290  002B1A  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26291  002B1E  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26292  002B22  0E2E               	movlw	46
 26293  002B24  6EDF               	movwf	indf2,c
 26294                           
 26295                           ; BSR set to: 1
 26296  002B26  0100               	movlb	0	; () banked
 26297  002B28  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26298  002B2A  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26299  002B2C  D000               	goto	l13595
 26300  002B2E                     l13595:
 26301                           
 26302                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26303  002B2E  0101               	movlb	1	; () banked
 26304  002B30  5123               	movf	sprintf@c& (0+255),w,b
 26305  002B32  ECAE  F021         	call	_scale
 26306  002B36  C0A5  F106         	movff	?_scale,_sprintf$3810
 26307  002B3A  C0A6  F107         	movff	?_scale+1,_sprintf$3810+1
 26308  002B3E  C0A7  F108         	movff	?_scale+2,_sprintf$3810+2
 26309                           
 26310                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26311  002B42  C11C  F099         	movff	sprintf@fval,___ftmul@f2
 26312  002B46  C11D  F09A         	movff	sprintf@fval+1,___ftmul@f2+1
 26313  002B4A  C11E  F09B         	movff	sprintf@fval+2,___ftmul@f2+2
 26314  002B4E  C106  F096         	movff	_sprintf$3810,___ftmul@f1
 26315  002B52  C107  F097         	movff	_sprintf$3810+1,___ftmul@f1+1
 26316  002B56  C108  F098         	movff	_sprintf$3810+2,___ftmul@f1+2
 26317  002B5A  EC66  F037         	call	___ftmul	;wreg free
 26318  002B5E  C096  F0BB         	movff	?___ftmul,___fttol@f1
 26319  002B62  C097  F0BC         	movff	?___ftmul+1,___fttol@f1+1
 26320  002B66  C098  F0BD         	movff	?___ftmul+2,___fttol@f1+2
 26321  002B6A  ECC5  F038         	call	___fttol	;wreg free
 26322  002B6E  C0BB  F118         	movff	?___fttol,sprintf@val
 26323  002B72  C0BC  F119         	movff	?___fttol+1,sprintf@val+1
 26324  002B76  C0BD  F11A         	movff	?___fttol+2,sprintf@val+2
 26325  002B7A  C0BE  F11B         	movff	?___fttol+3,sprintf@val+3
 26326                           
 26327                           ;doprnt.c: 1228: while(c--) {
 26328  002B7E  D07B               	goto	l13609
 26329  002B80                     l13599:
 26330                           
 26331                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 26332  002B80  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 26333  002B84  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 26334  002B88  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 26335  002B8C  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 26336  002B90  0101               	movlb	1	; () banked
 26337  002B92  5123               	movf	sprintf@c& (0+255),w,b
 26338  002B94  0D04               	mullw	4
 26339  002B96  0E19               	movlw	low _dpowers
 26340  002B98  24F3               	addwf	prodl,w,c
 26341  002B9A  6EF6               	movwf	tblptrl,c
 26342  002B9C  0EF1               	movlw	high _dpowers
 26343  002B9E  20F4               	addwfc	prodh,w,c
 26344  002BA0  6EF7               	movwf	tblptrh,c
 26345  002BA2                     	if	1	;There are 3 active tblptr bytes
 26346  002BA2  6AF8               	clrf	tblptru,c
 26347  002BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 26348  002BA6  22F8               	addwfc	tblptru,f,c
 26349  002BA8                     	endif
 26350  002BA8  0009               	tblrd		*+
 26351  002BAA  CFF5 F080          	movff	tablat,___lldiv@divisor
 26352  002BAE  0009               	tblrd		*+
 26353  002BB0  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 26354  002BB4  0009               	tblrd		*+
 26355  002BB6  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 26356  002BBA  000A               	tblrd		*-
 26357  002BBC  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 26358  002BC0  EC9D  F03F         	call	___lldiv	;wreg free
 26359  002BC4  C07C  F112         	movff	?___lldiv,sprintf@tmpval
 26360  002BC8  C07D  F113         	movff	?___lldiv+1,sprintf@tmpval+1
 26361  002BCC  C07E  F114         	movff	?___lldiv+2,sprintf@tmpval+2
 26362  002BD0  C07F  F115         	movff	?___lldiv+3,sprintf@tmpval+3
 26363                           
 26364                           ;doprnt.c: 1230: tmpval.vd %= 10;
 26365  002BD4  C112  F089         	movff	sprintf@tmpval,___llmod@dividend
 26366  002BD8  C113  F08A         	movff	sprintf@tmpval+1,___llmod@dividend+1
 26367  002BDC  C114  F08B         	movff	sprintf@tmpval+2,___llmod@dividend+2
 26368  002BE0  C115  F08C         	movff	sprintf@tmpval+3,___llmod@dividend+3
 26369  002BE4  0E0A               	movlw	10
 26370  002BE6  0100               	movlb	0	; () banked
 26371  002BE8  6F8D               	movwf	___llmod@divisor& (0+255),b
 26372  002BEA  0E00               	movlw	0
 26373  002BEC  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 26374  002BEE  0E00               	movlw	0
 26375  002BF0  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 26376  002BF2  0E00               	movlw	0
 26377  002BF4  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 26378  002BF6  EC21  F042         	call	___llmod	;wreg free
 26379  002BFA  C089  F112         	movff	?___llmod,sprintf@tmpval
 26380  002BFE  C08A  F113         	movff	?___llmod+1,sprintf@tmpval+1
 26381  002C02  C08B  F114         	movff	?___llmod+2,sprintf@tmpval+2
 26382  002C06  C08C  F115         	movff	?___llmod+3,sprintf@tmpval+3
 26383                           
 26384                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 26385  002C0A  0101               	movlb	1	; () banked
 26386  002C0C  5112               	movf	sprintf@tmpval& (0+255),w,b
 26387  002C0E  0F30               	addlw	48
 26388  002C10  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26389  002C14  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26390  002C18  6EDF               	movwf	indf2,c
 26391                           
 26392                           ; BSR set to: 1
 26393  002C1A  0100               	movlb	0	; () banked
 26394  002C1C  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26395  002C1E  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26396                           
 26397                           ; BSR set to: 0
 26398                           ;doprnt.c: 1232: val %= dpowers[c];
 26399  002C20  C118  F089         	movff	sprintf@val,___llmod@dividend
 26400  002C24  C119  F08A         	movff	sprintf@val+1,___llmod@dividend+1
 26401  002C28  C11A  F08B         	movff	sprintf@val+2,___llmod@dividend+2
 26402  002C2C  C11B  F08C         	movff	sprintf@val+3,___llmod@dividend+3
 26403  002C30  0101               	movlb	1	; () banked
 26404  002C32  5123               	movf	sprintf@c& (0+255),w,b
 26405  002C34  0D04               	mullw	4
 26406  002C36  0E19               	movlw	low _dpowers
 26407  002C38  24F3               	addwf	prodl,w,c
 26408  002C3A  6EF6               	movwf	tblptrl,c
 26409  002C3C  0EF1               	movlw	high _dpowers
 26410  002C3E  20F4               	addwfc	prodh,w,c
 26411  002C40  6EF7               	movwf	tblptrh,c
 26412  002C42                     	if	1	;There are 3 active tblptr bytes
 26413  002C42  6AF8               	clrf	tblptru,c
 26414  002C44  0E00               	movlw	low (__mediumconst shr (0+16))
 26415  002C46  22F8               	addwfc	tblptru,f,c
 26416  002C48                     	endif
 26417  002C48  0009               	tblrd		*+
 26418  002C4A  CFF5 F08D          	movff	tablat,___llmod@divisor
 26419  002C4E  0009               	tblrd		*+
 26420  002C50  CFF5 F08E          	movff	tablat,___llmod@divisor+1
 26421  002C54  0009               	tblrd		*+
 26422  002C56  CFF5 F08F          	movff	tablat,___llmod@divisor+2
 26423  002C5A  000A               	tblrd		*-
 26424  002C5C  CFF5 F090          	movff	tablat,___llmod@divisor+3
 26425  002C60  EC21  F042         	call	___llmod	;wreg free
 26426  002C64  C089  F118         	movff	?___llmod,sprintf@val
 26427  002C68  C08A  F119         	movff	?___llmod+1,sprintf@val+1
 26428  002C6C  C08B  F11A         	movff	?___llmod+2,sprintf@val+2
 26429  002C70  C08C  F11B         	movff	?___llmod+3,sprintf@val+3
 26430  002C74  D000               	goto	l13609
 26431  002C76                     l13609:
 26432  002C76  0101               	movlb	1	; () banked
 26433  002C78  0723               	decf	sprintf@c& (0+255),f,b
 26434  002C7A  0101               	movlb	1	; () banked
 26435  002C7C  2923               	incf	sprintf@c& (0+255),w,b
 26436  002C7E  B4D8               	btfsc	status,2,c
 26437  002C80  D010               	goto	l13617
 26438  002C82  D77E               	goto	l13599
 26439                           
 26440                           ; BSR set to: 1
 26441                           ;doprnt.c: 1233: }
 26442                           ;doprnt.c: 1235: while(prec) {
 26443  002C84  D00E               	goto	l13617
 26444  002C86                     l13611:
 26445                           
 26446                           ; BSR set to: 1
 26447                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 26448  002C86  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26449  002C8A  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26450  002C8E  0E30               	movlw	48
 26451  002C90  6EDF               	movwf	indf2,c
 26452                           
 26453                           ; BSR set to: 1
 26454  002C92  0100               	movlb	0	; () banked
 26455  002C94  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26456  002C96  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26457                           
 26458                           ; BSR set to: 0
 26459                           ;doprnt.c: 1237: prec--;
 26460  002C98  0101               	movlb	1	; () banked
 26461  002C9A  0710               	decf	sprintf@prec& (0+255),f,b
 26462  002C9C  A0D8               	btfss	status,0,c
 26463  002C9E  0711               	decf	(sprintf@prec+1)& (0+255),f,b
 26464  002CA0  D000               	goto	l13617
 26465  002CA2                     l13617:
 26466                           
 26467                           ; BSR set to: 1
 26468  002CA2  0101               	movlb	1	; () banked
 26469  002CA4  5110               	movf	sprintf@prec& (0+255),w,b
 26470  002CA6  0101               	movlb	1	; () banked
 26471  002CA8  1111               	iorwf	(sprintf@prec+1)& (0+255),w,b
 26472  002CAA  B4D8               	btfsc	status,2,c
 26473  002CAC  D220               	goto	l13735
 26474  002CAE  D7EB               	goto	l13611
 26475                           
 26476                           ; BSR set to: 1
 26477                           ;doprnt.c: 1238: }
 26478                           ;doprnt.c: 1245: continue;
 26479  002CB0  D21E               	goto	l13735
 26480  002CB2                     l2242:
 26481                           
 26482                           ; BSR set to: 1
 26483                           ;doprnt.c: 1246: }
 26484                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 26485  002CB2  0101               	movlb	1	; () banked
 26486  002CB4  BF21               	btfsc	sprintf@flag& (0+255),7,b
 26487  002CB6  D035               	goto	l2290
 26488                           
 26489                           ; BSR set to: 1
 26490                           ;doprnt.c: 1253: {
 26491                           ;doprnt.c: 1255: if(flag & 0x10)
 26492  002CB8  0101               	movlb	1	; () banked
 26493  002CBA  A921               	btfss	sprintf@flag& (0+255),4,b
 26494  002CBC  D00E               	goto	l13625
 26495                           
 26496                           ; BSR set to: 1
 26497                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 26498  002CBE  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26499  002CC2  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26500  002CC6  CFDE F118          	movff	postinc2,sprintf@val
 26501  002CCA  CFDE F119          	movff	postinc2,sprintf@val+1
 26502  002CCE  CFDE F11A          	movff	postinc2,sprintf@val+2
 26503  002CD2  CFDE F11B          	movff	postinc2,sprintf@val+3
 26504                           
 26505                           ; BSR set to: 1
 26506  002CD6  0E04               	movlw	4
 26507  002CD8  D00F               	goto	L18
 26508  002CDA                     l13625:
 26509                           
 26510                           ; BSR set to: 1
 26511                           ;doprnt.c: 1257: else
 26512                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 26513  002CDA  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26514  002CDE  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26515  002CE2  CFDE F118          	movff	postinc2,sprintf@val
 26516  002CE6  CFDD F119          	movff	postdec2,sprintf@val+1
 26517  002CEA  0101               	movlb	1	; () banked
 26518  002CEC  0E00               	movlw	0
 26519  002CEE  BF19               	btfsc	(sprintf@val+1)& (0+255),7,b
 26520  002CF0  0EFF               	movlw	-1
 26521  002CF2  6F1A               	movwf	(sprintf@val+2)& (0+255),b
 26522  002CF4  6F1B               	movwf	(sprintf@val+3)& (0+255),b
 26523                           
 26524                           ; BSR set to: 1
 26525  002CF6  0E02               	movlw	2
 26526  002CF8                     L18:
 26527  002CF8  0101               	movlb	1	; () banked
 26528  002CFA  270E               	addwf	sprintf@ap& (0+255),f,b
 26529  002CFC  0E00               	movlw	0
 26530  002CFE  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26531  002D00  D000               	goto	l13629
 26532  002D02                     l13629:
 26533                           
 26534                           ; BSR set to: 1
 26535                           ;doprnt.c: 1261: if((long)val < 0) {
 26536  002D02  0101               	movlb	1	; () banked
 26537  002D04  AF1B               	btfss	(sprintf@val+3)& (0+255),7,b
 26538  002D06  D08F               	goto	l13673
 26539                           
 26540                           ; BSR set to: 1
 26541                           ;doprnt.c: 1262: flag |= 0x03;
 26542  002D08  0E03               	movlw	3
 26543  002D0A  0101               	movlb	1	; () banked
 26544  002D0C  1321               	iorwf	sprintf@flag& (0+255),f,b
 26545                           
 26546                           ; BSR set to: 1
 26547                           ;doprnt.c: 1263: val = -val;
 26548  002D0E  0101               	movlb	1	; () banked
 26549  002D10  1F1B               	comf	(sprintf@val+3)& (0+255),f,b
 26550  002D12  1F1A               	comf	(sprintf@val+2)& (0+255),f,b
 26551  002D14  1F19               	comf	(sprintf@val+1)& (0+255),f,b
 26552  002D16  6D18               	negf	sprintf@val& (0+255),b
 26553  002D18  0E00               	movlw	0
 26554  002D1A  2319               	addwfc	(sprintf@val+1)& (0+255),f,b
 26555  002D1C  231A               	addwfc	(sprintf@val+2)& (0+255),f,b
 26556  002D1E  231B               	addwfc	(sprintf@val+3)& (0+255),f,b
 26557                           
 26558                           ; BSR set to: 1
 26559                           ;doprnt.c: 1264: }
 26560                           ;doprnt.c: 1266: }
 26561  002D20  D082               	goto	l13673
 26562  002D22                     l2290:
 26563                           
 26564                           ; BSR set to: 1
 26565                           ;doprnt.c: 1268: else
 26566                           ;doprnt.c: 1273: {
 26567                           ;doprnt.c: 1281: if(flag & 0x10)
 26568  002D22  0101               	movlb	1	; () banked
 26569  002D24  A921               	btfss	sprintf@flag& (0+255),4,b
 26570  002D26  D00E               	goto	l13639
 26571                           
 26572                           ; BSR set to: 1
 26573                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 26574  002D28  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26575  002D2C  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26576  002D30  CFDE F118          	movff	postinc2,sprintf@val
 26577  002D34  CFDE F119          	movff	postinc2,sprintf@val+1
 26578  002D38  CFDE F11A          	movff	postinc2,sprintf@val+2
 26579  002D3C  CFDE F11B          	movff	postinc2,sprintf@val+3
 26580                           
 26581                           ; BSR set to: 1
 26582  002D40  0E04               	movlw	4
 26583  002D42  D010               	goto	L19
 26584  002D44                     l13639:
 26585                           
 26586                           ; BSR set to: 1
 26587                           ;doprnt.c: 1283: else
 26588                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 26589  002D44  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26590  002D48  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26591  002D4C  CFDE F100          	movff	postinc2,??_sprintf
 26592  002D50  CFDD F101          	movff	postdec2,??_sprintf+1
 26593  002D54  C100  F118         	movff	??_sprintf,sprintf@val
 26594  002D58  C101  F119         	movff	??_sprintf+1,sprintf@val+1
 26595  002D5C  0101               	movlb	1	; () banked
 26596  002D5E  6B1A               	clrf	(sprintf@val+2)& (0+255),b
 26597  002D60  6B1B               	clrf	(sprintf@val+3)& (0+255),b
 26598                           
 26599                           ; BSR set to: 1
 26600  002D62  0E02               	movlw	2
 26601  002D64                     L19:
 26602  002D64  0101               	movlb	1	; () banked
 26603  002D66  270E               	addwf	sprintf@ap& (0+255),f,b
 26604  002D68  0E00               	movlw	0
 26605  002D6A  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26606                           
 26607                           ; BSR set to: 1
 26608                           ;doprnt.c: 1287: }
 26609                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 26610                           
 26611                           ; BSR set to: 1
 26612  002D6C  D05C               	goto	l13673
 26613  002D6E                     l13643:
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 26617  002D6E  0E01               	movlw	1
 26618  002D70  0101               	movlb	1	; () banked
 26619  002D72  6F23               	movwf	sprintf@c& (0+255),b
 26620  002D74                     l13645:
 26621                           
 26622                           ; BSR set to: 1
 26623  002D74  0E0A               	movlw	10
 26624  002D76  0101               	movlb	1	; () banked
 26625  002D78  1923               	xorwf	sprintf@c& (0+255),w,b
 26626  002D7A  B4D8               	btfsc	status,2,c
 26627  002D7C  D05E               	goto	l13675
 26628  002D7E  D001               	goto	l13649
 26629                           
 26630                           ; BSR set to: 1
 26631  002D80  D05C               	goto	l13675
 26632  002D82                     l13649:
 26633                           
 26634                           ; BSR set to: 1
 26635                           ;doprnt.c: 1306: if(val < dpowers[c])
 26636  002D82  0101               	movlb	1	; () banked
 26637  002D84  5123               	movf	sprintf@c& (0+255),w,b
 26638  002D86  0D04               	mullw	4
 26639  002D88  0E19               	movlw	low _dpowers
 26640  002D8A  24F3               	addwf	prodl,w,c
 26641  002D8C  6EF6               	movwf	tblptrl,c
 26642  002D8E  0EF1               	movlw	high _dpowers
 26643  002D90  20F4               	addwfc	prodh,w,c
 26644  002D92  6EF7               	movwf	tblptrh,c
 26645  002D94                     	if	1	;There are 3 active tblptr bytes
 26646  002D94  6AF8               	clrf	tblptru,c
 26647  002D96  0E00               	movlw	low (__mediumconst shr (0+16))
 26648  002D98  22F8               	addwfc	tblptru,f,c
 26649  002D9A                     	endif
 26650  002D9A  0009               	tblrd		*+
 26651  002D9C  50F5               	movf	tablat,w,c
 26652  002D9E  0101               	movlb	1	; () banked
 26653  002DA0  5D18               	subwf	sprintf@val& (0+255),w,b
 26654  002DA2  0009               	tblrd		*+
 26655  002DA4  50F5               	movf	tablat,w,c
 26656  002DA6  0101               	movlb	1	; () banked
 26657  002DA8  5919               	subwfb	(sprintf@val+1)& (0+255),w,b
 26658  002DAA  0009               	tblrd		*+
 26659  002DAC  50F5               	movf	tablat,w,c
 26660  002DAE  0101               	movlb	1	; () banked
 26661  002DB0  591A               	subwfb	(sprintf@val+2)& (0+255),w,b
 26662  002DB2  0009               	tblrd		*+
 26663  002DB4  50F5               	movf	tablat,w,c
 26664  002DB6  0101               	movlb	1	; () banked
 26665  002DB8  591B               	subwfb	(sprintf@val+3)& (0+255),w,b
 26666  002DBA  A0D8               	btfss	status,0,c
 26667  002DBC  D03E               	goto	l13675
 26668  002DBE  D001               	goto	l13653
 26669                           
 26670                           ; BSR set to: 1
 26671                           ;doprnt.c: 1307: break;
 26672  002DC0  D03C               	goto	l13675
 26673  002DC2                     l13653:
 26674                           
 26675                           ; BSR set to: 1
 26676  002DC2  0101               	movlb	1	; () banked
 26677  002DC4  2B23               	incf	sprintf@c& (0+255),f,b
 26678  002DC6  D7D6               	goto	l13645
 26679                           
 26680                           ; BSR set to: 1
 26681                           ;doprnt.c: 1309: break;
 26682                           
 26683                           ; BSR set to: 1
 26684  002DC8  D038               	goto	l13675
 26685  002DCA                     l13657:
 26686                           
 26687                           ; BSR set to: 1
 26688                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26689  002DCA  0E01               	movlw	1
 26690  002DCC  0101               	movlb	1	; () banked
 26691  002DCE  6F23               	movwf	sprintf@c& (0+255),b
 26692  002DD0                     l13659:
 26693                           
 26694                           ; BSR set to: 1
 26695  002DD0  0E08               	movlw	8
 26696  002DD2  0101               	movlb	1	; () banked
 26697  002DD4  1923               	xorwf	sprintf@c& (0+255),w,b
 26698  002DD6  B4D8               	btfsc	status,2,c
 26699  002DD8  D030               	goto	l13675
 26700  002DDA  D001               	goto	l13663
 26701                           
 26702                           ; BSR set to: 1
 26703  002DDC  D02E               	goto	l13675
 26704  002DDE                     l13663:
 26705                           
 26706                           ; BSR set to: 1
 26707                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26708  002DDE  0101               	movlb	1	; () banked
 26709  002DE0  5123               	movf	sprintf@c& (0+255),w,b
 26710  002DE2  0D04               	mullw	4
 26711  002DE4  0E8F               	movlw	low _hexpowers
 26712  002DE6  24F3               	addwf	prodl,w,c
 26713  002DE8  6EF6               	movwf	tblptrl,c
 26714  002DEA  0EF1               	movlw	high _hexpowers
 26715  002DEC  20F4               	addwfc	prodh,w,c
 26716  002DEE  6EF7               	movwf	tblptrh,c
 26717  002DF0                     	if	1	;There are 3 active tblptr bytes
 26718  002DF0  6AF8               	clrf	tblptru,c
 26719  002DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 26720  002DF4  22F8               	addwfc	tblptru,f,c
 26721  002DF6                     	endif
 26722  002DF6  0009               	tblrd		*+
 26723  002DF8  50F5               	movf	tablat,w,c
 26724  002DFA  0101               	movlb	1	; () banked
 26725  002DFC  5D18               	subwf	sprintf@val& (0+255),w,b
 26726  002DFE  0009               	tblrd		*+
 26727  002E00  50F5               	movf	tablat,w,c
 26728  002E02  0101               	movlb	1	; () banked
 26729  002E04  5919               	subwfb	(sprintf@val+1)& (0+255),w,b
 26730  002E06  0009               	tblrd		*+
 26731  002E08  50F5               	movf	tablat,w,c
 26732  002E0A  0101               	movlb	1	; () banked
 26733  002E0C  591A               	subwfb	(sprintf@val+2)& (0+255),w,b
 26734  002E0E  0009               	tblrd		*+
 26735  002E10  50F5               	movf	tablat,w,c
 26736  002E12  0101               	movlb	1	; () banked
 26737  002E14  591B               	subwfb	(sprintf@val+3)& (0+255),w,b
 26738  002E16  A0D8               	btfss	status,0,c
 26739  002E18  D010               	goto	l13675
 26740  002E1A  D001               	goto	l13667
 26741                           
 26742                           ; BSR set to: 1
 26743                           ;doprnt.c: 1318: break;
 26744  002E1C  D00E               	goto	l13675
 26745  002E1E                     l13667:
 26746                           
 26747                           ; BSR set to: 1
 26748  002E1E  0101               	movlb	1	; () banked
 26749  002E20  2B23               	incf	sprintf@c& (0+255),f,b
 26750  002E22  D7D6               	goto	l13659
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;doprnt.c: 1336: }
 26754                           
 26755                           ; BSR set to: 1
 26756                           ;doprnt.c: 1320: break;
 26757                           
 26758                           ; BSR set to: 1
 26759  002E24  D00A               	goto	l13675
 26760  002E26                     l13673:
 26761                           
 26762                           ; BSR set to: 1
 26763  002E26  0101               	movlb	1	; () banked
 26764  002E28  5121               	movf	sprintf@flag& (0+255),w,b
 26765  002E2A  0B80               	andlw	128
 26766                           
 26767                           ; Switch size 1, requested type "space"
 26768                           ; Number of cases is 2, Range of values is 0 to 128
 26769                           ; switch strategies available:
 26770                           ; Name         Instructions Cycles
 26771                           ; simple_byte            7     4 (average)
 26772                           ;	Chosen strategy is simple_byte
 26773  002E2C  0A00               	xorlw	0	; case 0
 26774  002E2E  B4D8               	btfsc	status,2,c
 26775  002E30  D79E               	goto	l13643
 26776  002E32  0A80               	xorlw	128	; case 128
 26777  002E34  B4D8               	btfsc	status,2,c
 26778  002E36  D7C9               	goto	l13657
 26779  002E38  D000               	goto	l13675
 26780  002E3A                     l13675:
 26781                           
 26782                           ; BSR set to: 1
 26783                           ;doprnt.c: 1345: if(width && flag & 0x03)
 26784  002E3A  0101               	movlb	1	; () banked
 26785  002E3C  511F               	movf	sprintf@width& (0+255),w,b
 26786  002E3E  0101               	movlb	1	; () banked
 26787  002E40  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26788  002E42  B4D8               	btfsc	status,2,c
 26789  002E44  D015               	goto	l13681
 26790                           
 26791                           ; BSR set to: 1
 26792  002E46  0E03               	movlw	3
 26793  002E48  0101               	movlb	1	; () banked
 26794  002E4A  1521               	andwf	sprintf@flag& (0+255),w,b
 26795  002E4C  0101               	movlb	1	; () banked
 26796  002E4E  6F00               	movwf	??_sprintf& (0+255),b
 26797  002E50  0E00               	movlw	0
 26798  002E52  0101               	movlb	1	; () banked
 26799  002E54  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26800  002E56  0101               	movlb	1	; () banked
 26801  002E58  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26802  002E5A  0101               	movlb	1	; () banked
 26803  002E5C  5100               	movf	??_sprintf& (0+255),w,b
 26804  002E5E  0101               	movlb	1	; () banked
 26805  002E60  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26806  002E62  B4D8               	btfsc	status,2,c
 26807  002E64  D005               	goto	l13681
 26808                           
 26809                           ; BSR set to: 1
 26810                           ;doprnt.c: 1346: width--;
 26811  002E66  0101               	movlb	1	; () banked
 26812  002E68  071F               	decf	sprintf@width& (0+255),f,b
 26813  002E6A  A0D8               	btfss	status,0,c
 26814  002E6C  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26815  002E6E  D000               	goto	l13681
 26816  002E70                     l13681:
 26817                           
 26818                           ; BSR set to: 1
 26819                           ;doprnt.c: 1381: if(width > c)
 26820  002E70  0E80               	movlw	128
 26821  002E72  0101               	movlb	1	; () banked
 26822  002E74  BF23               	btfsc	sprintf@c& (0+255),7,b
 26823  002E76  0E7F               	movlw	127
 26824  002E78  0101               	movlb	1	; () banked
 26825  002E7A  6F00               	movwf	??_sprintf& (0+255),b
 26826  002E7C  0101               	movlb	1	; () banked
 26827  002E7E  511F               	movf	sprintf@width& (0+255),w,b
 26828  002E80  0101               	movlb	1	; () banked
 26829  002E82  5D23               	subwf	sprintf@c& (0+255),w,b
 26830  002E84  0101               	movlb	1	; () banked
 26831  002E86  5120               	movf	(sprintf@width+1)& (0+255),w,b
 26832  002E88  0A80               	xorlw	128
 26833  002E8A  0101               	movlb	1	; () banked
 26834  002E8C  5900               	subwfb	??_sprintf& (0+255),w,b
 26835  002E8E  B0D8               	btfsc	status,0,c
 26836  002E90  D00B               	goto	l13685
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;doprnt.c: 1382: width -= c;
 26840  002E92  0101               	movlb	1	; () banked
 26841  002E94  5123               	movf	sprintf@c& (0+255),w,b
 26842  002E96  0101               	movlb	1	; () banked
 26843  002E98  5F1F               	subwf	sprintf@width& (0+255),f,b
 26844  002E9A  0E00               	movlw	0
 26845  002E9C  0101               	movlb	1	; () banked
 26846  002E9E  BF23               	btfsc	sprintf@c& (0+255),7,b
 26847  002EA0  0EFF               	movlw	255
 26848  002EA2  0101               	movlb	1	; () banked
 26849  002EA4  5B20               	subwfb	(sprintf@width+1)& (0+255),f,b
 26850  002EA6  D006               	goto	l13687
 26851  002EA8                     l13685:
 26852                           
 26853                           ; BSR set to: 1
 26854                           ;doprnt.c: 1383: else
 26855                           ;doprnt.c: 1384: width = 0;
 26856  002EA8  0E00               	movlw	0
 26857  002EAA  0101               	movlb	1	; () banked
 26858  002EAC  6F20               	movwf	(sprintf@width+1)& (0+255),b
 26859  002EAE  0E00               	movlw	0
 26860  002EB0  6F1F               	movwf	sprintf@width& (0+255),b
 26861  002EB2  D000               	goto	l13687
 26862  002EB4                     l13687:
 26863                           
 26864                           ; BSR set to: 1
 26865                           ;doprnt.c: 1387: if(flag & 0x04) {
 26866  002EB4  0101               	movlb	1	; () banked
 26867  002EB6  A521               	btfss	sprintf@flag& (0+255),2,b
 26868  002EB8  D035               	goto	l13703
 26869                           
 26870                           ; BSR set to: 1
 26871                           ;doprnt.c: 1392: if(flag & 0x03)
 26872  002EBA  0E03               	movlw	3
 26873  002EBC  0101               	movlb	1	; () banked
 26874  002EBE  1521               	andwf	sprintf@flag& (0+255),w,b
 26875  002EC0  0101               	movlb	1	; () banked
 26876  002EC2  6F00               	movwf	??_sprintf& (0+255),b
 26877  002EC4  0E00               	movlw	0
 26878  002EC6  0101               	movlb	1	; () banked
 26879  002EC8  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26880  002ECA  0101               	movlb	1	; () banked
 26881  002ECC  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26882  002ECE  0101               	movlb	1	; () banked
 26883  002ED0  5100               	movf	??_sprintf& (0+255),w,b
 26884  002ED2  0101               	movlb	1	; () banked
 26885  002ED4  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26886  002ED6  B4D8               	btfsc	status,2,c
 26887  002ED8  D00A               	goto	l13695
 26888                           
 26889                           ; BSR set to: 1
 26890                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 26891  002EDA  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26892  002EDE  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26893  002EE2  0E2D               	movlw	45
 26894  002EE4  6EDF               	movwf	indf2,c
 26895                           
 26896                           ; BSR set to: 1
 26897  002EE6  0100               	movlb	0	; () banked
 26898  002EE8  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26899  002EEA  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26900  002EEC  D000               	goto	l13695
 26901  002EEE                     l13695:
 26902                           
 26903                           ;doprnt.c: 1415: if(width)
 26904  002EEE  0101               	movlb	1	; () banked
 26905  002EF0  511F               	movf	sprintf@width& (0+255),w,b
 26906  002EF2  0101               	movlb	1	; () banked
 26907  002EF4  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26908  002EF6  B4D8               	btfsc	status,2,c
 26909  002EF8  D04A               	goto	l13717
 26910  002EFA                     l13697:
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 26914  002EFA  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26915  002EFE  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26916  002F02  0E30               	movlw	48
 26917  002F04  6EDF               	movwf	indf2,c
 26918                           
 26919                           ; BSR set to: 1
 26920  002F06  0100               	movlb	0	; () banked
 26921  002F08  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26922  002F0A  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26923                           
 26924                           ; BSR set to: 0
 26925                           ;doprnt.c: 1418: while(--width);
 26926  002F0C  0101               	movlb	1	; () banked
 26927  002F0E  071F               	decf	sprintf@width& (0+255),f,b
 26928  002F10  A0D8               	btfss	status,0,c
 26929  002F12  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26930  002F14  0101               	movlb	1	; () banked
 26931  002F16  511F               	movf	sprintf@width& (0+255),w,b
 26932  002F18  0101               	movlb	1	; () banked
 26933  002F1A  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26934  002F1C  B4D8               	btfsc	status,2,c
 26935  002F1E  D037               	goto	l13717
 26936  002F20  D7EC               	goto	l13697
 26937                           
 26938                           ; BSR set to: 1
 26939                           ;doprnt.c: 1420: } else
 26940                           
 26941                           ; BSR set to: 1
 26942  002F22  D035               	goto	l13717
 26943  002F24                     l13703:
 26944                           
 26945                           ; BSR set to: 1
 26946                           ;doprnt.c: 1422: {
 26947                           ;doprnt.c: 1424: if(width
 26948                           ;doprnt.c: 1428: )
 26949  002F24  0101               	movlb	1	; () banked
 26950  002F26  511F               	movf	sprintf@width& (0+255),w,b
 26951  002F28  0101               	movlb	1	; () banked
 26952  002F2A  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26953  002F2C  B4D8               	btfsc	status,2,c
 26954  002F2E  D015               	goto	l13711
 26955  002F30                     l13705:
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 26959  002F30  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26960  002F34  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26961  002F38  0E20               	movlw	32
 26962  002F3A  6EDF               	movwf	indf2,c
 26963                           
 26964                           ; BSR set to: 1
 26965  002F3C  0100               	movlb	0	; () banked
 26966  002F3E  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26967  002F40  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26968                           
 26969                           ; BSR set to: 0
 26970                           ;doprnt.c: 1431: while(--width);
 26971  002F42  0101               	movlb	1	; () banked
 26972  002F44  071F               	decf	sprintf@width& (0+255),f,b
 26973  002F46  A0D8               	btfss	status,0,c
 26974  002F48  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26975  002F4A  0101               	movlb	1	; () banked
 26976  002F4C  511F               	movf	sprintf@width& (0+255),w,b
 26977  002F4E  0101               	movlb	1	; () banked
 26978  002F50  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26979  002F52  B4D8               	btfsc	status,2,c
 26980  002F54  D002               	goto	l13711
 26981  002F56  D7EC               	goto	l13705
 26982                           
 26983                           ; BSR set to: 1
 26984  002F58  D000               	goto	l13711
 26985  002F5A                     l13711:
 26986                           
 26987                           ; BSR set to: 1
 26988                           ;doprnt.c: 1438: if(flag & 0x03)
 26989  002F5A  0E03               	movlw	3
 26990  002F5C  0101               	movlb	1	; () banked
 26991  002F5E  1521               	andwf	sprintf@flag& (0+255),w,b
 26992  002F60  0101               	movlb	1	; () banked
 26993  002F62  6F00               	movwf	??_sprintf& (0+255),b
 26994  002F64  0E00               	movlw	0
 26995  002F66  0101               	movlb	1	; () banked
 26996  002F68  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26997  002F6A  0101               	movlb	1	; () banked
 26998  002F6C  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26999  002F6E  0101               	movlb	1	; () banked
 27000  002F70  5100               	movf	??_sprintf& (0+255),w,b
 27001  002F72  0101               	movlb	1	; () banked
 27002  002F74  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 27003  002F76  B4D8               	btfsc	status,2,c
 27004  002F78  D00A               	goto	l13717
 27005                           
 27006                           ; BSR set to: 1
 27007                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 27008  002F7A  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 27009  002F7E  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 27010  002F82  0E2D               	movlw	45
 27011  002F84  6EDF               	movwf	indf2,c
 27012                           
 27013                           ; BSR set to: 1
 27014  002F86  0100               	movlb	0	; () banked
 27015  002F88  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 27016  002F8A  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 27017                           
 27018                           ; BSR set to: 0
 27019  002F8C  D000               	goto	l13717
 27020  002F8E                     l13717:
 27021                           
 27022                           ;doprnt.c: 1469: }
 27023                           ;doprnt.c: 1472: prec = c;
 27024  002F8E  0101               	movlb	1	; () banked
 27025  002F90  5123               	movf	sprintf@c& (0+255),w,b
 27026  002F92  0101               	movlb	1	; () banked
 27027  002F94  6F10               	movwf	sprintf@prec& (0+255),b
 27028  002F96  6B11               	clrf	(sprintf@prec+1)& (0+255),b
 27029  002F98  BF10               	btfsc	sprintf@prec& (0+255),7,b
 27030  002F9A  0711               	decf	(sprintf@prec+1)& (0+255),f,b
 27031                           
 27032                           ;doprnt.c: 1474: while(prec--) {
 27033  002F9C  D09B               	goto	l13733
 27034                           
 27035                           ; BSR set to: 1
 27036                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 27037  002F9E  D086               	goto	l13727
 27038  002FA0                     l13719:
 27039                           
 27040                           ; BSR set to: 1
 27041                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 27042  002FA0  C110  F100         	movff	sprintf@prec,??_sprintf
 27043  002FA4  C111  F101         	movff	sprintf@prec+1,??_sprintf+1
 27044  002FA8  0101               	movlb	1	; () banked
 27045  002FAA  90D8               	bcf	status,0,c
 27046  002FAC  3700               	rlcf	??_sprintf& (0+255),f,b
 27047  002FAE  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27048  002FB0  0101               	movlb	1	; () banked
 27049  002FB2  90D8               	bcf	status,0,c
 27050  002FB4  3700               	rlcf	??_sprintf& (0+255),f,b
 27051  002FB6  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27052  002FB8  0E19               	movlw	low _dpowers
 27053  002FBA  0101               	movlb	1	; () banked
 27054  002FBC  2500               	addwf	??_sprintf& (0+255),w,b
 27055  002FBE  6EF6               	movwf	tblptrl,c
 27056  002FC0  0EF1               	movlw	high _dpowers
 27057  002FC2  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
 27058  002FC4  6EF7               	movwf	tblptrh,c
 27059  002FC6                     	if	1	;There are 3 active tblptr bytes
 27060  002FC6  6AF8               	clrf	tblptru,c
 27061  002FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 27062  002FCA  22F8               	addwfc	tblptru,f,c
 27063  002FCC                     	endif
 27064  002FCC  0009               	tblrd		*+
 27065  002FCE  CFF5 F080          	movff	tablat,___lldiv@divisor
 27066  002FD2  0009               	tblrd		*+
 27067  002FD4  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 27068  002FD8  0009               	tblrd		*+
 27069  002FDA  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 27070  002FDE  000A               	tblrd		*-
 27071  002FE0  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 27072  002FE4  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 27073  002FE8  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 27074  002FEC  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 27075  002FF0  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 27076  002FF4  EC9D  F03F         	call	___lldiv	;wreg free
 27077  002FF8  C07C  F089         	movff	?___lldiv,___llmod@dividend
 27078  002FFC  C07D  F08A         	movff	?___lldiv+1,___llmod@dividend+1
 27079  003000  C07E  F08B         	movff	?___lldiv+2,___llmod@dividend+2
 27080  003004  C07F  F08C         	movff	?___lldiv+3,___llmod@dividend+3
 27081  003008  0E0A               	movlw	10
 27082  00300A  0100               	movlb	0	; () banked
 27083  00300C  6F8D               	movwf	___llmod@divisor& (0+255),b
 27084  00300E  0E00               	movlw	0
 27085  003010  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 27086  003012  0E00               	movlw	0
 27087  003014  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 27088  003016  0E00               	movlw	0
 27089  003018  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 27090  00301A  EC21  F042         	call	___llmod	;wreg free
 27091  00301E  0100               	movlb	0	; () banked
 27092  003020  5189               	movf	?___llmod& (0+255),w,b
 27093  003022  0F30               	addlw	48
 27094  003024  0101               	movlb	1	; () banked
 27095  003026  6F23               	movwf	sprintf@c& (0+255),b
 27096                           
 27097                           ;doprnt.c: 1491: break;
 27098  003028  D04B               	goto	l13729
 27099  00302A                     l13721:
 27100                           
 27101                           ; BSR set to: 1
 27102                           ;doprnt.c: 1499: {
 27103                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 27104  00302A  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 27105  00302E  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 27106  003032  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 27107  003036  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 27108  00303A  C110  F100         	movff	sprintf@prec,??_sprintf
 27109  00303E  C111  F101         	movff	sprintf@prec+1,??_sprintf+1
 27110  003042  0101               	movlb	1	; () banked
 27111  003044  90D8               	bcf	status,0,c
 27112  003046  3700               	rlcf	??_sprintf& (0+255),f,b
 27113  003048  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27114  00304A  0101               	movlb	1	; () banked
 27115  00304C  90D8               	bcf	status,0,c
 27116  00304E  3700               	rlcf	??_sprintf& (0+255),f,b
 27117  003050  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27118  003052  0E8F               	movlw	low _hexpowers
 27119  003054  0101               	movlb	1	; () banked
 27120  003056  2500               	addwf	??_sprintf& (0+255),w,b
 27121  003058  6EF6               	movwf	tblptrl,c
 27122  00305A  0EF1               	movlw	high _hexpowers
 27123  00305C  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
 27124  00305E  6EF7               	movwf	tblptrh,c
 27125  003060                     	if	1	;There are 3 active tblptr bytes
 27126  003060  6AF8               	clrf	tblptru,c
 27127  003062  0E00               	movlw	low (__mediumconst shr (0+16))
 27128  003064  22F8               	addwfc	tblptru,f,c
 27129  003066                     	endif
 27130  003066  0009               	tblrd		*+
 27131  003068  CFF5 F080          	movff	tablat,___lldiv@divisor
 27132  00306C  0009               	tblrd		*+
 27133  00306E  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 27134  003072  0009               	tblrd		*+
 27135  003074  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 27136  003078  000A               	tblrd		*-
 27137  00307A  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 27138  00307E  EC9D  F03F         	call	___lldiv	;wreg free
 27139  003082  0100               	movlb	0	; () banked
 27140  003084  517C               	movf	?___lldiv& (0+255),w,b
 27141  003086  0B0F               	andlw	15
 27142  003088  0101               	movlb	1	; () banked
 27143  00308A  6F09               	movwf	sprintf@idx& (0+255),b
 27144                           
 27145                           ; BSR set to: 1
 27146                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 27147  00308C  0101               	movlb	1	; () banked
 27148  00308E  5109               	movf	sprintf@idx& (0+255),w,b
 27149  003090  0D01               	mullw	1
 27150  003092  0E1E               	movlw	low STR_152
 27151  003094  24F3               	addwf	prodl,w,c
 27152  003096  6EF6               	movwf	tblptrl,c
 27153  003098  0EFE               	movlw	high STR_152
 27154  00309A  20F4               	addwfc	prodh,w,c
 27155  00309C  6EF7               	movwf	tblptrh,c
 27156  00309E                     	if	1	;There are 3 active tblptr bytes
 27157  00309E  6AF8               	clrf	tblptru,c
 27158  0030A0  0E00               	movlw	low (__mediumconst shr (0+16))
 27159  0030A2  22F8               	addwfc	tblptru,f,c
 27160  0030A4                     	endif
 27161  0030A4  0008               	tblrd		*
 27162  0030A6  CFF5 F123          	movff	tablat,sprintf@c
 27163                           
 27164                           ; BSR set to: 1
 27165                           ;doprnt.c: 1523: }
 27166                           
 27167                           ;doprnt.c: 1508: }
 27168                           ;doprnt.c: 1510: break;
 27169  0030AA  D00A               	goto	l13729
 27170  0030AC                     l13727:
 27171                           
 27172                           ; BSR set to: 1
 27173  0030AC  0101               	movlb	1	; () banked
 27174  0030AE  5121               	movf	sprintf@flag& (0+255),w,b
 27175  0030B0  0B80               	andlw	128
 27176                           
 27177                           ; Switch size 1, requested type "space"
 27178                           ; Number of cases is 2, Range of values is 0 to 128
 27179                           ; switch strategies available:
 27180                           ; Name         Instructions Cycles
 27181                           ; simple_byte            7     4 (average)
 27182                           ;	Chosen strategy is simple_byte
 27183  0030B2  0A00               	xorlw	0	; case 0
 27184  0030B4  B4D8               	btfsc	status,2,c
 27185  0030B6  D774               	goto	l13719
 27186  0030B8  0A80               	xorlw	128	; case 128
 27187  0030BA  B4D8               	btfsc	status,2,c
 27188  0030BC  D7B6               	goto	l13721
 27189  0030BE  D000               	goto	l13729
 27190  0030C0                     l13729:
 27191                           
 27192                           ; BSR set to: 1
 27193                           ;doprnt.c: 1524: ((*sp++ = (c)));
 27194  0030C0  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 27195  0030C4  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 27196  0030C8  C123  FFDF         	movff	sprintf@c,indf2
 27197                           
 27198                           ; BSR set to: 1
 27199  0030CC  0100               	movlb	0	; () banked
 27200  0030CE  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 27201  0030D0  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 27202  0030D2  D000               	goto	l13733
 27203  0030D4                     l13733:
 27204  0030D4  0101               	movlb	1	; () banked
 27205  0030D6  0710               	decf	sprintf@prec& (0+255),f,b
 27206  0030D8  A0D8               	btfss	status,0,c
 27207  0030DA  0711               	decf	(sprintf@prec+1)& (0+255),f,b
 27208  0030DC  0101               	movlb	1	; () banked
 27209  0030DE  2910               	incf	sprintf@prec& (0+255),w,b
 27210  0030E0  E1E5               	bnz	l13727
 27211  0030E2  0101               	movlb	1	; () banked
 27212  0030E4  2911               	incf	(sprintf@prec+1)& (0+255),w,b
 27213  0030E6  B4D8               	btfsc	status,2,c
 27214  0030E8  D002               	goto	l13735
 27215  0030EA  D7E0               	goto	l13727
 27216                           
 27217                           ; BSR set to: 1
 27218  0030EC  D000               	goto	l13735
 27219  0030EE                     l13735:
 27220  0030EE  C0CC  FFF6         	movff	sprintf@f,tblptrl
 27221  0030F2  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 27222  0030F6  0100               	movlb	0	; () banked
 27223  0030F8  4BCC               	infsnz	sprintf@f& (0+255),f,b
 27224  0030FA  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 27225  0030FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27226  0030FC  6AF8               	clrf	tblptru,c
 27227  0030FE                     	endif
 27228  0030FE                     	if	0	;tblptru may be non-zero
 27229  0030FE                     	endif
 27230  0030FE  0008               	tblrd		*
 27231  003100  CFF5 F123          	movff	tablat,sprintf@c
 27232  003104  0101               	movlb	1	; () banked
 27233  003106  5123               	movf	sprintf@c& (0+255),w,b
 27234  003108  B4D8               	btfsc	status,2,c
 27235  00310A  D003               	goto	l13737
 27236  00310C  EFF7  F010         	goto	l13363
 27237                           
 27238                           ; BSR set to: 1
 27239  003110  D000               	goto	l13737
 27240  003112                     l13737:
 27241                           
 27242                           ;doprnt.c: 1538: *sp = 0;
 27243  003112  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 27244  003116  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 27245  00311A  0E00               	movlw	0
 27246  00311C  6EDF               	movwf	indf2,c
 27247  00311E  0012               	return	
 27248                           
 27249                           ;doprnt.c: 1540: return 0;
 27250                           ;	Return value of _sprintf is never used
 27251  003120  0012               	return		;funcret
 27252  003122                     __end_of_sprintf:
 27253                           	opt stack 0
 27254                           tblptru	equ	0xFF8
 27255                           tblptrh	equ	0xFF7
 27256                           tblptrl	equ	0xFF6
 27257                           tablat	equ	0xFF5
 27258                           prodh	equ	0xFF4
 27259                           prodl	equ	0xFF3
 27260                           intcon	equ	0xFF2
 27261                           intcon2	equ	0xFF1
 27262                           indf0	equ	0xFEF
 27263                           postinc0	equ	0xFEE
 27264                           fsr0h	equ	0xFEA
 27265                           fsr0l	equ	0xFE9
 27266                           wreg	equ	0xFE8
 27267                           indf1	equ	0xFE7
 27268                           postdec1	equ	0xFE5
 27269                           fsr1h	equ	0xFE2
 27270                           fsr1l	equ	0xFE1
 27271                           indf2	equ	0xFDF
 27272                           postinc2	equ	0xFDE
 27273                           postdec2	equ	0xFDD
 27274                           fsr2h	equ	0xFDA
 27275                           fsr2l	equ	0xFD9
 27276                           status	equ	0xFD8
 27277                           
 27278 ;; *************** function _scale *****************
 27279 ;; Defined at:
 27280 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27281 ;; Parameters:    Size  Location     Type
 27282 ;;  scl             1    wreg     char 
 27283 ;; Auto vars:     Size  Location     Type
 27284 ;;  scl             1   75[BANK0 ] char 
 27285 ;; Return value:  Size  Location     Type
 27286 ;;                  3   69[BANK0 ] char 
 27287 ;; Registers used:
 27288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27289 ;; Tracked objects:
 27290 ;;		On entry : 0/0
 27291 ;;		On exit  : 0/0
 27292 ;;		Unchanged: 0/0
 27293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27294 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27295 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27297 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27298 ;;Total ram usage:        7 bytes
 27299 ;; Hardware stack levels used:    1
 27300 ;; Hardware stack levels required when called:    8
 27301 ;; This function calls:
 27302 ;;		___awdiv
 27303 ;;		___awmod
 27304 ;;		___ftmul
 27305 ;;		___wmul
 27306 ;; This function is called by:
 27307 ;;		_sprintf
 27308 ;; This function uses a non-reentrant model
 27309 ;;
 27310                           
 27311                           	psect	text60
 27312  00435C                     __ptext60:
 27313                           	opt stack 0
 27314  00435C                     _scale:
 27315                           	opt stack 20
 27316                           
 27317                           ;incstack = 0
 27318                           ;scale@scl stored from wreg
 27319  00435C  0100               	movlb	0	; () banked
 27320  00435E  6FAB               	movwf	scale@scl& (0+255),b
 27321                           
 27322                           ; BSR set to: 0
 27323                           ;doprnt.c: 428: if(scl < 0) {
 27324  004360  0100               	movlb	0	; () banked
 27325  004362  AFAB               	btfss	scale@scl& (0+255),7,b
 27326  004364  D13F               	goto	l12939
 27327                           
 27328                           ; BSR set to: 0
 27329                           ;doprnt.c: 429: scl = -scl;
 27330  004366  0100               	movlb	0	; () banked
 27331  004368  6DAB               	negf	scale@scl& (0+255),b
 27332                           
 27333                           ;doprnt.c: 430: if(scl>=110)
 27334  00436A  0100               	movlb	0	; () banked
 27335  00436C  51AB               	movf	scale@scl& (0+255),w,b
 27336  00436E  0A80               	xorlw	128
 27337  004370  0F12               	addlw	-238
 27338  004372  A0D8               	btfss	status,0,c
 27339  004374  D0B6               	goto	l12929
 27340                           
 27341                           ; BSR set to: 0
 27342                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27343  004376  0E00               	movlw	0
 27344  004378  0100               	movlb	0	; () banked
 27345  00437A  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27346  00437C  0E03               	movlw	3
 27347  00437E  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27348  004380  0E00               	movlw	0
 27349  004382  0100               	movlb	0	; () banked
 27350  004384  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27351  004386  0E0A               	movlw	10
 27352  004388  6F84               	movwf	___awdiv@divisor& (0+255),b
 27353  00438A  0E00               	movlw	0
 27354  00438C  0100               	movlb	0	; () banked
 27355  00438E  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27356  004390  0E64               	movlw	100
 27357  004392  6F7E               	movwf	___awmod@divisor& (0+255),b
 27358  004394  0100               	movlb	0	; () banked
 27359  004396  51AB               	movf	scale@scl& (0+255),w,b
 27360  004398  0100               	movlb	0	; () banked
 27361  00439A  6F7C               	movwf	___awmod@dividend& (0+255),b
 27362  00439C  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27363  00439E  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27364  0043A0  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27365  0043A2  EC17  F041         	call	___awmod	;wreg free
 27366  0043A6  C07C  F082         	movff	?___awmod,___awdiv@dividend
 27367  0043AA  C07D  F083         	movff	?___awmod+1,___awdiv@dividend+1
 27368  0043AE  EC6A  F03E         	call	___awdiv	;wreg free
 27369  0043B2  0E09               	movlw	9
 27370  0043B4  0100               	movlb	0	; () banked
 27371  0043B6  2582               	addwf	?___awdiv& (0+255),w,b
 27372  0043B8  0100               	movlb	0	; () banked
 27373  0043BA  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27374  0043BC  0E00               	movlw	0
 27375  0043BE  0100               	movlb	0	; () banked
 27376  0043C0  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27377  0043C2  0100               	movlb	0	; () banked
 27378  0043C4  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27379  0043C6  EC11  F049         	call	___wmul	;wreg free
 27380  0043CA  0E41               	movlw	low __npowers_
 27381  0043CC  0100               	movlb	0	; () banked
 27382  0043CE  258A               	addwf	?___wmul& (0+255),w,b
 27383  0043D0  6EF6               	movwf	tblptrl,c
 27384  0043D2  0EF1               	movlw	high __npowers_
 27385  0043D4  0100               	movlb	0	; () banked
 27386  0043D6  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27387  0043D8  6EF7               	movwf	tblptrh,c
 27388  0043DA                     	if	1	;There are 3 active tblptr bytes
 27389  0043DA  6AF8               	clrf	tblptru,c
 27390  0043DC  0E00               	movlw	low (__mediumconst shr (0+16))
 27391  0043DE  22F8               	addwfc	tblptru,f,c
 27392  0043E0                     	endif
 27393  0043E0  0009               	tblrd		*+
 27394  0043E2  CFF5 F099          	movff	tablat,___ftmul@f2
 27395  0043E6  0009               	tblrd		*+
 27396  0043E8  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27397  0043EC  000A               	tblrd		*-
 27398  0043EE  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27399  0043F2  0E00               	movlw	0
 27400  0043F4  0100               	movlb	0	; () banked
 27401  0043F6  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27402  0043F8  0E64               	movlw	100
 27403  0043FA  6F84               	movwf	___awdiv@divisor& (0+255),b
 27404  0043FC  0100               	movlb	0	; () banked
 27405  0043FE  51AB               	movf	scale@scl& (0+255),w,b
 27406  004400  0100               	movlb	0	; () banked
 27407  004402  6F82               	movwf	___awdiv@dividend& (0+255),b
 27408  004404  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27409  004406  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27410  004408  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27411  00440A  EC6A  F03E         	call	___awdiv	;wreg free
 27412  00440E  0E12               	movlw	18
 27413  004410  0100               	movlb	0	; () banked
 27414  004412  2582               	addwf	?___awdiv& (0+255),w,b
 27415  004414  0100               	movlb	0	; () banked
 27416  004416  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27417  004418  0E00               	movlw	0
 27418  00441A  0100               	movlb	0	; () banked
 27419  00441C  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27420  00441E  0100               	movlb	0	; () banked
 27421  004420  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27422  004422  0E00               	movlw	0
 27423  004424  0100               	movlb	0	; () banked
 27424  004426  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27425  004428  0E03               	movlw	3
 27426  00442A  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27427  00442C  EC11  F049         	call	___wmul	;wreg free
 27428  004430  0E41               	movlw	low __npowers_
 27429  004432  0100               	movlb	0	; () banked
 27430  004434  258A               	addwf	?___wmul& (0+255),w,b
 27431  004436  6EF6               	movwf	tblptrl,c
 27432  004438  0EF1               	movlw	high __npowers_
 27433  00443A  0100               	movlb	0	; () banked
 27434  00443C  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27435  00443E  6EF7               	movwf	tblptrh,c
 27436  004440                     	if	1	;There are 3 active tblptr bytes
 27437  004440  6AF8               	clrf	tblptru,c
 27438  004442  0E00               	movlw	low (__mediumconst shr (0+16))
 27439  004444  22F8               	addwfc	tblptru,f,c
 27440  004446                     	endif
 27441  004446  0009               	tblrd		*+
 27442  004448  CFF5 F096          	movff	tablat,___ftmul@f1
 27443  00444C  0009               	tblrd		*+
 27444  00444E  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27445  004452  000A               	tblrd		*-
 27446  004454  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27447  004458  EC66  F037         	call	___ftmul	;wreg free
 27448  00445C  C096  F0A8         	movff	?___ftmul,_scale$3809
 27449  004460  C097  F0A9         	movff	?___ftmul+1,_scale$3809+1
 27450  004464  C098  F0AA         	movff	?___ftmul+2,_scale$3809+2
 27451                           
 27452                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27453  004468  C0A8  F096         	movff	_scale$3809,___ftmul@f1
 27454  00446C  C0A9  F097         	movff	_scale$3809+1,___ftmul@f1+1
 27455  004470  C0AA  F098         	movff	_scale$3809+2,___ftmul@f1+2
 27456  004474  0E00               	movlw	0
 27457  004476  0100               	movlb	0	; () banked
 27458  004478  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27459  00447A  0E03               	movlw	3
 27460  00447C  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27461  00447E  0E00               	movlw	0
 27462  004480  0100               	movlb	0	; () banked
 27463  004482  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27464  004484  0E0A               	movlw	10
 27465  004486  6F7E               	movwf	___awmod@divisor& (0+255),b
 27466  004488  0100               	movlb	0	; () banked
 27467  00448A  51AB               	movf	scale@scl& (0+255),w,b
 27468  00448C  0100               	movlb	0	; () banked
 27469  00448E  6F7C               	movwf	___awmod@dividend& (0+255),b
 27470  004490  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27471  004492  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27472  004494  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27473  004496  EC17  F041         	call	___awmod	;wreg free
 27474  00449A  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27475  00449E  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27476  0044A2  EC11  F049         	call	___wmul	;wreg free
 27477  0044A6  0E41               	movlw	low __npowers_
 27478  0044A8  0100               	movlb	0	; () banked
 27479  0044AA  258A               	addwf	?___wmul& (0+255),w,b
 27480  0044AC  6EF6               	movwf	tblptrl,c
 27481  0044AE  0EF1               	movlw	high __npowers_
 27482  0044B0  0100               	movlb	0	; () banked
 27483  0044B2  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27484  0044B4  6EF7               	movwf	tblptrh,c
 27485  0044B6                     	if	1	;There are 3 active tblptr bytes
 27486  0044B6  6AF8               	clrf	tblptru,c
 27487  0044B8  0E00               	movlw	low (__mediumconst shr (0+16))
 27488  0044BA  22F8               	addwfc	tblptru,f,c
 27489  0044BC                     	endif
 27490  0044BC  0009               	tblrd		*+
 27491  0044BE  CFF5 F099          	movff	tablat,___ftmul@f2
 27492  0044C2  0009               	tblrd		*+
 27493  0044C4  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27494  0044C8  000A               	tblrd		*-
 27495  0044CA  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27496  0044CE  EC66  F037         	call	___ftmul	;wreg free
 27497  0044D2  C096  F0A5         	movff	?___ftmul,?_scale
 27498  0044D6  C097  F0A6         	movff	?___ftmul+1,?_scale+1
 27499  0044DA  C098  F0A7         	movff	?___ftmul+2,?_scale+2
 27500  0044DE  0012               	return	
 27501  0044E0  D06B               	goto	l12935
 27502  0044E2                     l12929:
 27503                           
 27504                           ;doprnt.c: 432: else if(scl > 10)
 27505  0044E2  0100               	movlb	0	; () banked
 27506  0044E4  51AB               	movf	scale@scl& (0+255),w,b
 27507  0044E6  0A80               	xorlw	128
 27508  0044E8  0F75               	addlw	-139
 27509  0044EA  A0D8               	btfss	status,0,c
 27510  0044EC  D065               	goto	l12935
 27511                           
 27512                           ; BSR set to: 0
 27513                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27514  0044EE  0E00               	movlw	0
 27515  0044F0  0100               	movlb	0	; () banked
 27516  0044F2  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27517  0044F4  0E0A               	movlw	10
 27518  0044F6  6F84               	movwf	___awdiv@divisor& (0+255),b
 27519  0044F8  0100               	movlb	0	; () banked
 27520  0044FA  51AB               	movf	scale@scl& (0+255),w,b
 27521  0044FC  0100               	movlb	0	; () banked
 27522  0044FE  6F82               	movwf	___awdiv@dividend& (0+255),b
 27523  004500  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27524  004502  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27525  004504  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27526  004506  EC6A  F03E         	call	___awdiv	;wreg free
 27527  00450A  0E09               	movlw	9
 27528  00450C  0100               	movlb	0	; () banked
 27529  00450E  2582               	addwf	?___awdiv& (0+255),w,b
 27530  004510  0100               	movlb	0	; () banked
 27531  004512  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27532  004514  0E00               	movlw	0
 27533  004516  0100               	movlb	0	; () banked
 27534  004518  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27535  00451A  0100               	movlb	0	; () banked
 27536  00451C  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27537  00451E  0E00               	movlw	0
 27538  004520  0100               	movlb	0	; () banked
 27539  004522  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27540  004524  0E03               	movlw	3
 27541  004526  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27542  004528  EC11  F049         	call	___wmul	;wreg free
 27543  00452C  0E41               	movlw	low __npowers_
 27544  00452E  0100               	movlb	0	; () banked
 27545  004530  258A               	addwf	?___wmul& (0+255),w,b
 27546  004532  6EF6               	movwf	tblptrl,c
 27547  004534  0EF1               	movlw	high __npowers_
 27548  004536  0100               	movlb	0	; () banked
 27549  004538  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27550  00453A  6EF7               	movwf	tblptrh,c
 27551  00453C                     	if	1	;There are 3 active tblptr bytes
 27552  00453C  6AF8               	clrf	tblptru,c
 27553  00453E  0E00               	movlw	low (__mediumconst shr (0+16))
 27554  004540  22F8               	addwfc	tblptru,f,c
 27555  004542                     	endif
 27556  004542  0009               	tblrd		*+
 27557  004544  CFF5 F096          	movff	tablat,___ftmul@f1
 27558  004548  0009               	tblrd		*+
 27559  00454A  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27560  00454E  000A               	tblrd		*-
 27561  004550  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27562  004554  0E00               	movlw	0
 27563  004556  0100               	movlb	0	; () banked
 27564  004558  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27565  00455A  0E03               	movlw	3
 27566  00455C  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27567  00455E  0E00               	movlw	0
 27568  004560  0100               	movlb	0	; () banked
 27569  004562  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27570  004564  0E0A               	movlw	10
 27571  004566  6F7E               	movwf	___awmod@divisor& (0+255),b
 27572  004568  0100               	movlb	0	; () banked
 27573  00456A  51AB               	movf	scale@scl& (0+255),w,b
 27574  00456C  0100               	movlb	0	; () banked
 27575  00456E  6F7C               	movwf	___awmod@dividend& (0+255),b
 27576  004570  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27577  004572  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27578  004574  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27579  004576  EC17  F041         	call	___awmod	;wreg free
 27580  00457A  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27581  00457E  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27582  004582  EC11  F049         	call	___wmul	;wreg free
 27583  004586  0E41               	movlw	low __npowers_
 27584  004588  0100               	movlb	0	; () banked
 27585  00458A  258A               	addwf	?___wmul& (0+255),w,b
 27586  00458C  6EF6               	movwf	tblptrl,c
 27587  00458E  0EF1               	movlw	high __npowers_
 27588  004590  0100               	movlb	0	; () banked
 27589  004592  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27590  004594  6EF7               	movwf	tblptrh,c
 27591  004596                     	if	1	;There are 3 active tblptr bytes
 27592  004596  6AF8               	clrf	tblptru,c
 27593  004598  0E00               	movlw	low (__mediumconst shr (0+16))
 27594  00459A  22F8               	addwfc	tblptru,f,c
 27595  00459C                     	endif
 27596  00459C  0009               	tblrd		*+
 27597  00459E  CFF5 F099          	movff	tablat,___ftmul@f2
 27598  0045A2  0009               	tblrd		*+
 27599  0045A4  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27600  0045A8  000A               	tblrd		*-
 27601  0045AA  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27602  0045AE  EC66  F037         	call	___ftmul	;wreg free
 27603  0045B2  D78F               	goto	L20
 27604  0045B4  0012               	return	
 27605  0045B6  D000               	goto	l12935
 27606  0045B8                     l12935:
 27607                           
 27608                           ;doprnt.c: 434: return _npowers_[scl];
 27609  0045B8  0100               	movlb	0	; () banked
 27610  0045BA  51AB               	movf	scale@scl& (0+255),w,b
 27611  0045BC  0D03               	mullw	3
 27612  0045BE  0E41               	movlw	low __npowers_
 27613  0045C0  24F3               	addwf	prodl,w,c
 27614  0045C2  6EF6               	movwf	tblptrl,c
 27615  0045C4  0EF1               	movlw	high __npowers_
 27616  0045C6  20F4               	addwfc	prodh,w,c
 27617  0045C8  6EF7               	movwf	tblptrh,c
 27618  0045CA                     	if	1	;There are 3 active tblptr bytes
 27619  0045CA  6AF8               	clrf	tblptru,c
 27620  0045CC  0E00               	movlw	low (__mediumconst shr (0+16))
 27621  0045CE  22F8               	addwfc	tblptru,f,c
 27622  0045D0                     	endif
 27623  0045D0  0009               	tblrd		*+
 27624  0045D2  CFF5 F0A5          	movff	tablat,?_scale
 27625  0045D6  0009               	tblrd		*+
 27626  0045D8  CFF5 F0A6          	movff	tablat,?_scale+1
 27627  0045DC  000A               	tblrd		*-
 27628  0045DE  CFF5 F0A7          	movff	tablat,?_scale+2
 27629                           
 27630                           ; BSR set to: 0
 27631  0045E2  0012               	return	
 27632  0045E4                     l12939:
 27633                           
 27634                           ; BSR set to: 0
 27635                           ;doprnt.c: 435: }
 27636                           ;doprnt.c: 436: if(scl>=110)
 27637  0045E4  0100               	movlb	0	; () banked
 27638  0045E6  51AB               	movf	scale@scl& (0+255),w,b
 27639  0045E8  0A80               	xorlw	128
 27640  0045EA  0F12               	addlw	-238
 27641  0045EC  A0D8               	btfss	status,0,c
 27642  0045EE  D0B6               	goto	l12947
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27646  0045F0  0E00               	movlw	0
 27647  0045F2  0100               	movlb	0	; () banked
 27648  0045F4  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27649  0045F6  0E03               	movlw	3
 27650  0045F8  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27651  0045FA  0E00               	movlw	0
 27652  0045FC  0100               	movlb	0	; () banked
 27653  0045FE  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27654  004600  0E0A               	movlw	10
 27655  004602  6F84               	movwf	___awdiv@divisor& (0+255),b
 27656  004604  0E00               	movlw	0
 27657  004606  0100               	movlb	0	; () banked
 27658  004608  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27659  00460A  0E64               	movlw	100
 27660  00460C  6F7E               	movwf	___awmod@divisor& (0+255),b
 27661  00460E  0100               	movlb	0	; () banked
 27662  004610  51AB               	movf	scale@scl& (0+255),w,b
 27663  004612  0100               	movlb	0	; () banked
 27664  004614  6F7C               	movwf	___awmod@dividend& (0+255),b
 27665  004616  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27666  004618  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27667  00461A  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27668  00461C  EC17  F041         	call	___awmod	;wreg free
 27669  004620  C07C  F082         	movff	?___awmod,___awdiv@dividend
 27670  004624  C07D  F083         	movff	?___awmod+1,___awdiv@dividend+1
 27671  004628  EC6A  F03E         	call	___awdiv	;wreg free
 27672  00462C  0E09               	movlw	9
 27673  00462E  0100               	movlb	0	; () banked
 27674  004630  2582               	addwf	?___awdiv& (0+255),w,b
 27675  004632  0100               	movlb	0	; () banked
 27676  004634  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27677  004636  0E00               	movlw	0
 27678  004638  0100               	movlb	0	; () banked
 27679  00463A  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27680  00463C  0100               	movlb	0	; () banked
 27681  00463E  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27682  004640  EC11  F049         	call	___wmul	;wreg free
 27683  004644  0E68               	movlw	low __powers_
 27684  004646  0100               	movlb	0	; () banked
 27685  004648  258A               	addwf	?___wmul& (0+255),w,b
 27686  00464A  6EF6               	movwf	tblptrl,c
 27687  00464C  0EF1               	movlw	high __powers_
 27688  00464E  0100               	movlb	0	; () banked
 27689  004650  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27690  004652  6EF7               	movwf	tblptrh,c
 27691  004654                     	if	1	;There are 3 active tblptr bytes
 27692  004654  6AF8               	clrf	tblptru,c
 27693  004656  0E00               	movlw	low (__mediumconst shr (0+16))
 27694  004658  22F8               	addwfc	tblptru,f,c
 27695  00465A                     	endif
 27696  00465A  0009               	tblrd		*+
 27697  00465C  CFF5 F099          	movff	tablat,___ftmul@f2
 27698  004660  0009               	tblrd		*+
 27699  004662  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27700  004666  000A               	tblrd		*-
 27701  004668  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27702  00466C  0E00               	movlw	0
 27703  00466E  0100               	movlb	0	; () banked
 27704  004670  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27705  004672  0E64               	movlw	100
 27706  004674  6F84               	movwf	___awdiv@divisor& (0+255),b
 27707  004676  0100               	movlb	0	; () banked
 27708  004678  51AB               	movf	scale@scl& (0+255),w,b
 27709  00467A  0100               	movlb	0	; () banked
 27710  00467C  6F82               	movwf	___awdiv@dividend& (0+255),b
 27711  00467E  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27712  004680  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27713  004682  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27714  004684  EC6A  F03E         	call	___awdiv	;wreg free
 27715  004688  0E12               	movlw	18
 27716  00468A  0100               	movlb	0	; () banked
 27717  00468C  2582               	addwf	?___awdiv& (0+255),w,b
 27718  00468E  0100               	movlb	0	; () banked
 27719  004690  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27720  004692  0E00               	movlw	0
 27721  004694  0100               	movlb	0	; () banked
 27722  004696  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27723  004698  0100               	movlb	0	; () banked
 27724  00469A  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27725  00469C  0E00               	movlw	0
 27726  00469E  0100               	movlb	0	; () banked
 27727  0046A0  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27728  0046A2  0E03               	movlw	3
 27729  0046A4  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27730  0046A6  EC11  F049         	call	___wmul	;wreg free
 27731  0046AA  0E68               	movlw	low __powers_
 27732  0046AC  0100               	movlb	0	; () banked
 27733  0046AE  258A               	addwf	?___wmul& (0+255),w,b
 27734  0046B0  6EF6               	movwf	tblptrl,c
 27735  0046B2  0EF1               	movlw	high __powers_
 27736  0046B4  0100               	movlb	0	; () banked
 27737  0046B6  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27738  0046B8  6EF7               	movwf	tblptrh,c
 27739  0046BA                     	if	1	;There are 3 active tblptr bytes
 27740  0046BA  6AF8               	clrf	tblptru,c
 27741  0046BC  0E00               	movlw	low (__mediumconst shr (0+16))
 27742  0046BE  22F8               	addwfc	tblptru,f,c
 27743  0046C0                     	endif
 27744  0046C0  0009               	tblrd		*+
 27745  0046C2  CFF5 F096          	movff	tablat,___ftmul@f1
 27746  0046C6  0009               	tblrd		*+
 27747  0046C8  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27748  0046CC  000A               	tblrd		*-
 27749  0046CE  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27750  0046D2  EC66  F037         	call	___ftmul	;wreg free
 27751  0046D6  C096  F0A8         	movff	?___ftmul,_scale$3809
 27752  0046DA  C097  F0A9         	movff	?___ftmul+1,_scale$3809+1
 27753  0046DE  C098  F0AA         	movff	?___ftmul+2,_scale$3809+2
 27754                           
 27755                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27756  0046E2  C0A8  F096         	movff	_scale$3809,___ftmul@f1
 27757  0046E6  C0A9  F097         	movff	_scale$3809+1,___ftmul@f1+1
 27758  0046EA  C0AA  F098         	movff	_scale$3809+2,___ftmul@f1+2
 27759  0046EE  0E00               	movlw	0
 27760  0046F0  0100               	movlb	0	; () banked
 27761  0046F2  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27762  0046F4  0E03               	movlw	3
 27763  0046F6  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27764  0046F8  0E00               	movlw	0
 27765  0046FA  0100               	movlb	0	; () banked
 27766  0046FC  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27767  0046FE  0E0A               	movlw	10
 27768  004700  6F7E               	movwf	___awmod@divisor& (0+255),b
 27769  004702  0100               	movlb	0	; () banked
 27770  004704  51AB               	movf	scale@scl& (0+255),w,b
 27771  004706  0100               	movlb	0	; () banked
 27772  004708  6F7C               	movwf	___awmod@dividend& (0+255),b
 27773  00470A  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27774  00470C  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27775  00470E  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27776  004710  EC17  F041         	call	___awmod	;wreg free
 27777  004714  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27778  004718  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27779  00471C  EC11  F049         	call	___wmul	;wreg free
 27780  004720  0E68               	movlw	low __powers_
 27781  004722  0100               	movlb	0	; () banked
 27782  004724  258A               	addwf	?___wmul& (0+255),w,b
 27783  004726  6EF6               	movwf	tblptrl,c
 27784  004728  0EF1               	movlw	high __powers_
 27785  00472A  0100               	movlb	0	; () banked
 27786  00472C  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27787  00472E  6EF7               	movwf	tblptrh,c
 27788  004730                     	if	1	;There are 3 active tblptr bytes
 27789  004730  6AF8               	clrf	tblptru,c
 27790  004732  0E00               	movlw	low (__mediumconst shr (0+16))
 27791  004734  22F8               	addwfc	tblptru,f,c
 27792  004736                     	endif
 27793  004736  0009               	tblrd		*+
 27794  004738  CFF5 F099          	movff	tablat,___ftmul@f2
 27795  00473C  0009               	tblrd		*+
 27796  00473E  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27797  004742  000A               	tblrd		*-
 27798  004744  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27799  004748  EC66  F037         	call	___ftmul	;wreg free
 27800  00474C  C096  F0A5         	movff	?___ftmul,?_scale
 27801  004750  C097  F0A6         	movff	?___ftmul+1,?_scale+1
 27802  004754  C098  F0A7         	movff	?___ftmul+2,?_scale+2
 27803  004758  0012               	return	
 27804  00475A  D06B               	goto	l12953
 27805  00475C                     l12947:
 27806                           
 27807                           ;doprnt.c: 438: else if(scl > 10)
 27808  00475C  0100               	movlb	0	; () banked
 27809  00475E  51AB               	movf	scale@scl& (0+255),w,b
 27810  004760  0A80               	xorlw	128
 27811  004762  0F75               	addlw	-139
 27812  004764  A0D8               	btfss	status,0,c
 27813  004766  D065               	goto	l12953
 27814                           
 27815                           ; BSR set to: 0
 27816                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27817  004768  0E00               	movlw	0
 27818  00476A  0100               	movlb	0	; () banked
 27819  00476C  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27820  00476E  0E0A               	movlw	10
 27821  004770  6F84               	movwf	___awdiv@divisor& (0+255),b
 27822  004772  0100               	movlb	0	; () banked
 27823  004774  51AB               	movf	scale@scl& (0+255),w,b
 27824  004776  0100               	movlb	0	; () banked
 27825  004778  6F82               	movwf	___awdiv@dividend& (0+255),b
 27826  00477A  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27827  00477C  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27828  00477E  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27829  004780  EC6A  F03E         	call	___awdiv	;wreg free
 27830  004784  0E09               	movlw	9
 27831  004786  0100               	movlb	0	; () banked
 27832  004788  2582               	addwf	?___awdiv& (0+255),w,b
 27833  00478A  0100               	movlb	0	; () banked
 27834  00478C  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27835  00478E  0E00               	movlw	0
 27836  004790  0100               	movlb	0	; () banked
 27837  004792  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27838  004794  0100               	movlb	0	; () banked
 27839  004796  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27840  004798  0E00               	movlw	0
 27841  00479A  0100               	movlb	0	; () banked
 27842  00479C  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27843  00479E  0E03               	movlw	3
 27844  0047A0  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27845  0047A2  EC11  F049         	call	___wmul	;wreg free
 27846  0047A6  0E68               	movlw	low __powers_
 27847  0047A8  0100               	movlb	0	; () banked
 27848  0047AA  258A               	addwf	?___wmul& (0+255),w,b
 27849  0047AC  6EF6               	movwf	tblptrl,c
 27850  0047AE  0EF1               	movlw	high __powers_
 27851  0047B0  0100               	movlb	0	; () banked
 27852  0047B2  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27853  0047B4  6EF7               	movwf	tblptrh,c
 27854  0047B6                     	if	1	;There are 3 active tblptr bytes
 27855  0047B6  6AF8               	clrf	tblptru,c
 27856  0047B8  0E00               	movlw	low (__mediumconst shr (0+16))
 27857  0047BA  22F8               	addwfc	tblptru,f,c
 27858  0047BC                     	endif
 27859  0047BC  0009               	tblrd		*+
 27860  0047BE  CFF5 F096          	movff	tablat,___ftmul@f1
 27861  0047C2  0009               	tblrd		*+
 27862  0047C4  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27863  0047C8  000A               	tblrd		*-
 27864  0047CA  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27865  0047CE  0E00               	movlw	0
 27866  0047D0  0100               	movlb	0	; () banked
 27867  0047D2  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27868  0047D4  0E03               	movlw	3
 27869  0047D6  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27870  0047D8  0E00               	movlw	0
 27871  0047DA  0100               	movlb	0	; () banked
 27872  0047DC  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27873  0047DE  0E0A               	movlw	10
 27874  0047E0  6F7E               	movwf	___awmod@divisor& (0+255),b
 27875  0047E2  0100               	movlb	0	; () banked
 27876  0047E4  51AB               	movf	scale@scl& (0+255),w,b
 27877  0047E6  0100               	movlb	0	; () banked
 27878  0047E8  6F7C               	movwf	___awmod@dividend& (0+255),b
 27879  0047EA  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27880  0047EC  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27881  0047EE  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27882  0047F0  EC17  F041         	call	___awmod	;wreg free
 27883  0047F4  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27884  0047F8  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27885  0047FC  EC11  F049         	call	___wmul	;wreg free
 27886  004800  0E68               	movlw	low __powers_
 27887  004802  0100               	movlb	0	; () banked
 27888  004804  258A               	addwf	?___wmul& (0+255),w,b
 27889  004806  6EF6               	movwf	tblptrl,c
 27890  004808  0EF1               	movlw	high __powers_
 27891  00480A  0100               	movlb	0	; () banked
 27892  00480C  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27893  00480E  6EF7               	movwf	tblptrh,c
 27894  004810                     	if	1	;There are 3 active tblptr bytes
 27895  004810  6AF8               	clrf	tblptru,c
 27896  004812  0E00               	movlw	low (__mediumconst shr (0+16))
 27897  004814  22F8               	addwfc	tblptru,f,c
 27898  004816                     	endif
 27899  004816  0009               	tblrd		*+
 27900  004818  CFF5 F099          	movff	tablat,___ftmul@f2
 27901  00481C  0009               	tblrd		*+
 27902  00481E  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27903  004822  000A               	tblrd		*-
 27904  004824  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27905  004828  EC66  F037         	call	___ftmul	;wreg free
 27906  00482C  D78F               	goto	L21
 27907  00482E  0012               	return	
 27908  004830  D000               	goto	l12953
 27909  004832                     l12953:
 27910                           
 27911                           ;doprnt.c: 440: return _powers_[scl];
 27912  004832  0100               	movlb	0	; () banked
 27913  004834  51AB               	movf	scale@scl& (0+255),w,b
 27914  004836  0D03               	mullw	3
 27915  004838  0E68               	movlw	low __powers_
 27916  00483A  24F3               	addwf	prodl,w,c
 27917  00483C  6EF6               	movwf	tblptrl,c
 27918  00483E  0EF1               	movlw	high __powers_
 27919  004840  20F4               	addwfc	prodh,w,c
 27920  004842  6EF7               	movwf	tblptrh,c
 27921  004844                     	if	1	;There are 3 active tblptr bytes
 27922  004844  6AF8               	clrf	tblptru,c
 27923  004846  0E00               	movlw	low (__mediumconst shr (0+16))
 27924  004848  22F8               	addwfc	tblptru,f,c
 27925  00484A                     	endif
 27926  00484A  0009               	tblrd		*+
 27927  00484C  CFF5 F0A5          	movff	tablat,?_scale
 27928  004850  0009               	tblrd		*+
 27929  004852  CFF5 F0A6          	movff	tablat,?_scale+1
 27930  004856  000A               	tblrd		*-
 27931  004858  CFF5 F0A7          	movff	tablat,?_scale+2
 27932  00485C  0012               	return	
 27933                           
 27934                           ; BSR set to: 0
 27935  00485E  0012               	return		;funcret
 27936  004860                     __end_of_scale:
 27937                           	opt stack 0
 27938                           tblptru	equ	0xFF8
 27939                           tblptrh	equ	0xFF7
 27940                           tblptrl	equ	0xFF6
 27941                           tablat	equ	0xFF5
 27942                           prodh	equ	0xFF4
 27943                           prodl	equ	0xFF3
 27944                           intcon	equ	0xFF2
 27945                           intcon2	equ	0xFF1
 27946                           indf0	equ	0xFEF
 27947                           postinc0	equ	0xFEE
 27948                           fsr0h	equ	0xFEA
 27949                           fsr0l	equ	0xFE9
 27950                           wreg	equ	0xFE8
 27951                           indf1	equ	0xFE7
 27952                           postdec1	equ	0xFE5
 27953                           fsr1h	equ	0xFE2
 27954                           fsr1l	equ	0xFE1
 27955                           indf2	equ	0xFDF
 27956                           postinc2	equ	0xFDE
 27957                           postdec2	equ	0xFDD
 27958                           fsr2h	equ	0xFDA
 27959                           fsr2l	equ	0xFD9
 27960                           status	equ	0xFD8
 27961                           
 27962 ;; *************** function _isdigit *****************
 27963 ;; Defined at:
 27964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 27965 ;; Parameters:    Size  Location     Type
 27966 ;;  c               1    wreg     unsigned char 
 27967 ;; Auto vars:     Size  Location     Type
 27968 ;;  c               1   30[BANK0 ] unsigned char 
 27969 ;; Return value:  Size  Location     Type
 27970 ;;		None               void
 27971 ;; Registers used:
 27972 ;;		wreg, status,2, status,0
 27973 ;; Tracked objects:
 27974 ;;		On entry : 0/0
 27975 ;;		On exit  : 0/0
 27976 ;;		Unchanged: 0/0
 27977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27979 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27982 ;;Total ram usage:        3 bytes
 27983 ;; Hardware stack levels used:    1
 27984 ;; Hardware stack levels required when called:    6
 27985 ;; This function calls:
 27986 ;;		Nothing
 27987 ;; This function is called by:
 27988 ;;		_sprintf
 27989 ;; This function uses a non-reentrant model
 27990 ;;
 27991                           
 27992                           	psect	text61
 27993  0092F2                     __ptext61:
 27994                           	opt stack 0
 27995  0092F2                     _isdigit:
 27996                           	opt stack 22
 27997                           
 27998                           ;incstack = 0
 27999                           ;isdigit@c stored from wreg
 28000  0092F2  0100               	movlb	0	; () banked
 28001  0092F4  6F7E               	movwf	isdigit@c& (0+255),b
 28002                           
 28003                           ; BSR set to: 0
 28004  0092F6  0E00               	movlw	0
 28005  0092F8  0100               	movlb	0	; () banked
 28006  0092FA  6F7D               	movwf	_isdigit$3485& (0+255),b
 28007                           
 28008                           ; BSR set to: 0
 28009  0092FC  0E3A               	movlw	58
 28010  0092FE  0100               	movlb	0	; () banked
 28011  009300  617E               	cpfslt	isdigit@c& (0+255),b
 28012  009302  D008               	goto	l12965
 28013                           
 28014                           ; BSR set to: 0
 28015  009304  0E2F               	movlw	47
 28016  009306  0100               	movlb	0	; () banked
 28017  009308  657E               	cpfsgt	isdigit@c& (0+255),b
 28018  00930A  D004               	goto	l12965
 28019                           
 28020                           ; BSR set to: 0
 28021  00930C  0E01               	movlw	1
 28022  00930E  0100               	movlb	0	; () banked
 28023  009310  6F7D               	movwf	_isdigit$3485& (0+255),b
 28024  009312  D000               	goto	l12965
 28025  009314                     l12965:
 28026                           
 28027                           ; BSR set to: 0
 28028  009314  C07D  F07C         	movff	_isdigit$3485,??_isdigit
 28029  009318  0100               	movlb	0	; () banked
 28030  00931A  317C               	rrcf	??_isdigit& (0+255),w,b
 28031  00931C  0012               	return	
 28032                           
 28033                           ; BSR set to: 0
 28034                           
 28035                           ; BSR set to: 0
 28036  00931E  0012               	return		;funcret
 28037  009320                     __end_of_isdigit:
 28038                           	opt stack 0
 28039                           tblptru	equ	0xFF8
 28040                           tblptrh	equ	0xFF7
 28041                           tblptrl	equ	0xFF6
 28042                           tablat	equ	0xFF5
 28043                           prodh	equ	0xFF4
 28044                           prodl	equ	0xFF3
 28045                           intcon	equ	0xFF2
 28046                           intcon2	equ	0xFF1
 28047                           indf0	equ	0xFEF
 28048                           postinc0	equ	0xFEE
 28049                           fsr0h	equ	0xFEA
 28050                           fsr0l	equ	0xFE9
 28051                           wreg	equ	0xFE8
 28052                           indf1	equ	0xFE7
 28053                           postdec1	equ	0xFE5
 28054                           fsr1h	equ	0xFE2
 28055                           fsr1l	equ	0xFE1
 28056                           indf2	equ	0xFDF
 28057                           postinc2	equ	0xFDE
 28058                           postdec2	equ	0xFDD
 28059                           fsr2h	equ	0xFDA
 28060                           fsr2l	equ	0xFD9
 28061                           status	equ	0xFD8
 28062                           
 28063 ;; *************** function _fround *****************
 28064 ;; Defined at:
 28065 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 28066 ;; Parameters:    Size  Location     Type
 28067 ;;  prec            1    wreg     unsigned char 
 28068 ;; Auto vars:     Size  Location     Type
 28069 ;;  prec            1   78[BANK0 ] unsigned char 
 28070 ;; Return value:  Size  Location     Type
 28071 ;;                  3   69[BANK0 ] unsigned char 
 28072 ;; Registers used:
 28073 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28074 ;; Tracked objects:
 28075 ;;		On entry : 0/0
 28076 ;;		On exit  : 0/0
 28077 ;;		Unchanged: 0/0
 28078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28079 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28080 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28082 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28083 ;;Total ram usage:       10 bytes
 28084 ;; Hardware stack levels used:    1
 28085 ;; Hardware stack levels required when called:    8
 28086 ;; This function calls:
 28087 ;;		___awdiv
 28088 ;;		___awmod
 28089 ;;		___ftmul
 28090 ;;		___wmul
 28091 ;; This function is called by:
 28092 ;;		_sprintf
 28093 ;; This function uses a non-reentrant model
 28094 ;;
 28095                           
 28096                           	psect	text62
 28097  0058C4                     __ptext62:
 28098                           	opt stack 0
 28099  0058C4                     _fround:
 28100                           	opt stack 20
 28101                           
 28102                           ; BSR set to: 0
 28103                           ;incstack = 0
 28104                           ;fround@prec stored from wreg
 28105  0058C4  0100               	movlb	0	; () banked
 28106  0058C6  6FAE               	movwf	fround@prec& (0+255),b
 28107                           
 28108                           ; BSR set to: 0
 28109                           ;doprnt.c: 413: if(prec>=110)
 28110  0058C8  0E6D               	movlw	109
 28111  0058CA  0100               	movlb	0	; () banked
 28112  0058CC  65AE               	cpfsgt	fround@prec& (0+255),b
 28113  0058CE  D0C4               	goto	l12907
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28117  0058D0  0E00               	movlw	0
 28118  0058D2  0100               	movlb	0	; () banked
 28119  0058D4  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28120  0058D6  0E03               	movlw	3
 28121  0058D8  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28122  0058DA  0E00               	movlw	0
 28123  0058DC  0100               	movlb	0	; () banked
 28124  0058DE  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 28125  0058E0  0E0A               	movlw	10
 28126  0058E2  6F84               	movwf	___awdiv@divisor& (0+255),b
 28127  0058E4  0E00               	movlw	0
 28128  0058E6  0100               	movlb	0	; () banked
 28129  0058E8  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 28130  0058EA  0E64               	movlw	100
 28131  0058EC  6F7E               	movwf	___awmod@divisor& (0+255),b
 28132  0058EE  C0AE  F07C         	movff	fround@prec,___awmod@dividend
 28133  0058F2  0100               	movlb	0	; () banked
 28134  0058F4  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 28135  0058F6  EC17  F041         	call	___awmod	;wreg free
 28136  0058FA  C07C  F082         	movff	?___awmod,___awdiv@dividend
 28137  0058FE  C07D  F083         	movff	?___awmod+1,___awdiv@dividend+1
 28138  005902  EC6A  F03E         	call	___awdiv	;wreg free
 28139  005906  0E09               	movlw	9
 28140  005908  0100               	movlb	0	; () banked
 28141  00590A  2582               	addwf	?___awdiv& (0+255),w,b
 28142  00590C  0100               	movlb	0	; () banked
 28143  00590E  6F8A               	movwf	___wmul@multiplier& (0+255),b
 28144  005910  0E00               	movlw	0
 28145  005912  0100               	movlb	0	; () banked
 28146  005914  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 28147  005916  0100               	movlb	0	; () banked
 28148  005918  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 28149  00591A  EC11  F049         	call	___wmul	;wreg free
 28150  00591E  0E41               	movlw	low __npowers_
 28151  005920  0100               	movlb	0	; () banked
 28152  005922  258A               	addwf	?___wmul& (0+255),w,b
 28153  005924  6EF6               	movwf	tblptrl,c
 28154  005926  0EF1               	movlw	high __npowers_
 28155  005928  0100               	movlb	0	; () banked
 28156  00592A  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28157  00592C  6EF7               	movwf	tblptrh,c
 28158  00592E                     	if	1	;There are 3 active tblptr bytes
 28159  00592E  6AF8               	clrf	tblptru,c
 28160  005930  0E00               	movlw	low (__mediumconst shr (0+16))
 28161  005932  22F8               	addwfc	tblptru,f,c
 28162  005934                     	endif
 28163  005934  0009               	tblrd		*+
 28164  005936  CFF5 F099          	movff	tablat,___ftmul@f2
 28165  00593A  0009               	tblrd		*+
 28166  00593C  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 28167  005940  000A               	tblrd		*-
 28168  005942  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 28169  005946  0E00               	movlw	0
 28170  005948  0100               	movlb	0	; () banked
 28171  00594A  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 28172  00594C  0E64               	movlw	100
 28173  00594E  6F84               	movwf	___awdiv@divisor& (0+255),b
 28174  005950  C0AE  F082         	movff	fround@prec,___awdiv@dividend
 28175  005954  0100               	movlb	0	; () banked
 28176  005956  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 28177  005958  EC6A  F03E         	call	___awdiv	;wreg free
 28178  00595C  0E12               	movlw	18
 28179  00595E  0100               	movlb	0	; () banked
 28180  005960  2582               	addwf	?___awdiv& (0+255),w,b
 28181  005962  0100               	movlb	0	; () banked
 28182  005964  6F8A               	movwf	___wmul@multiplier& (0+255),b
 28183  005966  0E00               	movlw	0
 28184  005968  0100               	movlb	0	; () banked
 28185  00596A  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 28186  00596C  0100               	movlb	0	; () banked
 28187  00596E  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 28188  005970  0E00               	movlw	0
 28189  005972  0100               	movlb	0	; () banked
 28190  005974  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28191  005976  0E03               	movlw	3
 28192  005978  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28193  00597A  EC11  F049         	call	___wmul	;wreg free
 28194  00597E  0E41               	movlw	low __npowers_
 28195  005980  0100               	movlb	0	; () banked
 28196  005982  258A               	addwf	?___wmul& (0+255),w,b
 28197  005984  6EF6               	movwf	tblptrl,c
 28198  005986  0EF1               	movlw	high __npowers_
 28199  005988  0100               	movlb	0	; () banked
 28200  00598A  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28201  00598C  6EF7               	movwf	tblptrh,c
 28202  00598E                     	if	1	;There are 3 active tblptr bytes
 28203  00598E  6AF8               	clrf	tblptru,c
 28204  005990  0E00               	movlw	low (__mediumconst shr (0+16))
 28205  005992  22F8               	addwfc	tblptru,f,c
 28206  005994                     	endif
 28207  005994  0009               	tblrd		*+
 28208  005996  CFF5 F096          	movff	tablat,___ftmul@f1
 28209  00599A  0009               	tblrd		*+
 28210  00599C  CFF5 F097          	movff	tablat,___ftmul@f1+1
 28211  0059A0  000A               	tblrd		*-
 28212  0059A2  CFF5 F098          	movff	tablat,___ftmul@f1+2
 28213  0059A6  EC66  F037         	call	___ftmul	;wreg free
 28214  0059AA  C096  F0AB         	movff	?___ftmul,_fround$3807
 28215  0059AE  C097  F0AC         	movff	?___ftmul+1,_fround$3807+1
 28216  0059B2  C098  F0AD         	movff	?___ftmul+2,_fround$3807+2
 28217                           
 28218                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28219  0059B6  0E00               	movlw	0
 28220  0059B8  0100               	movlb	0	; () banked
 28221  0059BA  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28222  0059BC  0E03               	movlw	3
 28223  0059BE  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28224  0059C0  0E00               	movlw	0
 28225  0059C2  0100               	movlb	0	; () banked
 28226  0059C4  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 28227  0059C6  0E0A               	movlw	10
 28228  0059C8  6F7E               	movwf	___awmod@divisor& (0+255),b
 28229  0059CA  C0AE  F07C         	movff	fround@prec,___awmod@dividend
 28230  0059CE  0100               	movlb	0	; () banked
 28231  0059D0  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 28232  0059D2  EC17  F041         	call	___awmod	;wreg free
 28233  0059D6  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 28234  0059DA  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 28235  0059DE  EC11  F049         	call	___wmul	;wreg free
 28236  0059E2  0E41               	movlw	low __npowers_
 28237  0059E4  0100               	movlb	0	; () banked
 28238  0059E6  258A               	addwf	?___wmul& (0+255),w,b
 28239  0059E8  6EF6               	movwf	tblptrl,c
 28240  0059EA  0EF1               	movlw	high __npowers_
 28241  0059EC  0100               	movlb	0	; () banked
 28242  0059EE  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28243  0059F0  6EF7               	movwf	tblptrh,c
 28244  0059F2                     	if	1	;There are 3 active tblptr bytes
 28245  0059F2  6AF8               	clrf	tblptru,c
 28246  0059F4  0E00               	movlw	low (__mediumconst shr (0+16))
 28247  0059F6  22F8               	addwfc	tblptru,f,c
 28248  0059F8                     	endif
 28249  0059F8  0009               	tblrd		*+
 28250  0059FA  CFF5 F099          	movff	tablat,___ftmul@f2
 28251  0059FE  0009               	tblrd		*+
 28252  005A00  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 28253  005A04  000A               	tblrd		*-
 28254  005A06  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 28255  005A0A  C0AB  F096         	movff	_fround$3807,___ftmul@f1
 28256  005A0E  C0AC  F097         	movff	_fround$3807+1,___ftmul@f1+1
 28257  005A12  C0AD  F098         	movff	_fround$3807+2,___ftmul@f1+2
 28258  005A16  EC66  F037         	call	___ftmul	;wreg free
 28259  005A1A  C096  F0A8         	movff	?___ftmul,_fround$3808
 28260  005A1E  C097  F0A9         	movff	?___ftmul+1,_fround$3808+1
 28261  005A22  C098  F0AA         	movff	?___ftmul+2,_fround$3808+2
 28262                           
 28263                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28264  005A26  C0A8  F096         	movff	_fround$3808,___ftmul@f1
 28265  005A2A  C0A9  F097         	movff	_fround$3808+1,___ftmul@f1+1
 28266  005A2E  C0AA  F098         	movff	_fround$3808+2,___ftmul@f1+2
 28267  005A32  0E00               	movlw	0
 28268  005A34  0100               	movlb	0	; () banked
 28269  005A36  6F99               	movwf	___ftmul@f2& (0+255),b
 28270  005A38  0E00               	movlw	0
 28271  005A3A  0100               	movlb	0	; () banked
 28272  005A3C  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 28273  005A3E  0E3F               	movlw	63
 28274  005A40  0100               	movlb	0	; () banked
 28275  005A42  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 28276  005A44  EC66  F037         	call	___ftmul	;wreg free
 28277  005A48  C096  F0A5         	movff	?___ftmul,?_fround
 28278  005A4C  C097  F0A6         	movff	?___ftmul+1,?_fround+1
 28279  005A50  C098  F0A7         	movff	?___ftmul+2,?_fround+2
 28280  005A54  0012               	return	
 28281  005A56  D07A               	goto	l12915
 28282  005A58                     l12907:
 28283                           
 28284                           ;doprnt.c: 415: else if(prec > 10)
 28285  005A58  0E0A               	movlw	10
 28286  005A5A  0100               	movlb	0	; () banked
 28287  005A5C  65AE               	cpfsgt	fround@prec& (0+255),b
 28288  005A5E  D076               	goto	l12915
 28289                           
 28290                           ; BSR set to: 0
 28291                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28292  005A60  0E00               	movlw	0
 28293  005A62  0100               	movlb	0	; () banked
 28294  005A64  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28295  005A66  0E03               	movlw	3
 28296  005A68  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28297  005A6A  0E00               	movlw	0
 28298  005A6C  0100               	movlb	0	; () banked
 28299  005A6E  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 28300  005A70  0E0A               	movlw	10
 28301  005A72  6F7E               	movwf	___awmod@divisor& (0+255),b
 28302  005A74  C0AE  F07C         	movff	fround@prec,___awmod@dividend
 28303  005A78  0100               	movlb	0	; () banked
 28304  005A7A  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 28305  005A7C  EC17  F041         	call	___awmod	;wreg free
 28306  005A80  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 28307  005A84  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 28308  005A88  EC11  F049         	call	___wmul	;wreg free
 28309  005A8C  0E41               	movlw	low __npowers_
 28310  005A8E  0100               	movlb	0	; () banked
 28311  005A90  258A               	addwf	?___wmul& (0+255),w,b
 28312  005A92  6EF6               	movwf	tblptrl,c
 28313  005A94  0EF1               	movlw	high __npowers_
 28314  005A96  0100               	movlb	0	; () banked
 28315  005A98  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28316  005A9A  6EF7               	movwf	tblptrh,c
 28317  005A9C                     	if	1	;There are 3 active tblptr bytes
 28318  005A9C  6AF8               	clrf	tblptru,c
 28319  005A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 28320  005AA0  22F8               	addwfc	tblptru,f,c
 28321  005AA2                     	endif
 28322  005AA2  0009               	tblrd		*+
 28323  005AA4  CFF5 F099          	movff	tablat,___ftmul@f2
 28324  005AA8  0009               	tblrd		*+
 28325  005AAA  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 28326  005AAE  000A               	tblrd		*-
 28327  005AB0  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 28328  005AB4  0E00               	movlw	0
 28329  005AB6  0100               	movlb	0	; () banked
 28330  005AB8  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 28331  005ABA  0E0A               	movlw	10
 28332  005ABC  6F84               	movwf	___awdiv@divisor& (0+255),b
 28333  005ABE  C0AE  F082         	movff	fround@prec,___awdiv@dividend
 28334  005AC2  0100               	movlb	0	; () banked
 28335  005AC4  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 28336  005AC6  EC6A  F03E         	call	___awdiv	;wreg free
 28337  005ACA  0E09               	movlw	9
 28338  005ACC  0100               	movlb	0	; () banked
 28339  005ACE  2582               	addwf	?___awdiv& (0+255),w,b
 28340  005AD0  0100               	movlb	0	; () banked
 28341  005AD2  6F8A               	movwf	___wmul@multiplier& (0+255),b
 28342  005AD4  0E00               	movlw	0
 28343  005AD6  0100               	movlb	0	; () banked
 28344  005AD8  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 28345  005ADA  0100               	movlb	0	; () banked
 28346  005ADC  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 28347  005ADE  0E00               	movlw	0
 28348  005AE0  0100               	movlb	0	; () banked
 28349  005AE2  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28350  005AE4  0E03               	movlw	3
 28351  005AE6  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28352  005AE8  EC11  F049         	call	___wmul	;wreg free
 28353  005AEC  0E41               	movlw	low __npowers_
 28354  005AEE  0100               	movlb	0	; () banked
 28355  005AF0  258A               	addwf	?___wmul& (0+255),w,b
 28356  005AF2  6EF6               	movwf	tblptrl,c
 28357  005AF4  0EF1               	movlw	high __npowers_
 28358  005AF6  0100               	movlb	0	; () banked
 28359  005AF8  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28360  005AFA  6EF7               	movwf	tblptrh,c
 28361  005AFC                     	if	1	;There are 3 active tblptr bytes
 28362  005AFC  6AF8               	clrf	tblptru,c
 28363  005AFE  0E00               	movlw	low (__mediumconst shr (0+16))
 28364  005B00  22F8               	addwfc	tblptru,f,c
 28365  005B02                     	endif
 28366  005B02  0009               	tblrd		*+
 28367  005B04  CFF5 F096          	movff	tablat,___ftmul@f1
 28368  005B08  0009               	tblrd		*+
 28369  005B0A  CFF5 F097          	movff	tablat,___ftmul@f1+1
 28370  005B0E  000A               	tblrd		*-
 28371  005B10  CFF5 F098          	movff	tablat,___ftmul@f1+2
 28372  005B14  EC66  F037         	call	___ftmul	;wreg free
 28373  005B18  C096  F0AB         	movff	?___ftmul,_fround$3807
 28374  005B1C  C097  F0AC         	movff	?___ftmul+1,_fround$3807+1
 28375  005B20  C098  F0AD         	movff	?___ftmul+2,_fround$3807+2
 28376                           
 28377                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28378  005B24  C0AB  F096         	movff	_fround$3807,___ftmul@f1
 28379  005B28  C0AC  F097         	movff	_fround$3807+1,___ftmul@f1+1
 28380  005B2C  C0AD  F098         	movff	_fround$3807+2,___ftmul@f1+2
 28381  005B30  0E00               	movlw	0
 28382  005B32  0100               	movlb	0	; () banked
 28383  005B34  6F99               	movwf	___ftmul@f2& (0+255),b
 28384  005B36  0E00               	movlw	0
 28385  005B38  0100               	movlb	0	; () banked
 28386  005B3A  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 28387  005B3C  0E3F               	movlw	63
 28388  005B3E  0100               	movlb	0	; () banked
 28389  005B40  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 28390  005B42  EC66  F037         	call	___ftmul	;wreg free
 28391  005B46  D780               	goto	L22
 28392  005B48  0012               	return	
 28393  005B4A  D000               	goto	l12915
 28394  005B4C                     l12915:
 28395                           
 28396                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 28397  005B4C  0100               	movlb	0	; () banked
 28398  005B4E  51AE               	movf	fround@prec& (0+255),w,b
 28399  005B50  0D03               	mullw	3
 28400  005B52  0E41               	movlw	low __npowers_
 28401  005B54  24F3               	addwf	prodl,w,c
 28402  005B56  6EF6               	movwf	tblptrl,c
 28403  005B58  0EF1               	movlw	high __npowers_
 28404  005B5A  20F4               	addwfc	prodh,w,c
 28405  005B5C  6EF7               	movwf	tblptrh,c
 28406  005B5E                     	if	1	;There are 3 active tblptr bytes
 28407  005B5E  6AF8               	clrf	tblptru,c
 28408  005B60  0E00               	movlw	low (__mediumconst shr (0+16))
 28409  005B62  22F8               	addwfc	tblptru,f,c
 28410  005B64                     	endif
 28411  005B64  0009               	tblrd		*+
 28412  005B66  CFF5 F096          	movff	tablat,___ftmul@f1
 28413  005B6A  0009               	tblrd		*+
 28414  005B6C  CFF5 F097          	movff	tablat,___ftmul@f1+1
 28415  005B70  000A               	tblrd		*-
 28416  005B72  CFF5 F098          	movff	tablat,___ftmul@f1+2
 28417  005B76  0E00               	movlw	0
 28418  005B78  0100               	movlb	0	; () banked
 28419  005B7A  6F99               	movwf	___ftmul@f2& (0+255),b
 28420  005B7C  0E00               	movlw	0
 28421  005B7E  0100               	movlb	0	; () banked
 28422  005B80  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 28423  005B82  0E3F               	movlw	63
 28424  005B84  0100               	movlb	0	; () banked
 28425  005B86  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 28426  005B88  EC66  F037         	call	___ftmul	;wreg free
 28427  005B8C  C096  F0A5         	movff	?___ftmul,?_fround
 28428  005B90  C097  F0A6         	movff	?___ftmul+1,?_fround+1
 28429  005B94  C098  F0A7         	movff	?___ftmul+2,?_fround+2
 28430  005B98  0012               	return	
 28431  005B9A  0012               	return		;funcret
 28432  005B9C                     __end_of_fround:
 28433                           	opt stack 0
 28434                           tblptru	equ	0xFF8
 28435                           tblptrh	equ	0xFF7
 28436                           tblptrl	equ	0xFF6
 28437                           tablat	equ	0xFF5
 28438                           prodh	equ	0xFF4
 28439                           prodl	equ	0xFF3
 28440                           intcon	equ	0xFF2
 28441                           intcon2	equ	0xFF1
 28442                           indf0	equ	0xFEF
 28443                           postinc0	equ	0xFEE
 28444                           fsr0h	equ	0xFEA
 28445                           fsr0l	equ	0xFE9
 28446                           wreg	equ	0xFE8
 28447                           indf1	equ	0xFE7
 28448                           postdec1	equ	0xFE5
 28449                           fsr1h	equ	0xFE2
 28450                           fsr1l	equ	0xFE1
 28451                           indf2	equ	0xFDF
 28452                           postinc2	equ	0xFDE
 28453                           postdec2	equ	0xFDD
 28454                           fsr2h	equ	0xFDA
 28455                           fsr2l	equ	0xFD9
 28456                           status	equ	0xFD8
 28457                           
 28458 ;; *************** function ___wmul *****************
 28459 ;; Defined at:
 28460 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 28461 ;; Parameters:    Size  Location     Type
 28462 ;;  multiplier      2   42[BANK0 ] unsigned int 
 28463 ;;  multiplicand    2   44[BANK0 ] unsigned int 
 28464 ;; Auto vars:     Size  Location     Type
 28465 ;;  product         2   46[BANK0 ] unsigned int 
 28466 ;; Return value:  Size  Location     Type
 28467 ;;                  2   42[BANK0 ] unsigned int 
 28468 ;; Registers used:
 28469 ;;		wreg, status,2, status,0, prodl, prodh
 28470 ;; Tracked objects:
 28471 ;;		On entry : 0/0
 28472 ;;		On exit  : 0/0
 28473 ;;		Unchanged: 0/0
 28474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28478 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28479 ;;Total ram usage:        6 bytes
 28480 ;; Hardware stack levels used:    1
 28481 ;; Hardware stack levels required when called:    6
 28482 ;; This function calls:
 28483 ;;		Nothing
 28484 ;; This function is called by:
 28485 ;;		_fround
 28486 ;;		_scale
 28487 ;;		_sprintf
 28488 ;; This function uses a non-reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text63
 28492  009222                     __ptext63:
 28493                           	opt stack 0
 28494  009222                     ___wmul:
 28495                           	opt stack 21
 28496                           
 28497                           ;incstack = 0
 28498  009222  0100               	movlb	0	; () banked
 28499  009224  518A               	movf	___wmul@multiplier& (0+255),w,b
 28500  009226  0100               	movlb	0	; () banked
 28501  009228  038C               	mulwf	___wmul@multiplicand& (0+255),b
 28502  00922A  CFF3 F08E          	movff	prodl,___wmul@product
 28503  00922E  CFF4 F08F          	movff	prodh,___wmul@product+1
 28504  009232  0100               	movlb	0	; () banked
 28505  009234  518A               	movf	___wmul@multiplier& (0+255),w,b
 28506  009236  0100               	movlb	0	; () banked
 28507  009238  038D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28508  00923A  50F3               	movf	prodl,w,c
 28509  00923C  0100               	movlb	0	; () banked
 28510  00923E  278F               	addwf	(___wmul@product+1)& (0+255),f,b
 28511  009240  0100               	movlb	0	; () banked
 28512  009242  518B               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28513  009244  0100               	movlb	0	; () banked
 28514  009246  038C               	mulwf	___wmul@multiplicand& (0+255),b
 28515  009248  50F3               	movf	prodl,w,c
 28516  00924A  0100               	movlb	0	; () banked
 28517  00924C  278F               	addwf	(___wmul@product+1)& (0+255),f,b
 28518                           
 28519                           ; BSR set to: 0
 28520  00924E  C08E  F08A         	movff	___wmul@product,?___wmul
 28521  009252  C08F  F08B         	movff	___wmul@product+1,?___wmul+1
 28522  009256  0012               	return	
 28523                           
 28524                           ; BSR set to: 0
 28525                           
 28526                           ; BSR set to: 0
 28527  009258  0012               	return		;funcret
 28528  00925A                     __end_of___wmul:
 28529                           	opt stack 0
 28530                           tblptru	equ	0xFF8
 28531                           tblptrh	equ	0xFF7
 28532                           tblptrl	equ	0xFF6
 28533                           tablat	equ	0xFF5
 28534                           prodh	equ	0xFF4
 28535                           prodl	equ	0xFF3
 28536                           intcon	equ	0xFF2
 28537                           intcon2	equ	0xFF1
 28538                           indf0	equ	0xFEF
 28539                           postinc0	equ	0xFEE
 28540                           fsr0h	equ	0xFEA
 28541                           fsr0l	equ	0xFE9
 28542                           wreg	equ	0xFE8
 28543                           indf1	equ	0xFE7
 28544                           postdec1	equ	0xFE5
 28545                           fsr1h	equ	0xFE2
 28546                           fsr1l	equ	0xFE1
 28547                           indf2	equ	0xFDF
 28548                           postinc2	equ	0xFDE
 28549                           postdec2	equ	0xFDD
 28550                           fsr2h	equ	0xFDA
 28551                           fsr2l	equ	0xFD9
 28552                           status	equ	0xFD8
 28553                           
 28554 ;; *************** function ___ftmul *****************
 28555 ;; Defined at:
 28556 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 28557 ;; Parameters:    Size  Location     Type
 28558 ;;  f1              3   54[BANK0 ] float 
 28559 ;;  f2              3   57[BANK0 ] float 
 28560 ;; Auto vars:     Size  Location     Type
 28561 ;;  f3_as_produc    3   64[BANK0 ] unsigned um
 28562 ;;  sign            1   68[BANK0 ] unsigned char 
 28563 ;;  cntr            1   67[BANK0 ] unsigned char 
 28564 ;;  exp             1   63[BANK0 ] unsigned char 
 28565 ;; Return value:  Size  Location     Type
 28566 ;;                  3   54[BANK0 ] float 
 28567 ;; Registers used:
 28568 ;;		wreg, status,2, status,0, cstack
 28569 ;; Tracked objects:
 28570 ;;		On entry : 0/0
 28571 ;;		On exit  : 0/0
 28572 ;;		Unchanged: 0/0
 28573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28574 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28575 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28576 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28577 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28578 ;;Total ram usage:       15 bytes
 28579 ;; Hardware stack levels used:    1
 28580 ;; Hardware stack levels required when called:    7
 28581 ;; This function calls:
 28582 ;;		___ftpack
 28583 ;; This function is called by:
 28584 ;;		_ReadVoltage
 28585 ;;		_fround
 28586 ;;		_scale
 28587 ;;		_sprintf
 28588 ;; This function uses a non-reentrant model
 28589 ;;
 28590                           
 28591                           	psect	text64
 28592  006ECC                     __ptext64:
 28593                           	opt stack 0
 28594  006ECC                     ___ftmul:
 28595                           	opt stack 20
 28596                           
 28597                           ; BSR set to: 0
 28598                           ;incstack = 0
 28599  006ECC  C098  F09C         	movff	___ftmul@f1+2,??___ftmul
 28600  006ED0  0100               	movlb	0	; () banked
 28601  006ED2  6B9D               	clrf	(??___ftmul+1)& (0+255),b
 28602  006ED4  6B9E               	clrf	(??___ftmul+2)& (0+255),b
 28603  006ED6  0100               	movlb	0	; () banked
 28604  006ED8  3597               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 28605  006EDA  0100               	movlb	0	; () banked
 28606  006EDC  379C               	rlcf	??___ftmul& (0+255),f,b
 28607  006EDE  E301               	bnc	u14891
 28608  006EE0  819D               	bsf	(??___ftmul+1)& (0+255),0,b
 28609  006EE2                     u14891:
 28610  006EE2  0100               	movlb	0	; () banked
 28611  006EE4  519C               	movf	??___ftmul& (0+255),w,b
 28612  006EE6  0100               	movlb	0	; () banked
 28613  006EE8  6F9F               	movwf	___ftmul@exp& (0+255),b
 28614  006EEA  0100               	movlb	0	; () banked
 28615  006EEC  519F               	movf	___ftmul@exp& (0+255),w,b
 28616  006EEE  A4D8               	btfss	status,2,c
 28617  006EF0  D00A               	goto	l12627
 28618                           
 28619                           ; BSR set to: 0
 28620  006EF2  0E00               	movlw	0
 28621  006EF4  0100               	movlb	0	; () banked
 28622  006EF6  6F96               	movwf	?___ftmul& (0+255),b
 28623  006EF8  0E00               	movlw	0
 28624  006EFA  0100               	movlb	0	; () banked
 28625  006EFC  6F97               	movwf	(?___ftmul+1)& (0+255),b
 28626  006EFE  0E00               	movlw	0
 28627  006F00  0100               	movlb	0	; () banked
 28628  006F02  6F98               	movwf	(?___ftmul+2)& (0+255),b
 28629                           
 28630                           ; BSR set to: 0
 28631  006F04  0012               	return	
 28632  006F06                     l12627:
 28633                           
 28634                           ; BSR set to: 0
 28635  006F06  C09B  F09C         	movff	___ftmul@f2+2,??___ftmul
 28636  006F0A  0100               	movlb	0	; () banked
 28637  006F0C  6B9D               	clrf	(??___ftmul+1)& (0+255),b
 28638  006F0E  6B9E               	clrf	(??___ftmul+2)& (0+255),b
 28639  006F10  0100               	movlb	0	; () banked
 28640  006F12  359A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 28641  006F14  0100               	movlb	0	; () banked
 28642  006F16  379C               	rlcf	??___ftmul& (0+255),f,b
 28643  006F18  E301               	bnc	u14911
 28644  006F1A  819D               	bsf	(??___ftmul+1)& (0+255),0,b
 28645  006F1C                     u14911:
 28646  006F1C  0100               	movlb	0	; () banked
 28647  006F1E  519C               	movf	??___ftmul& (0+255),w,b
 28648  006F20  0100               	movlb	0	; () banked
 28649  006F22  6FA4               	movwf	___ftmul@sign& (0+255),b
 28650  006F24  0100               	movlb	0	; () banked
 28651  006F26  51A4               	movf	___ftmul@sign& (0+255),w,b
 28652  006F28  A4D8               	btfss	status,2,c
 28653  006F2A  D00A               	goto	l12633
 28654                           
 28655                           ; BSR set to: 0
 28656  006F2C  0E00               	movlw	0
 28657  006F2E  0100               	movlb	0	; () banked
 28658  006F30  6F96               	movwf	?___ftmul& (0+255),b
 28659  006F32  0E00               	movlw	0
 28660  006F34  0100               	movlb	0	; () banked
 28661  006F36  6F97               	movwf	(?___ftmul+1)& (0+255),b
 28662  006F38  0E00               	movlw	0
 28663  006F3A  0100               	movlb	0	; () banked
 28664  006F3C  6F98               	movwf	(?___ftmul+2)& (0+255),b
 28665                           
 28666                           ; BSR set to: 0
 28667  006F3E  0012               	return	
 28668  006F40                     l12633:
 28669                           
 28670                           ; BSR set to: 0
 28671  006F40  0100               	movlb	0	; () banked
 28672  006F42  51A4               	movf	___ftmul@sign& (0+255),w,b
 28673  006F44  0F7B               	addlw	123
 28674  006F46  0100               	movlb	0	; () banked
 28675  006F48  279F               	addwf	___ftmul@exp& (0+255),f,b
 28676                           
 28677                           ; BSR set to: 0
 28678  006F4A  C098  F0A4         	movff	___ftmul@f1+2,___ftmul@sign
 28679  006F4E  0100               	movlb	0	; () banked
 28680  006F50  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 28681  006F52  0100               	movlb	0	; () banked
 28682  006F54  1BA4               	xorwf	___ftmul@sign& (0+255),f,b
 28683  006F56  0E80               	movlw	128
 28684  006F58  0100               	movlb	0	; () banked
 28685  006F5A  17A4               	andwf	___ftmul@sign& (0+255),f,b
 28686                           
 28687                           ; BSR set to: 0
 28688  006F5C  0100               	movlb	0	; () banked
 28689  006F5E  8F97               	bsf	(___ftmul@f1+1)& (0+255),7,b
 28690                           
 28691                           ; BSR set to: 0
 28692  006F60  0100               	movlb	0	; () banked
 28693  006F62  8F9A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 28694                           
 28695                           ; BSR set to: 0
 28696  006F64  0EFF               	movlw	255
 28697  006F66  0100               	movlb	0	; () banked
 28698  006F68  1799               	andwf	___ftmul@f2& (0+255),f,b
 28699  006F6A  0EFF               	movlw	255
 28700  006F6C  0100               	movlb	0	; () banked
 28701  006F6E  179A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 28702  006F70  0E00               	movlw	0
 28703  006F72  0100               	movlb	0	; () banked
 28704  006F74  179B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 28705                           
 28706                           ; BSR set to: 0
 28707  006F76  0E00               	movlw	0
 28708  006F78  0100               	movlb	0	; () banked
 28709  006F7A  6FA0               	movwf	___ftmul@f3_as_product& (0+255),b
 28710  006F7C  0E00               	movlw	0
 28711  006F7E  0100               	movlb	0	; () banked
 28712  006F80  6FA1               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 28713  006F82  0E00               	movlw	0
 28714  006F84  0100               	movlb	0	; () banked
 28715  006F86  6FA2               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 28716                           
 28717                           ; BSR set to: 0
 28718  006F88  0E07               	movlw	7
 28719  006F8A  0100               	movlb	0	; () banked
 28720  006F8C  6FA3               	movwf	___ftmul@cntr& (0+255),b
 28721  006F8E  D000               	goto	l12647
 28722  006F90                     l12647:
 28723                           
 28724                           ; BSR set to: 0
 28725  006F90  0100               	movlb	0	; () banked
 28726  006F92  A196               	btfss	___ftmul@f1& (0+255),0,b
 28727  006F94  D00D               	goto	l12651
 28728                           
 28729                           ; BSR set to: 0
 28730  006F96  0100               	movlb	0	; () banked
 28731  006F98  5199               	movf	___ftmul@f2& (0+255),w,b
 28732  006F9A  0100               	movlb	0	; () banked
 28733  006F9C  27A0               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28734  006F9E  0100               	movlb	0	; () banked
 28735  006FA0  519A               	movf	(___ftmul@f2+1)& (0+255),w,b
 28736  006FA2  0100               	movlb	0	; () banked
 28737  006FA4  23A1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28738  006FA6  0100               	movlb	0	; () banked
 28739  006FA8  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 28740  006FAA  0100               	movlb	0	; () banked
 28741  006FAC  23A2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28742  006FAE  D000               	goto	l12651
 28743  006FB0                     l12651:
 28744                           
 28745                           ; BSR set to: 0
 28746  006FB0  0100               	movlb	0	; () banked
 28747  006FB2  90D8               	bcf	status,0,c
 28748  006FB4  3398               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28749  006FB6  3397               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28750  006FB8  3396               	rrcf	___ftmul@f1& (0+255),f,b
 28751  006FBA  0100               	movlb	0	; () banked
 28752  006FBC  90D8               	bcf	status,0,c
 28753  006FBE  3799               	rlcf	___ftmul@f2& (0+255),f,b
 28754  006FC0  379A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 28755  006FC2  379B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 28756                           
 28757                           ; BSR set to: 0
 28758  006FC4  0100               	movlb	0	; () banked
 28759  006FC6  2FA3               	decfsz	___ftmul@cntr& (0+255),f,b
 28760  006FC8  D7E3               	goto	l12647
 28761  006FCA  D000               	goto	l12655
 28762  006FCC                     l12655:
 28763                           
 28764                           ; BSR set to: 0
 28765  006FCC  0E09               	movlw	9
 28766  006FCE  0100               	movlb	0	; () banked
 28767  006FD0  6FA3               	movwf	___ftmul@cntr& (0+255),b
 28768  006FD2  D000               	goto	l12657
 28769  006FD4                     l12657:
 28770                           
 28771                           ; BSR set to: 0
 28772  006FD4  0100               	movlb	0	; () banked
 28773  006FD6  A196               	btfss	___ftmul@f1& (0+255),0,b
 28774  006FD8  D00D               	goto	l12661
 28775                           
 28776                           ; BSR set to: 0
 28777  006FDA  0100               	movlb	0	; () banked
 28778  006FDC  5199               	movf	___ftmul@f2& (0+255),w,b
 28779  006FDE  0100               	movlb	0	; () banked
 28780  006FE0  27A0               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28781  006FE2  0100               	movlb	0	; () banked
 28782  006FE4  519A               	movf	(___ftmul@f2+1)& (0+255),w,b
 28783  006FE6  0100               	movlb	0	; () banked
 28784  006FE8  23A1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28785  006FEA  0100               	movlb	0	; () banked
 28786  006FEC  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 28787  006FEE  0100               	movlb	0	; () banked
 28788  006FF0  23A2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28789  006FF2  D000               	goto	l12661
 28790  006FF4                     l12661:
 28791                           
 28792                           ; BSR set to: 0
 28793  006FF4  0100               	movlb	0	; () banked
 28794  006FF6  90D8               	bcf	status,0,c
 28795  006FF8  3398               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28796  006FFA  3397               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28797  006FFC  3396               	rrcf	___ftmul@f1& (0+255),f,b
 28798  006FFE  0100               	movlb	0	; () banked
 28799  007000  90D8               	bcf	status,0,c
 28800  007002  33A2               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 28801  007004  33A1               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 28802  007006  33A0               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 28803                           
 28804                           ; BSR set to: 0
 28805  007008  0100               	movlb	0	; () banked
 28806  00700A  2FA3               	decfsz	___ftmul@cntr& (0+255),f,b
 28807  00700C  D7E3               	goto	l12657
 28808  00700E  D000               	goto	l12665
 28809  007010                     l12665:
 28810                           
 28811                           ; BSR set to: 0
 28812  007010  C0A0  F07C         	movff	___ftmul@f3_as_product,___ftpack@arg
 28813  007014  C0A1  F07D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 28814  007018  C0A2  F07E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 28815  00701C  C09F  F07F         	movff	___ftmul@exp,___ftpack@exp
 28816  007020  C0A4  F080         	movff	___ftmul@sign,___ftpack@sign
 28817  007024  EC3C  F03B         	call	___ftpack	;wreg free
 28818  007028  C07C  F096         	movff	?___ftpack,?___ftmul
 28819  00702C  C07D  F097         	movff	?___ftpack+1,?___ftmul+1
 28820  007030  C07E  F098         	movff	?___ftpack+2,?___ftmul+2
 28821  007034  0012               	return	
 28822  007036  0012               	return		;funcret
 28823  007038                     __end_of___ftmul:
 28824                           	opt stack 0
 28825                           tblptru	equ	0xFF8
 28826                           tblptrh	equ	0xFF7
 28827                           tblptrl	equ	0xFF6
 28828                           tablat	equ	0xFF5
 28829                           prodh	equ	0xFF4
 28830                           prodl	equ	0xFF3
 28831                           intcon	equ	0xFF2
 28832                           intcon2	equ	0xFF1
 28833                           indf0	equ	0xFEF
 28834                           postinc0	equ	0xFEE
 28835                           fsr0h	equ	0xFEA
 28836                           fsr0l	equ	0xFE9
 28837                           wreg	equ	0xFE8
 28838                           indf1	equ	0xFE7
 28839                           postdec1	equ	0xFE5
 28840                           fsr1h	equ	0xFE2
 28841                           fsr1l	equ	0xFE1
 28842                           indf2	equ	0xFDF
 28843                           postinc2	equ	0xFDE
 28844                           postdec2	equ	0xFDD
 28845                           fsr2h	equ	0xFDA
 28846                           fsr2l	equ	0xFD9
 28847                           status	equ	0xFD8
 28848                           
 28849 ;; *************** function ___awmod *****************
 28850 ;; Defined at:
 28851 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 28852 ;; Parameters:    Size  Location     Type
 28853 ;;  dividend        2   28[BANK0 ] int 
 28854 ;;  divisor         2   30[BANK0 ] int 
 28855 ;; Auto vars:     Size  Location     Type
 28856 ;;  sign            1   33[BANK0 ] unsigned char 
 28857 ;;  counter         1   32[BANK0 ] unsigned char 
 28858 ;; Return value:  Size  Location     Type
 28859 ;;                  2   28[BANK0 ] int 
 28860 ;; Registers used:
 28861 ;;		wreg, status,2, status,0
 28862 ;; Tracked objects:
 28863 ;;		On entry : 0/0
 28864 ;;		On exit  : 0/0
 28865 ;;		Unchanged: 0/0
 28866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28870 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28871 ;;Total ram usage:        6 bytes
 28872 ;; Hardware stack levels used:    1
 28873 ;; Hardware stack levels required when called:    6
 28874 ;; This function calls:
 28875 ;;		Nothing
 28876 ;; This function is called by:
 28877 ;;		_fround
 28878 ;;		_scale
 28879 ;; This function uses a non-reentrant model
 28880 ;;
 28881                           
 28882                           	psect	text65
 28883  00822E                     __ptext65:
 28884                           	opt stack 0
 28885  00822E                     ___awmod:
 28886                           	opt stack 21
 28887                           
 28888                           ;incstack = 0
 28889  00822E  0E00               	movlw	0
 28890  008230  0100               	movlb	0	; () banked
 28891  008232  6F81               	movwf	___awmod@sign& (0+255),b
 28892                           
 28893                           ; BSR set to: 0
 28894  008234  0100               	movlb	0	; () banked
 28895  008236  AF7D               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28896  008238  D009               	goto	l12721
 28897                           
 28898                           ; BSR set to: 0
 28899  00823A  0100               	movlb	0	; () banked
 28900  00823C  6D7C               	negf	___awmod@dividend& (0+255),b
 28901  00823E  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 28902  008240  B0D8               	btfsc	status,0,c
 28903  008242  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 28904                           
 28905                           ; BSR set to: 0
 28906  008244  0E01               	movlw	1
 28907  008246  0100               	movlb	0	; () banked
 28908  008248  6F81               	movwf	___awmod@sign& (0+255),b
 28909  00824A  D000               	goto	l12721
 28910  00824C                     l12721:
 28911                           
 28912                           ; BSR set to: 0
 28913  00824C  0100               	movlb	0	; () banked
 28914  00824E  AF7F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28915  008250  D006               	goto	l12725
 28916                           
 28917                           ; BSR set to: 0
 28918  008252  0100               	movlb	0	; () banked
 28919  008254  6D7E               	negf	___awmod@divisor& (0+255),b
 28920  008256  1F7F               	comf	(___awmod@divisor+1)& (0+255),f,b
 28921  008258  B0D8               	btfsc	status,0,c
 28922  00825A  2B7F               	incf	(___awmod@divisor+1)& (0+255),f,b
 28923  00825C  D000               	goto	l12725
 28924  00825E                     l12725:
 28925                           
 28926                           ; BSR set to: 0
 28927  00825E  0100               	movlb	0	; () banked
 28928  008260  517E               	movf	___awmod@divisor& (0+255),w,b
 28929  008262  0100               	movlb	0	; () banked
 28930  008264  117F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28931  008266  B4D8               	btfsc	status,2,c
 28932  008268  D02B               	goto	l12741
 28933                           
 28934                           ; BSR set to: 0
 28935  00826A  0E01               	movlw	1
 28936  00826C  0100               	movlb	0	; () banked
 28937  00826E  6F80               	movwf	___awmod@counter& (0+255),b
 28938  008270  D007               	goto	l12731
 28939  008272                     l12729:
 28940                           
 28941                           ; BSR set to: 0
 28942  008272  0100               	movlb	0	; () banked
 28943  008274  90D8               	bcf	status,0,c
 28944  008276  377E               	rlcf	___awmod@divisor& (0+255),f,b
 28945  008278  377F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28946  00827A  0100               	movlb	0	; () banked
 28947  00827C  2B80               	incf	___awmod@counter& (0+255),f,b
 28948  00827E  D000               	goto	l12731
 28949  008280                     l12731:
 28950                           
 28951                           ; BSR set to: 0
 28952  008280  0100               	movlb	0	; () banked
 28953  008282  BF7F               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 28954  008284  D002               	goto	l12733
 28955  008286  D7F5               	goto	l12729
 28956                           
 28957                           ; BSR set to: 0
 28958  008288  D000               	goto	l12733
 28959  00828A                     l12733:
 28960                           
 28961                           ; BSR set to: 0
 28962  00828A  0100               	movlb	0	; () banked
 28963  00828C  517E               	movf	___awmod@divisor& (0+255),w,b
 28964  00828E  0100               	movlb	0	; () banked
 28965  008290  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 28966  008292  0100               	movlb	0	; () banked
 28967  008294  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 28968  008296  0100               	movlb	0	; () banked
 28969  008298  597D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28970  00829A  A0D8               	btfss	status,0,c
 28971  00829C  D009               	goto	l12737
 28972                           
 28973                           ; BSR set to: 0
 28974  00829E  0100               	movlb	0	; () banked
 28975  0082A0  517E               	movf	___awmod@divisor& (0+255),w,b
 28976  0082A2  0100               	movlb	0	; () banked
 28977  0082A4  5F7C               	subwf	___awmod@dividend& (0+255),f,b
 28978  0082A6  0100               	movlb	0	; () banked
 28979  0082A8  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 28980  0082AA  0100               	movlb	0	; () banked
 28981  0082AC  5B7D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28982  0082AE  D000               	goto	l12737
 28983  0082B0                     l12737:
 28984                           
 28985                           ; BSR set to: 0
 28986  0082B0  0100               	movlb	0	; () banked
 28987  0082B2  90D8               	bcf	status,0,c
 28988  0082B4  337F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28989  0082B6  337E               	rrcf	___awmod@divisor& (0+255),f,b
 28990                           
 28991                           ; BSR set to: 0
 28992  0082B8  0100               	movlb	0	; () banked
 28993  0082BA  2F80               	decfsz	___awmod@counter& (0+255),f,b
 28994  0082BC  D7E6               	goto	l12733
 28995                           
 28996                           ; BSR set to: 0
 28997  0082BE  D000               	goto	l12741
 28998  0082C0                     l12741:
 28999                           
 29000                           ; BSR set to: 0
 29001  0082C0  0100               	movlb	0	; () banked
 29002  0082C2  5181               	movf	___awmod@sign& (0+255),w,b
 29003  0082C4  0100               	movlb	0	; () banked
 29004  0082C6  B4D8               	btfsc	status,2,c
 29005  0082C8  D006               	goto	l12745
 29006                           
 29007                           ; BSR set to: 0
 29008  0082CA  0100               	movlb	0	; () banked
 29009  0082CC  6D7C               	negf	___awmod@dividend& (0+255),b
 29010  0082CE  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 29011  0082D0  B0D8               	btfsc	status,0,c
 29012  0082D2  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 29013  0082D4  D000               	goto	l12745
 29014  0082D6                     l12745:
 29015                           
 29016                           ; BSR set to: 0
 29017  0082D6  C07C  F07C         	movff	___awmod@dividend,?___awmod
 29018  0082DA  C07D  F07D         	movff	___awmod@dividend+1,?___awmod+1
 29019  0082DE  0012               	return	
 29020                           
 29021                           ; BSR set to: 0
 29022                           
 29023                           ; BSR set to: 0
 29024  0082E0  0012               	return		;funcret
 29025  0082E2                     __end_of___awmod:
 29026                           	opt stack 0
 29027                           tblptru	equ	0xFF8
 29028                           tblptrh	equ	0xFF7
 29029                           tblptrl	equ	0xFF6
 29030                           tablat	equ	0xFF5
 29031                           prodh	equ	0xFF4
 29032                           prodl	equ	0xFF3
 29033                           intcon	equ	0xFF2
 29034                           intcon2	equ	0xFF1
 29035                           indf0	equ	0xFEF
 29036                           postinc0	equ	0xFEE
 29037                           fsr0h	equ	0xFEA
 29038                           fsr0l	equ	0xFE9
 29039                           wreg	equ	0xFE8
 29040                           indf1	equ	0xFE7
 29041                           postdec1	equ	0xFE5
 29042                           fsr1h	equ	0xFE2
 29043                           fsr1l	equ	0xFE1
 29044                           indf2	equ	0xFDF
 29045                           postinc2	equ	0xFDE
 29046                           postdec2	equ	0xFDD
 29047                           fsr2h	equ	0xFDA
 29048                           fsr2l	equ	0xFD9
 29049                           status	equ	0xFD8
 29050                           
 29051 ;; *************** function ___awdiv *****************
 29052 ;; Defined at:
 29053 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 29054 ;; Parameters:    Size  Location     Type
 29055 ;;  dividend        2   34[BANK0 ] int 
 29056 ;;  divisor         2   36[BANK0 ] int 
 29057 ;; Auto vars:     Size  Location     Type
 29058 ;;  quotient        2   40[BANK0 ] int 
 29059 ;;  sign            1   39[BANK0 ] unsigned char 
 29060 ;;  counter         1   38[BANK0 ] unsigned char 
 29061 ;; Return value:  Size  Location     Type
 29062 ;;                  2   34[BANK0 ] int 
 29063 ;; Registers used:
 29064 ;;		wreg, status,2, status,0
 29065 ;; Tracked objects:
 29066 ;;		On entry : 0/0
 29067 ;;		On exit  : 0/0
 29068 ;;		Unchanged: 0/0
 29069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29071 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29073 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29074 ;;Total ram usage:        8 bytes
 29075 ;; Hardware stack levels used:    1
 29076 ;; Hardware stack levels required when called:    6
 29077 ;; This function calls:
 29078 ;;		Nothing
 29079 ;; This function is called by:
 29080 ;;		_fround
 29081 ;;		_scale
 29082 ;;		_sprintf
 29083 ;; This function uses a non-reentrant model
 29084 ;;
 29085                           
 29086                           	psect	text66
 29087  007CD4                     __ptext66:
 29088                           	opt stack 0
 29089  007CD4                     ___awdiv:
 29090                           	opt stack 21
 29091                           
 29092                           ; BSR set to: 0
 29093                           ;incstack = 0
 29094  007CD4  0E00               	movlw	0
 29095  007CD6  0100               	movlb	0	; () banked
 29096  007CD8  6F87               	movwf	___awdiv@sign& (0+255),b
 29097                           
 29098                           ; BSR set to: 0
 29099  007CDA  0100               	movlb	0	; () banked
 29100  007CDC  AF85               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 29101  007CDE  D009               	goto	l12677
 29102                           
 29103                           ; BSR set to: 0
 29104  007CE0  0100               	movlb	0	; () banked
 29105  007CE2  6D84               	negf	___awdiv@divisor& (0+255),b
 29106  007CE4  1F85               	comf	(___awdiv@divisor+1)& (0+255),f,b
 29107  007CE6  B0D8               	btfsc	status,0,c
 29108  007CE8  2B85               	incf	(___awdiv@divisor+1)& (0+255),f,b
 29109                           
 29110                           ; BSR set to: 0
 29111  007CEA  0E01               	movlw	1
 29112  007CEC  0100               	movlb	0	; () banked
 29113  007CEE  6F87               	movwf	___awdiv@sign& (0+255),b
 29114  007CF0  D000               	goto	l12677
 29115  007CF2                     l12677:
 29116                           
 29117                           ; BSR set to: 0
 29118  007CF2  0100               	movlb	0	; () banked
 29119  007CF4  AF83               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 29120  007CF6  D009               	goto	l12683
 29121                           
 29122                           ; BSR set to: 0
 29123  007CF8  0100               	movlb	0	; () banked
 29124  007CFA  6D82               	negf	___awdiv@dividend& (0+255),b
 29125  007CFC  1F83               	comf	(___awdiv@dividend+1)& (0+255),f,b
 29126  007CFE  B0D8               	btfsc	status,0,c
 29127  007D00  2B83               	incf	(___awdiv@dividend+1)& (0+255),f,b
 29128                           
 29129                           ; BSR set to: 0
 29130  007D02  0E01               	movlw	1
 29131  007D04  0100               	movlb	0	; () banked
 29132  007D06  1B87               	xorwf	___awdiv@sign& (0+255),f,b
 29133  007D08  D000               	goto	l12683
 29134  007D0A                     l12683:
 29135                           
 29136                           ; BSR set to: 0
 29137  007D0A  0E00               	movlw	0
 29138  007D0C  0100               	movlb	0	; () banked
 29139  007D0E  6F89               	movwf	(___awdiv@quotient+1)& (0+255),b
 29140  007D10  0E00               	movlw	0
 29141  007D12  6F88               	movwf	___awdiv@quotient& (0+255),b
 29142                           
 29143                           ; BSR set to: 0
 29144  007D14  0100               	movlb	0	; () banked
 29145  007D16  5184               	movf	___awdiv@divisor& (0+255),w,b
 29146  007D18  0100               	movlb	0	; () banked
 29147  007D1A  1185               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 29148  007D1C  B4D8               	btfsc	status,2,c
 29149  007D1E  D031               	goto	l12705
 29150                           
 29151                           ; BSR set to: 0
 29152  007D20  0E01               	movlw	1
 29153  007D22  0100               	movlb	0	; () banked
 29154  007D24  6F86               	movwf	___awdiv@counter& (0+255),b
 29155  007D26  D007               	goto	l12691
 29156  007D28                     l12689:
 29157                           
 29158                           ; BSR set to: 0
 29159  007D28  0100               	movlb	0	; () banked
 29160  007D2A  90D8               	bcf	status,0,c
 29161  007D2C  3784               	rlcf	___awdiv@divisor& (0+255),f,b
 29162  007D2E  3785               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 29163  007D30  0100               	movlb	0	; () banked
 29164  007D32  2B86               	incf	___awdiv@counter& (0+255),f,b
 29165  007D34  D000               	goto	l12691
 29166  007D36                     l12691:
 29167                           
 29168                           ; BSR set to: 0
 29169  007D36  0100               	movlb	0	; () banked
 29170  007D38  BF85               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 29171  007D3A  D002               	goto	l12693
 29172  007D3C  D7F5               	goto	l12689
 29173                           
 29174                           ; BSR set to: 0
 29175  007D3E  D000               	goto	l12693
 29176  007D40                     l12693:
 29177                           
 29178                           ; BSR set to: 0
 29179  007D40  0100               	movlb	0	; () banked
 29180  007D42  90D8               	bcf	status,0,c
 29181  007D44  3788               	rlcf	___awdiv@quotient& (0+255),f,b
 29182  007D46  3789               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 29183                           
 29184                           ; BSR set to: 0
 29185  007D48  0100               	movlb	0	; () banked
 29186  007D4A  5184               	movf	___awdiv@divisor& (0+255),w,b
 29187  007D4C  0100               	movlb	0	; () banked
 29188  007D4E  5D82               	subwf	___awdiv@dividend& (0+255),w,b
 29189  007D50  0100               	movlb	0	; () banked
 29190  007D52  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
 29191  007D54  0100               	movlb	0	; () banked
 29192  007D56  5983               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 29193  007D58  A0D8               	btfss	status,0,c
 29194  007D5A  D00B               	goto	l12701
 29195                           
 29196                           ; BSR set to: 0
 29197  007D5C  0100               	movlb	0	; () banked
 29198  007D5E  5184               	movf	___awdiv@divisor& (0+255),w,b
 29199  007D60  0100               	movlb	0	; () banked
 29200  007D62  5F82               	subwf	___awdiv@dividend& (0+255),f,b
 29201  007D64  0100               	movlb	0	; () banked
 29202  007D66  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
 29203  007D68  0100               	movlb	0	; () banked
 29204  007D6A  5B83               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 29205                           
 29206                           ; BSR set to: 0
 29207  007D6C  0100               	movlb	0	; () banked
 29208  007D6E  8188               	bsf	___awdiv@quotient& (0+255),0,b
 29209  007D70  D000               	goto	l12701
 29210  007D72                     l12701:
 29211                           
 29212                           ; BSR set to: 0
 29213  007D72  0100               	movlb	0	; () banked
 29214  007D74  90D8               	bcf	status,0,c
 29215  007D76  3385               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 29216  007D78  3384               	rrcf	___awdiv@divisor& (0+255),f,b
 29217                           
 29218                           ; BSR set to: 0
 29219  007D7A  0100               	movlb	0	; () banked
 29220  007D7C  2F86               	decfsz	___awdiv@counter& (0+255),f,b
 29221  007D7E  D7E0               	goto	l12693
 29222                           
 29223                           ; BSR set to: 0
 29224  007D80  D000               	goto	l12705
 29225  007D82                     l12705:
 29226                           
 29227                           ; BSR set to: 0
 29228  007D82  0100               	movlb	0	; () banked
 29229  007D84  5187               	movf	___awdiv@sign& (0+255),w,b
 29230  007D86  0100               	movlb	0	; () banked
 29231  007D88  B4D8               	btfsc	status,2,c
 29232  007D8A  D006               	goto	l12709
 29233                           
 29234                           ; BSR set to: 0
 29235  007D8C  0100               	movlb	0	; () banked
 29236  007D8E  6D88               	negf	___awdiv@quotient& (0+255),b
 29237  007D90  1F89               	comf	(___awdiv@quotient+1)& (0+255),f,b
 29238  007D92  B0D8               	btfsc	status,0,c
 29239  007D94  2B89               	incf	(___awdiv@quotient+1)& (0+255),f,b
 29240  007D96  D000               	goto	l12709
 29241  007D98                     l12709:
 29242                           
 29243                           ; BSR set to: 0
 29244  007D98  C088  F082         	movff	___awdiv@quotient,?___awdiv
 29245  007D9C  C089  F083         	movff	___awdiv@quotient+1,?___awdiv+1
 29246  007DA0  0012               	return	
 29247                           
 29248                           ; BSR set to: 0
 29249                           
 29250                           ; BSR set to: 0
 29251  007DA2  0012               	return		;funcret
 29252  007DA4                     __end_of___awdiv:
 29253                           	opt stack 0
 29254                           tblptru	equ	0xFF8
 29255                           tblptrh	equ	0xFF7
 29256                           tblptrl	equ	0xFF6
 29257                           tablat	equ	0xFF5
 29258                           prodh	equ	0xFF4
 29259                           prodl	equ	0xFF3
 29260                           intcon	equ	0xFF2
 29261                           intcon2	equ	0xFF1
 29262                           indf0	equ	0xFEF
 29263                           postinc0	equ	0xFEE
 29264                           fsr0h	equ	0xFEA
 29265                           fsr0l	equ	0xFE9
 29266                           wreg	equ	0xFE8
 29267                           indf1	equ	0xFE7
 29268                           postdec1	equ	0xFE5
 29269                           fsr1h	equ	0xFE2
 29270                           fsr1l	equ	0xFE1
 29271                           indf2	equ	0xFDF
 29272                           postinc2	equ	0xFDE
 29273                           postdec2	equ	0xFDD
 29274                           fsr2h	equ	0xFDA
 29275                           fsr2l	equ	0xFD9
 29276                           status	equ	0xFD8
 29277                           
 29278 ;; *************** function __tdiv_to_l_ *****************
 29279 ;; Defined at:
 29280 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 29281 ;; Parameters:    Size  Location     Type
 29282 ;;  f1              3   28[BANK0 ] float 
 29283 ;;  f2              3   31[BANK0 ] float 
 29284 ;; Auto vars:     Size  Location     Type
 29285 ;;  quot            4   37[BANK0 ] unsigned long 
 29286 ;;  exp1            1   42[BANK0 ] unsigned char 
 29287 ;;  cntr            1   41[BANK0 ] unsigned char 
 29288 ;; Return value:  Size  Location     Type
 29289 ;;                  4   28[BANK0 ] unsigned long 
 29290 ;; Registers used:
 29291 ;;		wreg, status,2, status,0
 29292 ;; Tracked objects:
 29293 ;;		On entry : 0/0
 29294 ;;		On exit  : 0/0
 29295 ;;		Unchanged: 0/0
 29296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29297 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29298 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29299 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29300 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29301 ;;Total ram usage:       15 bytes
 29302 ;; Hardware stack levels used:    1
 29303 ;; Hardware stack levels required when called:    6
 29304 ;; This function calls:
 29305 ;;		Nothing
 29306 ;; This function is called by:
 29307 ;;		_sprintf
 29308 ;; This function uses a non-reentrant model
 29309 ;;
 29310                           
 29311                           	psect	text67
 29312  006894                     __ptext67:
 29313                           	opt stack 0
 29314  006894                     __tdiv_to_l_:
 29315                           	opt stack 22
 29316                           
 29317                           ; BSR set to: 0
 29318                           ;incstack = 0
 29319  006894  C07E  F082         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 29320  006898  0100               	movlb	0	; () banked
 29321  00689A  6B83               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29322  00689C  6B84               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29323  00689E  0100               	movlb	0	; () banked
 29324  0068A0  357D               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29325  0068A2  0100               	movlb	0	; () banked
 29326  0068A4  3782               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29327  0068A6  E301               	bnc	u15481
 29328  0068A8  8183               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29329  0068AA                     u15481:
 29330  0068AA  0100               	movlb	0	; () banked
 29331  0068AC  5182               	movf	??__tdiv_to_l_& (0+255),w,b
 29332  0068AE  0100               	movlb	0	; () banked
 29333  0068B0  6F8A               	movwf	__tdiv_to_l_@exp1& (0+255),b
 29334  0068B2  0100               	movlb	0	; () banked
 29335  0068B4  518A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29336  0068B6  A4D8               	btfss	status,2,c
 29337  0068B8  D00A               	goto	l12975
 29338                           
 29339                           ; BSR set to: 0
 29340  0068BA  0E00               	movlw	0
 29341  0068BC  0100               	movlb	0	; () banked
 29342  0068BE  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29343  0068C0  0E00               	movlw	0
 29344  0068C2  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29345  0068C4  0E00               	movlw	0
 29346  0068C6  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29347  0068C8  0E00               	movlw	0
 29348  0068CA  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29349                           
 29350                           ; BSR set to: 0
 29351  0068CC  0012               	return	
 29352  0068CE                     l12975:
 29353                           
 29354                           ; BSR set to: 0
 29355  0068CE  C081  F082         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29356  0068D2  0100               	movlb	0	; () banked
 29357  0068D4  6B83               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29358  0068D6  6B84               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29359  0068D8  0100               	movlb	0	; () banked
 29360  0068DA  3580               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29361  0068DC  0100               	movlb	0	; () banked
 29362  0068DE  3782               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29363  0068E0  E301               	bnc	u15501
 29364  0068E2  8183               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29365  0068E4                     u15501:
 29366  0068E4  0100               	movlb	0	; () banked
 29367  0068E6  5182               	movf	??__tdiv_to_l_& (0+255),w,b
 29368  0068E8  0100               	movlb	0	; () banked
 29369  0068EA  6F89               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29370  0068EC  0100               	movlb	0	; () banked
 29371  0068EE  5189               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29372  0068F0  A4D8               	btfss	status,2,c
 29373  0068F2  D00A               	goto	l12981
 29374                           
 29375                           ; BSR set to: 0
 29376  0068F4  0E00               	movlw	0
 29377  0068F6  0100               	movlb	0	; () banked
 29378  0068F8  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29379  0068FA  0E00               	movlw	0
 29380  0068FC  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29381  0068FE  0E00               	movlw	0
 29382  006900  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29383  006902  0E00               	movlw	0
 29384  006904  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29385                           
 29386                           ; BSR set to: 0
 29387  006906  0012               	return	
 29388  006908                     l12981:
 29389                           
 29390                           ; BSR set to: 0
 29391  006908  0100               	movlb	0	; () banked
 29392  00690A  8F7D               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29393                           
 29394                           ; BSR set to: 0
 29395  00690C  0EFF               	movlw	255
 29396  00690E  0100               	movlb	0	; () banked
 29397  006910  177C               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29398  006912  0EFF               	movlw	255
 29399  006914  0100               	movlb	0	; () banked
 29400  006916  177D               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29401  006918  0E00               	movlw	0
 29402  00691A  0100               	movlb	0	; () banked
 29403  00691C  177E               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29404  00691E  0100               	movlb	0	; () banked
 29405  006920  8F80               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29406                           
 29407                           ; BSR set to: 0
 29408  006922  0EFF               	movlw	255
 29409  006924  0100               	movlb	0	; () banked
 29410  006926  177F               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29411  006928  0EFF               	movlw	255
 29412  00692A  0100               	movlb	0	; () banked
 29413  00692C  1780               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29414  00692E  0E00               	movlw	0
 29415  006930  0100               	movlb	0	; () banked
 29416  006932  1781               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29417                           
 29418                           ; BSR set to: 0
 29419  006934  0E00               	movlw	0
 29420  006936  0100               	movlb	0	; () banked
 29421  006938  6F85               	movwf	__tdiv_to_l_@quot& (0+255),b
 29422  00693A  0E00               	movlw	0
 29423  00693C  6F86               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29424  00693E  0E00               	movlw	0
 29425  006940  6F87               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29426  006942  0E00               	movlw	0
 29427  006944  6F88               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29428                           
 29429                           ; BSR set to: 0
 29430  006946  0E7F               	movlw	127
 29431  006948  0100               	movlb	0	; () banked
 29432  00694A  5F8A               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29433                           
 29434                           ; BSR set to: 0
 29435  00694C  0100               	movlb	0	; () banked
 29436  00694E  5189               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29437  006950  0F98               	addlw	152
 29438  006952  0100               	movlb	0	; () banked
 29439  006954  5F8A               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29440                           
 29441                           ; BSR set to: 0
 29442  006956  0E18               	movlw	24
 29443  006958  0100               	movlb	0	; () banked
 29444  00695A  6F89               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29445  00695C                     l2738:
 29446                           
 29447                           ; BSR set to: 0
 29448  00695C  0100               	movlb	0	; () banked
 29449  00695E  90D8               	bcf	status,0,c
 29450  006960  3785               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29451  006962  3786               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29452  006964  3787               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29453  006966  3788               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29454                           
 29455                           ; BSR set to: 0
 29456  006968  0100               	movlb	0	; () banked
 29457  00696A  517F               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29458  00696C  0100               	movlb	0	; () banked
 29459  00696E  5D7C               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29460  006970  0100               	movlb	0	; () banked
 29461  006972  5180               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29462  006974  0100               	movlb	0	; () banked
 29463  006976  597D               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29464  006978  0100               	movlb	0	; () banked
 29465  00697A  5181               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29466  00697C  0100               	movlb	0	; () banked
 29467  00697E  597E               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29468  006980  A0D8               	btfss	status,0,c
 29469  006982  D00E               	goto	l2739
 29470                           
 29471                           ; BSR set to: 0
 29472  006984  0100               	movlb	0	; () banked
 29473  006986  517F               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29474  006988  0100               	movlb	0	; () banked
 29475  00698A  5F7C               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29476  00698C  0100               	movlb	0	; () banked
 29477  00698E  5180               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29478  006990  0100               	movlb	0	; () banked
 29479  006992  5B7D               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29480  006994  0100               	movlb	0	; () banked
 29481  006996  5181               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29482  006998  0100               	movlb	0	; () banked
 29483  00699A  5B7E               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29484                           
 29485                           ; BSR set to: 0
 29486  00699C  0100               	movlb	0	; () banked
 29487  00699E  8185               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29488  0069A0                     l2739:
 29489                           
 29490                           ; BSR set to: 0
 29491  0069A0  0100               	movlb	0	; () banked
 29492  0069A2  90D8               	bcf	status,0,c
 29493  0069A4  377C               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29494  0069A6  377D               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29495  0069A8  377E               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29496                           
 29497                           ; BSR set to: 0
 29498  0069AA  0100               	movlb	0	; () banked
 29499  0069AC  2F89               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29500  0069AE  D7D6               	goto	l2738
 29501  0069B0  D000               	goto	l13003
 29502  0069B2                     l13003:
 29503                           
 29504                           ; BSR set to: 0
 29505  0069B2  0100               	movlb	0	; () banked
 29506  0069B4  AF8A               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29507  0069B6  D01B               	goto	l13015
 29508                           
 29509                           ; BSR set to: 0
 29510  0069B8  0100               	movlb	0	; () banked
 29511  0069BA  518A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29512  0069BC  0A80               	xorlw	128
 29513  0069BE  0F97               	addlw	151
 29514  0069C0  B0D8               	btfsc	status,0,c
 29515  0069C2  D00B               	goto	l13011
 29516                           
 29517                           ; BSR set to: 0
 29518  0069C4  0E00               	movlw	0
 29519  0069C6  0100               	movlb	0	; () banked
 29520  0069C8  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29521  0069CA  0E00               	movlw	0
 29522  0069CC  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29523  0069CE  0E00               	movlw	0
 29524  0069D0  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29525  0069D2  0E00               	movlw	0
 29526  0069D4  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29527                           
 29528                           ; BSR set to: 0
 29529  0069D6  0012               	return	
 29530                           
 29531                           ; BSR set to: 0
 29532  0069D8  D000               	goto	l13011
 29533  0069DA                     l13011:
 29534                           
 29535                           ; BSR set to: 0
 29536  0069DA  0100               	movlb	0	; () banked
 29537  0069DC  90D8               	bcf	status,0,c
 29538  0069DE  3388               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29539  0069E0  3387               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29540  0069E2  3386               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29541  0069E4  3385               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29542                           
 29543                           ; BSR set to: 0
 29544  0069E6  0100               	movlb	0	; () banked
 29545  0069E8  3F8A               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29546  0069EA  D7F7               	goto	l13011
 29547                           
 29548                           ; BSR set to: 0
 29549  0069EC  D01D               	goto	l2745
 29550  0069EE                     l13015:
 29551                           
 29552                           ; BSR set to: 0
 29553  0069EE  0E17               	movlw	23
 29554  0069F0  0100               	movlb	0	; () banked
 29555  0069F2  658A               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29556  0069F4  D014               	goto	l13023
 29557                           
 29558                           ; BSR set to: 0
 29559  0069F6  0E00               	movlw	0
 29560  0069F8  0100               	movlb	0	; () banked
 29561  0069FA  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29562  0069FC  0E00               	movlw	0
 29563  0069FE  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29564  006A00  0E00               	movlw	0
 29565  006A02  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29566  006A04  0E00               	movlw	0
 29567  006A06  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29568                           
 29569                           ; BSR set to: 0
 29570  006A08  0012               	return	
 29571                           
 29572                           ; BSR set to: 0
 29573  006A0A  D009               	goto	l13023
 29574  006A0C                     l13021:
 29575                           
 29576                           ; BSR set to: 0
 29577  006A0C  0100               	movlb	0	; () banked
 29578  006A0E  90D8               	bcf	status,0,c
 29579  006A10  3785               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29580  006A12  3786               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29581  006A14  3787               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29582  006A16  3788               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29583  006A18  0100               	movlb	0	; () banked
 29584  006A1A  078A               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29585  006A1C  D000               	goto	l13023
 29586  006A1E                     l13023:
 29587                           
 29588                           ; BSR set to: 0
 29589  006A1E  0100               	movlb	0	; () banked
 29590  006A20  518A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29591  006A22  0100               	movlb	0	; () banked
 29592  006A24  A4D8               	btfss	status,2,c
 29593  006A26  D7F2               	goto	l13021
 29594  006A28                     l2745:
 29595                           
 29596                           ; BSR set to: 0
 29597  006A28  C085  F07C         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29598  006A2C  C086  F07D         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29599  006A30  C087  F07E         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29600  006A34  C088  F07F         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29601                           
 29602                           ; BSR set to: 0
 29603  006A38  0012               	return		;funcret
 29604  006A3A                     __end_of__tdiv_to_l_:
 29605                           	opt stack 0
 29606                           tblptru	equ	0xFF8
 29607                           tblptrh	equ	0xFF7
 29608                           tblptrl	equ	0xFF6
 29609                           tablat	equ	0xFF5
 29610                           prodh	equ	0xFF4
 29611                           prodl	equ	0xFF3
 29612                           intcon	equ	0xFF2
 29613                           intcon2	equ	0xFF1
 29614                           indf0	equ	0xFEF
 29615                           postinc0	equ	0xFEE
 29616                           fsr0h	equ	0xFEA
 29617                           fsr0l	equ	0xFE9
 29618                           wreg	equ	0xFE8
 29619                           indf1	equ	0xFE7
 29620                           postdec1	equ	0xFE5
 29621                           fsr1h	equ	0xFE2
 29622                           fsr1l	equ	0xFE1
 29623                           indf2	equ	0xFDF
 29624                           postinc2	equ	0xFDE
 29625                           postdec2	equ	0xFDD
 29626                           fsr2h	equ	0xFDA
 29627                           fsr2l	equ	0xFD9
 29628                           status	equ	0xFD8
 29629                           
 29630 ;; *************** function __div_to_l_ *****************
 29631 ;; Defined at:
 29632 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 29633 ;; Parameters:    Size  Location     Type
 29634 ;;  f1              3   28[BANK0 ] unsigned long 
 29635 ;;  f2              3   31[BANK0 ] unsigned long 
 29636 ;; Auto vars:     Size  Location     Type
 29637 ;;  quot            4   34[BANK0 ] unsigned long 
 29638 ;;  exp1            1   39[BANK0 ] unsigned char 
 29639 ;;  cntr            1   38[BANK0 ] unsigned char 
 29640 ;; Return value:  Size  Location     Type
 29641 ;;                  4   28[BANK0 ] unsigned long 
 29642 ;; Registers used:
 29643 ;;		wreg, status,2, status,0
 29644 ;; Tracked objects:
 29645 ;;		On entry : 0/0
 29646 ;;		On exit  : 0/0
 29647 ;;		Unchanged: 0/0
 29648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29649 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29652 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29653 ;;Total ram usage:       12 bytes
 29654 ;; Hardware stack levels used:    1
 29655 ;; Hardware stack levels required when called:    6
 29656 ;; This function calls:
 29657 ;;		Nothing
 29658 ;; This function is called by:
 29659 ;;		_sprintf
 29660 ;; This function uses a non-reentrant model
 29661 ;;
 29662                           
 29663                           	psect	text68
 29664  006A3A                     __ptext68:
 29665                           	opt stack 0
 29666  006A3A                     __div_to_l_:
 29667                           	opt stack 22
 29668                           
 29669                           ; BSR set to: 0
 29670                           ;incstack = 0
 29671  006A3A  0100               	movlb	0	; () banked
 29672  006A3C  357E               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29673  006A3E  357F               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29674  006A40  0100               	movlb	0	; () banked
 29675  006A42  6F87               	movwf	__div_to_l_@exp1& (0+255),b
 29676  006A44  0100               	movlb	0	; () banked
 29677  006A46  5187               	movf	__div_to_l_@exp1& (0+255),w,b
 29678  006A48  A4D8               	btfss	status,2,c
 29679  006A4A  D00A               	goto	l13031
 29680                           
 29681                           ; BSR set to: 0
 29682  006A4C  0E00               	movlw	0
 29683  006A4E  0100               	movlb	0	; () banked
 29684  006A50  6F7C               	movwf	?__div_to_l_& (0+255),b
 29685  006A52  0E00               	movlw	0
 29686  006A54  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29687  006A56  0E00               	movlw	0
 29688  006A58  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29689  006A5A  0E00               	movlw	0
 29690  006A5C  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29691                           
 29692                           ; BSR set to: 0
 29693  006A5E  0012               	return	
 29694  006A60                     l13031:
 29695                           
 29696                           ; BSR set to: 0
 29697  006A60  0100               	movlb	0	; () banked
 29698  006A62  3581               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29699  006A64  3582               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29700  006A66  0100               	movlb	0	; () banked
 29701  006A68  6F86               	movwf	__div_to_l_@cntr& (0+255),b
 29702  006A6A  0100               	movlb	0	; () banked
 29703  006A6C  5186               	movf	__div_to_l_@cntr& (0+255),w,b
 29704  006A6E  A4D8               	btfss	status,2,c
 29705  006A70  D00A               	goto	l13037
 29706                           
 29707                           ; BSR set to: 0
 29708  006A72  0E00               	movlw	0
 29709  006A74  0100               	movlb	0	; () banked
 29710  006A76  6F7C               	movwf	?__div_to_l_& (0+255),b
 29711  006A78  0E00               	movlw	0
 29712  006A7A  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29713  006A7C  0E00               	movlw	0
 29714  006A7E  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29715  006A80  0E00               	movlw	0
 29716  006A82  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29717                           
 29718                           ; BSR set to: 0
 29719  006A84  0012               	return	
 29720  006A86                     l13037:
 29721                           
 29722                           ; BSR set to: 0
 29723  006A86  0100               	movlb	0	; () banked
 29724  006A88  8F7E               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29725                           
 29726                           ; BSR set to: 0
 29727  006A8A  0EFF               	movlw	255
 29728  006A8C  0100               	movlb	0	; () banked
 29729  006A8E  177C               	andwf	__div_to_l_@f1& (0+255),f,b
 29730  006A90  0EFF               	movlw	255
 29731  006A92  177D               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29732  006A94  0EFF               	movlw	255
 29733  006A96  177E               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29734  006A98  0E00               	movlw	0
 29735  006A9A  177F               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29736                           
 29737                           ; BSR set to: 0
 29738  006A9C  0100               	movlb	0	; () banked
 29739  006A9E  8F81               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29740  006AA0  0EFF               	movlw	255
 29741  006AA2  0100               	movlb	0	; () banked
 29742  006AA4  177F               	andwf	__div_to_l_@f2& (0+255),f,b
 29743  006AA6  0EFF               	movlw	255
 29744  006AA8  1780               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29745  006AAA  0EFF               	movlw	255
 29746  006AAC  1781               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29747  006AAE  0E00               	movlw	0
 29748  006AB0  1782               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29749                           
 29750                           ; BSR set to: 0
 29751  006AB2  0E00               	movlw	0
 29752  006AB4  0100               	movlb	0	; () banked
 29753  006AB6  6F82               	movwf	__div_to_l_@quot& (0+255),b
 29754  006AB8  0E00               	movlw	0
 29755  006ABA  6F83               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29756  006ABC  0E00               	movlw	0
 29757  006ABE  6F84               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29758  006AC0  0E00               	movlw	0
 29759  006AC2  6F85               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29760                           
 29761                           ; BSR set to: 0
 29762  006AC4  0E7F               	movlw	127
 29763  006AC6  0100               	movlb	0	; () banked
 29764  006AC8  5F87               	subwf	__div_to_l_@exp1& (0+255),f,b
 29765                           
 29766                           ; BSR set to: 0
 29767  006ACA  0100               	movlb	0	; () banked
 29768  006ACC  5186               	movf	__div_to_l_@cntr& (0+255),w,b
 29769  006ACE  0FA0               	addlw	160
 29770  006AD0  0100               	movlb	0	; () banked
 29771  006AD2  5F87               	subwf	__div_to_l_@exp1& (0+255),f,b
 29772                           
 29773                           ; BSR set to: 0
 29774  006AD4  0E20               	movlw	32
 29775  006AD6  0100               	movlb	0	; () banked
 29776  006AD8  6F86               	movwf	__div_to_l_@cntr& (0+255),b
 29777  006ADA  D000               	goto	l13051
 29778  006ADC                     l13051:
 29779                           
 29780                           ; BSR set to: 0
 29781  006ADC  0100               	movlb	0	; () banked
 29782  006ADE  90D8               	bcf	status,0,c
 29783  006AE0  3782               	rlcf	__div_to_l_@quot& (0+255),f,b
 29784  006AE2  3783               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29785  006AE4  3784               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29786  006AE6  3785               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29787                           
 29788                           ; BSR set to: 0
 29789  006AE8  0100               	movlb	0	; () banked
 29790  006AEA  517F               	movf	__div_to_l_@f2& (0+255),w,b
 29791  006AEC  0100               	movlb	0	; () banked
 29792  006AEE  5D7C               	subwf	__div_to_l_@f1& (0+255),w,b
 29793  006AF0  0100               	movlb	0	; () banked
 29794  006AF2  5180               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29795  006AF4  0100               	movlb	0	; () banked
 29796  006AF6  597D               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29797  006AF8  0100               	movlb	0	; () banked
 29798  006AFA  5181               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29799  006AFC  0100               	movlb	0	; () banked
 29800  006AFE  597E               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29801  006B00  0100               	movlb	0	; () banked
 29802  006B02  5182               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29803  006B04  0100               	movlb	0	; () banked
 29804  006B06  597F               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29805  006B08  A0D8               	btfss	status,0,c
 29806  006B0A  D013               	goto	l13059
 29807                           
 29808                           ; BSR set to: 0
 29809  006B0C  0100               	movlb	0	; () banked
 29810  006B0E  517F               	movf	__div_to_l_@f2& (0+255),w,b
 29811  006B10  0100               	movlb	0	; () banked
 29812  006B12  5F7C               	subwf	__div_to_l_@f1& (0+255),f,b
 29813  006B14  0100               	movlb	0	; () banked
 29814  006B16  5180               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29815  006B18  0100               	movlb	0	; () banked
 29816  006B1A  5B7D               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29817  006B1C  0100               	movlb	0	; () banked
 29818  006B1E  5181               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29819  006B20  0100               	movlb	0	; () banked
 29820  006B22  5B7E               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29821  006B24  0100               	movlb	0	; () banked
 29822  006B26  5182               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29823  006B28  0100               	movlb	0	; () banked
 29824  006B2A  5B7F               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29825                           
 29826                           ; BSR set to: 0
 29827  006B2C  0100               	movlb	0	; () banked
 29828  006B2E  8182               	bsf	__div_to_l_@quot& (0+255),0,b
 29829  006B30  D000               	goto	l13059
 29830  006B32                     l13059:
 29831                           
 29832                           ; BSR set to: 0
 29833  006B32  0100               	movlb	0	; () banked
 29834  006B34  90D8               	bcf	status,0,c
 29835  006B36  377C               	rlcf	__div_to_l_@f1& (0+255),f,b
 29836  006B38  377D               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29837  006B3A  377E               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29838  006B3C  377F               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29839                           
 29840                           ; BSR set to: 0
 29841  006B3E  0100               	movlb	0	; () banked
 29842  006B40  2F86               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29843  006B42  D7CC               	goto	l13051
 29844  006B44  D000               	goto	l13063
 29845  006B46                     l13063:
 29846                           
 29847                           ; BSR set to: 0
 29848  006B46  0100               	movlb	0	; () banked
 29849  006B48  AF87               	btfss	__div_to_l_@exp1& (0+255),7,b
 29850  006B4A  D01B               	goto	l13075
 29851                           
 29852                           ; BSR set to: 0
 29853  006B4C  0100               	movlb	0	; () banked
 29854  006B4E  5187               	movf	__div_to_l_@exp1& (0+255),w,b
 29855  006B50  0A80               	xorlw	128
 29856  006B52  0F9F               	addlw	159
 29857  006B54  B0D8               	btfsc	status,0,c
 29858  006B56  D00B               	goto	l13071
 29859                           
 29860                           ; BSR set to: 0
 29861  006B58  0E00               	movlw	0
 29862  006B5A  0100               	movlb	0	; () banked
 29863  006B5C  6F7C               	movwf	?__div_to_l_& (0+255),b
 29864  006B5E  0E00               	movlw	0
 29865  006B60  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29866  006B62  0E00               	movlw	0
 29867  006B64  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29868  006B66  0E00               	movlw	0
 29869  006B68  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29870                           
 29871                           ; BSR set to: 0
 29872  006B6A  0012               	return	
 29873                           
 29874                           ; BSR set to: 0
 29875  006B6C  D000               	goto	l13071
 29876  006B6E                     l13071:
 29877                           
 29878                           ; BSR set to: 0
 29879  006B6E  0100               	movlb	0	; () banked
 29880  006B70  90D8               	bcf	status,0,c
 29881  006B72  3385               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29882  006B74  3384               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29883  006B76  3383               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29884  006B78  3382               	rrcf	__div_to_l_@quot& (0+255),f,b
 29885                           
 29886                           ; BSR set to: 0
 29887  006B7A  0100               	movlb	0	; () banked
 29888  006B7C  3F87               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29889  006B7E  D7F7               	goto	l13071
 29890                           
 29891                           ; BSR set to: 0
 29892  006B80  D01D               	goto	l2624
 29893  006B82                     l13075:
 29894                           
 29895                           ; BSR set to: 0
 29896  006B82  0E1F               	movlw	31
 29897  006B84  0100               	movlb	0	; () banked
 29898  006B86  6587               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29899  006B88  D014               	goto	l13083
 29900                           
 29901                           ; BSR set to: 0
 29902  006B8A  0E00               	movlw	0
 29903  006B8C  0100               	movlb	0	; () banked
 29904  006B8E  6F7C               	movwf	?__div_to_l_& (0+255),b
 29905  006B90  0E00               	movlw	0
 29906  006B92  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29907  006B94  0E00               	movlw	0
 29908  006B96  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29909  006B98  0E00               	movlw	0
 29910  006B9A  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29911                           
 29912                           ; BSR set to: 0
 29913  006B9C  0012               	return	
 29914                           
 29915                           ; BSR set to: 0
 29916  006B9E  D009               	goto	l13083
 29917  006BA0                     l13081:
 29918                           
 29919                           ; BSR set to: 0
 29920  006BA0  0100               	movlb	0	; () banked
 29921  006BA2  90D8               	bcf	status,0,c
 29922  006BA4  3782               	rlcf	__div_to_l_@quot& (0+255),f,b
 29923  006BA6  3783               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29924  006BA8  3784               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29925  006BAA  3785               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29926  006BAC  0100               	movlb	0	; () banked
 29927  006BAE  0787               	decf	__div_to_l_@exp1& (0+255),f,b
 29928  006BB0  D000               	goto	l13083
 29929  006BB2                     l13083:
 29930                           
 29931                           ; BSR set to: 0
 29932  006BB2  0100               	movlb	0	; () banked
 29933  006BB4  5187               	movf	__div_to_l_@exp1& (0+255),w,b
 29934  006BB6  0100               	movlb	0	; () banked
 29935  006BB8  A4D8               	btfss	status,2,c
 29936  006BBA  D7F2               	goto	l13081
 29937  006BBC                     l2624:
 29938                           
 29939                           ; BSR set to: 0
 29940  006BBC  C082  F07C         	movff	__div_to_l_@quot,?__div_to_l_
 29941  006BC0  C083  F07D         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29942  006BC4  C084  F07E         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29943  006BC8  C085  F07F         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29944                           
 29945                           ; BSR set to: 0
 29946  006BCC  0012               	return		;funcret
 29947  006BCE                     __end_of__div_to_l_:
 29948                           	opt stack 0
 29949                           tblptru	equ	0xFF8
 29950                           tblptrh	equ	0xFF7
 29951                           tblptrl	equ	0xFF6
 29952                           tablat	equ	0xFF5
 29953                           prodh	equ	0xFF4
 29954                           prodl	equ	0xFF3
 29955                           intcon	equ	0xFF2
 29956                           intcon2	equ	0xFF1
 29957                           indf0	equ	0xFEF
 29958                           postinc0	equ	0xFEE
 29959                           fsr0h	equ	0xFEA
 29960                           fsr0l	equ	0xFE9
 29961                           wreg	equ	0xFE8
 29962                           indf1	equ	0xFE7
 29963                           postdec1	equ	0xFE5
 29964                           fsr1h	equ	0xFE2
 29965                           fsr1l	equ	0xFE1
 29966                           indf2	equ	0xFDF
 29967                           postinc2	equ	0xFDE
 29968                           postdec2	equ	0xFDD
 29969                           fsr2h	equ	0xFDA
 29970                           fsr2l	equ	0xFD9
 29971                           status	equ	0xFD8
 29972                           
 29973 ;; *************** function ___lltoft *****************
 29974 ;; Defined at:
 29975 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 29976 ;; Parameters:    Size  Location     Type
 29977 ;;  c               4   36[BANK0 ] unsigned long 
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;  exp             1   44[BANK0 ] unsigned char 
 29980 ;; Return value:  Size  Location     Type
 29981 ;;                  3   36[BANK0 ] float 
 29982 ;; Registers used:
 29983 ;;		wreg, status,2, status,0, cstack
 29984 ;; Tracked objects:
 29985 ;;		On entry : 0/0
 29986 ;;		On exit  : 0/0
 29987 ;;		Unchanged: 0/0
 29988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29989 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29992 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29993 ;;Total ram usage:        9 bytes
 29994 ;; Hardware stack levels used:    1
 29995 ;; Hardware stack levels required when called:    7
 29996 ;; This function calls:
 29997 ;;		___ftpack
 29998 ;; This function is called by:
 29999 ;;		_InitUART
 30000 ;;		_sprintf
 30001 ;; This function uses a non-reentrant model
 30002 ;;
 30003                           
 30004                           	psect	text69
 30005  0088FC                     __ptext69:
 30006                           	opt stack 0
 30007  0088FC                     ___lltoft:
 30008                           	opt stack 21
 30009                           
 30010                           ; BSR set to: 0
 30011                           ;incstack = 0
 30012  0088FC  0E8E               	movlw	142
 30013  0088FE  0100               	movlb	0	; () banked
 30014  008900  6F8C               	movwf	___lltoft@exp& (0+255),b
 30015  008902  D009               	goto	l13203
 30016  008904                     l13201:
 30017                           
 30018                           ; BSR set to: 0
 30019  008904  0100               	movlb	0	; () banked
 30020  008906  90D8               	bcf	status,0,c
 30021  008908  3387               	rrcf	(___lltoft@c+3)& (0+255),f,b
 30022  00890A  3386               	rrcf	(___lltoft@c+2)& (0+255),f,b
 30023  00890C  3385               	rrcf	(___lltoft@c+1)& (0+255),f,b
 30024  00890E  3384               	rrcf	___lltoft@c& (0+255),f,b
 30025  008910  0100               	movlb	0	; () banked
 30026  008912  2B8C               	incf	___lltoft@exp& (0+255),f,b
 30027  008914  D000               	goto	l13203
 30028  008916                     l13203:
 30029                           
 30030                           ; BSR set to: 0
 30031  008916  0E00               	movlw	0
 30032  008918  0100               	movlb	0	; () banked
 30033  00891A  1584               	andwf	___lltoft@c& (0+255),w,b
 30034  00891C  0100               	movlb	0	; () banked
 30035  00891E  6F88               	movwf	??___lltoft& (0+255),b
 30036  008920  0E00               	movlw	0
 30037  008922  0100               	movlb	0	; () banked
 30038  008924  1585               	andwf	(___lltoft@c+1)& (0+255),w,b
 30039  008926  0100               	movlb	0	; () banked
 30040  008928  6F89               	movwf	(??___lltoft+1)& (0+255),b
 30041  00892A  0E00               	movlw	0
 30042  00892C  0100               	movlb	0	; () banked
 30043  00892E  1586               	andwf	(___lltoft@c+2)& (0+255),w,b
 30044  008930  0100               	movlb	0	; () banked
 30045  008932  6F8A               	movwf	(??___lltoft+2)& (0+255),b
 30046  008934  0EFF               	movlw	255
 30047  008936  0100               	movlb	0	; () banked
 30048  008938  1587               	andwf	(___lltoft@c+3)& (0+255),w,b
 30049  00893A  0100               	movlb	0	; () banked
 30050  00893C  6F8B               	movwf	(??___lltoft+3)& (0+255),b
 30051  00893E  0100               	movlb	0	; () banked
 30052  008940  5188               	movf	??___lltoft& (0+255),w,b
 30053  008942  0100               	movlb	0	; () banked
 30054  008944  1189               	iorwf	(??___lltoft+1)& (0+255),w,b
 30055  008946  0100               	movlb	0	; () banked
 30056  008948  118A               	iorwf	(??___lltoft+2)& (0+255),w,b
 30057  00894A  0100               	movlb	0	; () banked
 30058  00894C  118B               	iorwf	(??___lltoft+3)& (0+255),w,b
 30059  00894E  A4D8               	btfss	status,2,c
 30060  008950  D7D9               	goto	l13201
 30061                           
 30062                           ; BSR set to: 0
 30063                           
 30064                           ; BSR set to: 0
 30065  008952  C084  F07C         	movff	___lltoft@c,___ftpack@arg
 30066  008956  C085  F07D         	movff	___lltoft@c+1,___ftpack@arg+1
 30067  00895A  C086  F07E         	movff	___lltoft@c+2,___ftpack@arg+2
 30068  00895E  C08C  F07F         	movff	___lltoft@exp,___ftpack@exp
 30069  008962  0E00               	movlw	0
 30070  008964  0100               	movlb	0	; () banked
 30071  008966  6F80               	movwf	___ftpack@sign& (0+255),b
 30072  008968  EC3C  F03B         	call	___ftpack	;wreg free
 30073  00896C  C07C  F084         	movff	?___ftpack,?___lltoft
 30074  008970  C07D  F085         	movff	?___ftpack+1,?___lltoft+1
 30075  008974  C07E  F086         	movff	?___ftpack+2,?___lltoft+2
 30076  008978  0012               	return	
 30077  00897A  0012               	return		;funcret
 30078  00897C                     __end_of___lltoft:
 30079                           	opt stack 0
 30080                           tblptru	equ	0xFF8
 30081                           tblptrh	equ	0xFF7
 30082                           tblptrl	equ	0xFF6
 30083                           tablat	equ	0xFF5
 30084                           prodh	equ	0xFF4
 30085                           prodl	equ	0xFF3
 30086                           intcon	equ	0xFF2
 30087                           intcon2	equ	0xFF1
 30088                           indf0	equ	0xFEF
 30089                           postinc0	equ	0xFEE
 30090                           fsr0h	equ	0xFEA
 30091                           fsr0l	equ	0xFE9
 30092                           wreg	equ	0xFE8
 30093                           indf1	equ	0xFE7
 30094                           postdec1	equ	0xFE5
 30095                           fsr1h	equ	0xFE2
 30096                           fsr1l	equ	0xFE1
 30097                           indf2	equ	0xFDF
 30098                           postinc2	equ	0xFDE
 30099                           postdec2	equ	0xFDD
 30100                           fsr2h	equ	0xFDA
 30101                           fsr2l	equ	0xFD9
 30102                           status	equ	0xFD8
 30103                           
 30104 ;; *************** function ___llmod *****************
 30105 ;; Defined at:
 30106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 30107 ;; Parameters:    Size  Location     Type
 30108 ;;  dividend        4   41[BANK0 ] unsigned long 
 30109 ;;  divisor         4   45[BANK0 ] unsigned long 
 30110 ;; Auto vars:     Size  Location     Type
 30111 ;;  counter         1   49[BANK0 ] unsigned char 
 30112 ;; Return value:  Size  Location     Type
 30113 ;;                  4   41[BANK0 ] unsigned long 
 30114 ;; Registers used:
 30115 ;;		wreg, status,2, status,0
 30116 ;; Tracked objects:
 30117 ;;		On entry : 0/0
 30118 ;;		On exit  : 0/0
 30119 ;;		Unchanged: 0/0
 30120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30121 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30124 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30125 ;;Total ram usage:        9 bytes
 30126 ;; Hardware stack levels used:    1
 30127 ;; Hardware stack levels required when called:    6
 30128 ;; This function calls:
 30129 ;;		Nothing
 30130 ;; This function is called by:
 30131 ;;		_sprintf
 30132 ;; This function uses a non-reentrant model
 30133 ;;
 30134                           
 30135                           	psect	text70
 30136  008442                     __ptext70:
 30137                           	opt stack 0
 30138  008442                     ___llmod:
 30139                           	opt stack 22
 30140                           
 30141                           ;incstack = 0
 30142  008442  0100               	movlb	0	; () banked
 30143  008444  518D               	movf	___llmod@divisor& (0+255),w,b
 30144  008446  0100               	movlb	0	; () banked
 30145  008448  118E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 30146  00844A  0100               	movlb	0	; () banked
 30147  00844C  118F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 30148  00844E  0100               	movlb	0	; () banked
 30149  008450  1190               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 30150  008452  B4D8               	btfsc	status,2,c
 30151  008454  D03F               	goto	l2835
 30152                           
 30153                           ; BSR set to: 0
 30154  008456  0E01               	movlw	1
 30155  008458  0100               	movlb	0	; () banked
 30156  00845A  6F91               	movwf	___llmod@counter& (0+255),b
 30157  00845C  D009               	goto	l13189
 30158  00845E                     l13187:
 30159                           
 30160                           ; BSR set to: 0
 30161  00845E  0100               	movlb	0	; () banked
 30162  008460  90D8               	bcf	status,0,c
 30163  008462  378D               	rlcf	___llmod@divisor& (0+255),f,b
 30164  008464  378E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 30165  008466  378F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 30166  008468  3790               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 30167  00846A  0100               	movlb	0	; () banked
 30168  00846C  2B91               	incf	___llmod@counter& (0+255),f,b
 30169  00846E  D000               	goto	l13189
 30170  008470                     l13189:
 30171                           
 30172                           ; BSR set to: 0
 30173  008470  0100               	movlb	0	; () banked
 30174  008472  BF90               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 30175  008474  D002               	goto	l13191
 30176  008476  D7F3               	goto	l13187
 30177                           
 30178                           ; BSR set to: 0
 30179  008478  D000               	goto	l13191
 30180  00847A                     l13191:
 30181                           
 30182                           ; BSR set to: 0
 30183  00847A  0100               	movlb	0	; () banked
 30184  00847C  518D               	movf	___llmod@divisor& (0+255),w,b
 30185  00847E  0100               	movlb	0	; () banked
 30186  008480  5D89               	subwf	___llmod@dividend& (0+255),w,b
 30187  008482  0100               	movlb	0	; () banked
 30188  008484  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 30189  008486  0100               	movlb	0	; () banked
 30190  008488  598A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 30191  00848A  0100               	movlb	0	; () banked
 30192  00848C  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 30193  00848E  0100               	movlb	0	; () banked
 30194  008490  598B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 30195  008492  0100               	movlb	0	; () banked
 30196  008494  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 30197  008496  0100               	movlb	0	; () banked
 30198  008498  598C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 30199  00849A  A0D8               	btfss	status,0,c
 30200  00849C  D011               	goto	l13195
 30201                           
 30202                           ; BSR set to: 0
 30203  00849E  0100               	movlb	0	; () banked
 30204  0084A0  518D               	movf	___llmod@divisor& (0+255),w,b
 30205  0084A2  0100               	movlb	0	; () banked
 30206  0084A4  5F89               	subwf	___llmod@dividend& (0+255),f,b
 30207  0084A6  0100               	movlb	0	; () banked
 30208  0084A8  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 30209  0084AA  0100               	movlb	0	; () banked
 30210  0084AC  5B8A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 30211  0084AE  0100               	movlb	0	; () banked
 30212  0084B0  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 30213  0084B2  0100               	movlb	0	; () banked
 30214  0084B4  5B8B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 30215  0084B6  0100               	movlb	0	; () banked
 30216  0084B8  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 30217  0084BA  0100               	movlb	0	; () banked
 30218  0084BC  5B8C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 30219  0084BE  D000               	goto	l13195
 30220  0084C0                     l13195:
 30221                           
 30222                           ; BSR set to: 0
 30223  0084C0  0100               	movlb	0	; () banked
 30224  0084C2  90D8               	bcf	status,0,c
 30225  0084C4  3390               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 30226  0084C6  338F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 30227  0084C8  338E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 30228  0084CA  338D               	rrcf	___llmod@divisor& (0+255),f,b
 30229                           
 30230                           ; BSR set to: 0
 30231  0084CC  0100               	movlb	0	; () banked
 30232  0084CE  2F91               	decfsz	___llmod@counter& (0+255),f,b
 30233  0084D0  D7D4               	goto	l13191
 30234  0084D2  D000               	goto	l2835
 30235  0084D4                     l2835:
 30236                           
 30237                           ; BSR set to: 0
 30238  0084D4  C089  F089         	movff	___llmod@dividend,?___llmod
 30239  0084D8  C08A  F08A         	movff	___llmod@dividend+1,?___llmod+1
 30240  0084DC  C08B  F08B         	movff	___llmod@dividend+2,?___llmod+2
 30241  0084E0  C08C  F08C         	movff	___llmod@dividend+3,?___llmod+3
 30242                           
 30243                           ; BSR set to: 0
 30244  0084E4  0012               	return		;funcret
 30245  0084E6                     __end_of___llmod:
 30246                           	opt stack 0
 30247                           tblptru	equ	0xFF8
 30248                           tblptrh	equ	0xFF7
 30249                           tblptrl	equ	0xFF6
 30250                           tablat	equ	0xFF5
 30251                           prodh	equ	0xFF4
 30252                           prodl	equ	0xFF3
 30253                           intcon	equ	0xFF2
 30254                           intcon2	equ	0xFF1
 30255                           indf0	equ	0xFEF
 30256                           postinc0	equ	0xFEE
 30257                           fsr0h	equ	0xFEA
 30258                           fsr0l	equ	0xFE9
 30259                           wreg	equ	0xFE8
 30260                           indf1	equ	0xFE7
 30261                           postdec1	equ	0xFE5
 30262                           fsr1h	equ	0xFE2
 30263                           fsr1l	equ	0xFE1
 30264                           indf2	equ	0xFDF
 30265                           postinc2	equ	0xFDE
 30266                           postdec2	equ	0xFDD
 30267                           fsr2h	equ	0xFDA
 30268                           fsr2l	equ	0xFD9
 30269                           status	equ	0xFD8
 30270                           
 30271 ;; *************** function ___lldiv *****************
 30272 ;; Defined at:
 30273 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 30274 ;; Parameters:    Size  Location     Type
 30275 ;;  dividend        4   28[BANK0 ] unsigned long 
 30276 ;;  divisor         4   32[BANK0 ] unsigned long 
 30277 ;; Auto vars:     Size  Location     Type
 30278 ;;  quotient        4   36[BANK0 ] unsigned long 
 30279 ;;  counter         1   40[BANK0 ] unsigned char 
 30280 ;; Return value:  Size  Location     Type
 30281 ;;                  4   28[BANK0 ] unsigned long 
 30282 ;; Registers used:
 30283 ;;		wreg, status,2, status,0
 30284 ;; Tracked objects:
 30285 ;;		On entry : 0/0
 30286 ;;		On exit  : 0/0
 30287 ;;		Unchanged: 0/0
 30288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30289 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30290 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30292 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30293 ;;Total ram usage:       13 bytes
 30294 ;; Hardware stack levels used:    1
 30295 ;; Hardware stack levels required when called:    6
 30296 ;; This function calls:
 30297 ;;		Nothing
 30298 ;; This function is called by:
 30299 ;;		_InitUART
 30300 ;;		_sprintf
 30301 ;; This function uses a non-reentrant model
 30302 ;;
 30303                           
 30304                           	psect	text71
 30305  007F3A                     __ptext71:
 30306                           	opt stack 0
 30307  007F3A                     ___lldiv:
 30308                           	opt stack 22
 30309                           
 30310                           ; BSR set to: 0
 30311                           ;incstack = 0
 30312  007F3A  0E00               	movlw	0
 30313  007F3C  0100               	movlb	0	; () banked
 30314  007F3E  6F84               	movwf	___lldiv@quotient& (0+255),b
 30315  007F40  0E00               	movlw	0
 30316  007F42  6F85               	movwf	(___lldiv@quotient+1)& (0+255),b
 30317  007F44  0E00               	movlw	0
 30318  007F46  6F86               	movwf	(___lldiv@quotient+2)& (0+255),b
 30319  007F48  0E00               	movlw	0
 30320  007F4A  6F87               	movwf	(___lldiv@quotient+3)& (0+255),b
 30321                           
 30322                           ; BSR set to: 0
 30323  007F4C  0100               	movlb	0	; () banked
 30324  007F4E  5180               	movf	___lldiv@divisor& (0+255),w,b
 30325  007F50  0100               	movlb	0	; () banked
 30326  007F52  1181               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30327  007F54  0100               	movlb	0	; () banked
 30328  007F56  1182               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30329  007F58  0100               	movlb	0	; () banked
 30330  007F5A  1183               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30331  007F5C  B4D8               	btfsc	status,2,c
 30332  007F5E  D047               	goto	l2825
 30333                           
 30334                           ; BSR set to: 0
 30335  007F60  0E01               	movlw	1
 30336  007F62  0100               	movlb	0	; () banked
 30337  007F64  6F88               	movwf	___lldiv@counter& (0+255),b
 30338  007F66  D009               	goto	l13169
 30339  007F68                     l13167:
 30340                           
 30341                           ; BSR set to: 0
 30342  007F68  0100               	movlb	0	; () banked
 30343  007F6A  90D8               	bcf	status,0,c
 30344  007F6C  3780               	rlcf	___lldiv@divisor& (0+255),f,b
 30345  007F6E  3781               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30346  007F70  3782               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30347  007F72  3783               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30348  007F74  0100               	movlb	0	; () banked
 30349  007F76  2B88               	incf	___lldiv@counter& (0+255),f,b
 30350  007F78  D000               	goto	l13169
 30351  007F7A                     l13169:
 30352                           
 30353                           ; BSR set to: 0
 30354  007F7A  0100               	movlb	0	; () banked
 30355  007F7C  BF83               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 30356  007F7E  D002               	goto	l13171
 30357  007F80  D7F3               	goto	l13167
 30358                           
 30359                           ; BSR set to: 0
 30360  007F82  D000               	goto	l13171
 30361  007F84                     l13171:
 30362                           
 30363                           ; BSR set to: 0
 30364  007F84  0100               	movlb	0	; () banked
 30365  007F86  90D8               	bcf	status,0,c
 30366  007F88  3784               	rlcf	___lldiv@quotient& (0+255),f,b
 30367  007F8A  3785               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30368  007F8C  3786               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30369  007F8E  3787               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30370                           
 30371                           ; BSR set to: 0
 30372  007F90  0100               	movlb	0	; () banked
 30373  007F92  5180               	movf	___lldiv@divisor& (0+255),w,b
 30374  007F94  0100               	movlb	0	; () banked
 30375  007F96  5D7C               	subwf	___lldiv@dividend& (0+255),w,b
 30376  007F98  0100               	movlb	0	; () banked
 30377  007F9A  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30378  007F9C  0100               	movlb	0	; () banked
 30379  007F9E  597D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30380  007FA0  0100               	movlb	0	; () banked
 30381  007FA2  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30382  007FA4  0100               	movlb	0	; () banked
 30383  007FA6  597E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30384  007FA8  0100               	movlb	0	; () banked
 30385  007FAA  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30386  007FAC  0100               	movlb	0	; () banked
 30387  007FAE  597F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30388  007FB0  A0D8               	btfss	status,0,c
 30389  007FB2  D013               	goto	l13179
 30390                           
 30391                           ; BSR set to: 0
 30392  007FB4  0100               	movlb	0	; () banked
 30393  007FB6  5180               	movf	___lldiv@divisor& (0+255),w,b
 30394  007FB8  0100               	movlb	0	; () banked
 30395  007FBA  5F7C               	subwf	___lldiv@dividend& (0+255),f,b
 30396  007FBC  0100               	movlb	0	; () banked
 30397  007FBE  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30398  007FC0  0100               	movlb	0	; () banked
 30399  007FC2  5B7D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30400  007FC4  0100               	movlb	0	; () banked
 30401  007FC6  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30402  007FC8  0100               	movlb	0	; () banked
 30403  007FCA  5B7E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30404  007FCC  0100               	movlb	0	; () banked
 30405  007FCE  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30406  007FD0  0100               	movlb	0	; () banked
 30407  007FD2  5B7F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30408                           
 30409                           ; BSR set to: 0
 30410  007FD4  0100               	movlb	0	; () banked
 30411  007FD6  8184               	bsf	___lldiv@quotient& (0+255),0,b
 30412  007FD8  D000               	goto	l13179
 30413  007FDA                     l13179:
 30414                           
 30415                           ; BSR set to: 0
 30416  007FDA  0100               	movlb	0	; () banked
 30417  007FDC  90D8               	bcf	status,0,c
 30418  007FDE  3383               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30419  007FE0  3382               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30420  007FE2  3381               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30421  007FE4  3380               	rrcf	___lldiv@divisor& (0+255),f,b
 30422                           
 30423                           ; BSR set to: 0
 30424  007FE6  0100               	movlb	0	; () banked
 30425  007FE8  2F88               	decfsz	___lldiv@counter& (0+255),f,b
 30426  007FEA  D7CC               	goto	l13171
 30427  007FEC  D000               	goto	l2825
 30428  007FEE                     l2825:
 30429                           
 30430                           ; BSR set to: 0
 30431  007FEE  C084  F07C         	movff	___lldiv@quotient,?___lldiv
 30432  007FF2  C085  F07D         	movff	___lldiv@quotient+1,?___lldiv+1
 30433  007FF6  C086  F07E         	movff	___lldiv@quotient+2,?___lldiv+2
 30434  007FFA  C087  F07F         	movff	___lldiv@quotient+3,?___lldiv+3
 30435                           
 30436                           ; BSR set to: 0
 30437  007FFE  0012               	return		;funcret
 30438  008000                     __end_of___lldiv:
 30439                           	opt stack 0
 30440                           tblptru	equ	0xFF8
 30441                           tblptrh	equ	0xFF7
 30442                           tblptrl	equ	0xFF6
 30443                           tablat	equ	0xFF5
 30444                           prodh	equ	0xFF4
 30445                           prodl	equ	0xFF3
 30446                           intcon	equ	0xFF2
 30447                           intcon2	equ	0xFF1
 30448                           indf0	equ	0xFEF
 30449                           postinc0	equ	0xFEE
 30450                           fsr0h	equ	0xFEA
 30451                           fsr0l	equ	0xFE9
 30452                           wreg	equ	0xFE8
 30453                           indf1	equ	0xFE7
 30454                           postdec1	equ	0xFE5
 30455                           fsr1h	equ	0xFE2
 30456                           fsr1l	equ	0xFE1
 30457                           indf2	equ	0xFDF
 30458                           postinc2	equ	0xFDE
 30459                           postdec2	equ	0xFDD
 30460                           fsr2h	equ	0xFDA
 30461                           fsr2l	equ	0xFD9
 30462                           status	equ	0xFD8
 30463                           
 30464 ;; *************** function ___fttol *****************
 30465 ;; Defined at:
 30466 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 30467 ;; Parameters:    Size  Location     Type
 30468 ;;  f1              3   91[BANK0 ] float 
 30469 ;; Auto vars:     Size  Location     Type
 30470 ;;  lval            4  101[BANK0 ] unsigned long 
 30471 ;;  exp1            1  105[BANK0 ] unsigned char 
 30472 ;;  sign1           1  100[BANK0 ] unsigned char 
 30473 ;; Return value:  Size  Location     Type
 30474 ;;                  4   91[BANK0 ] long 
 30475 ;; Registers used:
 30476 ;;		wreg, status,2, status,0
 30477 ;; Tracked objects:
 30478 ;;		On entry : 0/0
 30479 ;;		On exit  : 0/0
 30480 ;;		Unchanged: 0/0
 30481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30482 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30483 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30484 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30485 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30486 ;;Total ram usage:       15 bytes
 30487 ;; Hardware stack levels used:    1
 30488 ;; Hardware stack levels required when called:    6
 30489 ;; This function calls:
 30490 ;;		Nothing
 30491 ;; This function is called by:
 30492 ;;		_Round
 30493 ;;		_InitUART
 30494 ;;		_sprintf
 30495 ;; This function uses a non-reentrant model
 30496 ;;
 30497                           
 30498                           	psect	text72
 30499  00718A                     __ptext72:
 30500                           	opt stack 0
 30501  00718A                     ___fttol:
 30502                           	opt stack 22
 30503                           
 30504                           ; BSR set to: 0
 30505                           ;incstack = 0
 30506  00718A  C0BD  F0BF         	movff	___fttol@f1+2,??___fttol
 30507  00718E  0100               	movlb	0	; () banked
 30508  007190  6BC0               	clrf	(??___fttol+1)& (0+255),b
 30509  007192  6BC1               	clrf	(??___fttol+2)& (0+255),b
 30510  007194  0100               	movlb	0	; () banked
 30511  007196  35BC               	rlcf	(___fttol@f1+1)& (0+255),w,b
 30512  007198  0100               	movlb	0	; () banked
 30513  00719A  37BF               	rlcf	??___fttol& (0+255),f,b
 30514  00719C  E301               	bnc	u15691
 30515  00719E  81C0               	bsf	(??___fttol+1)& (0+255),0,b
 30516  0071A0                     u15691:
 30517  0071A0  0100               	movlb	0	; () banked
 30518  0071A2  51BF               	movf	??___fttol& (0+255),w,b
 30519  0071A4  0100               	movlb	0	; () banked
 30520  0071A6  6FC9               	movwf	___fttol@exp1& (0+255),b
 30521  0071A8  0100               	movlb	0	; () banked
 30522  0071AA  51C9               	movf	___fttol@exp1& (0+255),w,b
 30523  0071AC  A4D8               	btfss	status,2,c
 30524  0071AE  D00A               	goto	l13121
 30525                           
 30526                           ; BSR set to: 0
 30527  0071B0  0E00               	movlw	0
 30528  0071B2  0100               	movlb	0	; () banked
 30529  0071B4  6FBB               	movwf	?___fttol& (0+255),b
 30530  0071B6  0E00               	movlw	0
 30531  0071B8  6FBC               	movwf	(?___fttol+1)& (0+255),b
 30532  0071BA  0E00               	movlw	0
 30533  0071BC  6FBD               	movwf	(?___fttol+2)& (0+255),b
 30534  0071BE  0E00               	movlw	0
 30535  0071C0  6FBE               	movwf	(?___fttol+3)& (0+255),b
 30536                           
 30537                           ; BSR set to: 0
 30538  0071C2  0012               	return	
 30539  0071C4                     l13121:
 30540                           
 30541                           ; BSR set to: 0
 30542  0071C4  0E17               	movlw	23
 30543  0071C6  0100               	movlb	0	; () banked
 30544  0071C8  6FBF               	movwf	??___fttol& (0+255),b
 30545  0071CA  C0BB  F0C0         	movff	___fttol@f1,??___fttol+1
 30546  0071CE  C0BC  F0C1         	movff	___fttol@f1+1,??___fttol+2
 30547  0071D2  C0BD  F0C2         	movff	___fttol@f1+2,??___fttol+3
 30548  0071D6  0100               	movlb	0	; () banked
 30549  0071D8  29BF               	incf	??___fttol& (0+255),w,b
 30550  0071DA  0100               	movlb	0	; () banked
 30551  0071DC  6FC3               	movwf	(??___fttol+4)& (0+255),b
 30552  0071DE  D005               	goto	u15710
 30553  0071E0                     u15715:
 30554  0071E0  0100               	movlb	0	; () banked
 30555  0071E2  90D8               	bcf	status,0,c
 30556  0071E4  33C2               	rrcf	(??___fttol+3)& (0+255),f,b
 30557  0071E6  33C1               	rrcf	(??___fttol+2)& (0+255),f,b
 30558  0071E8  33C0               	rrcf	(??___fttol+1)& (0+255),f,b
 30559  0071EA                     u15710:
 30560  0071EA  0100               	movlb	0	; () banked
 30561  0071EC  2FC3               	decfsz	(??___fttol+4)& (0+255),f,b
 30562  0071EE  D7F8               	goto	u15715
 30563  0071F0  0100               	movlb	0	; () banked
 30564  0071F2  51C0               	movf	(??___fttol+1)& (0+255),w,b
 30565  0071F4  0100               	movlb	0	; () banked
 30566  0071F6  6FC4               	movwf	___fttol@sign1& (0+255),b
 30567                           
 30568                           ; BSR set to: 0
 30569  0071F8  0100               	movlb	0	; () banked
 30570  0071FA  8FBC               	bsf	(___fttol@f1+1)& (0+255),7,b
 30571                           
 30572                           ; BSR set to: 0
 30573  0071FC  0EFF               	movlw	255
 30574  0071FE  0100               	movlb	0	; () banked
 30575  007200  17BB               	andwf	___fttol@f1& (0+255),f,b
 30576  007202  0EFF               	movlw	255
 30577  007204  0100               	movlb	0	; () banked
 30578  007206  17BC               	andwf	(___fttol@f1+1)& (0+255),f,b
 30579  007208  0E00               	movlw	0
 30580  00720A  0100               	movlb	0	; () banked
 30581  00720C  17BD               	andwf	(___fttol@f1+2)& (0+255),f,b
 30582                           
 30583                           ; BSR set to: 0
 30584  00720E  0100               	movlb	0	; () banked
 30585  007210  51BB               	movf	___fttol@f1& (0+255),w,b
 30586  007212  0100               	movlb	0	; () banked
 30587  007214  6FC5               	movwf	___fttol@lval& (0+255),b
 30588  007216  0100               	movlb	0	; () banked
 30589  007218  51BC               	movf	(___fttol@f1+1)& (0+255),w,b
 30590  00721A  0100               	movlb	0	; () banked
 30591  00721C  6FC6               	movwf	(___fttol@lval+1)& (0+255),b
 30592  00721E  0100               	movlb	0	; () banked
 30593  007220  51BD               	movf	(___fttol@f1+2)& (0+255),w,b
 30594  007222  0100               	movlb	0	; () banked
 30595  007224  6FC7               	movwf	(___fttol@lval+2)& (0+255),b
 30596  007226  0100               	movlb	0	; () banked
 30597  007228  6BC8               	clrf	(___fttol@lval+3)& (0+255),b
 30598                           
 30599                           ; BSR set to: 0
 30600  00722A  0E8E               	movlw	142
 30601  00722C  0100               	movlb	0	; () banked
 30602  00722E  5FC9               	subwf	___fttol@exp1& (0+255),f,b
 30603                           
 30604                           ; BSR set to: 0
 30605  007230  0100               	movlb	0	; () banked
 30606  007232  AFC9               	btfss	___fttol@exp1& (0+255),7,b
 30607  007234  D01B               	goto	l13143
 30608                           
 30609                           ; BSR set to: 0
 30610  007236  0100               	movlb	0	; () banked
 30611  007238  51C9               	movf	___fttol@exp1& (0+255),w,b
 30612  00723A  0A80               	xorlw	128
 30613  00723C  0F8F               	addlw	143
 30614  00723E  B0D8               	btfsc	status,0,c
 30615  007240  D00B               	goto	l13139
 30616                           
 30617                           ; BSR set to: 0
 30618  007242  0E00               	movlw	0
 30619  007244  0100               	movlb	0	; () banked
 30620  007246  6FBB               	movwf	?___fttol& (0+255),b
 30621  007248  0E00               	movlw	0
 30622  00724A  6FBC               	movwf	(?___fttol+1)& (0+255),b
 30623  00724C  0E00               	movlw	0
 30624  00724E  6FBD               	movwf	(?___fttol+2)& (0+255),b
 30625  007250  0E00               	movlw	0
 30626  007252  6FBE               	movwf	(?___fttol+3)& (0+255),b
 30627                           
 30628                           ; BSR set to: 0
 30629  007254  0012               	return	
 30630                           
 30631                           ; BSR set to: 0
 30632  007256  D000               	goto	l13139
 30633  007258                     l13139:
 30634                           
 30635                           ; BSR set to: 0
 30636  007258  0100               	movlb	0	; () banked
 30637  00725A  90D8               	bcf	status,0,c
 30638  00725C  33C8               	rrcf	(___fttol@lval+3)& (0+255),f,b
 30639  00725E  33C7               	rrcf	(___fttol@lval+2)& (0+255),f,b
 30640  007260  33C6               	rrcf	(___fttol@lval+1)& (0+255),f,b
 30641  007262  33C5               	rrcf	___fttol@lval& (0+255),f,b
 30642                           
 30643                           ; BSR set to: 0
 30644  007264  0100               	movlb	0	; () banked
 30645  007266  3FC9               	incfsz	___fttol@exp1& (0+255),f,b
 30646  007268  D7F7               	goto	l13139
 30647                           
 30648                           ; BSR set to: 0
 30649  00726A  D01F               	goto	l13153
 30650  00726C                     l13143:
 30651                           
 30652                           ; BSR set to: 0
 30653  00726C  0E17               	movlw	23
 30654  00726E  0100               	movlb	0	; () banked
 30655  007270  65C9               	cpfsgt	___fttol@exp1& (0+255),b
 30656  007272  D014               	goto	l13151
 30657                           
 30658                           ; BSR set to: 0
 30659  007274  0E00               	movlw	0
 30660  007276  0100               	movlb	0	; () banked
 30661  007278  6FBB               	movwf	?___fttol& (0+255),b
 30662  00727A  0E00               	movlw	0
 30663  00727C  6FBC               	movwf	(?___fttol+1)& (0+255),b
 30664  00727E  0E00               	movlw	0
 30665  007280  6FBD               	movwf	(?___fttol+2)& (0+255),b
 30666  007282  0E00               	movlw	0
 30667  007284  6FBE               	movwf	(?___fttol+3)& (0+255),b
 30668                           
 30669                           ; BSR set to: 0
 30670  007286  0012               	return	
 30671                           
 30672                           ; BSR set to: 0
 30673  007288  D009               	goto	l13151
 30674  00728A                     l13149:
 30675                           
 30676                           ; BSR set to: 0
 30677  00728A  0100               	movlb	0	; () banked
 30678  00728C  90D8               	bcf	status,0,c
 30679  00728E  37C5               	rlcf	___fttol@lval& (0+255),f,b
 30680  007290  37C6               	rlcf	(___fttol@lval+1)& (0+255),f,b
 30681  007292  37C7               	rlcf	(___fttol@lval+2)& (0+255),f,b
 30682  007294  37C8               	rlcf	(___fttol@lval+3)& (0+255),f,b
 30683  007296  0100               	movlb	0	; () banked
 30684  007298  07C9               	decf	___fttol@exp1& (0+255),f,b
 30685  00729A  D000               	goto	l13151
 30686  00729C                     l13151:
 30687                           
 30688                           ; BSR set to: 0
 30689  00729C  0100               	movlb	0	; () banked
 30690  00729E  51C9               	movf	___fttol@exp1& (0+255),w,b
 30691  0072A0  0100               	movlb	0	; () banked
 30692  0072A2  B4D8               	btfsc	status,2,c
 30693  0072A4  D002               	goto	l13153
 30694  0072A6  D7F1               	goto	l13149
 30695                           
 30696                           ; BSR set to: 0
 30697  0072A8  D000               	goto	l13153
 30698  0072AA                     l13153:
 30699                           
 30700                           ; BSR set to: 0
 30701  0072AA  0100               	movlb	0	; () banked
 30702  0072AC  51C4               	movf	___fttol@sign1& (0+255),w,b
 30703  0072AE  0100               	movlb	0	; () banked
 30704  0072B0  B4D8               	btfsc	status,2,c
 30705  0072B2  D00A               	goto	l13157
 30706                           
 30707                           ; BSR set to: 0
 30708  0072B4  0100               	movlb	0	; () banked
 30709  0072B6  1FC8               	comf	(___fttol@lval+3)& (0+255),f,b
 30710  0072B8  1FC7               	comf	(___fttol@lval+2)& (0+255),f,b
 30711  0072BA  1FC6               	comf	(___fttol@lval+1)& (0+255),f,b
 30712  0072BC  6DC5               	negf	___fttol@lval& (0+255),b
 30713  0072BE  0E00               	movlw	0
 30714  0072C0  23C6               	addwfc	(___fttol@lval+1)& (0+255),f,b
 30715  0072C2  23C7               	addwfc	(___fttol@lval+2)& (0+255),f,b
 30716  0072C4  23C8               	addwfc	(___fttol@lval+3)& (0+255),f,b
 30717  0072C6  D000               	goto	l13157
 30718  0072C8                     l13157:
 30719                           
 30720                           ; BSR set to: 0
 30721  0072C8  C0C5  F0BB         	movff	___fttol@lval,?___fttol
 30722  0072CC  C0C6  F0BC         	movff	___fttol@lval+1,?___fttol+1
 30723  0072D0  C0C7  F0BD         	movff	___fttol@lval+2,?___fttol+2
 30724  0072D4  C0C8  F0BE         	movff	___fttol@lval+3,?___fttol+3
 30725  0072D8  0012               	return	
 30726                           
 30727                           ; BSR set to: 0
 30728                           
 30729                           ; BSR set to: 0
 30730  0072DA  0012               	return		;funcret
 30731  0072DC                     __end_of___fttol:
 30732                           	opt stack 0
 30733                           tblptru	equ	0xFF8
 30734                           tblptrh	equ	0xFF7
 30735                           tblptrl	equ	0xFF6
 30736                           tablat	equ	0xFF5
 30737                           prodh	equ	0xFF4
 30738                           prodl	equ	0xFF3
 30739                           intcon	equ	0xFF2
 30740                           intcon2	equ	0xFF1
 30741                           indf0	equ	0xFEF
 30742                           postinc0	equ	0xFEE
 30743                           fsr0h	equ	0xFEA
 30744                           fsr0l	equ	0xFE9
 30745                           wreg	equ	0xFE8
 30746                           indf1	equ	0xFE7
 30747                           postdec1	equ	0xFE5
 30748                           fsr1h	equ	0xFE2
 30749                           fsr1l	equ	0xFE1
 30750                           indf2	equ	0xFDF
 30751                           postinc2	equ	0xFDE
 30752                           postdec2	equ	0xFDD
 30753                           fsr2h	equ	0xFDA
 30754                           fsr2l	equ	0xFD9
 30755                           status	equ	0xFD8
 30756                           
 30757 ;; *************** function ___ftsub *****************
 30758 ;; Defined at:
 30759 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 30760 ;; Parameters:    Size  Location     Type
 30761 ;;  f1              3   91[BANK0 ] float 
 30762 ;;  f2              3   94[BANK0 ] float 
 30763 ;; Auto vars:     Size  Location     Type
 30764 ;;		None
 30765 ;; Return value:  Size  Location     Type
 30766 ;;                  3   91[BANK0 ] float 
 30767 ;; Registers used:
 30768 ;;		wreg, status,2, status,0, cstack
 30769 ;; Tracked objects:
 30770 ;;		On entry : 0/0
 30771 ;;		On exit  : 0/0
 30772 ;;		Unchanged: 0/0
 30773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30774 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30777 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30778 ;;Total ram usage:        6 bytes
 30779 ;; Hardware stack levels used:    1
 30780 ;; Hardware stack levels required when called:    8
 30781 ;; This function calls:
 30782 ;;		___ftadd
 30783 ;; This function is called by:
 30784 ;;		_main
 30785 ;;		_sprintf
 30786 ;; This function uses a non-reentrant model
 30787 ;;
 30788                           
 30789                           	psect	text73
 30790  008FC2                     __ptext73:
 30791                           	opt stack 0
 30792  008FC2                     ___ftsub:
 30793                           	opt stack 22
 30794                           
 30795                           ; BSR set to: 0
 30796                           ;incstack = 0
 30797  008FC2  0100               	movlb	0	; () banked
 30798  008FC4  51BE               	movf	___ftsub@f2& (0+255),w,b
 30799  008FC6  0100               	movlb	0	; () banked
 30800  008FC8  11BF               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 30801  008FCA  0100               	movlb	0	; () banked
 30802  008FCC  11C0               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 30803  008FCE  B4D8               	btfsc	status,2,c
 30804  008FD0  D00A               	goto	l13089
 30805                           
 30806                           ; BSR set to: 0
 30807  008FD2  0E00               	movlw	0
 30808  008FD4  0100               	movlb	0	; () banked
 30809  008FD6  1BBE               	xorwf	___ftsub@f2& (0+255),f,b
 30810  008FD8  0E00               	movlw	0
 30811  008FDA  0100               	movlb	0	; () banked
 30812  008FDC  1BBF               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 30813  008FDE  0E80               	movlw	128
 30814  008FE0  0100               	movlb	0	; () banked
 30815  008FE2  1BC0               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 30816  008FE4  D000               	goto	l13089
 30817  008FE6                     l13089:
 30818                           
 30819                           ; BSR set to: 0
 30820  008FE6  C0BB  F0AF         	movff	___ftsub@f1,___ftadd@f1
 30821  008FEA  C0BC  F0B0         	movff	___ftsub@f1+1,___ftadd@f1+1
 30822  008FEE  C0BD  F0B1         	movff	___ftsub@f1+2,___ftadd@f1+2
 30823  008FF2  C0BE  F0B2         	movff	___ftsub@f2,___ftadd@f2
 30824  008FF6  C0BF  F0B3         	movff	___ftsub@f2+1,___ftadd@f2+1
 30825  008FFA  C0C0  F0B4         	movff	___ftsub@f2+2,___ftadd@f2+2
 30826  008FFE  ECCE  F02D         	call	___ftadd	;wreg free
 30827  009002  C0AF  F0BB         	movff	?___ftadd,?___ftsub
 30828  009006  C0B0  F0BC         	movff	?___ftadd+1,?___ftsub+1
 30829  00900A  C0B1  F0BD         	movff	?___ftadd+2,?___ftsub+2
 30830  00900E  0012               	return	
 30831  009010  0012               	return		;funcret
 30832  009012                     __end_of___ftsub:
 30833                           	opt stack 0
 30834                           tblptru	equ	0xFF8
 30835                           tblptrh	equ	0xFF7
 30836                           tblptrl	equ	0xFF6
 30837                           tablat	equ	0xFF5
 30838                           prodh	equ	0xFF4
 30839                           prodl	equ	0xFF3
 30840                           intcon	equ	0xFF2
 30841                           intcon2	equ	0xFF1
 30842                           indf0	equ	0xFEF
 30843                           postinc0	equ	0xFEE
 30844                           fsr0h	equ	0xFEA
 30845                           fsr0l	equ	0xFE9
 30846                           wreg	equ	0xFE8
 30847                           indf1	equ	0xFE7
 30848                           postdec1	equ	0xFE5
 30849                           fsr1h	equ	0xFE2
 30850                           fsr1l	equ	0xFE1
 30851                           indf2	equ	0xFDF
 30852                           postinc2	equ	0xFDE
 30853                           postdec2	equ	0xFDD
 30854                           fsr2h	equ	0xFDA
 30855                           fsr2l	equ	0xFD9
 30856                           status	equ	0xFD8
 30857                           
 30858 ;; *************** function ___ftadd *****************
 30859 ;; Defined at:
 30860 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 30861 ;; Parameters:    Size  Location     Type
 30862 ;;  f1              3   79[BANK0 ] float 
 30863 ;;  f2              3   82[BANK0 ] float 
 30864 ;; Auto vars:     Size  Location     Type
 30865 ;;  exp1            1   90[BANK0 ] unsigned char 
 30866 ;;  exp2            1   89[BANK0 ] unsigned char 
 30867 ;;  sign            1   88[BANK0 ] unsigned char 
 30868 ;; Return value:  Size  Location     Type
 30869 ;;                  3   79[BANK0 ] float 
 30870 ;; Registers used:
 30871 ;;		wreg, status,2, status,0, cstack
 30872 ;; Tracked objects:
 30873 ;;		On entry : 0/0
 30874 ;;		On exit  : 0/0
 30875 ;;		Unchanged: 0/0
 30876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30877 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30878 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30879 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30880 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30881 ;;Total ram usage:       12 bytes
 30882 ;; Hardware stack levels used:    1
 30883 ;; Hardware stack levels required when called:    7
 30884 ;; This function calls:
 30885 ;;		___ftpack
 30886 ;; This function is called by:
 30887 ;;		_main
 30888 ;;		_Round
 30889 ;;		_sprintf
 30890 ;;		___ftsub
 30891 ;; This function uses a non-reentrant model
 30892 ;;
 30893                           
 30894                           	psect	text74
 30895  005B9C                     __ptext74:
 30896                           	opt stack 0
 30897  005B9C                     ___ftadd:
 30898                           	opt stack 22
 30899                           
 30900                           ;incstack = 0
 30901  005B9C  C0B1  F0B5         	movff	___ftadd@f1+2,??___ftadd
 30902  005BA0  0100               	movlb	0	; () banked
 30903  005BA2  6BB6               	clrf	(??___ftadd+1)& (0+255),b
 30904  005BA4  6BB7               	clrf	(??___ftadd+2)& (0+255),b
 30905  005BA6  0100               	movlb	0	; () banked
 30906  005BA8  35B0               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 30907  005BAA  0100               	movlb	0	; () banked
 30908  005BAC  37B5               	rlcf	??___ftadd& (0+255),f,b
 30909  005BAE  E301               	bnc	u14681
 30910  005BB0  81B6               	bsf	(??___ftadd+1)& (0+255),0,b
 30911  005BB2                     u14681:
 30912  005BB2  0100               	movlb	0	; () banked
 30913  005BB4  51B5               	movf	??___ftadd& (0+255),w,b
 30914  005BB6  0100               	movlb	0	; () banked
 30915  005BB8  6FBA               	movwf	___ftadd@exp1& (0+255),b
 30916  005BBA  C0B4  F0B5         	movff	___ftadd@f2+2,??___ftadd
 30917  005BBE  0100               	movlb	0	; () banked
 30918  005BC0  6BB6               	clrf	(??___ftadd+1)& (0+255),b
 30919  005BC2  6BB7               	clrf	(??___ftadd+2)& (0+255),b
 30920  005BC4  0100               	movlb	0	; () banked
 30921  005BC6  35B3               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 30922  005BC8  0100               	movlb	0	; () banked
 30923  005BCA  37B5               	rlcf	??___ftadd& (0+255),f,b
 30924  005BCC  E301               	bnc	u14691
 30925  005BCE  81B6               	bsf	(??___ftadd+1)& (0+255),0,b
 30926  005BD0                     u14691:
 30927  005BD0  0100               	movlb	0	; () banked
 30928  005BD2  51B5               	movf	??___ftadd& (0+255),w,b
 30929  005BD4  0100               	movlb	0	; () banked
 30930  005BD6  6FB9               	movwf	___ftadd@exp2& (0+255),b
 30931                           
 30932                           ; BSR set to: 0
 30933  005BD8  0100               	movlb	0	; () banked
 30934  005BDA  51BA               	movf	___ftadd@exp1& (0+255),w,b
 30935  005BDC  0100               	movlb	0	; () banked
 30936  005BDE  B4D8               	btfsc	status,2,c
 30937  005BE0  D011               	goto	l2696
 30938                           
 30939                           ; BSR set to: 0
 30940  005BE2  0100               	movlb	0	; () banked
 30941  005BE4  51B9               	movf	___ftadd@exp2& (0+255),w,b
 30942  005BE6  0100               	movlb	0	; () banked
 30943  005BE8  5DBA               	subwf	___ftadd@exp1& (0+255),w,b
 30944  005BEA  B0D8               	btfsc	status,0,c
 30945  005BEC  D012               	goto	l12559
 30946                           
 30947                           ; BSR set to: 0
 30948  005BEE  0100               	movlb	0	; () banked
 30949  005BF0  51BA               	movf	___ftadd@exp1& (0+255),w,b
 30950  005BF2  0800               	sublw	0
 30951  005BF4  0100               	movlb	0	; () banked
 30952  005BF6  25B9               	addwf	___ftadd@exp2& (0+255),w,b
 30953  005BF8  0100               	movlb	0	; () banked
 30954  005BFA  6FB5               	movwf	??___ftadd& (0+255),b
 30955  005BFC  0E18               	movlw	24
 30956  005BFE  0100               	movlb	0	; () banked
 30957  005C00  65B5               	cpfsgt	??___ftadd& (0+255),b
 30958  005C02  D007               	goto	l12559
 30959  005C04                     l2696:
 30960                           
 30961                           ; BSR set to: 0
 30962  005C04  C0B2  F0AF         	movff	___ftadd@f2,?___ftadd
 30963  005C08  C0B3  F0B0         	movff	___ftadd@f2+1,?___ftadd+1
 30964  005C0C  C0B4  F0B1         	movff	___ftadd@f2+2,?___ftadd+2
 30965  005C10  0012               	return	
 30966  005C12                     l12559:
 30967                           
 30968                           ; BSR set to: 0
 30969  005C12  0100               	movlb	0	; () banked
 30970  005C14  51B9               	movf	___ftadd@exp2& (0+255),w,b
 30971  005C16  0100               	movlb	0	; () banked
 30972  005C18  B4D8               	btfsc	status,2,c
 30973  005C1A  D011               	goto	l2700
 30974                           
 30975                           ; BSR set to: 0
 30976  005C1C  0100               	movlb	0	; () banked
 30977  005C1E  51BA               	movf	___ftadd@exp1& (0+255),w,b
 30978  005C20  0100               	movlb	0	; () banked
 30979  005C22  5DB9               	subwf	___ftadd@exp2& (0+255),w,b
 30980  005C24  B0D8               	btfsc	status,0,c
 30981  005C26  D012               	goto	l12565
 30982                           
 30983                           ; BSR set to: 0
 30984  005C28  0100               	movlb	0	; () banked
 30985  005C2A  51B9               	movf	___ftadd@exp2& (0+255),w,b
 30986  005C2C  0800               	sublw	0
 30987  005C2E  0100               	movlb	0	; () banked
 30988  005C30  25BA               	addwf	___ftadd@exp1& (0+255),w,b
 30989  005C32  0100               	movlb	0	; () banked
 30990  005C34  6FB5               	movwf	??___ftadd& (0+255),b
 30991  005C36  0E18               	movlw	24
 30992  005C38  0100               	movlb	0	; () banked
 30993  005C3A  65B5               	cpfsgt	??___ftadd& (0+255),b
 30994  005C3C  D007               	goto	l12565
 30995  005C3E                     l2700:
 30996                           
 30997                           ; BSR set to: 0
 30998  005C3E  C0AF  F0AF         	movff	___ftadd@f1,?___ftadd
 30999  005C42  C0B0  F0B0         	movff	___ftadd@f1+1,?___ftadd+1
 31000  005C46  C0B1  F0B1         	movff	___ftadd@f1+2,?___ftadd+2
 31001  005C4A  0012               	return	
 31002  005C4C                     l12565:
 31003                           
 31004                           ; BSR set to: 0
 31005  005C4C  0E06               	movlw	6
 31006  005C4E  0100               	movlb	0	; () banked
 31007  005C50  6FB8               	movwf	___ftadd@sign& (0+255),b
 31008                           
 31009                           ; BSR set to: 0
 31010  005C52  0100               	movlb	0	; () banked
 31011  005C54  AFB1               	btfss	(___ftadd@f1+2)& (0+255),7,b
 31012  005C56  D003               	goto	l12571
 31013                           
 31014                           ; BSR set to: 0
 31015  005C58  0100               	movlb	0	; () banked
 31016  005C5A  8FB8               	bsf	___ftadd@sign& (0+255),7,b
 31017  005C5C  D000               	goto	l12571
 31018  005C5E                     l12571:
 31019                           
 31020                           ; BSR set to: 0
 31021  005C5E  0100               	movlb	0	; () banked
 31022  005C60  AFB4               	btfss	(___ftadd@f2+2)& (0+255),7,b
 31023  005C62  D002               	goto	l2702
 31024                           
 31025                           ; BSR set to: 0
 31026  005C64  0100               	movlb	0	; () banked
 31027  005C66  8DB8               	bsf	___ftadd@sign& (0+255),6,b
 31028  005C68                     l2702:
 31029                           
 31030                           ; BSR set to: 0
 31031  005C68  0100               	movlb	0	; () banked
 31032  005C6A  8FB0               	bsf	(___ftadd@f1+1)& (0+255),7,b
 31033                           
 31034                           ; BSR set to: 0
 31035  005C6C  0EFF               	movlw	255
 31036  005C6E  0100               	movlb	0	; () banked
 31037  005C70  17AF               	andwf	___ftadd@f1& (0+255),f,b
 31038  005C72  0EFF               	movlw	255
 31039  005C74  0100               	movlb	0	; () banked
 31040  005C76  17B0               	andwf	(___ftadd@f1+1)& (0+255),f,b
 31041  005C78  0E00               	movlw	0
 31042  005C7A  0100               	movlb	0	; () banked
 31043  005C7C  17B1               	andwf	(___ftadd@f1+2)& (0+255),f,b
 31044  005C7E  0100               	movlb	0	; () banked
 31045  005C80  8FB3               	bsf	(___ftadd@f2+1)& (0+255),7,b
 31046                           
 31047                           ; BSR set to: 0
 31048  005C82  0EFF               	movlw	255
 31049  005C84  0100               	movlb	0	; () banked
 31050  005C86  17B2               	andwf	___ftadd@f2& (0+255),f,b
 31051  005C88  0EFF               	movlw	255
 31052  005C8A  0100               	movlb	0	; () banked
 31053  005C8C  17B3               	andwf	(___ftadd@f2+1)& (0+255),f,b
 31054  005C8E  0E00               	movlw	0
 31055  005C90  0100               	movlb	0	; () banked
 31056  005C92  17B4               	andwf	(___ftadd@f2+2)& (0+255),f,b
 31057                           
 31058                           ; BSR set to: 0
 31059  005C94  0100               	movlb	0	; () banked
 31060  005C96  51B9               	movf	___ftadd@exp2& (0+255),w,b
 31061  005C98  0100               	movlb	0	; () banked
 31062  005C9A  5DBA               	subwf	___ftadd@exp1& (0+255),w,b
 31063  005C9C  B0D8               	btfsc	status,0,c
 31064  005C9E  D028               	goto	l12591
 31065  005CA0                     l12581:
 31066                           
 31067                           ; BSR set to: 0
 31068  005CA0  0100               	movlb	0	; () banked
 31069  005CA2  90D8               	bcf	status,0,c
 31070  005CA4  37B2               	rlcf	___ftadd@f2& (0+255),f,b
 31071  005CA6  37B3               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 31072  005CA8  37B4               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 31073  005CAA  0100               	movlb	0	; () banked
 31074  005CAC  07B9               	decf	___ftadd@exp2& (0+255),f,b
 31075                           
 31076                           ; BSR set to: 0
 31077  005CAE  0100               	movlb	0	; () banked
 31078  005CB0  51BA               	movf	___ftadd@exp1& (0+255),w,b
 31079  005CB2  0100               	movlb	0	; () banked
 31080  005CB4  19B9               	xorwf	___ftadd@exp2& (0+255),w,b
 31081  005CB6  B4D8               	btfsc	status,2,c
 31082  005CB8  D013               	goto	l12589
 31083                           
 31084                           ; BSR set to: 0
 31085  005CBA  0100               	movlb	0	; () banked
 31086  005CBC  07B8               	decf	___ftadd@sign& (0+255),f,b
 31087  005CBE  C0B8  F0B5         	movff	___ftadd@sign,??___ftadd
 31088  005CC2  0E07               	movlw	7
 31089  005CC4  0100               	movlb	0	; () banked
 31090  005CC6  17B5               	andwf	??___ftadd& (0+255),f,b
 31091  005CC8  B4D8               	btfsc	status,2,c
 31092  005CCA  D00A               	goto	l12589
 31093  005CCC  D7E9               	goto	l12581
 31094                           
 31095                           ; BSR set to: 0
 31096                           
 31097                           ; BSR set to: 0
 31098  005CCE  D008               	goto	l12589
 31099  005CD0                     l12587:
 31100                           
 31101                           ; BSR set to: 0
 31102  005CD0  0100               	movlb	0	; () banked
 31103  005CD2  90D8               	bcf	status,0,c
 31104  005CD4  33B1               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 31105  005CD6  33B0               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 31106  005CD8  33AF               	rrcf	___ftadd@f1& (0+255),f,b
 31107  005CDA  0100               	movlb	0	; () banked
 31108  005CDC  2BBA               	incf	___ftadd@exp1& (0+255),f,b
 31109  005CDE  D000               	goto	l12589
 31110  005CE0                     l12589:
 31111                           
 31112                           ; BSR set to: 0
 31113  005CE0  0100               	movlb	0	; () banked
 31114  005CE2  51B9               	movf	___ftadd@exp2& (0+255),w,b
 31115  005CE4  0100               	movlb	0	; () banked
 31116  005CE6  19BA               	xorwf	___ftadd@exp1& (0+255),w,b
 31117  005CE8  B4D8               	btfsc	status,2,c
 31118  005CEA  D030               	goto	l2711
 31119  005CEC  D7F1               	goto	l12587
 31120                           
 31121                           ; BSR set to: 0
 31122  005CEE  D02E               	goto	l2711
 31123  005CF0                     l12591:
 31124                           
 31125                           ; BSR set to: 0
 31126  005CF0  0100               	movlb	0	; () banked
 31127  005CF2  51BA               	movf	___ftadd@exp1& (0+255),w,b
 31128  005CF4  0100               	movlb	0	; () banked
 31129  005CF6  5DB9               	subwf	___ftadd@exp2& (0+255),w,b
 31130  005CF8  B0D8               	btfsc	status,0,c
 31131  005CFA  D028               	goto	l2711
 31132  005CFC                     l12593:
 31133                           
 31134                           ; BSR set to: 0
 31135  005CFC  0100               	movlb	0	; () banked
 31136  005CFE  90D8               	bcf	status,0,c
 31137  005D00  37AF               	rlcf	___ftadd@f1& (0+255),f,b
 31138  005D02  37B0               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 31139  005D04  37B1               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 31140  005D06  0100               	movlb	0	; () banked
 31141  005D08  07BA               	decf	___ftadd@exp1& (0+255),f,b
 31142                           
 31143                           ; BSR set to: 0
 31144  005D0A  0100               	movlb	0	; () banked
 31145  005D0C  51BA               	movf	___ftadd@exp1& (0+255),w,b
 31146  005D0E  0100               	movlb	0	; () banked
 31147  005D10  19B9               	xorwf	___ftadd@exp2& (0+255),w,b
 31148  005D12  B4D8               	btfsc	status,2,c
 31149  005D14  D013               	goto	l12601
 31150                           
 31151                           ; BSR set to: 0
 31152  005D16  0100               	movlb	0	; () banked
 31153  005D18  07B8               	decf	___ftadd@sign& (0+255),f,b
 31154  005D1A  C0B8  F0B5         	movff	___ftadd@sign,??___ftadd
 31155  005D1E  0E07               	movlw	7
 31156  005D20  0100               	movlb	0	; () banked
 31157  005D22  17B5               	andwf	??___ftadd& (0+255),f,b
 31158  005D24  B4D8               	btfsc	status,2,c
 31159  005D26  D00A               	goto	l12601
 31160  005D28  D7E9               	goto	l12593
 31161                           
 31162                           ; BSR set to: 0
 31163                           
 31164                           ; BSR set to: 0
 31165  005D2A  D008               	goto	l12601
 31166  005D2C                     l12599:
 31167                           
 31168                           ; BSR set to: 0
 31169  005D2C  0100               	movlb	0	; () banked
 31170  005D2E  90D8               	bcf	status,0,c
 31171  005D30  33B4               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 31172  005D32  33B3               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 31173  005D34  33B2               	rrcf	___ftadd@f2& (0+255),f,b
 31174  005D36  0100               	movlb	0	; () banked
 31175  005D38  2BB9               	incf	___ftadd@exp2& (0+255),f,b
 31176  005D3A  D000               	goto	l12601
 31177  005D3C                     l12601:
 31178                           
 31179                           ; BSR set to: 0
 31180  005D3C  0100               	movlb	0	; () banked
 31181  005D3E  51B9               	movf	___ftadd@exp2& (0+255),w,b
 31182  005D40  0100               	movlb	0	; () banked
 31183  005D42  19BA               	xorwf	___ftadd@exp1& (0+255),w,b
 31184  005D44  B4D8               	btfsc	status,2,c
 31185  005D46  D002               	goto	l2711
 31186  005D48  D7F1               	goto	l12599
 31187                           
 31188                           ; BSR set to: 0
 31189  005D4A  D000               	goto	l2711
 31190  005D4C                     l2711:
 31191                           
 31192                           ; BSR set to: 0
 31193  005D4C  0100               	movlb	0	; () banked
 31194  005D4E  AFB8               	btfss	___ftadd@sign& (0+255),7,b
 31195  005D50  D012               	goto	l2720
 31196                           
 31197                           ; BSR set to: 0
 31198  005D52  0EFF               	movlw	255
 31199  005D54  0100               	movlb	0	; () banked
 31200  005D56  1BAF               	xorwf	___ftadd@f1& (0+255),f,b
 31201  005D58  0EFF               	movlw	255
 31202  005D5A  0100               	movlb	0	; () banked
 31203  005D5C  1BB0               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 31204  005D5E  0EFF               	movlw	255
 31205  005D60  0100               	movlb	0	; () banked
 31206  005D62  1BB1               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 31207  005D64  0E01               	movlw	1
 31208  005D66  0100               	movlb	0	; () banked
 31209  005D68  27AF               	addwf	___ftadd@f1& (0+255),f,b
 31210  005D6A  0E00               	movlw	0
 31211  005D6C  0100               	movlb	0	; () banked
 31212  005D6E  23B0               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 31213  005D70  0E00               	movlw	0
 31214  005D72  0100               	movlb	0	; () banked
 31215  005D74  23B1               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 31216  005D76                     l2720:
 31217                           
 31218                           ; BSR set to: 0
 31219  005D76  0100               	movlb	0	; () banked
 31220  005D78  ADB8               	btfss	___ftadd@sign& (0+255),6,b
 31221  005D7A  D013               	goto	l12607
 31222                           
 31223                           ; BSR set to: 0
 31224  005D7C  0EFF               	movlw	255
 31225  005D7E  0100               	movlb	0	; () banked
 31226  005D80  1BB2               	xorwf	___ftadd@f2& (0+255),f,b
 31227  005D82  0EFF               	movlw	255
 31228  005D84  0100               	movlb	0	; () banked
 31229  005D86  1BB3               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 31230  005D88  0EFF               	movlw	255
 31231  005D8A  0100               	movlb	0	; () banked
 31232  005D8C  1BB4               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 31233  005D8E  0E01               	movlw	1
 31234  005D90  0100               	movlb	0	; () banked
 31235  005D92  27B2               	addwf	___ftadd@f2& (0+255),f,b
 31236  005D94  0E00               	movlw	0
 31237  005D96  0100               	movlb	0	; () banked
 31238  005D98  23B3               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31239  005D9A  0E00               	movlw	0
 31240  005D9C  0100               	movlb	0	; () banked
 31241  005D9E  23B4               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31242  005DA0  D000               	goto	l12607
 31243  005DA2                     l12607:
 31244                           
 31245                           ; BSR set to: 0
 31246  005DA2  0E00               	movlw	0
 31247  005DA4  0100               	movlb	0	; () banked
 31248  005DA6  6FB8               	movwf	___ftadd@sign& (0+255),b
 31249                           
 31250                           ; BSR set to: 0
 31251  005DA8  0100               	movlb	0	; () banked
 31252  005DAA  51AF               	movf	___ftadd@f1& (0+255),w,b
 31253  005DAC  0100               	movlb	0	; () banked
 31254  005DAE  27B2               	addwf	___ftadd@f2& (0+255),f,b
 31255  005DB0  0100               	movlb	0	; () banked
 31256  005DB2  51B0               	movf	(___ftadd@f1+1)& (0+255),w,b
 31257  005DB4  0100               	movlb	0	; () banked
 31258  005DB6  23B3               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31259  005DB8  0100               	movlb	0	; () banked
 31260  005DBA  51B1               	movf	(___ftadd@f1+2)& (0+255),w,b
 31261  005DBC  0100               	movlb	0	; () banked
 31262  005DBE  23B4               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31263                           
 31264                           ; BSR set to: 0
 31265  005DC0  0100               	movlb	0	; () banked
 31266  005DC2  AFB4               	btfss	(___ftadd@f2+2)& (0+255),7,b
 31267  005DC4  D016               	goto	l12617
 31268                           
 31269                           ; BSR set to: 0
 31270  005DC6  0EFF               	movlw	255
 31271  005DC8  0100               	movlb	0	; () banked
 31272  005DCA  1BB2               	xorwf	___ftadd@f2& (0+255),f,b
 31273  005DCC  0EFF               	movlw	255
 31274  005DCE  0100               	movlb	0	; () banked
 31275  005DD0  1BB3               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 31276  005DD2  0EFF               	movlw	255
 31277  005DD4  0100               	movlb	0	; () banked
 31278  005DD6  1BB4               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 31279  005DD8  0E01               	movlw	1
 31280  005DDA  0100               	movlb	0	; () banked
 31281  005DDC  27B2               	addwf	___ftadd@f2& (0+255),f,b
 31282  005DDE  0E00               	movlw	0
 31283  005DE0  0100               	movlb	0	; () banked
 31284  005DE2  23B3               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31285  005DE4  0E00               	movlw	0
 31286  005DE6  0100               	movlb	0	; () banked
 31287  005DE8  23B4               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31288                           
 31289                           ; BSR set to: 0
 31290  005DEA  0E01               	movlw	1
 31291  005DEC  0100               	movlb	0	; () banked
 31292  005DEE  6FB8               	movwf	___ftadd@sign& (0+255),b
 31293  005DF0  D000               	goto	l12617
 31294  005DF2                     l12617:
 31295                           
 31296                           ; BSR set to: 0
 31297  005DF2  C0B2  F07C         	movff	___ftadd@f2,___ftpack@arg
 31298  005DF6  C0B3  F07D         	movff	___ftadd@f2+1,___ftpack@arg+1
 31299  005DFA  C0B4  F07E         	movff	___ftadd@f2+2,___ftpack@arg+2
 31300  005DFE  C0BA  F07F         	movff	___ftadd@exp1,___ftpack@exp
 31301  005E02  C0B8  F080         	movff	___ftadd@sign,___ftpack@sign
 31302  005E06  EC3C  F03B         	call	___ftpack	;wreg free
 31303  005E0A  C07C  F0AF         	movff	?___ftpack,?___ftadd
 31304  005E0E  C07D  F0B0         	movff	?___ftpack+1,?___ftadd+1
 31305  005E12  C07E  F0B1         	movff	?___ftpack+2,?___ftadd+2
 31306  005E16  0012               	return	
 31307  005E18  0012               	return		;funcret
 31308  005E1A                     __end_of___ftadd:
 31309                           	opt stack 0
 31310                           tblptru	equ	0xFF8
 31311                           tblptrh	equ	0xFF7
 31312                           tblptrl	equ	0xFF6
 31313                           tablat	equ	0xFF5
 31314                           prodh	equ	0xFF4
 31315                           prodl	equ	0xFF3
 31316                           intcon	equ	0xFF2
 31317                           intcon2	equ	0xFF1
 31318                           indf0	equ	0xFEF
 31319                           postinc0	equ	0xFEE
 31320                           fsr0h	equ	0xFEA
 31321                           fsr0l	equ	0xFE9
 31322                           wreg	equ	0xFE8
 31323                           indf1	equ	0xFE7
 31324                           postdec1	equ	0xFE5
 31325                           fsr1h	equ	0xFE2
 31326                           fsr1l	equ	0xFE1
 31327                           indf2	equ	0xFDF
 31328                           postinc2	equ	0xFDE
 31329                           postdec2	equ	0xFDD
 31330                           fsr2h	equ	0xFDA
 31331                           fsr2l	equ	0xFD9
 31332                           status	equ	0xFD8
 31333                           
 31334 ;; *************** function ___ftpack *****************
 31335 ;; Defined at:
 31336 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 31337 ;; Parameters:    Size  Location     Type
 31338 ;;  arg             3   28[BANK0 ] unsigned um
 31339 ;;  exp             1   31[BANK0 ] unsigned char 
 31340 ;;  sign            1   32[BANK0 ] unsigned char 
 31341 ;; Auto vars:     Size  Location     Type
 31342 ;;		None
 31343 ;; Return value:  Size  Location     Type
 31344 ;;                  3   28[BANK0 ] float 
 31345 ;; Registers used:
 31346 ;;		wreg, status,2, status,0
 31347 ;; Tracked objects:
 31348 ;;		On entry : 0/0
 31349 ;;		On exit  : 0/0
 31350 ;;		Unchanged: 0/0
 31351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31352 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31354 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31355 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31356 ;;Total ram usage:        8 bytes
 31357 ;; Hardware stack levels used:    1
 31358 ;; Hardware stack levels required when called:    6
 31359 ;; This function calls:
 31360 ;;		Nothing
 31361 ;; This function is called by:
 31362 ;;		___altoft
 31363 ;;		___ftadd
 31364 ;;		___ftdiv
 31365 ;;		___ftmul
 31366 ;;		___lltoft
 31367 ;;		___lwtoft
 31368 ;; This function uses a non-reentrant model
 31369 ;;
 31370                           
 31371                           	psect	text75
 31372  007678                     __ptext75:
 31373                           	opt stack 0
 31374  007678                     ___ftpack:
 31375                           	opt stack 22
 31376                           
 31377                           ;incstack = 0
 31378  007678  0100               	movlb	0	; () banked
 31379  00767A  517F               	movf	___ftpack@exp& (0+255),w,b
 31380  00767C  0100               	movlb	0	; () banked
 31381  00767E  B4D8               	btfsc	status,2,c
 31382  007680  D008               	goto	l12465
 31383                           
 31384                           ; BSR set to: 0
 31385  007682  0100               	movlb	0	; () banked
 31386  007684  517C               	movf	___ftpack@arg& (0+255),w,b
 31387  007686  0100               	movlb	0	; () banked
 31388  007688  117D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 31389  00768A  0100               	movlb	0	; () banked
 31390  00768C  117E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 31391  00768E  A4D8               	btfss	status,2,c
 31392  007690  D013               	goto	l12471
 31393  007692                     l12465:
 31394                           
 31395                           ; BSR set to: 0
 31396  007692  0E00               	movlw	0
 31397  007694  0100               	movlb	0	; () banked
 31398  007696  6F7C               	movwf	?___ftpack& (0+255),b
 31399  007698  0E00               	movlw	0
 31400  00769A  0100               	movlb	0	; () banked
 31401  00769C  6F7D               	movwf	(?___ftpack+1)& (0+255),b
 31402  00769E  0E00               	movlw	0
 31403  0076A0  0100               	movlb	0	; () banked
 31404  0076A2  6F7E               	movwf	(?___ftpack+2)& (0+255),b
 31405                           
 31406                           ; BSR set to: 0
 31407  0076A4  0012               	return	
 31408                           
 31409                           ; BSR set to: 0
 31410  0076A6  D008               	goto	l12471
 31411  0076A8                     l12469:
 31412                           
 31413                           ; BSR set to: 0
 31414  0076A8  0100               	movlb	0	; () banked
 31415  0076AA  2B7F               	incf	___ftpack@exp& (0+255),f,b
 31416  0076AC  0100               	movlb	0	; () banked
 31417  0076AE  90D8               	bcf	status,0,c
 31418  0076B0  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31419  0076B2  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31420  0076B4  337C               	rrcf	___ftpack@arg& (0+255),f,b
 31421  0076B6  D000               	goto	l12471
 31422  0076B8                     l12471:
 31423                           
 31424                           ; BSR set to: 0
 31425  0076B8  0E00               	movlw	0
 31426  0076BA  0100               	movlb	0	; () banked
 31427  0076BC  157C               	andwf	___ftpack@arg& (0+255),w,b
 31428  0076BE  0100               	movlb	0	; () banked
 31429  0076C0  6F81               	movwf	??___ftpack& (0+255),b
 31430  0076C2  0E00               	movlw	0
 31431  0076C4  0100               	movlb	0	; () banked
 31432  0076C6  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31433  0076C8  0100               	movlb	0	; () banked
 31434  0076CA  6F82               	movwf	(??___ftpack+1)& (0+255),b
 31435  0076CC  0EFE               	movlw	254
 31436  0076CE  0100               	movlb	0	; () banked
 31437  0076D0  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31438  0076D2  0100               	movlb	0	; () banked
 31439  0076D4  6F83               	movwf	(??___ftpack+2)& (0+255),b
 31440  0076D6  0100               	movlb	0	; () banked
 31441  0076D8  5181               	movf	??___ftpack& (0+255),w,b
 31442  0076DA  0100               	movlb	0	; () banked
 31443  0076DC  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 31444  0076DE  0100               	movlb	0	; () banked
 31445  0076E0  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 31446  0076E2  B4D8               	btfsc	status,2,c
 31447  0076E4  D013               	goto	l12477
 31448  0076E6  D7E0               	goto	l12469
 31449                           
 31450                           ; BSR set to: 0
 31451  0076E8  D011               	goto	l12477
 31452  0076EA                     l12473:
 31453                           
 31454                           ; BSR set to: 0
 31455  0076EA  0100               	movlb	0	; () banked
 31456  0076EC  2B7F               	incf	___ftpack@exp& (0+255),f,b
 31457                           
 31458                           ; BSR set to: 0
 31459  0076EE  0E01               	movlw	1
 31460  0076F0  0100               	movlb	0	; () banked
 31461  0076F2  277C               	addwf	___ftpack@arg& (0+255),f,b
 31462  0076F4  0E00               	movlw	0
 31463  0076F6  0100               	movlb	0	; () banked
 31464  0076F8  237D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 31465  0076FA  0E00               	movlw	0
 31466  0076FC  0100               	movlb	0	; () banked
 31467  0076FE  237E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 31468  007700  0100               	movlb	0	; () banked
 31469  007702  90D8               	bcf	status,0,c
 31470  007704  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31471  007706  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31472  007708  337C               	rrcf	___ftpack@arg& (0+255),f,b
 31473  00770A  D000               	goto	l12477
 31474  00770C                     l12477:
 31475                           
 31476                           ; BSR set to: 0
 31477  00770C  0E00               	movlw	0
 31478  00770E  0100               	movlb	0	; () banked
 31479  007710  157C               	andwf	___ftpack@arg& (0+255),w,b
 31480  007712  0100               	movlb	0	; () banked
 31481  007714  6F81               	movwf	??___ftpack& (0+255),b
 31482  007716  0E00               	movlw	0
 31483  007718  0100               	movlb	0	; () banked
 31484  00771A  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31485  00771C  0100               	movlb	0	; () banked
 31486  00771E  6F82               	movwf	(??___ftpack+1)& (0+255),b
 31487  007720  0EFF               	movlw	255
 31488  007722  0100               	movlb	0	; () banked
 31489  007724  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31490  007726  0100               	movlb	0	; () banked
 31491  007728  6F83               	movwf	(??___ftpack+2)& (0+255),b
 31492  00772A  0100               	movlb	0	; () banked
 31493  00772C  5181               	movf	??___ftpack& (0+255),w,b
 31494  00772E  0100               	movlb	0	; () banked
 31495  007730  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 31496  007732  0100               	movlb	0	; () banked
 31497  007734  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 31498  007736  B4D8               	btfsc	status,2,c
 31499  007738  D00A               	goto	l12481
 31500  00773A  D7D7               	goto	l12473
 31501                           
 31502                           ; BSR set to: 0
 31503  00773C  D008               	goto	l12481
 31504  00773E                     l12479:
 31505                           
 31506                           ; BSR set to: 0
 31507  00773E  0100               	movlb	0	; () banked
 31508  007740  077F               	decf	___ftpack@exp& (0+255),f,b
 31509  007742  0100               	movlb	0	; () banked
 31510  007744  90D8               	bcf	status,0,c
 31511  007746  377C               	rlcf	___ftpack@arg& (0+255),f,b
 31512  007748  377D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 31513  00774A  377E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 31514  00774C  D000               	goto	l12481
 31515  00774E                     l12481:
 31516                           
 31517                           ; BSR set to: 0
 31518  00774E  0100               	movlb	0	; () banked
 31519  007750  BF7D               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 31520  007752  D005               	goto	l2667
 31521                           
 31522                           ; BSR set to: 0
 31523  007754  0E02               	movlw	2
 31524  007756  0100               	movlb	0	; () banked
 31525  007758  617F               	cpfslt	___ftpack@exp& (0+255),b
 31526  00775A  D7F1               	goto	l12479
 31527  00775C  D000               	goto	l2667
 31528  00775E                     l2667:
 31529                           
 31530                           ; BSR set to: 0
 31531  00775E  0100               	movlb	0	; () banked
 31532  007760  B17F               	btfsc	___ftpack@exp& (0+255),0,b
 31533  007762  D003               	goto	l12487
 31534                           
 31535                           ; BSR set to: 0
 31536  007764  0100               	movlb	0	; () banked
 31537  007766  9F7D               	bcf	(___ftpack@arg+1)& (0+255),7,b
 31538  007768  D000               	goto	l12487
 31539  00776A                     l12487:
 31540                           
 31541                           ; BSR set to: 0
 31542  00776A  0100               	movlb	0	; () banked
 31543  00776C  90D8               	bcf	status,0,c
 31544  00776E  337F               	rrcf	___ftpack@exp& (0+255),f,b
 31545  007770  0100               	movlb	0	; () banked
 31546  007772  517F               	movf	___ftpack@exp& (0+255),w,b
 31547  007774  0100               	movlb	0	; () banked
 31548  007776  137E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 31549                           
 31550                           ; BSR set to: 0
 31551  007778  0100               	movlb	0	; () banked
 31552  00777A  5180               	movf	___ftpack@sign& (0+255),w,b
 31553  00777C  0100               	movlb	0	; () banked
 31554  00777E  B4D8               	btfsc	status,2,c
 31555  007780  D003               	goto	l12493
 31556                           
 31557                           ; BSR set to: 0
 31558  007782  0100               	movlb	0	; () banked
 31559  007784  8F7E               	bsf	(___ftpack@arg+2)& (0+255),7,b
 31560  007786  D000               	goto	l12493
 31561  007788                     l12493:
 31562                           
 31563                           ; BSR set to: 0
 31564  007788  C07C  F07C         	movff	___ftpack@arg,?___ftpack
 31565  00778C  C07D  F07D         	movff	___ftpack@arg+1,?___ftpack+1
 31566  007790  C07E  F07E         	movff	___ftpack@arg+2,?___ftpack+2
 31567  007794  0012               	return	
 31568                           
 31569                           ; BSR set to: 0
 31570                           
 31571                           ; BSR set to: 0
 31572  007796  0012               	return		;funcret
 31573  007798                     __end_of___ftpack:
 31574                           	opt stack 0
 31575                           tblptru	equ	0xFF8
 31576                           tblptrh	equ	0xFF7
 31577                           tblptrl	equ	0xFF6
 31578                           tablat	equ	0xFF5
 31579                           prodh	equ	0xFF4
 31580                           prodl	equ	0xFF3
 31581                           intcon	equ	0xFF2
 31582                           intcon2	equ	0xFF1
 31583                           indf0	equ	0xFEF
 31584                           postinc0	equ	0xFEE
 31585                           fsr0h	equ	0xFEA
 31586                           fsr0l	equ	0xFE9
 31587                           wreg	equ	0xFE8
 31588                           indf1	equ	0xFE7
 31589                           postdec1	equ	0xFE5
 31590                           fsr1h	equ	0xFE2
 31591                           fsr1l	equ	0xFE1
 31592                           indf2	equ	0xFDF
 31593                           postinc2	equ	0xFDE
 31594                           postdec2	equ	0xFDD
 31595                           fsr2h	equ	0xFDA
 31596                           fsr2l	equ	0xFD9
 31597                           status	equ	0xFD8
 31598                           
 31599 ;; *************** function ___ftneg *****************
 31600 ;; Defined at:
 31601 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 31602 ;; Parameters:    Size  Location     Type
 31603 ;;  f1              3   28[BANK0 ] float 
 31604 ;; Auto vars:     Size  Location     Type
 31605 ;;		None
 31606 ;; Return value:  Size  Location     Type
 31607 ;;                  3   28[BANK0 ] float 
 31608 ;; Registers used:
 31609 ;;		wreg, status,2, status,0
 31610 ;; Tracked objects:
 31611 ;;		On entry : 0/0
 31612 ;;		On exit  : 0/0
 31613 ;;		Unchanged: 0/0
 31614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31615 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31618 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31619 ;;Total ram usage:        3 bytes
 31620 ;; Hardware stack levels used:    1
 31621 ;; Hardware stack levels required when called:    6
 31622 ;; This function calls:
 31623 ;;		Nothing
 31624 ;; This function is called by:
 31625 ;;		_sprintf
 31626 ;; This function uses a non-reentrant model
 31627 ;;
 31628                           
 31629                           	psect	text76
 31630  0092C2                     __ptext76:
 31631                           	opt stack 0
 31632  0092C2                     ___ftneg:
 31633                           	opt stack 22
 31634                           
 31635                           ; BSR set to: 0
 31636                           ;incstack = 0
 31637  0092C2  0100               	movlb	0	; () banked
 31638  0092C4  517C               	movf	___ftneg@f1& (0+255),w,b
 31639  0092C6  0100               	movlb	0	; () banked
 31640  0092C8  117D               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 31641  0092CA  0100               	movlb	0	; () banked
 31642  0092CC  117E               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 31643  0092CE  B4D8               	btfsc	status,2,c
 31644  0092D0  D009               	goto	l2770
 31645                           
 31646                           ; BSR set to: 0
 31647  0092D2  0E00               	movlw	0
 31648  0092D4  0100               	movlb	0	; () banked
 31649  0092D6  1B7C               	xorwf	___ftneg@f1& (0+255),f,b
 31650  0092D8  0E00               	movlw	0
 31651  0092DA  0100               	movlb	0	; () banked
 31652  0092DC  1B7D               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 31653  0092DE  0E80               	movlw	128
 31654  0092E0  0100               	movlb	0	; () banked
 31655  0092E2  1B7E               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 31656  0092E4                     l2770:
 31657                           
 31658                           ; BSR set to: 0
 31659  0092E4  C07C  F07C         	movff	___ftneg@f1,?___ftneg
 31660  0092E8  C07D  F07D         	movff	___ftneg@f1+1,?___ftneg+1
 31661  0092EC  C07E  F07E         	movff	___ftneg@f1+2,?___ftneg+2
 31662                           
 31663                           ; BSR set to: 0
 31664  0092F0  0012               	return		;funcret
 31665  0092F2                     __end_of___ftneg:
 31666                           	opt stack 0
 31667                           tblptru	equ	0xFF8
 31668                           tblptrh	equ	0xFF7
 31669                           tblptrl	equ	0xFF6
 31670                           tablat	equ	0xFF5
 31671                           prodh	equ	0xFF4
 31672                           prodl	equ	0xFF3
 31673                           intcon	equ	0xFF2
 31674                           intcon2	equ	0xFF1
 31675                           indf0	equ	0xFEF
 31676                           postinc0	equ	0xFEE
 31677                           fsr0h	equ	0xFEA
 31678                           fsr0l	equ	0xFE9
 31679                           wreg	equ	0xFE8
 31680                           indf1	equ	0xFE7
 31681                           postdec1	equ	0xFE5
 31682                           fsr1h	equ	0xFE2
 31683                           fsr1l	equ	0xFE1
 31684                           indf2	equ	0xFDF
 31685                           postinc2	equ	0xFDE
 31686                           postdec2	equ	0xFDD
 31687                           fsr2h	equ	0xFDA
 31688                           fsr2l	equ	0xFD9
 31689                           status	equ	0xFD8
 31690                           
 31691 ;; *************** function ___ftge *****************
 31692 ;; Defined at:
 31693 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;  ff1             3   28[BANK0 ] float 
 31696 ;;  ff2             3   31[BANK0 ] float 
 31697 ;; Auto vars:     Size  Location     Type
 31698 ;;		None
 31699 ;; Return value:  Size  Location     Type
 31700 ;;		None               void
 31701 ;; Registers used:
 31702 ;;		wreg, status,2, status,0
 31703 ;; Tracked objects:
 31704 ;;		On entry : 0/0
 31705 ;;		On exit  : 0/0
 31706 ;;		Unchanged: 0/0
 31707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31708 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31710 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31711 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31712 ;;Total ram usage:        9 bytes
 31713 ;; Hardware stack levels used:    1
 31714 ;; Hardware stack levels required when called:    6
 31715 ;; This function calls:
 31716 ;;		Nothing
 31717 ;; This function is called by:
 31718 ;;		_main
 31719 ;;		_sprintf
 31720 ;; This function uses a non-reentrant model
 31721 ;;
 31722                           
 31723                           	psect	text77
 31724  007DA4                     __ptext77:
 31725                           	opt stack 0
 31726  007DA4                     ___ftge:
 31727                           	opt stack 24
 31728                           
 31729                           ; BSR set to: 0
 31730                           ;incstack = 0
 31731  007DA4  0100               	movlb	0	; () banked
 31732  007DA6  AF7E               	btfss	(___ftge@ff1+2)& (0+255),7,b
 31733  007DA8  D01E               	goto	l13097
 31734                           
 31735                           ; BSR set to: 0
 31736  007DAA  C07C  F082         	movff	___ftge@ff1,??___ftge
 31737  007DAE  C07D  F083         	movff	___ftge@ff1+1,??___ftge+1
 31738  007DB2  C07E  F084         	movff	___ftge@ff1+2,??___ftge+2
 31739  007DB6  0100               	movlb	0	; () banked
 31740  007DB8  1F82               	comf	??___ftge& (0+255),f,b
 31741  007DBA  1F83               	comf	(??___ftge+1)& (0+255),f,b
 31742  007DBC  1F84               	comf	(??___ftge+2)& (0+255),f,b
 31743  007DBE  2B82               	incf	??___ftge& (0+255),f,b
 31744  007DC0  0E00               	movlw	0
 31745  007DC2  2383               	addwfc	(??___ftge+1)& (0+255),f,b
 31746  007DC4  2384               	addwfc	(??___ftge+2)& (0+255),f,b
 31747  007DC6  0E00               	movlw	0
 31748  007DC8  0100               	movlb	0	; () banked
 31749  007DCA  2582               	addwf	??___ftge& (0+255),w,b
 31750  007DCC  0100               	movlb	0	; () banked
 31751  007DCE  6F7C               	movwf	___ftge@ff1& (0+255),b
 31752  007DD0  0E00               	movlw	0
 31753  007DD2  0100               	movlb	0	; () banked
 31754  007DD4  2183               	addwfc	(??___ftge+1)& (0+255),w,b
 31755  007DD6  0100               	movlb	0	; () banked
 31756  007DD8  6F7D               	movwf	(___ftge@ff1+1)& (0+255),b
 31757  007DDA  0E80               	movlw	128
 31758  007DDC  0100               	movlb	0	; () banked
 31759  007DDE  2184               	addwfc	(??___ftge+2)& (0+255),w,b
 31760  007DE0  0100               	movlb	0	; () banked
 31761  007DE2  6F7E               	movwf	(___ftge@ff1+2)& (0+255),b
 31762  007DE4  D000               	goto	l13097
 31763  007DE6                     l13097:
 31764                           
 31765                           ; BSR set to: 0
 31766  007DE6  0100               	movlb	0	; () banked
 31767  007DE8  AF81               	btfss	(___ftge@ff2+2)& (0+255),7,b
 31768  007DEA  D01E               	goto	l13101
 31769                           
 31770                           ; BSR set to: 0
 31771  007DEC  C07F  F082         	movff	___ftge@ff2,??___ftge
 31772  007DF0  C080  F083         	movff	___ftge@ff2+1,??___ftge+1
 31773  007DF4  C081  F084         	movff	___ftge@ff2+2,??___ftge+2
 31774  007DF8  0100               	movlb	0	; () banked
 31775  007DFA  1F82               	comf	??___ftge& (0+255),f,b
 31776  007DFC  1F83               	comf	(??___ftge+1)& (0+255),f,b
 31777  007DFE  1F84               	comf	(??___ftge+2)& (0+255),f,b
 31778  007E00  2B82               	incf	??___ftge& (0+255),f,b
 31779  007E02  0E00               	movlw	0
 31780  007E04  2383               	addwfc	(??___ftge+1)& (0+255),f,b
 31781  007E06  2384               	addwfc	(??___ftge+2)& (0+255),f,b
 31782  007E08  0E00               	movlw	0
 31783  007E0A  0100               	movlb	0	; () banked
 31784  007E0C  2582               	addwf	??___ftge& (0+255),w,b
 31785  007E0E  0100               	movlb	0	; () banked
 31786  007E10  6F7F               	movwf	___ftge@ff2& (0+255),b
 31787  007E12  0E00               	movlw	0
 31788  007E14  0100               	movlb	0	; () banked
 31789  007E16  2183               	addwfc	(??___ftge+1)& (0+255),w,b
 31790  007E18  0100               	movlb	0	; () banked
 31791  007E1A  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 31792  007E1C  0E80               	movlw	128
 31793  007E1E  0100               	movlb	0	; () banked
 31794  007E20  2184               	addwfc	(??___ftge+2)& (0+255),w,b
 31795  007E22  0100               	movlb	0	; () banked
 31796  007E24  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 31797  007E26  D000               	goto	l13101
 31798  007E28                     l13101:
 31799                           
 31800                           ; BSR set to: 0
 31801  007E28  0E00               	movlw	0
 31802  007E2A  0100               	movlb	0	; () banked
 31803  007E2C  1B7C               	xorwf	___ftge@ff1& (0+255),f,b
 31804  007E2E  0E00               	movlw	0
 31805  007E30  0100               	movlb	0	; () banked
 31806  007E32  1B7D               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 31807  007E34  0E80               	movlw	128
 31808  007E36  0100               	movlb	0	; () banked
 31809  007E38  1B7E               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 31810                           
 31811                           ; BSR set to: 0
 31812  007E3A  0E00               	movlw	0
 31813  007E3C  0100               	movlb	0	; () banked
 31814  007E3E  1B7F               	xorwf	___ftge@ff2& (0+255),f,b
 31815  007E40  0E00               	movlw	0
 31816  007E42  0100               	movlb	0	; () banked
 31817  007E44  1B80               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 31818  007E46  0E80               	movlw	128
 31819  007E48  0100               	movlb	0	; () banked
 31820  007E4A  1B81               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 31821  007E4C  0100               	movlb	0	; () banked
 31822  007E4E  517F               	movf	___ftge@ff2& (0+255),w,b
 31823  007E50  0100               	movlb	0	; () banked
 31824  007E52  5D7C               	subwf	___ftge@ff1& (0+255),w,b
 31825  007E54  0100               	movlb	0	; () banked
 31826  007E56  5180               	movf	(___ftge@ff2+1)& (0+255),w,b
 31827  007E58  0100               	movlb	0	; () banked
 31828  007E5A  597D               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 31829  007E5C  0100               	movlb	0	; () banked
 31830  007E5E  5181               	movf	(___ftge@ff2+2)& (0+255),w,b
 31831  007E60  0100               	movlb	0	; () banked
 31832  007E62  597E               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 31833  007E64  B0D8               	btfsc	status,0,c
 31834  007E66  D002               	goto	l13107
 31835                           
 31836                           ; BSR set to: 0
 31837  007E68  90D8               	bcf	status,0,c
 31838  007E6A  0012               	return	
 31839  007E6C                     l13107:
 31840                           
 31841                           ; BSR set to: 0
 31842  007E6C  80D8               	bsf	status,0,c
 31843                           
 31844                           ; BSR set to: 0
 31845  007E6E  0012               	return	
 31846                           
 31847                           ; BSR set to: 0
 31848                           
 31849                           ; BSR set to: 0
 31850  007E70  0012               	return		;funcret
 31851  007E72                     __end_of___ftge:
 31852                           	opt stack 0
 31853                           tblptru	equ	0xFF8
 31854                           tblptrh	equ	0xFF7
 31855                           tblptrl	equ	0xFF6
 31856                           tablat	equ	0xFF5
 31857                           prodh	equ	0xFF4
 31858                           prodl	equ	0xFF3
 31859                           intcon	equ	0xFF2
 31860                           intcon2	equ	0xFF1
 31861                           indf0	equ	0xFEF
 31862                           postinc0	equ	0xFEE
 31863                           fsr0h	equ	0xFEA
 31864                           fsr0l	equ	0xFE9
 31865                           wreg	equ	0xFE8
 31866                           indf1	equ	0xFE7
 31867                           postdec1	equ	0xFE5
 31868                           fsr1h	equ	0xFE2
 31869                           fsr1l	equ	0xFE1
 31870                           indf2	equ	0xFDF
 31871                           postinc2	equ	0xFDE
 31872                           postdec2	equ	0xFDD
 31873                           fsr2h	equ	0xFDA
 31874                           fsr2l	equ	0xFD9
 31875                           status	equ	0xFD8
 31876                           
 31877 ;; *************** function _EnterCommandMode *****************
 31878 ;; Defined at:
 31879 ;;		line 119 in file "Bluetooth.c"
 31880 ;; Parameters:    Size  Location     Type
 31881 ;;		None
 31882 ;; Auto vars:     Size  Location     Type
 31883 ;;  count           1   37[BANK0 ] unsigned char 
 31884 ;; Return value:  Size  Location     Type
 31885 ;;                  1    wreg      unsigned char 
 31886 ;; Registers used:
 31887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31888 ;; Tracked objects:
 31889 ;;		On entry : 0/0
 31890 ;;		On exit  : 0/0
 31891 ;;		Unchanged: 0/0
 31892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31897 ;;Total ram usage:        1 bytes
 31898 ;; Hardware stack levels used:    1
 31899 ;; Hardware stack levels required when called:    8
 31900 ;; This function calls:
 31901 ;;		_BlueConnected
 31902 ;;		_ResetBlue
 31903 ;;		_StringContains
 31904 ;;		_UARTstring
 31905 ;;		_cleanBuffer
 31906 ;;		_delayUS
 31907 ;; This function is called by:
 31908 ;;		_BluetoothInitialSetup
 31909 ;; This function uses a non-reentrant model
 31910 ;;
 31911                           
 31912                           	psect	text78
 31913  007E72                     __ptext78:
 31914                           	opt stack 0
 31915  007E72                     _EnterCommandMode:
 31916                           	opt stack 19
 31917                           
 31918                           ;Bluetooth.c: 121: unsigned char count = 0;
 31919                           
 31920                           ; BSR set to: 0
 31921                           ;incstack = 0
 31922  007E72  0E00               	movlw	0
 31923  007E74  0100               	movlb	0	; () banked
 31924  007E76  6F85               	movwf	EnterCommandMode@count& (0+255),b
 31925                           
 31926                           ;Bluetooth.c: 122: while(BlueConnected())
 31927  007E78  D00B               	goto	l13335
 31928  007E7A                     l13325:
 31929                           
 31930                           ;Bluetooth.c: 123: {
 31931                           ;Bluetooth.c: 124: ResetBlue();
 31932  007E7A  EC48  F049         	call	_ResetBlue	;wreg free
 31933                           
 31934                           ;Bluetooth.c: 125: count++;
 31935  007E7E  0100               	movlb	0	; () banked
 31936  007E80  2B85               	incf	EnterCommandMode@count& (0+255),f,b
 31937                           
 31938                           ; BSR set to: 0
 31939                           ;Bluetooth.c: 126: if(count > 4)
 31940  007E82  0E04               	movlw	4
 31941  007E84  0100               	movlb	0	; () banked
 31942  007E86  6585               	cpfsgt	EnterCommandMode@count& (0+255),b
 31943  007E88  D003               	goto	l13335
 31944                           
 31945                           ; BSR set to: 0
 31946                           ;Bluetooth.c: 127: {
 31947                           ;Bluetooth.c: 129: return 0;
 31948  007E8A  0E00               	movlw	0
 31949                           
 31950                           ; BSR set to: 0
 31951  007E8C  0012               	return	
 31952                           
 31953                           ; BSR set to: 0
 31954  007E8E  D000               	goto	l13335
 31955  007E90                     l13335:
 31956                           
 31957                           ; BSR set to: 0
 31958  007E90  ECAE  F04A         	call	_BlueConnected	;wreg free
 31959  007E94  0900               	iorlw	0
 31960  007E96  A4D8               	btfss	status,2,c
 31961  007E98  D7F0               	goto	l13325
 31962                           
 31963                           ;Bluetooth.c: 130: }
 31964                           ;Bluetooth.c: 131: }
 31965                           ;Bluetooth.c: 133: delayUS(50000);
 31966  007E9A  0E50               	movlw	80
 31967  007E9C  0100               	movlb	0	; () banked
 31968  007E9E  6F7C               	movwf	delayUS@US& (0+255),b
 31969  007EA0  0EC3               	movlw	195
 31970  007EA2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 31971  007EA4  0E00               	movlw	0
 31972  007EA6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 31973  007EA8  0E00               	movlw	0
 31974  007EAA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 31975  007EAC  EC8C  F047         	call	_delayUS	;wreg free
 31976                           
 31977                           ;Bluetooth.c: 134: UARTstring((unsigned char *)"$$$");
 31978  007EB0  0EE6               	movlw	low STR_2
 31979  007EB2  0100               	movlb	0	; () banked
 31980  007EB4  6F7D               	movwf	UARTstring@data& (0+255),b
 31981  007EB6  0EFF               	movlw	high STR_2
 31982  007EB8  0100               	movlb	0	; () banked
 31983  007EBA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 31984  007EBC  EC08  F047         	call	_UARTstring	;wreg free
 31985                           
 31986                           ;Bluetooth.c: 135: delayUS(50000);
 31987  007EC0  0E50               	movlw	80
 31988  007EC2  0100               	movlb	0	; () banked
 31989  007EC4  6F7C               	movwf	delayUS@US& (0+255),b
 31990  007EC6  0EC3               	movlw	195
 31991  007EC8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 31992  007ECA  0E00               	movlw	0
 31993  007ECC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 31994  007ECE  0E00               	movlw	0
 31995  007ED0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 31996  007ED2  EC8C  F047         	call	_delayUS	;wreg free
 31997                           
 31998                           ;Bluetooth.c: 136: if(StringContains(CommandString,(unsigned char *)"CMD"))
 31999  007ED6  0E00               	movlw	low _CommandString
 32000  007ED8  0100               	movlb	0	; () banked
 32001  007EDA  6F7C               	movwf	StringContains@This& (0+255),b
 32002  007EDC  0E05               	movlw	high _CommandString
 32003  007EDE  0100               	movlb	0	; () banked
 32004  007EE0  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 32005  007EE2  0EF2               	movlw	low STR_3
 32006  007EE4  0100               	movlb	0	; () banked
 32007  007EE6  6F7E               	movwf	StringContains@That& (0+255),b
 32008  007EE8  0EFF               	movlw	high STR_3
 32009  007EEA  0100               	movlb	0	; () banked
 32010  007EEC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 32011  007EEE  EC71  F041         	call	_StringContains	;wreg free
 32012  007EF2  0900               	iorlw	0
 32013  007EF4  B4D8               	btfsc	status,2,c
 32014  007EF6  D010               	goto	l13353
 32015                           
 32016                           ;Bluetooth.c: 137: {
 32017                           ;Bluetooth.c: 138: cleanBuffer(CommandString,CommandStringPos);
 32018  007EF8  0E00               	movlw	low _CommandString
 32019  007EFA  0100               	movlb	0	; () banked
 32020  007EFC  6F7C               	movwf	cleanBuffer@data& (0+255),b
 32021  007EFE  0E05               	movlw	high _CommandString
 32022  007F00  0100               	movlb	0	; () banked
 32023  007F02  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 32024  007F04  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 32025  007F08  0100               	movlb	0	; () banked
 32026  007F0A  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 32027  007F0C  ECDB  F046         	call	_cleanBuffer	;wreg free
 32028                           
 32029                           ;Bluetooth.c: 139: CommandStringPos = 0;
 32030  007F10  0E00               	movlw	0
 32031  007F12  6E27               	movwf	_CommandStringPos,c
 32032                           
 32033                           ;Bluetooth.c: 140: return 1;
 32034  007F14  0E01               	movlw	1
 32035  007F16  0012               	return	
 32036  007F18                     l13353:
 32037                           
 32038                           ;Bluetooth.c: 141: }
 32039                           ;Bluetooth.c: 142: cleanBuffer(CommandString,CommandStringPos);
 32040  007F18  0E00               	movlw	low _CommandString
 32041  007F1A  0100               	movlb	0	; () banked
 32042  007F1C  6F7C               	movwf	cleanBuffer@data& (0+255),b
 32043  007F1E  0E05               	movlw	high _CommandString
 32044  007F20  0100               	movlb	0	; () banked
 32045  007F22  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 32046  007F24  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 32047  007F28  0100               	movlb	0	; () banked
 32048  007F2A  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 32049  007F2C  ECDB  F046         	call	_cleanBuffer	;wreg free
 32050                           
 32051                           ;Bluetooth.c: 143: CommandStringPos = 0;
 32052  007F30  0E00               	movlw	0
 32053  007F32  6E27               	movwf	_CommandStringPos,c
 32054                           
 32055                           ;Bluetooth.c: 144: return 0;
 32056  007F34  0E00               	movlw	0
 32057  007F36  0012               	return	
 32058  007F38  0012               	return		;funcret
 32059  007F3A                     __end_of_EnterCommandMode:
 32060                           	opt stack 0
 32061                           tblptru	equ	0xFF8
 32062                           tblptrh	equ	0xFF7
 32063                           tblptrl	equ	0xFF6
 32064                           tablat	equ	0xFF5
 32065                           prodh	equ	0xFF4
 32066                           prodl	equ	0xFF3
 32067                           intcon	equ	0xFF2
 32068                           intcon2	equ	0xFF1
 32069                           indf0	equ	0xFEF
 32070                           postinc0	equ	0xFEE
 32071                           fsr0h	equ	0xFEA
 32072                           fsr0l	equ	0xFE9
 32073                           wreg	equ	0xFE8
 32074                           indf1	equ	0xFE7
 32075                           postdec1	equ	0xFE5
 32076                           fsr1h	equ	0xFE2
 32077                           fsr1l	equ	0xFE1
 32078                           indf2	equ	0xFDF
 32079                           postinc2	equ	0xFDE
 32080                           postdec2	equ	0xFDD
 32081                           fsr2h	equ	0xFDA
 32082                           fsr2l	equ	0xFD9
 32083                           status	equ	0xFD8
 32084                           
 32085 ;; *************** function _cleanBuffer *****************
 32086 ;; Defined at:
 32087 ;;		line 127 in file "MISC.c"
 32088 ;; Parameters:    Size  Location     Type
 32089 ;;  data            2   28[BANK0 ] PTR unsigned char 
 32090 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 32091 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 32092 ;;  count           2   30[BANK0 ] int 
 32093 ;; Auto vars:     Size  Location     Type
 32094 ;;  i               1   35[BANK0 ] unsigned char 
 32095 ;; Return value:  Size  Location     Type
 32096 ;;		None               void
 32097 ;; Registers used:
 32098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32099 ;; Tracked objects:
 32100 ;;		On entry : 0/0
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32106 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32107 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32108 ;;Total ram usage:        8 bytes
 32109 ;; Hardware stack levels used:    1
 32110 ;; Hardware stack levels required when called:    6
 32111 ;; This function calls:
 32112 ;;		Nothing
 32113 ;; This function is called by:
 32114 ;;		_main
 32115 ;;		_Init_System
 32116 ;;		_BufferCopy
 32117 ;;		_StringAddEqual
 32118 ;;		_InitBluetooth
 32119 ;;		_EnterCommandMode
 32120 ;;		_BluetoothInitialSetup
 32121 ;;		_UseBluetooth
 32122 ;; This function uses a non-reentrant model
 32123 ;;
 32124                           
 32125                           	psect	text79
 32126  008DB6                     __ptext79:
 32127                           	opt stack 0
 32128  008DB6                     _cleanBuffer:
 32129                           	opt stack 24
 32130                           
 32131                           ;MISC.c: 129: unsigned char i=0;
 32132                           
 32133                           ;incstack = 0
 32134  008DB6  0E00               	movlw	0
 32135  008DB8  0100               	movlb	0	; () banked
 32136  008DBA  6F83               	movwf	cleanBuffer@i& (0+255),b
 32137                           
 32138                           ;MISC.c: 130: for(i=0; i<count;i++)
 32139  008DBC  0E00               	movlw	0
 32140  008DBE  0100               	movlb	0	; () banked
 32141  008DC0  6F83               	movwf	cleanBuffer@i& (0+255),b
 32142  008DC2  D010               	goto	l12773
 32143  008DC4                     l12769:
 32144                           
 32145                           ; BSR set to: 0
 32146                           ;MISC.c: 131: {
 32147                           ;MISC.c: 132: data[i]= 0;
 32148  008DC4  0100               	movlb	0	; () banked
 32149  008DC6  5183               	movf	cleanBuffer@i& (0+255),w,b
 32150  008DC8  0D01               	mullw	1
 32151  008DCA  50F3               	movf	prodl,w,c
 32152  008DCC  0100               	movlb	0	; () banked
 32153  008DCE  257C               	addwf	cleanBuffer@data& (0+255),w,b
 32154  008DD0  6ED9               	movwf	fsr2l,c
 32155  008DD2  50F4               	movf	prodh,w,c
 32156  008DD4  0100               	movlb	0	; () banked
 32157  008DD6  217D               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 32158  008DD8  6EDA               	movwf	fsr2h,c
 32159  008DDA  0E00               	movlw	0
 32160  008DDC  6EDF               	movwf	indf2,c
 32161                           
 32162                           ; BSR set to: 0
 32163  008DDE  0100               	movlb	0	; () banked
 32164  008DE0  2B83               	incf	cleanBuffer@i& (0+255),f,b
 32165  008DE2  D000               	goto	l12773
 32166  008DE4                     l12773:
 32167                           
 32168                           ; BSR set to: 0
 32169  008DE4  0100               	movlb	0	; () banked
 32170  008DE6  5183               	movf	cleanBuffer@i& (0+255),w,b
 32171  008DE8  0100               	movlb	0	; () banked
 32172  008DEA  6F80               	movwf	??_cleanBuffer& (0+255),b
 32173  008DEC  6B81               	clrf	(??_cleanBuffer+1)& (0+255),b
 32174  008DEE  0100               	movlb	0	; () banked
 32175  008DF0  517E               	movf	cleanBuffer@count& (0+255),w,b
 32176  008DF2  0100               	movlb	0	; () banked
 32177  008DF4  5D80               	subwf	??_cleanBuffer& (0+255),w,b
 32178  008DF6  0100               	movlb	0	; () banked
 32179  008DF8  5181               	movf	(??_cleanBuffer+1)& (0+255),w,b
 32180  008DFA  0A80               	xorlw	128
 32181  008DFC  0100               	movlb	0	; () banked
 32182  008DFE  6F82               	movwf	(??_cleanBuffer+2)& (0+255),b
 32183  008E00  0100               	movlb	0	; () banked
 32184  008E02  517F               	movf	(cleanBuffer@count+1)& (0+255),w,b
 32185  008E04  0A80               	xorlw	128
 32186  008E06  0100               	movlb	0	; () banked
 32187  008E08  5982               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 32188  008E0A  A0D8               	btfss	status,0,c
 32189  008E0C  D7DB               	goto	l12769
 32190                           
 32191                           ; BSR set to: 0
 32192                           
 32193                           ; BSR set to: 0
 32194  008E0E  0012               	return		;funcret
 32195  008E10                     __end_of_cleanBuffer:
 32196                           	opt stack 0
 32197                           tblptru	equ	0xFF8
 32198                           tblptrh	equ	0xFF7
 32199                           tblptrl	equ	0xFF6
 32200                           tablat	equ	0xFF5
 32201                           prodh	equ	0xFF4
 32202                           prodl	equ	0xFF3
 32203                           intcon	equ	0xFF2
 32204                           intcon2	equ	0xFF1
 32205                           indf0	equ	0xFEF
 32206                           postinc0	equ	0xFEE
 32207                           fsr0h	equ	0xFEA
 32208                           fsr0l	equ	0xFE9
 32209                           wreg	equ	0xFE8
 32210                           indf1	equ	0xFE7
 32211                           postdec1	equ	0xFE5
 32212                           fsr1h	equ	0xFE2
 32213                           fsr1l	equ	0xFE1
 32214                           indf2	equ	0xFDF
 32215                           postinc2	equ	0xFDE
 32216                           postdec2	equ	0xFDD
 32217                           fsr2h	equ	0xFDA
 32218                           fsr2l	equ	0xFD9
 32219                           status	equ	0xFD8
 32220                           
 32221 ;; *************** function _UARTstring *****************
 32222 ;; Defined at:
 32223 ;;		line 202 in file "UART.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;  data            2   29[BANK0 ] PTR unsigned char 
 32226 ;;		 -> STR_149(28), STR_92(13), STR_79(32), STR_68(14), 
 32227 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_18(5), STR_16(5), 
 32228 ;;		 -> STR_14(6), STR_12(6), STR_10(9), STR_8(21), 
 32229 ;;		 -> STR_6(10), BluetoothInitialSetup@buf(50), STR_2(4), ReceivedString(255), 
 32230 ;;		 -> CRLN(3), 
 32231 ;; Auto vars:     Size  Location     Type
 32232 ;;		None
 32233 ;; Return value:  Size  Location     Type
 32234 ;;		None               void
 32235 ;; Registers used:
 32236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32237 ;; Tracked objects:
 32238 ;;		On entry : 0/0
 32239 ;;		On exit  : 0/0
 32240 ;;		Unchanged: 0/0
 32241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32246 ;;Total ram usage:        2 bytes
 32247 ;; Hardware stack levels used:    1
 32248 ;; Hardware stack levels required when called:    7
 32249 ;; This function calls:
 32250 ;;		_UARTchar
 32251 ;; This function is called by:
 32252 ;;		_main
 32253 ;;		_UARTstringCRLN
 32254 ;;		_UARTcommandMenu
 32255 ;;		_EnterCommandMode
 32256 ;;		_BluetoothInitialSetup
 32257 ;;		_UseBluetooth
 32258 ;;		_WaitForIRsignal
 32259 ;; This function uses a non-reentrant model
 32260 ;;
 32261                           
 32262                           	psect	text80
 32263  008E10                     __ptext80:
 32264                           	opt stack 0
 32265  008E10                     _UARTstring:
 32266                           	opt stack 20
 32267                           
 32268                           ;UART.c: 204: while(*data != 0)
 32269                           
 32270                           ; BSR set to: 0
 32271                           ;incstack = 0
 32272  008E10  D017               	goto	l12765
 32273  008E12                     l12761:
 32274                           
 32275                           ;UART.c: 205: {
 32276                           ;UART.c: 206: UARTchar(*data);
 32277  008E12  C07D  FFF6         	movff	UARTstring@data,tblptrl
 32278  008E16  C07E  FFF7         	movff	UARTstring@data+1,tblptrh
 32279  008E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 32280  008E1C  6EF8               	movwf	tblptru,c
 32281  008E1E  0E0F               	movlw	(high __ramtop+-1)
 32282  008E20  64F7               	cpfsgt	tblptrh,c
 32283  008E22  D003               	bra	u15087
 32284  008E24  0008               	tblrd		*
 32285  008E26  50F5               	movf	tablat,w,c
 32286  008E28  D005               	bra	u15080
 32287  008E2A                     u15087:
 32288  008E2A  CFF6 FFE9          	movff	tblptrl,fsr0l
 32289  008E2E  CFF7 FFEA          	movff	tblptrh,fsr0h
 32290  008E32  50EF               	movf	indf0,w,c
 32291  008E34                     u15080:
 32292  008E34  ECF4  F049         	call	_UARTchar
 32293                           
 32294                           ;UART.c: 207: *data++;
 32295  008E38  0100               	movlb	0	; () banked
 32296  008E3A  4B7D               	infsnz	UARTstring@data& (0+255),f,b
 32297  008E3C  2B7E               	incf	(UARTstring@data+1)& (0+255),f,b
 32298  008E3E  D000               	goto	l12765
 32299  008E40                     l12765:
 32300  008E40  C07D  FFF6         	movff	UARTstring@data,tblptrl
 32301  008E44  C07E  FFF7         	movff	UARTstring@data+1,tblptrh
 32302  008E48  0E00               	movlw	low (__mediumconst shr (0+16))
 32303  008E4A  6EF8               	movwf	tblptru,c
 32304  008E4C  0E0F               	movlw	(high __ramtop+-1)
 32305  008E4E  64F7               	cpfsgt	tblptrh,c
 32306  008E50  D003               	bra	u15097
 32307  008E52  0008               	tblrd		*
 32308  008E54  50F5               	movf	tablat,w,c
 32309  008E56  D005               	bra	u15090
 32310  008E58                     u15097:
 32311  008E58  CFF6 FFE9          	movff	tblptrl,fsr0l
 32312  008E5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32313  008E60  50EF               	movf	indf0,w,c
 32314  008E62                     u15090:
 32315  008E62  0900               	iorlw	0
 32316  008E64  A4D8               	btfss	status,2,c
 32317  008E66  D7D5               	goto	l12761
 32318  008E68  0012               	return		;funcret
 32319  008E6A                     __end_of_UARTstring:
 32320                           	opt stack 0
 32321                           tblptru	equ	0xFF8
 32322                           tblptrh	equ	0xFF7
 32323                           tblptrl	equ	0xFF6
 32324                           tablat	equ	0xFF5
 32325                           prodh	equ	0xFF4
 32326                           prodl	equ	0xFF3
 32327                           intcon	equ	0xFF2
 32328                           intcon2	equ	0xFF1
 32329                           indf0	equ	0xFEF
 32330                           postinc0	equ	0xFEE
 32331                           fsr0h	equ	0xFEA
 32332                           fsr0l	equ	0xFE9
 32333                           wreg	equ	0xFE8
 32334                           indf1	equ	0xFE7
 32335                           postdec1	equ	0xFE5
 32336                           fsr1h	equ	0xFE2
 32337                           fsr1l	equ	0xFE1
 32338                           indf2	equ	0xFDF
 32339                           postinc2	equ	0xFDE
 32340                           postdec2	equ	0xFDD
 32341                           fsr2h	equ	0xFDA
 32342                           fsr2l	equ	0xFD9
 32343                           status	equ	0xFD8
 32344                           
 32345 ;; *************** function _UARTchar *****************
 32346 ;; Defined at:
 32347 ;;		line 188 in file "UART.c"
 32348 ;; Parameters:    Size  Location     Type
 32349 ;;  data            1    wreg     unsigned char 
 32350 ;; Auto vars:     Size  Location     Type
 32351 ;;  data            1   28[BANK0 ] unsigned char 
 32352 ;; Return value:  Size  Location     Type
 32353 ;;		None               void
 32354 ;; Registers used:
 32355 ;;		wreg, status,2
 32356 ;; Tracked objects:
 32357 ;;		On entry : 0/0
 32358 ;;		On exit  : 0/0
 32359 ;;		Unchanged: 0/0
 32360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32365 ;;Total ram usage:        1 bytes
 32366 ;; Hardware stack levels used:    1
 32367 ;; Hardware stack levels required when called:    6
 32368 ;; This function calls:
 32369 ;;		Nothing
 32370 ;; This function is called by:
 32371 ;;		_main
 32372 ;;		_UARTstring
 32373 ;;		_UARTstringCRLN
 32374 ;;		_UARTcommandMenu
 32375 ;;		_UseBluetooth
 32376 ;;		_WaitForIRsignal
 32377 ;; This function uses a non-reentrant model
 32378 ;;
 32379                           
 32380                           	psect	text81
 32381  0093E8                     __ptext81:
 32382                           	opt stack 0
 32383  0093E8                     _UARTchar:
 32384                           	opt stack 20
 32385                           
 32386                           ;incstack = 0
 32387                           ;UARTchar@data stored from wreg
 32388  0093E8  0100               	movlb	0	; () banked
 32389  0093EA  6F7C               	movwf	UARTchar@data& (0+255),b
 32390                           
 32391                           ; BSR set to: 0
 32392                           ;UART.c: 190: if(data != 0)
 32393  0093EC  0100               	movlb	0	; () banked
 32394  0093EE  517C               	movf	UARTchar@data& (0+255),w,b
 32395  0093F0  0100               	movlb	0	; () banked
 32396  0093F2  B4D8               	btfsc	status,2,c
 32397  0093F4  0012               	return	
 32398                           
 32399                           ; BSR set to: 0
 32400                           ;UART.c: 191: {
 32401                           ;UART.c: 192: TXREG = data;
 32402  0093F6  C07C  FFAD         	movff	UARTchar@data,4013	;volatile
 32403                           
 32404                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 32405  0093FA  D000               	goto	l653
 32406  0093FC                     l653:
 32407                           
 32408                           ; BSR set to: 0
 32409  0093FC  B2AC               	btfsc	4012,1,c	;volatile
 32410  0093FE  0012               	return	
 32411  009400  D7FD               	goto	l653
 32412                           
 32413                           ; BSR set to: 0
 32414  009402  0012               	return	
 32415                           
 32416                           ; BSR set to: 0
 32417                           
 32418                           ; BSR set to: 0
 32419  009404  0012               	return		;funcret
 32420  009406                     __end_of_UARTchar:
 32421                           	opt stack 0
 32422                           tblptru	equ	0xFF8
 32423                           tblptrh	equ	0xFF7
 32424                           tblptrl	equ	0xFF6
 32425                           tablat	equ	0xFF5
 32426                           prodh	equ	0xFF4
 32427                           prodl	equ	0xFF3
 32428                           intcon	equ	0xFF2
 32429                           intcon2	equ	0xFF1
 32430                           indf0	equ	0xFEF
 32431                           postinc0	equ	0xFEE
 32432                           fsr0h	equ	0xFEA
 32433                           fsr0l	equ	0xFE9
 32434                           wreg	equ	0xFE8
 32435                           indf1	equ	0xFE7
 32436                           postdec1	equ	0xFE5
 32437                           fsr1h	equ	0xFE2
 32438                           fsr1l	equ	0xFE1
 32439                           indf2	equ	0xFDF
 32440                           postinc2	equ	0xFDE
 32441                           postdec2	equ	0xFDD
 32442                           fsr2h	equ	0xFDA
 32443                           fsr2l	equ	0xFD9
 32444                           status	equ	0xFD8
 32445                           
 32446 ;; *************** function _StringContains *****************
 32447 ;; Defined at:
 32448 ;;		line 252 in file "MISC.c"
 32449 ;; Parameters:    Size  Location     Type
 32450 ;;  This            2   28[BANK0 ] PTR unsigned char 
 32451 ;;		 -> CommandString(255), main@BluetoothString(255), 
 32452 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 32453 ;;		 -> STR_35(2), STR_19(4), STR_15(4), STR_13(4), 
 32454 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
 32455 ;;		 -> BluetoothInitialSetup@buf(50), STR_3(4), 
 32456 ;; Auto vars:     Size  Location     Type
 32457 ;;  begin           1   33[BANK0 ] unsigned char 
 32458 ;; Return value:  Size  Location     Type
 32459 ;;                  1    wreg      unsigned char 
 32460 ;; Registers used:
 32461 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32462 ;; Tracked objects:
 32463 ;;		On entry : 0/0
 32464 ;;		On exit  : 0/0
 32465 ;;		Unchanged: 0/0
 32466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32467 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32470 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32471 ;;Total ram usage:        6 bytes
 32472 ;; Hardware stack levels used:    1
 32473 ;; Hardware stack levels required when called:    6
 32474 ;; This function calls:
 32475 ;;		Nothing
 32476 ;; This function is called by:
 32477 ;;		_EnterCommandMode
 32478 ;;		_BluetoothInitialSetup
 32479 ;;		_UseBluetooth
 32480 ;; This function uses a non-reentrant model
 32481 ;;
 32482                           
 32483                           	psect	text82
 32484  0082E2                     __ptext82:
 32485                           	opt stack 0
 32486  0082E2                     _StringContains:
 32487                           	opt stack 23
 32488                           
 32489                           ;MISC.c: 254: unsigned char begin = 0;
 32490                           
 32491                           ; BSR set to: 0
 32492                           ;incstack = 0
 32493  0082E2  0E00               	movlw	0
 32494  0082E4  0100               	movlb	0	; () banked
 32495  0082E6  6F81               	movwf	StringContains@begin& (0+255),b
 32496                           
 32497                           ;MISC.c: 256: while(*This != 0)
 32498  0082E8  D04B               	goto	l12803
 32499  0082EA                     l12777:
 32500                           
 32501                           ; BSR set to: 0
 32502                           ;MISC.c: 257: {
 32503                           ;MISC.c: 258: if(*This == *That)
 32504  0082EA  C07C  FFD9         	movff	StringContains@This,fsr2l
 32505  0082EE  C07D  FFDA         	movff	StringContains@This+1,fsr2h
 32506  0082F2  50DF               	movf	indf2,w,c
 32507  0082F4  0100               	movlb	0	; () banked
 32508  0082F6  6F80               	movwf	??_StringContains& (0+255),b
 32509  0082F8  C07E  FFF6         	movff	StringContains@That,tblptrl
 32510  0082FC  C07F  FFF7         	movff	StringContains@That+1,tblptrh
 32511  008300  0E00               	movlw	low (__mediumconst shr (0+16))
 32512  008302  6EF8               	movwf	tblptru,c
 32513  008304  0E0F               	movlw	(high __ramtop+-1)
 32514  008306  64F7               	cpfsgt	tblptrh,c
 32515  008308  D003               	bra	u15127
 32516  00830A  0008               	tblrd		*
 32517  00830C  50F5               	movf	tablat,w,c
 32518  00830E  D005               	bra	u15120
 32519  008310                     u15127:
 32520  008310  CFF6 FFE9          	movff	tblptrl,fsr0l
 32521  008314  CFF7 FFEA          	movff	tblptrh,fsr0h
 32522  008318  50EF               	movf	indf0,w,c
 32523  00831A                     u15120:
 32524  00831A  0100               	movlb	0	; () banked
 32525  00831C  1980               	xorwf	??_StringContains& (0+255),w,b
 32526  00831E  A4D8               	btfss	status,2,c
 32527  008320  D026               	goto	l12795
 32528                           
 32529                           ; BSR set to: 0
 32530                           ;MISC.c: 259: {
 32531                           ;MISC.c: 260: begin = 1;
 32532  008322  0E01               	movlw	1
 32533  008324  0100               	movlb	0	; () banked
 32534  008326  6F81               	movwf	StringContains@begin& (0+255),b
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;MISC.c: 261: That++;
 32538  008328  0100               	movlb	0	; () banked
 32539  00832A  4B7E               	infsnz	StringContains@That& (0+255),f,b
 32540  00832C  2B7F               	incf	(StringContains@That+1)& (0+255),f,b
 32541                           
 32542                           ; BSR set to: 0
 32543                           ;MISC.c: 262: if(*That == 0)
 32544  00832E  C07E  FFF6         	movff	StringContains@That,tblptrl
 32545  008332  C07F  FFF7         	movff	StringContains@That+1,tblptrh
 32546  008336  0E00               	movlw	low (__mediumconst shr (0+16))
 32547  008338  6EF8               	movwf	tblptru,c
 32548  00833A  0E0F               	movlw	(high __ramtop+-1)
 32549  00833C  64F7               	cpfsgt	tblptrh,c
 32550  00833E  D003               	bra	u15147
 32551  008340  0008               	tblrd		*
 32552  008342  50F5               	movf	tablat,w,c
 32553  008344  D005               	bra	u15140
 32554  008346                     u15147:
 32555  008346  CFF6 FFE9          	movff	tblptrl,fsr0l
 32556  00834A  CFF7 FFEA          	movff	tblptrh,fsr0h
 32557  00834E  50EF               	movf	indf0,w,c
 32558  008350                     u15140:
 32559  008350  0900               	iorlw	0
 32560  008352  A4D8               	btfss	status,2,c
 32561  008354  D002               	goto	l12789
 32562                           
 32563                           ;MISC.c: 263: {
 32564                           ;MISC.c: 264: return 1;
 32565  008356  0E01               	movlw	1
 32566  008358  0012               	return	
 32567  00835A                     l12789:
 32568                           
 32569                           ;MISC.c: 265: }
 32570                           ;MISC.c: 266: if(*This == 0)
 32571  00835A  C07C  FFD9         	movff	StringContains@This,fsr2l
 32572  00835E  C07D  FFDA         	movff	StringContains@This+1,fsr2h
 32573  008362  50DF               	movf	indf2,w,c
 32574  008364  A4D8               	btfss	status,2,c
 32575  008366  D008               	goto	l12801
 32576                           
 32577                           ;MISC.c: 267: {
 32578                           ;MISC.c: 268: return 0;
 32579  008368  0E00               	movlw	0
 32580  00836A  0012               	return	
 32581                           
 32582                           ;MISC.c: 269: }
 32583                           ;MISC.c: 270: }
 32584  00836C  D005               	goto	l12801
 32585  00836E                     l12795:
 32586                           
 32587                           ;MISC.c: 271: else
 32588                           ;MISC.c: 272: {
 32589                           ;MISC.c: 273: if(begin == 1)
 32590  00836E  0100               	movlb	0	; () banked
 32591  008370  0581               	decf	StringContains@begin& (0+255),w,b
 32592  008372  D7F8               	goto	L23
 32593                           
 32594                           ; BSR set to: 0
 32595                           
 32596                           ; BSR set to: 0
 32597                           ;MISC.c: 274: {
 32598                           ;MISC.c: 275: return 0;
 32599  008374  0012               	return	
 32600                           
 32601                           ; BSR set to: 0
 32602  008376  D000               	goto	l12801
 32603  008378                     l12801:
 32604                           
 32605                           ;MISC.c: 276: }
 32606                           ;MISC.c: 277: }
 32607                           ;MISC.c: 278: This++;
 32608  008378  0100               	movlb	0	; () banked
 32609  00837A  4B7C               	infsnz	StringContains@This& (0+255),f,b
 32610  00837C  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 32611  00837E  D000               	goto	l12803
 32612  008380                     l12803:
 32613                           
 32614                           ; BSR set to: 0
 32615  008380  C07C  FFD9         	movff	StringContains@This,fsr2l
 32616  008384  C07D  FFDA         	movff	StringContains@This+1,fsr2h
 32617  008388  50DF               	movf	indf2,w,c
 32618  00838A  A4D8               	btfss	status,2,c
 32619  00838C  D7AE               	goto	l12777
 32620                           
 32621                           ; BSR set to: 0
 32622                           ;MISC.c: 279: }
 32623                           ;MISC.c: 280: return 0;
 32624                           
 32625                           ; BSR set to: 0
 32626  00838E  0E00               	movlw	0
 32627  008390  0012               	return	
 32628                           
 32629                           ; BSR set to: 0
 32630  008392  0012               	return		;funcret
 32631  008394                     __end_of_StringContains:
 32632                           	opt stack 0
 32633                           tblptru	equ	0xFF8
 32634                           tblptrh	equ	0xFF7
 32635                           tblptrl	equ	0xFF6
 32636                           tablat	equ	0xFF5
 32637                           prodh	equ	0xFF4
 32638                           prodl	equ	0xFF3
 32639                           intcon	equ	0xFF2
 32640                           intcon2	equ	0xFF1
 32641                           indf0	equ	0xFEF
 32642                           postinc0	equ	0xFEE
 32643                           fsr0h	equ	0xFEA
 32644                           fsr0l	equ	0xFE9
 32645                           wreg	equ	0xFE8
 32646                           indf1	equ	0xFE7
 32647                           postdec1	equ	0xFE5
 32648                           fsr1h	equ	0xFE2
 32649                           fsr1l	equ	0xFE1
 32650                           indf2	equ	0xFDF
 32651                           postinc2	equ	0xFDE
 32652                           postdec2	equ	0xFDD
 32653                           fsr2h	equ	0xFDA
 32654                           fsr2l	equ	0xFD9
 32655                           status	equ	0xFD8
 32656                           
 32657 ;; *************** function _ResetBlue *****************
 32658 ;; Defined at:
 32659 ;;		line 106 in file "Bluetooth.c"
 32660 ;; Parameters:    Size  Location     Type
 32661 ;;		None
 32662 ;; Auto vars:     Size  Location     Type
 32663 ;;		None
 32664 ;; Return value:  Size  Location     Type
 32665 ;;		None               void
 32666 ;; Registers used:
 32667 ;;		wreg, status,2, status,0, cstack
 32668 ;; Tracked objects:
 32669 ;;		On entry : 0/0
 32670 ;;		On exit  : 0/0
 32671 ;;		Unchanged: 0/0
 32672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32677 ;;Total ram usage:        0 bytes
 32678 ;; Hardware stack levels used:    1
 32679 ;; Hardware stack levels required when called:    7
 32680 ;; This function calls:
 32681 ;;		_delayUS
 32682 ;; This function is called by:
 32683 ;;		_InitBluetooth
 32684 ;;		_EnterCommandMode
 32685 ;; This function uses a non-reentrant model
 32686 ;;
 32687                           
 32688                           	psect	text83
 32689  009290                     __ptext83:
 32690                           	opt stack 0
 32691  009290                     _ResetBlue:
 32692                           	opt stack 21
 32693                           
 32694                           ;Bluetooth.c: 108: LATA &= ~0x04;
 32695                           
 32696                           ;incstack = 0
 32697  009290  9489               	bcf	3977,2,c	;volatile
 32698                           
 32699                           ;Bluetooth.c: 109: delayUS(50000);
 32700  009292  0E50               	movlw	80
 32701  009294  0100               	movlb	0	; () banked
 32702  009296  6F7C               	movwf	delayUS@US& (0+255),b
 32703  009298  0EC3               	movlw	195
 32704  00929A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 32705  00929C  0E00               	movlw	0
 32706  00929E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 32707  0092A0  0E00               	movlw	0
 32708  0092A2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 32709  0092A4  EC8C  F047         	call	_delayUS	;wreg free
 32710                           
 32711                           ;Bluetooth.c: 110: LATA |= 0x04;
 32712  0092A8  8489               	bsf	3977,2,c	;volatile
 32713                           
 32714                           ;Bluetooth.c: 111: delayUS(50000);
 32715  0092AA  0E50               	movlw	80
 32716  0092AC  0100               	movlb	0	; () banked
 32717  0092AE  6F7C               	movwf	delayUS@US& (0+255),b
 32718  0092B0  0EC3               	movlw	195
 32719  0092B2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 32720  0092B4  0E00               	movlw	0
 32721  0092B6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 32722  0092B8  0E00               	movlw	0
 32723  0092BA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 32724  0092BC  EC8C  F047         	call	_delayUS	;wreg free
 32725  0092C0  0012               	return		;funcret
 32726  0092C2                     __end_of_ResetBlue:
 32727                           	opt stack 0
 32728                           tblptru	equ	0xFF8
 32729                           tblptrh	equ	0xFF7
 32730                           tblptrl	equ	0xFF6
 32731                           tablat	equ	0xFF5
 32732                           prodh	equ	0xFF4
 32733                           prodl	equ	0xFF3
 32734                           intcon	equ	0xFF2
 32735                           intcon2	equ	0xFF1
 32736                           indf0	equ	0xFEF
 32737                           postinc0	equ	0xFEE
 32738                           fsr0h	equ	0xFEA
 32739                           fsr0l	equ	0xFE9
 32740                           wreg	equ	0xFE8
 32741                           indf1	equ	0xFE7
 32742                           postdec1	equ	0xFE5
 32743                           fsr1h	equ	0xFE2
 32744                           fsr1l	equ	0xFE1
 32745                           indf2	equ	0xFDF
 32746                           postinc2	equ	0xFDE
 32747                           postdec2	equ	0xFDD
 32748                           fsr2h	equ	0xFDA
 32749                           fsr2l	equ	0xFD9
 32750                           status	equ	0xFD8
 32751                           
 32752 ;; *************** function _delayUS *****************
 32753 ;; Defined at:
 32754 ;;		line 51 in file "MISC.c"
 32755 ;; Parameters:    Size  Location     Type
 32756 ;;  US              4   28[BANK0 ] long 
 32757 ;; Auto vars:     Size  Location     Type
 32758 ;;  i               4   33[BANK0 ] long 
 32759 ;; Return value:  Size  Location     Type
 32760 ;;		None               void
 32761 ;; Registers used:
 32762 ;;		wreg, status,2, status,0
 32763 ;; Tracked objects:
 32764 ;;		On entry : 0/0
 32765 ;;		On exit  : 0/0
 32766 ;;		Unchanged: 0/0
 32767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32769 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32771 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32772 ;;Total ram usage:        9 bytes
 32773 ;; Hardware stack levels used:    1
 32774 ;; Hardware stack levels required when called:    6
 32775 ;; This function calls:
 32776 ;;		Nothing
 32777 ;; This function is called by:
 32778 ;;		_main
 32779 ;;		_ReadVoltage
 32780 ;;		_InternalADC_Read
 32781 ;;		_UseIRCode
 32782 ;;		_SendNEC_wait
 32783 ;;		_ReadCodeButtons
 32784 ;;		_ResetBlue
 32785 ;;		_EnterCommandMode
 32786 ;;		_BluetoothInitialSetup
 32787 ;;		_UseBluetooth
 32788 ;;		_WaitForIRsignal
 32789 ;;		_CalibrateDelay
 32790 ;; This function uses a non-reentrant model
 32791 ;;
 32792                           
 32793                           	psect	text84
 32794  008F18                     __ptext84:
 32795                           	opt stack 0
 32796  008F18                     _delayUS:
 32797                           	opt stack 24
 32798                           
 32799                           ;MISC.c: 53: long i;
 32800                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 32801                           
 32802                           ;incstack = 0
 32803  008F18  0E00               	movlw	0
 32804  008F1A  0100               	movlb	0	; () banked
 32805  008F1C  6F81               	movwf	delayUS@i& (0+255),b
 32806  008F1E  0E00               	movlw	0
 32807  008F20  6F82               	movwf	(delayUS@i+1)& (0+255),b
 32808  008F22  0E00               	movlw	0
 32809  008F24  6F83               	movwf	(delayUS@i+2)& (0+255),b
 32810  008F26  0E00               	movlw	0
 32811  008F28  6F84               	movwf	(delayUS@i+3)& (0+255),b
 32812  008F2A  D008               	goto	l305
 32813  008F2C                     l306:
 32814                           
 32815                           ; BSR set to: 0
 32816                           ;MISC.c: 55: {
 32817                           ;MISC.c: 56: __nop();
 32818  008F2C  F000               	nop	
 32819  008F2E  0E02               	movlw	2
 32820  008F30  0100               	movlb	0	; () banked
 32821  008F32  2781               	addwf	delayUS@i& (0+255),f,b
 32822  008F34  0E00               	movlw	0
 32823  008F36  2382               	addwfc	(delayUS@i+1)& (0+255),f,b
 32824  008F38  2383               	addwfc	(delayUS@i+2)& (0+255),f,b
 32825  008F3A  2384               	addwfc	(delayUS@i+3)& (0+255),f,b
 32826  008F3C                     l305:
 32827                           
 32828                           ; BSR set to: 0
 32829  008F3C  0100               	movlb	0	; () banked
 32830  008F3E  517C               	movf	delayUS@US& (0+255),w,b
 32831  008F40  0100               	movlb	0	; () banked
 32832  008F42  5D81               	subwf	delayUS@i& (0+255),w,b
 32833  008F44  0100               	movlb	0	; () banked
 32834  008F46  517D               	movf	(delayUS@US+1)& (0+255),w,b
 32835  008F48  0100               	movlb	0	; () banked
 32836  008F4A  5982               	subwfb	(delayUS@i+1)& (0+255),w,b
 32837  008F4C  0100               	movlb	0	; () banked
 32838  008F4E  517E               	movf	(delayUS@US+2)& (0+255),w,b
 32839  008F50  0100               	movlb	0	; () banked
 32840  008F52  5983               	subwfb	(delayUS@i+2)& (0+255),w,b
 32841  008F54  0100               	movlb	0	; () banked
 32842  008F56  5184               	movf	(delayUS@i+3)& (0+255),w,b
 32843  008F58  0A80               	xorlw	128
 32844  008F5A  0100               	movlb	0	; () banked
 32845  008F5C  6F80               	movwf	??_delayUS& (0+255),b
 32846  008F5E  0100               	movlb	0	; () banked
 32847  008F60  517F               	movf	(delayUS@US+3)& (0+255),w,b
 32848  008F62  0A80               	xorlw	128
 32849  008F64  0100               	movlb	0	; () banked
 32850  008F66  5980               	subwfb	??_delayUS& (0+255),w,b
 32851  008F68  A0D8               	btfss	status,0,c
 32852  008F6A  D7E0               	goto	l306
 32853                           
 32854                           ; BSR set to: 0
 32855                           
 32856                           ; BSR set to: 0
 32857  008F6C  0012               	return		;funcret
 32858  008F6E                     __end_of_delayUS:
 32859                           	opt stack 0
 32860                           tblptru	equ	0xFF8
 32861                           tblptrh	equ	0xFF7
 32862                           tblptrl	equ	0xFF6
 32863                           tablat	equ	0xFF5
 32864                           prodh	equ	0xFF4
 32865                           prodl	equ	0xFF3
 32866                           intcon	equ	0xFF2
 32867                           intcon2	equ	0xFF1
 32868                           indf0	equ	0xFEF
 32869                           postinc0	equ	0xFEE
 32870                           fsr0h	equ	0xFEA
 32871                           fsr0l	equ	0xFE9
 32872                           wreg	equ	0xFE8
 32873                           indf1	equ	0xFE7
 32874                           postdec1	equ	0xFE5
 32875                           fsr1h	equ	0xFE2
 32876                           fsr1l	equ	0xFE1
 32877                           indf2	equ	0xFDF
 32878                           postinc2	equ	0xFDE
 32879                           postdec2	equ	0xFDD
 32880                           fsr2h	equ	0xFDA
 32881                           fsr2l	equ	0xFD9
 32882                           status	equ	0xFD8
 32883                           
 32884 ;; *************** function _BlueConnected *****************
 32885 ;; Defined at:
 32886 ;;		line 91 in file "Bluetooth.c"
 32887 ;; Parameters:    Size  Location     Type
 32888 ;;		None
 32889 ;; Auto vars:     Size  Location     Type
 32890 ;;		None
 32891 ;; Return value:  Size  Location     Type
 32892 ;;                  1    wreg      unsigned char 
 32893 ;; Registers used:
 32894 ;;		wreg
 32895 ;; Tracked objects:
 32896 ;;		On entry : 0/0
 32897 ;;		On exit  : 0/0
 32898 ;;		Unchanged: 0/0
 32899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32904 ;;Total ram usage:        0 bytes
 32905 ;; Hardware stack levels used:    1
 32906 ;; Hardware stack levels required when called:    6
 32907 ;; This function calls:
 32908 ;;		Nothing
 32909 ;; This function is called by:
 32910 ;;		_main
 32911 ;;		_EnterCommandMode
 32912 ;; This function uses a non-reentrant model
 32913 ;;
 32914                           
 32915                           	psect	text85
 32916  00955C                     __ptext85:
 32917                           	opt stack 0
 32918  00955C                     _BlueConnected:
 32919                           	opt stack 20
 32920                           
 32921                           ;Bluetooth.c: 94: if((PORTA & 0x02) == 0x02)
 32922                           
 32923                           ; BSR set to: 0
 32924                           ;incstack = 0
 32925  00955C  A280               	btfss	3968,1,c	;volatile
 32926  00955E  D002               	goto	l12755
 32927                           
 32928                           ;Bluetooth.c: 95: {
 32929                           ;Bluetooth.c: 96: return 1;
 32930  009560  0E01               	movlw	1
 32931  009562  0012               	return	
 32932  009564                     l12755:
 32933                           
 32934                           ;Bluetooth.c: 97: }
 32935                           ;Bluetooth.c: 98: return 0;
 32936  009564  0E00               	movlw	0
 32937  009566  0012               	return	
 32938  009568  0012               	return		;funcret
 32939  00956A                     __end_of_BlueConnected:
 32940                           	opt stack 0
 32941                           tblptru	equ	0xFF8
 32942                           tblptrh	equ	0xFF7
 32943                           tblptrl	equ	0xFF6
 32944                           tablat	equ	0xFF5
 32945                           prodh	equ	0xFF4
 32946                           prodl	equ	0xFF3
 32947                           intcon	equ	0xFF2
 32948                           intcon2	equ	0xFF1
 32949                           indf0	equ	0xFEF
 32950                           postinc0	equ	0xFEE
 32951                           fsr0h	equ	0xFEA
 32952                           fsr0l	equ	0xFE9
 32953                           wreg	equ	0xFE8
 32954                           indf1	equ	0xFE7
 32955                           postdec1	equ	0xFE5
 32956                           fsr1h	equ	0xFE2
 32957                           fsr1l	equ	0xFE1
 32958                           indf2	equ	0xFDF
 32959                           postinc2	equ	0xFDE
 32960                           postdec2	equ	0xFDD
 32961                           fsr2h	equ	0xFDA
 32962                           fsr2l	equ	0xFD9
 32963                           status	equ	0xFD8
 32964                           
 32965 ;; *************** function _BluetoothConfigured *****************
 32966 ;; Defined at:
 32967 ;;		line 267 in file "Bluetooth.c"
 32968 ;; Parameters:    Size  Location     Type
 32969 ;;		None
 32970 ;; Auto vars:     Size  Location     Type
 32971 ;;		None
 32972 ;; Return value:  Size  Location     Type
 32973 ;;                  1    wreg      unsigned char 
 32974 ;; Registers used:
 32975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32976 ;; Tracked objects:
 32977 ;;		On entry : 0/0
 32978 ;;		On exit  : 0/0
 32979 ;;		Unchanged: 0/0
 32980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32985 ;;Total ram usage:        0 bytes
 32986 ;; Hardware stack levels used:    1
 32987 ;; Hardware stack levels required when called:   11
 32988 ;; This function calls:
 32989 ;;		_SyncGlobalToEEPROM
 32990 ;; This function is called by:
 32991 ;;		_InitBluetooth
 32992 ;; This function uses a non-reentrant model
 32993 ;;
 32994                           
 32995                           	psect	text86
 32996  009406                     __ptext86:
 32997                           	opt stack 0
 32998  009406                     _BluetoothConfigured:
 32999                           	opt stack 17
 33000                           
 33001                           ;Bluetooth.c: 269: if(Global.BlueToothFlag != 1)
 33002                           
 33003                           ;incstack = 0
 33004  009406  0104               	movlb	4	; () banked
 33005  009408  0500               	decf	_Global& (0+255),w,b
 33006  00940A  B4D8               	btfsc	status,2,c
 33007  00940C  D007               	goto	l14109
 33008                           
 33009                           ; BSR set to: 4
 33010                           ;Bluetooth.c: 270: {
 33011                           ;Bluetooth.c: 271: Global.BlueToothFlag = 1;
 33012  00940E  0E01               	movlw	1
 33013  009410  0104               	movlb	4	; () banked
 33014  009412  6F00               	movwf	_Global& (0+255),b
 33015                           
 33016                           ; BSR set to: 4
 33017                           ;Bluetooth.c: 272: SyncGlobalToEEPROM();
 33018  009414  EC2D  F048         	call	_SyncGlobalToEEPROM	;wreg free
 33019                           
 33020                           ;Bluetooth.c: 273: return 0;
 33021  009418  0E00               	movlw	0
 33022  00941A  0012               	return	
 33023  00941C                     l14109:
 33024                           
 33025                           ;Bluetooth.c: 274: }
 33026                           ;Bluetooth.c: 275: return 1;
 33027  00941C  0E01               	movlw	1
 33028  00941E  0012               	return	
 33029  009420  0012               	return		;funcret
 33030  009422                     __end_of_BluetoothConfigured:
 33031                           	opt stack 0
 33032                           tblptru	equ	0xFF8
 33033                           tblptrh	equ	0xFF7
 33034                           tblptrl	equ	0xFF6
 33035                           tablat	equ	0xFF5
 33036                           prodh	equ	0xFF4
 33037                           prodl	equ	0xFF3
 33038                           intcon	equ	0xFF2
 33039                           intcon2	equ	0xFF1
 33040                           indf0	equ	0xFEF
 33041                           postinc0	equ	0xFEE
 33042                           fsr0h	equ	0xFEA
 33043                           fsr0l	equ	0xFE9
 33044                           wreg	equ	0xFE8
 33045                           indf1	equ	0xFE7
 33046                           postdec1	equ	0xFE5
 33047                           fsr1h	equ	0xFE2
 33048                           fsr1l	equ	0xFE1
 33049                           indf2	equ	0xFDF
 33050                           postinc2	equ	0xFDE
 33051                           postdec2	equ	0xFDD
 33052                           fsr2h	equ	0xFDA
 33053                           fsr2l	equ	0xFD9
 33054                           status	equ	0xFD8
 33055                           
 33056 ;; *************** function _SyncGlobalToEEPROM *****************
 33057 ;; Defined at:
 33058 ;;		line 239 in file "EEPROM.c"
 33059 ;; Parameters:    Size  Location     Type
 33060 ;;		None
 33061 ;; Auto vars:     Size  Location     Type
 33062 ;;		None
 33063 ;; Return value:  Size  Location     Type
 33064 ;;                  1    wreg      unsigned char 
 33065 ;; Registers used:
 33066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33067 ;; Tracked objects:
 33068 ;;		On entry : 0/0
 33069 ;;		On exit  : 0/0
 33070 ;;		Unchanged: 0/0
 33071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33076 ;;Total ram usage:        0 bytes
 33077 ;; Hardware stack levels used:    1
 33078 ;; Hardware stack levels required when called:   10
 33079 ;; This function calls:
 33080 ;;		_SetEEPROM
 33081 ;; This function is called by:
 33082 ;;		_Init_System
 33083 ;;		_SetEEPROMdefault
 33084 ;;		_UseIRCode
 33085 ;;		_BluetoothConfigured
 33086 ;;		_UseBluetooth
 33087 ;; This function uses a non-reentrant model
 33088 ;;
 33089                           
 33090                           	psect	text87
 33091  00905A                     __ptext87:
 33092                           	opt stack 0
 33093  00905A                     _SyncGlobalToEEPROM:
 33094                           	opt stack 19
 33095                           
 33096                           ;EEPROM.c: 242: if(!SetEEPROM(Global,0xFFFFFFFF))
 33097                           
 33098                           ;incstack = 0
 33099  00905A  EE24  F000         	lfsr	2,_Global
 33100  00905E  EE01  F000         	lfsr	0,SetEEPROM@Temp
 33101  009062  0E87               	movlw	135
 33102  009064                     u15851:
 33103  009064  CFDB FFEB          	movff	plusw2,plusw0
 33104  009068  06E8               	decf	wreg,f,c
 33105  00906A  E2FC               	bc	u15851
 33106  00906C  0EFF               	movlw	255
 33107  00906E  0101               	movlb	1	; () banked
 33108  009070  6F88               	movwf	SetEEPROM@burn& (0+255),b
 33109  009072  0EFF               	movlw	255
 33110  009074  6F89               	movwf	(SetEEPROM@burn+1)& (0+255),b
 33111  009076  0EFF               	movlw	255
 33112  009078  6F8A               	movwf	(SetEEPROM@burn+2)& (0+255),b
 33113  00907A  0EFF               	movlw	255
 33114  00907C  6F8B               	movwf	(SetEEPROM@burn+3)& (0+255),b
 33115  00907E  EC6D  F032         	call	_SetEEPROM	;wreg free
 33116  009082  0101               	movlb	1	; () banked
 33117  009084  5100               	movf	?_SetEEPROM& (0+255),w,b
 33118  009086  0101               	movlb	1	; () banked
 33119  009088  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 33120  00908A  0101               	movlb	1	; () banked
 33121  00908C  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 33122  00908E  0101               	movlb	1	; () banked
 33123  009090  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 33124  009092  A4D8               	btfss	status,2,c
 33125  009094  D002               	goto	l13227
 33126                           
 33127                           ; BSR set to: 1
 33128                           ;EEPROM.c: 243: {
 33129                           ;EEPROM.c: 244: return 1;
 33130  009096  0E01               	movlw	1
 33131                           
 33132                           ; BSR set to: 1
 33133  009098  0012               	return	
 33134  00909A                     l13227:
 33135                           
 33136                           ; BSR set to: 1
 33137                           ;EEPROM.c: 245: }
 33138                           ;EEPROM.c: 246: return 0;
 33139  00909A  0E00               	movlw	0
 33140  00909C  0012               	return	
 33141                           
 33142                           ; BSR set to: 1
 33143                           
 33144                           ; BSR set to: 1
 33145  00909E  0012               	return		;funcret
 33146  0090A0                     __end_of_SyncGlobalToEEPROM:
 33147                           	opt stack 0
 33148                           tblptru	equ	0xFF8
 33149                           tblptrh	equ	0xFF7
 33150                           tblptrl	equ	0xFF6
 33151                           tablat	equ	0xFF5
 33152                           prodh	equ	0xFF4
 33153                           prodl	equ	0xFF3
 33154                           intcon	equ	0xFF2
 33155                           intcon2	equ	0xFF1
 33156                           indf0	equ	0xFEF
 33157                           postinc0	equ	0xFEE
 33158                           plusw0	equ	0xFEB
 33159                           fsr0h	equ	0xFEA
 33160                           fsr0l	equ	0xFE9
 33161                           wreg	equ	0xFE8
 33162                           indf1	equ	0xFE7
 33163                           postdec1	equ	0xFE5
 33164                           fsr1h	equ	0xFE2
 33165                           fsr1l	equ	0xFE1
 33166                           indf2	equ	0xFDF
 33167                           postinc2	equ	0xFDE
 33168                           postdec2	equ	0xFDD
 33169                           plusw2	equ	0xFDB
 33170                           fsr2h	equ	0xFDA
 33171                           fsr2l	equ	0xFD9
 33172                           status	equ	0xFD8
 33173                           
 33174 ;; *************** function _SetEEPROM *****************
 33175 ;; Defined at:
 33176 ;;		line 167 in file "EEPROM.c"
 33177 ;; Parameters:    Size  Location     Type
 33178 ;;  Temp          136    0[BANK1 ] struct EEdata
 33179 ;;  burn            4  136[BANK1 ] unsigned long 
 33180 ;; Auto vars:     Size  Location     Type
 33181 ;;  fail            4   84[BANK0 ] unsigned long 
 33182 ;;  j               1   92[BANK0 ] unsigned char 
 33183 ;;  i               1   91[BANK0 ] unsigned char 
 33184 ;;  k               1   90[BANK0 ] unsigned char 
 33185 ;;  Arrayspot       1   89[BANK0 ] unsigned char 
 33186 ;;  temp            1   88[BANK0 ] unsigned char 
 33187 ;; Return value:  Size  Location     Type
 33188 ;;                  4    0[BANK1 ] unsigned long 
 33189 ;; Registers used:
 33190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33191 ;; Tracked objects:
 33192 ;;		On entry : 0/0
 33193 ;;		On exit  : 0/0
 33194 ;;		Unchanged: 0/0
 33195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33196 ;;      Params:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33197 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33198 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33199 ;;      Totals:         0      11     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33200 ;;Total ram usage:      151 bytes
 33201 ;; Hardware stack levels used:    1
 33202 ;; Hardware stack levels required when called:    9
 33203 ;; This function calls:
 33204 ;;		_SetMemoryChar
 33205 ;;		_SetMemoryLong
 33206 ;; This function is called by:
 33207 ;;		_SyncGlobalToEEPROM
 33208 ;; This function uses a non-reentrant model
 33209 ;;
 33210                           
 33211                           	psect	text88
 33212  0064DA                     __ptext88:
 33213                           	opt stack 0
 33214  0064DA                     _SetEEPROM:
 33215                           	opt stack 19
 33216                           
 33217                           ;EEPROM.c: 169: unsigned long fail = 0;
 33218                           
 33219                           ; BSR set to: 1
 33220                           ;incstack = 0
 33221  0064DA  0E00               	movlw	0
 33222  0064DC  0100               	movlb	0	; () banked
 33223  0064DE  6FB4               	movwf	SetEEPROM@fail& (0+255),b
 33224  0064E0  0E00               	movlw	0
 33225  0064E2  6FB5               	movwf	(SetEEPROM@fail+1)& (0+255),b
 33226  0064E4  0E00               	movlw	0
 33227  0064E6  6FB6               	movwf	(SetEEPROM@fail+2)& (0+255),b
 33228  0064E8  0E00               	movlw	0
 33229  0064EA  6FB7               	movwf	(SetEEPROM@fail+3)& (0+255),b
 33230                           
 33231                           ;EEPROM.c: 170: unsigned char i,j,k,temp;
 33232                           ;EEPROM.c: 171: unsigned char Arrayspot=5;
 33233  0064EC  0E05               	movlw	5
 33234  0064EE  0100               	movlb	0	; () banked
 33235  0064F0  6FB9               	movwf	SetEEPROM@Arrayspot& (0+255),b
 33236                           
 33237                           ; BSR set to: 0
 33238                           ;EEPROM.c: 173: if(burn & 0x00000001)
 33239  0064F2  0101               	movlb	1	; () banked
 33240  0064F4  A188               	btfss	SetEEPROM@burn& (0+255),0,b
 33241  0064F6  D00D               	goto	l12819
 33242                           
 33243                           ; BSR set to: 1
 33244                           ;EEPROM.c: 174: {
 33245                           ;EEPROM.c: 175: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 33246  0064F8  0E00               	movlw	0
 33247  0064FA  0100               	movlb	0	; () banked
 33248  0064FC  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33249  0064FE  0101               	movlb	1	; () banked
 33250  006500  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 33251  006502  ECF4  F048         	call	_SetMemoryChar
 33252  006506  0900               	iorlw	0
 33253  006508  A4D8               	btfss	status,2,c
 33254  00650A  D003               	goto	l12819
 33255                           
 33256                           ;EEPROM.c: 176: {
 33257                           ;EEPROM.c: 178: fail |= 0x00000001;
 33258  00650C  0100               	movlb	0	; () banked
 33259  00650E  81B4               	bsf	SetEEPROM@fail& (0+255),0,b
 33260                           
 33261                           ; BSR set to: 0
 33262  006510  D000               	goto	l12819
 33263  006512                     l12819:
 33264                           
 33265                           ;EEPROM.c: 179: }
 33266                           ;EEPROM.c: 180: }
 33267                           ;EEPROM.c: 181: if(burn & 0x00000002)
 33268  006512  0101               	movlb	1	; () banked
 33269  006514  A388               	btfss	SetEEPROM@burn& (0+255),1,b
 33270  006516  D013               	goto	l12825
 33271                           
 33272                           ; BSR set to: 1
 33273                           ;EEPROM.c: 182: {
 33274                           ;EEPROM.c: 183: if(!SetMemoryLong(Temp.SWNECcode,1))
 33275  006518  C101  F0A1         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 33276  00651C  C102  F0A2         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 33277  006520  C103  F0A3         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 33278  006524  C104  F0A4         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 33279  006528  0E01               	movlw	1
 33280  00652A  0100               	movlb	0	; () banked
 33281  00652C  6FA5               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 33282  00652E  EC75  F03D         	call	_SetMemoryLong	;wreg free
 33283  006532  0900               	iorlw	0
 33284  006534  A4D8               	btfss	status,2,c
 33285  006536  D003               	goto	l12825
 33286                           
 33287                           ;EEPROM.c: 184: {
 33288                           ;EEPROM.c: 186: fail |= 0x00000002;
 33289  006538  0100               	movlb	0	; () banked
 33290  00653A  83B4               	bsf	SetEEPROM@fail& (0+255),1,b
 33291                           
 33292                           ; BSR set to: 0
 33293  00653C  D000               	goto	l12825
 33294  00653E                     l12825:
 33295                           
 33296                           ;EEPROM.c: 187: }
 33297                           ;EEPROM.c: 188: }
 33298                           ;EEPROM.c: 189: if(burn & 0x00000004)
 33299  00653E  0101               	movlb	1	; () banked
 33300  006540  A588               	btfss	SetEEPROM@burn& (0+255),2,b
 33301  006542  D047               	goto	l960
 33302                           
 33303                           ; BSR set to: 1
 33304                           ;EEPROM.c: 190: {
 33305                           ;EEPROM.c: 191: for(i=0; i< 20; i++)
 33306  006544  0E00               	movlw	0
 33307  006546  0100               	movlb	0	; () banked
 33308  006548  6FBB               	movwf	SetEEPROM@i& (0+255),b
 33309  00654A                     l12829:
 33310                           
 33311                           ; BSR set to: 0
 33312  00654A  0E13               	movlw	19
 33313  00654C  0100               	movlb	0	; () banked
 33314  00654E  65BB               	cpfsgt	SetEEPROM@i& (0+255),b
 33315  006550  D001               	goto	l12833
 33316                           
 33317                           ; BSR set to: 0
 33318  006552  D03F               	goto	l960
 33319  006554                     l12833:
 33320                           
 33321                           ; BSR set to: 0
 33322                           ;EEPROM.c: 192: {
 33323                           ;EEPROM.c: 193: for(j=0; j < 2; j++)
 33324  006554  0E00               	movlw	0
 33325  006556  0100               	movlb	0	; () banked
 33326  006558  6FBC               	movwf	SetEEPROM@j& (0+255),b
 33327  00655A                     l12835:
 33328                           
 33329                           ; BSR set to: 0
 33330  00655A  0E01               	movlw	1
 33331  00655C  0100               	movlb	0	; () banked
 33332  00655E  65BC               	cpfsgt	SetEEPROM@j& (0+255),b
 33333  006560  D001               	goto	l12839
 33334                           
 33335                           ; BSR set to: 0
 33336  006562  D034               	goto	l12847
 33337  006564                     l12839:
 33338                           
 33339                           ; BSR set to: 0
 33340                           ;EEPROM.c: 194: {
 33341                           ;EEPROM.c: 195: temp = Temp.RemoteButtonNEC[i][j];
 33342  006564  0100               	movlb	0	; () banked
 33343  006566  51BB               	movf	SetEEPROM@i& (0+255),w,b
 33344  006568  0D02               	mullw	2
 33345  00656A  0E00               	movlw	low SetEEPROM@Temp
 33346  00656C  0100               	movlb	0	; () banked
 33347  00656E  6FB2               	movwf	??_SetEEPROM& (0+255),b
 33348  006570  0E01               	movlw	high SetEEPROM@Temp
 33349  006572  0100               	movlb	0	; () banked
 33350  006574  6FB3               	movwf	(??_SetEEPROM+1)& (0+255),b
 33351  006576  50F3               	movf	prodl,w,c
 33352  006578  0100               	movlb	0	; () banked
 33353  00657A  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33354  00657C  50F4               	movf	prodh,w,c
 33355  00657E  0100               	movlb	0	; () banked
 33356  006580  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33357  006582  0100               	movlb	0	; () banked
 33358  006584  51BC               	movf	SetEEPROM@j& (0+255),w,b
 33359  006586  0D01               	mullw	1
 33360  006588  50F3               	movf	prodl,w,c
 33361  00658A  0100               	movlb	0	; () banked
 33362  00658C  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33363  00658E  50F4               	movf	prodh,w,c
 33364  006590  0100               	movlb	0	; () banked
 33365  006592  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33366  006594  0E05               	movlw	5
 33367  006596  0100               	movlb	0	; () banked
 33368  006598  25B2               	addwf	??_SetEEPROM& (0+255),w,b
 33369  00659A  6ED9               	movwf	fsr2l,c
 33370  00659C  0E00               	movlw	0
 33371  00659E  0100               	movlb	0	; () banked
 33372  0065A0  21B3               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33373  0065A2  6EDA               	movwf	fsr2h,c
 33374  0065A4  50DF               	movf	indf2,w,c
 33375  0065A6  0100               	movlb	0	; () banked
 33376  0065A8  6FB8               	movwf	SetEEPROM@temp& (0+255),b
 33377                           
 33378                           ; BSR set to: 0
 33379                           ;EEPROM.c: 196: if(!SetMemoryChar(temp,Arrayspot++))
 33380  0065AA  0100               	movlb	0	; () banked
 33381  0065AC  2BB9               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33382  0065AE  05B9               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33383  0065B0  0100               	movlb	0	; () banked
 33384  0065B2  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33385  0065B4  0100               	movlb	0	; () banked
 33386  0065B6  51B8               	movf	SetEEPROM@temp& (0+255),w,b
 33387  0065B8  ECF4  F048         	call	_SetMemoryChar
 33388  0065BC  0900               	iorlw	0
 33389  0065BE  A4D8               	btfss	status,2,c
 33390  0065C0  D002               	goto	l965
 33391                           
 33392                           ;EEPROM.c: 197: {
 33393                           ;EEPROM.c: 199: fail |= 0x00000004;
 33394  0065C2  0100               	movlb	0	; () banked
 33395  0065C4  85B4               	bsf	SetEEPROM@fail& (0+255),2,b
 33396  0065C6                     l965:
 33397  0065C6  0100               	movlb	0	; () banked
 33398  0065C8  2BBC               	incf	SetEEPROM@j& (0+255),f,b
 33399  0065CA  D7C7               	goto	l12835
 33400  0065CC                     l12847:
 33401                           
 33402                           ; BSR set to: 0
 33403  0065CC  0100               	movlb	0	; () banked
 33404  0065CE  2BBB               	incf	SetEEPROM@i& (0+255),f,b
 33405  0065D0  D7BC               	goto	l12829
 33406  0065D2                     l960:
 33407                           
 33408                           ;EEPROM.c: 200: }
 33409                           ;EEPROM.c: 201: }
 33410                           ;EEPROM.c: 202: }
 33411                           ;EEPROM.c: 203: }
 33412                           ;EEPROM.c: 204: if(burn & 0x00000008)
 33413  0065D2  0101               	movlb	1	; () banked
 33414  0065D4  A788               	btfss	SetEEPROM@burn& (0+255),3,b
 33415  0065D6  D00D               	goto	l12855
 33416                           
 33417                           ; BSR set to: 1
 33418                           ;EEPROM.c: 205: {
 33419                           ;EEPROM.c: 206: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*20 + 5)))
 33420  0065D8  0E2D               	movlw	45
 33421  0065DA  0100               	movlb	0	; () banked
 33422  0065DC  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33423  0065DE  0101               	movlb	1	; () banked
 33424  0065E0  512D               	movf	(SetEEPROM@Temp+45)& (0+255),w,b
 33425  0065E2  ECF4  F048         	call	_SetMemoryChar
 33426  0065E6  0900               	iorlw	0
 33427  0065E8  A4D8               	btfss	status,2,c
 33428  0065EA  D003               	goto	l12855
 33429                           
 33430                           ;EEPROM.c: 207: {
 33431                           ;EEPROM.c: 209: fail |= 0x00000008;
 33432  0065EC  0100               	movlb	0	; () banked
 33433  0065EE  87B4               	bsf	SetEEPROM@fail& (0+255),3,b
 33434                           
 33435                           ; BSR set to: 0
 33436  0065F0  D000               	goto	l12855
 33437  0065F2                     l12855:
 33438                           
 33439                           ;EEPROM.c: 210: }
 33440                           ;EEPROM.c: 211: }
 33441                           ;EEPROM.c: 212: if(burn & 0x00000010)
 33442  0065F2  0101               	movlb	1	; () banked
 33443  0065F4  A988               	btfss	SetEEPROM@burn& (0+255),4,b
 33444  0065F6  D05E               	goto	l968
 33445                           
 33446                           ; BSR set to: 1
 33447                           ;EEPROM.c: 213: {
 33448                           ;EEPROM.c: 214: Arrayspot=(2*20 + 7);
 33449  0065F8  0E2F               	movlw	47
 33450  0065FA  0100               	movlb	0	; () banked
 33451  0065FC  6FB9               	movwf	SetEEPROM@Arrayspot& (0+255),b
 33452                           
 33453                           ;EEPROM.c: 215: for(i=0; i< 15; i++)
 33454  0065FE  0E00               	movlw	0
 33455  006600  0100               	movlb	0	; () banked
 33456  006602  6FBB               	movwf	SetEEPROM@i& (0+255),b
 33457  006604                     l12859:
 33458                           
 33459                           ; BSR set to: 0
 33460  006604  0E0E               	movlw	14
 33461  006606  0100               	movlb	0	; () banked
 33462  006608  65BB               	cpfsgt	SetEEPROM@i& (0+255),b
 33463  00660A  D001               	goto	l12863
 33464                           
 33465                           ; BSR set to: 0
 33466  00660C  D053               	goto	l968
 33467  00660E                     l12863:
 33468                           
 33469                           ; BSR set to: 0
 33470                           ;EEPROM.c: 216: {
 33471                           ;EEPROM.c: 217: for(j=0; j < 3; j++)
 33472  00660E  0E00               	movlw	0
 33473  006610  0100               	movlb	0	; () banked
 33474  006612  6FBC               	movwf	SetEEPROM@j& (0+255),b
 33475  006614                     l12865:
 33476                           
 33477                           ; BSR set to: 0
 33478  006614  0E02               	movlw	2
 33479  006616  0100               	movlb	0	; () banked
 33480  006618  65BC               	cpfsgt	SetEEPROM@j& (0+255),b
 33481  00661A  D001               	goto	l12869
 33482                           
 33483                           ; BSR set to: 0
 33484  00661C  D048               	goto	l12887
 33485  00661E                     l12869:
 33486                           
 33487                           ; BSR set to: 0
 33488                           ;EEPROM.c: 218: {
 33489                           ;EEPROM.c: 219: for(k=0; k < 2; k++)
 33490  00661E  0E00               	movlw	0
 33491  006620  0100               	movlb	0	; () banked
 33492  006622  6FBA               	movwf	SetEEPROM@k& (0+255),b
 33493  006624                     l12871:
 33494                           
 33495                           ; BSR set to: 0
 33496  006624  0E01               	movlw	1
 33497  006626  0100               	movlb	0	; () banked
 33498  006628  65BA               	cpfsgt	SetEEPROM@k& (0+255),b
 33499  00662A  D001               	goto	l12875
 33500                           
 33501                           ; BSR set to: 0
 33502  00662C  D03D               	goto	l12883
 33503  00662E                     l12875:
 33504                           
 33505                           ; BSR set to: 0
 33506                           ;EEPROM.c: 220: {
 33507                           ;EEPROM.c: 221: temp = Temp.RemoteButtonRF[i][j][k];
 33508  00662E  0100               	movlb	0	; () banked
 33509  006630  51BB               	movf	SetEEPROM@i& (0+255),w,b
 33510  006632  0D06               	mullw	6
 33511  006634  0E00               	movlw	low SetEEPROM@Temp
 33512  006636  0100               	movlb	0	; () banked
 33513  006638  6FB2               	movwf	??_SetEEPROM& (0+255),b
 33514  00663A  0E01               	movlw	high SetEEPROM@Temp
 33515  00663C  0100               	movlb	0	; () banked
 33516  00663E  6FB3               	movwf	(??_SetEEPROM+1)& (0+255),b
 33517  006640  50F3               	movf	prodl,w,c
 33518  006642  0100               	movlb	0	; () banked
 33519  006644  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33520  006646  50F4               	movf	prodh,w,c
 33521  006648  0100               	movlb	0	; () banked
 33522  00664A  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33523  00664C  0100               	movlb	0	; () banked
 33524  00664E  51BC               	movf	SetEEPROM@j& (0+255),w,b
 33525  006650  0D02               	mullw	2
 33526  006652  50F3               	movf	prodl,w,c
 33527  006654  0100               	movlb	0	; () banked
 33528  006656  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33529  006658  50F4               	movf	prodh,w,c
 33530  00665A  0100               	movlb	0	; () banked
 33531  00665C  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33532  00665E  0100               	movlb	0	; () banked
 33533  006660  51BA               	movf	SetEEPROM@k& (0+255),w,b
 33534  006662  0D01               	mullw	1
 33535  006664  50F3               	movf	prodl,w,c
 33536  006666  0100               	movlb	0	; () banked
 33537  006668  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33538  00666A  50F4               	movf	prodh,w,c
 33539  00666C  0100               	movlb	0	; () banked
 33540  00666E  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33541  006670  0E2E               	movlw	46
 33542  006672  0100               	movlb	0	; () banked
 33543  006674  25B2               	addwf	??_SetEEPROM& (0+255),w,b
 33544  006676  6ED9               	movwf	fsr2l,c
 33545  006678  0E00               	movlw	0
 33546  00667A  0100               	movlb	0	; () banked
 33547  00667C  21B3               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33548  00667E  6EDA               	movwf	fsr2h,c
 33549  006680  50DF               	movf	indf2,w,c
 33550  006682  0100               	movlb	0	; () banked
 33551  006684  6FB8               	movwf	SetEEPROM@temp& (0+255),b
 33552                           
 33553                           ; BSR set to: 0
 33554                           ;EEPROM.c: 222: if(!SetMemoryChar(temp,Arrayspot++))
 33555  006686  0100               	movlb	0	; () banked
 33556  006688  2BB9               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33557  00668A  05B9               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33558  00668C  0100               	movlb	0	; () banked
 33559  00668E  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33560  006690  0100               	movlb	0	; () banked
 33561  006692  51B8               	movf	SetEEPROM@temp& (0+255),w,b
 33562  006694  ECF4  F048         	call	_SetMemoryChar
 33563  006698  0900               	iorlw	0
 33564  00669A  A4D8               	btfss	status,2,c
 33565  00669C  D002               	goto	l975
 33566                           
 33567                           ;EEPROM.c: 223: {
 33568                           ;EEPROM.c: 225: fail |= 0x00000010;
 33569  00669E  0100               	movlb	0	; () banked
 33570  0066A0  89B4               	bsf	SetEEPROM@fail& (0+255),4,b
 33571  0066A2                     l975:
 33572  0066A2  0100               	movlb	0	; () banked
 33573  0066A4  2BBA               	incf	SetEEPROM@k& (0+255),f,b
 33574  0066A6  D7BE               	goto	l12871
 33575  0066A8                     l12883:
 33576                           
 33577                           ; BSR set to: 0
 33578  0066A8  0100               	movlb	0	; () banked
 33579  0066AA  2BBC               	incf	SetEEPROM@j& (0+255),f,b
 33580  0066AC  D7B3               	goto	l12865
 33581  0066AE                     l12887:
 33582                           
 33583                           ; BSR set to: 0
 33584  0066AE  0100               	movlb	0	; () banked
 33585  0066B0  2BBB               	incf	SetEEPROM@i& (0+255),f,b
 33586  0066B2  D7A8               	goto	l12859
 33587  0066B4                     l968:
 33588                           
 33589                           ;EEPROM.c: 226: }
 33590                           ;EEPROM.c: 227: }
 33591                           ;EEPROM.c: 228: }
 33592                           ;EEPROM.c: 229: }
 33593                           ;EEPROM.c: 230: }
 33594                           ;EEPROM.c: 231: return fail;
 33595  0066B4  C0B4  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 33596  0066B8  C0B5  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 33597  0066BC  C0B6  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 33598  0066C0  C0B7  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 33599  0066C4  0012               	return		;funcret
 33600  0066C6                     __end_of_SetEEPROM:
 33601                           	opt stack 0
 33602                           tblptru	equ	0xFF8
 33603                           tblptrh	equ	0xFF7
 33604                           tblptrl	equ	0xFF6
 33605                           tablat	equ	0xFF5
 33606                           prodh	equ	0xFF4
 33607                           prodl	equ	0xFF3
 33608                           intcon	equ	0xFF2
 33609                           intcon2	equ	0xFF1
 33610                           indf0	equ	0xFEF
 33611                           postinc0	equ	0xFEE
 33612                           plusw0	equ	0xFEB
 33613                           fsr0h	equ	0xFEA
 33614                           fsr0l	equ	0xFE9
 33615                           wreg	equ	0xFE8
 33616                           indf1	equ	0xFE7
 33617                           postdec1	equ	0xFE5
 33618                           fsr1h	equ	0xFE2
 33619                           fsr1l	equ	0xFE1
 33620                           indf2	equ	0xFDF
 33621                           postinc2	equ	0xFDE
 33622                           postdec2	equ	0xFDD
 33623                           plusw2	equ	0xFDB
 33624                           fsr2h	equ	0xFDA
 33625                           fsr2l	equ	0xFD9
 33626                           status	equ	0xFD8
 33627                           
 33628 ;; *************** function _SetMemoryLong *****************
 33629 ;; Defined at:
 33630 ;;		line 360 in file "EEPROM.c"
 33631 ;; Parameters:    Size  Location     Type
 33632 ;;  Data            4   65[BANK0 ] unsigned long 
 33633 ;;  AddressFirst    1   69[BANK0 ] unsigned char 
 33634 ;; Auto vars:     Size  Location     Type
 33635 ;;  Test            4   74[BANK0 ] unsigned long 
 33636 ;;  L               1   81[BANK0 ] unsigned char 
 33637 ;;  ML              1   80[BANK0 ] unsigned char 
 33638 ;;  MH              1   79[BANK0 ] unsigned char 
 33639 ;;  H               1   78[BANK0 ] unsigned char 
 33640 ;; Return value:  Size  Location     Type
 33641 ;;                  1    wreg      unsigned char 
 33642 ;; Registers used:
 33643 ;;		wreg, status,2, status,0, cstack
 33644 ;; Tracked objects:
 33645 ;;		On entry : 0/0
 33646 ;;		On exit  : 0/0
 33647 ;;		Unchanged: 0/0
 33648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33649 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33650 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33652 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33653 ;;Total ram usage:       17 bytes
 33654 ;; Hardware stack levels used:    1
 33655 ;; Hardware stack levels required when called:    8
 33656 ;; This function calls:
 33657 ;;		_GetMemoryLong
 33658 ;;		_WriteEEPROM_1Byte
 33659 ;; This function is called by:
 33660 ;;		_SetEEPROM
 33661 ;; This function uses a non-reentrant model
 33662 ;;
 33663                           
 33664                           	psect	text89
 33665  007AEA                     __ptext89:
 33666                           	opt stack 0
 33667  007AEA                     _SetMemoryLong:
 33668                           	opt stack 19
 33669                           
 33670                           ;EEPROM.c: 362: unsigned char H;
 33671                           ;EEPROM.c: 363: unsigned char MH;
 33672                           ;EEPROM.c: 364: unsigned char ML;
 33673                           ;EEPROM.c: 365: unsigned char L;
 33674                           ;EEPROM.c: 366: unsigned long Test;
 33675                           ;EEPROM.c: 368: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 33676                           
 33677                           ;incstack = 0
 33678  007AEA  0E00               	movlw	0
 33679  007AEC  0100               	movlb	0	; () banked
 33680  007AEE  15A1               	andwf	SetMemoryLong@Data& (0+255),w,b
 33681  007AF0  0100               	movlb	0	; () banked
 33682  007AF2  6FA6               	movwf	??_SetMemoryLong& (0+255),b
 33683  007AF4  0E00               	movlw	0
 33684  007AF6  0100               	movlb	0	; () banked
 33685  007AF8  15A2               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 33686  007AFA  0100               	movlb	0	; () banked
 33687  007AFC  6FA7               	movwf	(??_SetMemoryLong+1)& (0+255),b
 33688  007AFE  0E00               	movlw	0
 33689  007B00  0100               	movlb	0	; () banked
 33690  007B02  15A3               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 33691  007B04  0100               	movlb	0	; () banked
 33692  007B06  6FA8               	movwf	(??_SetMemoryLong+2)& (0+255),b
 33693  007B08  0EFF               	movlw	255
 33694  007B0A  0100               	movlb	0	; () banked
 33695  007B0C  15A4               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 33696  007B0E  0100               	movlb	0	; () banked
 33697  007B10  6FA9               	movwf	(??_SetMemoryLong+3)& (0+255),b
 33698  007B12  0E19               	movlw	25
 33699  007B14  D006               	goto	u14660
 33700  007B16                     u14665:
 33701  007B16  0100               	movlb	0	; () banked
 33702  007B18  90D8               	bcf	status,0,c
 33703  007B1A  33A9               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 33704  007B1C  33A8               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 33705  007B1E  33A7               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 33706  007B20  33A6               	rrcf	??_SetMemoryLong& (0+255),f,b
 33707  007B22                     u14660:
 33708  007B22  2EE8               	decfsz	wreg,f,c
 33709  007B24  D7F8               	goto	u14665
 33710  007B26  0100               	movlb	0	; () banked
 33711  007B28  51A6               	movf	??_SetMemoryLong& (0+255),w,b
 33712  007B2A  0100               	movlb	0	; () banked
 33713  007B2C  6FAE               	movwf	SetMemoryLong@H& (0+255),b
 33714                           
 33715                           ; BSR set to: 0
 33716                           ;EEPROM.c: 369: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 33717  007B2E  C0A3  F0AF         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 33718                           
 33719                           ; BSR set to: 0
 33720                           ;EEPROM.c: 370: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 33721  007B32  C0A2  F0B0         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 33722                           
 33723                           ; BSR set to: 0
 33724                           ;EEPROM.c: 371: L = (unsigned char) (Data & 0X000000FF);
 33725  007B36  C0A1  F0B1         	movff	SetMemoryLong@Data,SetMemoryLong@L
 33726                           
 33727                           ; BSR set to: 0
 33728                           ;EEPROM.c: 374: WriteEEPROM_1Byte(AddressFirst, H);
 33729  007B3A  C0A5  F07C         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 33730  007B3E  0100               	movlb	0	; () banked
 33731  007B40  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33732  007B42  C0AE  F07E         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 33733  007B46  EC48  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33734                           
 33735                           ;EEPROM.c: 375: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 33736  007B4A  0E01               	movlw	1
 33737  007B4C  0100               	movlb	0	; () banked
 33738  007B4E  25A5               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33739  007B50  0100               	movlb	0	; () banked
 33740  007B52  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33741  007B54  0100               	movlb	0	; () banked
 33742  007B56  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33743  007B58  0E00               	movlw	0
 33744  007B5A  237D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33745  007B5C  C0AF  F07E         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 33746  007B60  EC48  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33747                           
 33748                           ;EEPROM.c: 376: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 33749  007B64  0E02               	movlw	2
 33750  007B66  0100               	movlb	0	; () banked
 33751  007B68  25A5               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33752  007B6A  0100               	movlb	0	; () banked
 33753  007B6C  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33754  007B6E  0100               	movlb	0	; () banked
 33755  007B70  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33756  007B72  0E00               	movlw	0
 33757  007B74  237D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33758  007B76  C0B0  F07E         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 33759  007B7A  EC48  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33760                           
 33761                           ;EEPROM.c: 377: WriteEEPROM_1Byte((AddressFirst + 3), L);
 33762  007B7E  0E03               	movlw	3
 33763  007B80  0100               	movlb	0	; () banked
 33764  007B82  25A5               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33765  007B84  0100               	movlb	0	; () banked
 33766  007B86  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33767  007B88  0100               	movlb	0	; () banked
 33768  007B8A  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33769  007B8C  0E00               	movlw	0
 33770  007B8E  237D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33771  007B90  C0B1  F07E         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 33772  007B94  EC48  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33773                           
 33774                           ;EEPROM.c: 380: Test = GetMemoryLong(AddressFirst);
 33775  007B98  0100               	movlb	0	; () banked
 33776  007B9A  51A5               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 33777  007B9C  ECAE  F036         	call	_GetMemoryLong
 33778  007BA0  C080  F0AA         	movff	?_GetMemoryLong,SetMemoryLong@Test
 33779  007BA4  C081  F0AB         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 33780  007BA8  C082  F0AC         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 33781  007BAC  C083  F0AD         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 33782                           
 33783                           ;EEPROM.c: 382: if(Test == Data)
 33784  007BB0  0100               	movlb	0	; () banked
 33785  007BB2  51A1               	movf	SetMemoryLong@Data& (0+255),w,b
 33786  007BB4  0100               	movlb	0	; () banked
 33787  007BB6  19AA               	xorwf	SetMemoryLong@Test& (0+255),w,b
 33788  007BB8  E112               	bnz	l12541
 33789  007BBA  0100               	movlb	0	; () banked
 33790  007BBC  51A2               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 33791  007BBE  0100               	movlb	0	; () banked
 33792  007BC0  19AB               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 33793  007BC2  E10D               	bnz	l12541
 33794  007BC4  0100               	movlb	0	; () banked
 33795  007BC6  51A3               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 33796  007BC8  0100               	movlb	0	; () banked
 33797  007BCA  19AC               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 33798  007BCC  E108               	bnz	l12541
 33799  007BCE  0100               	movlb	0	; () banked
 33800  007BD0  51A4               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 33801  007BD2  0100               	movlb	0	; () banked
 33802  007BD4  19AD               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 33803  007BD6  A4D8               	btfss	status,2,c
 33804  007BD8  D002               	goto	l12541
 33805                           
 33806                           ; BSR set to: 0
 33807                           ;EEPROM.c: 383: {
 33808                           ;EEPROM.c: 384: return 1;
 33809  007BDA  0E01               	movlw	1
 33810                           
 33811                           ; BSR set to: 0
 33812  007BDC  0012               	return	
 33813  007BDE                     l12541:
 33814                           
 33815                           ; BSR set to: 0
 33816                           ;EEPROM.c: 385: }
 33817                           ;EEPROM.c: 386: return 0;
 33818  007BDE  0E00               	movlw	0
 33819  007BE0  0012               	return	
 33820                           
 33821                           ; BSR set to: 0
 33822                           
 33823                           ; BSR set to: 0
 33824  007BE2  0012               	return		;funcret
 33825  007BE4                     __end_of_SetMemoryLong:
 33826                           	opt stack 0
 33827                           tblptru	equ	0xFF8
 33828                           tblptrh	equ	0xFF7
 33829                           tblptrl	equ	0xFF6
 33830                           tablat	equ	0xFF5
 33831                           prodh	equ	0xFF4
 33832                           prodl	equ	0xFF3
 33833                           intcon	equ	0xFF2
 33834                           intcon2	equ	0xFF1
 33835                           indf0	equ	0xFEF
 33836                           postinc0	equ	0xFEE
 33837                           plusw0	equ	0xFEB
 33838                           fsr0h	equ	0xFEA
 33839                           fsr0l	equ	0xFE9
 33840                           wreg	equ	0xFE8
 33841                           indf1	equ	0xFE7
 33842                           postdec1	equ	0xFE5
 33843                           fsr1h	equ	0xFE2
 33844                           fsr1l	equ	0xFE1
 33845                           indf2	equ	0xFDF
 33846                           postinc2	equ	0xFDE
 33847                           postdec2	equ	0xFDD
 33848                           plusw2	equ	0xFDB
 33849                           fsr2h	equ	0xFDA
 33850                           fsr2l	equ	0xFD9
 33851                           status	equ	0xFD8
 33852                           
 33853 ;; *************** function _GetMemoryLong *****************
 33854 ;; Defined at:
 33855 ;;		line 337 in file "EEPROM.c"
 33856 ;; Parameters:    Size  Location     Type
 33857 ;;  AddressFirst    1    wreg     unsigned char 
 33858 ;; Auto vars:     Size  Location     Type
 33859 ;;  AddressFirst    1   64[BANK0 ] unsigned char 
 33860 ;;  temp            4   56[BANK0 ] unsigned long 
 33861 ;;  L               1   63[BANK0 ] unsigned char 
 33862 ;;  ML              1   62[BANK0 ] unsigned char 
 33863 ;;  MH              1   61[BANK0 ] unsigned char 
 33864 ;;  H               1   60[BANK0 ] unsigned char 
 33865 ;; Return value:  Size  Location     Type
 33866 ;;                  4   32[BANK0 ] unsigned long 
 33867 ;; Registers used:
 33868 ;;		wreg, status,2, status,0, cstack
 33869 ;; Tracked objects:
 33870 ;;		On entry : 0/0
 33871 ;;		On exit  : 0/0
 33872 ;;		Unchanged: 0/0
 33873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33875 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33876 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33877 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33878 ;;Total ram usage:       33 bytes
 33879 ;; Hardware stack levels used:    1
 33880 ;; Hardware stack levels required when called:    7
 33881 ;; This function calls:
 33882 ;;		_ReadEEPROM_1Byte
 33883 ;; This function is called by:
 33884 ;;		_GetEEPROM
 33885 ;;		_SetMemoryLong
 33886 ;; This function uses a non-reentrant model
 33887 ;;
 33888                           
 33889                           	psect	text90
 33890  006D5C                     __ptext90:
 33891                           	opt stack 0
 33892  006D5C                     _GetMemoryLong:
 33893                           	opt stack 19
 33894                           
 33895                           ; BSR set to: 0
 33896                           ;incstack = 0
 33897                           ;GetMemoryLong@AddressFirst stored from wreg
 33898  006D5C  0100               	movlb	0	; () banked
 33899  006D5E  6FA0               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 33900                           
 33901                           ; BSR set to: 0
 33902                           ;EEPROM.c: 339: unsigned char H;
 33903                           ;EEPROM.c: 340: unsigned char MH;
 33904                           ;EEPROM.c: 341: unsigned char ML;
 33905                           ;EEPROM.c: 342: unsigned char L;
 33906                           ;EEPROM.c: 343: unsigned long temp =0;
 33907  006D60  0E00               	movlw	0
 33908  006D62  0100               	movlb	0	; () banked
 33909  006D64  6F98               	movwf	GetMemoryLong@temp& (0+255),b
 33910  006D66  0E00               	movlw	0
 33911  006D68  6F99               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33912  006D6A  0E00               	movlw	0
 33913  006D6C  6F9A               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33914  006D6E  0E00               	movlw	0
 33915  006D70  6F9B               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33916                           
 33917                           ; BSR set to: 0
 33918                           ;EEPROM.c: 345: H = ReadEEPROM_1Byte(AddressFirst);
 33919  006D72  C0A0  F07C         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 33920  006D76  0100               	movlb	0	; () banked
 33921  006D78  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33922  006D7A  EC15  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33923  006D7E  0100               	movlb	0	; () banked
 33924  006D80  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33925  006D82  0100               	movlb	0	; () banked
 33926  006D84  6F9C               	movwf	GetMemoryLong@H& (0+255),b
 33927                           
 33928                           ; BSR set to: 0
 33929                           ;EEPROM.c: 346: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 33930  006D86  0E01               	movlw	1
 33931  006D88  0100               	movlb	0	; () banked
 33932  006D8A  25A0               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33933  006D8C  0100               	movlb	0	; () banked
 33934  006D8E  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33935  006D90  0100               	movlb	0	; () banked
 33936  006D92  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33937  006D94  0E00               	movlw	0
 33938  006D96  237D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33939  006D98  EC15  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33940  006D9C  0100               	movlb	0	; () banked
 33941  006D9E  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33942  006DA0  0100               	movlb	0	; () banked
 33943  006DA2  6F9D               	movwf	GetMemoryLong@MH& (0+255),b
 33944                           
 33945                           ; BSR set to: 0
 33946                           ;EEPROM.c: 347: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 33947  006DA4  0E02               	movlw	2
 33948  006DA6  0100               	movlb	0	; () banked
 33949  006DA8  25A0               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33950  006DAA  0100               	movlb	0	; () banked
 33951  006DAC  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33952  006DAE  0100               	movlb	0	; () banked
 33953  006DB0  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33954  006DB2  0E00               	movlw	0
 33955  006DB4  237D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33956  006DB6  EC15  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33957  006DBA  0100               	movlb	0	; () banked
 33958  006DBC  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33959  006DBE  0100               	movlb	0	; () banked
 33960  006DC0  6F9E               	movwf	GetMemoryLong@ML& (0+255),b
 33961                           
 33962                           ; BSR set to: 0
 33963                           ;EEPROM.c: 348: L = ReadEEPROM_1Byte(AddressFirst + 3);
 33964  006DC2  0E03               	movlw	3
 33965  006DC4  0100               	movlb	0	; () banked
 33966  006DC6  25A0               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33967  006DC8  0100               	movlb	0	; () banked
 33968  006DCA  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33969  006DCC  0100               	movlb	0	; () banked
 33970  006DCE  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33971  006DD0  0E00               	movlw	0
 33972  006DD2  237D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33973  006DD4  EC15  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33974  006DD8  0100               	movlb	0	; () banked
 33975  006DDA  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33976  006DDC  0100               	movlb	0	; () banked
 33977  006DDE  6F9F               	movwf	GetMemoryLong@L& (0+255),b
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;EEPROM.c: 350: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 33981                           ;EEPROM.c: 351: + ((unsigned long)ML << 8) + (unsigned long)L);
 33982  006DE0  C09E  F084         	movff	GetMemoryLong@ML,??_GetMemoryLong
 33983  006DE4  0100               	movlb	0	; () banked
 33984  006DE6  6B85               	clrf	(??_GetMemoryLong+1)& (0+255),b
 33985  006DE8  6B86               	clrf	(??_GetMemoryLong+2)& (0+255),b
 33986  006DEA  6B87               	clrf	(??_GetMemoryLong+3)& (0+255),b
 33987  006DEC  C086  F087         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 33988  006DF0  C085  F086         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 33989  006DF4  C084  F085         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 33990  006DF8  0100               	movlb	0	; () banked
 33991  006DFA  6B84               	clrf	??_GetMemoryLong& (0+255),b
 33992  006DFC  C09D  F088         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 33993  006E00  0100               	movlb	0	; () banked
 33994  006E02  6B89               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33995  006E04  6B8A               	clrf	(??_GetMemoryLong+6)& (0+255),b
 33996  006E06  6B8B               	clrf	(??_GetMemoryLong+7)& (0+255),b
 33997  006E08  C089  F08B         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 33998  006E0C  C088  F08A         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 33999  006E10  0100               	movlb	0	; () banked
 34000  006E12  6B89               	clrf	(??_GetMemoryLong+5)& (0+255),b
 34001  006E14  6B88               	clrf	(??_GetMemoryLong+4)& (0+255),b
 34002  006E16  C09C  F08C         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 34003  006E1A  0100               	movlb	0	; () banked
 34004  006E1C  6B8D               	clrf	(??_GetMemoryLong+9)& (0+255),b
 34005  006E1E  6B8E               	clrf	(??_GetMemoryLong+10)& (0+255),b
 34006  006E20  6B8F               	clrf	(??_GetMemoryLong+11)& (0+255),b
 34007  006E22  C08C  F08F         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 34008  006E26  0100               	movlb	0	; () banked
 34009  006E28  6B8E               	clrf	(??_GetMemoryLong+10)& (0+255),b
 34010  006E2A  6B8D               	clrf	(??_GetMemoryLong+9)& (0+255),b
 34011  006E2C  6B8C               	clrf	(??_GetMemoryLong+8)& (0+255),b
 34012  006E2E  0100               	movlb	0	; () banked
 34013  006E30  5188               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 34014  006E32  0100               	movlb	0	; () banked
 34015  006E34  258C               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 34016  006E36  0100               	movlb	0	; () banked
 34017  006E38  6F90               	movwf	(??_GetMemoryLong+12)& (0+255),b
 34018  006E3A  0100               	movlb	0	; () banked
 34019  006E3C  5189               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 34020  006E3E  0100               	movlb	0	; () banked
 34021  006E40  218D               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 34022  006E42  0100               	movlb	0	; () banked
 34023  006E44  6F91               	movwf	(??_GetMemoryLong+13)& (0+255),b
 34024  006E46  0100               	movlb	0	; () banked
 34025  006E48  518A               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 34026  006E4A  0100               	movlb	0	; () banked
 34027  006E4C  218E               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 34028  006E4E  0100               	movlb	0	; () banked
 34029  006E50  6F92               	movwf	(??_GetMemoryLong+14)& (0+255),b
 34030  006E52  0100               	movlb	0	; () banked
 34031  006E54  518B               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 34032  006E56  0100               	movlb	0	; () banked
 34033  006E58  218F               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 34034  006E5A  0100               	movlb	0	; () banked
 34035  006E5C  6F93               	movwf	(??_GetMemoryLong+15)& (0+255),b
 34036  006E5E  0100               	movlb	0	; () banked
 34037  006E60  5184               	movf	??_GetMemoryLong& (0+255),w,b
 34038  006E62  0100               	movlb	0	; () banked
 34039  006E64  2590               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 34040  006E66  0100               	movlb	0	; () banked
 34041  006E68  6F94               	movwf	(??_GetMemoryLong+16)& (0+255),b
 34042  006E6A  0100               	movlb	0	; () banked
 34043  006E6C  5185               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 34044  006E6E  0100               	movlb	0	; () banked
 34045  006E70  2191               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 34046  006E72  0100               	movlb	0	; () banked
 34047  006E74  6F95               	movwf	(??_GetMemoryLong+17)& (0+255),b
 34048  006E76  0100               	movlb	0	; () banked
 34049  006E78  5186               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 34050  006E7A  0100               	movlb	0	; () banked
 34051  006E7C  2192               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 34052  006E7E  0100               	movlb	0	; () banked
 34053  006E80  6F96               	movwf	(??_GetMemoryLong+18)& (0+255),b
 34054  006E82  0100               	movlb	0	; () banked
 34055  006E84  5187               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 34056  006E86  0100               	movlb	0	; () banked
 34057  006E88  2193               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 34058  006E8A  0100               	movlb	0	; () banked
 34059  006E8C  6F97               	movwf	(??_GetMemoryLong+19)& (0+255),b
 34060  006E8E  0100               	movlb	0	; () banked
 34061  006E90  519F               	movf	GetMemoryLong@L& (0+255),w,b
 34062  006E92  0100               	movlb	0	; () banked
 34063  006E94  2594               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 34064  006E96  0100               	movlb	0	; () banked
 34065  006E98  6F98               	movwf	GetMemoryLong@temp& (0+255),b
 34066  006E9A  0E00               	movlw	0
 34067  006E9C  0100               	movlb	0	; () banked
 34068  006E9E  2195               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 34069  006EA0  0100               	movlb	0	; () banked
 34070  006EA2  6F99               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 34071  006EA4  0E00               	movlw	0
 34072  006EA6  0100               	movlb	0	; () banked
 34073  006EA8  2196               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 34074  006EAA  0100               	movlb	0	; () banked
 34075  006EAC  6F9A               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 34076  006EAE  0E00               	movlw	0
 34077  006EB0  0100               	movlb	0	; () banked
 34078  006EB2  2197               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 34079  006EB4  0100               	movlb	0	; () banked
 34080  006EB6  6F9B               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 34081                           
 34082                           ; BSR set to: 0
 34083                           ;EEPROM.c: 352: return temp;
 34084  006EB8  C098  F080         	movff	GetMemoryLong@temp,?_GetMemoryLong
 34085  006EBC  C099  F081         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 34086  006EC0  C09A  F082         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 34087  006EC4  C09B  F083         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 34088  006EC8  0012               	return	
 34089                           
 34090                           ; BSR set to: 0
 34091                           
 34092                           ; BSR set to: 0
 34093  006ECA  0012               	return		;funcret
 34094  006ECC                     __end_of_GetMemoryLong:
 34095                           	opt stack 0
 34096                           tblptru	equ	0xFF8
 34097                           tblptrh	equ	0xFF7
 34098                           tblptrl	equ	0xFF6
 34099                           tablat	equ	0xFF5
 34100                           prodh	equ	0xFF4
 34101                           prodl	equ	0xFF3
 34102                           intcon	equ	0xFF2
 34103                           intcon2	equ	0xFF1
 34104                           indf0	equ	0xFEF
 34105                           postinc0	equ	0xFEE
 34106                           plusw0	equ	0xFEB
 34107                           fsr0h	equ	0xFEA
 34108                           fsr0l	equ	0xFE9
 34109                           wreg	equ	0xFE8
 34110                           indf1	equ	0xFE7
 34111                           postdec1	equ	0xFE5
 34112                           fsr1h	equ	0xFE2
 34113                           fsr1l	equ	0xFE1
 34114                           indf2	equ	0xFDF
 34115                           postinc2	equ	0xFDE
 34116                           postdec2	equ	0xFDD
 34117                           plusw2	equ	0xFDB
 34118                           fsr2h	equ	0xFDA
 34119                           fsr2l	equ	0xFD9
 34120                           status	equ	0xFD8
 34121                           
 34122 ;; *************** function _SetMemoryChar *****************
 34123 ;; Defined at:
 34124 ;;		line 454 in file "EEPROM.c"
 34125 ;; Parameters:    Size  Location     Type
 34126 ;;  Data            1    wreg     unsigned char 
 34127 ;;  AddressFirst    1   38[BANK0 ] unsigned char 
 34128 ;; Auto vars:     Size  Location     Type
 34129 ;;  Data            1   40[BANK0 ] unsigned char 
 34130 ;;  Test            1   39[BANK0 ] unsigned char 
 34131 ;; Return value:  Size  Location     Type
 34132 ;;                  1    wreg      unsigned char 
 34133 ;; Registers used:
 34134 ;;		wreg, status,2, status,0, cstack
 34135 ;; Tracked objects:
 34136 ;;		On entry : 0/0
 34137 ;;		On exit  : 0/0
 34138 ;;		Unchanged: 0/0
 34139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34140 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34143 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34144 ;;Total ram usage:        3 bytes
 34145 ;; Hardware stack levels used:    1
 34146 ;; Hardware stack levels required when called:    8
 34147 ;; This function calls:
 34148 ;;		_GetMemoryChar
 34149 ;;		_WriteEEPROM_1Byte
 34150 ;; This function is called by:
 34151 ;;		_SetEEPROM
 34152 ;; This function uses a non-reentrant model
 34153 ;;
 34154                           
 34155                           	psect	text91
 34156  0091E8                     __ptext91:
 34157                           	opt stack 0
 34158  0091E8                     _SetMemoryChar:
 34159                           	opt stack 19
 34160                           
 34161                           ; BSR set to: 0
 34162                           ;incstack = 0
 34163                           ;SetMemoryChar@Data stored from wreg
 34164  0091E8  0100               	movlb	0	; () banked
 34165  0091EA  6F88               	movwf	SetMemoryChar@Data& (0+255),b
 34166                           
 34167                           ; BSR set to: 0
 34168                           ;EEPROM.c: 456: unsigned char Test;
 34169                           ;EEPROM.c: 458: WriteEEPROM_1Byte(AddressFirst, Data);
 34170  0091EC  C086  F07C         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 34171  0091F0  0100               	movlb	0	; () banked
 34172  0091F2  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 34173  0091F4  C088  F07E         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 34174  0091F8  EC48  F046         	call	_WriteEEPROM_1Byte	;wreg free
 34175                           
 34176                           ;EEPROM.c: 461: Test = GetMemoryChar(AddressFirst);
 34177  0091FC  0100               	movlb	0	; () banked
 34178  0091FE  5186               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 34179  009200  ECBC  F049         	call	_GetMemoryChar
 34180  009204  0100               	movlb	0	; () banked
 34181  009206  5180               	movf	?_GetMemoryChar& (0+255),w,b
 34182  009208  0100               	movlb	0	; () banked
 34183  00920A  6F87               	movwf	SetMemoryChar@Test& (0+255),b
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;EEPROM.c: 463: if(Test == Data)
 34187  00920C  0100               	movlb	0	; () banked
 34188  00920E  5188               	movf	SetMemoryChar@Data& (0+255),w,b
 34189  009210  0100               	movlb	0	; () banked
 34190  009212  1987               	xorwf	SetMemoryChar@Test& (0+255),w,b
 34191  009214  A4D8               	btfss	status,2,c
 34192  009216  D002               	goto	l12513
 34193                           
 34194                           ; BSR set to: 0
 34195                           ;EEPROM.c: 464: {
 34196                           ;EEPROM.c: 465: return 1;
 34197  009218  0E01               	movlw	1
 34198                           
 34199                           ; BSR set to: 0
 34200  00921A  0012               	return	
 34201  00921C                     l12513:
 34202                           
 34203                           ; BSR set to: 0
 34204                           ;EEPROM.c: 466: }
 34205                           ;EEPROM.c: 467: return 0;
 34206  00921C  0E00               	movlw	0
 34207  00921E  0012               	return	
 34208                           
 34209                           ; BSR set to: 0
 34210                           
 34211                           ; BSR set to: 0
 34212  009220  0012               	return		;funcret
 34213  009222                     __end_of_SetMemoryChar:
 34214                           	opt stack 0
 34215                           tblptru	equ	0xFF8
 34216                           tblptrh	equ	0xFF7
 34217                           tblptrl	equ	0xFF6
 34218                           tablat	equ	0xFF5
 34219                           prodh	equ	0xFF4
 34220                           prodl	equ	0xFF3
 34221                           intcon	equ	0xFF2
 34222                           intcon2	equ	0xFF1
 34223                           indf0	equ	0xFEF
 34224                           postinc0	equ	0xFEE
 34225                           plusw0	equ	0xFEB
 34226                           fsr0h	equ	0xFEA
 34227                           fsr0l	equ	0xFE9
 34228                           wreg	equ	0xFE8
 34229                           indf1	equ	0xFE7
 34230                           postdec1	equ	0xFE5
 34231                           fsr1h	equ	0xFE2
 34232                           fsr1l	equ	0xFE1
 34233                           indf2	equ	0xFDF
 34234                           postinc2	equ	0xFDE
 34235                           postdec2	equ	0xFDD
 34236                           plusw2	equ	0xFDB
 34237                           fsr2h	equ	0xFDA
 34238                           fsr2l	equ	0xFD9
 34239                           status	equ	0xFD8
 34240                           
 34241 ;; *************** function _WriteEEPROM_1Byte *****************
 34242 ;; Defined at:
 34243 ;;		line 102 in file "EEPROM.c"
 34244 ;; Parameters:    Size  Location     Type
 34245 ;;  address         2   28[BANK0 ] unsigned int 
 34246 ;;  data            1   30[BANK0 ] unsigned char 
 34247 ;; Auto vars:     Size  Location     Type
 34248 ;;  PEIEstatus      1   32[BANK0 ] unsigned char 
 34249 ;;  GIEstatus       1   31[BANK0 ] unsigned char 
 34250 ;; Return value:  Size  Location     Type
 34251 ;;		None               void
 34252 ;; Registers used:
 34253 ;;		wreg, status,2, status,0, cstack
 34254 ;; Tracked objects:
 34255 ;;		On entry : 0/0
 34256 ;;		On exit  : 0/0
 34257 ;;		Unchanged: 0/0
 34258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34259 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34262 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34263 ;;Total ram usage:        5 bytes
 34264 ;; Hardware stack levels used:    1
 34265 ;; Hardware stack levels required when called:    7
 34266 ;; This function calls:
 34267 ;;		_EEPROM_UNLOCK
 34268 ;; This function is called by:
 34269 ;;		_SetMemoryLong
 34270 ;;		_SetMemoryChar
 34271 ;;		_SetMemoryInt
 34272 ;; This function uses a non-reentrant model
 34273 ;;
 34274                           
 34275                           	psect	text92
 34276  008C90                     __ptext92:
 34277                           	opt stack 0
 34278  008C90                     _WriteEEPROM_1Byte:
 34279                           	opt stack 19
 34280                           
 34281                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 34282                           
 34283                           ; BSR set to: 0
 34284                           ;incstack = 0
 34285  008C90  0E00               	movlw	0
 34286  008C92  BEF2               	btfsc	intcon,7,c	;volatile
 34287  008C94  0E01               	movlw	1
 34288  008C96  0100               	movlb	0	; () banked
 34289  008C98  6F7F               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 34290                           
 34291                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 34292  008C9A  0E00               	movlw	0
 34293  008C9C  BCF2               	btfsc	intcon,6,c	;volatile
 34294  008C9E  0E01               	movlw	1
 34295  008CA0  0100               	movlb	0	; () banked
 34296  008CA2  6F80               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34297                           
 34298                           ; BSR set to: 0
 34299                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 34300  008CA4  9EF2               	bcf	intcon,7,c	;volatile
 34301                           
 34302                           ; BSR set to: 0
 34303                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 34304  008CA6  9CF2               	bcf	intcon,6,c	;volatile
 34305                           
 34306                           ; BSR set to: 0
 34307                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34308  008CA8  0100               	movlb	0	; () banked
 34309  008CAA  517D               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 34310  008CAC  0B03               	andlw	3
 34311  008CAE  6EAA               	movwf	4010,c	;volatile
 34312                           
 34313                           ; BSR set to: 0
 34314                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 34315  008CB0  C07C  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 34316                           
 34317                           ; BSR set to: 0
 34318                           ;EEPROM.c: 110: EEDATA = data;
 34319  008CB4  C07E  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 34320                           
 34321                           ; BSR set to: 0
 34322                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 34323  008CB8  9EA6               	bcf	4006,7,c	;volatile
 34324                           
 34325                           ; BSR set to: 0
 34326                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 34327  008CBA  9CA6               	bcf	4006,6,c	;volatile
 34328                           
 34329                           ; BSR set to: 0
 34330                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 34331  008CBC  84A6               	bsf	4006,2,c	;volatile
 34332                           
 34333                           ; BSR set to: 0
 34334                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 34335  008CBE  9EF2               	bcf	intcon,7,c	;volatile
 34336                           
 34337                           ; BSR set to: 0
 34338                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 34339  008CC0  EC35  F04A         	call	_EEPROM_UNLOCK	;wreg free
 34340                           
 34341                           ;EEPROM.c: 116: EECON1bits.WR =1;
 34342  008CC4  82A6               	bsf	4006,1,c	;volatile
 34343                           
 34344                           ;EEPROM.c: 117: while(EECON1bits.WR);
 34345  008CC6  D000               	goto	l935
 34346  008CC8                     l935:
 34347  008CC8  B2A6               	btfsc	4006,1,c	;volatile
 34348  008CCA  D7FE               	goto	l935
 34349                           
 34350                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 34351  008CCC  94A6               	bcf	4006,2,c	;volatile
 34352                           
 34353                           ;EEPROM.c: 119: if(GIEstatus)
 34354  008CCE  0100               	movlb	0	; () banked
 34355  008CD0  517F               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 34356  008CD2  0100               	movlb	0	; () banked
 34357  008CD4  B4D8               	btfsc	status,2,c
 34358  008CD6  D002               	goto	l12435
 34359                           
 34360                           ; BSR set to: 0
 34361                           ;EEPROM.c: 120: {
 34362                           ;EEPROM.c: 121: INTCONbits.GIE =1;
 34363  008CD8  8EF2               	bsf	intcon,7,c	;volatile
 34364  008CDA  D000               	goto	l12435
 34365  008CDC                     l12435:
 34366                           
 34367                           ; BSR set to: 0
 34368                           ;EEPROM.c: 122: }
 34369                           ;EEPROM.c: 123: if(PEIEstatus)
 34370  008CDC  0100               	movlb	0	; () banked
 34371  008CDE  5180               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34372  008CE0  0100               	movlb	0	; () banked
 34373  008CE2  B4D8               	btfsc	status,2,c
 34374  008CE4  0012               	return	
 34375                           
 34376                           ; BSR set to: 0
 34377                           ;EEPROM.c: 124: {
 34378                           ;EEPROM.c: 125: PEIEstatus = INTCONbits.PEIE;
 34379  008CE6  0E00               	movlw	0
 34380  008CE8  BCF2               	btfsc	intcon,6,c	;volatile
 34381  008CEA  0E01               	movlw	1
 34382  008CEC  0100               	movlb	0	; () banked
 34383  008CEE  6F80               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34384  008CF0  0012               	return	
 34385                           
 34386                           ; BSR set to: 0
 34387                           
 34388                           ; BSR set to: 0
 34389  008CF2  0012               	return		;funcret
 34390  008CF4                     __end_of_WriteEEPROM_1Byte:
 34391                           	opt stack 0
 34392                           tblptru	equ	0xFF8
 34393                           tblptrh	equ	0xFF7
 34394                           tblptrl	equ	0xFF6
 34395                           tablat	equ	0xFF5
 34396                           prodh	equ	0xFF4
 34397                           prodl	equ	0xFF3
 34398                           intcon	equ	0xFF2
 34399                           intcon2	equ	0xFF1
 34400                           indf0	equ	0xFEF
 34401                           postinc0	equ	0xFEE
 34402                           plusw0	equ	0xFEB
 34403                           fsr0h	equ	0xFEA
 34404                           fsr0l	equ	0xFE9
 34405                           wreg	equ	0xFE8
 34406                           indf1	equ	0xFE7
 34407                           postdec1	equ	0xFE5
 34408                           fsr1h	equ	0xFE2
 34409                           fsr1l	equ	0xFE1
 34410                           indf2	equ	0xFDF
 34411                           postinc2	equ	0xFDE
 34412                           postdec2	equ	0xFDD
 34413                           plusw2	equ	0xFDB
 34414                           fsr2h	equ	0xFDA
 34415                           fsr2l	equ	0xFD9
 34416                           status	equ	0xFD8
 34417                           
 34418 ;; *************** function _EEPROM_UNLOCK *****************
 34419 ;; Defined at:
 34420 ;;		line 87 in file "EEPROM.c"
 34421 ;; Parameters:    Size  Location     Type
 34422 ;;		None
 34423 ;; Auto vars:     Size  Location     Type
 34424 ;;		None
 34425 ;; Return value:  Size  Location     Type
 34426 ;;		None               void
 34427 ;; Registers used:
 34428 ;;		wreg, status,2
 34429 ;; Tracked objects:
 34430 ;;		On entry : 0/0
 34431 ;;		On exit  : 0/0
 34432 ;;		Unchanged: 0/0
 34433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34438 ;;Total ram usage:        0 bytes
 34439 ;; Hardware stack levels used:    1
 34440 ;; Hardware stack levels required when called:    6
 34441 ;; This function calls:
 34442 ;;		Nothing
 34443 ;; This function is called by:
 34444 ;;		_WriteEEPROM_1Byte
 34445 ;; This function uses a non-reentrant model
 34446 ;;
 34447                           
 34448                           	psect	text93
 34449  00946A                     __ptext93:
 34450                           	opt stack 0
 34451  00946A                     _EEPROM_UNLOCK:
 34452                           	opt stack 19
 34453                           
 34454                           ;EEPROM.c: 89: EECON2 = 0x55;
 34455                           
 34456                           ; BSR set to: 0
 34457                           ;incstack = 0
 34458  00946A  0E55               	movlw	85
 34459  00946C  6EA7               	movwf	4007,c	;volatile
 34460                           
 34461                           ;EEPROM.c: 90: EECON2 = 0xAA;
 34462  00946E  0EAA               	movlw	170
 34463  009470  6EA7               	movwf	4007,c	;volatile
 34464                           
 34465                           ;EEPROM.c: 91: EECON1bits.WR =1;
 34466  009472  82A6               	bsf	4006,1,c	;volatile
 34467                           
 34468                           ;EEPROM.c: 92: while(EECON1bits.WR);
 34469  009474  D000               	goto	l929
 34470  009476                     l929:
 34471  009476  B2A6               	btfsc	4006,1,c	;volatile
 34472  009478  D7FE               	goto	l929
 34473                           
 34474                           ;EEPROM.c: 93: __nop();
 34475  00947A  F000               	nop	
 34476                           
 34477                           ;EEPROM.c: 94: __nop();
 34478  00947C  F000               	nop	
 34479  00947E  0012               	return		;funcret
 34480  009480                     __end_of_EEPROM_UNLOCK:
 34481                           	opt stack 0
 34482                           tblptru	equ	0xFF8
 34483                           tblptrh	equ	0xFF7
 34484                           tblptrl	equ	0xFF6
 34485                           tablat	equ	0xFF5
 34486                           prodh	equ	0xFF4
 34487                           prodl	equ	0xFF3
 34488                           intcon	equ	0xFF2
 34489                           intcon2	equ	0xFF1
 34490                           indf0	equ	0xFEF
 34491                           postinc0	equ	0xFEE
 34492                           plusw0	equ	0xFEB
 34493                           fsr0h	equ	0xFEA
 34494                           fsr0l	equ	0xFE9
 34495                           wreg	equ	0xFE8
 34496                           indf1	equ	0xFE7
 34497                           postdec1	equ	0xFE5
 34498                           fsr1h	equ	0xFE2
 34499                           fsr1l	equ	0xFE1
 34500                           indf2	equ	0xFDF
 34501                           postinc2	equ	0xFDE
 34502                           postdec2	equ	0xFDD
 34503                           plusw2	equ	0xFDB
 34504                           fsr2h	equ	0xFDA
 34505                           fsr2l	equ	0xFD9
 34506                           status	equ	0xFD8
 34507                           
 34508 ;; *************** function _GetMemoryChar *****************
 34509 ;; Defined at:
 34510 ;;		line 440 in file "EEPROM.c"
 34511 ;; Parameters:    Size  Location     Type
 34512 ;;  AddressFirst    1    wreg     unsigned char 
 34513 ;; Auto vars:     Size  Location     Type
 34514 ;;  AddressFirst    1   36[BANK0 ] unsigned char 
 34515 ;;  H               1   37[BANK0 ] unsigned char 
 34516 ;; Return value:  Size  Location     Type
 34517 ;;                  4   32[BANK0 ] unsigned long 
 34518 ;; Registers used:
 34519 ;;		wreg, status,2, status,0, cstack
 34520 ;; Tracked objects:
 34521 ;;		On entry : 0/0
 34522 ;;		On exit  : 0/0
 34523 ;;		Unchanged: 0/0
 34524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34529 ;;Total ram usage:        6 bytes
 34530 ;; Hardware stack levels used:    1
 34531 ;; Hardware stack levels required when called:    7
 34532 ;; This function calls:
 34533 ;;		_ReadEEPROM_1Byte
 34534 ;; This function is called by:
 34535 ;;		_GetEEPROM
 34536 ;;		_SetMemoryChar
 34537 ;; This function uses a non-reentrant model
 34538 ;;
 34539                           
 34540                           	psect	text94
 34541  009378                     __ptext94:
 34542                           	opt stack 0
 34543  009378                     _GetMemoryChar:
 34544                           	opt stack 19
 34545                           
 34546                           ;incstack = 0
 34547                           ;GetMemoryChar@AddressFirst stored from wreg
 34548  009378  0100               	movlb	0	; () banked
 34549  00937A  6F84               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 34550                           
 34551                           ; BSR set to: 0
 34552                           ;EEPROM.c: 442: unsigned char H;
 34553                           ;EEPROM.c: 444: H = ReadEEPROM_1Byte(AddressFirst);
 34554  00937C  C084  F07C         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 34555  009380  0100               	movlb	0	; () banked
 34556  009382  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 34557  009384  EC15  F046         	call	_ReadEEPROM_1Byte	;wreg free
 34558  009388  0100               	movlb	0	; () banked
 34559  00938A  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 34560  00938C  0100               	movlb	0	; () banked
 34561  00938E  6F85               	movwf	GetMemoryChar@H& (0+255),b
 34562                           
 34563                           ; BSR set to: 0
 34564                           ;EEPROM.c: 446: return H;
 34565  009390  0100               	movlb	0	; () banked
 34566  009392  5185               	movf	GetMemoryChar@H& (0+255),w,b
 34567  009394  0100               	movlb	0	; () banked
 34568  009396  6F80               	movwf	?_GetMemoryChar& (0+255),b
 34569  009398  6B81               	clrf	(?_GetMemoryChar+1)& (0+255),b
 34570  00939A  6B82               	clrf	(?_GetMemoryChar+2)& (0+255),b
 34571  00939C  6B83               	clrf	(?_GetMemoryChar+3)& (0+255),b
 34572  00939E  0012               	return	
 34573                           
 34574                           ; BSR set to: 0
 34575                           
 34576                           ; BSR set to: 0
 34577  0093A0  0012               	return		;funcret
 34578  0093A2                     __end_of_GetMemoryChar:
 34579                           	opt stack 0
 34580                           tblptru	equ	0xFF8
 34581                           tblptrh	equ	0xFF7
 34582                           tblptrl	equ	0xFF6
 34583                           tablat	equ	0xFF5
 34584                           prodh	equ	0xFF4
 34585                           prodl	equ	0xFF3
 34586                           intcon	equ	0xFF2
 34587                           intcon2	equ	0xFF1
 34588                           indf0	equ	0xFEF
 34589                           postinc0	equ	0xFEE
 34590                           plusw0	equ	0xFEB
 34591                           fsr0h	equ	0xFEA
 34592                           fsr0l	equ	0xFE9
 34593                           wreg	equ	0xFE8
 34594                           indf1	equ	0xFE7
 34595                           postdec1	equ	0xFE5
 34596                           fsr1h	equ	0xFE2
 34597                           fsr1l	equ	0xFE1
 34598                           indf2	equ	0xFDF
 34599                           postinc2	equ	0xFDE
 34600                           postdec2	equ	0xFDD
 34601                           plusw2	equ	0xFDB
 34602                           fsr2h	equ	0xFDA
 34603                           fsr2l	equ	0xFD9
 34604                           status	equ	0xFD8
 34605                           
 34606 ;; *************** function _ReadEEPROM_1Byte *****************
 34607 ;; Defined at:
 34608 ;;		line 55 in file "EEPROM.c"
 34609 ;; Parameters:    Size  Location     Type
 34610 ;;  address         2   28[BANK0 ] unsigned int 
 34611 ;; Auto vars:     Size  Location     Type
 34612 ;;  PEIEstatus      1   31[BANK0 ] unsigned char 
 34613 ;;  GIEstatus       1   30[BANK0 ] unsigned char 
 34614 ;; Return value:  Size  Location     Type
 34615 ;;                  2   28[BANK0 ] unsigned int 
 34616 ;; Registers used:
 34617 ;;		wreg, status,2, status,0
 34618 ;; Tracked objects:
 34619 ;;		On entry : 0/0
 34620 ;;		On exit  : 0/0
 34621 ;;		Unchanged: 0/0
 34622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34623 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34626 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34627 ;;Total ram usage:        4 bytes
 34628 ;; Hardware stack levels used:    1
 34629 ;; Hardware stack levels required when called:    6
 34630 ;; This function calls:
 34631 ;;		Nothing
 34632 ;; This function is called by:
 34633 ;;		_GetMemoryLong
 34634 ;;		_GetMemoryChar
 34635 ;;		_GetMemoryInt
 34636 ;; This function uses a non-reentrant model
 34637 ;;
 34638                           
 34639                           	psect	text95
 34640  008C2A                     __ptext95:
 34641                           	opt stack 0
 34642  008C2A                     _ReadEEPROM_1Byte:
 34643                           	opt stack 19
 34644                           
 34645                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 34646                           
 34647                           ; BSR set to: 0
 34648                           ;incstack = 0
 34649  008C2A  0E00               	movlw	0
 34650  008C2C  BEF2               	btfsc	intcon,7,c	;volatile
 34651  008C2E  0E01               	movlw	1
 34652  008C30  0100               	movlb	0	; () banked
 34653  008C32  6F7E               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 34654                           
 34655                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 34656  008C34  0E00               	movlw	0
 34657  008C36  BCF2               	btfsc	intcon,6,c	;volatile
 34658  008C38  0E01               	movlw	1
 34659  008C3A  0100               	movlb	0	; () banked
 34660  008C3C  6F7F               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34661                           
 34662                           ; BSR set to: 0
 34663                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 34664  008C3E  9EF2               	bcf	intcon,7,c	;volatile
 34665                           
 34666                           ; BSR set to: 0
 34667                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 34668  008C40  9CF2               	bcf	intcon,6,c	;volatile
 34669                           
 34670                           ; BSR set to: 0
 34671                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 34672  008C42  9EA6               	bcf	4006,7,c	;volatile
 34673                           
 34674                           ; BSR set to: 0
 34675                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 34676  008C44  9CA6               	bcf	4006,6,c	;volatile
 34677                           
 34678                           ; BSR set to: 0
 34679                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34680  008C46  0100               	movlb	0	; () banked
 34681  008C48  517D               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 34682  008C4A  0B03               	andlw	3
 34683  008C4C  6EAA               	movwf	4010,c	;volatile
 34684                           
 34685                           ; BSR set to: 0
 34686                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 34687  008C4E  C07C  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 34688                           
 34689                           ; BSR set to: 0
 34690                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 34691  008C52  9EF2               	bcf	intcon,7,c	;volatile
 34692                           
 34693                           ; BSR set to: 0
 34694                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 34695  008C54  80A6               	bsf	4006,0,c	;volatile
 34696                           
 34697                           ;EEPROM.c: 67: while(EECON1bits.RD);
 34698  008C56  D000               	goto	l921
 34699  008C58                     l921:
 34700  008C58  B0A6               	btfsc	4006,0,c	;volatile
 34701  008C5A  D7FE               	goto	l921
 34702                           
 34703                           ;EEPROM.c: 68: __nop();
 34704  008C5C  F000               	nop	
 34705                           
 34706                           ;EEPROM.c: 69: __nop();
 34707  008C5E  F000               	nop	
 34708                           
 34709                           ;EEPROM.c: 70: if(GIEstatus)
 34710  008C60  0100               	movlb	0	; () banked
 34711  008C62  517E               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 34712  008C64  0100               	movlb	0	; () banked
 34713  008C66  B4D8               	btfsc	status,2,c
 34714  008C68  D002               	goto	l12395
 34715                           
 34716                           ; BSR set to: 0
 34717                           ;EEPROM.c: 71: {
 34718                           ;EEPROM.c: 72: INTCONbits.GIE =1;
 34719  008C6A  8EF2               	bsf	intcon,7,c	;volatile
 34720  008C6C  D000               	goto	l12395
 34721  008C6E                     l12395:
 34722                           
 34723                           ; BSR set to: 0
 34724                           ;EEPROM.c: 73: }
 34725                           ;EEPROM.c: 74: if(PEIEstatus)
 34726  008C6E  0100               	movlb	0	; () banked
 34727  008C70  517F               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34728  008C72  0100               	movlb	0	; () banked
 34729  008C74  B4D8               	btfsc	status,2,c
 34730  008C76  D006               	goto	l12399
 34731                           
 34732                           ; BSR set to: 0
 34733                           ;EEPROM.c: 75: {
 34734                           ;EEPROM.c: 76: PEIEstatus = INTCONbits.PEIE;
 34735  008C78  0E00               	movlw	0
 34736  008C7A  BCF2               	btfsc	intcon,6,c	;volatile
 34737  008C7C  0E01               	movlw	1
 34738  008C7E  0100               	movlb	0	; () banked
 34739  008C80  6F7F               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34740  008C82  D000               	goto	l12399
 34741  008C84                     l12399:
 34742                           
 34743                           ; BSR set to: 0
 34744                           ;EEPROM.c: 77: }
 34745                           ;EEPROM.c: 78: return (EEDATA);
 34746  008C84  CFA8 F07C          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 34747  008C88  0100               	movlb	0	; () banked
 34748  008C8A  6B7D               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 34749  008C8C  0012               	return	
 34750                           
 34751                           ; BSR set to: 0
 34752                           
 34753                           ; BSR set to: 0
 34754  008C8E  0012               	return		;funcret
 34755  008C90                     __end_of_ReadEEPROM_1Byte:
 34756                           	opt stack 0
 34757                           tblptru	equ	0xFF8
 34758                           tblptrh	equ	0xFF7
 34759                           tblptrl	equ	0xFF6
 34760                           tablat	equ	0xFF5
 34761                           prodh	equ	0xFF4
 34762                           prodl	equ	0xFF3
 34763                           intcon	equ	0xFF2
 34764                           intcon2	equ	0xFF1
 34765                           indf0	equ	0xFEF
 34766                           postinc0	equ	0xFEE
 34767                           plusw0	equ	0xFEB
 34768                           fsr0h	equ	0xFEA
 34769                           fsr0l	equ	0xFE9
 34770                           wreg	equ	0xFE8
 34771                           indf1	equ	0xFE7
 34772                           postdec1	equ	0xFE5
 34773                           fsr1h	equ	0xFE2
 34774                           fsr1l	equ	0xFE1
 34775                           indf2	equ	0xFDF
 34776                           postinc2	equ	0xFDE
 34777                           postdec2	equ	0xFDD
 34778                           plusw2	equ	0xFDB
 34779                           fsr2h	equ	0xFDA
 34780                           fsr2l	equ	0xFD9
 34781                           status	equ	0xFD8
 34782                           
 34783 ;; *************** function _InitADC *****************
 34784 ;; Defined at:
 34785 ;;		line 135 in file "ADC.c"
 34786 ;; Parameters:    Size  Location     Type
 34787 ;;		None
 34788 ;; Auto vars:     Size  Location     Type
 34789 ;;		None
 34790 ;; Return value:  Size  Location     Type
 34791 ;;		None               void
 34792 ;; Registers used:
 34793 ;;		wreg, status,2, cstack
 34794 ;; Tracked objects:
 34795 ;;		On entry : 0/0
 34796 ;;		On exit  : 0/0
 34797 ;;		Unchanged: 0/0
 34798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34803 ;;Total ram usage:        0 bytes
 34804 ;; Hardware stack levels used:    1
 34805 ;; Hardware stack levels required when called:    7
 34806 ;; This function calls:
 34807 ;;		_ResetADC
 34808 ;; This function is called by:
 34809 ;;		_Init_System
 34810 ;; This function uses a non-reentrant model
 34811 ;;
 34812                           
 34813                           	psect	text96
 34814  009480                     __ptext96:
 34815                           	opt stack 0
 34816  009480                     _InitADC:
 34817                           	opt stack 22
 34818                           
 34819                           ;ADC.c: 137: ResetADC();
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;incstack = 0
 34823  009480  ECB5  F04A         	call	_ResetADC	;wreg free
 34824                           
 34825                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 34826  009484  8EC0               	bsf	4032,7,c	;volatile
 34827                           
 34828                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 34829  009486  86C0               	bsf	4032,3,c	;volatile
 34830  009488  88C0               	bsf	4032,4,c	;volatile
 34831  00948A  8AC0               	bsf	4032,5,c	;volatile
 34832                           
 34833                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 34834  00948C  50C0               	movf	4032,w,c	;volatile
 34835  00948E  0BF8               	andlw	-8
 34836  009490  0904               	iorlw	4
 34837  009492  6EC0               	movwf	4032,c	;volatile
 34838  009494  0012               	return		;funcret
 34839  009496                     __end_of_InitADC:
 34840                           	opt stack 0
 34841                           tblptru	equ	0xFF8
 34842                           tblptrh	equ	0xFF7
 34843                           tblptrl	equ	0xFF6
 34844                           tablat	equ	0xFF5
 34845                           prodh	equ	0xFF4
 34846                           prodl	equ	0xFF3
 34847                           intcon	equ	0xFF2
 34848                           intcon2	equ	0xFF1
 34849                           indf0	equ	0xFEF
 34850                           postinc0	equ	0xFEE
 34851                           plusw0	equ	0xFEB
 34852                           fsr0h	equ	0xFEA
 34853                           fsr0l	equ	0xFE9
 34854                           wreg	equ	0xFE8
 34855                           indf1	equ	0xFE7
 34856                           postdec1	equ	0xFE5
 34857                           fsr1h	equ	0xFE2
 34858                           fsr1l	equ	0xFE1
 34859                           indf2	equ	0xFDF
 34860                           postinc2	equ	0xFDE
 34861                           postdec2	equ	0xFDD
 34862                           plusw2	equ	0xFDB
 34863                           fsr2h	equ	0xFDA
 34864                           fsr2l	equ	0xFD9
 34865                           status	equ	0xFD8
 34866                           
 34867 ;; *************** function _ResetADC *****************
 34868 ;; Defined at:
 34869 ;;		line 123 in file "ADC.c"
 34870 ;; Parameters:    Size  Location     Type
 34871 ;;		None
 34872 ;; Auto vars:     Size  Location     Type
 34873 ;;		None
 34874 ;; Return value:  Size  Location     Type
 34875 ;;		None               void
 34876 ;; Registers used:
 34877 ;;		wreg, status,2
 34878 ;; Tracked objects:
 34879 ;;		On entry : 0/0
 34880 ;;		On exit  : 0/0
 34881 ;;		Unchanged: 0/0
 34882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34887 ;;Total ram usage:        0 bytes
 34888 ;; Hardware stack levels used:    1
 34889 ;; Hardware stack levels required when called:    6
 34890 ;; This function calls:
 34891 ;;		Nothing
 34892 ;; This function is called by:
 34893 ;;		_InitADC
 34894 ;; This function uses a non-reentrant model
 34895 ;;
 34896                           
 34897                           	psect	text97
 34898  00956A                     __ptext97:
 34899                           	opt stack 0
 34900  00956A                     _ResetADC:
 34901                           	opt stack 22
 34902                           
 34903                           ;ADC.c: 125: ADCON0 =0;
 34904                           
 34905                           ;incstack = 0
 34906  00956A  0E00               	movlw	0
 34907  00956C  6EC2               	movwf	4034,c	;volatile
 34908                           
 34909                           ;ADC.c: 126: ADCON1 =0;
 34910  00956E  0E00               	movlw	0
 34911  009570  6EC1               	movwf	4033,c	;volatile
 34912                           
 34913                           ;ADC.c: 127: ADCON2 =0;
 34914  009572  0E00               	movlw	0
 34915  009574  6EC0               	movwf	4032,c	;volatile
 34916  009576  0012               	return		;funcret
 34917  009578                     __end_of_ResetADC:
 34918                           	opt stack 0
 34919                           tblptru	equ	0xFF8
 34920                           tblptrh	equ	0xFF7
 34921                           tblptrl	equ	0xFF6
 34922                           tablat	equ	0xFF5
 34923                           prodh	equ	0xFF4
 34924                           prodl	equ	0xFF3
 34925                           intcon	equ	0xFF2
 34926                           intcon2	equ	0xFF1
 34927                           indf0	equ	0xFEF
 34928                           postinc0	equ	0xFEE
 34929                           plusw0	equ	0xFEB
 34930                           fsr0h	equ	0xFEA
 34931                           fsr0l	equ	0xFE9
 34932                           wreg	equ	0xFE8
 34933                           indf1	equ	0xFE7
 34934                           postdec1	equ	0xFE5
 34935                           fsr1h	equ	0xFE2
 34936                           fsr1l	equ	0xFE1
 34937                           indf2	equ	0xFDF
 34938                           postinc2	equ	0xFDE
 34939                           postdec2	equ	0xFDD
 34940                           plusw2	equ	0xFDB
 34941                           fsr2h	equ	0xFDA
 34942                           fsr2l	equ	0xFD9
 34943                           status	equ	0xFD8
 34944                           
 34945 ;; *************** function _EEPROMinitialized *****************
 34946 ;; Defined at:
 34947 ;;		line 288 in file "EEPROM.c"
 34948 ;; Parameters:    Size  Location     Type
 34949 ;;		None
 34950 ;; Auto vars:     Size  Location     Type
 34951 ;;		None
 34952 ;; Return value:  Size  Location     Type
 34953 ;;                  1    wreg      unsigned char 
 34954 ;; Registers used:
 34955 ;;		wreg, status,2, status,0
 34956 ;; Tracked objects:
 34957 ;;		On entry : 0/0
 34958 ;;		On exit  : 0/0
 34959 ;;		Unchanged: 0/0
 34960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34965 ;;Total ram usage:        0 bytes
 34966 ;; Hardware stack levels used:    1
 34967 ;; Hardware stack levels required when called:    6
 34968 ;; This function calls:
 34969 ;;		Nothing
 34970 ;; This function is called by:
 34971 ;;		_Init_System
 34972 ;; This function uses a non-reentrant model
 34973 ;;
 34974                           
 34975                           	psect	text98
 34976  0094C0                     __ptext98:
 34977                           	opt stack 0
 34978  0094C0                     _EEPROMinitialized:
 34979                           	opt stack 23
 34980                           
 34981                           ;EEPROM.c: 290: if(Global.EEPROMinitFlag == 59)
 34982                           
 34983                           ;incstack = 0
 34984  0094C0  0E3B               	movlw	59
 34985  0094C2  0104               	movlb	4	; () banked
 34986  0094C4  192D               	xorwf	(_Global+45)& (0+255),w,b
 34987  0094C6  A4D8               	btfss	status,2,c
 34988  0094C8  D002               	goto	l14395
 34989                           
 34990                           ; BSR set to: 4
 34991                           ;EEPROM.c: 291: {
 34992                           ;EEPROM.c: 292: return 1;
 34993  0094CA  0E01               	movlw	1
 34994                           
 34995                           ; BSR set to: 4
 34996  0094CC  0012               	return	
 34997  0094CE                     l14395:
 34998                           
 34999                           ; BSR set to: 4
 35000                           ;EEPROM.c: 293: }
 35001                           ;EEPROM.c: 294: return 0;
 35002  0094CE  0E00               	movlw	0
 35003  0094D0  0012               	return	
 35004                           
 35005                           ; BSR set to: 4
 35006                           
 35007                           ; BSR set to: 4
 35008  0094D2  0012               	return		;funcret
 35009  0094D4                     __end_of_EEPROMinitialized:
 35010                           	opt stack 0
 35011                           tblptru	equ	0xFF8
 35012                           tblptrh	equ	0xFF7
 35013                           tblptrl	equ	0xFF6
 35014                           tablat	equ	0xFF5
 35015                           prodh	equ	0xFF4
 35016                           prodl	equ	0xFF3
 35017                           intcon	equ	0xFF2
 35018                           intcon2	equ	0xFF1
 35019                           indf0	equ	0xFEF
 35020                           postinc0	equ	0xFEE
 35021                           plusw0	equ	0xFEB
 35022                           fsr0h	equ	0xFEA
 35023                           fsr0l	equ	0xFE9
 35024                           wreg	equ	0xFE8
 35025                           indf1	equ	0xFE7
 35026                           postdec1	equ	0xFE5
 35027                           fsr1h	equ	0xFE2
 35028                           fsr1l	equ	0xFE1
 35029                           indf2	equ	0xFDF
 35030                           postinc2	equ	0xFDE
 35031                           postdec2	equ	0xFDD
 35032                           plusw2	equ	0xFDB
 35033                           fsr2h	equ	0xFDA
 35034                           fsr2l	equ	0xFD9
 35035                           status	equ	0xFD8
 35036                           
 35037 ;; *************** function _InitApp *****************
 35038 ;; Defined at:
 35039 ;;		line 62 in file "user.c"
 35040 ;; Parameters:    Size  Location     Type
 35041 ;;		None
 35042 ;; Auto vars:     Size  Location     Type
 35043 ;;		None
 35044 ;; Return value:  Size  Location     Type
 35045 ;;		None               void
 35046 ;; Registers used:
 35047 ;;		wreg, status,2, status,0
 35048 ;; Tracked objects:
 35049 ;;		On entry : 0/0
 35050 ;;		On exit  : 0/0
 35051 ;;		Unchanged: 0/0
 35052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35057 ;;Total ram usage:        0 bytes
 35058 ;; Hardware stack levels used:    1
 35059 ;; Hardware stack levels required when called:    6
 35060 ;; This function calls:
 35061 ;;		Nothing
 35062 ;; This function is called by:
 35063 ;;		_main
 35064 ;; This function uses a non-reentrant model
 35065 ;;
 35066                           
 35067                           	psect	text99
 35068  0090A0                     __ptext99:
 35069                           	opt stack 0
 35070  0090A0                     _InitApp:
 35071                           	opt stack 24
 35072                           
 35073                           ;user.c: 64: LATA = 0;
 35074                           
 35075                           ; BSR set to: 4
 35076                           ;incstack = 0
 35077  0090A0  0E00               	movlw	0
 35078  0090A2  6E89               	movwf	3977,c	;volatile
 35079                           
 35080                           ;user.c: 65: LATB = 0;
 35081  0090A4  0E00               	movlw	0
 35082  0090A6  6E8A               	movwf	3978,c	;volatile
 35083                           
 35084                           ;user.c: 66: LATC = 0;
 35085  0090A8  0E00               	movlw	0
 35086  0090AA  6E8B               	movwf	3979,c	;volatile
 35087                           
 35088                           ;user.c: 67: LATA |= 0x04;
 35089  0090AC  8489               	bsf	3977,2,c	;volatile
 35090                           
 35091                           ;user.c: 69: TRISAbits.TRISA0 = 1;
 35092  0090AE  8092               	bsf	3986,0,c	;volatile
 35093                           
 35094                           ;user.c: 70: TRISAbits.TRISA1 = 1;
 35095  0090B0  8292               	bsf	3986,1,c	;volatile
 35096                           
 35097                           ;user.c: 71: TRISAbits.TRISA2 = 0;
 35098  0090B2  9492               	bcf	3986,2,c	;volatile
 35099                           
 35100                           ;user.c: 72: TRISAbits.TRISA3 = 0;
 35101  0090B4  9692               	bcf	3986,3,c	;volatile
 35102                           
 35103                           ;user.c: 73: TRISAbits.TRISA4 = 0;
 35104  0090B6  9892               	bcf	3986,4,c	;volatile
 35105                           
 35106                           ;user.c: 74: TRISAbits.TRISA5 = 0;
 35107  0090B8  9A92               	bcf	3986,5,c	;volatile
 35108                           
 35109                           ;user.c: 75: TRISCbits.TRISC0 = 1;
 35110  0090BA  8094               	bsf	3988,0,c	;volatile
 35111                           
 35112                           ;user.c: 76: TRISCbits.TRISC1 = 0;
 35113  0090BC  9294               	bcf	3988,1,c	;volatile
 35114                           
 35115                           ;user.c: 77: TRISCbits.TRISC2 = 0;
 35116  0090BE  9494               	bcf	3988,2,c	;volatile
 35117                           
 35118                           ;user.c: 78: TRISCbits.TRISC3 = 0;
 35119  0090C0  9694               	bcf	3988,3,c	;volatile
 35120                           
 35121                           ;user.c: 79: TRISCbits.TRISC4 = 0;
 35122  0090C2  9894               	bcf	3988,4,c	;volatile
 35123                           
 35124                           ;user.c: 80: TRISCbits.TRISC5 = 0;
 35125  0090C4  9A94               	bcf	3988,5,c	;volatile
 35126                           
 35127                           ;user.c: 81: TRISCbits.TRISC6 = 0;
 35128  0090C6  9C94               	bcf	3988,6,c	;volatile
 35129                           
 35130                           ;user.c: 82: TRISCbits.TRISC7 = 1;
 35131  0090C8  8E94               	bsf	3988,7,c	;volatile
 35132                           
 35133                           ;user.c: 83: TRISBbits.TRISB0 = 1;
 35134  0090CA  8093               	bsf	3987,0,c	;volatile
 35135                           
 35136                           ;user.c: 84: TRISBbits.TRISB1 = 1;
 35137  0090CC  8293               	bsf	3987,1,c	;volatile
 35138                           
 35139                           ;user.c: 85: TRISBbits.TRISB2 = 1;
 35140  0090CE  8493               	bsf	3987,2,c	;volatile
 35141                           
 35142                           ;user.c: 86: TRISBbits.TRISB3 = 1;
 35143  0090D0  8693               	bsf	3987,3,c	;volatile
 35144                           
 35145                           ;user.c: 87: TRISBbits.TRISB4 = 1;
 35146  0090D2  8893               	bsf	3987,4,c	;volatile
 35147                           
 35148                           ;user.c: 88: TRISBbits.TRISB5 = 1;
 35149  0090D4  8A93               	bsf	3987,5,c	;volatile
 35150                           
 35151                           ;user.c: 91: ANSEL = 0x01;
 35152  0090D6  0E01               	movlw	1
 35153  0090D8  6E7E               	movwf	3966,c	;volatile
 35154                           
 35155                           ;user.c: 92: ANSELH = 0x00;
 35156  0090DA  0E00               	movlw	0
 35157  0090DC  6E7F               	movwf	3967,c	;volatile
 35158                           
 35159                           ;user.c: 95: INTCON2bits.RBPU = 0;
 35160  0090DE  9EF1               	bcf	intcon2,7,c	;volatile
 35161                           
 35162                           ;user.c: 97: WPUB = 0x0F;
 35163  0090E0  0E0F               	movlw	15
 35164  0090E2  6E7C               	movwf	3964,c	;volatile
 35165  0090E4  0012               	return		;funcret
 35166  0090E6                     __end_of_InitApp:
 35167                           	opt stack 0
 35168                           tblptru	equ	0xFF8
 35169                           tblptrh	equ	0xFF7
 35170                           tblptrl	equ	0xFF6
 35171                           tablat	equ	0xFF5
 35172                           prodh	equ	0xFF4
 35173                           prodl	equ	0xFF3
 35174                           intcon	equ	0xFF2
 35175                           intcon2	equ	0xFF1
 35176                           indf0	equ	0xFEF
 35177                           postinc0	equ	0xFEE
 35178                           plusw0	equ	0xFEB
 35179                           fsr0h	equ	0xFEA
 35180                           fsr0l	equ	0xFE9
 35181                           wreg	equ	0xFE8
 35182                           indf1	equ	0xFE7
 35183                           postdec1	equ	0xFE5
 35184                           fsr1h	equ	0xFE2
 35185                           fsr1l	equ	0xFE1
 35186                           indf2	equ	0xFDF
 35187                           postinc2	equ	0xFDE
 35188                           postdec2	equ	0xFDD
 35189                           plusw2	equ	0xFDB
 35190                           fsr2h	equ	0xFDA
 35191                           fsr2l	equ	0xFD9
 35192                           status	equ	0xFD8
 35193                           
 35194 ;; *************** function _ConfigureOscillator *****************
 35195 ;; Defined at:
 35196 ;;		line 43 in file "system.c"
 35197 ;; Parameters:    Size  Location     Type
 35198 ;;		None
 35199 ;; Auto vars:     Size  Location     Type
 35200 ;;		None
 35201 ;; Return value:  Size  Location     Type
 35202 ;;		None               void
 35203 ;; Registers used:
 35204 ;;		None
 35205 ;; Tracked objects:
 35206 ;;		On entry : 0/0
 35207 ;;		On exit  : 0/0
 35208 ;;		Unchanged: 0/0
 35209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35214 ;;Total ram usage:        0 bytes
 35215 ;; Hardware stack levels used:    1
 35216 ;; Hardware stack levels required when called:    6
 35217 ;; This function calls:
 35218 ;;		Nothing
 35219 ;; This function is called by:
 35220 ;;		_main
 35221 ;; This function uses a non-reentrant model
 35222 ;;
 35223                           
 35224                           	psect	text100
 35225  0095E4                     __ptext100:
 35226                           	opt stack 0
 35227  0095E4                     _ConfigureOscillator:
 35228                           	opt stack 24
 35229                           
 35230                           ;incstack = 0
 35231  0095E4  0012               	return		;funcret
 35232  0095E6                     __end_of_ConfigureOscillator:
 35233                           	opt stack 0
 35234                           tblptru	equ	0xFF8
 35235                           tblptrh	equ	0xFF7
 35236                           tblptrl	equ	0xFF6
 35237                           tablat	equ	0xFF5
 35238                           prodh	equ	0xFF4
 35239                           prodl	equ	0xFF3
 35240                           intcon	equ	0xFF2
 35241                           intcon2	equ	0xFF1
 35242                           indf0	equ	0xFEF
 35243                           postinc0	equ	0xFEE
 35244                           plusw0	equ	0xFEB
 35245                           fsr0h	equ	0xFEA
 35246                           fsr0l	equ	0xFE9
 35247                           wreg	equ	0xFE8
 35248                           indf1	equ	0xFE7
 35249                           postdec1	equ	0xFE5
 35250                           fsr1h	equ	0xFE2
 35251                           fsr1l	equ	0xFE1
 35252                           indf2	equ	0xFDF
 35253                           postinc2	equ	0xFDE
 35254                           postdec2	equ	0xFDD
 35255                           plusw2	equ	0xFDB
 35256                           fsr2h	equ	0xFDA
 35257                           fsr2l	equ	0xFD9
 35258                           status	equ	0xFD8
 35259                           
 35260 ;; *************** function _low_isr *****************
 35261 ;; Defined at:
 35262 ;;		line 608 in file "interrupts.c"
 35263 ;; Parameters:    Size  Location     Type
 35264 ;;		None
 35265 ;; Auto vars:     Size  Location     Type
 35266 ;;  data            1   25[COMRAM] unsigned char 
 35267 ;; Return value:  Size  Location     Type
 35268 ;;		None               void
 35269 ;; Registers used:
 35270 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35271 ;; Tracked objects:
 35272 ;;		On entry : 0/0
 35273 ;;		On exit  : 0/0
 35274 ;;		Unchanged: 0/0
 35275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35278 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35279 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35280 ;;Total ram usage:       18 bytes
 35281 ;; Hardware stack levels used:    1
 35282 ;; Hardware stack levels required when called:    5
 35283 ;; This function calls:
 35284 ;;		_EraseScreen
 35285 ;;		_IsCharacter
 35286 ;;		i1_BlueConnected
 35287 ;;		i1_ReadUSART
 35288 ;;		i1_UARTchar
 35289 ;;		i1_UARTstring
 35290 ;;		i1_UARTstringCRLN
 35291 ;;		i1_cleanBuffer
 35292 ;; This function is called by:
 35293 ;;		Interrupt level 1
 35294 ;; This function uses a non-reentrant model
 35295 ;;
 35296                           
 35297                           	psect	intcodelo
 35298  000018                     __pintcodelo:
 35299                           	opt stack 0
 35300  000018                     _low_isr:
 35301                           	opt stack 17
 35302                           
 35303                           ;incstack = 0
 35304  000018  CFD8 F009          	movff	status,??_low_isr
 35305  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 35306  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 35307  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 35308  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 35309  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 35310  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 35311  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 35312  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 35313  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 35314  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 35315  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 35316  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 35317  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 35318  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 35319  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 35320  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 35321                           
 35322                           ;interrupts.c: 617: char data = 0;
 35323  00005C  0E00               	movlw	0
 35324  00005E  6E1A               	movwf	low_isr@data,c
 35325                           
 35326                           ;interrupts.c: 619: INTCONbits.PEIE = 0;
 35327  000060  9CF2               	bcf	intcon,6,c	;volatile
 35328                           
 35329                           ;interrupts.c: 621: if(PIR1bits.RCIF)
 35330  000062  AA9E               	btfss	3998,5,c	;volatile
 35331  000064  D093               	goto	i1l1345
 35332                           
 35333                           ;interrupts.c: 622: {
 35334                           ;interrupts.c: 624: data = ReadUSART();
 35335  000066  EC4B  F04A         	call	i1_ReadUSART	;wreg free
 35336  00006A  6E1A               	movwf	low_isr@data,c
 35337                           
 35338                           ;interrupts.c: 626: if(!BlueConnected())
 35339  00006C  ECBC  F04A         	call	i1_BlueConnected	;wreg free
 35340  000070  0900               	iorlw	0
 35341  000072  A4D8               	btfss	status,2,c
 35342  000074  D00F               	goto	i1l12307
 35343                           
 35344                           ;interrupts.c: 627: {
 35345                           ;interrupts.c: 628: if(CommandStringPos < 255)
 35346  000076  2827               	incf	_CommandStringPos,w,c
 35347  000078  B4D8               	btfsc	status,2,c
 35348  00007A  D086               	goto	i1l12357
 35349                           
 35350                           ;interrupts.c: 629: {
 35351                           ;interrupts.c: 630: CommandString[CommandStringPos] = data;
 35352  00007C  5027               	movf	_CommandStringPos,w,c
 35353  00007E  0D01               	mullw	1
 35354  000080  0E00               	movlw	low _CommandString
 35355  000082  24F3               	addwf	prodl,w,c
 35356  000084  6ED9               	movwf	fsr2l,c
 35357  000086  0E05               	movlw	high _CommandString
 35358  000088  20F4               	addwfc	prodh,w,c
 35359  00008A  6EDA               	movwf	fsr2h,c
 35360  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 35361                           
 35362                           ;interrupts.c: 631: CommandStringPos++;
 35363  000090  2A27               	incf	_CommandStringPos,f,c
 35364                           
 35365                           ;interrupts.c: 632: }
 35366                           ;interrupts.c: 633: }
 35367  000092  D07A               	goto	i1l12357
 35368  000094                     i1l12307:
 35369                           
 35370                           ;interrupts.c: 634: else
 35371                           ;interrupts.c: 635: {
 35372                           ;interrupts.c: 636: if(data != '\r' && data != '\n')
 35373  000094  0E0D               	movlw	13
 35374  000096  181A               	xorwf	low_isr@data,w,c
 35375  000098  B4D8               	btfsc	status,2,c
 35376  00009A  D063               	goto	i1l12347
 35377  00009C  0E0A               	movlw	10
 35378  00009E  181A               	xorwf	low_isr@data,w,c
 35379  0000A0  B4D8               	btfsc	status,2,c
 35380  0000A2  D05F               	goto	i1l12347
 35381                           
 35382                           ;interrupts.c: 637: {
 35383                           ;interrupts.c: 638: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 35384  0000A4  0E7F               	movlw	127
 35385  0000A6  181A               	xorwf	low_isr@data,w,c
 35386  0000A8  B4D8               	btfsc	status,2,c
 35387  0000AA  D004               	goto	i1l12315
 35388  0000AC  0E08               	movlw	8
 35389  0000AE  181A               	xorwf	low_isr@data,w,c
 35390  0000B0  A4D8               	btfss	status,2,c
 35391  0000B2  D01F               	goto	i1l12327
 35392  0000B4                     i1l12315:
 35393  0000B4  0100               	movlb	0	; () banked
 35394  0000B6  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35395  0000B8  B4D8               	btfsc	status,2,c
 35396  0000BA  D01B               	goto	i1l12327
 35397                           
 35398                           ; BSR set to: 0
 35399                           ;interrupts.c: 639: {
 35400                           ;interrupts.c: 641: EraseScreen(ReceivedStringPos + 1);
 35401  0000BC  0100               	movlb	0	; () banked
 35402  0000BE  29DC               	incf	_ReceivedStringPos& (0+255),w,b
 35403  0000C0  ECD1  F049         	call	_EraseScreen
 35404                           
 35405                           ;interrupts.c: 642: ReceivedStringPos--;
 35406  0000C4  0100               	movlb	0	; () banked
 35407  0000C6  07DC               	decf	_ReceivedStringPos& (0+255),f,b
 35408                           
 35409                           ; BSR set to: 0
 35410                           ;interrupts.c: 643: ReceivedString[ReceivedStringPos] = '\0';
 35411  0000C8  0100               	movlb	0	; () banked
 35412  0000CA  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35413  0000CC  0D01               	mullw	1
 35414  0000CE  0E00               	movlw	low _ReceivedString
 35415  0000D0  24F3               	addwf	prodl,w,c
 35416  0000D2  6ED9               	movwf	fsr2l,c
 35417  0000D4  0E06               	movlw	high _ReceivedString
 35418  0000D6  20F4               	addwfc	prodh,w,c
 35419  0000D8  6EDA               	movwf	fsr2h,c
 35420  0000DA  0E00               	movlw	0
 35421  0000DC  6EDF               	movwf	indf2,c
 35422                           
 35423                           ; BSR set to: 0
 35424                           ;interrupts.c: 644: UARTchar('>');
 35425  0000DE  0E3E               	movlw	62
 35426  0000E0  EC29  F04A         	call	i1_UARTchar
 35427                           
 35428                           ;interrupts.c: 645: UARTstring(ReceivedString);
 35429  0000E4  0E00               	movlw	low _ReceivedString
 35430  0000E6  6E02               	movwf	i1UARTstring@data,c
 35431  0000E8  0E06               	movlw	high _ReceivedString
 35432  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 35433  0000EC  EC35  F047         	call	i1_UARTstring	;wreg free
 35434                           
 35435                           ;interrupts.c: 646: }
 35436  0000F0  D04B               	goto	i1l12357
 35437  0000F2                     i1l12327:
 35438                           
 35439                           ;interrupts.c: 647: else if(ReceivedStringPos < 255)
 35440  0000F2  0100               	movlb	0	; () banked
 35441  0000F4  29DC               	incf	_ReceivedStringPos& (0+255),w,b
 35442  0000F6  B4D8               	btfsc	status,2,c
 35443  0000F8  D01B               	goto	i1l12339
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;interrupts.c: 648: {
 35447                           ;interrupts.c: 649: if(!NewReceivedString)
 35448  0000FA  0100               	movlb	0	; () banked
 35449  0000FC  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35450  0000FE  A4D8               	btfss	status,2,c
 35451  000100  D043               	goto	i1l12357
 35452                           
 35453                           ; BSR set to: 0
 35454                           ;interrupts.c: 650: {
 35455                           ;interrupts.c: 651: if(IsCharacter(data))
 35456  000102  501A               	movf	low_isr@data,w,c
 35457  000104  EC1D  F04A         	call	_IsCharacter
 35458  000108  0900               	iorlw	0
 35459  00010A  B4D8               	btfsc	status,2,c
 35460  00010C  D03D               	goto	i1l12357
 35461                           
 35462                           ;interrupts.c: 652: {
 35463                           ;interrupts.c: 653: UARTchar(data);
 35464  00010E  501A               	movf	low_isr@data,w,c
 35465  000110  EC29  F04A         	call	i1_UARTchar
 35466                           
 35467                           ;interrupts.c: 654: ReceivedString[ReceivedStringPos] = data;
 35468  000114  0100               	movlb	0	; () banked
 35469  000116  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35470  000118  0D01               	mullw	1
 35471  00011A  0E00               	movlw	low _ReceivedString
 35472  00011C  24F3               	addwf	prodl,w,c
 35473  00011E  6ED9               	movwf	fsr2l,c
 35474  000120  0E06               	movlw	high _ReceivedString
 35475  000122  20F4               	addwfc	prodh,w,c
 35476  000124  6EDA               	movwf	fsr2h,c
 35477  000126  C01A  FFDF         	movff	low_isr@data,indf2
 35478                           
 35479                           ; BSR set to: 0
 35480                           ;interrupts.c: 655: ReceivedStringPos++;
 35481  00012A  0100               	movlb	0	; () banked
 35482  00012C  2BDC               	incf	_ReceivedStringPos& (0+255),f,b
 35483                           
 35484                           ; BSR set to: 0
 35485                           ;interrupts.c: 656: }
 35486                           ;interrupts.c: 657: }
 35487                           ;interrupts.c: 658: }
 35488                           
 35489                           ; BSR set to: 0
 35490  00012E  D02C               	goto	i1l12357
 35491  000130                     i1l12339:
 35492                           
 35493                           ; BSR set to: 0
 35494                           ;interrupts.c: 659: else
 35495                           ;interrupts.c: 660: {
 35496                           ;interrupts.c: 661: cleanBuffer(ReceivedString,255);
 35497  000130  0E00               	movlw	low _ReceivedString
 35498  000132  6E01               	movwf	i1cleanBuffer@data,c
 35499  000134  0E06               	movlw	high _ReceivedString
 35500  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 35501  000138  0E00               	movlw	0
 35502  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 35503  00013C  6803               	setf	i1cleanBuffer@count,c
 35504  00013E  ECD5  F048         	call	i1_cleanBuffer	;wreg free
 35505                           
 35506                           ;interrupts.c: 662: ReceivedStringPos = 0;
 35507  000142  0E00               	movlw	0
 35508  000144  0100               	movlb	0	; () banked
 35509  000146  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 35510                           
 35511                           ; BSR set to: 0
 35512                           ;interrupts.c: 663: UARTstring(CRLN);
 35513  000148  0EA7               	movlw	low _CRLN
 35514  00014A  6E02               	movwf	i1UARTstring@data,c
 35515  00014C  0EF3               	movlw	high _CRLN
 35516  00014E  6E03               	movwf	i1UARTstring@data+1,c
 35517  000150  EC35  F047         	call	i1_UARTstring	;wreg free
 35518                           
 35519                           ;interrupts.c: 664: UARTstringCRLN((unsigned char *)"Buffer Overflow");
 35520  000154  0E71               	movlw	low STR_1
 35521  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 35522  000158  0EFE               	movlw	high STR_1
 35523  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 35524  00015C  EC7A  F046         	call	i1_UARTstringCRLN	;wreg free
 35525                           
 35526                           ;interrupts.c: 665: }
 35527                           ;interrupts.c: 666: }
 35528  000160  D013               	goto	i1l12357
 35529  000162                     i1l12347:
 35530                           
 35531                           ;interrupts.c: 667: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 35532  000162  0100               	movlb	0	; () banked
 35533  000164  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35534  000166  B4D8               	btfsc	status,2,c
 35535  000168  D00F               	goto	i1l12357
 35536                           
 35537                           ; BSR set to: 0
 35538  00016A  0100               	movlb	0	; () banked
 35539  00016C  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35540  00016E  A4D8               	btfss	status,2,c
 35541  000170  D00B               	goto	i1l12357
 35542                           
 35543                           ; BSR set to: 0
 35544                           ;interrupts.c: 668: {
 35545                           ;interrupts.c: 669: PIE1bits.RCIE = 0;
 35546  000172  9A9D               	bcf	3997,5,c	;volatile
 35547                           
 35548                           ; BSR set to: 0
 35549                           ;interrupts.c: 670: UARTstring(CRLN);
 35550  000174  0EA7               	movlw	low _CRLN
 35551  000176  6E02               	movwf	i1UARTstring@data,c
 35552  000178  0EF3               	movlw	high _CRLN
 35553  00017A  6E03               	movwf	i1UARTstring@data+1,c
 35554  00017C  EC35  F047         	call	i1_UARTstring	;wreg free
 35555                           
 35556                           ;interrupts.c: 671: NewReceivedString = 1;
 35557  000180  0E01               	movlw	1
 35558  000182  0100               	movlb	0	; () banked
 35559  000184  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 35560                           
 35561                           ; BSR set to: 0
 35562                           
 35563                           ; BSR set to: 0
 35564  000186  D000               	goto	i1l12357
 35565  000188                     i1l12357:
 35566                           
 35567                           ;interrupts.c: 672: }
 35568                           ;interrupts.c: 673: }
 35569                           ;interrupts.c: 674: PIR1bits.RCIF = 0;
 35570  000188  9A9E               	bcf	3998,5,c	;volatile
 35571                           
 35572                           ;interrupts.c: 675: }
 35573  00018A  D00F               	goto	i1l1360
 35574  00018C                     i1l1345:
 35575                           
 35576                           ;interrupts.c: 676: else if(PIR1bits.TMR1IF)
 35577  00018C  A09E               	btfss	3998,0,c	;volatile
 35578  00018E  D00B               	goto	i1l1361
 35579                           
 35580                           ;interrupts.c: 677: {
 35581                           ;interrupts.c: 678: Timer1_Postscaler++;
 35582  000190  2A39               	incf	_Timer1_Postscaler,f,c
 35583                           
 35584                           ;interrupts.c: 679: if(Timer1_Postscaler == 3)
 35585  000192  0E03               	movlw	3
 35586  000194  1839               	xorwf	_Timer1_Postscaler,w,c
 35587  000196  A4D8               	btfss	status,2,c
 35588  000198  D004               	goto	i1l12367
 35589                           
 35590                           ;interrupts.c: 680: {
 35591                           ;interrupts.c: 681: (LATC &= ~0x04);
 35592  00019A  948B               	bcf	3979,2,c	;volatile
 35593                           
 35594                           ;interrupts.c: 682: (LATC &= ~0x02);
 35595  00019C  928B               	bcf	3979,1,c	;volatile
 35596                           
 35597                           ;interrupts.c: 683: (T1CONbits.TMR1ON = 0);
 35598  00019E  90CD               	bcf	4045,0,c	;volatile
 35599  0001A0  D000               	goto	i1l12367
 35600  0001A2                     i1l12367:
 35601                           
 35602                           ;interrupts.c: 684: }
 35603                           ;interrupts.c: 685: PIR1bits.TMR1IF = 0;
 35604  0001A2  909E               	bcf	3998,0,c	;volatile
 35605                           
 35606                           ;interrupts.c: 686: }
 35607  0001A4  D002               	goto	i1l1360
 35608  0001A6                     i1l1361:
 35609                           
 35610                           ;interrupts.c: 687: else
 35611                           ;interrupts.c: 688: {
 35612                           ;interrupts.c: 690: __nop();
 35613  0001A6  F000               	nop	
 35614  0001A8  D000               	goto	i1l1360
 35615  0001AA                     i1l1360:
 35616                           
 35617                           ;interrupts.c: 691: }
 35618                           ;interrupts.c: 692: INTCONbits.PEIE = 1;
 35619  0001AA  8CF2               	bsf	intcon,6,c	;volatile
 35620  0001AC  C019  FFF5         	movff	??_low_isr+16,tablat
 35621  0001B0  C018  FFF8         	movff	??_low_isr+15,tblptru
 35622  0001B4  C017  FFF7         	movff	??_low_isr+14,tblptrh
 35623  0001B8  C016  FFF6         	movff	??_low_isr+13,tblptrl
 35624  0001BC  C015  FFF4         	movff	??_low_isr+12,prodh
 35625  0001C0  C014  FFF3         	movff	??_low_isr+11,prodl
 35626  0001C4  C013  FFDA         	movff	??_low_isr+10,fsr2h
 35627  0001C8  C012  FFD9         	movff	??_low_isr+9,fsr2l
 35628  0001CC  C011  FFE2         	movff	??_low_isr+8,fsr1h
 35629  0001D0  C010  FFE1         	movff	??_low_isr+7,fsr1l
 35630  0001D4  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 35631  0001D8  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 35632  0001DC  C00D  FFFB         	movff	??_low_isr+4,pclatu
 35633  0001E0  C00C  FFFA         	movff	??_low_isr+3,pclath
 35634  0001E4  C00B  FFE0         	movff	??_low_isr+2,bsr
 35635  0001E8  C00A  FFE8         	movff	??_low_isr+1,wreg
 35636  0001EC  C009  FFD8         	movff	??_low_isr,status
 35637  0001F0  0010               	retfie	
 35638  0001F2                     __end_of_low_isr:
 35639                           	opt stack 0
 35640                           pclatu	equ	0xFFB
 35641                           pclath	equ	0xFFA
 35642                           tblptru	equ	0xFF8
 35643                           tblptrh	equ	0xFF7
 35644                           tblptrl	equ	0xFF6
 35645                           tablat	equ	0xFF5
 35646                           prodh	equ	0xFF4
 35647                           prodl	equ	0xFF3
 35648                           intcon	equ	0xFF2
 35649                           intcon2	equ	0xFF1
 35650                           indf0	equ	0xFEF
 35651                           postinc0	equ	0xFEE
 35652                           plusw0	equ	0xFEB
 35653                           fsr0h	equ	0xFEA
 35654                           fsr0l	equ	0xFE9
 35655                           wreg	equ	0xFE8
 35656                           indf1	equ	0xFE7
 35657                           postdec1	equ	0xFE5
 35658                           fsr1h	equ	0xFE2
 35659                           fsr1l	equ	0xFE1
 35660                           bsr	equ	0xFE0
 35661                           indf2	equ	0xFDF
 35662                           postinc2	equ	0xFDE
 35663                           postdec2	equ	0xFDD
 35664                           plusw2	equ	0xFDB
 35665                           fsr2h	equ	0xFDA
 35666                           fsr2l	equ	0xFD9
 35667                           status	equ	0xFD8
 35668                           
 35669 ;; *************** function i1_cleanBuffer *****************
 35670 ;; Defined at:
 35671 ;;		line 127 in file "MISC.c"
 35672 ;; Parameters:    Size  Location     Type
 35673 ;;  data            2    0[COMRAM] PTR unsigned char 
 35674 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 35675 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 35676 ;;  count           2    2[COMRAM] int 
 35677 ;; Auto vars:     Size  Location     Type
 35678 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 35679 ;; Return value:  Size  Location     Type
 35680 ;;		None               void
 35681 ;; Registers used:
 35682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35683 ;; Tracked objects:
 35684 ;;		On entry : 0/0
 35685 ;;		On exit  : 0/0
 35686 ;;		Unchanged: 0/0
 35687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35690 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35692 ;;Total ram usage:        8 bytes
 35693 ;; Hardware stack levels used:    1
 35694 ;; Hardware stack levels required when called:    2
 35695 ;; This function calls:
 35696 ;;		Nothing
 35697 ;; This function is called by:
 35698 ;;		_low_isr
 35699 ;; This function uses a non-reentrant model
 35700 ;;
 35701                           
 35702                           	psect	text102
 35703  0091AA                     __ptext102:
 35704                           	opt stack 0
 35705  0091AA                     i1_cleanBuffer:
 35706                           	opt stack 19
 35707                           
 35708                           ;MISC.c: 129: unsigned char i=0;
 35709                           
 35710                           ;incstack = 0
 35711  0091AA  0E00               	movlw	0
 35712  0091AC  6E08               	movwf	i1cleanBuffer@i,c
 35713                           
 35714                           ;MISC.c: 130: for(i=0; i<count;i++)
 35715  0091AE  0E00               	movlw	0
 35716  0091B0  6E08               	movwf	i1cleanBuffer@i,c
 35717  0091B2  D00C               	goto	i1l11599
 35718  0091B4                     i1l11595:
 35719                           
 35720                           ;MISC.c: 131: {
 35721                           ;MISC.c: 132: data[i]= 0;
 35722  0091B4  5008               	movf	i1cleanBuffer@i,w,c
 35723  0091B6  0D01               	mullw	1
 35724  0091B8  50F3               	movf	prodl,w,c
 35725  0091BA  2401               	addwf	i1cleanBuffer@data,w,c
 35726  0091BC  6ED9               	movwf	fsr2l,c
 35727  0091BE  50F4               	movf	prodh,w,c
 35728  0091C0  2002               	addwfc	i1cleanBuffer@data+1,w,c
 35729  0091C2  6EDA               	movwf	fsr2h,c
 35730  0091C4  0E00               	movlw	0
 35731  0091C6  6EDF               	movwf	indf2,c
 35732  0091C8  2A08               	incf	i1cleanBuffer@i,f,c
 35733  0091CA  D000               	goto	i1l11599
 35734  0091CC                     i1l11599:
 35735  0091CC  5008               	movf	i1cleanBuffer@i,w,c
 35736  0091CE  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 35737  0091D0  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 35738  0091D2  5003               	movf	i1cleanBuffer@count,w,c
 35739  0091D4  5C05               	subwf	??i1_cleanBuffer,w,c
 35740  0091D6  5006               	movf	??i1_cleanBuffer+1,w,c
 35741  0091D8  0A80               	xorlw	128
 35742  0091DA  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 35743  0091DC  5004               	movf	i1cleanBuffer@count+1,w,c
 35744  0091DE  0A80               	xorlw	128
 35745  0091E0  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 35746  0091E2  A0D8               	btfss	status,0,c
 35747  0091E4  D7E7               	goto	i1l11595
 35748  0091E6  0012               	return		;funcret
 35749  0091E8                     __end_ofi1_cleanBuffer:
 35750                           	opt stack 0
 35751                           pclatu	equ	0xFFB
 35752                           pclath	equ	0xFFA
 35753                           tblptru	equ	0xFF8
 35754                           tblptrh	equ	0xFF7
 35755                           tblptrl	equ	0xFF6
 35756                           tablat	equ	0xFF5
 35757                           prodh	equ	0xFF4
 35758                           prodl	equ	0xFF3
 35759                           intcon	equ	0xFF2
 35760                           intcon2	equ	0xFF1
 35761                           indf0	equ	0xFEF
 35762                           postinc0	equ	0xFEE
 35763                           plusw0	equ	0xFEB
 35764                           fsr0h	equ	0xFEA
 35765                           fsr0l	equ	0xFE9
 35766                           wreg	equ	0xFE8
 35767                           indf1	equ	0xFE7
 35768                           postdec1	equ	0xFE5
 35769                           fsr1h	equ	0xFE2
 35770                           fsr1l	equ	0xFE1
 35771                           bsr	equ	0xFE0
 35772                           indf2	equ	0xFDF
 35773                           postinc2	equ	0xFDE
 35774                           postdec2	equ	0xFDD
 35775                           plusw2	equ	0xFDB
 35776                           fsr2h	equ	0xFDA
 35777                           fsr2l	equ	0xFD9
 35778                           status	equ	0xFD8
 35779                           
 35780 ;; *************** function i1_UARTstringCRLN *****************
 35781 ;; Defined at:
 35782 ;;		line 262 in file "UART.c"
 35783 ;; Parameters:    Size  Location     Type
 35784 ;;  data            2    3[COMRAM] PTR unsigned char 
 35785 ;;		 -> STR_150(36), STR_148(27), STR_134(13), STR_103(13), 
 35786 ;;		 -> STR_100(21), STR_93(17), STR_90(5), STR_82(29), 
 35787 ;;		 -> STR_81(18), STR_80(29), STR_77(44), STR_72(46), 
 35788 ;;		 -> STR_71(42), STR_70(50), STR_69(50), STR_67(31), 
 35789 ;;		 -> STR_66(31), STR_65(37), STR_64(37), STR_63(37), 
 35790 ;;		 -> STR_59(18), STR_58(14), STR_57(9), STR_56(20), 
 35791 ;;		 -> STR_55(16), STR_54(7), STR_53(35), STR_52(37), 
 35792 ;;		 -> STR_49(47), STR_44(17), STR_43(9), STR_42(18), 
 35793 ;;		 -> STR_41(9), STR_40(22), STR_39(11), STR_38(20), 
 35794 ;;		 -> STR_37(7), STR_36(31), STR_34(33), STR_30(32), 
 35795 ;;		 -> STR_26(31), STR_25(31), STR_23(29), STR_21(29), 
 35796 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_1(16), ProjectName(26), 
 35797 ;; Auto vars:     Size  Location     Type
 35798 ;;		None
 35799 ;; Return value:  Size  Location     Type
 35800 ;;		None               void
 35801 ;; Registers used:
 35802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35803 ;; Tracked objects:
 35804 ;;		On entry : 0/0
 35805 ;;		On exit  : 0/0
 35806 ;;		Unchanged: 0/0
 35807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35812 ;;Total ram usage:        2 bytes
 35813 ;; Hardware stack levels used:    1
 35814 ;; Hardware stack levels required when called:    4
 35815 ;; This function calls:
 35816 ;;		i1_UARTchar
 35817 ;;		i1_UARTstring
 35818 ;; This function is called by:
 35819 ;;		_low_isr
 35820 ;; This function uses a non-reentrant model
 35821 ;;
 35822                           
 35823                           	psect	text103
 35824  008CF4                     __ptext103:
 35825                           	opt stack 0
 35826  008CF4                     i1_UARTstringCRLN:
 35827                           	opt stack 17
 35828                           
 35829                           ;UART.c: 264: while(*data != 0)
 35830                           
 35831                           ;incstack = 0
 35832  008CF4  D016               	goto	i1l11627
 35833  008CF6                     i1l11623:
 35834                           
 35835                           ;UART.c: 265: {
 35836                           ;UART.c: 266: UARTchar(*data);
 35837  008CF6  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35838  008CFA  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35839  008CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 35840  008D00  6EF8               	movwf	tblptru,c
 35841  008D02  0E0F               	movlw	(high __ramtop+-1)
 35842  008D04  64F7               	cpfsgt	tblptrh,c
 35843  008D06  D003               	bra	i1u1336_27
 35844  008D08  0008               	tblrd		*
 35845  008D0A  50F5               	movf	tablat,w,c
 35846  008D0C  D005               	bra	i1u1336_20
 35847  008D0E                     i1u1336_27:
 35848  008D0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 35849  008D12  CFF7 FFEA          	movff	tblptrh,fsr0h
 35850  008D16  50EF               	movf	indf0,w,c
 35851  008D18                     i1u1336_20:
 35852  008D18  EC29  F04A         	call	i1_UARTchar
 35853                           
 35854                           ;UART.c: 267: *data++;
 35855  008D1C  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 35856  008D1E  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 35857  008D20  D000               	goto	i1l11627
 35858  008D22                     i1l11627:
 35859  008D22  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35860  008D26  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35861  008D2A  0E00               	movlw	low (__mediumconst shr (0+16))
 35862  008D2C  6EF8               	movwf	tblptru,c
 35863  008D2E  0E0F               	movlw	(high __ramtop+-1)
 35864  008D30  64F7               	cpfsgt	tblptrh,c
 35865  008D32  D003               	bra	i1u1337_27
 35866  008D34  0008               	tblrd		*
 35867  008D36  50F5               	movf	tablat,w,c
 35868  008D38  D005               	bra	i1u1337_20
 35869  008D3A                     i1u1337_27:
 35870  008D3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 35871  008D3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 35872  008D42  50EF               	movf	indf0,w,c
 35873  008D44                     i1u1337_20:
 35874  008D44  0900               	iorlw	0
 35875  008D46  A4D8               	btfss	status,2,c
 35876  008D48  D7D6               	goto	i1l11623
 35877                           
 35878                           ;UART.c: 268: }
 35879                           ;UART.c: 269: UARTstring(CRLN);
 35880  008D4A  0EA7               	movlw	low _CRLN
 35881  008D4C  6E02               	movwf	i1UARTstring@data,c
 35882  008D4E  0EF3               	movlw	high _CRLN
 35883  008D50  6E03               	movwf	i1UARTstring@data+1,c
 35884  008D52  EC35  F047         	call	i1_UARTstring	;wreg free
 35885  008D56  0012               	return		;funcret
 35886  008D58                     __end_ofi1_UARTstringCRLN:
 35887                           	opt stack 0
 35888                           pclatu	equ	0xFFB
 35889                           pclath	equ	0xFFA
 35890                           tblptru	equ	0xFF8
 35891                           tblptrh	equ	0xFF7
 35892                           tblptrl	equ	0xFF6
 35893                           tablat	equ	0xFF5
 35894                           prodh	equ	0xFF4
 35895                           prodl	equ	0xFF3
 35896                           intcon	equ	0xFF2
 35897                           intcon2	equ	0xFF1
 35898                           indf0	equ	0xFEF
 35899                           postinc0	equ	0xFEE
 35900                           plusw0	equ	0xFEB
 35901                           fsr0h	equ	0xFEA
 35902                           fsr0l	equ	0xFE9
 35903                           wreg	equ	0xFE8
 35904                           indf1	equ	0xFE7
 35905                           postdec1	equ	0xFE5
 35906                           fsr1h	equ	0xFE2
 35907                           fsr1l	equ	0xFE1
 35908                           bsr	equ	0xFE0
 35909                           indf2	equ	0xFDF
 35910                           postinc2	equ	0xFDE
 35911                           postdec2	equ	0xFDD
 35912                           plusw2	equ	0xFDB
 35913                           fsr2h	equ	0xFDA
 35914                           fsr2l	equ	0xFD9
 35915                           status	equ	0xFD8
 35916                           
 35917 ;; *************** function i1_UARTstring *****************
 35918 ;; Defined at:
 35919 ;;		line 202 in file "UART.c"
 35920 ;; Parameters:    Size  Location     Type
 35921 ;;  data            2    1[COMRAM] PTR unsigned char 
 35922 ;;		 -> STR_149(28), STR_92(13), STR_79(32), STR_68(14), 
 35923 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_18(5), STR_16(5), 
 35924 ;;		 -> STR_14(6), STR_12(6), STR_10(9), STR_8(21), 
 35925 ;;		 -> STR_6(10), BluetoothInitialSetup@buf(50), STR_2(4), ReceivedString(255), 
 35926 ;;		 -> CRLN(3), 
 35927 ;; Auto vars:     Size  Location     Type
 35928 ;;		None
 35929 ;; Return value:  Size  Location     Type
 35930 ;;		None               void
 35931 ;; Registers used:
 35932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35933 ;; Tracked objects:
 35934 ;;		On entry : 0/0
 35935 ;;		On exit  : 0/0
 35936 ;;		Unchanged: 0/0
 35937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35942 ;;Total ram usage:        2 bytes
 35943 ;; Hardware stack levels used:    1
 35944 ;; Hardware stack levels required when called:    3
 35945 ;; This function calls:
 35946 ;;		i1_UARTchar
 35947 ;; This function is called by:
 35948 ;;		_low_isr
 35949 ;;		i1_UARTstringCRLN
 35950 ;; This function uses a non-reentrant model
 35951 ;;
 35952                           
 35953                           	psect	text104
 35954  008E6A                     __ptext104:
 35955                           	opt stack 0
 35956  008E6A                     i1_UARTstring:
 35957                           	opt stack 17
 35958                           
 35959                           ;UART.c: 204: while(*data != 0)
 35960                           
 35961                           ;incstack = 0
 35962  008E6A  D016               	goto	i1l10533
 35963  008E6C                     i1l10529:
 35964                           
 35965                           ;UART.c: 205: {
 35966                           ;UART.c: 206: UARTchar(*data);
 35967  008E6C  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35968  008E70  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35969  008E74  0E00               	movlw	low (__mediumconst shr (0+16))
 35970  008E76  6EF8               	movwf	tblptru,c
 35971  008E78  0E0F               	movlw	(high __ramtop+-1)
 35972  008E7A  64F7               	cpfsgt	tblptrh,c
 35973  008E7C  D003               	bra	i1u1179_27
 35974  008E7E  0008               	tblrd		*
 35975  008E80  50F5               	movf	tablat,w,c
 35976  008E82  D005               	bra	i1u1179_20
 35977  008E84                     i1u1179_27:
 35978  008E84  CFF6 FFE9          	movff	tblptrl,fsr0l
 35979  008E88  CFF7 FFEA          	movff	tblptrh,fsr0h
 35980  008E8C  50EF               	movf	indf0,w,c
 35981  008E8E                     i1u1179_20:
 35982  008E8E  EC29  F04A         	call	i1_UARTchar
 35983                           
 35984                           ;UART.c: 207: *data++;
 35985  008E92  4A02               	infsnz	i1UARTstring@data,f,c
 35986  008E94  2A03               	incf	i1UARTstring@data+1,f,c
 35987  008E96  D000               	goto	i1l10533
 35988  008E98                     i1l10533:
 35989  008E98  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35990  008E9C  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35991  008EA0  0E00               	movlw	low (__mediumconst shr (0+16))
 35992  008EA2  6EF8               	movwf	tblptru,c
 35993  008EA4  0E0F               	movlw	(high __ramtop+-1)
 35994  008EA6  64F7               	cpfsgt	tblptrh,c
 35995  008EA8  D003               	bra	i1u1180_27
 35996  008EAA  0008               	tblrd		*
 35997  008EAC  50F5               	movf	tablat,w,c
 35998  008EAE  D005               	bra	i1u1180_20
 35999  008EB0                     i1u1180_27:
 36000  008EB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 36001  008EB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 36002  008EB8  50EF               	movf	indf0,w,c
 36003  008EBA                     i1u1180_20:
 36004  008EBA  0900               	iorlw	0
 36005  008EBC  A4D8               	btfss	status,2,c
 36006  008EBE  D7D6               	goto	i1l10529
 36007  008EC0  0012               	return		;funcret
 36008  008EC2                     __end_ofi1_UARTstring:
 36009                           	opt stack 0
 36010                           pclatu	equ	0xFFB
 36011                           pclath	equ	0xFFA
 36012                           tblptru	equ	0xFF8
 36013                           tblptrh	equ	0xFF7
 36014                           tblptrl	equ	0xFF6
 36015                           tablat	equ	0xFF5
 36016                           prodh	equ	0xFF4
 36017                           prodl	equ	0xFF3
 36018                           intcon	equ	0xFF2
 36019                           intcon2	equ	0xFF1
 36020                           indf0	equ	0xFEF
 36021                           postinc0	equ	0xFEE
 36022                           plusw0	equ	0xFEB
 36023                           fsr0h	equ	0xFEA
 36024                           fsr0l	equ	0xFE9
 36025                           wreg	equ	0xFE8
 36026                           indf1	equ	0xFE7
 36027                           postdec1	equ	0xFE5
 36028                           fsr1h	equ	0xFE2
 36029                           fsr1l	equ	0xFE1
 36030                           bsr	equ	0xFE0
 36031                           indf2	equ	0xFDF
 36032                           postinc2	equ	0xFDE
 36033                           postdec2	equ	0xFDD
 36034                           plusw2	equ	0xFDB
 36035                           fsr2h	equ	0xFDA
 36036                           fsr2l	equ	0xFD9
 36037                           status	equ	0xFD8
 36038                           
 36039 ;; *************** function i1_ReadUSART *****************
 36040 ;; Defined at:
 36041 ;;		line 227 in file "UART.c"
 36042 ;; Parameters:    Size  Location     Type
 36043 ;;		None
 36044 ;; Auto vars:     Size  Location     Type
 36045 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 36046 ;; Return value:  Size  Location     Type
 36047 ;;                  1    wreg      unsigned char 
 36048 ;; Registers used:
 36049 ;;		wreg, status,2
 36050 ;; Tracked objects:
 36051 ;;		On entry : 0/0
 36052 ;;		On exit  : 0/0
 36053 ;;		Unchanged: 0/0
 36054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36059 ;;Total ram usage:        1 bytes
 36060 ;; Hardware stack levels used:    1
 36061 ;; Hardware stack levels required when called:    2
 36062 ;; This function calls:
 36063 ;;		Nothing
 36064 ;; This function is called by:
 36065 ;;		_low_isr
 36066 ;; This function uses a non-reentrant model
 36067 ;;
 36068                           
 36069                           	psect	text105
 36070  009496                     __ptext105:
 36071                           	opt stack 0
 36072  009496                     i1_ReadUSART:
 36073                           	opt stack 19
 36074                           
 36075                           ;UART.c: 229: unsigned char data;
 36076                           ;UART.c: 231: if(RCSTAbits.OERR)
 36077                           
 36078                           ;incstack = 0
 36079  009496  A2AB               	btfss	4011,1,c	;volatile
 36080  009498  D004               	goto	i1l668
 36081                           
 36082                           ;UART.c: 232: {
 36083                           ;UART.c: 234: RCSTAbits.CREN = 0;
 36084  00949A  98AB               	bcf	4011,4,c	;volatile
 36085                           
 36086                           ;UART.c: 235: RCSTAbits.CREN = 1;
 36087  00949C  88AB               	bsf	4011,4,c	;volatile
 36088                           
 36089                           ;UART.c: 236: return 0;
 36090  00949E  0E00               	movlw	0
 36091  0094A0  0012               	return	
 36092  0094A2                     i1l668:
 36093                           
 36094                           ;UART.c: 237: }
 36095                           ;UART.c: 239: data = RCREG;
 36096  0094A2  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 36097                           
 36098                           ;UART.c: 240: return (data);
 36099  0094A6  5001               	movf	i1ReadUSART@data,w,c
 36100  0094A8  0012               	return	
 36101  0094AA  0012               	return		;funcret
 36102  0094AC                     __end_ofi1_ReadUSART:
 36103                           	opt stack 0
 36104                           pclatu	equ	0xFFB
 36105                           pclath	equ	0xFFA
 36106                           tblptru	equ	0xFF8
 36107                           tblptrh	equ	0xFF7
 36108                           tblptrl	equ	0xFF6
 36109                           tablat	equ	0xFF5
 36110                           prodh	equ	0xFF4
 36111                           prodl	equ	0xFF3
 36112                           intcon	equ	0xFF2
 36113                           intcon2	equ	0xFF1
 36114                           indf0	equ	0xFEF
 36115                           postinc0	equ	0xFEE
 36116                           plusw0	equ	0xFEB
 36117                           fsr0h	equ	0xFEA
 36118                           fsr0l	equ	0xFE9
 36119                           wreg	equ	0xFE8
 36120                           indf1	equ	0xFE7
 36121                           postdec1	equ	0xFE5
 36122                           fsr1h	equ	0xFE2
 36123                           fsr1l	equ	0xFE1
 36124                           bsr	equ	0xFE0
 36125                           indf2	equ	0xFDF
 36126                           postinc2	equ	0xFDE
 36127                           postdec2	equ	0xFDD
 36128                           plusw2	equ	0xFDB
 36129                           fsr2h	equ	0xFDA
 36130                           fsr2l	equ	0xFD9
 36131                           status	equ	0xFD8
 36132                           
 36133 ;; *************** function i1_BlueConnected *****************
 36134 ;; Defined at:
 36135 ;;		line 91 in file "Bluetooth.c"
 36136 ;; Parameters:    Size  Location     Type
 36137 ;;		None
 36138 ;; Auto vars:     Size  Location     Type
 36139 ;;		None
 36140 ;; Return value:  Size  Location     Type
 36141 ;;                  1    wreg      unsigned char 
 36142 ;; Registers used:
 36143 ;;		wreg
 36144 ;; Tracked objects:
 36145 ;;		On entry : 0/0
 36146 ;;		On exit  : 0/0
 36147 ;;		Unchanged: 0/0
 36148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36153 ;;Total ram usage:        0 bytes
 36154 ;; Hardware stack levels used:    1
 36155 ;; Hardware stack levels required when called:    2
 36156 ;; This function calls:
 36157 ;;		Nothing
 36158 ;; This function is called by:
 36159 ;;		_low_isr
 36160 ;; This function uses a non-reentrant model
 36161 ;;
 36162                           
 36163                           	psect	text106
 36164  009578                     __ptext106:
 36165                           	opt stack 0
 36166  009578                     i1_BlueConnected:
 36167                           	opt stack 19
 36168                           
 36169                           ;Bluetooth.c: 94: if((PORTA & 0x02) == 0x02)
 36170                           
 36171                           ;incstack = 0
 36172  009578  A280               	btfss	3968,1,c	;volatile
 36173  00957A  D002               	goto	i1l11651
 36174                           
 36175                           ;Bluetooth.c: 95: {
 36176                           ;Bluetooth.c: 96: return 1;
 36177  00957C  0E01               	movlw	1
 36178  00957E  0012               	return	
 36179  009580                     i1l11651:
 36180                           
 36181                           ;Bluetooth.c: 97: }
 36182                           ;Bluetooth.c: 98: return 0;
 36183  009580  0E00               	movlw	0
 36184  009582  0012               	return	
 36185  009584  0012               	return		;funcret
 36186  009586                     __end_ofi1_BlueConnected:
 36187                           	opt stack 0
 36188                           pclatu	equ	0xFFB
 36189                           pclath	equ	0xFFA
 36190                           tblptru	equ	0xFF8
 36191                           tblptrh	equ	0xFF7
 36192                           tblptrl	equ	0xFF6
 36193                           tablat	equ	0xFF5
 36194                           prodh	equ	0xFF4
 36195                           prodl	equ	0xFF3
 36196                           intcon	equ	0xFF2
 36197                           intcon2	equ	0xFF1
 36198                           indf0	equ	0xFEF
 36199                           postinc0	equ	0xFEE
 36200                           plusw0	equ	0xFEB
 36201                           fsr0h	equ	0xFEA
 36202                           fsr0l	equ	0xFE9
 36203                           wreg	equ	0xFE8
 36204                           indf1	equ	0xFE7
 36205                           postdec1	equ	0xFE5
 36206                           fsr1h	equ	0xFE2
 36207                           fsr1l	equ	0xFE1
 36208                           bsr	equ	0xFE0
 36209                           indf2	equ	0xFDF
 36210                           postinc2	equ	0xFDE
 36211                           postdec2	equ	0xFDD
 36212                           plusw2	equ	0xFDB
 36213                           fsr2h	equ	0xFDA
 36214                           fsr2l	equ	0xFD9
 36215                           status	equ	0xFD8
 36216                           
 36217 ;; *************** function _IsCharacter *****************
 36218 ;; Defined at:
 36219 ;;		line 113 in file "MISC.c"
 36220 ;; Parameters:    Size  Location     Type
 36221 ;;  data            1    wreg     unsigned char 
 36222 ;; Auto vars:     Size  Location     Type
 36223 ;;  data            1    0[COMRAM] unsigned char 
 36224 ;; Return value:  Size  Location     Type
 36225 ;;                  1    wreg      unsigned char 
 36226 ;; Registers used:
 36227 ;;		wreg, status,2, status,0
 36228 ;; Tracked objects:
 36229 ;;		On entry : 0/0
 36230 ;;		On exit  : 0/0
 36231 ;;		Unchanged: 0/0
 36232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36237 ;;Total ram usage:        1 bytes
 36238 ;; Hardware stack levels used:    1
 36239 ;; Hardware stack levels required when called:    2
 36240 ;; This function calls:
 36241 ;;		Nothing
 36242 ;; This function is called by:
 36243 ;;		_low_isr
 36244 ;; This function uses a non-reentrant model
 36245 ;;
 36246                           
 36247                           	psect	text107
 36248  00943A                     __ptext107:
 36249                           	opt stack 0
 36250  00943A                     _IsCharacter:
 36251                           	opt stack 19
 36252                           
 36253                           ;incstack = 0
 36254                           ;IsCharacter@data stored from wreg
 36255  00943A  6E01               	movwf	IsCharacter@data,c
 36256                           
 36257                           ;MISC.c: 115: if(data >= 32 && data <= 126)
 36258  00943C  0E1F               	movlw	31
 36259  00943E  6401               	cpfsgt	IsCharacter@data,c
 36260  009440  D005               	goto	i1l11419
 36261  009442  0E7F               	movlw	127
 36262  009444  6001               	cpfslt	IsCharacter@data,c
 36263  009446  D002               	goto	i1l11419
 36264                           
 36265                           ;MISC.c: 116: {
 36266                           ;MISC.c: 117: return 1;
 36267  009448  0E01               	movlw	1
 36268  00944A  0012               	return	
 36269  00944C                     i1l11419:
 36270                           
 36271                           ;MISC.c: 118: }
 36272                           ;MISC.c: 119: return 0;
 36273  00944C  0E00               	movlw	0
 36274  00944E  0012               	return	
 36275  009450  0012               	return		;funcret
 36276  009452                     __end_of_IsCharacter:
 36277                           	opt stack 0
 36278                           pclatu	equ	0xFFB
 36279                           pclath	equ	0xFFA
 36280                           tblptru	equ	0xFF8
 36281                           tblptrh	equ	0xFF7
 36282                           tblptrl	equ	0xFF6
 36283                           tablat	equ	0xFF5
 36284                           prodh	equ	0xFF4
 36285                           prodl	equ	0xFF3
 36286                           intcon	equ	0xFF2
 36287                           intcon2	equ	0xFF1
 36288                           indf0	equ	0xFEF
 36289                           postinc0	equ	0xFEE
 36290                           plusw0	equ	0xFEB
 36291                           fsr0h	equ	0xFEA
 36292                           fsr0l	equ	0xFE9
 36293                           wreg	equ	0xFE8
 36294                           indf1	equ	0xFE7
 36295                           postdec1	equ	0xFE5
 36296                           fsr1h	equ	0xFE2
 36297                           fsr1l	equ	0xFE1
 36298                           bsr	equ	0xFE0
 36299                           indf2	equ	0xFDF
 36300                           postinc2	equ	0xFDE
 36301                           postdec2	equ	0xFDD
 36302                           plusw2	equ	0xFDB
 36303                           fsr2h	equ	0xFDA
 36304                           fsr2l	equ	0xFD9
 36305                           status	equ	0xFD8
 36306                           
 36307 ;; *************** function _EraseScreen *****************
 36308 ;; Defined at:
 36309 ;;		line 308 in file "UART.c"
 36310 ;; Parameters:    Size  Location     Type
 36311 ;;  characters      1    wreg     unsigned char 
 36312 ;; Auto vars:     Size  Location     Type
 36313 ;;  characters      1    1[COMRAM] unsigned char 
 36314 ;;  i               1    2[COMRAM] unsigned char 
 36315 ;; Return value:  Size  Location     Type
 36316 ;;		None               void
 36317 ;; Registers used:
 36318 ;;		wreg, status,2, status,0, cstack
 36319 ;; Tracked objects:
 36320 ;;		On entry : 0/0
 36321 ;;		On exit  : 0/0
 36322 ;;		Unchanged: 0/0
 36323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36328 ;;Total ram usage:        2 bytes
 36329 ;; Hardware stack levels used:    1
 36330 ;; Hardware stack levels required when called:    3
 36331 ;; This function calls:
 36332 ;;		i1_UARTchar
 36333 ;; This function is called by:
 36334 ;;		_low_isr
 36335 ;; This function uses a non-reentrant model
 36336 ;;
 36337                           
 36338                           	psect	text108
 36339  0093A2                     __ptext108:
 36340                           	opt stack 0
 36341  0093A2                     _EraseScreen:
 36342                           	opt stack 18
 36343                           
 36344                           ;incstack = 0
 36345                           ;EraseScreen@characters stored from wreg
 36346  0093A2  6E02               	movwf	EraseScreen@characters,c
 36347                           
 36348                           ;UART.c: 310: unsigned char i;
 36349                           ;UART.c: 312: UARTchar('\r');
 36350  0093A4  0E0D               	movlw	13
 36351  0093A6  EC29  F04A         	call	i1_UARTchar
 36352                           
 36353                           ;UART.c: 313: for (i = 0; i < characters; i++)
 36354  0093AA  0E00               	movlw	0
 36355  0093AC  6E03               	movwf	EraseScreen@i,c
 36356  0093AE  D005               	goto	i1l11431
 36357  0093B0                     i1l11427:
 36358                           
 36359                           ;UART.c: 314: {
 36360                           ;UART.c: 315: UARTchar(' ');
 36361  0093B0  0E20               	movlw	32
 36362  0093B2  EC29  F04A         	call	i1_UARTchar
 36363  0093B6  2A03               	incf	EraseScreen@i,f,c
 36364  0093B8  D000               	goto	i1l11431
 36365  0093BA                     i1l11431:
 36366  0093BA  5002               	movf	EraseScreen@characters,w,c
 36367  0093BC  5C03               	subwf	EraseScreen@i,w,c
 36368  0093BE  A0D8               	btfss	status,0,c
 36369  0093C0  D7F7               	goto	i1l11427
 36370                           
 36371                           ;UART.c: 316: }
 36372                           ;UART.c: 317: UARTchar('\r');
 36373  0093C2  0E0D               	movlw	13
 36374  0093C4  EC29  F04A         	call	i1_UARTchar
 36375  0093C8  0012               	return		;funcret
 36376  0093CA                     __end_of_EraseScreen:
 36377                           	opt stack 0
 36378                           pclatu	equ	0xFFB
 36379                           pclath	equ	0xFFA
 36380                           tblptru	equ	0xFF8
 36381                           tblptrh	equ	0xFF7
 36382                           tblptrl	equ	0xFF6
 36383                           tablat	equ	0xFF5
 36384                           prodh	equ	0xFF4
 36385                           prodl	equ	0xFF3
 36386                           intcon	equ	0xFF2
 36387                           intcon2	equ	0xFF1
 36388                           indf0	equ	0xFEF
 36389                           postinc0	equ	0xFEE
 36390                           plusw0	equ	0xFEB
 36391                           fsr0h	equ	0xFEA
 36392                           fsr0l	equ	0xFE9
 36393                           wreg	equ	0xFE8
 36394                           indf1	equ	0xFE7
 36395                           postdec1	equ	0xFE5
 36396                           fsr1h	equ	0xFE2
 36397                           fsr1l	equ	0xFE1
 36398                           bsr	equ	0xFE0
 36399                           indf2	equ	0xFDF
 36400                           postinc2	equ	0xFDE
 36401                           postdec2	equ	0xFDD
 36402                           plusw2	equ	0xFDB
 36403                           fsr2h	equ	0xFDA
 36404                           fsr2l	equ	0xFD9
 36405                           status	equ	0xFD8
 36406                           
 36407 ;; *************** function i1_UARTchar *****************
 36408 ;; Defined at:
 36409 ;;		line 188 in file "UART.c"
 36410 ;; Parameters:    Size  Location     Type
 36411 ;;  data            1    wreg     unsigned char 
 36412 ;; Auto vars:     Size  Location     Type
 36413 ;;  data            1    0[COMRAM] unsigned char 
 36414 ;; Return value:  Size  Location     Type
 36415 ;;		None               void
 36416 ;; Registers used:
 36417 ;;		wreg, status,2
 36418 ;; Tracked objects:
 36419 ;;		On entry : 0/0
 36420 ;;		On exit  : 0/0
 36421 ;;		Unchanged: 0/0
 36422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36427 ;;Total ram usage:        1 bytes
 36428 ;; Hardware stack levels used:    1
 36429 ;; Hardware stack levels required when called:    2
 36430 ;; This function calls:
 36431 ;;		Nothing
 36432 ;; This function is called by:
 36433 ;;		_EraseScreen
 36434 ;;		_low_isr
 36435 ;;		i1_UARTstring
 36436 ;;		i1_UARTstringCRLN
 36437 ;; This function uses a non-reentrant model
 36438 ;;
 36439                           
 36440                           	psect	text109
 36441  009452                     __ptext109:
 36442                           	opt stack 0
 36443  009452                     i1_UARTchar:
 36444                           	opt stack 17
 36445                           
 36446                           ;incstack = 0
 36447                           ;i1UARTchar@data stored from wreg
 36448  009452  6E01               	movwf	i1UARTchar@data,c
 36449                           
 36450                           ;UART.c: 190: if(data != 0)
 36451  009454  5001               	movf	i1UARTchar@data,w,c
 36452  009456  B4D8               	btfsc	status,2,c
 36453  009458  0012               	return	
 36454                           
 36455                           ;UART.c: 191: {
 36456                           ;UART.c: 192: TXREG = data;
 36457  00945A  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 36458                           
 36459                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 36460  00945E  D000               	goto	i1l653
 36461  009460                     i1l653:
 36462  009460  B2AC               	btfsc	4012,1,c	;volatile
 36463  009462  0012               	return	
 36464  009464  D7FD               	goto	i1l653
 36465  009466  0012               	return	
 36466  009468  0012               	return		;funcret
 36467  00946A                     __end_ofi1_UARTchar:
 36468                           	opt stack 0
 36469                           pclatu	equ	0xFFB
 36470                           pclath	equ	0xFFA
 36471                           tblptru	equ	0xFF8
 36472                           tblptrh	equ	0xFF7
 36473                           tblptrl	equ	0xFF6
 36474                           tablat	equ	0xFF5
 36475                           prodh	equ	0xFF4
 36476                           prodl	equ	0xFF3
 36477                           intcon	equ	0xFF2
 36478                           intcon2	equ	0xFF1
 36479                           indf0	equ	0xFEF
 36480                           postinc0	equ	0xFEE
 36481                           plusw0	equ	0xFEB
 36482                           fsr0h	equ	0xFEA
 36483                           fsr0l	equ	0xFE9
 36484                           wreg	equ	0xFE8
 36485                           indf1	equ	0xFE7
 36486                           postdec1	equ	0xFE5
 36487                           fsr1h	equ	0xFE2
 36488                           fsr1l	equ	0xFE1
 36489                           bsr	equ	0xFE0
 36490                           indf2	equ	0xFDF
 36491                           postinc2	equ	0xFDE
 36492                           postdec2	equ	0xFDD
 36493                           plusw2	equ	0xFDB
 36494                           fsr2h	equ	0xFDA
 36495                           fsr2l	equ	0xFD9
 36496                           status	equ	0xFD8
 36497                           
 36498 ;; *************** function _high_isr *****************
 36499 ;; Defined at:
 36500 ;;		line 59 in file "interrupts.c"
 36501 ;; Parameters:    Size  Location     Type
 36502 ;;		None
 36503 ;; Auto vars:     Size  Location     Type
 36504 ;;  Time0           2   26[BANK0 ] unsigned int 
 36505 ;;  IRpin           1   25[BANK0 ] unsigned char 
 36506 ;; Return value:  Size  Location     Type
 36507 ;;		None               void
 36508 ;; Registers used:
 36509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36510 ;; Tracked objects:
 36511 ;;		On entry : 0/0
 36512 ;;		On exit  : 0/0
 36513 ;;		Unchanged: 0/0
 36514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36516 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36517 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36518 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36519 ;;Total ram usage:       21 bytes
 36520 ;; Hardware stack levels used:    1
 36521 ;; Hardware stack levels required when called:    1
 36522 ;; This function calls:
 36523 ;;		_IRrawToNEC
 36524 ;;		_ResetTimer3
 36525 ;;		_SetTimer0
 36526 ;;		i2_ReadIRpin
 36527 ;;		i2_ResetTimer0
 36528 ;;		i2_cleanBuffer16bit
 36529 ;; This function is called by:
 36530 ;;		Interrupt level 2
 36531 ;; This function uses a non-reentrant model
 36532 ;;
 36533                           
 36534                           	psect	intcode
 36535  000008                     __pintcode:
 36536                           	opt stack 0
 36537  000008                     _high_isr:
 36538                           	opt stack 17
 36539                           
 36540                           ;incstack = 0
 36541  000008  CFFA F06B          	movff	pclath,??_high_isr+4
 36542  00000C  CFFB F06C          	movff	pclatu,??_high_isr+5
 36543  000010  CFE9 F06D          	movff	fsr0l,??_high_isr+6
 36544  000014  EFD0  F01E         	goto	int_func
 36545                           pclatu	equ	0xFFB
 36546                           pclath	equ	0xFFA
 36547                           tblptru	equ	0xFF8
 36548                           tblptrh	equ	0xFF7
 36549                           tblptrl	equ	0xFF6
 36550                           tablat	equ	0xFF5
 36551                           prodh	equ	0xFF4
 36552                           prodl	equ	0xFF3
 36553                           intcon	equ	0xFF2
 36554                           intcon2	equ	0xFF1
 36555                           indf0	equ	0xFEF
 36556                           postinc0	equ	0xFEE
 36557                           plusw0	equ	0xFEB
 36558                           fsr0h	equ	0xFEA
 36559                           fsr0l	equ	0xFE9
 36560                           wreg	equ	0xFE8
 36561                           indf1	equ	0xFE7
 36562                           postdec1	equ	0xFE5
 36563                           fsr1h	equ	0xFE2
 36564                           fsr1l	equ	0xFE1
 36565                           bsr	equ	0xFE0
 36566                           indf2	equ	0xFDF
 36567                           postinc2	equ	0xFDE
 36568                           postdec2	equ	0xFDD
 36569                           plusw2	equ	0xFDB
 36570                           fsr2h	equ	0xFDA
 36571                           fsr2l	equ	0xFD9
 36572                           status	equ	0xFD8
 36573                           
 36574                           	psect	intcode_body
 36575  003DA0                     __pintcode_body:
 36576                           	opt stack 17
 36577  003DA0                     int_func:
 36578                           	opt stack 17
 36579  003DA0  CFEA F06E          	movff	fsr0h,??_high_isr+7
 36580  003DA4  CFE1 F06F          	movff	fsr1l,??_high_isr+8
 36581  003DA8  CFE2 F070          	movff	fsr1h,??_high_isr+9
 36582  003DAC  CFD9 F071          	movff	fsr2l,??_high_isr+10
 36583  003DB0  CFDA F072          	movff	fsr2h,??_high_isr+11
 36584  003DB4  CFF3 F073          	movff	prodl,??_high_isr+12
 36585  003DB8  CFF4 F074          	movff	prodh,??_high_isr+13
 36586  003DBC  CFF6 F075          	movff	tblptrl,??_high_isr+14
 36587  003DC0  CFF7 F076          	movff	tblptrh,??_high_isr+15
 36588  003DC4  CFF8 F077          	movff	tblptru,??_high_isr+16
 36589  003DC8  CFF5 F078          	movff	tablat,??_high_isr+17
 36590                           
 36591                           ;interrupts.c: 68: unsigned char IRpin;
 36592                           ;interrupts.c: 69: unsigned int Time0;
 36593                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 36594  003DCC  9EF2               	bcf	intcon,7,c	;volatile
 36595                           
 36596                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 36597  003DCE  A0F2               	btfss	intcon,0,c	;volatile
 36598  003DD0  D08F               	goto	i2l1218
 36599                           
 36600                           ;interrupts.c: 74: {
 36601                           ;interrupts.c: 75: __nop();
 36602  003DD2  F000               	nop	
 36603                           
 36604                           ;interrupts.c: 76: __nop();
 36605  003DD4  F000               	nop	
 36606                           
 36607                           ;interrupts.c: 77: IRtimeout = 0;
 36608  003DD6  0E00               	movlw	0
 36609  003DD8  0102               	movlb	2	; () banked
 36610  003DDA  6FCB               	movwf	_IRtimeout& (0+255),b
 36611  003DDC  0E00               	movlw	0
 36612  003DDE  6FCC               	movwf	(_IRtimeout+1)& (0+255),b
 36613  003DE0  0E00               	movlw	0
 36614  003DE2  6FCD               	movwf	(_IRtimeout+2)& (0+255),b
 36615  003DE4  0E00               	movlw	0
 36616  003DE6  6FCE               	movwf	(_IRtimeout+3)& (0+255),b
 36617                           
 36618                           ; BSR set to: 2
 36619                           ;interrupts.c: 78: IRpin = ReadIRpin();
 36620  003DE8  ECC3  F04A         	call	i2_ReadIRpin	;wreg free
 36621  003DEC  0100               	movlb	0	; () banked
 36622  003DEE  6F79               	movwf	high_isr@IRpin& (0+255),b
 36623                           
 36624                           ; BSR set to: 0
 36625                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 36626  003DF0  502F               	movf	_IRpinOLD,w,c
 36627  003DF2  0100               	movlb	0	; () banked
 36628  003DF4  1979               	xorwf	high_isr@IRpin& (0+255),w,b
 36629  003DF6  B4D8               	btfsc	status,2,c
 36630  003DF8  D075               	goto	i2l1219
 36631                           
 36632                           ; BSR set to: 0
 36633                           ;interrupts.c: 80: {
 36634                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 36635  003DFA  8ED5               	bsf	4053,7,c	;volatile
 36636                           
 36637                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 36638  003DFC  8AF2               	bsf	intcon,5,c	;volatile
 36639                           
 36640                           ; BSR set to: 0
 36641                           ;interrupts.c: 83: ReceivingIR = 19;
 36642  003DFE  0E13               	movlw	19
 36643  003E00  6E44               	movwf	_ReceivingIR,c	;volatile
 36644                           
 36645                           ;interrupts.c: 84: IR_New_Code = 0;
 36646  003E02  0E00               	movlw	0
 36647  003E04  0100               	movlb	0	; () banked
 36648  003E06  6FE1               	movwf	_IR_New_Code& (0+255),b
 36649                           
 36650                           ; BSR set to: 0
 36651                           ;interrupts.c: 85: Time0 = TMR0L;
 36652  003E08  CFD6 F07A          	movff	4054,high_isr@Time0	;volatile
 36653  003E0C  0100               	movlb	0	; () banked
 36654  003E0E  6B7B               	clrf	(high_isr@Time0+1)& (0+255),b
 36655                           
 36656                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 36657  003E10  50D7               	movf	4055,w,c	;volatile
 36658  003E12  0100               	movlb	0	; () banked
 36659  003E14  277B               	addwf	(high_isr@Time0+1)& (0+255),f,b
 36660                           
 36661                           ; BSR set to: 0
 36662                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 36663  003E16  0E64               	movlw	100
 36664  003E18  6030               	cpfslt	_IRrawCodeNum,c
 36665  003E1A  D05F               	goto	i2l1220
 36666                           
 36667                           ; BSR set to: 0
 36668                           ;interrupts.c: 88: {
 36669                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 36670  003E1C  5030               	movf	_IRrawCodeNum,w,c
 36671  003E1E  B4D8               	btfsc	status,2,c
 36672  003E20  D054               	goto	i2l16469
 36673                           
 36674                           ; BSR set to: 0
 36675  003E22  0E65               	movlw	101
 36676  003E24  6030               	cpfslt	_IRrawCodeNum,c
 36677  003E26  D051               	goto	i2l16469
 36678                           
 36679                           ; BSR set to: 0
 36680                           ;interrupts.c: 90: {
 36681                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 36682  003E28  0EFE               	movlw	254
 36683  003E2A  0100               	movlb	0	; () banked
 36684  003E2C  6F67               	movwf	??_high_isr& (0+255),b
 36685  003E2E  0EFF               	movlw	255
 36686  003E30  0100               	movlb	0	; () banked
 36687  003E32  6F68               	movwf	(??_high_isr+1)& (0+255),b
 36688  003E34  5030               	movf	_IRrawCodeNum,w,c
 36689  003E36  0100               	movlb	0	; () banked
 36690  003E38  6F69               	movwf	(??_high_isr+2)& (0+255),b
 36691  003E3A  6B6A               	clrf	(??_high_isr+3)& (0+255),b
 36692  003E3C  90D8               	bcf	status,0,c
 36693  003E3E  0100               	movlb	0	; () banked
 36694  003E40  3769               	rlcf	(??_high_isr+2)& (0+255),f,b
 36695  003E42  376A               	rlcf	(??_high_isr+3)& (0+255),f,b
 36696  003E44  0100               	movlb	0	; () banked
 36697  003E46  5167               	movf	??_high_isr& (0+255),w,b
 36698  003E48  0100               	movlb	0	; () banked
 36699  003E4A  2769               	addwf	(??_high_isr+2)& (0+255),f,b
 36700  003E4C  0100               	movlb	0	; () banked
 36701  003E4E  5168               	movf	(??_high_isr+1)& (0+255),w,b
 36702  003E50  0100               	movlb	0	; () banked
 36703  003E52  236A               	addwfc	(??_high_isr+3)& (0+255),f,b
 36704  003E54  0E00               	movlw	low _IRRawCode
 36705  003E56  0100               	movlb	0	; () banked
 36706  003E58  2569               	addwf	(??_high_isr+2)& (0+255),w,b
 36707  003E5A  6ED9               	movwf	fsr2l,c
 36708  003E5C  0E07               	movlw	high _IRRawCode
 36709  003E5E  0100               	movlb	0	; () banked
 36710  003E60  216A               	addwfc	(??_high_isr+3)& (0+255),w,b
 36711  003E62  6EDA               	movwf	fsr2h,c
 36712  003E64  C07A  FFDE         	movff	high_isr@Time0,postinc2
 36713  003E68  C07B  FFDD         	movff	high_isr@Time0+1,postdec2
 36714                           
 36715                           ; BSR set to: 0
 36716                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 36717  003E6C  0E09               	movlw	9
 36718  003E6E  0100               	movlb	0	; () banked
 36719  003E70  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36720  003E72  0E52               	movlw	82
 36721  003E74  0100               	movlb	0	; () banked
 36722  003E76  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36723  003E78  B0D8               	btfsc	status,0,c
 36724  003E7A  D00C               	goto	i2l16459
 36725                           
 36726                           ; BSR set to: 0
 36727  003E7C  0E38               	movlw	56
 36728  003E7E  0100               	movlb	0	; () banked
 36729  003E80  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36730  003E82  0E4A               	movlw	74
 36731  003E84  0100               	movlb	0	; () banked
 36732  003E86  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36733  003E88  A0D8               	btfss	status,0,c
 36734  003E8A  D004               	goto	i2l16459
 36735                           
 36736                           ; BSR set to: 0
 36737                           ;interrupts.c: 93: {
 36738                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 36739  003E8C  987D               	bcf	3965,4,c	;volatile
 36740                           
 36741                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 36742  003E8E  96F2               	bcf	intcon,3,c	;volatile
 36743                           
 36744                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 36745  003E90  84F2               	bsf	intcon,2,c	;volatile
 36746                           
 36747                           ;interrupts.c: 99: }
 36748  003E92  D01E               	goto	i2l16471
 36749  003E94                     i2l16459:
 36750                           
 36751                           ; BSR set to: 0
 36752                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 36753  003E94  0E51               	movlw	81
 36754  003E96  0100               	movlb	0	; () banked
 36755  003E98  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36756  003E9A  0EC3               	movlw	195
 36757  003E9C  0100               	movlb	0	; () banked
 36758  003E9E  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36759  003EA0  B0D8               	btfsc	status,0,c
 36760  003EA2  D010               	goto	i2l16467
 36761                           
 36762                           ; BSR set to: 0
 36763  003EA4  0EC8               	movlw	200
 36764  003EA6  0100               	movlb	0	; () banked
 36765  003EA8  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36766  003EAA  0EAF               	movlw	175
 36767  003EAC  0100               	movlb	0	; () banked
 36768  003EAE  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36769  003EB0  A0D8               	btfss	status,0,c
 36770  003EB2  D008               	goto	i2l16467
 36771                           
 36772                           ; BSR set to: 0
 36773                           ;interrupts.c: 101: {
 36774                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 36775  003EB4  987D               	bcf	3965,4,c	;volatile
 36776                           
 36777                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 36778  003EB6  96F2               	bcf	intcon,3,c	;volatile
 36779                           
 36780                           ; BSR set to: 0
 36781                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 36782  003EB8  0E8F               	movlw	143
 36783  003EBA  6E1C               	movwf	SetTimer0@temp+1,c
 36784  003EBC  681B               	setf	SetTimer0@temp,c
 36785  003EBE  ECDE  F04A         	call	_SetTimer0	;wreg free
 36786                           
 36787                           ;interrupts.c: 107: }
 36788  003EC2  D006               	goto	i2l16471
 36789  003EC4                     i2l16467:
 36790                           
 36791                           ;interrupts.c: 108: else
 36792                           ;interrupts.c: 109: {
 36793                           ;interrupts.c: 110: ResetTimer0();
 36794  003EC4  ECD9  F04A         	call	i2_ResetTimer0	;wreg free
 36795                           
 36796                           ;interrupts.c: 111: }
 36797                           ;interrupts.c: 112: }
 36798  003EC8  D003               	goto	i2l16471
 36799  003ECA                     i2l16469:
 36800                           
 36801                           ;interrupts.c: 113: else
 36802                           ;interrupts.c: 114: {
 36803                           ;interrupts.c: 115: ResetTimer0();
 36804  003ECA  ECD9  F04A         	call	i2_ResetTimer0	;wreg free
 36805  003ECE  D000               	goto	i2l16471
 36806  003ED0                     i2l16471:
 36807                           
 36808                           ;interrupts.c: 116: }
 36809                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 36810  003ED0  0E65               	movlw	101
 36811  003ED2  6030               	cpfslt	_IRrawCodeNum,c
 36812  003ED4  D004               	goto	i2l1228
 36813                           
 36814                           ;interrupts.c: 118: {
 36815                           ;interrupts.c: 119: IRrawCodeNum++;
 36816  003ED6  2A30               	incf	_IRrawCodeNum,f,c
 36817                           
 36818                           ;interrupts.c: 120: }
 36819                           ;interrupts.c: 121: }
 36820  003ED8  D002               	goto	i2l1228
 36821  003EDA                     i2l1220:
 36822                           
 36823                           ; BSR set to: 0
 36824                           ;interrupts.c: 122: else
 36825                           ;interrupts.c: 123: {
 36826                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 36827  003EDA  987D               	bcf	3965,4,c	;volatile
 36828                           
 36829                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 36830  003EDC  96F2               	bcf	intcon,3,c	;volatile
 36831  003EDE                     i2l1228:
 36832                           
 36833                           ;interrupts.c: 126: }
 36834                           ;interrupts.c: 127: IRpinOLD = IRpin;
 36835  003EDE  C079  F02F         	movff	high_isr@IRpin,_IRpinOLD
 36836                           
 36837                           ;interrupts.c: 128: }
 36838  003EE2  D002               	goto	i2l16475
 36839  003EE4                     i2l1219:
 36840                           
 36841                           ; BSR set to: 0
 36842                           ;interrupts.c: 129: else
 36843                           ;interrupts.c: 130: {
 36844                           ;interrupts.c: 132: __nop();
 36845  003EE4  F000               	nop	
 36846  003EE6  D000               	goto	i2l16475
 36847  003EE8                     i2l16475:
 36848                           
 36849                           ;interrupts.c: 133: }
 36850                           ;interrupts.c: 135: ReadIRpin();
 36851  003EE8  ECC3  F04A         	call	i2_ReadIRpin	;wreg free
 36852                           
 36853                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 36854  003EEC  90F2               	bcf	intcon,0,c	;volatile
 36855                           
 36856                           ;interrupts.c: 137: }
 36857  003EEE  D218               	goto	i2l1230
 36858  003EF0                     i2l1218:
 36859                           
 36860                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 36861  003EF0  A4F2               	btfss	intcon,2,c	;volatile
 36862  003EF2  D030               	goto	i2l1231
 36863                           
 36864                           ;interrupts.c: 139: {
 36865                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 36866  003EF4  9AF2               	bcf	intcon,5,c	;volatile
 36867                           
 36868                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 36869  003EF6  9ED5               	bcf	4053,7,c	;volatile
 36870                           
 36871                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 36872  003EF8  0E03               	movlw	3
 36873  003EFA  6430               	cpfsgt	_IRrawCodeNum,c
 36874  003EFC  D00E               	goto	i2l1232
 36875                           
 36876                           ;interrupts.c: 144: {
 36877                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 36878  003EFE  0E00               	movlw	low _IRRawCode
 36879  003F00  6E1B               	movwf	IRrawToNEC@Raw,c
 36880  003F02  0E07               	movlw	high _IRRawCode
 36881  003F04  6E1C               	movwf	IRrawToNEC@Raw+1,c
 36882  003F06  0EDD               	movlw	low _IR_NEC
 36883  003F08  6E1D               	movwf	IRrawToNEC@NEC,c
 36884  003F0A  0E00               	movlw	high _IR_NEC
 36885  003F0C  6E1E               	movwf	IRrawToNEC@NEC+1,c
 36886  003F0E  0E01               	movlw	1
 36887  003F10  6E1F               	movwf	IRrawToNEC@Invert,c
 36888  003F12  ECA0  F02A         	call	_IRrawToNEC	;wreg free
 36889  003F16  0100               	movlb	0	; () banked
 36890  003F18  6FE1               	movwf	_IR_New_Code& (0+255),b
 36891  003F1A                     i2l1232:
 36892                           
 36893                           ;interrupts.c: 146: }
 36894                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 36895  003F1A  0E00               	movlw	low _IRRawCode
 36896  003F1C  6E1B               	movwf	i2cleanBuffer16bit@data,c
 36897  003F1E  0E07               	movlw	high _IRRawCode
 36898  003F20  6E1C               	movwf	i2cleanBuffer16bit@data+1,c
 36899  003F22  0E00               	movlw	0
 36900  003F24  6E1E               	movwf	i2cleanBuffer16bit@count+1,c
 36901  003F26  0E64               	movlw	100
 36902  003F28  6E1D               	movwf	i2cleanBuffer16bit@count,c
 36903  003F2A  EC95  F048         	call	i2_cleanBuffer16bit	;wreg free
 36904                           
 36905                           ;interrupts.c: 148: IRrawCodeNum = 0;
 36906  003F2E  0E00               	movlw	0
 36907  003F30  6E30               	movwf	_IRrawCodeNum,c
 36908                           
 36909                           ;interrupts.c: 149: if(!IR_New_Code)
 36910  003F32  0100               	movlb	0	; () banked
 36911  003F34  51E1               	movf	_IR_New_Code& (0+255),w,b
 36912  003F36  A4D8               	btfss	status,2,c
 36913  003F38  D009               	goto	i2l16499
 36914                           
 36915                           ; BSR set to: 0
 36916                           ;interrupts.c: 150: {
 36917                           ;interrupts.c: 151: ReadIRpin();
 36918  003F3A  ECC3  F04A         	call	i2_ReadIRpin	;wreg free
 36919                           
 36920                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 36921  003F3E  ECC3  F04A         	call	i2_ReadIRpin	;wreg free
 36922  003F42  6E2F               	movwf	_IRpinOLD,c
 36923                           
 36924                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 36925  003F44  90F2               	bcf	intcon,0,c	;volatile
 36926                           
 36927                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 36928  003F46  887D               	bsf	3965,4,c	;volatile
 36929                           
 36930                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 36931  003F48  86F2               	bsf	intcon,3,c	;volatile
 36932  003F4A  D000               	goto	i2l16499
 36933  003F4C                     i2l16499:
 36934                           
 36935                           ;interrupts.c: 156: }
 36936                           ;interrupts.c: 157: ReceivingIR = 13;
 36937  003F4C  0E0D               	movlw	13
 36938  003F4E  6E44               	movwf	_ReceivingIR,c	;volatile
 36939                           
 36940                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 36941  003F50  94F2               	bcf	intcon,2,c	;volatile
 36942                           
 36943                           ;interrupts.c: 159: }
 36944  003F52  D1E6               	goto	i2l1230
 36945  003F54                     i2l1231:
 36946                           
 36947                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 36948  003F54  A29E               	btfss	3998,1,c	;volatile
 36949  003F56  D1D1               	goto	i2l1235
 36950                           
 36951                           ;interrupts.c: 161: {
 36952                           ;interrupts.c: 164: Timer2_Postscaler++;
 36953  003F58  2A3A               	incf	_Timer2_Postscaler,f,c
 36954                           
 36955                           ;interrupts.c: 165: if(RF_IR == 55)
 36956  003F5A  0E37               	movlw	55
 36957  003F5C  1842               	xorwf	_RF_IR,w,c
 36958  003F5E  A4D8               	btfss	status,2,c
 36959  003F60  D10C               	goto	i2l16737
 36960                           
 36961                           ;interrupts.c: 166: {
 36962                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 36963  003F62  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 36964  003F64  5C3A               	subwf	_Timer2_Postscaler,w,c
 36965  003F66  A0D8               	btfss	status,0,c
 36966  003F68  D103               	goto	i2l16733
 36967                           
 36968                           ;interrupts.c: 169: {
 36969                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 36970  003F6A  0E00               	movlw	0
 36971  003F6C  6E3A               	movwf	_Timer2_Postscaler,c
 36972                           
 36973                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 36974  003F6E  5035               	movf	_RFcodeBit,w,c
 36975  003F70  0D01               	mullw	1
 36976  003F72  0ECF               	movlw	low _RFsendCode
 36977  003F74  24F3               	addwf	prodl,w,c
 36978  003F76  6ED9               	movwf	fsr2l,c
 36979  003F78  0E02               	movlw	high _RFsendCode
 36980  003F7A  20F4               	addwfc	prodh,w,c
 36981  003F7C  6EDA               	movwf	fsr2h,c
 36982  003F7E  0E63               	movlw	99
 36983  003F80  18DE               	xorwf	postinc2,w,c
 36984  003F82  B4D8               	btfsc	status,2,c
 36985  003F84  D0B3               	goto	i2l16683
 36986                           
 36987                           ;interrupts.c: 172: {
 36988                           ;interrupts.c: 174: if(RFsendFlag)
 36989  003F86  5037               	movf	_RFsendFlag,w,c	;volatile
 36990  003F88  B4D8               	btfsc	status,2,c
 36991  003F8A  D0F2               	goto	i2l16733
 36992                           
 36993                           ;interrupts.c: 175: {
 36994                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 36995  003F8C  5035               	movf	_RFcodeBit,w,c
 36996  003F8E  0D01               	mullw	1
 36997  003F90  0ECF               	movlw	low _RFsendCode
 36998  003F92  24F3               	addwf	prodl,w,c
 36999  003F94  6ED9               	movwf	fsr2l,c
 37000  003F96  0E02               	movlw	high _RFsendCode
 37001  003F98  20F4               	addwfc	prodh,w,c
 37002  003F9A  6EDA               	movwf	fsr2h,c
 37003  003F9C  50DF               	movf	indf2,w,c
 37004  003F9E  A4D8               	btfss	status,2,c
 37005  003FA0  D03F               	goto	i2l16575
 37006                           
 37007                           ;interrupts.c: 177: {
 37008                           ;interrupts.c: 179: if(RFConfig == 1)
 37009  003FA2  0434               	decf	_RFConfig,w,c
 37010  003FA4  A4D8               	btfss	status,2,c
 37011  003FA6  D025               	goto	i2l16553
 37012                           
 37013                           ;interrupts.c: 180: {
 37014                           ;interrupts.c: 181: if(RFcodePlace == 1)
 37015  003FA8  0436               	decf	_RFcodePlace,w,c
 37016  003FAA  A4D8               	btfss	status,2,c
 37017  003FAC  D007               	goto	i2l16527
 37018  003FAE  D077               	goto	i2l16641
 37019  003FB0                     i2l16523:
 37020                           
 37021                           ;interrupts.c: 184: (PR2 = 8);
 37022  003FB0  0E08               	movlw	8
 37023  003FB2                     L25:
 37024  003FB2  6ECB               	movwf	4043,c	;volatile
 37025  003FB4  D076               	goto	i2l16645
 37026  003FB6                     L27:
 37027                           
 37028                           ;interrupts.c: 186: (TMR2 = 0);
 37029  003FB6  0E00               	movlw	0
 37030  003FB8  6ECC               	movwf	4044,c	;volatile
 37031                           
 37032                           ;interrupts.c: 187: }
 37033  003FBA  D0DA               	goto	i2l16733
 37034  003FBC                     i2l16527:
 37035                           
 37036                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 37037  003FBC  0E02               	movlw	2
 37038  003FBE  1836               	xorwf	_RFcodePlace,w,c
 37039  003FC0  A4D8               	btfss	status,2,c
 37040  003FC2  D004               	goto	i2l16535
 37041  003FC4  D074               	goto	L41
 37042                           
 37043                           ;interrupts.c: 189: {
 37044                           ;interrupts.c: 190: (LATC &= ~0x20);
 37045  003FC6  D03E               	goto	i2l16583
 37046  003FC8                     i2l16533:
 37047                           
 37048                           ;interrupts.c: 192: RFcodePlace++;
 37049  003FC8  2A36               	incf	_RFcodePlace,f,c
 37050                           
 37051                           ;interrupts.c: 193: }
 37052  003FCA  D0D2               	goto	i2l16733
 37053  003FCC                     i2l16535:
 37054                           
 37055                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 37056  003FCC  0E03               	movlw	3
 37057  003FCE  1836               	xorwf	_RFcodePlace,w,c
 37058  003FD0  A4D8               	btfss	status,2,c
 37059  003FD2  D002               	goto	i2l16543
 37060  003FD4  D064               	goto	i2l16641
 37061                           
 37062                           ;interrupts.c: 195: {
 37063                           ;interrupts.c: 196: (LATC |= 0x20);
 37064  003FD6  D7EC               	goto	i2l16523
 37065  003FD8                     i2l16543:
 37066                           
 37067                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 37068  003FD8  0E04               	movlw	4
 37069  003FDA  1836               	xorwf	_RFcodePlace,w,c
 37070  003FDC  A4D8               	btfss	status,2,c
 37071  003FDE  D004               	goto	i2l1248
 37072                           
 37073                           ;interrupts.c: 202: {
 37074                           ;interrupts.c: 203: (LATC &= ~0x20);
 37075  003FE0  9A8B               	bcf	3979,5,c	;volatile
 37076                           
 37077                           ;interrupts.c: 204: (PR2 = 24);
 37078  003FE2  0E18               	movlw	24
 37079  003FE4  D051               	goto	L26
 37080  003FE6  D016               	goto	i2l16569
 37081  003FE8                     i2l1248:
 37082                           
 37083                           ;interrupts.c: 208: else
 37084                           ;interrupts.c: 209: {
 37085                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 37086  003FE8  94CA               	bcf	4042,2,c	;volatile
 37087  003FEA  D07B               	goto	i2l16681
 37088  003FEC                     L30:
 37089                           
 37090                           ;interrupts.c: 213: RFsendFlag = 0;
 37091  003FEC  0E00               	movlw	0
 37092  003FEE  6E37               	movwf	_RFsendFlag,c	;volatile
 37093                           
 37094                           ; BSR set to: 0
 37095                           ;interrupts.c: 214: }
 37096                           ;interrupts.c: 215: }
 37097                           
 37098                           ; BSR set to: 0
 37099                           
 37100                           ; BSR set to: 0
 37101                           
 37102                           ; BSR set to: 0
 37103  003FF0  D0BF               	goto	i2l16733
 37104  003FF2                     i2l16553:
 37105                           
 37106                           ;interrupts.c: 216: else if(RFConfig == 2)
 37107  003FF2  0E02               	movlw	2
 37108  003FF4  1834               	xorwf	_RFConfig,w,c
 37109  003FF6  A4D8               	btfss	status,2,c
 37110  003FF8  D7F7               	goto	i2l1248
 37111                           
 37112                           ;interrupts.c: 217: {
 37113                           ;interrupts.c: 219: if(RFcodePlace == 1)
 37114  003FFA  0436               	decf	_RFcodePlace,w,c
 37115  003FFC  A4D8               	btfss	status,2,c
 37116  003FFE  D003               	goto	i2l16563
 37117                           
 37118                           ;interrupts.c: 220: {
 37119                           ;interrupts.c: 221: (LATC |= 0x20);
 37120  004000  8A8B               	bsf	3979,5,c	;volatile
 37121                           
 37122                           ;interrupts.c: 222: (PR2 = 11);
 37123  004002  0E0B               	movlw	11
 37124  004004  D7D6               	goto	L25
 37125  004006                     i2l16563:
 37126                           
 37127                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 37128  004006  0E02               	movlw	2
 37129  004008  1836               	xorwf	_RFcodePlace,w,c
 37130  00400A  A4D8               	btfss	status,2,c
 37131  00400C  D7ED               	goto	i2l1248
 37132                           
 37133                           ;interrupts.c: 227: {
 37134                           ;interrupts.c: 228: (LATC &= ~0x20);
 37135  00400E  9A8B               	bcf	3979,5,c	;volatile
 37136                           
 37137                           ;interrupts.c: 229: (PR2 = 29);
 37138  004010  0E1D               	movlw	29
 37139  004012  D03A               	goto	L26
 37140  004014                     i2l16569:
 37141                           
 37142                           ;interrupts.c: 230: RFcodePlace = 1;
 37143  004014  0E01               	movlw	1
 37144  004016  6E36               	movwf	_RFcodePlace,c
 37145                           
 37146                           ;interrupts.c: 231: RFcodeBit++;
 37147  004018  2A35               	incf	_RFcodeBit,f,c
 37148                           
 37149                           ; BSR set to: 0
 37150                           ;interrupts.c: 239: }
 37151                           ;interrupts.c: 240: }
 37152                           
 37153                           ; BSR set to: 0
 37154                           
 37155                           ;interrupts.c: 238: RFsendFlag = 0;
 37156                           
 37157                           ;interrupts.c: 237: Sent = 1;
 37158                           
 37159                           ;interrupts.c: 233: else
 37160                           ;interrupts.c: 234: {
 37161                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 37162                           
 37163                           ;interrupts.c: 232: }
 37164  00401A  D0AA               	goto	i2l16733
 37165                           
 37166                           ;interrupts.c: 241: else
 37167                           ;interrupts.c: 242: {
 37168                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 37169  00401C  D062               	goto	i2l16681
 37170                           
 37171                           ; BSR set to: 0
 37172                           ;interrupts.c: 247: }
 37173                           ;interrupts.c: 248: }
 37174                           
 37175                           ; BSR set to: 0
 37176                           
 37177                           ;interrupts.c: 246: RFsendFlag = 0;
 37178                           
 37179                           ;interrupts.c: 245: Sent = 1;
 37180  00401E  D0A8               	goto	i2l16733
 37181  004020                     i2l16575:
 37182                           
 37183                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 37184  004020  5035               	movf	_RFcodeBit,w,c
 37185  004022  0D01               	mullw	1
 37186  004024  0ECF               	movlw	low _RFsendCode
 37187  004026  24F3               	addwf	prodl,w,c
 37188  004028  6ED9               	movwf	fsr2l,c
 37189  00402A  0E02               	movlw	high _RFsendCode
 37190  00402C  20F4               	addwfc	prodh,w,c
 37191  00402E  6EDA               	movwf	fsr2h,c
 37192  004030  04DE               	decf	postinc2,w,c
 37193  004032  A4D8               	btfss	status,2,c
 37194  004034  D02E               	goto	i2l16637
 37195                           
 37196                           ;interrupts.c: 250: {
 37197                           ;interrupts.c: 251: if(RFConfig == 1)
 37198  004036  0434               	decf	_RFConfig,w,c
 37199  004038  A4D8               	btfss	status,2,c
 37200  00403A  D016               	goto	i2l16615
 37201                           
 37202                           ;interrupts.c: 252: {
 37203                           ;interrupts.c: 253: if(RFcodePlace == 1)
 37204  00403C  0436               	decf	_RFcodePlace,w,c
 37205  00403E  A4D8               	btfss	status,2,c
 37206  004040  D004               	goto	i2l16587
 37207  004042  D03C               	goto	L42
 37208  004044                     i2l16583:
 37209                           
 37210                           ;interrupts.c: 256: (PR2 = 24);
 37211  004044  0E18               	movlw	24
 37212  004046  6ECB               	movwf	4043,c	;volatile
 37213  004048  D7BF               	goto	i2l16533
 37214  00404A                     i2l16587:
 37215                           
 37216                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 37217  00404A  0E02               	movlw	2
 37218  00404C  1836               	xorwf	_RFcodePlace,w,c
 37219  00404E  A4D8               	btfss	status,2,c
 37220  004050  D031               	goto	i2l16655
 37221                           
 37222                           ;interrupts.c: 260: {
 37223                           ;interrupts.c: 261: (LATC &= ~0x20);
 37224  004052  9A8B               	bcf	3979,5,c	;volatile
 37225  004054  D7AD               	goto	i2l16523
 37226                           
 37227                           ;interrupts.c: 265: }
 37228                           
 37229                           ;interrupts.c: 264: (TMR2 = 0);
 37230                           
 37231                           ;interrupts.c: 263: RFcodePlace++;
 37232                           
 37233                           ;interrupts.c: 262: (PR2 = 8);
 37234  004056  D02E               	goto	i2l16655
 37235                           
 37236                           ;interrupts.c: 267: {
 37237                           ;interrupts.c: 268: (LATC |= 0x20);
 37238                           
 37239                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 37240  004058  D7F5               	goto	i2l16583
 37241                           
 37242                           ;interrupts.c: 269: (PR2 = 24);
 37243  00405A  D7B6               	goto	i2l16533
 37244                           
 37245                           ;interrupts.c: 271: }
 37246                           
 37247                           ;interrupts.c: 270: RFcodePlace++;
 37248  00405C  D032               	goto	i2l16663
 37249  00405E                     i2l16607:
 37250                           
 37251                           ;interrupts.c: 275: (PR2 = 8);
 37252  00405E  0E08               	movlw	8
 37253  004060  6ECB               	movwf	4043,c	;volatile
 37254  004062  D035               	goto	i2l16669
 37255                           
 37256                           ;interrupts.c: 277: RFcodeBit++;
 37257                           
 37258                           ;interrupts.c: 276: RFcodePlace = 1;
 37259  004064  D7A8               	goto	L27
 37260                           
 37261                           ; BSR set to: 0
 37262                           ;interrupts.c: 286: }
 37263                           ;interrupts.c: 287: }
 37264                           
 37265                           ; BSR set to: 0
 37266                           
 37267                           ; BSR set to: 0
 37268                           
 37269                           ; BSR set to: 0
 37270                           
 37271                           ;interrupts.c: 285: RFsendFlag = 0;
 37272                           
 37273                           ;interrupts.c: 284: Sent = 1;
 37274                           
 37275                           ;interrupts.c: 280: else
 37276                           ;interrupts.c: 281: {
 37277                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 37278                           
 37279                           ;interrupts.c: 279: }
 37280                           
 37281                           ;interrupts.c: 278: (TMR2 = 0);
 37282  004066  D084               	goto	i2l16733
 37283  004068                     i2l16615:
 37284                           
 37285                           ;interrupts.c: 288: else if(RFConfig == 2)
 37286  004068  0E02               	movlw	2
 37287  00406A  1834               	xorwf	_RFConfig,w,c
 37288  00406C  A4D8               	btfss	status,2,c
 37289  00406E  D7BC               	goto	i2l1248
 37290                           
 37291                           ;interrupts.c: 289: {
 37292                           ;interrupts.c: 291: if(RFcodePlace == 1)
 37293  004070  0436               	decf	_RFcodePlace,w,c
 37294  004072  A4D8               	btfss	status,2,c
 37295  004074  D003               	goto	i2l16625
 37296                           
 37297                           ;interrupts.c: 292: {
 37298                           ;interrupts.c: 293: (LATC |= 0x20);
 37299  004076  8A8B               	bsf	3979,5,c	;volatile
 37300                           
 37301                           ;interrupts.c: 294: (PR2 = 29);
 37302  004078  0E1D               	movlw	29
 37303  00407A  D79B               	goto	L25
 37304  00407C                     i2l16625:
 37305                           
 37306                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 37307  00407C  0E02               	movlw	2
 37308  00407E  1836               	xorwf	_RFcodePlace,w,c
 37309  004080  A4D8               	btfss	status,2,c
 37310  004082  D004               	goto	i2l1272
 37311                           
 37312                           ;interrupts.c: 299: {
 37313                           ;interrupts.c: 300: (LATC &= ~0x20);
 37314  004084  9A8B               	bcf	3979,5,c	;volatile
 37315                           
 37316                           ;interrupts.c: 301: (PR2 = 11);
 37317  004086  0E0B               	movlw	11
 37318  004088                     L26:
 37319  004088  6ECB               	movwf	4043,c	;volatile
 37320  00408A  D7C4               	goto	i2l16569
 37321  00408C                     i2l1272:
 37322                           
 37323                           ;interrupts.c: 305: else
 37324                           ;interrupts.c: 306: {
 37325                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 37326  00408C  94CA               	bcf	4042,2,c	;volatile
 37327  00408E  D029               	goto	i2l16681
 37328                           
 37329                           ; BSR set to: 0
 37330                           ;interrupts.c: 319: }
 37331                           ;interrupts.c: 320: }
 37332                           
 37333                           ; BSR set to: 0
 37334                           
 37335                           ;interrupts.c: 318: RFsendFlag = 0;
 37336                           
 37337                           ;interrupts.c: 317: Sent = 1;
 37338                           
 37339                           ;interrupts.c: 313: else
 37340                           ;interrupts.c: 314: {
 37341                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 37342                           
 37343                           ; BSR set to: 0
 37344                           ;interrupts.c: 311: }
 37345                           ;interrupts.c: 312: }
 37346                           
 37347                           ; BSR set to: 0
 37348                           
 37349                           ;interrupts.c: 310: RFsendFlag = 0;
 37350                           
 37351                           ;interrupts.c: 309: Sent = 1;
 37352  004090  D06F               	goto	i2l16733
 37353  004092                     i2l16637:
 37354                           
 37355                           ;interrupts.c: 321: else
 37356                           ;interrupts.c: 322: {
 37357                           ;interrupts.c: 323: if(RFConfig == 1)
 37358  004092  0434               	decf	_RFConfig,w,c
 37359  004094  A4D8               	btfss	status,2,c
 37360  004096  D020               	goto	i2l16675
 37361                           
 37362                           ;interrupts.c: 324: {
 37363                           ;interrupts.c: 326: if(RFcodePlace == 1)
 37364  004098  0436               	decf	_RFcodePlace,w,c
 37365  00409A  A4D8               	btfss	status,2,c
 37366  00409C  D004               	goto	i2l16647
 37367  00409E                     i2l16641:
 37368                           
 37369                           ;interrupts.c: 327: {
 37370                           ;interrupts.c: 328: (LATC |= 0x20);
 37371  00409E  8A8B               	bsf	3979,5,c	;volatile
 37372  0040A0  D787               	goto	i2l16523
 37373  0040A2                     i2l16645:
 37374                           
 37375                           ;interrupts.c: 330: RFcodePlace++;
 37376  0040A2  2A36               	incf	_RFcodePlace,f,c
 37377  0040A4  D788               	goto	L27
 37378  0040A6                     i2l16647:
 37379                           
 37380                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 37381  0040A6  0E02               	movlw	2
 37382  0040A8  1836               	xorwf	_RFcodePlace,w,c
 37383  0040AA  A4D8               	btfss	status,2,c
 37384  0040AC  D003               	goto	i2l16655
 37385  0040AE                     L41:
 37386                           
 37387                           ;interrupts.c: 334: {
 37388                           ;interrupts.c: 335: (LATC &= ~0x20);
 37389  0040AE  9A8B               	bcf	3979,5,c	;volatile
 37390  0040B0  D7C9               	goto	i2l16583
 37391                           
 37392                           ;interrupts.c: 336: (PR2 = 24);
 37393  0040B2  D78A               	goto	i2l16533
 37394  0040B4                     i2l16655:
 37395                           
 37396                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 37397  0040B4  0E03               	movlw	3
 37398  0040B6  1836               	xorwf	_RFcodePlace,w,c
 37399  0040B8  A4D8               	btfss	status,2,c
 37400  0040BA  D003               	goto	i2l16663
 37401  0040BC                     L42:
 37402                           
 37403                           ;interrupts.c: 340: {
 37404                           ;interrupts.c: 341: (LATC |= 0x20);
 37405  0040BC  8A8B               	bsf	3979,5,c	;volatile
 37406  0040BE  D7C2               	goto	i2l16583
 37407                           
 37408                           ;interrupts.c: 342: (PR2 = 24);
 37409  0040C0  D783               	goto	i2l16533
 37410  0040C2                     i2l16663:
 37411                           
 37412                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 37413  0040C2  0E04               	movlw	4
 37414  0040C4  1836               	xorwf	_RFcodePlace,w,c
 37415  0040C6  A4D8               	btfss	status,2,c
 37416  0040C8  D78F               	goto	i2l1248
 37417                           
 37418                           ;interrupts.c: 346: {
 37419                           ;interrupts.c: 347: (LATC &= ~0x20);
 37420  0040CA  9A8B               	bcf	3979,5,c	;volatile
 37421  0040CC  D7C8               	goto	i2l16607
 37422  0040CE                     i2l16669:
 37423                           
 37424                           ;interrupts.c: 349: RFcodePlace = 1;
 37425  0040CE  0E01               	movlw	1
 37426  0040D0  6E36               	movwf	_RFcodePlace,c
 37427                           
 37428                           ;interrupts.c: 350: RFcodeBit++;
 37429  0040D2  2A35               	incf	_RFcodeBit,f,c
 37430  0040D4  D770               	goto	L27
 37431                           
 37432                           ; BSR set to: 0
 37433                           ;interrupts.c: 359: }
 37434                           ;interrupts.c: 360: }
 37435                           
 37436                           ; BSR set to: 0
 37437                           
 37438                           ; BSR set to: 0
 37439                           
 37440                           ; BSR set to: 0
 37441                           
 37442                           ;interrupts.c: 358: RFsendFlag = 0;
 37443                           
 37444                           ;interrupts.c: 357: Sent = 1;
 37445                           
 37446                           ;interrupts.c: 353: else
 37447                           ;interrupts.c: 354: {
 37448                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 37449                           
 37450                           ;interrupts.c: 352: }
 37451                           
 37452                           ;interrupts.c: 351: (TMR2 = 0);
 37453  0040D6  D04C               	goto	i2l16733
 37454  0040D8                     i2l16675:
 37455                           
 37456                           ;interrupts.c: 361: else if(RFConfig == 2)
 37457  0040D8  0E02               	movlw	2
 37458  0040DA  1834               	xorwf	_RFConfig,w,c
 37459  0040DC  A4D8               	btfss	status,2,c
 37460  0040DE  D784               	goto	i2l1248
 37461  0040E0  D783               	goto	i2l1248
 37462  0040E2                     i2l16681:
 37463                           
 37464                           ;interrupts.c: 372: Sent = 1;
 37465  0040E2  0E01               	movlw	1
 37466  0040E4  0100               	movlb	0	; () banked
 37467  0040E6  6FE3               	movwf	_Sent& (0+255),b	;volatile
 37468  0040E8  D781               	goto	L30
 37469                           
 37470                           ; BSR set to: 0
 37471                           ;interrupts.c: 374: }
 37472                           ;interrupts.c: 375: }
 37473                           ;interrupts.c: 376: }
 37474                           ;interrupts.c: 377: }
 37475                           
 37476                           ; BSR set to: 0
 37477                           
 37478                           ; BSR set to: 0
 37479                           
 37480                           ; BSR set to: 0
 37481                           
 37482                           ; BSR set to: 0
 37483                           
 37484                           ;interrupts.c: 373: RFsendFlag = 0;
 37485  0040EA  D042               	goto	i2l16733
 37486  0040EC                     i2l16683:
 37487                           
 37488                           ;interrupts.c: 378: else
 37489                           ;interrupts.c: 379: {
 37490                           ;interrupts.c: 381: if(RFcodePlace == 1)
 37491  0040EC  0436               	decf	_RFcodePlace,w,c
 37492  0040EE  A4D8               	btfss	status,2,c
 37493  0040F0  D016               	goto	i2l16701
 37494                           
 37495                           ;interrupts.c: 382: {
 37496                           ;interrupts.c: 383: if(RFConfig == 1)
 37497  0040F2  0434               	decf	_RFConfig,w,c
 37498  0040F4  A4D8               	btfss	status,2,c
 37499  0040F6  D003               	goto	i2l16691
 37500                           
 37501                           ;interrupts.c: 384: {
 37502                           ;interrupts.c: 385: (LATC |= 0x20);
 37503  0040F8  8A8B               	bsf	3979,5,c	;volatile
 37504                           
 37505                           ;interrupts.c: 386: (PR2 = 8);
 37506  0040FA  0E08               	movlw	8
 37507  0040FC  D006               	goto	L28
 37508  0040FE                     i2l16691:
 37509                           
 37510                           ;interrupts.c: 388: else if(RFConfig == 2)
 37511  0040FE  0E02               	movlw	2
 37512  004100  1834               	xorwf	_RFConfig,w,c
 37513  004102  A4D8               	btfss	status,2,c
 37514  004104  D004               	goto	i2l1292
 37515                           
 37516                           ;interrupts.c: 389: {
 37517                           ;interrupts.c: 390: (LATC &= ~0x20);
 37518  004106  9A8B               	bcf	3979,5,c	;volatile
 37519                           
 37520                           ;interrupts.c: 391: (PR2 = 11);
 37521  004108  0E0B               	movlw	11
 37522  00410A                     L28:
 37523  00410A  6ECB               	movwf	4043,c	;volatile
 37524                           
 37525                           ;interrupts.c: 392: }
 37526  00410C  D005               	goto	i2l1291
 37527  00410E                     i2l1292:
 37528                           
 37529                           ;interrupts.c: 393: else
 37530                           ;interrupts.c: 394: {
 37531                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 37532  00410E  94CA               	bcf	4042,2,c	;volatile
 37533                           
 37534                           ;interrupts.c: 397: Sent = 1;
 37535  004110  0E01               	movlw	1
 37536  004112  0100               	movlb	0	; () banked
 37537  004114  6FE3               	movwf	_Sent& (0+255),b	;volatile
 37538  004116  D000               	goto	i2l1291
 37539  004118                     i2l1291:
 37540                           
 37541                           ;interrupts.c: 398: }
 37542                           ;interrupts.c: 399: (TMR2 = 0);
 37543  004118  0E00               	movlw	0
 37544  00411A  6ECC               	movwf	4044,c	;volatile
 37545  00411C  D755               	goto	i2l16533
 37546  00411E                     i2l16701:
 37547                           
 37548                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 37549  00411E  0E02               	movlw	2
 37550  004120  1836               	xorwf	_RFcodePlace,w,c
 37551  004122  A4D8               	btfss	status,2,c
 37552  004124  D01C               	goto	i2l16721
 37553                           
 37554                           ;interrupts.c: 403: {
 37555                           ;interrupts.c: 404: if(RFConfig == 1)
 37556  004126  0434               	decf	_RFConfig,w,c
 37557  004128  A4D8               	btfss	status,2,c
 37558  00412A  D003               	goto	i2l16709
 37559                           
 37560                           ;interrupts.c: 405: {
 37561                           ;interrupts.c: 406: (LATC &= ~0x20);
 37562  00412C  9A8B               	bcf	3979,5,c	;volatile
 37563                           
 37564                           ;interrupts.c: 407: (PR2 = 250);
 37565  00412E  0EFA               	movlw	250
 37566  004130  D005               	goto	L29
 37567  004132                     i2l16709:
 37568                           
 37569                           ;interrupts.c: 409: else if(RFConfig == 2)
 37570  004132  0E02               	movlw	2
 37571  004134  1834               	xorwf	_RFConfig,w,c
 37572  004136  A4D8               	btfss	status,2,c
 37573  004138  D003               	goto	i2l1298
 37574                           
 37575                           ;interrupts.c: 410: {
 37576                           ;interrupts.c: 411: (PR2 = 149);
 37577  00413A  0E95               	movlw	149
 37578  00413C                     L29:
 37579  00413C  6ECB               	movwf	4043,c	;volatile
 37580                           
 37581                           ;interrupts.c: 412: }
 37582  00413E  D005               	goto	i2l16715
 37583  004140                     i2l1298:
 37584                           
 37585                           ;interrupts.c: 413: else
 37586                           ;interrupts.c: 414: {
 37587                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 37588  004140  94CA               	bcf	4042,2,c	;volatile
 37589                           
 37590                           ;interrupts.c: 417: Sent = 1;
 37591  004142  0E01               	movlw	1
 37592  004144  0100               	movlb	0	; () banked
 37593  004146  6FE3               	movwf	_Sent& (0+255),b	;volatile
 37594                           
 37595                           ; BSR set to: 0
 37596  004148  D000               	goto	i2l16715
 37597  00414A                     i2l16715:
 37598                           
 37599                           ;interrupts.c: 418: }
 37600                           ;interrupts.c: 419: RFcodePlace++;
 37601  00414A  2A36               	incf	_RFcodePlace,f,c
 37602                           
 37603                           ;interrupts.c: 420: Sendcount--;
 37604  00414C  0638               	decf	_Sendcount,f,c	;volatile
 37605                           
 37606                           ;interrupts.c: 421: if(Sendcount)
 37607  00414E  5038               	movf	_Sendcount,w,c	;volatile
 37608  004150  B4D8               	btfsc	status,2,c
 37609  004152  D00E               	goto	i2l16733
 37610                           
 37611                           ;interrupts.c: 422: {
 37612                           ;interrupts.c: 424: RFcodePlace = 1;
 37613  004154  0E01               	movlw	1
 37614  004156  6E36               	movwf	_RFcodePlace,c
 37615                           
 37616                           ;interrupts.c: 425: RFcodeBit = 0;
 37617  004158  0E00               	movlw	0
 37618  00415A  6E35               	movwf	_RFcodeBit,c
 37619                           
 37620                           ;interrupts.c: 426: }
 37621                           ;interrupts.c: 427: }
 37622  00415C  D009               	goto	i2l16733
 37623  00415E                     i2l16721:
 37624                           
 37625                           ;interrupts.c: 428: else
 37626                           ;interrupts.c: 429: {
 37627                           ;interrupts.c: 431: ResetTimer3();
 37628  00415E  ECE3  F04A         	call	_ResetTimer3	;wreg free
 37629                           
 37630                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 37631  004162  92A1               	bcf	4001,1,c	;volatile
 37632                           
 37633                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 37634  004164  0E00               	movlw	0
 37635  004166  6E3B               	movwf	_Timer3_Postscaler,c
 37636                           
 37637                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 37638  004168  80B1               	bsf	4017,0,c	;volatile
 37639                           
 37640                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 37641  00416A  94CA               	bcf	4042,2,c	;volatile
 37642  00416C  D73F               	goto	L30
 37643                           
 37644                           ;interrupts.c: 436: RFsendFlag = 0;
 37645  00416E  D000               	goto	i2l16733
 37646  004170                     i2l16733:
 37647                           
 37648                           ;interrupts.c: 437: }
 37649                           ;interrupts.c: 438: }
 37650                           ;interrupts.c: 439: }
 37651                           ;interrupts.c: 440: if(RFsendFlag)
 37652  004170  5037               	movf	_RFsendFlag,w,c	;volatile
 37653  004172  B4D8               	btfsc	status,2,c
 37654  004174  D0C0               	goto	i2l16861
 37655                           
 37656                           ;interrupts.c: 441: {
 37657                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 37658  004176  84CA               	bsf	4042,2,c	;volatile
 37659                           
 37660                           ;interrupts.c: 444: }
 37661                           ;interrupts.c: 445: }
 37662  004178  D0BE               	goto	i2l16861
 37663  00417A                     i2l16737:
 37664                           
 37665                           ;interrupts.c: 446: else
 37666                           ;interrupts.c: 447: {
 37667                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 37668  00417A  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 37669  00417C  5C3A               	subwf	_Timer2_Postscaler,w,c
 37670  00417E  A0D8               	btfss	status,0,c
 37671  004180  D0BA               	goto	i2l16861
 37672                           
 37673                           ;interrupts.c: 450: {
 37674                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 37675  004182  0E00               	movlw	0
 37676  004184  6E3A               	movwf	_Timer2_Postscaler,c
 37677                           
 37678                           ;interrupts.c: 452: if(IRcodePlace == 7)
 37679  004186  0E07               	movlw	7
 37680  004188  1841               	xorwf	_IRcodePlace,w,c
 37681  00418A  A4D8               	btfss	status,2,c
 37682  00418C  D00D               	goto	i2l16753
 37683                           
 37684                           ;interrupts.c: 453: {
 37685                           ;interrupts.c: 454: IRbitPosition = 32;
 37686  00418E  0E20               	movlw	32
 37687  004190  6E40               	movwf	_IRbitPosition,c	;volatile
 37688                           
 37689                           ;interrupts.c: 455: (IRmod = 0);
 37690  004192  0E00               	movlw	0
 37691  004194  0100               	movlb	0	; () banked
 37692  004196  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37693                           
 37694                           ; BSR set to: 0
 37695                           ;interrupts.c: 456: (LATC &= ~0x08);
 37696  004198  968B               	bcf	3979,3,c	;volatile
 37697                           
 37698                           ; BSR set to: 0
 37699                           ;interrupts.c: 457: IRcodePlace = 8;
 37700  00419A  0E08               	movlw	8
 37701  00419C  6E41               	movwf	_IRcodePlace,c
 37702                           
 37703                           ; BSR set to: 0
 37704                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 37705  00419E  0E04               	movlw	4
 37706  0041A0  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37707                           
 37708                           ; BSR set to: 0
 37709                           ;interrupts.c: 459: (PR2 = 75);
 37710  0041A2  0E4B               	movlw	75
 37711  0041A4  6ECB               	movwf	4043,c	;volatile
 37712                           
 37713                           ;interrupts.c: 460: }
 37714  0041A6  D0A7               	goto	i2l16861
 37715  0041A8                     i2l16753:
 37716                           
 37717                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 37718  0041A8  0E08               	movlw	8
 37719  0041AA  1841               	xorwf	_IRcodePlace,w,c
 37720  0041AC  B4D8               	btfsc	status,2,c
 37721  0041AE  D004               	goto	i2l16757
 37722  0041B0  0E0A               	movlw	10
 37723  0041B2  1841               	xorwf	_IRcodePlace,w,c
 37724  0041B4  A4D8               	btfss	status,2,c
 37725  0041B6  D011               	goto	i2l16767
 37726  0041B8                     i2l16757:
 37727                           
 37728                           ;interrupts.c: 462: {
 37729                           ;interrupts.c: 463: (IRmod = 1);
 37730  0041B8  0E01               	movlw	1
 37731  0041BA  0100               	movlb	0	; () banked
 37732  0041BC  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37733                           
 37734                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 37735  0041BE  0E01               	movlw	1
 37736  0041C0  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37737                           
 37738                           ; BSR set to: 0
 37739                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 37740  0041C2  5023               	movf	_IRsendCode,w,c
 37741  0041C4  0B01               	andlw	1
 37742  0041C6  6E2D               	movwf	_IRbit,c
 37743                           
 37744                           ; BSR set to: 0
 37745                           ;interrupts.c: 466: IRsendCode >>= 1;
 37746  0041C8  90D8               	bcf	status,0,c
 37747  0041CA  3226               	rrcf	_IRsendCode+3,f,c
 37748  0041CC  3225               	rrcf	_IRsendCode+2,f,c
 37749  0041CE  3224               	rrcf	_IRsendCode+1,f,c
 37750  0041D0  3223               	rrcf	_IRsendCode,f,c
 37751                           
 37752                           ; BSR set to: 0
 37753                           ;interrupts.c: 467: (PR2 = 38);
 37754  0041D2  0E26               	movlw	38
 37755  0041D4  6ECB               	movwf	4043,c	;volatile
 37756                           
 37757                           ; BSR set to: 0
 37758                           ;interrupts.c: 468: IRcodePlace = 9;
 37759  0041D6  0E09               	movlw	9
 37760  0041D8  D07A               	goto	L40
 37761  0041DA                     i2l16767:
 37762                           
 37763                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 37764  0041DA  0E09               	movlw	9
 37765  0041DC  1841               	xorwf	_IRcodePlace,w,c
 37766  0041DE  A4D8               	btfss	status,2,c
 37767  0041E0  D017               	goto	i2l16789
 37768                           
 37769                           ;interrupts.c: 471: {
 37770                           ;interrupts.c: 472: (IRmod = 0);
 37771  0041E2  0E00               	movlw	0
 37772  0041E4  0100               	movlb	0	; () banked
 37773  0041E6  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37774                           
 37775                           ; BSR set to: 0
 37776                           ;interrupts.c: 473: (LATC &= ~0x08);
 37777  0041E8  968B               	bcf	3979,3,c	;volatile
 37778                           
 37779                           ; BSR set to: 0
 37780                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 37781  0041EA  0E01               	movlw	1
 37782  0041EC  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37783                           
 37784                           ; BSR set to: 0
 37785                           ;interrupts.c: 475: if(IRbit)
 37786  0041EE  502D               	movf	_IRbit,w,c
 37787  0041F0  B4D8               	btfsc	status,2,c
 37788  0041F2  D002               	goto	i2l16779
 37789                           
 37790                           ; BSR set to: 0
 37791                           ;interrupts.c: 476: {
 37792                           ;interrupts.c: 478: (PR2 = 113);
 37793  0041F4  0E71               	movlw	113
 37794  0041F6  D001               	goto	L32
 37795  0041F8                     i2l16779:
 37796                           
 37797                           ; BSR set to: 0
 37798                           ;interrupts.c: 480: else
 37799                           ;interrupts.c: 481: {
 37800                           ;interrupts.c: 483: (PR2 = 38);
 37801  0041F8  0E26               	movlw	38
 37802  0041FA                     L32:
 37803  0041FA  6ECB               	movwf	4043,c	;volatile
 37804  0041FC  D000               	goto	i2l16781
 37805  0041FE                     i2l16781:
 37806                           
 37807                           ; BSR set to: 0
 37808                           ;interrupts.c: 484: }
 37809                           ;interrupts.c: 485: IRbitPosition--;
 37810  0041FE  0640               	decf	_IRbitPosition,f,c	;volatile
 37811                           
 37812                           ; BSR set to: 0
 37813                           ;interrupts.c: 486: if(IRbitPosition == 0)
 37814  004200  5040               	movf	_IRbitPosition,w,c	;volatile
 37815  004202  A4D8               	btfss	status,2,c
 37816  004204  D002               	goto	i2l16787
 37817                           
 37818                           ; BSR set to: 0
 37819                           ;interrupts.c: 487: {
 37820                           ;interrupts.c: 488: IRcodePlace = 11;
 37821  004206  0E0B               	movlw	11
 37822  004208  D062               	goto	L40
 37823  00420A                     i2l16787:
 37824                           
 37825                           ; BSR set to: 0
 37826                           ;interrupts.c: 490: else
 37827                           ;interrupts.c: 491: {
 37828                           ;interrupts.c: 492: IRcodePlace = 10;
 37829  00420A  0E0A               	movlw	10
 37830  00420C  D060               	goto	L40
 37831                           
 37832                           ; BSR set to: 0
 37833                           ;interrupts.c: 493: }
 37834                           ;interrupts.c: 494: }
 37835  00420E  D073               	goto	i2l16861
 37836  004210                     i2l16789:
 37837                           
 37838                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 37839  004210  0E0B               	movlw	11
 37840  004212  1841               	xorwf	_IRcodePlace,w,c
 37841  004214  A4D8               	btfss	status,2,c
 37842  004216  D007               	goto	i2l16793
 37843                           
 37844                           ;interrupts.c: 496: {
 37845                           ;interrupts.c: 497: (IRmod = 1);
 37846  004218  0E01               	movlw	1
 37847  00421A  0100               	movlb	0	; () banked
 37848  00421C  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37849                           
 37850                           ;interrupts.c: 498: (PR2 = 38);
 37851  00421E  0E26               	movlw	38
 37852  004220  6ECB               	movwf	4043,c	;volatile
 37853                           
 37854                           ;interrupts.c: 499: IRcodePlace = 12;
 37855  004222  0E0C               	movlw	12
 37856  004224  D054               	goto	L40
 37857  004226                     i2l16793:
 37858                           
 37859                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 37860  004226  0E0C               	movlw	12
 37861  004228  1841               	xorwf	_IRcodePlace,w,c
 37862  00422A  A4D8               	btfss	status,2,c
 37863  00422C  D011               	goto	i2l16807
 37864                           
 37865                           ;interrupts.c: 502: {
 37866                           ;interrupts.c: 503: (IRmod = 0);
 37867  00422E  0E00               	movlw	0
 37868  004230  0100               	movlb	0	; () banked
 37869  004232  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37870                           
 37871                           ; BSR set to: 0
 37872                           ;interrupts.c: 504: (LATC &= ~0x08);
 37873  004234  968B               	bcf	3979,3,c	;volatile
 37874                           
 37875                           ; BSR set to: 0
 37876                           ;interrupts.c: 505: if(!IRrepeatflag)
 37877  004236  5032               	movf	_IRrepeatflag,w,c
 37878  004238  A4D8               	btfss	status,2,c
 37879  00423A  D003               	goto	i2l16805
 37880                           
 37881                           ; BSR set to: 0
 37882                           ;interrupts.c: 506: {
 37883                           ;interrupts.c: 508: IRcodePlace = 13;
 37884  00423C  0E0D               	movlw	13
 37885  00423E  6E41               	movwf	_IRcodePlace,c
 37886  004240  D057               	goto	i2l16857
 37887  004242                     i2l16805:
 37888                           
 37889                           ; BSR set to: 0
 37890                           ;interrupts.c: 512: else
 37891                           ;interrupts.c: 513: {
 37892                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 37893  004242  0E0B               	movlw	11
 37894  004244  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37895                           
 37896                           ;interrupts.c: 515: (PR2 = 242);
 37897  004246  0EF2               	movlw	242
 37898  004248  6ECB               	movwf	4043,c	;volatile
 37899                           
 37900                           ;interrupts.c: 516: IRcodePlace = 14;
 37901  00424A  0E0E               	movlw	14
 37902  00424C  D040               	goto	L40
 37903                           
 37904                           ; BSR set to: 0
 37905                           ;interrupts.c: 517: }
 37906                           ;interrupts.c: 518: }
 37907  00424E  D053               	goto	i2l16861
 37908  004250                     i2l16807:
 37909                           
 37910                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 37911  004250  0E0E               	movlw	14
 37912  004252  1841               	xorwf	_IRcodePlace,w,c
 37913  004254  B4D8               	btfsc	status,2,c
 37914  004256  D004               	goto	i2l16811
 37915  004258  0E12               	movlw	18
 37916  00425A  1841               	xorwf	_IRcodePlace,w,c
 37917  00425C  A4D8               	btfss	status,2,c
 37918  00425E  D009               	goto	i2l16813
 37919  004260                     i2l16811:
 37920                           
 37921                           ;interrupts.c: 520: {
 37922                           ;interrupts.c: 521: (IRmod = 1);
 37923  004260  0E01               	movlw	1
 37924  004262  0100               	movlb	0	; () banked
 37925  004264  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37926                           
 37927                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 37928  004266  0E04               	movlw	4
 37929  004268  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37930                           
 37931                           ;interrupts.c: 523: (PR2 = 150);
 37932  00426A  0E96               	movlw	150
 37933  00426C  6ECB               	movwf	4043,c	;volatile
 37934                           
 37935                           ;interrupts.c: 524: IRcodePlace = 15;
 37936  00426E  0E0F               	movlw	15
 37937  004270  D02E               	goto	L40
 37938  004272                     i2l16813:
 37939                           
 37940                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 37941  004272  0E0F               	movlw	15
 37942  004274  1841               	xorwf	_IRcodePlace,w,c
 37943  004276  A4D8               	btfss	status,2,c
 37944  004278  D00A               	goto	i2l16825
 37945                           
 37946                           ;interrupts.c: 527: {
 37947                           ;interrupts.c: 528: (IRmod = 0);
 37948  00427A  0E00               	movlw	0
 37949  00427C  0100               	movlb	0	; () banked
 37950  00427E  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37951                           
 37952                           ; BSR set to: 0
 37953                           ;interrupts.c: 529: (LATC &= ~0x08);
 37954  004280  968B               	bcf	3979,3,c	;volatile
 37955                           
 37956                           ; BSR set to: 0
 37957                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 37958  004282  0E01               	movlw	1
 37959  004284  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37960                           
 37961                           ; BSR set to: 0
 37962                           ;interrupts.c: 531: (PR2 = 149);
 37963  004286  0E95               	movlw	149
 37964  004288  6ECB               	movwf	4043,c	;volatile
 37965                           
 37966                           ; BSR set to: 0
 37967                           ;interrupts.c: 532: IRcodePlace = 16;
 37968  00428A  0E10               	movlw	16
 37969  00428C  D020               	goto	L40
 37970  00428E                     i2l16825:
 37971                           
 37972                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 37973  00428E  0E10               	movlw	16
 37974  004290  1841               	xorwf	_IRcodePlace,w,c
 37975  004292  A4D8               	btfss	status,2,c
 37976  004294  D009               	goto	i2l16829
 37977                           
 37978                           ;interrupts.c: 535: {
 37979                           ;interrupts.c: 536: (IRmod = 1);
 37980  004296  0E01               	movlw	1
 37981  004298  0100               	movlb	0	; () banked
 37982  00429A  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37983                           
 37984                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 37985  00429C  0E01               	movlw	1
 37986  00429E  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37987                           
 37988                           ;interrupts.c: 538: (PR2 = 38);
 37989  0042A0  0E26               	movlw	38
 37990  0042A2  6ECB               	movwf	4043,c	;volatile
 37991                           
 37992                           ;interrupts.c: 539: IRcodePlace = 17;
 37993  0042A4  0E11               	movlw	17
 37994  0042A6  D013               	goto	L40
 37995  0042A8                     i2l16829:
 37996                           
 37997                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 37998  0042A8  0E11               	movlw	17
 37999  0042AA  1841               	xorwf	_IRcodePlace,w,c
 38000  0042AC  A4D8               	btfss	status,2,c
 38001  0042AE  D011               	goto	i2l16845
 38002                           
 38003                           ;interrupts.c: 542: {
 38004                           ;interrupts.c: 543: (IRmod = 0);
 38005  0042B0  0E00               	movlw	0
 38006  0042B2  0100               	movlb	0	; () banked
 38007  0042B4  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 38008                           
 38009                           ; BSR set to: 0
 38010                           ;interrupts.c: 544: (LATC &= ~0x08);
 38011  0042B6  968B               	bcf	3979,3,c	;volatile
 38012                           
 38013                           ; BSR set to: 0
 38014                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 38015  0042B8  0E1A               	movlw	26
 38016  0042BA  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 38017                           
 38018                           ; BSR set to: 0
 38019                           ;interrupts.c: 546: (PR2 = 246);
 38020  0042BC  0EF6               	movlw	246
 38021  0042BE  6ECB               	movwf	4043,c	;volatile
 38022                           
 38023                           ; BSR set to: 0
 38024                           ;interrupts.c: 547: IRrepeatAmount--;
 38025  0042C0  0631               	decf	_IRrepeatAmount,f,c
 38026                           
 38027                           ;interrupts.c: 548: if(IRrepeatAmount)
 38028  0042C2  5031               	movf	_IRrepeatAmount,w,c
 38029  0042C4  B4D8               	btfsc	status,2,c
 38030  0042C6  D002               	goto	i2l16843
 38031                           
 38032                           ; BSR set to: 0
 38033                           ;interrupts.c: 549: {
 38034                           ;interrupts.c: 550: IRcodePlace = 18;
 38035  0042C8  0E12               	movlw	18
 38036  0042CA  D001               	goto	L40
 38037  0042CC                     i2l16843:
 38038                           
 38039                           ; BSR set to: 0
 38040                           ;interrupts.c: 552: else
 38041                           ;interrupts.c: 553: {
 38042                           ;interrupts.c: 554: IRcodePlace = 13;
 38043  0042CC  0E0D               	movlw	13
 38044  0042CE                     L40:
 38045  0042CE  6E41               	movwf	_IRcodePlace,c
 38046                           
 38047                           ; BSR set to: 0
 38048                           ;interrupts.c: 555: }
 38049                           ;interrupts.c: 556: }
 38050  0042D0  D012               	goto	i2l16861
 38051  0042D2                     i2l16845:
 38052                           
 38053                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 38054  0042D2  0E0D               	movlw	13
 38055  0042D4  1841               	xorwf	_IRcodePlace,w,c
 38056  0042D6  A4D8               	btfss	status,2,c
 38057  0042D8  D005               	goto	i2l16851
 38058  0042DA  D00A               	goto	i2l16857
 38059  0042DC                     i2l16849:
 38060                           
 38061                           ;interrupts.c: 561: Sent = 1;
 38062  0042DC  0E01               	movlw	1
 38063  0042DE  0100               	movlb	0	; () banked
 38064  0042E0  6FE3               	movwf	_Sent& (0+255),b	;volatile
 38065                           
 38066                           ;interrupts.c: 562: }
 38067  0042E2  D009               	goto	i2l16861
 38068  0042E4                     i2l16851:
 38069                           
 38070                           ;interrupts.c: 563: else
 38071                           ;interrupts.c: 564: {
 38072                           ;interrupts.c: 566: (IRmod = 0);
 38073  0042E4  0E00               	movlw	0
 38074  0042E6  0100               	movlb	0	; () banked
 38075  0042E8  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 38076                           
 38077                           ; BSR set to: 0
 38078                           ;interrupts.c: 567: (LATC &= ~0x08);
 38079  0042EA  968B               	bcf	3979,3,c	;volatile
 38080                           
 38081                           ; BSR set to: 0
 38082                           ;interrupts.c: 568: IRcodePlace = 0;
 38083  0042EC  0E00               	movlw	0
 38084  0042EE  6E41               	movwf	_IRcodePlace,c
 38085  0042F0                     i2l16857:
 38086                           
 38087                           ; BSR set to: 0
 38088                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 38089  0042F0  94CA               	bcf	4042,2,c	;volatile
 38090  0042F2  D7F4               	goto	i2l16849
 38091                           
 38092                           ; BSR set to: 0
 38093                           
 38094                           ; BSR set to: 0
 38095                           
 38096                           ; BSR set to: 0
 38097                           
 38098                           ; BSR set to: 0
 38099                           
 38100                           ; BSR set to: 0
 38101                           
 38102                           ; BSR set to: 0
 38103                           
 38104                           ; BSR set to: 0
 38105                           
 38106                           ; BSR set to: 0
 38107                           
 38108                           ; BSR set to: 0
 38109                           
 38110                           ; BSR set to: 0
 38111                           
 38112                           ; BSR set to: 0
 38113                           
 38114                           ; BSR set to: 0
 38115                           ;interrupts.c: 570: Sent = 1;
 38116  0042F4  D000               	goto	i2l16861
 38117  0042F6                     i2l16861:
 38118                           
 38119                           ;interrupts.c: 571: }
 38120                           ;interrupts.c: 572: }
 38121                           ;interrupts.c: 573: }
 38122                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 38123  0042F6  929E               	bcf	3998,1,c	;volatile
 38124                           
 38125                           ;interrupts.c: 575: }
 38126  0042F8  D013               	goto	i2l1230
 38127  0042FA                     i2l1235:
 38128                           
 38129                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 38130  0042FA  A2A1               	btfss	4001,1,c	;volatile
 38131  0042FC  D00F               	goto	i2l1338
 38132                           
 38133                           ;interrupts.c: 577: {
 38134                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 38135  0042FE  90B1               	bcf	4017,0,c	;volatile
 38136                           
 38137                           ;interrupts.c: 579: if(Timer3_Postscaler < 4)
 38138  004300  0E04               	movlw	4
 38139  004302  603B               	cpfslt	_Timer3_Postscaler,c
 38140  004304  D005               	goto	i2l16873
 38141                           
 38142                           ;interrupts.c: 580: {
 38143                           ;interrupts.c: 581: ResetTimer3();
 38144  004306  ECE3  F04A         	call	_ResetTimer3	;wreg free
 38145                           
 38146                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 38147  00430A  80B1               	bsf	4017,0,c	;volatile
 38148                           
 38149                           ;interrupts.c: 583: Timer3_Postscaler++;
 38150  00430C  2A3B               	incf	_Timer3_Postscaler,f,c
 38151                           
 38152                           ;interrupts.c: 584: }
 38153  00430E  D004               	goto	i2l16875
 38154  004310                     i2l16873:
 38155                           
 38156                           ;interrupts.c: 585: else
 38157                           ;interrupts.c: 586: {
 38158                           ;interrupts.c: 591: Sent = 1;
 38159  004310  0E01               	movlw	1
 38160  004312  0100               	movlb	0	; () banked
 38161  004314  6FE3               	movwf	_Sent& (0+255),b	;volatile
 38162  004316  D000               	goto	i2l16875
 38163  004318                     i2l16875:
 38164                           
 38165                           ;interrupts.c: 592: }
 38166                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 38167  004318  92A1               	bcf	4001,1,c	;volatile
 38168                           
 38169                           ;interrupts.c: 594: }
 38170  00431A  D002               	goto	i2l1230
 38171  00431C                     i2l1338:
 38172                           
 38173                           ;interrupts.c: 595: else
 38174                           ;interrupts.c: 596: {
 38175                           ;interrupts.c: 598: __nop();
 38176  00431C  F000               	nop	
 38177  00431E  D000               	goto	i2l1230
 38178  004320                     i2l1230:
 38179                           
 38180                           ;interrupts.c: 599: }
 38181                           ;interrupts.c: 601: INTCONbits.GIE = 1;
 38182  004320  8EF2               	bsf	intcon,7,c	;volatile
 38183  004322  C078  FFF5         	movff	??_high_isr+17,tablat
 38184  004326  C077  FFF8         	movff	??_high_isr+16,tblptru
 38185  00432A  C076  FFF7         	movff	??_high_isr+15,tblptrh
 38186  00432E  C075  FFF6         	movff	??_high_isr+14,tblptrl
 38187  004332  C074  FFF4         	movff	??_high_isr+13,prodh
 38188  004336  C073  FFF3         	movff	??_high_isr+12,prodl
 38189  00433A  C072  FFDA         	movff	??_high_isr+11,fsr2h
 38190  00433E  C071  FFD9         	movff	??_high_isr+10,fsr2l
 38191  004342  C070  FFE2         	movff	??_high_isr+9,fsr1h
 38192  004346  C06F  FFE1         	movff	??_high_isr+8,fsr1l
 38193  00434A  C06E  FFEA         	movff	??_high_isr+7,fsr0h
 38194  00434E  C06D  FFE9         	movff	??_high_isr+6,fsr0l
 38195  004352  C06C  FFFB         	movff	??_high_isr+5,pclatu
 38196  004356  C06B  FFFA         	movff	??_high_isr+4,pclath
 38197  00435A  0011               	retfie		f
 38198  00435C                     __end_of_high_isr:
 38199                           	opt stack 0
 38200                           pclatu	equ	0xFFB
 38201                           pclath	equ	0xFFA
 38202                           tblptru	equ	0xFF8
 38203                           tblptrh	equ	0xFF7
 38204                           tblptrl	equ	0xFF6
 38205                           tablat	equ	0xFF5
 38206                           prodh	equ	0xFF4
 38207                           prodl	equ	0xFF3
 38208                           intcon	equ	0xFF2
 38209                           intcon2	equ	0xFF1
 38210                           indf0	equ	0xFEF
 38211                           postinc0	equ	0xFEE
 38212                           plusw0	equ	0xFEB
 38213                           fsr0h	equ	0xFEA
 38214                           fsr0l	equ	0xFE9
 38215                           wreg	equ	0xFE8
 38216                           indf1	equ	0xFE7
 38217                           postdec1	equ	0xFE5
 38218                           fsr1h	equ	0xFE2
 38219                           fsr1l	equ	0xFE1
 38220                           bsr	equ	0xFE0
 38221                           indf2	equ	0xFDF
 38222                           postinc2	equ	0xFDE
 38223                           postdec2	equ	0xFDD
 38224                           plusw2	equ	0xFDB
 38225                           fsr2h	equ	0xFDA
 38226                           fsr2l	equ	0xFD9
 38227                           status	equ	0xFD8
 38228                           
 38229 ;; *************** function i2_cleanBuffer16bit *****************
 38230 ;; Defined at:
 38231 ;;		line 141 in file "MISC.c"
 38232 ;; Parameters:    Size  Location     Type
 38233 ;;  data            2   26[COMRAM] PTR unsigned int 
 38234 ;;		 -> IRRawCode(200), 
 38235 ;;  count           2   28[COMRAM] int 
 38236 ;; Auto vars:     Size  Location     Type
 38237 ;;  cleanBuffer1    1   33[COMRAM] unsigned char 
 38238 ;; Return value:  Size  Location     Type
 38239 ;;		None               void
 38240 ;; Registers used:
 38241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38242 ;; Tracked objects:
 38243 ;;		On entry : 0/0
 38244 ;;		On exit  : 0/0
 38245 ;;		Unchanged: 0/0
 38246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38249 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38250 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38251 ;;Total ram usage:        8 bytes
 38252 ;; Hardware stack levels used:    1
 38253 ;; This function calls:
 38254 ;;		Nothing
 38255 ;; This function is called by:
 38256 ;;		_high_isr
 38257 ;; This function uses a non-reentrant model
 38258 ;;
 38259                           
 38260                           	psect	text111
 38261  00912A                     __ptext111:
 38262                           	opt stack 0
 38263  00912A                     i2_cleanBuffer16bit:
 38264                           	opt stack 17
 38265                           
 38266                           ;MISC.c: 143: unsigned char i=0;
 38267                           
 38268                           ;incstack = 0
 38269  00912A  0E00               	movlw	0
 38270  00912C  6E22               	movwf	i2cleanBuffer16bit@i,c
 38271                           
 38272                           ;MISC.c: 144: for(i=0; i<count;i++)
 38273  00912E  0E00               	movlw	0
 38274  009130  6E22               	movwf	i2cleanBuffer16bit@i,c
 38275  009132  D00E               	goto	i2l16223
 38276  009134                     i2l16219:
 38277                           
 38278                           ;MISC.c: 145: {
 38279                           ;MISC.c: 146: data[i]= 0;
 38280  009134  5022               	movf	i2cleanBuffer16bit@i,w,c
 38281  009136  0D02               	mullw	2
 38282  009138  50F3               	movf	prodl,w,c
 38283  00913A  241B               	addwf	i2cleanBuffer16bit@data,w,c
 38284  00913C  6ED9               	movwf	fsr2l,c
 38285  00913E  50F4               	movf	prodh,w,c
 38286  009140  201C               	addwfc	i2cleanBuffer16bit@data+1,w,c
 38287  009142  6EDA               	movwf	fsr2h,c
 38288  009144  0E00               	movlw	0
 38289  009146  6EDE               	movwf	postinc2,c
 38290  009148  0E00               	movlw	0
 38291  00914A  6EDD               	movwf	postdec2,c
 38292  00914C  2A22               	incf	i2cleanBuffer16bit@i,f,c
 38293  00914E  D000               	goto	i2l16223
 38294  009150                     i2l16223:
 38295  009150  5022               	movf	i2cleanBuffer16bit@i,w,c
 38296  009152  6E1F               	movwf	??i2_cleanBuffer16bit& (0+255),c
 38297  009154  6A20               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 38298  009156  501D               	movf	i2cleanBuffer16bit@count,w,c
 38299  009158  5C1F               	subwf	??i2_cleanBuffer16bit,w,c
 38300  00915A  5020               	movf	??i2_cleanBuffer16bit+1,w,c
 38301  00915C  0A80               	xorlw	128
 38302  00915E  6E21               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 38303  009160  501E               	movf	i2cleanBuffer16bit@count+1,w,c
 38304  009162  0A80               	xorlw	128
 38305  009164  5821               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 38306  009166  A0D8               	btfss	status,0,c
 38307  009168  D7E5               	goto	i2l16219
 38308  00916A  0012               	return		;funcret
 38309  00916C                     __end_ofi2_cleanBuffer16bit:
 38310                           	opt stack 0
 38311                           pclatu	equ	0xFFB
 38312                           pclath	equ	0xFFA
 38313                           tblptru	equ	0xFF8
 38314                           tblptrh	equ	0xFF7
 38315                           tblptrl	equ	0xFF6
 38316                           tablat	equ	0xFF5
 38317                           prodh	equ	0xFF4
 38318                           prodl	equ	0xFF3
 38319                           intcon	equ	0xFF2
 38320                           intcon2	equ	0xFF1
 38321                           indf0	equ	0xFEF
 38322                           postinc0	equ	0xFEE
 38323                           plusw0	equ	0xFEB
 38324                           fsr0h	equ	0xFEA
 38325                           fsr0l	equ	0xFE9
 38326                           wreg	equ	0xFE8
 38327                           indf1	equ	0xFE7
 38328                           postdec1	equ	0xFE5
 38329                           fsr1h	equ	0xFE2
 38330                           fsr1l	equ	0xFE1
 38331                           bsr	equ	0xFE0
 38332                           indf2	equ	0xFDF
 38333                           postinc2	equ	0xFDE
 38334                           postdec2	equ	0xFDD
 38335                           plusw2	equ	0xFDB
 38336                           fsr2h	equ	0xFDA
 38337                           fsr2l	equ	0xFD9
 38338                           status	equ	0xFD8
 38339                           
 38340 ;; *************** function i2_ResetTimer0 *****************
 38341 ;; Defined at:
 38342 ;;		line 79 in file "Timer.c"
 38343 ;; Parameters:    Size  Location     Type
 38344 ;;		None
 38345 ;; Auto vars:     Size  Location     Type
 38346 ;;		None
 38347 ;; Return value:  Size  Location     Type
 38348 ;;		None               void
 38349 ;; Registers used:
 38350 ;;		wreg, status,2
 38351 ;; Tracked objects:
 38352 ;;		On entry : 0/0
 38353 ;;		On exit  : 0/0
 38354 ;;		Unchanged: 0/0
 38355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38360 ;;Total ram usage:        0 bytes
 38361 ;; Hardware stack levels used:    1
 38362 ;; This function calls:
 38363 ;;		Nothing
 38364 ;; This function is called by:
 38365 ;;		_high_isr
 38366 ;; This function uses a non-reentrant model
 38367 ;;
 38368                           
 38369                           	psect	text112
 38370  0095B2                     __ptext112:
 38371                           	opt stack 0
 38372  0095B2                     i2_ResetTimer0:
 38373                           	opt stack 17
 38374                           
 38375                           ;Timer.c: 85: TMR0H = 0;
 38376                           
 38377                           ;incstack = 0
 38378  0095B2  0E00               	movlw	0
 38379  0095B4  6ED7               	movwf	4055,c	;volatile
 38380                           
 38381                           ;Timer.c: 86: TMR0L = 2;
 38382  0095B6  0E02               	movlw	2
 38383  0095B8  6ED6               	movwf	4054,c	;volatile
 38384  0095BA  0012               	return		;funcret
 38385  0095BC                     __end_ofi2_ResetTimer0:
 38386                           	opt stack 0
 38387                           pclatu	equ	0xFFB
 38388                           pclath	equ	0xFFA
 38389                           tblptru	equ	0xFF8
 38390                           tblptrh	equ	0xFF7
 38391                           tblptrl	equ	0xFF6
 38392                           tablat	equ	0xFF5
 38393                           prodh	equ	0xFF4
 38394                           prodl	equ	0xFF3
 38395                           intcon	equ	0xFF2
 38396                           intcon2	equ	0xFF1
 38397                           indf0	equ	0xFEF
 38398                           postinc0	equ	0xFEE
 38399                           plusw0	equ	0xFEB
 38400                           fsr0h	equ	0xFEA
 38401                           fsr0l	equ	0xFE9
 38402                           wreg	equ	0xFE8
 38403                           indf1	equ	0xFE7
 38404                           postdec1	equ	0xFE5
 38405                           fsr1h	equ	0xFE2
 38406                           fsr1l	equ	0xFE1
 38407                           bsr	equ	0xFE0
 38408                           indf2	equ	0xFDF
 38409                           postinc2	equ	0xFDE
 38410                           postdec2	equ	0xFDD
 38411                           plusw2	equ	0xFDB
 38412                           fsr2h	equ	0xFDA
 38413                           fsr2l	equ	0xFD9
 38414                           status	equ	0xFD8
 38415                           
 38416 ;; *************** function i2_ReadIRpin *****************
 38417 ;; Defined at:
 38418 ;;		line 107 in file "IR.c"
 38419 ;; Parameters:    Size  Location     Type
 38420 ;;		None
 38421 ;; Auto vars:     Size  Location     Type
 38422 ;;		None
 38423 ;; Return value:  Size  Location     Type
 38424 ;;                  1    wreg      unsigned char 
 38425 ;; Registers used:
 38426 ;;		wreg
 38427 ;; Tracked objects:
 38428 ;;		On entry : 0/0
 38429 ;;		On exit  : 0/0
 38430 ;;		Unchanged: 0/0
 38431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38436 ;;Total ram usage:        0 bytes
 38437 ;; Hardware stack levels used:    1
 38438 ;; This function calls:
 38439 ;;		Nothing
 38440 ;; This function is called by:
 38441 ;;		_high_isr
 38442 ;; This function uses a non-reentrant model
 38443 ;;
 38444                           
 38445                           	psect	text113
 38446  009586                     __ptext113:
 38447                           	opt stack 0
 38448  009586                     i2_ReadIRpin:
 38449                           	opt stack 17
 38450                           
 38451                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 38452                           
 38453                           ;incstack = 0
 38454  009586  A881               	btfss	3969,4,c	;volatile
 38455  009588  D002               	goto	i2l16235
 38456                           
 38457                           ;IR.c: 111: {
 38458                           ;IR.c: 112: return (1);
 38459  00958A  0E01               	movlw	1
 38460                           
 38461                           ;IR.c: 113: }
 38462  00958C  0012               	return	
 38463  00958E                     i2l16235:
 38464                           
 38465                           ;IR.c: 114: else
 38466                           ;IR.c: 115: {
 38467                           ;IR.c: 116: return 0;
 38468  00958E  0E00               	movlw	0
 38469  009590  0012               	return	
 38470  009592  0012               	return		;funcret
 38471  009594                     __end_ofi2_ReadIRpin:
 38472                           	opt stack 0
 38473                           pclatu	equ	0xFFB
 38474                           pclath	equ	0xFFA
 38475                           tblptru	equ	0xFF8
 38476                           tblptrh	equ	0xFF7
 38477                           tblptrl	equ	0xFF6
 38478                           tablat	equ	0xFF5
 38479                           prodh	equ	0xFF4
 38480                           prodl	equ	0xFF3
 38481                           intcon	equ	0xFF2
 38482                           intcon2	equ	0xFF1
 38483                           indf0	equ	0xFEF
 38484                           postinc0	equ	0xFEE
 38485                           plusw0	equ	0xFEB
 38486                           fsr0h	equ	0xFEA
 38487                           fsr0l	equ	0xFE9
 38488                           wreg	equ	0xFE8
 38489                           indf1	equ	0xFE7
 38490                           postdec1	equ	0xFE5
 38491                           fsr1h	equ	0xFE2
 38492                           fsr1l	equ	0xFE1
 38493                           bsr	equ	0xFE0
 38494                           indf2	equ	0xFDF
 38495                           postinc2	equ	0xFDE
 38496                           postdec2	equ	0xFDD
 38497                           plusw2	equ	0xFDB
 38498                           fsr2h	equ	0xFDA
 38499                           fsr2l	equ	0xFD9
 38500                           status	equ	0xFD8
 38501                           
 38502 ;; *************** function _SetTimer0 *****************
 38503 ;; Defined at:
 38504 ;;		line 94 in file "Timer.c"
 38505 ;; Parameters:    Size  Location     Type
 38506 ;;  temp            2   26[COMRAM] unsigned int 
 38507 ;; Auto vars:     Size  Location     Type
 38508 ;;		None
 38509 ;; Return value:  Size  Location     Type
 38510 ;;		None               void
 38511 ;; Registers used:
 38512 ;;		wreg, status,2
 38513 ;; Tracked objects:
 38514 ;;		On entry : 0/0
 38515 ;;		On exit  : 0/0
 38516 ;;		Unchanged: 0/0
 38517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38522 ;;Total ram usage:        2 bytes
 38523 ;; Hardware stack levels used:    1
 38524 ;; This function calls:
 38525 ;;		Nothing
 38526 ;; This function is called by:
 38527 ;;		_high_isr
 38528 ;; This function uses a non-reentrant model
 38529 ;;
 38530                           
 38531                           	psect	text114
 38532  0095BC                     __ptext114:
 38533                           	opt stack 0
 38534  0095BC                     _SetTimer0:
 38535                           	opt stack 17
 38536                           
 38537                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 38538                           
 38539                           ;incstack = 0
 38540  0095BC  501C               	movf	SetTimer0@temp+1,w,c
 38541  0095BE  6ED7               	movwf	4055,c	;volatile
 38542                           
 38543                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 38544  0095C0  C01B  FFD6         	movff	SetTimer0@temp,4054	;volatile
 38545  0095C4  0012               	return		;funcret
 38546  0095C6                     __end_of_SetTimer0:
 38547                           	opt stack 0
 38548                           pclatu	equ	0xFFB
 38549                           pclath	equ	0xFFA
 38550                           tblptru	equ	0xFF8
 38551                           tblptrh	equ	0xFF7
 38552                           tblptrl	equ	0xFF6
 38553                           tablat	equ	0xFF5
 38554                           prodh	equ	0xFF4
 38555                           prodl	equ	0xFF3
 38556                           intcon	equ	0xFF2
 38557                           intcon2	equ	0xFF1
 38558                           indf0	equ	0xFEF
 38559                           postinc0	equ	0xFEE
 38560                           plusw0	equ	0xFEB
 38561                           fsr0h	equ	0xFEA
 38562                           fsr0l	equ	0xFE9
 38563                           wreg	equ	0xFE8
 38564                           indf1	equ	0xFE7
 38565                           postdec1	equ	0xFE5
 38566                           fsr1h	equ	0xFE2
 38567                           fsr1l	equ	0xFE1
 38568                           bsr	equ	0xFE0
 38569                           indf2	equ	0xFDF
 38570                           postinc2	equ	0xFDE
 38571                           postdec2	equ	0xFDD
 38572                           plusw2	equ	0xFDB
 38573                           fsr2h	equ	0xFDA
 38574                           fsr2l	equ	0xFD9
 38575                           status	equ	0xFD8
 38576                           
 38577 ;; *************** function _ResetTimer3 *****************
 38578 ;; Defined at:
 38579 ;;		line 175 in file "Timer.c"
 38580 ;; Parameters:    Size  Location     Type
 38581 ;;		None
 38582 ;; Auto vars:     Size  Location     Type
 38583 ;;		None
 38584 ;; Return value:  Size  Location     Type
 38585 ;;		None               void
 38586 ;; Registers used:
 38587 ;;		wreg, status,2
 38588 ;; Tracked objects:
 38589 ;;		On entry : 0/0
 38590 ;;		On exit  : 0/0
 38591 ;;		Unchanged: 0/0
 38592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38597 ;;Total ram usage:        0 bytes
 38598 ;; Hardware stack levels used:    1
 38599 ;; This function calls:
 38600 ;;		Nothing
 38601 ;; This function is called by:
 38602 ;;		_high_isr
 38603 ;; This function uses a non-reentrant model
 38604 ;;
 38605                           
 38606                           	psect	text115
 38607  0095C6                     __ptext115:
 38608                           	opt stack 0
 38609  0095C6                     _ResetTimer3:
 38610                           	opt stack 17
 38611                           
 38612                           ;Timer.c: 181: TMR3H = 0;
 38613                           
 38614                           ;incstack = 0
 38615  0095C6  0E00               	movlw	0
 38616  0095C8  6EB3               	movwf	4019,c	;volatile
 38617                           
 38618                           ;Timer.c: 182: TMR3L = 2;
 38619  0095CA  0E02               	movlw	2
 38620  0095CC  6EB2               	movwf	4018,c	;volatile
 38621  0095CE  0012               	return		;funcret
 38622  0095D0                     __end_of_ResetTimer3:
 38623                           	opt stack 0
 38624                           pclatu	equ	0xFFB
 38625                           pclath	equ	0xFFA
 38626                           tblptru	equ	0xFF8
 38627                           tblptrh	equ	0xFF7
 38628                           tblptrl	equ	0xFF6
 38629                           tablat	equ	0xFF5
 38630                           prodh	equ	0xFF4
 38631                           prodl	equ	0xFF3
 38632                           intcon	equ	0xFF2
 38633                           intcon2	equ	0xFF1
 38634                           indf0	equ	0xFEF
 38635                           postinc0	equ	0xFEE
 38636                           plusw0	equ	0xFEB
 38637                           fsr0h	equ	0xFEA
 38638                           fsr0l	equ	0xFE9
 38639                           wreg	equ	0xFE8
 38640                           indf1	equ	0xFE7
 38641                           postdec1	equ	0xFE5
 38642                           fsr1h	equ	0xFE2
 38643                           fsr1l	equ	0xFE1
 38644                           bsr	equ	0xFE0
 38645                           indf2	equ	0xFDF
 38646                           postinc2	equ	0xFDE
 38647                           postdec2	equ	0xFDD
 38648                           plusw2	equ	0xFDB
 38649                           fsr2h	equ	0xFDA
 38650                           fsr2l	equ	0xFD9
 38651                           status	equ	0xFD8
 38652                           
 38653 ;; *************** function _IRrawToNEC *****************
 38654 ;; Defined at:
 38655 ;;		line 125 in file "IR.c"
 38656 ;; Parameters:    Size  Location     Type
 38657 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 38658 ;;		 -> IRRawCode(200), 
 38659 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 38660 ;;		 -> IR_NEC(4), 
 38661 ;;  Invert          1   30[COMRAM] unsigned char 
 38662 ;; Auto vars:     Size  Location     Type
 38663 ;;  NECtemp         4    0[BANK0 ] unsigned long 
 38664 ;;  StartBit        1    6[BANK0 ] unsigned char 
 38665 ;;  i               1    5[BANK0 ] unsigned char 
 38666 ;;  first           1    4[BANK0 ] unsigned char 
 38667 ;; Return value:  Size  Location     Type
 38668 ;;                  1    wreg      unsigned char 
 38669 ;; Registers used:
 38670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38671 ;; Tracked objects:
 38672 ;;		On entry : 0/0
 38673 ;;		On exit  : 0/0
 38674 ;;		Unchanged: 0/0
 38675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38676 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38677 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38679 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38680 ;;Total ram usage:       14 bytes
 38681 ;; Hardware stack levels used:    1
 38682 ;; This function calls:
 38683 ;;		Nothing
 38684 ;; This function is called by:
 38685 ;;		_high_isr
 38686 ;; This function uses a non-reentrant model
 38687 ;;
 38688                           
 38689                           	psect	text116
 38690  005540                     __ptext116:
 38691                           	opt stack 0
 38692  005540                     _IRrawToNEC:
 38693                           	opt stack 17
 38694                           
 38695                           ;IR.c: 153: unsigned char i;
 38696                           ;IR.c: 154: unsigned char first =0;
 38697                           
 38698                           ;incstack = 0
 38699  005540  0E00               	movlw	0
 38700  005542  0100               	movlb	0	; () banked
 38701  005544  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38702                           
 38703                           ;IR.c: 155: unsigned char StartBit=100;
 38704  005546  0E64               	movlw	100
 38705  005548  0100               	movlb	0	; () banked
 38706  00554A  6F66               	movwf	IRrawToNEC@StartBit& (0+255),b
 38707                           
 38708                           ;IR.c: 156: unsigned long NECtemp = 0;
 38709  00554C  0E00               	movlw	0
 38710  00554E  0100               	movlb	0	; () banked
 38711  005550  6F60               	movwf	IRrawToNEC@NECtemp& (0+255),b
 38712  005552  0E00               	movlw	0
 38713  005554  6F61               	movwf	(IRrawToNEC@NECtemp+1)& (0+255),b
 38714  005556  0E00               	movlw	0
 38715  005558  6F62               	movwf	(IRrawToNEC@NECtemp+2)& (0+255),b
 38716  00555A  0E00               	movlw	0
 38717  00555C  6F63               	movwf	(IRrawToNEC@NECtemp+3)& (0+255),b
 38718                           
 38719                           ;IR.c: 159: for (i =0; i < 100; i++)
 38720  00555E  0E00               	movlw	0
 38721  005560  0100               	movlb	0	; () banked
 38722  005562  6F65               	movwf	IRrawToNEC@i& (0+255),b
 38723  005564                     i2l16079:
 38724                           
 38725                           ; BSR set to: 0
 38726  005564  0E63               	movlw	99
 38727  005566  0100               	movlb	0	; () banked
 38728  005568  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38729  00556A  D001               	goto	i2l16083
 38730                           
 38731                           ; BSR set to: 0
 38732  00556C  D024               	goto	i2l16093
 38733  00556E                     i2l16083:
 38734                           
 38735                           ; BSR set to: 0
 38736                           ;IR.c: 160: {
 38737                           ;IR.c: 161: if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 38738  00556E  0100               	movlb	0	; () banked
 38739  005570  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38740  005572  0D02               	mullw	2
 38741  005574  50F3               	movf	prodl,w,c
 38742  005576  241B               	addwf	IRrawToNEC@Raw,w,c
 38743  005578  6ED9               	movwf	fsr2l,c
 38744  00557A  50F4               	movf	prodh,w,c
 38745  00557C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38746  00557E  6EDA               	movwf	fsr2h,c
 38747  005580  0EA0               	movlw	160
 38748  005582  5CDE               	subwf	postinc2,w,c
 38749  005584  0E0F               	movlw	15
 38750  005586  58DE               	subwfb	postinc2,w,c
 38751  005588  A0D8               	btfss	status,0,c
 38752  00558A  D012               	goto	i2l16089
 38753                           
 38754                           ; BSR set to: 0
 38755  00558C  0100               	movlb	0	; () banked
 38756  00558E  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38757  005590  0D02               	mullw	2
 38758  005592  50F3               	movf	prodl,w,c
 38759  005594  241B               	addwf	IRrawToNEC@Raw,w,c
 38760  005596  6ED9               	movwf	fsr2l,c
 38761  005598  50F4               	movf	prodh,w,c
 38762  00559A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38763  00559C  6EDA               	movwf	fsr2h,c
 38764  00559E  0E89               	movlw	137
 38765  0055A0  5CDE               	subwf	postinc2,w,c
 38766  0055A2  0E13               	movlw	19
 38767  0055A4  58DE               	subwfb	postinc2,w,c
 38768  0055A6  B0D8               	btfsc	status,0,c
 38769  0055A8  D003               	goto	i2l16089
 38770                           
 38771                           ; BSR set to: 0
 38772                           ;IR.c: 162: {
 38773                           ;IR.c: 164: StartBit = i;
 38774  0055AA  C065  F066         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 38775                           
 38776                           ;IR.c: 165: break;
 38777  0055AE  D003               	goto	i2l16093
 38778  0055B0                     i2l16089:
 38779                           
 38780                           ; BSR set to: 0
 38781  0055B0  0100               	movlb	0	; () banked
 38782  0055B2  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 38783  0055B4  D7D7               	goto	i2l16079
 38784  0055B6                     i2l16093:
 38785                           
 38786                           ; BSR set to: 0
 38787                           ;IR.c: 166: }
 38788                           ;IR.c: 167: }
 38789                           ;IR.c: 168: if((100 - StartBit) < 50)
 38790  0055B6  0100               	movlb	0	; () banked
 38791  0055B8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38792  0055BA  6E20               	movwf	??_IRrawToNEC& (0+255),c
 38793  0055BC  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 38794  0055BE  1E20               	comf	??_IRrawToNEC,f,c
 38795  0055C0  1E21               	comf	??_IRrawToNEC+1,f,c
 38796  0055C2  4A20               	infsnz	??_IRrawToNEC,f,c
 38797  0055C4  2A21               	incf	??_IRrawToNEC+1,f,c
 38798  0055C6  0E64               	movlw	100
 38799  0055C8  2620               	addwf	??_IRrawToNEC,f,c
 38800  0055CA  0E00               	movlw	0
 38801  0055CC  2221               	addwfc	??_IRrawToNEC+1,f,c
 38802  0055CE  BE21               	btfsc	??_IRrawToNEC+1,7,c
 38803  0055D0  D006               	goto	i2l16095
 38804  0055D2  5021               	movf	??_IRrawToNEC+1,w,c
 38805  0055D4  E106               	bnz	i2l16099
 38806  0055D6  0E32               	movlw	50
 38807  0055D8  5C20               	subwf	??_IRrawToNEC,w,c
 38808  0055DA  B0D8               	btfsc	status,0,c
 38809  0055DC  D002               	goto	i2l16099
 38810  0055DE                     i2l16095:
 38811                           
 38812                           ; BSR set to: 0
 38813                           ;IR.c: 169: {
 38814                           ;IR.c: 171: return 0;
 38815  0055DE  0E00               	movlw	0
 38816                           
 38817                           ; BSR set to: 0
 38818  0055E0  0012               	return	
 38819  0055E2                     i2l16099:
 38820                           
 38821                           ; BSR set to: 0
 38822                           ;IR.c: 172: }
 38823                           ;IR.c: 174: StartBit++;
 38824  0055E2  0100               	movlb	0	; () banked
 38825  0055E4  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38826                           
 38827                           ; BSR set to: 0
 38828                           ;IR.c: 175: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 38829  0055E6  0100               	movlb	0	; () banked
 38830  0055E8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38831  0055EA  0D02               	mullw	2
 38832  0055EC  50F3               	movf	prodl,w,c
 38833  0055EE  241B               	addwf	IRrawToNEC@Raw,w,c
 38834  0055F0  6ED9               	movwf	fsr2l,c
 38835  0055F2  50F4               	movf	prodh,w,c
 38836  0055F4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38837  0055F6  6EDA               	movwf	fsr2h,c
 38838  0055F8  0E9D               	movlw	157
 38839  0055FA  5CDE               	subwf	postinc2,w,c
 38840  0055FC  0E03               	movlw	3
 38841  0055FE  58DE               	subwfb	postinc2,w,c
 38842  005600  A0D8               	btfss	status,0,c
 38843  005602  D053               	goto	i2l16121
 38844                           
 38845                           ; BSR set to: 0
 38846  005604  0100               	movlb	0	; () banked
 38847  005606  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38848  005608  0D02               	mullw	2
 38849  00560A  50F3               	movf	prodl,w,c
 38850  00560C  241B               	addwf	IRrawToNEC@Raw,w,c
 38851  00560E  6ED9               	movwf	fsr2l,c
 38852  005610  50F4               	movf	prodh,w,c
 38853  005612  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38854  005614  6EDA               	movwf	fsr2h,c
 38855  005616  0EE3               	movlw	227
 38856  005618  5CDE               	subwf	postinc2,w,c
 38857  00561A  0E04               	movlw	4
 38858  00561C  58DE               	subwfb	postinc2,w,c
 38859  00561E  B0D8               	btfsc	status,0,c
 38860  005620  D044               	goto	i2l16121
 38861                           
 38862                           ; BSR set to: 0
 38863                           ;IR.c: 176: {
 38864                           ;IR.c: 178: StartBit++;
 38865  005622  0100               	movlb	0	; () banked
 38866  005624  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38867                           
 38868                           ; BSR set to: 0
 38869                           ;IR.c: 179: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38870  005626  0100               	movlb	0	; () banked
 38871  005628  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38872  00562A  0D02               	mullw	2
 38873  00562C  50F3               	movf	prodl,w,c
 38874  00562E  241B               	addwf	IRrawToNEC@Raw,w,c
 38875  005630  6ED9               	movwf	fsr2l,c
 38876  005632  50F4               	movf	prodh,w,c
 38877  005634  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38878  005636  6EDA               	movwf	fsr2h,c
 38879  005638  0E01               	movlw	1
 38880  00563A  50DB               	movf	plusw2,w,c
 38881  00563C  E104               	bnz	i2u2018_40
 38882  00563E  0E7D               	movlw	125
 38883  005640  5CDE               	subwf	postinc2,w,c
 38884  005642  A0D8               	btfss	status,0,c
 38885  005644  D053               	goto	i2l16129
 38886  005646                     i2u2018_40:
 38887                           
 38888                           ; BSR set to: 0
 38889  005646  0100               	movlb	0	; () banked
 38890  005648  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38891  00564A  0D02               	mullw	2
 38892  00564C  50F3               	movf	prodl,w,c
 38893  00564E  241B               	addwf	IRrawToNEC@Raw,w,c
 38894  005650  6ED9               	movwf	fsr2l,c
 38895  005652  50F4               	movf	prodh,w,c
 38896  005654  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38897  005656  6EDA               	movwf	fsr2h,c
 38898  005658  0E59               	movlw	89
 38899  00565A  5CDE               	subwf	postinc2,w,c
 38900  00565C  0E02               	movlw	2
 38901  00565E  58DE               	subwfb	postinc2,w,c
 38902  005660  B0D8               	btfsc	status,0,c
 38903  005662  D044               	goto	i2l16129
 38904                           
 38905                           ; BSR set to: 0
 38906                           ;IR.c: 180: {
 38907                           ;IR.c: 182: StartBit++;
 38908  005664  0100               	movlb	0	; () banked
 38909  005666  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38910                           
 38911                           ; BSR set to: 0
 38912                           ;IR.c: 183: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 38913  005668  0100               	movlb	0	; () banked
 38914  00566A  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38915  00566C  0D02               	mullw	2
 38916  00566E  50F3               	movf	prodl,w,c
 38917  005670  241B               	addwf	IRrawToNEC@Raw,w,c
 38918  005672  6ED9               	movwf	fsr2l,c
 38919  005674  50F4               	movf	prodh,w,c
 38920  005676  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38921  005678  6EDA               	movwf	fsr2h,c
 38922  00567A  0EC8               	movlw	200
 38923  00567C  5CDE               	subwf	postinc2,w,c
 38924  00567E  0EAF               	movlw	175
 38925  005680  58DE               	subwfb	postinc2,w,c
 38926  005682  A0D8               	btfss	status,0,c
 38927  005684  D033               	goto	i2l16129
 38928                           
 38929                           ; BSR set to: 0
 38930  005686  0100               	movlb	0	; () banked
 38931  005688  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38932  00568A  0D02               	mullw	2
 38933  00568C  50F3               	movf	prodl,w,c
 38934  00568E  241B               	addwf	IRrawToNEC@Raw,w,c
 38935  005690  6ED9               	movwf	fsr2l,c
 38936  005692  50F4               	movf	prodh,w,c
 38937  005694  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38938  005696  6EDA               	movwf	fsr2h,c
 38939  005698  0E51               	movlw	81
 38940  00569A  5CDE               	subwf	postinc2,w,c
 38941  00569C  0EC3               	movlw	195
 38942  00569E  58DE               	subwfb	postinc2,w,c
 38943  0056A0  B0D8               	btfsc	status,0,c
 38944  0056A2  D024               	goto	i2l16129
 38945                           
 38946                           ; BSR set to: 0
 38947                           ;IR.c: 184: {
 38948                           ;IR.c: 186: return 2;
 38949  0056A4  0E02               	movlw	2
 38950                           
 38951                           ; BSR set to: 0
 38952  0056A6  0012               	return	
 38953                           
 38954                           ; BSR set to: 0
 38955                           ;IR.c: 187: }
 38956                           ;IR.c: 188: }
 38957                           ;IR.c: 189: }
 38958                           
 38959                           ; BSR set to: 0
 38960  0056A8  D021               	goto	i2l16129
 38961  0056AA                     i2l16121:
 38962                           
 38963                           ; BSR set to: 0
 38964                           ;IR.c: 190: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 38965  0056AA  0100               	movlb	0	; () banked
 38966  0056AC  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38967  0056AE  0D02               	mullw	2
 38968  0056B0  50F3               	movf	prodl,w,c
 38969  0056B2  241B               	addwf	IRrawToNEC@Raw,w,c
 38970  0056B4  6ED9               	movwf	fsr2l,c
 38971  0056B6  50F4               	movf	prodh,w,c
 38972  0056B8  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38973  0056BA  6EDA               	movwf	fsr2h,c
 38974  0056BC  0ED6               	movlw	214
 38975  0056BE  5CDE               	subwf	postinc2,w,c
 38976  0056C0  0E06               	movlw	6
 38977  0056C2  58DE               	subwfb	postinc2,w,c
 38978  0056C4  A0D8               	btfss	status,0,c
 38979  0056C6  D00F               	goto	i2l16125
 38980                           
 38981                           ; BSR set to: 0
 38982  0056C8  0100               	movlb	0	; () banked
 38983  0056CA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38984  0056CC  0D02               	mullw	2
 38985  0056CE  50F3               	movf	prodl,w,c
 38986  0056D0  241B               	addwf	IRrawToNEC@Raw,w,c
 38987  0056D2  6ED9               	movwf	fsr2l,c
 38988  0056D4  50F4               	movf	prodh,w,c
 38989  0056D6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38990  0056D8  6EDA               	movwf	fsr2h,c
 38991  0056DA  0EBF               	movlw	191
 38992  0056DC  5CDE               	subwf	postinc2,w,c
 38993  0056DE  0E0A               	movlw	10
 38994  0056E0  58DE               	subwfb	postinc2,w,c
 38995  0056E2  A0D8               	btfss	status,0,c
 38996  0056E4  D003               	goto	i2l16129
 38997  0056E6                     i2l16125:
 38998                           
 38999                           ; BSR set to: 0
 39000                           ;IR.c: 191: {
 39001                           ;IR.c: 193: return 0;
 39002  0056E6  0E00               	movlw	0
 39003                           
 39004                           ; BSR set to: 0
 39005  0056E8  0012               	return	
 39006                           
 39007                           ; BSR set to: 0
 39008  0056EA  D000               	goto	i2l16129
 39009  0056EC                     i2l16129:
 39010                           
 39011                           ; BSR set to: 0
 39012                           ;IR.c: 194: }
 39013                           ;IR.c: 196: StartBit++;
 39014  0056EC  0100               	movlb	0	; () banked
 39015  0056EE  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 39016                           
 39017                           ; BSR set to: 0
 39018                           ;IR.c: 197: for(i = StartBit; i < 100;i++)
 39019  0056F0  C066  F065         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 39020  0056F4                     i2l16133:
 39021                           
 39022                           ; BSR set to: 0
 39023  0056F4  0E63               	movlw	99
 39024  0056F6  0100               	movlb	0	; () banked
 39025  0056F8  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 39026  0056FA  D001               	goto	i2l16137
 39027                           
 39028                           ; BSR set to: 0
 39029  0056FC  D0E0               	goto	i2l16213
 39030  0056FE                     i2l16137:
 39031                           
 39032                           ; BSR set to: 0
 39033                           ;IR.c: 198: {
 39034                           ;IR.c: 199: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 39035  0056FE  0100               	movlb	0	; () banked
 39036  005700  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39037  005702  0D02               	mullw	2
 39038  005704  50F3               	movf	prodl,w,c
 39039  005706  241B               	addwf	IRrawToNEC@Raw,w,c
 39040  005708  6ED9               	movwf	fsr2l,c
 39041  00570A  50F4               	movf	prodh,w,c
 39042  00570C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39043  00570E  6EDA               	movwf	fsr2h,c
 39044  005710  0E01               	movlw	1
 39045  005712  50DB               	movf	plusw2,w,c
 39046  005714  E104               	bnz	i2u2025_40
 39047  005716  0E7D               	movlw	125
 39048  005718  5CDE               	subwf	postinc2,w,c
 39049  00571A  A0D8               	btfss	status,0,c
 39050  00571C  D02A               	goto	i2l16153
 39051  00571E                     i2u2025_40:
 39052                           
 39053                           ; BSR set to: 0
 39054  00571E  0100               	movlb	0	; () banked
 39055  005720  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39056  005722  0D02               	mullw	2
 39057  005724  50F3               	movf	prodl,w,c
 39058  005726  241B               	addwf	IRrawToNEC@Raw,w,c
 39059  005728  6ED9               	movwf	fsr2l,c
 39060  00572A  50F4               	movf	prodh,w,c
 39061  00572C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39062  00572E  6EDA               	movwf	fsr2h,c
 39063  005730  0E59               	movlw	89
 39064  005732  5CDE               	subwf	postinc2,w,c
 39065  005734  0E02               	movlw	2
 39066  005736  58DE               	subwfb	postinc2,w,c
 39067  005738  B0D8               	btfsc	status,0,c
 39068  00573A  D01B               	goto	i2l16153
 39069                           
 39070                           ; BSR set to: 0
 39071                           ;IR.c: 200: {
 39072                           ;IR.c: 201: if(!first)
 39073  00573C  0100               	movlb	0	; () banked
 39074  00573E  5164               	movf	IRrawToNEC@first& (0+255),w,b
 39075  005740  0100               	movlb	0	; () banked
 39076  005742  A4D8               	btfss	status,2,c
 39077  005744  D002               	goto	i2l16145
 39078                           
 39079                           ; BSR set to: 0
 39080                           ;IR.c: 202: {
 39081                           ;IR.c: 204: first = 1;
 39082  005746  0E01               	movlw	1
 39083  005748  D049               	goto	L43
 39084  00574A                     i2l16145:
 39085                           
 39086                           ; BSR set to: 0
 39087                           ;IR.c: 206: else
 39088                           ;IR.c: 207: {
 39089                           ;IR.c: 209: first = 0;
 39090  00574A  0E00               	movlw	0
 39091  00574C  0100               	movlb	0	; () banked
 39092  00574E  6F64               	movwf	IRrawToNEC@first& (0+255),b
 39093                           
 39094                           ; BSR set to: 0
 39095                           ;IR.c: 210: NECtemp <<= 1;
 39096  005750  0100               	movlb	0	; () banked
 39097  005752  90D8               	bcf	status,0,c
 39098  005754  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 39099  005756  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39100  005758  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39101  00575A  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39102                           
 39103                           ; BSR set to: 0
 39104                           ;IR.c: 211: if(!Invert)
 39105  00575C  501F               	movf	IRrawToNEC@Invert,w,c
 39106  00575E  A4D8               	btfss	status,2,c
 39107  005760  D0A9               	goto	i2l16209
 39108                           
 39109                           ; BSR set to: 0
 39110                           ;IR.c: 212: {
 39111                           ;IR.c: 213: NECtemp++;
 39112  005762  0E01               	movlw	1
 39113  005764  0100               	movlb	0	; () banked
 39114  005766  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 39115  005768  0E00               	movlw	0
 39116  00576A  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39117  00576C  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39118  00576E  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39119                           
 39120                           ; BSR set to: 0
 39121                           ;IR.c: 214: }
 39122                           ;IR.c: 215: }
 39123                           ;IR.c: 216: }
 39124                           
 39125                           ; BSR set to: 0
 39126  005770  D0A1               	goto	i2l16209
 39127  005772                     i2l16153:
 39128                           
 39129                           ; BSR set to: 0
 39130                           ;IR.c: 217: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 39131  005772  0100               	movlb	0	; () banked
 39132  005774  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39133  005776  0D02               	mullw	2
 39134  005778  50F3               	movf	prodl,w,c
 39135  00577A  241B               	addwf	IRrawToNEC@Raw,w,c
 39136  00577C  6ED9               	movwf	fsr2l,c
 39137  00577E  50F4               	movf	prodh,w,c
 39138  005780  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39139  005782  6EDA               	movwf	fsr2h,c
 39140  005784  0EBC               	movlw	188
 39141  005786  5CDE               	subwf	postinc2,w,c
 39142  005788  0E02               	movlw	2
 39143  00578A  58DE               	subwfb	postinc2,w,c
 39144  00578C  A0D8               	btfss	status,0,c
 39145  00578E  D02C               	goto	i2l16171
 39146                           
 39147                           ; BSR set to: 0
 39148  005790  0100               	movlb	0	; () banked
 39149  005792  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39150  005794  0D02               	mullw	2
 39151  005796  50F3               	movf	prodl,w,c
 39152  005798  241B               	addwf	IRrawToNEC@Raw,w,c
 39153  00579A  6ED9               	movwf	fsr2l,c
 39154  00579C  50F4               	movf	prodh,w,c
 39155  00579E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39156  0057A0  6EDA               	movwf	fsr2h,c
 39157  0057A2  0EB7               	movlw	183
 39158  0057A4  5CDE               	subwf	postinc2,w,c
 39159  0057A6  0E03               	movlw	3
 39160  0057A8  58DE               	subwfb	postinc2,w,c
 39161  0057AA  B0D8               	btfsc	status,0,c
 39162  0057AC  D01D               	goto	i2l16171
 39163                           
 39164                           ; BSR set to: 0
 39165                           ;IR.c: 218: {
 39166                           ;IR.c: 219: if(first)
 39167  0057AE  0100               	movlb	0	; () banked
 39168  0057B0  5164               	movf	IRrawToNEC@first& (0+255),w,b
 39169  0057B2  0100               	movlb	0	; () banked
 39170  0057B4  B4D8               	btfsc	status,2,c
 39171  0057B6  D015               	goto	i2l16167
 39172                           
 39173                           ; BSR set to: 0
 39174                           ;IR.c: 220: {
 39175                           ;IR.c: 222: NECtemp <<= 1;
 39176  0057B8  0100               	movlb	0	; () banked
 39177  0057BA  90D8               	bcf	status,0,c
 39178  0057BC  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 39179  0057BE  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39180  0057C0  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39181  0057C2  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39182                           
 39183                           ; BSR set to: 0
 39184                           ;IR.c: 223: if(Invert)
 39185  0057C4  501F               	movf	IRrawToNEC@Invert,w,c
 39186  0057C6  B4D8               	btfsc	status,2,c
 39187  0057C8  D008               	goto	i2l16165
 39188                           
 39189                           ; BSR set to: 0
 39190                           ;IR.c: 224: {
 39191                           ;IR.c: 225: NECtemp++;
 39192  0057CA  0E01               	movlw	1
 39193  0057CC  0100               	movlb	0	; () banked
 39194  0057CE  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 39195  0057D0  0E00               	movlw	0
 39196  0057D2  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39197  0057D4  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39198  0057D6  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39199  0057D8  D000               	goto	i2l16165
 39200  0057DA                     i2l16165:
 39201                           
 39202                           ; BSR set to: 0
 39203                           ;IR.c: 226: }
 39204                           ;IR.c: 227: first = 0;
 39205  0057DA  0E00               	movlw	0
 39206  0057DC                     L43:
 39207  0057DC  0100               	movlb	0	; () banked
 39208  0057DE  6F64               	movwf	IRrawToNEC@first& (0+255),b
 39209                           
 39210                           ;IR.c: 228: }
 39211  0057E0  D069               	goto	i2l16209
 39212  0057E2                     i2l16167:
 39213                           
 39214                           ; BSR set to: 0
 39215                           ;IR.c: 229: else
 39216                           ;IR.c: 230: {
 39217                           ;IR.c: 232: return 0;
 39218  0057E2  0E00               	movlw	0
 39219                           
 39220                           ; BSR set to: 0
 39221  0057E4  0012               	return	
 39222                           
 39223                           ; BSR set to: 0
 39224                           ;IR.c: 233: }
 39225                           ;IR.c: 234: }
 39226  0057E6  D066               	goto	i2l16209
 39227  0057E8                     i2l16171:
 39228                           
 39229                           ; BSR set to: 0
 39230                           ;IR.c: 235: else if(Raw[StartBit] == 0 && first == 1)
 39231  0057E8  0100               	movlb	0	; () banked
 39232  0057EA  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39233  0057EC  0D02               	mullw	2
 39234  0057EE  50F3               	movf	prodl,w,c
 39235  0057F0  241B               	addwf	IRrawToNEC@Raw,w,c
 39236  0057F2  6ED9               	movwf	fsr2l,c
 39237  0057F4  50F4               	movf	prodh,w,c
 39238  0057F6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39239  0057F8  6EDA               	movwf	fsr2h,c
 39240  0057FA  50DE               	movf	postinc2,w,c
 39241  0057FC  10DE               	iorwf	postinc2,w,c
 39242  0057FE  A4D8               	btfss	status,2,c
 39243  005800  D013               	goto	i2l16183
 39244                           
 39245                           ; BSR set to: 0
 39246  005802  0100               	movlb	0	; () banked
 39247  005804  0564               	decf	IRrawToNEC@first& (0+255),w,b
 39248  005806  A4D8               	btfss	status,2,c
 39249  005808  D00F               	goto	i2l16183
 39250  00580A                     i2l16175:
 39251                           
 39252                           ; BSR set to: 0
 39253                           ;IR.c: 236: {
 39254                           ;IR.c: 241: *NEC = NECtemp;
 39255  00580A  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 39256  00580E  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 39257  005812  C060  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 39258  005816  C061  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 39259  00581A  C062  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 39260  00581E  C063  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 39261  005822  D021               	goto	i2l16189
 39262                           
 39263                           ; BSR set to: 0
 39264                           
 39265                           ; BSR set to: 0
 39266                           ;IR.c: 242: return 1;
 39267  005824  0012               	return	
 39268                           
 39269                           ; BSR set to: 0
 39270                           ;IR.c: 243: }
 39271  005826  D046               	goto	i2l16209
 39272  005828                     i2l16183:
 39273                           
 39274                           ; BSR set to: 0
 39275                           ;IR.c: 244: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 39276  005828  0100               	movlb	0	; () banked
 39277  00582A  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39278  00582C  0D02               	mullw	2
 39279  00582E  50F3               	movf	prodl,w,c
 39280  005830  241B               	addwf	IRrawToNEC@Raw,w,c
 39281  005832  6ED9               	movwf	fsr2l,c
 39282  005834  50F4               	movf	prodh,w,c
 39283  005836  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39284  005838  6EDA               	movwf	fsr2h,c
 39285  00583A  0E38               	movlw	56
 39286  00583C  5CDE               	subwf	postinc2,w,c
 39287  00583E  0E4A               	movlw	74
 39288  005840  58DE               	subwfb	postinc2,w,c
 39289  005842  A0D8               	btfss	status,0,c
 39290  005844  D013               	goto	i2l16195
 39291                           
 39292                           ; BSR set to: 0
 39293  005846  0100               	movlb	0	; () banked
 39294  005848  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39295  00584A  0D02               	mullw	2
 39296  00584C  50F3               	movf	prodl,w,c
 39297  00584E  241B               	addwf	IRrawToNEC@Raw,w,c
 39298  005850  6ED9               	movwf	fsr2l,c
 39299  005852  50F4               	movf	prodh,w,c
 39300  005854  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39301  005856  6EDA               	movwf	fsr2h,c
 39302  005858  0E09               	movlw	9
 39303  00585A  5CDE               	subwf	postinc2,w,c
 39304  00585C  0E52               	movlw	82
 39305  00585E  58DE               	subwfb	postinc2,w,c
 39306  005860  B0D8               	btfsc	status,0,c
 39307  005862  D004               	goto	i2l16195
 39308  005864  D7D2               	goto	i2l16175
 39309  005866                     i2l16189:
 39310                           
 39311                           ; BSR set to: 0
 39312                           ;IR.c: 248: return 1;
 39313  005866  0E01               	movlw	1
 39314                           
 39315                           ; BSR set to: 0
 39316  005868  0012               	return	
 39317                           
 39318                           ; BSR set to: 0
 39319                           ;IR.c: 249: }
 39320  00586A  D024               	goto	i2l16209
 39321  00586C                     i2l16195:
 39322                           
 39323                           ; BSR set to: 0
 39324                           ;IR.c: 250: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 39325  00586C  0100               	movlb	0	; () banked
 39326  00586E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39327  005870  0D02               	mullw	2
 39328  005872  50F3               	movf	prodl,w,c
 39329  005874  241B               	addwf	IRrawToNEC@Raw,w,c
 39330  005876  6ED9               	movwf	fsr2l,c
 39331  005878  50F4               	movf	prodh,w,c
 39332  00587A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39333  00587C  6EDA               	movwf	fsr2h,c
 39334  00587E  0EC8               	movlw	200
 39335  005880  5CDE               	subwf	postinc2,w,c
 39336  005882  0EAF               	movlw	175
 39337  005884  58DE               	subwfb	postinc2,w,c
 39338  005886  A0D8               	btfss	status,0,c
 39339  005888  D012               	goto	i2l16205
 39340                           
 39341                           ; BSR set to: 0
 39342  00588A  0100               	movlb	0	; () banked
 39343  00588C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39344  00588E  0D02               	mullw	2
 39345  005890  50F3               	movf	prodl,w,c
 39346  005892  241B               	addwf	IRrawToNEC@Raw,w,c
 39347  005894  6ED9               	movwf	fsr2l,c
 39348  005896  50F4               	movf	prodh,w,c
 39349  005898  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39350  00589A  6EDA               	movwf	fsr2h,c
 39351  00589C  0E51               	movlw	81
 39352  00589E  5CDE               	subwf	postinc2,w,c
 39353  0058A0  0EC3               	movlw	195
 39354  0058A2  58DE               	subwfb	postinc2,w,c
 39355  0058A4  B0D8               	btfsc	status,0,c
 39356  0058A6  D003               	goto	i2l16205
 39357                           
 39358                           ; BSR set to: 0
 39359                           ;IR.c: 251: {
 39360                           ;IR.c: 253: return 2;
 39361  0058A8  0E02               	movlw	2
 39362                           
 39363                           ; BSR set to: 0
 39364  0058AA  0012               	return	
 39365                           
 39366                           ; BSR set to: 0
 39367                           ;IR.c: 254: }
 39368  0058AC  D003               	goto	i2l16209
 39369  0058AE                     i2l16205:
 39370                           
 39371                           ; BSR set to: 0
 39372                           ;IR.c: 255: else
 39373                           ;IR.c: 256: {
 39374                           ;IR.c: 257: return 0;
 39375  0058AE  0E00               	movlw	0
 39376                           
 39377                           ; BSR set to: 0
 39378  0058B0  0012               	return	
 39379                           
 39380                           ; BSR set to: 0
 39381                           
 39382                           ; BSR set to: 0
 39383                           
 39384                           ; BSR set to: 0
 39385                           
 39386                           ; BSR set to: 0
 39387  0058B2  D000               	goto	i2l16209
 39388  0058B4                     i2l16209:
 39389                           
 39390                           ; BSR set to: 0
 39391                           ;IR.c: 258: }
 39392                           ;IR.c: 259: StartBit++;
 39393  0058B4  0100               	movlb	0	; () banked
 39394  0058B6  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 39395  0058B8  0100               	movlb	0	; () banked
 39396  0058BA  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 39397  0058BC  D71B               	goto	i2l16133
 39398  0058BE                     i2l16213:
 39399                           
 39400                           ; BSR set to: 0
 39401                           ;IR.c: 260: }
 39402                           ;IR.c: 262: return 0;
 39403  0058BE  0E00               	movlw	0
 39404  0058C0  0012               	return	
 39405                           
 39406                           ; BSR set to: 0
 39407                           
 39408                           ; BSR set to: 0
 39409  0058C2  0012               	return		;funcret
 39410  0058C4                     __end_of_IRrawToNEC:
 39411                           	opt stack 0
 39412                           pclatu	equ	0xFFB
 39413                           pclath	equ	0xFFA
 39414                           tblptru	equ	0xFF8
 39415                           tblptrh	equ	0xFF7
 39416                           tblptrl	equ	0xFF6
 39417                           tablat	equ	0xFF5
 39418                           prodh	equ	0xFF4
 39419                           prodl	equ	0xFF3
 39420                           intcon	equ	0xFF2
 39421                           intcon2	equ	0xFF1
 39422                           indf0	equ	0xFEF
 39423                           postinc0	equ	0xFEE
 39424                           plusw0	equ	0xFEB
 39425                           fsr0h	equ	0xFEA
 39426                           fsr0l	equ	0xFE9
 39427                           wreg	equ	0xFE8
 39428                           indf1	equ	0xFE7
 39429                           postdec1	equ	0xFE5
 39430                           fsr1h	equ	0xFE2
 39431                           fsr1l	equ	0xFE1
 39432                           bsr	equ	0xFE0
 39433                           indf2	equ	0xFDF
 39434                           postinc2	equ	0xFDE
 39435                           postdec2	equ	0xFDD
 39436                           plusw2	equ	0xFDB
 39437                           fsr2h	equ	0xFDA
 39438                           fsr2l	equ	0xFD9
 39439                           status	equ	0xFD8
 39440                           pclatu	equ	0xFFB
 39441                           pclath	equ	0xFFA
 39442                           tblptru	equ	0xFF8
 39443                           tblptrh	equ	0xFF7
 39444                           tblptrl	equ	0xFF6
 39445                           tablat	equ	0xFF5
 39446                           prodh	equ	0xFF4
 39447                           prodl	equ	0xFF3
 39448                           intcon	equ	0xFF2
 39449                           intcon2	equ	0xFF1
 39450                           indf0	equ	0xFEF
 39451                           postinc0	equ	0xFEE
 39452                           plusw0	equ	0xFEB
 39453                           fsr0h	equ	0xFEA
 39454                           fsr0l	equ	0xFE9
 39455                           wreg	equ	0xFE8
 39456                           indf1	equ	0xFE7
 39457                           postdec1	equ	0xFE5
 39458                           fsr1h	equ	0xFE2
 39459                           fsr1l	equ	0xFE1
 39460                           bsr	equ	0xFE0
 39461                           indf2	equ	0xFDF
 39462                           postinc2	equ	0xFDE
 39463                           postdec2	equ	0xFDD
 39464                           plusw2	equ	0xFDB
 39465                           fsr2h	equ	0xFDA
 39466                           fsr2l	equ	0xFD9
 39467                           status	equ	0xFD8
 39468                           
 39469                           	psect	rparam
 39470  0000                     pclatu	equ	0xFFB
 39471                           pclath	equ	0xFFA
 39472                           tblptru	equ	0xFF8
 39473                           tblptrh	equ	0xFF7
 39474                           tblptrl	equ	0xFF6
 39475                           tablat	equ	0xFF5
 39476                           prodh	equ	0xFF4
 39477                           prodl	equ	0xFF3
 39478                           intcon	equ	0xFF2
 39479                           intcon2	equ	0xFF1
 39480                           indf0	equ	0xFEF
 39481                           postinc0	equ	0xFEE
 39482                           plusw0	equ	0xFEB
 39483                           fsr0h	equ	0xFEA
 39484                           fsr0l	equ	0xFE9
 39485                           wreg	equ	0xFE8
 39486                           indf1	equ	0xFE7
 39487                           postdec1	equ	0xFE5
 39488                           fsr1h	equ	0xFE2
 39489                           fsr1l	equ	0xFE1
 39490                           bsr	equ	0xFE0
 39491                           indf2	equ	0xFDF
 39492                           postinc2	equ	0xFDE
 39493                           postdec2	equ	0xFDD
 39494                           plusw2	equ	0xFDB
 39495                           fsr2h	equ	0xFDA
 39496                           fsr2l	equ	0xFD9
 39497                           status	equ	0xFD8


Data Sizes:
    Strings     3156
    Constant    657
    Data        64
    BSS         904
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      68
    BANK0           160    122     132
    BANK1           256    255     256
    BANK2           256    153     230
    BANK3           256    255     255
    BANK4           256      0     136
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0     200
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_151(CODE[7]), sprintf@c(BANK1[1]), Frequency(CODE[4]), PCBVersion(CODE[5]), 
		 -> FirmVersion(CODE[9]), GetNumber@temp(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_106(CODE[19]), STR_104(CODE[15]), STR_89(CODE[27]), STR_88(CODE[16]), 
		 -> STR_87(CODE[29]), STR_86(CODE[21]), STR_84(CODE[20]), STR_76(CODE[44]), 
		 -> STR_75(CODE[54]), STR_74(CODE[54]), STR_73(CODE[63]), STR_51(CODE[44]), 
		 -> STR_50(CODE[46]), STR_48(CODE[44]), STR_47(CODE[21]), STR_33(CODE[17]), 
		 -> STR_32(CODE[17]), STR_31(CODE[20]), STR_29(CODE[23]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_17(CODE[28]), STR_4(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK0[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(BANK1[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    GetEEPROM@Temp	PTR struct EEdata size(2) Largest target is 136
		 -> SyncEEPROMToGlobal@Temp(BANK1[136]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 49
		 -> STR_147(CODE[32]), STR_146(CODE[31]), STR_145(CODE[32]), STR_144(CODE[31]), 
		 -> STR_143(CODE[32]), STR_142(CODE[31]), STR_141(CODE[20]), STR_140(CODE[19]), 
		 -> STR_139(CODE[23]), STR_138(CODE[22]), STR_137(CODE[19]), STR_136(CODE[19]), 
		 -> STR_135(CODE[19]), STR_133(CODE[40]), STR_131(CODE[46]), STR_129(CODE[46]), 
		 -> STR_127(CODE[46]), STR_125(CODE[46]), STR_123(CODE[46]), STR_121(CODE[46]), 
		 -> STR_119(CODE[49]), STR_117(CODE[49]), STR_115(CODE[49]), STR_113(CODE[49]), 
		 -> STR_111(CODE[49]), STR_109(CODE[49]), STR_107(CODE[24]), STR_105(CODE[25]), 
		 -> STR_102(CODE[28]), STR_99(CODE[35]), STR_97(CODE[32]), STR_95(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 100
		 -> STR_132(CODE[5]), STR_130(CODE[13]), STR_128(CODE[13]), STR_126(CODE[13]), 
		 -> STR_124(CODE[13]), STR_122(CODE[13]), STR_120(CODE[13]), STR_118(CODE[11]), 
		 -> STR_116(CODE[11]), STR_114(CODE[11]), STR_112(CODE[11]), STR_110(CODE[11]), 
		 -> STR_108(CODE[11]), STR_101(CODE[8]), STR_98(CODE[8]), STR_96(CODE[6]), 
		 -> STR_94(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> STR_150(CODE[36]), STR_148(CODE[27]), STR_134(CODE[13]), STR_103(CODE[13]), 
		 -> STR_100(CODE[21]), STR_93(CODE[17]), STR_90(CODE[5]), STR_82(CODE[29]), 
		 -> STR_81(CODE[18]), STR_80(CODE[29]), STR_77(CODE[44]), STR_72(CODE[46]), 
		 -> STR_71(CODE[42]), STR_70(CODE[50]), STR_69(CODE[50]), STR_67(CODE[31]), 
		 -> STR_66(CODE[31]), STR_65(CODE[37]), STR_64(CODE[37]), STR_63(CODE[37]), 
		 -> STR_59(CODE[18]), STR_58(CODE[14]), STR_57(CODE[9]), STR_56(CODE[20]), 
		 -> STR_55(CODE[16]), STR_54(CODE[7]), STR_53(CODE[35]), STR_52(CODE[37]), 
		 -> STR_49(CODE[47]), STR_44(CODE[17]), STR_43(CODE[9]), STR_42(CODE[18]), 
		 -> STR_41(CODE[9]), STR_40(CODE[22]), STR_39(CODE[11]), STR_38(CODE[20]), 
		 -> STR_37(CODE[7]), STR_36(CODE[31]), STR_34(CODE[33]), STR_30(CODE[32]), 
		 -> STR_26(CODE[31]), STR_25(CODE[31]), STR_23(CODE[29]), STR_21(CODE[29]), 
		 -> SYNTAX_ERR(CODE[14]), UseBluetooth@buf(BANK2[100]), STR_1(CODE[16]), ProjectName(CODE[26]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> STR_149(CODE[28]), STR_92(CODE[13]), STR_79(CODE[32]), STR_68(CODE[14]), 
		 -> SYNTAX_ERR(CODE[14]), UseBluetooth@buf(BANK2[100]), STR_18(CODE[5]), STR_16(CODE[5]), 
		 -> STR_14(CODE[6]), STR_12(CODE[6]), STR_10(CODE[9]), STR_8(CODE[21]), 
		 -> STR_6(CODE[10]), BluetoothInitialSetup@buf(BANK1[50]), STR_2(CODE[4]), ReceivedString(BANK6[255]), 
		 -> CRLN(CODE[3]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_62(CODE[7]), STR_61(CODE[9]), STR_60(CODE[7]), STR_46(CODE[4]), 
		 -> STR_45(CODE[13]), STR_24(CODE[4]), STR_22(CODE[6]), STR_20(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), main@BluetoothString(BANK3[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_35(CODE[2]), STR_19(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), STR_3(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK5[255]), main@BluetoothString(BANK3[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_85(CODE[8]), STR_83(CODE[8]), STR_78(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_91(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@RFchannel(BANK1[10]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> CommandString(BANK5[255]), StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), main@BluetoothString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_cleanBuffer16bit

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _Init_System->_InitUART
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _ClearUSART->_ReadUSART
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _BluetoothInitialSetup->_sprintf
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0  410715
                                            121 BANK0      1     1      0
                                            147 BANK2      6     6      0
                                              0 BANK3    255   255      0
                      _BlueConnected
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   23566
                                             93 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    8911
                                             41 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    2886
                                             37 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       147   144      3  186085
                                              0 BANK2    147   144      3
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                _GetStringAfterComma
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
                     _StringContains
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncGlobalToEEPROM
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     204
                                             28 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   19325
                                             37 BANK0      1     1      0
                         _LEDTimerON
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN                                       2     0      2   10663
                                             31 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   10982
                                             31 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    3257
                                             31 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     315
                                             28 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    2370
                                             31 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   10768
                                             43 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    5168
                                             36 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    8880
                                             36 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     748
                                             28 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    4915
                                             49 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1477
                                             44 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4    1199
                                             28 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   17520
                                             69 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2692
                                             36 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3272
                                             39 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3109
                                             37 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     726
                                             28 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    3766
                                             40 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     478
                                             28 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             28 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      62
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     720
                                             32 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1614
                                             32 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     306
                                             28 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0  143062
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 143   143      0    3407
                                             73 BANK0      4     4      0
                                              0 BANK1    139   139      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                            8     6      2    2507
                                             65 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0    6941
                                             93 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   13617
                                            113 BANK0      8     4      4
                                              0 BANK1     10    10      0
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    8302
                                            106 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2865
                                             36 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     387
                                             28 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      34
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      34
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     371
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     371
                                             28 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  108059
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               61    61      0   94552
                                             36 BANK1     61    61      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             51    37     14   62057
                                            106 BANK0     14     0     14
                                              0 BANK1     36    36      0
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12847
                                             69 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             28 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12568
                                             69 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2850
                                             42 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5496
                                             54 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             28 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             34 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     608
                                             28 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     827
                                             28 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2840
                                             36 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     848
                                             41 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1011
                                             28 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             91 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    5057
                                             91 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4539
                                             79 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2584
                                             28 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                             28 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1276
                                             28 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0   17396
                                             37 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    4221
                                             28 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2    5720
                                             29 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       6     2      4    1738
                                             28 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    2840
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    2840
                                             28 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    6446
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    6446
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                          151    11    140    6446
                                             82 BANK0     11    11      0
                                              0 BANK1    140     0    140
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2845
                                             65 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     969
                                             32 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    2445
                                             38 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1242
                                             28 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     737
                                             32 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     672
                                             28 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1023
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     308
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     193
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    2533
                                              7 BANK0     21    21      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (14) i2_cleanBuffer16bit                                  8     4      4     203
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _SetTimer0                                           2     0      2     139
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    1965
                                             26 COMRAM     7     2      5
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueConnected
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _cleanBuffer
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UARTstringCRLN
     _UARTchar
     _UARTstring
       _UARTchar
   _UseBluetooth
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar
       _UARTstring
         _UARTchar
       _UARTstringCRLN
         _UARTchar
         _UARTstring
           _UARTchar
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      C8      19       78.1%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      88      13       53.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     FF      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     99      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      84       5       82.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6FB      32        0.0%
DATA                 0      0     6FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 13 12:16:01 2015

                       BufferCopy@shift 0089                      UARTstringCRLN@data 007F  
                __end_of_Conf1_ChannelD F375                  __end_of_Conf1_ChannelE F381  
                __end_of_Conf1_ChannelF F38D                   UseBluetooth@StringPos 0202  
                          ___altoft@exp 008C                  __end_of_Conf1_Channels F39F  
               __size_of_StringContains 00B2                           ??_EraseScreen 0002  
                           _IRcodePlace 0041                           ___altoft@sign 008D  
                  ?_BluetoothConfigured 0001                                      _SN 003C  
                          ___awdiv@sign 0087                     ?_SyncGlobalToEEPROM 0001  
                                    bsr 000FE0                  __end_of_Conf2_Channels F3A3  
                   ___wmul@multiplicand 008C                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 00BA  
                          ___ftadd@exp2 00B9                             ?_LEDTimerON 0001  
                    lowercaseChar@Input 007C                            ___ftadd@sign 00B8  
                            _SYNTAX_ERR F35B                                     l144 4EBE  
                                   l305 8F3C                                     l306 8F2C  
                                   l147 4F1E                                     l641 89B2  
 StringContainsCaseInsensitive@tempThat 0085                                     l653 93FC  
                                   l645 89D6                                     l486 63AA  
                                   l647 89E6                                     l648 89E8  
                                   l921 8C58                                     l668 942E  
                                   l748 8552                                     l935 8CC8  
                                   l960 65D2   StringContainsCaseInsensitive@tempThis 0084  
                                   l929 9476                                     l965 65C6  
                                   l975 66A2                                     l968 66B4  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000              StringAddEqual@NullPosition 008F  
                  lowercaseString@Input 007C                              _IRrawToNEC 5540  
                         _IRbitPosition 0040                     __end_of_IsCharacter 9452  
                          __CFG_BORV$27 000000                            ___awmod@sign 0081  
                                   prod 000FF3                                     wreg 000FE8  
                            _IRsendCode 0023                              _IRsendFlag 0033  
                         main@Connected 0298                           _InitBluetooth 8EC2  
                          __CFG_LVP$OFF 000000                            ___ftdiv@cntr 0090  
                          ___ftdiv@sign 0095                                    l1001 679C  
                                  l2119 7C06                                    l2242 2CB2  
                                  l2281 2AF6                                    l2290 2D22  
                                  l2700 5C3E                                    l2702 5C68  
                                  l2711 5D4C                                    l2720 5D76  
                                  l2624 6BBC                                    l1648 8FB8  
                                  l1826 5256                                    l1922 1246  
                                  l2731 7150                                    l2825 7FEE  
                                  l2745 6A28                                    l1881 0716  
                                  l2770 92E4                                    l2738 695C  
                                  l1890 09EA                                    l2667 775E  
                                  l2835 84D4                                    l2739 69A0  
                                  l1883 0772                                    l2696 5C04  
                                  l1888 099A                                    STR_1 FE71  
                                  STR_2 FFE6                                    STR_3 FFF2  
                                  STR_4 FC1D                                    STR_5 FFFA  
                                  STR_6 FF6E                                    STR_7 FFFA  
                                  STR_8 FCA7                                    STR_9 FFFA  
                  ??_SyncGlobalToEEPROM 00BD                                    _CRLN F3A7  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _TMR2 000FCC  
                                  _WPUB 000F7C                          ?i2_ResetTimer0 0001  
                                  _Sent 00E3              WriteEEPROM_1Byte@GIEstatus 007F  
                            _ClearUSART 9524               SetMemoryChar@AddressFirst 0086  
                                  _main 4CE6                            ___ftpack@arg 007C  
                          ___ftpack@exp 007F                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  indf1 000FE7                              SetEEPROM@i 00BB  
                                  fsr1l 000FE1                                    indf2 000FDF  
                            SetEEPROM@j 00BC                              SetEEPROM@k 00BA  
                                  fsr2l 000FD9                              _RFsendCode 02CF  
                            _RFsendFlag 0037                                    pclat 000FFA  
                      i1_UARTstringCRLN 8CF4                             _RFcodePlace 0036  
                                  prodh 000FF4                     main@BluetoothString 0300  
                                  prodl 000FF3                                    start 01F2  
                         __CFG_IESO$OFF 000000                        Reverse_Byte@This 007F  
                          _sprintf$3810 0106                        Reverse_Byte@temp 007E  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 00A3  
                        UARTstring@data 007D                             ?i1_UARTchar 0001  
                          ___param_bank 000010                            ___ftmul@sign 00A4  
                       __end_of_InitADC 9496                         __end_of_InitApp 90E6  
                    i2_cleanBuffer16bit 912A   __end_of_StringContainsCaseInsensitive 7678  
__size_of_StringContainsCaseInsensitive 0126           _StringContainsCaseInsensitive 7552  
               __size_of_ReadPushButton 000E                   ??_BluetoothConfigured 00BD  
                          ___fttol@exp1 00C9                           ??_Init_System 00D9  
                          ___fttol@lval 00C5                    _Conf2_ChannelH_1_OFF F2CE  
                     IRrawToNEC@NECtemp 0060                    _Conf2_ChannelH_2_OFF F2EE  
                  _Conf2_ChannelH_3_OFF F30E                                   l13011 69DA  
                                 l13003 69B2                                   l13101 7E28  
                                 l13021 6A0C                                   l13031 6A60  
                                 l13023 6A1E                                   l13015 69EE  
                                 l13121 71C4                                   l13201 8904  
                                 l13107 7E6C                                   l13203 8916  
                                 l13051 6ADC                                   l13037 6A86  
                                 l14013 6C24                                   l13151 729C  
                                 l13143 726C                                   l13071 6B6E  
                                 l13063 6B46                                   l14015 6C2A  
                                 l14031 6C8E                                   l12513 921C  
                                 l12601 5D3C                                   l13153 72AA  
                                 l13081 6BA0                                   l13217 9556  
                                 l14041 6CC0                                   l14009 6C1A  
                                 l12435 8CDC                                   l13227 909A  
                                 l13139 7258                                   l13171 7F84  
                                 l13083 6BB2                                   l13075 6B82  
                                 l13059 6B32                                   l13403 2336  
                                 l14123 5164                                   l14043 6CC6  
                                 l14027 6C88                                   l14019 6C34  
                                 l15003 8424                                   l12541 7BDE  
                                 l14109 941C                                   l13325 7E7A  
                                 l13157 72C8                                   l13149 728A  
                                 l12701 7D72                                   l13501 2764  
                                 l13421 23EE                                   l13413 23B4  
                                 l13405 2342                                   l14213 54B4  
                                 l14133 51E0                                   l14061 6D46  
                                 l14053 6CE0                                   l13335 7E90  
                                 l12471 76B8                                   l12607 5DA2  
                                 l13167 7F68                                   l13191 847A  
                                 l13415 23C0                                   l13407 234A  
                                 l14047 6CD0                                   l14303 7162  
                                 l15015 9510                                   l12801 8378  
                                 l13353 7F18                                   l13097 7DE6  
                                 l12481 774E                                   l12473 76EA  
                                 l12465 7692                                   l12617 5DF2  
                                 l13089 8FE6                                   l13169 7F7A  
                                 l12705 7D82                                   l12721 824C  
                                 l12633 6F40                                   l13513 2852  
                                 l13505 27A8                                   l13433 2460  
                                 l13409 238E                                   l13441 24CE  
                                 l14225 5520                                   l14401 744E  
                                 l14049 6CD6                                   l14065 6D4C  
                                 l14321 8164                                   l15113 865C  
                                 l14241 9192                                   l15033 8FA4  
                                 l15105 62A2                                   l12395 8C6E  
                                 l12803 8380                                   l12571 5C5E  
                                 l13179 7FDA                                   l13195 84C0  
                                 l13187 845E                                   l12731 8280  
                                 l12651 6FB0                                   l12627 6F06  
                                 l13611 2C86                                   l13531 28FE  
                                 l13523 28A6                                   l13515 2858  
                                 l13507 27D6                                   l13427 2428  
                                 l13419 23D4                                   l13371 2224  
                                 l13363 21EE                                   l14155 52B0  
                                 l14411 7468                                   l14083 88E0  
                                 l14075 8896                                   l15123 867C  
                                 l15131 8694                                   l15051 60D0  
                                 l12493 7788                                   l12477 770C  
                                 l12469 76A8                                   l12581 5CA0  
                                 l12565 5C4C                                   l13189 8470  
                                 l12709 7D98                                   l12733 828A  
                                 l12741 82C0                                   l12725 825E  
                                 l12661 6FF4                                   l13509 27EA  
                                 l13429 2446                                   l13381 226C  
                                 l14421 74B6                                   l14405 7458  
                                 l14341 66F8                                   l14253 8A0C  
                                 l15125 8684                                   l15109 8632  
                                 l16013 1CD4                                   l16005 1CB4  
                                 l15037 8FB0                                   l15029 8F98  
                                 l15053 60F4                                   l12399 8C84  
                                 l12487 776A                                   l12479 773E  
                                 l12591 5CF0                                   l12559 5C12  
                                 l12655 6FCC                                   l12647 6F90  
                                 l13711 2F5A                                   l13703 2F24  
                                 l13551 2998                                   l13543 2962  
                                 l13535 2928                                   l13527 28AC  
                                 l13519 2866                                   l13471 25DE  
                                 l13455 252A                                   l13391 22F4  
                                 l13439 247A                                   l13375 2232  
                                 l14183 539C                                   l14423 74BC  
                                 l14407 745E                                   l14343 66FE  
                                 l14319 8150                                   l14095 94F2  
                                 l15119 8670                                   l15127 868A  
                                 l16023 1DC6                                   l15063 614A  
                                 l15047 6088                                   l12833 6554  
                                 l12825 653E                                   l12761 8E12  
                                 l12593 5CFC                                   l12745 82D6  
                                 l12737 82B0                                   l12729 8272  
                                 l12665 7010                                   l12657 6FD4  
                                 l13721 302A                                   l13705 2F30  
                                 l13625 2CDA                                   l13617 2CA2  
                                 l13609 2C76                                   l13393 22FC  
                                 l13377 224A                                   l13369 220E  
                                 l14169 5326                                   l14433 74D6  
                                 l14417 74B0                                   l14353 6790  
                                 l14257 8A34                                   l14273 70AC  
                                 l14601 755A                                   l16009 1CCA  
                                 l15073 61A0                                   l15049 60AC  
                                 l15313 5EEA                                   l12835 655A  
                                 l12819 6512                                   l12755 9564  
                                 l12587 5CD0                                   l12691 7D36  
                                 l12683 7D0A                                   l12915 5B4C  
                                 l12907 5A58                                   l13643 2D6E  
                                 l13563 29F4                                   l13483 267E  
                                 l13395 2302                                   l14435 74DC  
                                 l14427 74C6                                   l14371 67C8  
                                 l14363 67B2                                   l14355 6794  
                                 l14347 6708                                   l14267 7072  
                                 l13803 8B5C                                   l16043 1E40  
                                 l16027 1DD0                                   l16019 1CE0  
                                 l15403 0392                                   l15083 61F6  
                                 l15059 6122                                   l15307 5EDA  
                                 l15323 5F22                                   l12829 654A  
                                 l12765 8E40                                   l12773 8DE4  
                                 l12589 5CE0                                   l12693 7D40  
                                 l12677 7CF2                                   l13733 30D4  
                                 l13717 2F8E                                   l13653 2DC2  
                                 l13645 2D74                                   l13629 2D02  
                                 l13581 2AC4                                   l13565 29FC  
                                 l13573 2A98                                   l13549 297E  
                                 l13557 29B4                                   l13485 2694  
                                 l13389 22EE                                   l14197 5412  
                                 l14445 7540                                   l14429 74CC  
                                 l14453 754C                                   l14381 687E  
                                 l14365 67B8                                   l14701 49A6  
                                 l14293 710E                                   l13821 8818  
                                 l14541 8A74                                   l15173 87D8  
                                 l16053 1EA0                                   l16037 1E30  
                                 l15093 624C                                   l15069 6178  
                                 l15341 5F84                                   l15333 5F6E  
                                 l15309 5EE0                                   l12871 6624  
                                 l12863 660E                                   l12855 65F2  
                                 l12847 65CC                                   l12839 6564  
                                 l12599 5D2C                                   l12935 45B8  
                                 l13719 2FA0                                   l13727 30AC  
                                 l13663 2DDE                                   l13639 2D44  
                                 l13583 2AD8                                   l13575 2AA8  
                                 l13559 29C8                                   l13495 272A  
                                 l13487 26C6                                   l13479 264E  
                                 l13735 30EE                                   l13911 89A8  
                                 l13903 8992                                   l14439 74E6  
                                 l14375 67D2                                   l13751 7C16  
                                 l14631 7642                                   l14551 8ABE  
                                 l13807 8B8A                                   l15159 878A  
                                 l16039 1E36                                   l16055 21AA  
                                 l15431 0516                                   l15423 0492  
                                 l15415 040E                                   l15079 61CE  
                                 l15335 5F74                                   l16311 4E84  
                                 l12865 6614                                   l12777 82EA  
                                 l12769 8DC4                                   l12689 7D28  
                                 l12953 4832                                   l12929 44E2  
                                 l13729 30C0                                   l13681 2E70  
                                 l13657 2DCA                                   l13649 2D82  
                                 l13673 2E26                                   l13489 26DC  
                                 l13737 3112                                   l14449 7546  
                                 l14385 6884                                   l14369 67C2  
                                 l15265 8B32                                   l13817 880A  
                                 l14625 7638                                   l14633 764A  
                                 l14561 8AE4                                   l14545 8AAC  
                                 l14641 90E8                                   l15513 098A  
                                 l15409 03AE                                   l15089 6224  
                                 l15353 603E                                   l15361 6054  
                                 l15345 5F8E                                   l16321 4F16  
                                 l14395 94CE                                   l12883 66A8  
                                 l12875 662E                                   l12859 6604  
                                 l12795 836E                                   l12947 475C  
                                 l12939 45E4                                   l13667 2E1E  
                                 l13659 2DD0                                   l13675 2E3A  
                                 l13595 2B2E                                   l13587 2AFC  
                                 l13499 2758                                   l13923 89CA  
                                 l13915 89B6                                   l13907 899E  
                                 l13851 93E2                                   l14811 4CC8  
                                 l14723 49F4                                   l14707 49B8  
                                 l13763 7C4C                                   l13755 7C2A  
                                 l14619 760A                                   l15603 0F64  
                                 l15451 0660                                   l15443 05DC  
                                 l15435 0558                                   l15427 04D4  
                                 l15419 0450                                   l15099 627A  
                                 l15339 5F7E                                   l15283 5E42  
                                 l16331 4F72                                   l12869 661E  
                                 l12789 835A                                   l12981 6908  
                                 l12965 9314                                   l13685 2EA8  
                                 l13861 8D8A                                   l14741 4A40  
                                 l14717 49EE                                   l14661 48CC  
                                 l14653 4892                                   l13781 7CCE  
                                 l13765 7C54                                   l13829 8832  
                                 l13837 8858                                   l14821 62EA  
                                 l14549 8AB0                                   l15701 12C0  
                                 l15621 10AA                                   l15613 104A  
                                 l15525 0A9C                                   l15461 06A0  
                                 l15357 604E                                   l15365 605A  
                                 l15293 5E98                                   l16317 4EEA  
                                 l16261 4D8A                                   l16253 4D4C  
                                 l12887 66AE                                   l12975 68CE  
                                 l13695 2EEE                                   l13687 2EB4  
                                 l13599 2B80                                   l13927 89DA  
                                 l13919 89C0                                   l14807 4CAA  
                                 l14727 4A0A                                   l14735 4A26  
                                 l14903 78FC                                   l13951 850C  
                                 l14583 8722                                   l14567 86CA  
                                 l14647 9112                                   l15623 10B2  
                                 l15607 0F98                                   l15519 09AC  
                                 l15447 061E                                   l15439 059A  
                                 l15455 0684                                   l15391 02EA  
                                 l16343 4FC6                                   l16327 4F5E  
                                 l13697 2EFA                                   l13857 8D66  
                                 l13793 85B4                                   l14729 4A12  
                                 l14673 4902                                   l14921 7956  
                                 l13769 7C96                                   l14833 6316  
                                 l14825 62F6                                   l14585 8730  
                                 l14649 911A                                   l15705 12D2  
                                 l15641 1146                                   l15617 1088  
                                 l15297 5EA2                                   l15369 6068  
                                 l16281 4DD8                                   l16265 4D94  
                                 l16257 4D7C                                   l13795 85C6  
                                 l14747 4A68                                   l14739 4A38  
                                 l14915 7938                                   l13955 8516  
                                 l13779 7CC8                                   l14843 638C  
                                 l14595 8756                                   l14579 871E  
                                 l15803 1546                                   l15811 15F2  
                                 l15563 0D84                                   l15395 032C  
                                 l16371 5086                                   l16363 5060  
                                 l14773 4B64                                   l14765 4B28  
                                 l14693 496C                                   l14685 4958  
                                 l14669 48F6                                   l14909 7926  
                                 l14861 6418                                   l14845 63B0  
                                 l14829 630A                                   l15813 1602  
                                 l15645 115A                                   l15637 1124  
                                 l15629 10E6                                   l15557 0D60  
                                 l16285 4DE2                                   l16277 4DCE  
                                 l14759 4B1A                                   l14679 4926  
                                 l14935 7980                                   l14943 79A6  
                                 l13959 8528                                   l14871 644A  
                                 l14855 63DE                                   l14839 6352  
                                 l14847 63B6                                   l15727 1336  
                                 l15671 121C                                   l15663 11E4  
                                 l15567 0D92                                   l15495 0862  
                                 l15399 036E                                   l16391 50CA  
                                 l16295 4E1A                                   l16279 4DD2  
                                 l14777 4B82                                   l14769 4B46  
                                 l14697 498C                                   l14929 796C  
                                 l14881 64AE                                   l14857 63E6  
                                 l14849 63D2                                   l14961 77D2  
                                 l15809 15EC                                   l15745 139E  
                                 l15737 137C                                   l15681 1272  
                                 l15657 11C2                                   l15649 117C  
                                 l15593 0F22                                   l15497 0874  
                                 l16385 509C                                   l14787 4C02  
                                 l14891 78C6                                   l14867 643E  
                                 l14971 7818                                   l14955 77A0  
                                 l15827 1702                                   l15819 161E  
                                 l15851 17B2                                   l15691 1296  
                                 l15763 1402                                   l16299 4E2A  
                                 l14789 4C56                                   l14797 4C60  
                                 l14949 79CE                                   l14877 64A8  
                                 l14981 7886                                   l14965 7804  
                                 l15917 19D6                                   l15853 17B8  
                                 l15829 1740                                   l15781 146C  
                                 l15749 13B6                                   l14799 4C68  
                                 l14895 78E8                                   l14975 7868  
                                 l14967 780C                                   l15935 1A42  
                                 l15927 1A1C                                   l15871 18CA  
                                 l15863 1858                                   l15839 1772  
                                 l15687 1288                                   l15695 12A8  
                                 l14985 78A4                                   l15945 1A62  
                                 l15881 18FC                                   l15857 17C2  
                                 l15793 1512                                   l15777 1462  
                                 l15769 141A                                   l14995 83BE  
                                 l15947 1A84                                   l15891 193C  
                                 l15957 1AAA                                   l15869 189C  
                                 l15789 150C                                   l15967 1B26  
                                 l15799 152E                                   l15895 195E  
                         ??_ReadVoltage 00A8                                   l15995 1C9E  
                                 l15989 1C6A                                   l15999 1CA8  
                                 ?_main 0001                  __size_ofi1_cleanBuffer 003E  
                       __end_of___awdiv 7DA4                                   _EEADR 000FA9  
                       __end_of___ftadd 5E1A                                   STR_10 FF82  
                                 STR_11 FFFA                                   STR_20 FFC0  
                                 STR_12 FFBA                                   STR_13 FFFA  
                                 STR_21 FB23                                   STR_14 FFBA  
                                 STR_22 FFC6                                   STR_30 F9EE  
                                 STR_15 FFFA                                   STR_31 FD4D  
                                 STR_23 FB40                                   STR_32 FCD5  
                                 STR_24 FFEE                                   STR_16 FFD7  
                                 STR_40 FC91                                   STR_33 F799  
                                 STR_41 FF8B                                   STR_17 FB7A  
                                 STR_25 FA0E                                   STR_18 FFD2  
                                 STR_42 FDE8                                   STR_26 FA2D  
                                 STR_34 F92D                                   STR_50 F60E  
                                 STR_51 F77E                                   STR_35 FFEC  
                                 STR_43 FF65                                   STR_19 FFF6  
                                 STR_27 FCD1                                   STR_60 FFB3  
                                 STR_44 FE40                                   STR_28 FCBC  
                                 STR_36 FAE7                                   STR_52 F89E  
                       __end_of___awmod 82E2                                   STR_37 FFAC  
                                 STR_61 FF94                                   STR_45 FF14  
                                 STR_29 FC4D                                   STR_53 F8E7  
                                 STR_54 FFAC                                   STR_46 FD85  
                                 STR_62 FFB3                                   STR_38 FD25  
                                 STR_70 F487                                   STR_39 FF63  
                                 STR_55 FE51                                   STR_47 FCE6  
                                 STR_63 F854                                   STR_71 F802  
                                 STR_64 F854                                   STR_56 FD75  
                                 STR_80 FB06                                   STR_48 F77E  
                                 STR_72 F750                                   STR_57 FF8B  
                                 STR_81 FE0C                                   STR_65 F879  
                                 STR_49 F5DF                                   STR_73 F3AA  
                                 STR_82 FB06                                   STR_90 FFE1  
                                 STR_58 FE90                                   STR_66 FAA9  
                                 STR_74 F3E9                                   STR_91 FFEA  
                                 STR_83 FF9D                                   STR_59 FDFA  
                                 STR_67 FAC8                                   STR_75 F41F  
                                 STR_92 FBF7                                   STR_68 FE9E  
                                 STR_84 FD61                                   STR_76 F7AA  
                                 STR_85 F925                                   STR_93 FE2F  
                                 STR_77 F7D6                                   STR_69 F455  
                                 STR_94 FFEA                                   STR_78 FFCC  
                                 STR_86 FD10                                   STR_95 FF78  
                                 STR_87 FB5D                                   STR_79 F9CE  
                                 STR_96 FFCC                                   STR_88 FE61  
                                 STR_89 FBCE                                   STR_97 F9AE  
                                 STR_98 F925                                   STR_99 F90A  
                       __end_of___ftdiv 718A                     ?i2_cleanBuffer16bit 001B  
                       __end_of___ftneg 92F2                                   _ANSEL 000F7E  
                       __end_of___lldiv 8000                         __end_of___ftmul 7038  
                       ___awdiv@divisor 0084                         __end_of___llmod 84E6  
                       __end_of___ftsub 9012                         __end_of___fttol 72DC  
                   __end_of_FirmVersion F396                 ReadEEPROM_1Byte@address 007C  
                                 u20631 50E2                                   u15120 831A  
                                 u15140 8350                                   u16100 3AC8  
                                 u16020 3768                                   u16005 35F0  
                                 u16110 3B34                                   u16030 37D4  
                                 u15127 8310                                   u16015 364A  
                                 u15080 8E34                                   u16120 3BA0  
                                 u16040 3840                                   u16105 3ABC  
                                 u16025 375C                                   u15090 8E62  
                                 u16130 3C0C                                   u16050 38AC  
                                 u15147 8346                                   u16115 3B28  
                                 u16035 37C8                                   u16140 3C78  
                                 u16060 3918                                   u15501 68E4  
                                 u16125 3B94                                   u16045 3834  
                                 u16150 3CE4                                   u16070 3984  
                                 u15087 8E2A                                   u16135 3C00  
                                 u16055 38A0                                   u16160 3D68  
                                 u16080 39F0                                   u15097 8E58  
                                 u16145 3C6C                                   u16065 390C  
                                 u16250 2384                                   u16090 3A5C  
                                 u16155 3CD8                                   u16075 3978  
                                 u14660 7B22                                   u16340 2570  
                                 u17045 81AC                                   u16165 3D5C  
                                 u16085 39E4                                   u15710 71EA  
                                 u14911 6F1C                                   u16095 3A50  
                                 u14665 7B16                                   u14681 5BB2  
                                 u15481 68AA                                   u16345 2564  
                                 u16257 237A                                   u16290 2418  
                                 u14691 5BD0                                   u15715 71E0  
                                 u17501 704E                                   u16560 2AEE  
                                 u16297 240E                                   u17521 7088  
                                 u15905 326C                                   u15851 9064  
                                 u15691 71A0                                   u14891 6EE2  
                                 u15915 32C6                                   u19300 06F4  
                                 u18325 4B86                                   u15925 3320  
                                 u15935 337A                                   u16920 8B7E  
                                 u19320 0750                                   u15945 33D4  
                                 u16930 8BAC                                   u15955 342E  
                                 u15875 315E                                   u17900 7600  
                                 u19420 0C0E                                   u15965 3488  
                                 u15885 31B8                                   u15975 34E2  
                                 u15895 3212                                   u16927 8B74  
                                 u18720 8404                                   u17920 762C  
                                 u18640 77C2                                   u15985 353C  
                                 u16937 8BA2                                   u17770 7A58  
                                 u18650 77F4                                   u15995 3596  
                                 u17907 75F6                                   u18725 83F8  
                                 u17950 766C                                   u17870 757C  
                                 u17775 7A4C                                   u17927 7622  
                                 u18647 77B8                                   u19391 0B0A  
                                 u17880 75A2                                   u18657 77EA  
                                 u17957 7662                                   u17877 7572  
                                 u17887 7598                                   i1l653 9460  
                                 i1l668 94A2                     __end_of_EraseScreen 93CA  
                       ___awdiv@counter 0086                                   _RCREG 000FAE  
                                 _RCSTA 000FAB                                   _TMR0H 000FD7  
                                 _TMR1H 000FCF                                   _TMR0L 000FD6  
                                 _TMR3H 000FB3                                   _TMR1L 000FCE  
                                 _TMR3L 000FB2                                   _SPBRG 000FAF  
                            _BufferCopy 87EC                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _RF_IR 0042                            InitUART@Baud 00D1  
                                 _IRbit 002D                                   _IRmod 00DA  
                                 _TXREG 000FAD                                   _TXSTA 000FAC  
                   _ConfigureOscillator 95E4                         __end_of_delayUS 8F6E  
                         __CFG_PWRT$OFF 000000                        _InternalADC_Read 84E6  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                     ___lmul@multiplicand 0080  
                         __CFG_WRT3$OFF 000000                       _NewReceivedString 00DB  
                          ___lltoft@exp 008C                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          ?_InitBluetooth 0001  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                              SendRF@Code 007C  
                          InitUART@temp 0106                            _IRrawCodeNum 0030  
                                 _Round 8BC4                           __CFG_WRTB$OFF 000000  
                 _BluetoothInitialSetup 511C                __end_of_Local_CloseUSART 9524  
                         __CFG_WRTC$OFF 000000                   __end_of_BlueConnected 956A  
                         __CFG_WRTD$OFF 000000                        ?_lowercaseString 007C  
                      __end_of_UARTchar 9406                          __CFG_EBTRB$OFF 000000  
                       __end_of_dpowers F141                                   _scale 435C  
                            SendRF@size 007F                         __end_of_isdigit 9320  
                         ___ftpack@sign 0080                                   main@i 0297  
                       __end_of_low_isr 01F2                                   tablat 000FF5  
                      _RF_IR_Postscaler 0043                                   plusw0 000FEB  
                                 plusw2 000FDB                             ?_UARTstring 007D  
               InternalADC_Read@channel 008A                                   status 000FD8  
                  ??i2_cleanBuffer16bit 001F                         __end_of_sprintf 3122  
                        __CFG_HFOFST$ON 000000             WriteEEPROM_1Byte@PEIEstatus 0080  
                  __size_of_cleanBuffer 005A                     __size_of_LEDTimerON 0012  
                 __end_of_GetMemoryChar 93A2                    ?_ConfigureOscillator 0001  
                 __end_of_GetMemoryLong 6ECC                           ??_SendRF_wait 0089  
                    StringContains@That 007E                      StringContains@This 007C  
                          __end_of_CRLN F3AA                           high_isr@IRpin 0079  
                       __initialization 8000                      StringAddEqual@temp 0100  
                 __end_of_EEPROM_UNLOCK 9480                        __end_of_IsLetter 93E8  
                            _InitTimer0 94F8                              _InitTimer1 9540  
                    _Conf1_ChannelD_STR F32E                              _InitTimer2 9532  
                            _InitTimer3 959E                      __size_of_GetEEPROM 018E  
                         high_isr@Time0 007A                      _Conf1_ChannelE_STR F33D  
                    _Conf1_ChannelF_STR F34C        __end_of_Conf2_ChannelH_1_OFF_STR F1DE  
                            _InitTimers 94AC                            _IRrepeatflag 0032  
                    __size_of_DecodeNEC 00AE                            __end_of_main 511C  
                 __end_of_Reverse_4Byte 3DA0                        ??_UARTstringCRLN 0081  
                      __end_of_InitUART 7AEA        __end_of_Conf2_ChannelH_2_OFF_STR F1F3  
                WaitForIRsignal@timeout 0085            __size_of_GetStringAfterComma 011E  
                        GetNumber@count 0094        __end_of_Conf2_ChannelH_3_OFF_STR F208  
                           _IsCharacter 943A                                  ??_main 00D9  
                         ___fttol@sign1 00C4                        __end_of_ResetADC 9578  
                     GetNumber@negative 0093                           __activetblptr 000003  
                    SendRF@RepeatAmount 0080                             ?_IRrawToNEC 001B  
                    __size_of_GetNumber 0486                         _WaitForIRsignal 875C  
                  __size_of__tdiv_to_l_ 01A6                      __size_of_EncodeNEC 014E  
                   __end_of_Init_System 8B5A                       SetEEPROMdefault@i 00C0  
                     SetEEPROMdefault@j 00C1                       SetEEPROMdefault@k 00BF  
                 _Conf2_ChannelB_ON_STR F26A                           ?_SendNEC_wait 0091  
                 _Conf2_ChannelD_ON_STR F27C                  __size_of_SendNEC_bytes 0086  
                                ?_Round 00CA                     __end_of_ReadVoltage 8178  
                     GetNumber@tempThis 0097                              UseIRCode@i 00C8  
                            UseIRCode@j 00C7                          _StringAddEqual 62DA  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                     __size_ofi1_UARTchar 0018  
                      __end_of___altoft 862A                        ___llmod@dividend 0089  
                                ?_scale 00A5                                  STR_100 FCFB  
                                STR_101 FF9D                                  STR_110 FF42  
                                STR_102 FB96                                  STR_103 FEB9  
                                STR_111 F54C                                  STR_112 FF4D  
                                STR_120 FED3                                  STR_104 FE81  
                                STR_105 FC04                                  STR_121 F66A  
                                STR_113 F57D                                  STR_114 FF21  
                                STR_130 FF07                                  STR_122 FEED  
                                STR_106 FDD5                                  _ADRESH 000FC4  
                                STR_107 FC35                                  STR_131 F722  
                                STR_123 F6C6                                  STR_115 F4B9  
                                STR_132 FFDC                                  STR_116 FF37  
                                STR_108 FF2C                                  STR_124 FEFA  
                                STR_140 FDC2                                  _EEADRH 000FAA  
                                STR_141 FD39                                  STR_133 F82C  
                                STR_125 F6F4                                  STR_117 F51B  
                                STR_109 F4EA                                  STR_118 FF58  
                                STR_126 FEC6                                  STR_134 FEAC  
                                STR_142 FA4C                                  STR_150 F8C3  
                                _ADRESL 000FC3                                  STR_151 FFA5  
                                STR_135 FD89                                  STR_143 F94E  
                                STR_127 F63C                                  STR_119 F5AE  
                                STR_128 FEE0                                  STR_152 FE1E  
                                STR_136 FD9C                                  STR_144 FA6B  
                                STR_137 FDAF                                  STR_145 F96E  
                                STR_129 F698                                  STR_138 FC7B  
                                STR_146 FA8A                                  STR_139 FC64  
                                STR_147 F98E                                  STR_148 FBE9  
                                STR_149 FBB2                                  _EEDATA 000FA8  
                                _EECON2 000FA7                        ___awdiv@dividend 0082  
                       ??i2_ResetTimer0 001B                        __end_of___ftpack 7798  
                                _ANSELH 000F7F                       ?_VoltageDividerON 0001  
                 _Conf2_ChannelB_Status 0028                           ??_ResetTimer0 007C  
                         ??_ResetTimer1 007C                           ??_ResetTimer3 001B  
                      __end_of___lltoft 897C                                  i1l1360 01AA  
                                i1l1361 01A6                                  i1l1345 018C  
                                i2l1220 3EDA                                  i2l1230 4320  
                                i2l1231 3F54                                  i2l1232 3F1A  
                                i2l1218 3EF0                                  i2l1235 42FA  
                                i2l1219 3EE4                                  i2l1228 3EDE  
                                i2l1272 408C                                  i2l1248 3FE8  
                                i2l1338 431C                                  i2l1291 4118  
                                i2l1292 410E                                  i2l1298 4140  
                        __CFG_WDTEN$OFF 000000                        __end_of___lwtoft 934C  
                    __size_of_ReadUSART 0018                   _Conf2_ChannelD_Status 0029  
                         SetTimer0@temp 001B                                  _IR_NEC 00DD  
                    __size_of_ReadIRpin 000E                                  _SPBRGH 000FB0  
                    ??_VoltageDividerON 007C                           i1_cleanBuffer 91AA  
                           ?_ClearUSART 0001                          SetMemoryLong@H 00AE  
                        SetMemoryLong@L 00B1                      __size_of_SetEEPROM 01EC  
                             ??_InitADC 007C                               ??_InitApp 007C  
                 ??_ConfigureOscillator 007C                                  _Global 0400  
                                _InitIR 9012                                  _SendRF 7BE4  
                        __CFG_XINST$OFF 000000                         _UARTcommandMenu 7798  
              GetStringAfterComma@count 0083                        __end_of__powers_ F18F  
                         InitUART@spbrg 0103                        __end_of_high_isr 435C  
                       _ReadCodeButtons 8F6E                      __size_of_OpenUSART 007C  
                        _StringContains 82E2                                  ___ftge 7DA4  
                                ___lmul 89F8                SendNEC_wait@RepeatAmount 0095  
                                ___wmul 9222              __end_of_SyncEEPROMToGlobal 6894  
                             ??___awdiv 0086                             _FirmVersion F38D  
                             ??___ftadd 00B5                          __CFG_STVREN$ON 000000  
                             ??___awmod 0080                               ??___ftdiv 008D  
           ?_StringMatchCaseInsensitive 007F                               ??___ftneg 007F  
                             ??___lldiv 0084                               ??___ftmul 009C  
                           _EraseScreen 93A2                               ??___llmod 0091  
                             ??___ftsub 00C1                               ??___fttol 00BF  
                     cleanBuffer16bit@i 0083                      __size_of_SetTimer0 000A  
                    __size_of_ResetBlue 0032                     __end_of_SendRF_wait 91AA  
                          ?i1_ReadUSART 0001                                  _fround 58C4  
                     ?_SetEEPROMdefault 0001                                  clear_0 8006  
                                clear_1 8014                                  clear_2 8028  
                                clear_3 803A                                  clear_4 8046  
                                clear_5 8056                                  clear_6 8062  
                      ___awdiv@quotient 0088                               ??_delayUS 0080  
                       ___awmod@divisor 007E                      __size_of_UseIRCode 0268  
                       ___awmod@counter 0080                      ??_SetEEPROMdefault 00BD  
                 ___ftmul@f3_as_product 00A0                     __size_of_UARTstring 005A  
                       ??_InitBluetooth 00D8                             ?_BufferCopy 0084  
                     ?_cleanBuffer16bit 007C                            __pdataCOMRAM 003C  
                             ??_isdigit 007C                          ??_SendNEC_wait 0096  
                ?_BluetoothInitialSetup 0001                  __end_of_StringAddEqual 64DA  
                          __mediumconst F118                          EncodeNEC@temp1 0098  
                        EncodeNEC@temp2 009C                          EncodeNEC@temp3 00A0  
                        EncodeNEC@temp4 00A4                            ?i2_ReadIRpin 0001  
                             ??_low_isr 0009                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                    ??_cleanBuffer16bit 0080                      IRrawToNEC@StartBit 0066  
                SyncEEPROMToGlobal@Temp 0103                        _CommandStringPos 0027  
                     __end_of_GetEEPROM 6D5C                   __end_of_lowercaseChar 9378  
                     __end_of_DecodeNEC 8442                               ??_sprintf 0100  
                       __CFG_FOSC$HSPLL 000000                          ?i1_cleanBuffer 0001  
                  UARTcommandMenu@place 0089                      UseBluetooth@String 0200  
                            __accesstop 0060                 __end_of__initialization 80BA  
                            ___altoft@c 0084                              Round@input 00CA  
                       __CFG_PBADEN$OFF 000000                              ___ftadd@f1 00AF  
                            ___ftadd@f2 00B2                              ___ftge@ff1 007C  
                            ___ftge@ff2 007F                      UseBluetooth@device 0284  
                         ___rparam_used 000001                     StringAddEqual@Input 008B  
                            ___ftdiv@f1 0087                              ___ftdiv@f2 008A  
                            ___ftdiv@f3 0091                     StringContains@begin 0081  
                            ___ftneg@f1 007C                       __end_of_GetNumber 4CE6  
                __end_of_StringContains 8394                      UseBluetooth@rfconf 028B  
                     __end_of_EncodeNEC 742A               __size_of_ReadEEPROM_1Byte 0066  
                   __end_of_ResetTimer0 95B2                     __end_of_ResetTimer1 959E  
                   __end_of_ResetTimer3 95D0                     __size_of_IRrawToNEC 0384  
                            ___ftmul@f1 0096                              ___ftmul@f2 0099  
                         _SendNEC_bytes 8876                              ___ftsub@f1 00BB  
                            ___ftsub@f2 00BE                              ___fttol@f1 00BB  
                        __pcstackCOMRAM 0001                             ?_InitTimer0 0001  
                           ?_InitTimer1 0001                             ?_InitTimer2 0001  
                           ?_InitTimer3 0001                             ?_InitTimers 0001  
                    _Conf2_ChannelB_OFF F28E                      _Conf2_ChannelD_OFF F2AE  
                         __end_of_Round 8C2A                          _ReadPushButton 9508  
                i2cleanBuffer16bit@data 001B                            __pidataBANK0 95E6  
                          __pidataBANK2 925A                        main@ConnectedOLD 0295  
             __size_of_EnterCommandMode 00C8                              ___lltoft@c 0084  
                             ?_UARTchar 0001                 __end_of_WaitForIRsignal 87EC  
                         __end_of_scale 4860         __end_of_Conf2_ChannelH_1_ON_STR F21C  
                           _Init_System 8AEA                     SyncEEPROMToGlobal@i 0101  
                   SyncEEPROMToGlobal@j 0102                     SyncEEPROMToGlobal@k 0100  
       __end_of_Conf2_ChannelH_2_ON_STR F230         __end_of_Conf2_ChannelH_3_ON_STR F244  
              _Conf2_ChannelH_1_OFF_STR F1C9                       __end_of_ReadUSART 943A  
                     __end_of_ReadIRpin 955C                           ?i1_UARTstring 0002  
                          ??_LEDTimerON 007C                              ___lwtoft@c 0084  
                     __end_of_Frequency F3A7               __size_of_CheckReceivingIR 0012  
                           _ReadVoltage 80C0                _Conf2_ChannelH_2_OFF_STR F1DE  
                     __end_of_SetEEPROM 66C6                         ReadVoltage@temp 00AB  
                   __size_of_ClearUSART 000E                              __div_to_l_ 6A3A  
              __end_ofi1_UARTstringCRLN 8D58                _Conf2_ChannelH_3_OFF_STR F1F3  
                       GetNumber@result 008B                         ?_StringAddEqual 008B  
                               ??_Round 00CD                           ReadUSART@data 007C  
                     __end_of_OpenUSART 89F8                         __div_to_l_@exp1 0087  
                       __div_to_l_@cntr 0086                                 ??_scale 00A8  
                             ?_IsLetter 0001                         __div_to_l_@quot 0082  
                          sprintf@width 011F                  __size_of_SetMemoryChar 003A  
                     __end_of_SetTimer0 95C6                              __pbssBANK0 00DA  
                            __pbssBANK1 01FF                              __pbssBANK2 02CF  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                __size_of_SetMemoryLong 00FA                       _EEPROMinitialized 94C0  
                             ?_InitUART 00D1                       __end_of_ResetBlue 92C2  
               __end_of_UARTcommandMenu 78B6                  _Conf2_ChannelB_OFF_STR F244  
                     __end_of_UseIRCode 6082                      ReadVoltage@voltage 00A8  
               __end_of_ReadCodeButtons 8FC2                             _ReceivingIR 0044  
                    ?_EEPROMinitialized 0001                           ??_StringMatch 0080  
                _Conf2_ChannelD_OFF_STR F257                     __end_of_ProjectName F1C9  
                         __div_to_l_@f1 007C                           __div_to_l_@f2 007F  
              __size_ofi1_BlueConnected 000E                   WriteEEPROM_1Byte@data 007E  
                             ?_ResetADC 0001                      __end_of_LEDTimerON 94E6  
                               ?_InitIR 0001                         ?_StringContains 007C  
                        ?_SendNEC_bytes 008C                  __end_of_ReadPushButton 9516  
              __end_of_InternalADC_Read 8588                     __size_of_BufferCopy 008A  
                               ?_SendRF 007C                             _SendRF_wait 916C  
                          ??i1_UARTchar 0001                                 ?___ftge 007C  
                   ??_EEPROMinitialized 007C                                 ?___lmul 007C  
                               ?___wmul 008A                           ?_Reverse_Byte 0001  
                            ??_UARTchar 007C                       _VoltageDividerOFF 95E0  
                             ?___altoft 0084                                 ?_fround 00A5  
                        ___lmul@product 0084                          ??i1_UARTstring 0004  
                             ?___ftpack 007C                   EnterCommandMode@count 0085  
                 cleanBuffer16bit@count 007E                               ?___lltoft 0084  
                    __end_of_PCBVersion F39B                      ?_VoltageDividerOFF 0001  
             SendNEC_bytes@RepeatAmount 0090                               ?___lwtoft 0084  
                               i1l10533 8E98                                 i1l11431 93BA  
                               i1l10529 8E6C                                 i1l11427 93B0  
                               i1l11419 944C                                 i1l12315 00B4  
                               i1l12307 0094                                 i1l11623 8CF6  
                               i1l12327 00F2                                 i1l11651 9580  
                               i1l11627 8D22                                 i1l12339 0130  
                               i1l12347 0162                                 i1l12357 0188  
                               i1l12367 01A2                                 i1l11595 91B4  
                               i1l11599 91CC                                 i2l16121 56AA  
                               i2l16205 58AE                                 i2l16213 58BE  
                               i2l16133 56F4                                 i2l16125 56E6  
                               i2l16223 9150                                 i2l16209 58B4  
                               i2l16145 574A                                 i2l16153 5772  
                               i2l16137 56FE                                 i2l16129 56EC  
                               i2l16171 57E8                                 i2l16083 556E  
                               i2l16235 958E                                 i2l16219 9134  
                               i2l16165 57DA                                 i2l16093 55B6  
                               i2l16175 580A                                 i2l16183 5828  
                               i2l16167 57E2                                 i2l16095 55DE  
                               i2l16079 5564                                 i2l16089 55B0  
                               i2l16195 586C                                 i2l16099 55E2  
                               i2l16523 3FB0                                 i2l16189 5866  
                               i2l16701 411E                                 i2l16533 3FC8  
                               i2l16607 405E                                 i2l16615 4068  
                               i2l16543 3FD8                                 i2l16535 3FCC  
                               i2l16527 3FBC                                 i2l16471 3ED0  
                               i2l16721 415E                                 i2l16641 409E  
                               i2l16625 407C                                 i2l16553 3FF2  
                               i2l16811 4260                                 i2l16715 414A  
                               i2l16563 4006                                 i2l16475 3EE8  
                               i2l16467 3EC4                                 i2l16459 3E94  
                               i2l16813 4272                                 i2l16805 4242  
                               i2l16709 4132                                 i2l16645 40A2  
                               i2l16637 4092                                 i2l16733 4170  
                               i2l16469 3ECA                                 i2l16807 4250  
                               i2l16663 40C2                                 i2l16655 40B4  
                               i2l16647 40A6                                 i2l16583 4044  
                               i2l16575 4020                                 i2l16825 428E  
                               i2l16753 41A8                                 i2l16681 40E2  
                               i2l16569 4014                                 i2l16737 417A  
                               i2l16851 42E4                                 i2l16843 42CC  
                               i2l16691 40FE                                 i2l16675 40D8  
                               i2l16587 404A                                 i2l16683 40EC  
                               i2l16499 3F4C                                 i2l16845 42D2  
                               i2l16829 42A8                                 i2l16781 41FE  
                               i2l16757 41B8                                 i2l16861 42F6  
                               i2l16669 40CE                                 i2l16767 41DA  
                               i2l16873 4310                                 i2l16857 42F0  
                               i2l16849 42DC                                 i2l16793 4226  
                               i2l16875 4318                                 i2l16787 420A  
                               i2l16779 41F8                                 i2l16789 4210  
                      i1UARTstring@data 0002                           UseIRCode@Code 00BD  
                     _ReceivedStringPos 00DC                     ??_VoltageDividerOFF 007C  
                       SetMemoryLong@MH 00AF                         SetMemoryLong@ML 00B0  
                     ?_Local_CloseUSART 0001               __end_of_EEPROMinitialized 94D4  
               BluetoothInitialSetup@ok 0160                     __size_of_InitTimer0 0010  
                   __size_of_InitTimer1 000E                     __size_of_InitTimer2 000E  
                   __size_of_InitTimer3 000A                         ??i1_cleanBuffer 0005  
                            ??_IsLetter 007C                     __size_of_InitTimers 0014  
                             ?_high_isr 0001                      __end_ofi1_UARTchar 946A  
                   _GetStringAfterComma 78B6                      ??_Local_CloseUSART 007C  
           __size_of_SyncGlobalToEEPROM 0046                              ??_InitUART 00D5  
                           _ResetTimer0 95A8                             _ResetTimer1 9594  
                           _ResetTimer3 95C6     __size_of_StringMatchCaseInsensitive 0094  
                          ??_UARTstring 007F                                 SendRF@i 0083  
                         ?_UseBluetooth 0200                                 _InitADC 9480  
                               _InitApp 90A0                          UseBluetooth@ok 0289  
                           low_isr@data 001A             __end_of_BluetoothConfigured 9422  
               UseBluetooth@tempRFArray 028A                              ??_ResetADC 007C  
                        InitUART@config 0105                       __end_of__npowers_ F168  
                               __Hparam 0000                         ?_ReadPushButton 0001  
                            _scale$3809 00A8                         __size_of_InitIR 0048  
                               __Lparam 0000                    __end_of_SendNEC_wait 86C8  
               __size_of_SendRF_Channel 0258                         __size_of_SendRF 00F0  
                          SendRF@Config 007E               __end_of_VoltageDividerOFF 95E4  
                     i1cleanBuffer@data 0001                          ??_Reverse_Byte 007C  
                       __size_of___ftge 00CE                                 ___awdiv 7CD4  
                       __size_of___lmul 007A                                 ___ftadd 5B9C  
                               ___awmod 822E                                 ___ftdiv 7038  
                               ___ftneg 92C2                                 ___lldiv 7F3A  
                   __end_of_StringMatch 8AEA                    ?_GetStringAfterComma 007C  
                       __size_of___wmul 0038                                 ___ftmul 6ECC  
                               ___llmod 8442                                 ___ftsub 8FC2  
                               ___fttol 718A                           _SetMemoryChar 91E8  
                          ?_IsCharacter 0001                           _SetMemoryLong 7AEA  
                      ?_WaitForIRsignal 0001                              ??___altoft 0088  
                               __pcinit 8000                                 _delayUS 8F18  
                            ??___ftpack 0081                         __size_of_fround 02D8  
                               __ramtop 1000                              ??___lltoft 0088  
                               __ptext0 4CE6                                 __ptext1 5E1A  
                               __ptext2 6082                                 __ptext3 9508  
                               __ptext4 8F6E                                 __ptext5 01F6  
                               __ptext6 90E6                                 __ptext7 875C  
                               __ptext8 8B5A                                 __ptext9 7798  
                            ??___lwtoft 0087                               _T0CONbits 000FD5  
                  __size_ofi1_ReadUSART 0016                       __end_of_hexpowers F1AF  
                             _T1CONbits 000FCD                             ?__div_to_l_ 007C  
                     SetMemoryChar@Data 0088                                 _dpowers F119  
                          ??_IRrawToNEC 0020                               _T2CONbits 000FCA  
                    __end_of_UARTstring 8E6A                       SetMemoryChar@Test 0087  
                               _isdigit 92F2                               _T3CONbits 000FB1  
                      ___awmod@dividend 007C               GetMemoryLong@AddressFirst 00A0  
                               _low_isr 0018                            DecodeNEC@Nec 0080  
                         SetEEPROM@Temp 0100                           SetEEPROM@fail 00B4  
                         SetEEPROM@burn 0188                           SetEEPROM@temp 00B8  
                               _sprintf 21DE                    __size_ofi2_ReadIRpin 000E  
                            ??_high_isr 0067                          __pintcode_body 3DA0  
                           _ProjectName F1AF                    end_of_initialization 80BA  
                      SendNEC_wait@code 0091                           ??_cleanBuffer 0080  
                           _ProductName 0299                        ?_UARTcommandMenu 007F  
                       i1ReadUSART@data 0001                            ??_ClearUSART 007D  
                        ??_UseBluetooth 0203                               i1u1180_20 8EBA  
                             i1u1180_27 8EB0                                 int_func 3DA0  
                             i1u1336_20 8D18                               i1u1336_27 8D0E  
                             i1u1337_20 8D44                               i1u1337_27 8D3A  
                             i1u1179_20 8E8E                               i1u1179_27 8E84  
                      ?_ReadCodeButtons 0001             __size_ofi2_cleanBuffer16bit 0042  
                       ??_SendNEC_bytes 0091                __size_of_lowercaseString 0044  
                             i2u2025_40 571E                               i2u2018_40 5646  
                       ___lldiv@divisor 0080                   EraseScreen@characters 0002  
                    __end_of_SYNTAX_ERR F369                        _ReadEEPROM_1Byte 8C2A  
                       ___lldiv@counter 0088                      __end_of_IRrawToNEC 58C4  
                main@BluetoothStringPos 0294                               _RCSTAbits 000FAB  
                               postdec1 000FE5                                 postdec2 000FDD  
                 ??_GetStringAfterComma 0081                        _EnterCommandMode 7E72  
                               postinc0 000FEE                                 postinc2 000FDE  
                        ?_SetMemoryChar 0086               __size_of_VoltageDividerON 0006  
                __size_of_BlueConnected 000E                            ?_EraseScreen 0001  
                        ?_SetMemoryLong 00A1                       ??i1_BlueConnected 0001  
                        __tdiv_to_l_@f1 007C                          __tdiv_to_l_@f2 007F  
                             _IRRawCode 0700                           ??__tdiv_to_l_ 0082  
               ??_BluetoothInitialSetup 00D8                       SetMemoryLong@Data 00A1  
                      _CheckReceivingIR 94E6                       SetMemoryLong@Test 00AA  
                     GetMemoryLong@temp 0098                            ??_BufferCopy 008A  
                    __end_of_ClearUSART 9532                               _IRaddress 00E2  
                __size_of_GetMemoryChar 002A                               _TRISAbits 000F92  
                             _TRISBbits 000F93                      _SyncEEPROMToGlobal 66C6  
                             _TRISCbits 000F94                          BufferCopy@from 0084  
                            main@IRtask 00D9                  __size_of_GetMemoryLong 0170  
                             _IRcodeBit 002E              __size_of_EEPROMinitialized 0014  
                __size_of_EEPROM_UNLOCK 0016       StringContainsCaseInsensitive@That 0081  
     StringContainsCaseInsensitive@This 007F                               _IRcommand 01FF  
           __end_of_ConfigureOscillator 95E6                  __size_of_Reverse_4Byte 0C7E  
             __size_of_SetEEPROMdefault 0128                               _RFcodeBit 0035  
                   ?_SyncEEPROMToGlobal 0001                   __end_ofi2_ResetTimer0 95BC  
                             _GetEEPROM 6BCE                       main@Bluetoothtask 0293  
                  __end_ofi1_UARTstring 8EC2                               _DecodeNEC 8394  
                           ___ftdiv@exp 0094              ReadEEPROM_1Byte@PEIEstatus 007F  
                             _IRtimeout 02CB                               _TXSTAbits 000FAC  
             __size_of_cleanBuffer16bit 005E                     UseBluetooth@tempNec 027E  
                           _StringMatch 8A72                     __size_of__div_to_l_ 0194  
                   UseBluetooth@timeout 0282      __end_of_StringMatchCaseInsensitive 875C  
            _StringMatchCaseInsensitive 86C8                     __end_of_cleanBuffer 8E10  
                     _Timer1_Postscaler 0039                          _IRrepeatAmount 0031  
                    __end_of_BufferCopy 8876                             ___ftmul@exp 009F  
                          ??_InitTimer0 007C                            ??_InitTimer1 007C  
                          ??_InitTimer2 007C                            ??_InitTimer3 007C  
                        __end_of_InitIR 905A                            ??_InitTimers 007C  
            __size_of_VoltageDividerOFF 0004                          __end_of_SendRF 7CD4  
                   _Conf2_ChannelH_1_ON F2DE                     _Conf2_ChannelH_2_ON F2FE  
                   _Conf2_ChannelH_3_ON F31E                               _GetNumber 4860  
                             _EncodeNEC 72DC          GetStringAfterComma@CommaNumber 007E  
                        __end_of___ftge 7E72                            ?_Init_System 0001  
                        __end_of___lmul 8A72                 i2cleanBuffer16bit@count 001D  
                        _ReceivedString 0600                          __end_of___wmul 925A  
                  ??_SyncEEPROMToGlobal 00A9                             _BAUDCONbits 000FB8  
                         __pidataCOMRAM 95D0                        ??_StringAddEqual 008D  
                     __size_of_UARTchar 001E                            ?_ReadVoltage 00A5  
                        __end_of_fround 5B9C                        IRrawToNEC@Invert 001F  
                     ?i1_UARTstringCRLN 0004                     start_initialization 8000  
                             _ReadUSART 9422                 __size_of_UARTstringCRLN 006A  
                     _Timer2_Postscaler 003A                               _ReadIRpin 954E  
                 __end_of_InitBluetooth 8F18                        UseBluetooth@temp 028E  
                             _Frequency F3A3                     __end_of__tdiv_to_l_ 6A3A  
                             _SetEEPROM 64DA                           GetNumber@This 0088  
                    ??i1_UARTstringCRLN 0006                           _BlueConnected 955C  
                         GetNumber@temp 0098                    __end_of_Reverse_Byte 822E  
                    __end_of_InitTimer0 9508                      __end_of_InitTimer1 954E  
                    __end_of_InitTimer2 9540                      __end_of_InitTimer3 95A8  
                    __end_of_InitTimers 94C0                        ??_StringContains 0080  
                            ?_GetEEPROM 00A1                               _OpenUSART 897C  
                     __size_of_IsLetter 001E                   __size_of_SendNEC_wait 009E  
                            ?_DecodeNEC 0080                         ___llmod@divisor 008D  
                     __size_of_InitUART 0116                         ___llmod@counter 0091  
                             _SetTimer0 95BC                               _ResetBlue 9290  
                             _Sendcount 0038                                ??_InitIR 0084  
                        _SendRF_Channel 6082                 GetStringAfterComma@This 007C  
                          ?_SendRF_wait 0084                               _UseIRCode 5E1A  
                         _GetMemoryChar 9378                                ??_SendRF 0081  
                     _Timer3_Postscaler 003B               StringAddEqual@firstnumber 0090  
                       ??_SetMemoryChar 0087                           _GetMemoryLong 6D5C  
                     ?_InternalADC_Read 0085                         ??_SetMemoryLong 00A6  
                              ??___ftge 0082                       __size_of_ResetADC 000E  
                              ??___lmul 0084                           _EEPROM_UNLOCK 946A  
                              ??___wmul 008E      StringContainsCaseInsensitive@begin 0083  
                     ??_lowercaseString 007E                              ?_GetNumber 0088  
                    ??_InternalADC_Read 0087                              ?_EncodeNEC 0080  
                         _Reverse_4Byte 3122      StringMatchCaseInsensitive@tempThat 0084  
    StringMatchCaseInsensitive@tempThis 0083                  __size_of_lowercaseChar 002C  
                           __pdataBANK0 00E3                             __pdataBANK2 0299  
                      __CFG_LPT1OSC$OFF 000000                                ??_fround 00A8  
                         sprintf@tmpval 0112                     UARTcommandMenu@Desc 0081  
                  GetNumber@CommaNumber 008A                WriteEEPROM_1Byte@address 007C  
                  __size_of_IsCharacter 0018                    __end_of_UseBluetooth 21DE  
                     __size_of___altoft 00A2                              fround@prec 00AE  
                     __size_of___ftpack 0120               SetMemoryLong@AddressFirst 00A5  
                             Round@temp 00CD                        cleanBuffer@count 007E  
                     __size_of___lltoft 0080                             __pbssCOMRAM 0023  
                            ?_ReadUSART 0001          ?_StringContainsCaseInsensitive 007F  
                     __size_of___lwtoft 002C                              ?_ReadIRpin 0001  
        __end_of_Conf2_ChannelB_OFF_STR F257                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                           __pcstackBANK2 0200  
                         __pcstackBANK3 0300                            _SendNEC_wait 862A  
                            ?_SetEEPROM 0100                       _Conf2_ChannelB_ON F29E  
                     _Conf2_ChannelD_ON F2BE                          ?_BlueConnected 0001  
                          _isdigit$3485 007D          __end_of_Conf2_ChannelD_OFF_STR F26A  
        StringMatchCaseInsensitive@That 0081          StringMatchCaseInsensitive@This 007F  
              GetNumber@tempCommaNumber 0092                 _Conf2_ChannelH_1_ON_STR F208  
                          ?_ResetTimer0 0001                            ?_ResetTimer1 0001  
                          ?_ResetTimer3 0001                             _cleanBuffer 8DB6  
               _Conf2_ChannelH_2_ON_STR F21C                        ??_ReadPushButton 007C  
                            ?_OpenUSART 007C                 _Conf2_ChannelH_3_ON_STR F230  
                     __size_of_high_isr 4354                             sprintf@flag 0121  
                           sprintf@fval 011C                             sprintf@prec 0110  
                __end_of_SendRF_Channel 62DA                                ?_InitADC 0001  
                              ?_InitApp 0001                              ?_SetTimer0 001B  
                            ?_ResetBlue 0001                          ?_GetMemoryChar 0080  
                        ?_GetMemoryLong 0080                 _Conf2_ChannelH_1_Status 002A  
                            ?_UseIRCode 00BD                 _Conf2_ChannelH_2_Status 002B  
                     __CFG_CCP2MX$PORTC 000000                 _Conf2_ChannelH_3_Status 002C  
                        ?_EEPROM_UNLOCK 0001                         SendRF_wait@Code 0084  
             __size_of_Local_CloseUSART 000E                               __pintcode 0008  
                         __pmediumconst F118                          ?_Reverse_4Byte 007C  
                      _VoltageDividerON 95DA                                ?___awdiv 0082  
                             __ptext100 95E4                               __ptext102 91AA  
                             __ptext111 912A                               __ptext103 8CF4  
                             __ptext112 95B2                               __ptext104 8E6A  
                             __ptext113 9586                               __ptext105 9496  
                             __ptext114 95BC                               __ptext106 9578  
                             __ptext115 95C6                               __ptext107 943A  
                             __ptext116 5540                               __ptext108 93A2  
                             __ptext109 9452                                ?___ftadd 00AF  
                     SendRF_wait@Config 0086                             IRrawToNEC@i 0065  
                              ?___awmod 007C                                ?___ftdiv 0087  
                  cleanBuffer16bit@data 007C                                ?___ftneg 007C  
                       SendRF_wait@size 0087                                ?___lldiv 007C  
                              ?___ftmul 0096                                ?___llmod 0089  
                              ?___ftsub 00BB                               __npowers_ F141  
                              ?___fttol 00BB                            UseIRCode@NEC 00BF  
                           __pintcodelo 0018                                ?_delayUS 007C  
                  __size_of_EraseScreen 0028                             __tdiv_to_l_ 6894  
                          ??__div_to_l_ 0082                       SendRF_wait@amount 0088  
                         IRrawToNEC@NEC 001D                       _WriteEEPROM_1Byte 8C90  
                              ?_isdigit 0001               __end_of_Conf2_ChannelB_ON F2AE  
             __end_of_Conf2_ChannelD_ON F2CE                           IRrawToNEC@Raw 001B  
                         UseBluetooth@i 0292                __end_of_ReadEEPROM_1Byte 8C90  
                              ?_low_isr 0001                      ?_WriteEEPROM_1Byte 007C  
                        __size_of_Round 0066                               _hexpowers F18F  
            __end_of_SyncGlobalToEEPROM 90A0                   __size_ofi1_UARTstring 0058  
              __end_of_EnterCommandMode 7F3A                                ?_sprintf 00CA  
                        __size_of_scale 0504                           _lowercaseChar 934C  
              UseBluetooth@rfchannelSTR 0273                        _SetEEPROMdefault 742A  
                             delayUS@US 007C                   __end_ofi1_cleanBuffer 91E8  
                       IsCharacter@data 0001                             ??_GetEEPROM 00A3  
                   ??_WriteEEPROM_1Byte 007F                             ??_DecodeNEC 0088  
                        ___wmul@product 008E                                _IOCBbits 000F7D  
                       i1_BlueConnected 9578                __end_of_CheckReceivingIR 94F8  
                      _cleanBuffer16bit 8D58                         ?_SendRF_Channel 0001  
                              _IPR1bits 000F9F                                _IPR2bits 000FA2  
                              _PIE1bits 000F9D                                _PIE2bits 000FA0  
                          cleanBuffer@i 0083                                _PIR1bits 000F9E  
                    __end_of__div_to_l_ 6BCE                                _PIR2bits 000FA1  
                              _RCONbits 000FD0                    i1UARTstringCRLN@data 0004  
                      __CFG_WDTPS$32768 000000                          UseIRCode@found 00C6  
                           ??_GetNumber 008D                             ??_EncodeNEC 0084  
                        DecodeNEC@temp1 008E                          DecodeNEC@temp2 008C  
                        DecodeNEC@temp3 008D                                _RFConfig 0034  
                              _UARTchar 93E8            ??_StringMatchCaseInsensitive 0083  
                         ??i1_ReadUSART 0001            __size_of_BluetoothConfigured 001C  
              BluetoothInitialSetup@buf 012E               ReadEEPROM_1Byte@GIEstatus 007E  
             __end_of_WriteEEPROM_1Byte 8CF4                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 008A                            i1_UARTstring 8E6A  
                  __size_of_Init_System 0070                                _IRpinOLD 002F  
        __size_of_BluetoothInitialSetup 0424                     ReadCodeButtons@temp 0085  
         __end_of_BluetoothInitialSetup 5540                   __size_of_Reverse_Byte 00B6  
                        _UARTstringCRLN 8B5A                         ??_BlueConnected 007C  
                           ??_ReadUSART 007C                           ??i2_ReadIRpin 001B  
                  __size_of_ReadVoltage 00B8                             ??_ReadIRpin 007C  
              __size_of_WaitForIRsignal 0090                         StringAddEqual@i 0091  
                       StringAddEqual@j 0092                             ??_SetEEPROM 00B2  
                        ?_lowercaseChar 007C                       ___lmul@multiplier 007C  
                           _INTCON2bits 000FF1                                _IsLetter 93CA  
                             copy_data0 807C                               copy_data1 80AE  
            __end_ofi2_cleanBuffer16bit 916C                           _CommandString 0500  
                              _InitUART 79D4                         UseBluetooth@buf 020F  
                       UseBluetooth@set 027D                             ??_OpenUSART 007E  
                          GetNumber@Hex 0095                         IRrawToNEC@first 0064  
                       ??_GetMemoryChar 0084                         OpenUSART@config 007E  
                       ??_GetMemoryLong 0084                      SendNEC_wait@toggle 0096  
                           ??_SetTimer0 001D             __end_of_GetStringAfterComma 79D4  
                            _EECON1bits 000FA6                            ?_StringMatch 007C  
                           ??_ResetBlue 0085                        __size_of_InitADC 0016  
                       ??_EEPROM_UNLOCK 007C                                _ResetADC 956A  
                 __end_of_SendNEC_bytes 88FC                        __size_of_InitApp 0046  
                              __Hrparam 0000                             ??_UseIRCode 00C3  
                       ??_Reverse_4Byte 0080                                __Lrparam 0000  
                        i1cleanBuffer@i 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_UARTcommandMenu 011E                    __size_of_SendRF_wait 003E  
                 __size_of_UseBluetooth 1FE8                __size_of_ReadCodeButtons 0054  
                          _Reverse_Byte 8178               InternalADC_Read@ADCcounts 0085  
                    i1cleanBuffer@count 0003                       Reverse_4Byte@This 007C  
                         GetEEPROM@Temp 00A1                        __size_of___awdiv 00D0  
                      __size_of___ftadd 027E                        __size_of___awmod 00B4  
                      __size_of___ftdiv 0152                         cleanBuffer@data 007C  
                      __size_of___ftneg 0030                        __size_of___lldiv 00C6  
                              ___altoft 8588                        __size_of___ftmul 016C  
                      __size_of___llmod 00A4                        __size_of___ftsub 0050  
                      __size_of___fttol 0152                       Reverse_4Byte@temp 0088  
                              ___ftpack 7678              InternalADC_Read@AnaChanSel 0089  
                           _fround$3807 00AB                             _fround$3808 00A8  
                              ___lltoft 88FC                  __end_of_UARTstringCRLN 8BC4  
                      __size_of_delayUS 0056           __end_of_Conf2_ChannelB_ON_STR F27C  
                              ___lwtoft 9320           __end_of_Conf2_ChannelD_ON_STR F28E  
                     main@VoltageStatus 0296                              sprintf@idx 0109  
                            sprintf@len 010C                              sprintf@exp 0116  
                            sprintf@val 0118                  UseBluetooth@NecAddress 028C  
                   __end_ofi1_ReadUSART 94AC                        __size_of_isdigit 002E  
                UseBluetooth@NecCommand 028D                        __size_of_low_isr 01DA  
                              __ptext10 86C8                                __ptext11 8A72  
                              __ptext20 8876                                __ptext12 7552  
                              __ptext21 3122                                __ptext13 62DA  
                              __ptext30 4860                                __ptext22 94E6  
                              __ptext14 87EC                                __ptext31 934C  
                              __ptext23 80C0                                __ptext15 916C  
                              __ptext40 742A                                __ptext32 89F8  
                              __ptext24 9320                                __ptext16 7BE4  
                              __ptext41 79D4                                __ptext33 93CA  
                              __ptext25 7038                                __ptext17 94D4  
                              __ptext50 9532                                __ptext42 8BC4  
                              __ptext34 72DC                                __ptext26 95DA  
                              __ptext18 9594                                __ptext51 9540  
                              __ptext43 8588                                __ptext35 8394  
                              __ptext27 95E0                                __ptext19 862A  
                              __ptext60 435C                                __ptext52 9012  
                              __ptext44 897C                                __ptext36 8178  
                              __ptext28 84E6                                __ptext61 92F2  
                              __ptext53 8D58                                __ptext45 9516  
                              __ptext37 8AEA                                __ptext29 78B6  
                              __ptext70 8442                                __ptext62 58C4  
                              __ptext54 95A8                                __ptext46 9524  
                              __ptext38 66C6                                __ptext71 7F3A  
                              __ptext63 9222                                __ptext55 954E  
                              __ptext47 9422                                __ptext39 6BCE  
                              __ptext80 8E10                                __ptext72 718A  
                              __ptext64 6ECC                                __ptext56 94F8  
                              __ptext48 94AC                                __ptext81 93E8  
                              __ptext73 8FC2                                __ptext65 822E  
                              __ptext57 8EC2                                __ptext49 959E  
                              __ptext90 6D5C                                __ptext82 82E2  
                              __ptext74 5B9C                                __ptext66 7CD4  
                              __ptext58 511C                                __ptext91 91E8  
                              __ptext83 9290                                __ptext75 7678  
                              __ptext67 6894                                __ptext59 21DE  
                              __ptext92 8C90                                __ptext84 8F18  
                              __ptext76 92C2                                __ptext68 6A3A  
                              __ptext93 946A                                __ptext85 955C  
                              __ptext77 7DA4                                __ptext69 88FC  
                     SendNEC_bytes@code 008C                                __ptext94 9378  
                              __ptext86 9406                                __ptext78 7E72  
                              __ptext95 8C2A                                __ptext87 905A  
                              __ptext79 8DB6                                __ptext96 9480  
                              __ptext88 64DA                                __ptext97 956A  
                              __ptext89 7AEA                 __end_ofi1_BlueConnected 9586  
                              __ptext98 94C0                                __ptext99 90A0  
                              __powers_ F168                                _high_isr 0008  
            __end_of_Conf1_ChannelD_STR F33D              __end_of_Conf1_ChannelE_STR F34C  
            __end_of_Conf1_ChannelF_STR F35B                        __size_of_sprintf 0F44  
                   __end_ofi2_ReadIRpin 9594                         _lowercaseString 90E6  
                            GetEEPROM@i 00A7                              GetEEPROM@j 00A8  
                            GetEEPROM@k 00A6                           __size_of_main 0436  
                 SendRF_Channel@channel 0089                            _UseBluetooth 01F6  
                              delayUS@i 0081                    __size_of_ResetTimer0 000A  
                  __size_of_ResetTimer1 000A                    __size_of_ResetTimer3 000A  
             __size_ofi1_UARTstringCRLN 0064               GetMemoryChar@AddressFirst 0084  
          __size_of_ConfigureOscillator 0002                  UseBluetooth@EnteredNEC 0285  
                      _Local_CloseUSART 9516                         GetMemoryLong@MH 009D  
                       GetMemoryLong@ML 009E                  UseBluetooth@EmptyPlace 0283  
                          BufferCopy@to 0086             __size_of_SyncEEPROMToGlobal 01CE  
            __size_of_WriteEEPROM_1Byte 0064                              _LEDTimerON 94D4  
                       ?_UARTstringCRLN 007F                  __size_ofi2_ResetTimer0 000A  
                            _INTCONbits 000FF2               __size_of_InternalADC_Read 00A2  
                        OpenUSART@spbrg 007C                         ??_lowercaseChar 007E  
                          UARTchar@data 007C                         StringMatch@That 007E  
                       StringMatch@This 007C                                isdigit@c 007E  
                              scale@scl 00AB                      GetEEPROM@Arrayspot 00A5  
                    SetEEPROM@Arrayspot 00B9                        EncodeNEC@address 00A8  
              __end_of_VoltageDividerON 95E0                     i2cleanBuffer16bit@i 0022  
          __end_of_Conf2_ChannelH_1_OFF F2DE            __end_of_Conf2_ChannelH_2_OFF F2FE  
          __end_of_Conf2_ChannelH_3_OFF F31E                                intlevel1 0000  
                              intlevel2 0000                              _PCBVersion F396  
                             sprintf@ap 010E                               sprintf@cp 010A  
                      __tdiv_to_l_@exp1 008A                               sprintf@sp 00CA  
                      __tdiv_to_l_@cntr 0089                            ?_cleanBuffer 007C  
    GetStringAfterComma@tempCommaNumber 0082                        __tdiv_to_l_@quot 0085  
                     ??_WaitForIRsignal 0085                        EncodeNEC@command 0080  
                      ___lldiv@dividend 007C                            IsLetter@data 007C  
       ??_StringContainsCaseInsensitive 0083                          _BatteryVoltage 02E3  
                        GetMemoryChar@H 0085                             _IR_New_Code 00E1  
                            i1_UARTchar 9452                          GetMemoryLong@H 009C  
                        GetMemoryLong@L 009F                  __size_of_InitBluetooth 0056  
                           BufferCopy@i 008A                   __end_of_SetMemoryChar 9222  
                 __end_of_SetMemoryLong 7BE4          BluetoothInitialSetup@RFchannel 0124  
                         ??_IsCharacter 0001                           _InitUART$3806 0100  
              __end_of_SetEEPROMdefault 7552                          _Conf1_ChannelD F369  
                        _Conf1_ChannelE F375                          _Conf1_ChannelF F381  
                            GetNumber@i 0096                          _Conf1_Channels F39B  
                           i1_ReadUSART 9496                        DecodeNEC@address 0084  
                          ?__tdiv_to_l_ 007C                        UARTcommandMenu@i 0088  
                UARTcommandMenu@Command 007F                       ??_UARTcommandMenu 0083  
           __end_of_Conf2_ChannelH_1_ON F2EE             __end_of_Conf2_ChannelH_2_ON F30E  
           __end_of_Conf2_ChannelH_3_ON F32E                          _Conf2_Channels F39F  
                              sprintf@c 0123                __end_of_cleanBuffer16bit 8DB6  
                              sprintf@f 00CC                        DecodeNEC@command 0086  
                     ??_ReadCodeButtons 0085                        ___lldiv@quotient 0084  
                           i2_ReadIRpin 9586                       ?_ReadEEPROM_1Byte 007C  
                          EraseScreen@i 0003                 __end_of_lowercaseString 912A  
                      ?i1_BlueConnected 0001                 __size_of_StringAddEqual 0200  
                        i1UARTchar@data 0001                        ??_SendRF_Channel 0089  
                    ??_ReadEEPROM_1Byte 007E                       ?_EnterCommandMode 0001  
            __end_of_Conf2_ChannelB_OFF F29E              __end_of_Conf2_ChannelD_OFF F2BE  
                   _BluetoothConfigured 9406                      ??_EnterCommandMode 0085  
                            _UARTstring 8E10                           i2_ResetTimer0 95B2  
                     ?_CheckReceivingIR 0001               GetStringAfterComma@result 007F  
                    _SyncGlobalToEEPROM 905A                      ??_CheckReceivingIR 007C  
                       BufferCopy@count 0088                    __size_of_StringMatch 0078  
