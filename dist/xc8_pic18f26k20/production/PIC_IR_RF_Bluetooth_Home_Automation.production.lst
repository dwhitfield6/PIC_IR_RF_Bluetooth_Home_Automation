

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 09 14:10:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	idataBANK4,global,class=CODE,delta=1
    10                           	psect	idataBANK5,global,class=CODE,delta=1
    11                           	psect	idataBANK8,global,class=CODE,delta=1
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    27                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1
    28                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    29                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1
    79                           	psect	text45,global,reloc=2,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=2,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   135                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   136                           	psect	text101,global,reloc=2,class=CODE,delta=1
   137                           	psect	text102,global,reloc=2,class=CODE,delta=1
   138                           	psect	text103,global,reloc=2,class=CODE,delta=1
   139                           	psect	text104,global,reloc=2,class=CODE,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   142  0000                     
   143                           	psect	idataCOMRAM
   144  00789E                     __pidataCOMRAM:
   145                           	opt stack 0
   146                           
   147                           ;initializer for _SN
   148  00789E  0001               	dw	1
   149  0078A0  0000               	dw	0
   150                           
   151                           ;initializer for _IRbitPosition
   152  0078A2  20                 	db	32
   153                           
   154                           ;initializer for _IRcodePlace
   155  0078A3  01                 	db	1
   156                           
   157                           ;initializer for _RF_IR
   158  0078A4  37                 	db	55
   159                           
   160                           ;initializer for _RF_IR_Postscaler
   161  0078A5  02                 	db	2
   162                           
   163                           ;initializer for _ReceivingIR
   164  0078A6  0D                 	db	13
   165                           
   166                           	psect	idataBANK0
   167  0078AE                     __pidataBANK0:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _Sent
   171  0078AE  01                 	db	1
   172                           
   173                           ;initializer for _CRLN
   174  0078AF  0D                 	db	13
   175  0078B0  0A                 	db	10
   176  0078B1  00                 	db	0
   177                           
   178                           	psect	idataBANK1
   179  0078B2                     __pidataBANK1:
   180                           	opt stack 0
   181                           
   182                           ;initializer for _Conf2_Channels
   183  0078B2  42                 	db	66
   184  0078B3  44                 	db	68
   185  0078B4  48                 	db	72
   186  0078B5  00                 	db	0
   187                           
   188                           	psect	idataBANK2
   189  0078B6                     __pidataBANK2:
   190                           	opt stack 0
   191                           
   192                           ;initializer for _Conf1_Channels
   193  0078B6  44                 	db	68
   194  0078B7  45                 	db	69
   195  0078B8  46                 	db	70
   196  0078B9  00                 	db	0
   197                           
   198                           	psect	idataBANK4
   199  006090                     __pidataBANK4:
   200                           	opt stack 0
   201                           
   202                           ;initializer for _Conf2_ChannelB_OFF
   203  006090  00                 	db	0
   204  006091  01                 	db	1
   205  006092  01                 	db	1
   206  006093  00                 	db	0
   207  006094  01                 	db	1
   208  006095  00                 	db	0
   209  006096  00                 	db	0
   210  006097  00                 	db	0
   211  006098  00                 	db	0
   212  006099  00                 	db	0
   213  00609A  00                 	db	0
   214  00609B  01                 	db	1
   215  00609C  00                 	db	0
   216  00609D  01                 	db	1
   217  00609E  00                 	db	0
   218  00609F  00                 	db	0
   219                           
   220                           ;initializer for _Conf2_ChannelB_ON
   221  0060A0  00                 	db	0
   222  0060A1  01                 	db	1
   223  0060A2  01                 	db	1
   224  0060A3  00                 	db	0
   225  0060A4  01                 	db	1
   226  0060A5  00                 	db	0
   227  0060A6  00                 	db	0
   228  0060A7  00                 	db	0
   229  0060A8  00                 	db	0
   230  0060A9  00                 	db	0
   231  0060AA  01                 	db	1
   232  0060AB  00                 	db	0
   233  0060AC  00                 	db	0
   234  0060AD  01                 	db	1
   235  0060AE  00                 	db	0
   236  0060AF  00                 	db	0
   237                           
   238                           ;initializer for _Conf2_ChannelD_OFF
   239  0060B0  00                 	db	0
   240  0060B1  01                 	db	1
   241  0060B2  01                 	db	1
   242  0060B3  00                 	db	0
   243  0060B4  01                 	db	1
   244  0060B5  00                 	db	0
   245  0060B6  00                 	db	0
   246  0060B7  00                 	db	0
   247  0060B8  00                 	db	0
   248  0060B9  00                 	db	0
   249  0060BA  00                 	db	0
   250  0060BB  01                 	db	1
   251  0060BC  00                 	db	0
   252  0060BD  00                 	db	0
   253  0060BE  00                 	db	0
   254  0060BF  01                 	db	1
   255                           
   256                           ;initializer for _Conf2_ChannelD_ON
   257  0060C0  00                 	db	0
   258  0060C1  01                 	db	1
   259  0060C2  01                 	db	1
   260  0060C3  00                 	db	0
   261  0060C4  01                 	db	1
   262  0060C5  00                 	db	0
   263  0060C6  00                 	db	0
   264  0060C7  00                 	db	0
   265  0060C8  00                 	db	0
   266  0060C9  00                 	db	0
   267  0060CA  01                 	db	1
   268  0060CB  00                 	db	0
   269  0060CC  00                 	db	0
   270  0060CD  00                 	db	0
   271  0060CE  00                 	db	0
   272  0060CF  01                 	db	1
   273                           
   274                           ;initializer for _Conf2_ChannelH_1_OFF
   275  0060D0  00                 	db	0
   276  0060D1  01                 	db	1
   277  0060D2  01                 	db	1
   278  0060D3  00                 	db	0
   279  0060D4  01                 	db	1
   280  0060D5  00                 	db	0
   281  0060D6  00                 	db	0
   282  0060D7  00                 	db	0
   283  0060D8  00                 	db	0
   284  0060D9  01                 	db	1
   285  0060DA  00                 	db	0
   286  0060DB  00                 	db	0
   287  0060DC  00                 	db	0
   288  0060DD  00                 	db	0
   289  0060DE  00                 	db	0
   290  0060DF  00                 	db	0
   291                           
   292                           ;initializer for _Conf2_ChannelH_1_ON
   293  0060E0  00                 	db	0
   294  0060E1  01                 	db	1
   295  0060E2  01                 	db	1
   296  0060E3  00                 	db	0
   297  0060E4  01                 	db	1
   298  0060E5  00                 	db	0
   299  0060E6  00                 	db	0
   300  0060E7  00                 	db	0
   301  0060E8  01                 	db	1
   302  0060E9  00                 	db	0
   303  0060EA  00                 	db	0
   304  0060EB  00                 	db	0
   305  0060EC  00                 	db	0
   306  0060ED  00                 	db	0
   307  0060EE  00                 	db	0
   308  0060EF  00                 	db	0
   309                           
   310                           ;initializer for _Conf2_ChannelH_2_OFF
   311  0060F0  00                 	db	0
   312  0060F1  01                 	db	1
   313  0060F2  01                 	db	1
   314  0060F3  00                 	db	0
   315  0060F4  01                 	db	1
   316  0060F5  00                 	db	0
   317  0060F6  00                 	db	0
   318  0060F7  00                 	db	0
   319  0060F8  00                 	db	0
   320  0060F9  00                 	db	0
   321  0060FA  00                 	db	0
   322  0060FB  01                 	db	1
   323  0060FC  00                 	db	0
   324  0060FD  00                 	db	0
   325  0060FE  00                 	db	0
   326  0060FF  00                 	db	0
   327                           
   328                           ;initializer for _Conf2_ChannelH_2_ON
   329  006100  00                 	db	0
   330  006101  01                 	db	1
   331  006102  01                 	db	1
   332  006103  00                 	db	0
   333  006104  01                 	db	1
   334  006105  00                 	db	0
   335  006106  00                 	db	0
   336  006107  00                 	db	0
   337  006108  00                 	db	0
   338  006109  00                 	db	0
   339  00610A  01                 	db	1
   340  00610B  00                 	db	0
   341  00610C  00                 	db	0
   342  00610D  00                 	db	0
   343  00610E  00                 	db	0
   344  00610F  00                 	db	0
   345                           
   346                           ;initializer for _Conf2_ChannelH_3_ON
   347  006110  00                 	db	0
   348  006111  01                 	db	1
   349  006112  01                 	db	1
   350  006113  00                 	db	0
   351  006114  01                 	db	1
   352  006115  00                 	db	0
   353  006116  00                 	db	0
   354  006117  01                 	db	1
   355  006118  00                 	db	0
   356  006119  00                 	db	0
   357  00611A  00                 	db	0
   358  00611B  00                 	db	0
   359  00611C  00                 	db	0
   360  00611D  00                 	db	0
   361  00611E  00                 	db	0
   362  00611F  00                 	db	0
   363                           
   364                           ;initializer for _Conf1_ChannelD_STR
   365  006120  43                 	db	67
   366  006121  6F                 	db	111
   367  006122  6E                 	db	110
   368  006123  66                 	db	102
   369  006124  31                 	db	49
   370  006125  5F                 	db	95
   371  006126  43                 	db	67
   372  006127  68                 	db	104
   373  006128  61                 	db	97
   374  006129  6E                 	db	110
   375  00612A  6E                 	db	110
   376  00612B  65                 	db	101
   377  00612C  6C                 	db	108
   378  00612D  44                 	db	68
   379  00612E  00                 	db	0
   380                           
   381                           ;initializer for _Conf1_ChannelE_STR
   382  00612F  43                 	db	67
   383  006130  6F                 	db	111
   384  006131  6E                 	db	110
   385  006132  66                 	db	102
   386  006133  31                 	db	49
   387  006134  5F                 	db	95
   388  006135  43                 	db	67
   389  006136  68                 	db	104
   390  006137  61                 	db	97
   391  006138  6E                 	db	110
   392  006139  6E                 	db	110
   393  00613A  65                 	db	101
   394  00613B  6C                 	db	108
   395  00613C  45                 	db	69
   396  00613D  00                 	db	0
   397                           
   398                           ;initializer for _Conf1_ChannelF_STR
   399  00613E  43                 	db	67
   400  00613F  6F                 	db	111
   401  006140  6E                 	db	110
   402  006141  66                 	db	102
   403  006142  31                 	db	49
   404  006143  5F                 	db	95
   405  006144  43                 	db	67
   406  006145  68                 	db	104
   407  006146  61                 	db	97
   408  006147  6E                 	db	110
   409  006148  6E                 	db	110
   410  006149  65                 	db	101
   411  00614A  6C                 	db	108
   412  00614B  46                 	db	70
   413  00614C  00                 	db	0
   414                           
   415                           ;initializer for _Conf1_ChannelD
   416  00614D  03                 	db	3
   417  00614E  03                 	db	3
   418  00614F  03                 	db	3
   419  006150  03                 	db	3
   420  006151  03                 	db	3
   421  006152  03                 	db	3
   422  006153  00                 	db	0
   423  006154  00                 	db	0
   424  006155  01                 	db	1
   425  006156  00                 	db	0
   426  006157  00                 	db	0
   427  006158  00                 	db	0
   428                           
   429                           ;initializer for _Conf1_ChannelE
   430  006159  00                 	db	0
   431  00615A  03                 	db	3
   432  00615B  03                 	db	3
   433  00615C  03                 	db	3
   434  00615D  03                 	db	3
   435  00615E  03                 	db	3
   436  00615F  00                 	db	0
   437  006160  00                 	db	0
   438  006161  01                 	db	1
   439  006162  00                 	db	0
   440  006163  00                 	db	0
   441  006164  00                 	db	0
   442                           
   443                           ;initializer for _Conf1_ChannelF
   444  006165  03                 	db	3
   445  006166  00                 	db	0
   446  006167  03                 	db	3
   447  006168  03                 	db	3
   448  006169  03                 	db	3
   449  00616A  03                 	db	3
   450  00616B  00                 	db	0
   451  00616C  00                 	db	0
   452  00616D  01                 	db	1
   453  00616E  00                 	db	0
   454  00616F  00                 	db	0
   455  006170  00                 	db	0
   456                           
   457                           	psect	idataBANK5
   458  005F9E                     __pidataBANK5:
   459                           	opt stack 0
   460                           
   461                           ;initializer for _SYNTAX_ERR
   462  005F9E  45                 	db	69
   463  005F9F  72                 	db	114
   464  005FA0  72                 	db	114
   465  005FA1  6F                 	db	111
   466  005FA2  72                 	db	114
   467  005FA3  3A                 	db	58
   468  005FA4  20                 	db	32
   469  005FA5  53                 	db	83
   470  005FA6  79                 	db	121
   471  005FA7  6E                 	db	110
   472  005FA8  74                 	db	116
   473  005FA9  61                 	db	97
   474  005FAA  78                 	db	120
   475  005FAB  20                 	db	32
   476  005FAC  6E                 	db	110
   477  005FAD  6F                 	db	111
   478  005FAE  74                 	db	116
   479  005FAF  20                 	db	32
   480  005FB0  75                 	db	117
   481  005FB1  6E                 	db	110
   482  005FB2  64                 	db	100
   483  005FB3  65                 	db	101
   484  005FB4  72                 	db	114
   485  005FB5  73                 	db	115
   486  005FB6  74                 	db	116
   487  005FB7  6F                 	db	111
   488  005FB8  6F                 	db	111
   489  005FB9  64                 	db	100
   490  005FBA  00                 	db	0
   491                           
   492                           ;initializer for _Conf2_ChannelH_1_OFF_STR
   493  005FBB  43                 	db	67
   494  005FBC  6F                 	db	111
   495  005FBD  6E                 	db	110
   496  005FBE  66                 	db	102
   497  005FBF  32                 	db	50
   498  005FC0  5F                 	db	95
   499  005FC1  43                 	db	67
   500  005FC2  68                 	db	104
   501  005FC3  61                 	db	97
   502  005FC4  6E                 	db	110
   503  005FC5  6E                 	db	110
   504  005FC6  65                 	db	101
   505  005FC7  6C                 	db	108
   506  005FC8  48                 	db	72
   507  005FC9  5F                 	db	95
   508  005FCA  31                 	db	49
   509  005FCB  5F                 	db	95
   510  005FCC  4F                 	db	79
   511  005FCD  46                 	db	70
   512  005FCE  46                 	db	70
   513  005FCF  00                 	db	0
   514                           
   515                           ;initializer for _Conf2_ChannelH_2_OFF_STR
   516  005FD0  43                 	db	67
   517  005FD1  6F                 	db	111
   518  005FD2  6E                 	db	110
   519  005FD3  66                 	db	102
   520  005FD4  32                 	db	50
   521  005FD5  5F                 	db	95
   522  005FD6  43                 	db	67
   523  005FD7  68                 	db	104
   524  005FD8  61                 	db	97
   525  005FD9  6E                 	db	110
   526  005FDA  6E                 	db	110
   527  005FDB  65                 	db	101
   528  005FDC  6C                 	db	108
   529  005FDD  48                 	db	72
   530  005FDE  5F                 	db	95
   531  005FDF  32                 	db	50
   532  005FE0  5F                 	db	95
   533  005FE1  4F                 	db	79
   534  005FE2  46                 	db	70
   535  005FE3  46                 	db	70
   536  005FE4  00                 	db	0
   537                           
   538                           ;initializer for _Conf2_ChannelH_3_OFF_STR
   539  005FE5  43                 	db	67
   540  005FE6  6F                 	db	111
   541  005FE7  6E                 	db	110
   542  005FE8  66                 	db	102
   543  005FE9  32                 	db	50
   544  005FEA  5F                 	db	95
   545  005FEB  43                 	db	67
   546  005FEC  68                 	db	104
   547  005FED  61                 	db	97
   548  005FEE  6E                 	db	110
   549  005FEF  6E                 	db	110
   550  005FF0  65                 	db	101
   551  005FF1  6C                 	db	108
   552  005FF2  48                 	db	72
   553  005FF3  5F                 	db	95
   554  005FF4  33                 	db	51
   555  005FF5  5F                 	db	95
   556  005FF6  4F                 	db	79
   557  005FF7  46                 	db	70
   558  005FF8  46                 	db	70
   559  005FF9  00                 	db	0
   560                           
   561                           ;initializer for _Conf2_ChannelH_1_ON_STR
   562  005FFA  43                 	db	67
   563  005FFB  6F                 	db	111
   564  005FFC  6E                 	db	110
   565  005FFD  66                 	db	102
   566  005FFE  32                 	db	50
   567  005FFF  5F                 	db	95
   568  006000  43                 	db	67
   569  006001  68                 	db	104
   570  006002  61                 	db	97
   571  006003  6E                 	db	110
   572  006004  6E                 	db	110
   573  006005  65                 	db	101
   574  006006  6C                 	db	108
   575  006007  48                 	db	72
   576  006008  5F                 	db	95
   577  006009  31                 	db	49
   578  00600A  5F                 	db	95
   579  00600B  4F                 	db	79
   580  00600C  4E                 	db	78
   581  00600D  00                 	db	0
   582                           
   583                           ;initializer for _Conf2_ChannelH_2_ON_STR
   584  00600E  43                 	db	67
   585  00600F  6F                 	db	111
   586  006010  6E                 	db	110
   587  006011  66                 	db	102
   588  006012  32                 	db	50
   589  006013  5F                 	db	95
   590  006014  43                 	db	67
   591  006015  68                 	db	104
   592  006016  61                 	db	97
   593  006017  6E                 	db	110
   594  006018  6E                 	db	110
   595  006019  65                 	db	101
   596  00601A  6C                 	db	108
   597  00601B  48                 	db	72
   598  00601C  5F                 	db	95
   599  00601D  32                 	db	50
   600  00601E  5F                 	db	95
   601  00601F  4F                 	db	79
   602  006020  4E                 	db	78
   603  006021  00                 	db	0
   604                           
   605                           ;initializer for _Conf2_ChannelH_3_ON_STR
   606  006022  43                 	db	67
   607  006023  6F                 	db	111
   608  006024  6E                 	db	110
   609  006025  66                 	db	102
   610  006026  32                 	db	50
   611  006027  5F                 	db	95
   612  006028  43                 	db	67
   613  006029  68                 	db	104
   614  00602A  61                 	db	97
   615  00602B  6E                 	db	110
   616  00602C  6E                 	db	110
   617  00602D  65                 	db	101
   618  00602E  6C                 	db	108
   619  00602F  48                 	db	72
   620  006030  5F                 	db	95
   621  006031  33                 	db	51
   622  006032  5F                 	db	95
   623  006033  4F                 	db	79
   624  006034  4E                 	db	78
   625  006035  00                 	db	0
   626                           
   627                           ;initializer for _Conf2_ChannelB_OFF_STR
   628  006036  43                 	db	67
   629  006037  6F                 	db	111
   630  006038  6E                 	db	110
   631  006039  66                 	db	102
   632  00603A  32                 	db	50
   633  00603B  5F                 	db	95
   634  00603C  43                 	db	67
   635  00603D  68                 	db	104
   636  00603E  61                 	db	97
   637  00603F  6E                 	db	110
   638  006040  6E                 	db	110
   639  006041  65                 	db	101
   640  006042  6C                 	db	108
   641  006043  42                 	db	66
   642  006044  5F                 	db	95
   643  006045  4F                 	db	79
   644  006046  46                 	db	70
   645  006047  46                 	db	70
   646  006048  00                 	db	0
   647                           
   648                           ;initializer for _Conf2_ChannelD_OFF_STR
   649  006049  43                 	db	67
   650  00604A  6F                 	db	111
   651  00604B  6E                 	db	110
   652  00604C  66                 	db	102
   653  00604D  32                 	db	50
   654  00604E  5F                 	db	95
   655  00604F  43                 	db	67
   656  006050  68                 	db	104
   657  006051  61                 	db	97
   658  006052  6E                 	db	110
   659  006053  6E                 	db	110
   660  006054  65                 	db	101
   661  006055  6C                 	db	108
   662  006056  44                 	db	68
   663  006057  5F                 	db	95
   664  006058  4F                 	db	79
   665  006059  46                 	db	70
   666  00605A  46                 	db	70
   667  00605B  00                 	db	0
   668                           
   669                           ;initializer for _Conf2_ChannelB_ON_STR
   670  00605C  43                 	db	67
   671  00605D  6F                 	db	111
   672  00605E  6E                 	db	110
   673  00605F  66                 	db	102
   674  006060  32                 	db	50
   675  006061  5F                 	db	95
   676  006062  43                 	db	67
   677  006063  68                 	db	104
   678  006064  61                 	db	97
   679  006065  6E                 	db	110
   680  006066  6E                 	db	110
   681  006067  65                 	db	101
   682  006068  6C                 	db	108
   683  006069  42                 	db	66
   684  00606A  5F                 	db	95
   685  00606B  4F                 	db	79
   686  00606C  4E                 	db	78
   687  00606D  00                 	db	0
   688                           
   689                           ;initializer for _Conf2_ChannelD_ON_STR
   690  00606E  43                 	db	67
   691  00606F  6F                 	db	111
   692  006070  6E                 	db	110
   693  006071  66                 	db	102
   694  006072  32                 	db	50
   695  006073  5F                 	db	95
   696  006074  43                 	db	67
   697  006075  68                 	db	104
   698  006076  61                 	db	97
   699  006077  6E                 	db	110
   700  006078  6E                 	db	110
   701  006079  65                 	db	101
   702  00607A  6C                 	db	108
   703  00607B  44                 	db	68
   704  00607C  5F                 	db	95
   705  00607D  4F                 	db	79
   706  00607E  4E                 	db	78
   707  00607F  00                 	db	0
   708                           
   709                           ;initializer for _Conf2_ChannelH_3_OFF
   710  006080  00                 	db	0
   711  006081  01                 	db	1
   712  006082  01                 	db	1
   713  006083  00                 	db	0
   714  006084  01                 	db	1
   715  006085  00                 	db	0
   716  006086  01                 	db	1
   717  006087  00                 	db	0
   718  006088  00                 	db	0
   719  006089  00                 	db	0
   720  00608A  00                 	db	0
   721  00608B  00                 	db	0
   722  00608C  00                 	db	0
   723  00608D  00                 	db	0
   724  00608E  00                 	db	0
   725  00608F  00                 	db	0
   726                           
   727                           	psect	idataBANK8
   728  00758E                     __pidataBANK8:
   729                           	opt stack 0
   730                           
   731                           ;initializer for _ProductName
   732  00758E  48                 	db	72
   733  00758F  6F                 	db	111
   734  007590  6D                 	db	109
   735  007591  65                 	db	101
   736  007592  20                 	db	32
   737  007593  41                 	db	65
   738  007594  75                 	db	117
   739  007595  74                 	db	116
   740  007596  6F                 	db	111
   741  007597  6D                 	db	109
   742  007598  61                 	db	97
   743  007599  74                 	db	116
   744  00759A  69                 	db	105
   745  00759B  6F                 	db	111
   746  00759C  6E                 	db	110
   747  00759D  00                 	db	0
   748  00759E  00                 	db	0
   749  00759F  00                 	db	0
   750  0075A0  00                 	db	0
   751  0075A1  00                 	db	0
   752  0075A2  00                 	db	0
   753  0075A3  00                 	db	0
   754  0075A4  00                 	db	0
   755  0075A5  00                 	db	0
   756  0075A6  00                 	db	0
   757  0075A7  00                 	db	0
   758  0075A8  00                 	db	0
   759  0075A9  00                 	db	0
   760  0075AA  00                 	db	0
   761  0075AB  00                 	db	0
   762  0075AC  00                 	db	0
   763  0075AD  00                 	db	0
   764  0075AE  00                 	db	0
   765  0075AF  00                 	db	0
   766  0075B0  00                 	db	0
   767  0075B1  00                 	db	0
   768  0075B2  00                 	db	0
   769  0075B3  00                 	db	0
   770  0075B4  00                 	db	0
   771  0075B5  00                 	db	0
   772  0075B6  00                 	db	0
   773  0075B7  00                 	db	0
   774  0075B8  00                 	db	0
   775  0075B9  00                 	db	0
   776  0075BA  00                 	db	0
   777  0075BB  00                 	db	0
   778  0075BC  00                 	db	0
   779  0075BD  00                 	db	0
   780  0075BE  00                 	db	0
   781  0075BF  00                 	db	0
   782                           
   783                           	psect	mediumconst
   784  00F7EE                     __pmediumconst:
   785                           	opt stack 0
   786  00F7EE  00                 	db	0
   787  00F7EF                     _octpowers:
   788                           	opt stack 0
   789  00F7EF  0001               	dw	1
   790  00F7F1  0000               	dw	0
   791  00F7F3  0008               	dw	8
   792  00F7F5  0000               	dw	0
   793  00F7F7  0040               	dw	64
   794  00F7F9  0000               	dw	0
   795  00F7FB  0200               	dw	512
   796  00F7FD  0000               	dw	0
   797  00F7FF  1000               	dw	4096
   798  00F801  0000               	dw	0
   799  00F803  8000               	dw	32768
   800  00F805  0000               	dw	0
   801  00F807  0000               	dw	0
   802  00F809  0004               	dw	4
   803  00F80B  0000               	dw	0
   804  00F80D  0020               	dw	32
   805  00F80F  0000               	dw	0
   806  00F811  0100               	dw	256
   807  00F813  0000               	dw	0
   808  00F815  0800               	dw	2048
   809  00F817  0000               	dw	0
   810  00F819  4000               	dw	16384
   811  00F81B  0000               	dw	0
   812  00F81D  0000               	dw	0
   813  00F81F                     __end_of_octpowers:
   814                           	opt stack 0
   815  00F81F                     _dpowers:
   816                           	opt stack 0
   817  00F81F  0001               	dw	1
   818  00F821  0000               	dw	0
   819  00F823  000A               	dw	10
   820  00F825  0000               	dw	0
   821  00F827  0064               	dw	100
   822  00F829  0000               	dw	0
   823  00F82B  03E8               	dw	1000
   824  00F82D  0000               	dw	0
   825  00F82F  2710               	dw	10000
   826  00F831  0000               	dw	0
   827  00F833  86A0               	dw	34464
   828  00F835  0001               	dw	1
   829  00F837  4240               	dw	16960
   830  00F839  000F               	dw	15
   831  00F83B  9680               	dw	38528
   832  00F83D  0098               	dw	152
   833  00F83F  E100               	dw	57600
   834  00F841  05F5               	dw	1525
   835  00F843  CA00               	dw	51712
   836  00F845  3B9A               	dw	15258
   837  00F847                     __end_of_dpowers:
   838                           	opt stack 0
   839  00F847                     _hexpowers:
   840                           	opt stack 0
   841  00F847  0001               	dw	1
   842  00F849  0000               	dw	0
   843  00F84B  0010               	dw	16
   844  00F84D  0000               	dw	0
   845  00F84F  0100               	dw	256
   846  00F851  0000               	dw	0
   847  00F853  1000               	dw	4096
   848  00F855  0000               	dw	0
   849  00F857  0000               	dw	0
   850  00F859  0001               	dw	1
   851  00F85B  0000               	dw	0
   852  00F85D  0010               	dw	16
   853  00F85F  0000               	dw	0
   854  00F861  0100               	dw	256
   855  00F863  0000               	dw	0
   856  00F865  1000               	dw	4096
   857  00F867                     __end_of_hexpowers:
   858                           	opt stack 0
   859  00F867                     _Version:
   860                           	opt stack 0
   861  00F867  31                 	db	49
   862  00F868  2E                 	db	46
   863  00F869  30                 	db	48
   864  00F86A  5F                 	db	95
   865  00F86B  44                 	db	68
   866  00F86C  57                 	db	87
   867  00F86D  30                 	db	48
   868  00F86E  61                 	db	97
   869  00F86F  00                 	db	0
   870  00F870                     __end_of_Version:
   871                           	opt stack 0
   872  0000                     _ADCON0	set	4034
   873  0000                     _ADCON0bits	set	4034
   874  0000                     _ADCON1	set	4033
   875  0000                     _ADCON1bits	set	4033
   876  0000                     _ADCON2	set	4032
   877  0000                     _ADCON2bits	set	4032
   878  0000                     _ADRESH	set	4036
   879  0000                     _ADRESL	set	4035
   880  0000                     _ANSEL	set	3966
   881  0000                     _ANSELH	set	3967
   882  0000                     _BAUDCONbits	set	4024
   883  0000                     _EEADR	set	4009
   884  0000                     _EEADRH	set	4010
   885  0000                     _EECON1bits	set	4006
   886  0000                     _EECON2	set	4007
   887  0000                     _EEDATA	set	4008
   888  0000                     _INTCON2bits	set	4081
   889  0000                     _INTCONbits	set	4082
   890  0000                     _IOCBbits	set	3965
   891  0000                     _IPR1bits	set	3999
   892  0000                     _IPR2bits	set	4002
   893  0000                     _LATA	set	3977
   894  0000                     _LATB	set	3978
   895  0000                     _LATC	set	3979
   896  0000                     _PIE1bits	set	3997
   897  0000                     _PIE2bits	set	4000
   898  0000                     _PIR1bits	set	3998
   899  0000                     _PIR2bits	set	4001
   900  0000                     _PORTA	set	3968
   901  0000                     _PORTB	set	3969
   902  0000                     _PORTC	set	3970
   903  0000                     _PR2	set	4043
   904  0000                     _RCONbits	set	4048
   905  0000                     _RCREG	set	4014
   906  0000                     _RCSTA	set	4011
   907  0000                     _RCSTAbits	set	4011
   908  0000                     _SPBRG	set	4015
   909  0000                     _SPBRGH	set	4016
   910  0000                     _T0CONbits	set	4053
   911  0000                     _T1CONbits	set	4045
   912  0000                     _T2CONbits	set	4042
   913  0000                     _T3CONbits	set	4017
   914  0000                     _TMR0H	set	4055
   915  0000                     _TMR0L	set	4054
   916  0000                     _TMR1H	set	4047
   917  0000                     _TMR1L	set	4046
   918  0000                     _TMR2	set	4044
   919  0000                     _TMR3H	set	4019
   920  0000                     _TMR3L	set	4018
   921  0000                     _TRISAbits	set	3986
   922  0000                     _TRISBbits	set	3987
   923  0000                     _TRISCbits	set	3988
   924  0000                     _TXREG	set	4013
   925  0000                     _TXSTA	set	4012
   926  0000                     _TXSTAbits	set	4012
   927  0000                     _WPUB	set	3964
   928  00F870                     STR_73:
   929  00F870  7E                 	db	126
   930  00F871  7E                 	db	126
   931  00F872  7E                 	db	126
   932  00F873  7E                 	db	126
   933  00F874  7E                 	db	126
   934  00F875  7E                 	db	126
   935  00F876  7E                 	db	126
   936  00F877  7E                 	db	126
   937  00F878  7E                 	db	126
   938  00F879  7E                 	db	126
   939  00F87A  7E                 	db	126
   940  00F87B  7E                 	db	126
   941  00F87C  7E                 	db	126
   942  00F87D  7E                 	db	126
   943  00F87E  7E                 	db	126
   944  00F87F  7E                 	db	126
   945  00F880  7E                 	db	126
   946  00F881  7E                 	db	126
   947  00F882  7E                 	db	126
   948  00F883  7E                 	db	126
   949  00F884  7E                 	db	126
   950  00F885  7E                 	db	126
   951  00F886  7E                 	db	126
   952  00F887  7E                 	db	126
   953  00F888  7E                 	db	126
   954  00F889  43                 	db	67	;'C'
   955  00F88A  6F                 	db	111	;'o'
   956  00F88B  6D                 	db	109	;'m'
   957  00F88C  6D                 	db	109	;'m'
   958  00F88D  61                 	db	97	;'a'
   959  00F88E  6E                 	db	110	;'n'
   960  00F88F  64                 	db	100	;'d'
   961  00F890  20                 	db	32
   962  00F891  4D                 	db	77	;'M'
   963  00F892  65                 	db	101	;'e'
   964  00F893  6E                 	db	110	;'n'
   965  00F894  75                 	db	117	;'u'
   966  00F895  7E                 	db	126
   967  00F896  7E                 	db	126
   968  00F897  7E                 	db	126
   969  00F898  7E                 	db	126
   970  00F899  7E                 	db	126
   971  00F89A  7E                 	db	126
   972  00F89B  7E                 	db	126
   973  00F89C  7E                 	db	126
   974  00F89D  7E                 	db	126
   975  00F89E  7E                 	db	126
   976  00F89F  7E                 	db	126
   977  00F8A0  7E                 	db	126
   978  00F8A1  7E                 	db	126
   979  00F8A2  7E                 	db	126
   980  00F8A3  7E                 	db	126
   981  00F8A4  7E                 	db	126
   982  00F8A5  7E                 	db	126
   983  00F8A6  7E                 	db	126
   984  00F8A7  7E                 	db	126
   985  00F8A8  7E                 	db	126
   986  00F8A9  7E                 	db	126
   987  00F8AA  7E                 	db	126
   988  00F8AB  7E                 	db	126
   989  00F8AC  7E                 	db	126
   990  00F8AD  7E                 	db	126
   991  00F8AE  7E                 	db	126
   992  00F8AF  00                 	db	0
   993  00F8B0                     STR_68:
   994  00F8B0  4E                 	db	78	;'N'
   995  00F8B1  45                 	db	69	;'E'
   996  00F8B2  43                 	db	67	;'C'
   997  00F8B3  20                 	db	32
   998  00F8B4  63                 	db	99	;'c'
   999  00F8B5  6F                 	db	111	;'o'
  1000  00F8B6  64                 	db	100	;'d'
  1001  00F8B7  65                 	db	101	;'e'
  1002  00F8B8  20                 	db	32
  1003  00F8B9  30                 	db	48	;'0'
  1004  00F8BA  78                 	db	120	;'x'
  1005  00F8BB  25                 	db	37
  1006  00F8BC  6C                 	db	108	;'l'
  1007  00F8BD  58                 	db	88	;'X'
  1008  00F8BE  20                 	db	32
  1009  00F8BF  6E                 	db	110	;'n'
  1010  00F8C0  6F                 	db	111	;'o'
  1011  00F8C1  77                 	db	119	;'w'
  1012  00F8C2  20                 	db	32
  1013  00F8C3  74                 	db	116	;'t'
  1014  00F8C4  72                 	db	114	;'r'
  1015  00F8C5  61                 	db	97	;'a'
  1016  00F8C6  6E                 	db	110	;'n'
  1017  00F8C7  73                 	db	115	;'s'
  1018  00F8C8  6D                 	db	109	;'m'
  1019  00F8C9  69                 	db	105	;'i'
  1020  00F8CA  74                 	db	116	;'t'
  1021  00F8CB  73                 	db	115	;'s'
  1022  00F8CC  20                 	db	32
  1023  00F8CD  52                 	db	82	;'R'
  1024  00F8CE  46                 	db	70	;'F'
  1025  00F8CF  20                 	db	32
  1026  00F8D0  63                 	db	99	;'c'
  1027  00F8D1  6F                 	db	111	;'o'
  1028  00F8D2  6E                 	db	110	;'n'
  1029  00F8D3  66                 	db	102	;'f'
  1030  00F8D4  69                 	db	105	;'i'
  1031  00F8D5  67                 	db	103	;'g'
  1032  00F8D6  20                 	db	32
  1033  00F8D7  25                 	db	37
  1034  00F8D8  64                 	db	100	;'d'
  1035  00F8D9  20                 	db	32
  1036  00F8DA  63                 	db	99	;'c'
  1037  00F8DB  68                 	db	104	;'h'
  1038  00F8DC  61                 	db	97	;'a'
  1039  00F8DD  6E                 	db	110	;'n'
  1040  00F8DE  6E                 	db	110	;'n'
  1041  00F8DF  65                 	db	101	;'e'
  1042  00F8E0  6C                 	db	108	;'l'
  1043  00F8E1  20                 	db	32
  1044  00F8E2  25                 	db	37
  1045  00F8E3  63                 	db	99	;'c'
  1046  00F8E4  20                 	db	32
  1047  00F8E5  64                 	db	100	;'d'
  1048  00F8E6  65                 	db	101	;'e'
  1049  00F8E7  76                 	db	118	;'v'
  1050  00F8E8  69                 	db	105	;'i'
  1051  00F8E9  63                 	db	99	;'c'
  1052  00F8EA  65                 	db	101	;'e'
  1053  00F8EB  20                 	db	32
  1054  00F8EC  25                 	db	37
  1055  00F8ED  64                 	db	100	;'d'
  1056  00F8EE  00                 	db	0
  1057  00F8EF                     STR_69:
  1058  00F8EF  4E                 	db	78	;'N'
  1059  00F8F0  45                 	db	69	;'E'
  1060  00F8F1  43                 	db	67	;'C'
  1061  00F8F2  20                 	db	32
  1062  00F8F3  63                 	db	99	;'c'
  1063  00F8F4  6F                 	db	111	;'o'
  1064  00F8F5  64                 	db	100	;'d'
  1065  00F8F6  65                 	db	101	;'e'
  1066  00F8F7  20                 	db	32
  1067  00F8F8  30                 	db	48	;'0'
  1068  00F8F9  78                 	db	120	;'x'
  1069  00F8FA  25                 	db	37
  1070  00F8FB  6C                 	db	108	;'l'
  1071  00F8FC  58                 	db	88	;'X'
  1072  00F8FD  20                 	db	32
  1073  00F8FE  6E                 	db	110	;'n'
  1074  00F8FF  6F                 	db	111	;'o'
  1075  00F900  77                 	db	119	;'w'
  1076  00F901  20                 	db	32
  1077  00F902  74                 	db	116	;'t'
  1078  00F903  72                 	db	114	;'r'
  1079  00F904  61                 	db	97	;'a'
  1080  00F905  6E                 	db	110	;'n'
  1081  00F906  73                 	db	115	;'s'
  1082  00F907  6D                 	db	109	;'m'
  1083  00F908  69                 	db	105	;'i'
  1084  00F909  74                 	db	116	;'t'
  1085  00F90A  73                 	db	115	;'s'
  1086  00F90B  20                 	db	32
  1087  00F90C  52                 	db	82	;'R'
  1088  00F90D  46                 	db	70	;'F'
  1089  00F90E  20                 	db	32
  1090  00F90F  63                 	db	99	;'c'
  1091  00F910  6F                 	db	111	;'o'
  1092  00F911  6E                 	db	110	;'n'
  1093  00F912  66                 	db	102	;'f'
  1094  00F913  69                 	db	105	;'i'
  1095  00F914  67                 	db	103	;'g'
  1096  00F915  20                 	db	32
  1097  00F916  25                 	db	37
  1098  00F917  64                 	db	100	;'d'
  1099  00F918  20                 	db	32
  1100  00F919  63                 	db	99	;'c'
  1101  00F91A  68                 	db	104	;'h'
  1102  00F91B  61                 	db	97	;'a'
  1103  00F91C  6E                 	db	110	;'n'
  1104  00F91D  6E                 	db	110	;'n'
  1105  00F91E  65                 	db	101	;'e'
  1106  00F91F  6C                 	db	108	;'l'
  1107  00F920  20                 	db	32
  1108  00F921  25                 	db	37
  1109  00F922  63                 	db	99	;'c'
  1110  00F923  20                 	db	32
  1111  00F924  00                 	db	0
  1112  00F925                     STR_66:
  1113  00F925  45                 	db	69	;'E'
  1114  00F926  72                 	db	114	;'r'
  1115  00F927  72                 	db	114	;'r'
  1116  00F928  6F                 	db	111	;'o'
  1117  00F929  72                 	db	114	;'r'
  1118  00F92A  3A                 	db	58	;':'
  1119  00F92B  20                 	db	32
  1120  00F92C  4E                 	db	78	;'N'
  1121  00F92D  6F                 	db	111	;'o'
  1122  00F92E  20                 	db	32
  1123  00F92F  52                 	db	82	;'R'
  1124  00F930  46                 	db	70	;'F'
  1125  00F931  20                 	db	32
  1126  00F932  63                 	db	99	;'c'
  1127  00F933  6F                 	db	111	;'o'
  1128  00F934  6E                 	db	110	;'n'
  1129  00F935  66                 	db	102	;'f'
  1130  00F936  69                 	db	105	;'i'
  1131  00F937  67                 	db	103	;'g'
  1132  00F938  20                 	db	32
  1133  00F939  32                 	db	50	;'2'
  1134  00F93A  2C                 	db	44
  1135  00F93B  20                 	db	32
  1136  00F93C  63                 	db	99	;'c'
  1137  00F93D  68                 	db	104	;'h'
  1138  00F93E  61                 	db	97	;'a'
  1139  00F93F  6E                 	db	110	;'n'
  1140  00F940  6E                 	db	110	;'n'
  1141  00F941  65                 	db	101	;'e'
  1142  00F942  6C                 	db	108	;'l'
  1143  00F943  20                 	db	32
  1144  00F944  48                 	db	72	;'H'
  1145  00F945  20                 	db	32
  1146  00F946  64                 	db	100	;'d'
  1147  00F947  65                 	db	101	;'e'
  1148  00F948  76                 	db	118	;'v'
  1149  00F949  69                 	db	105	;'i'
  1150  00F94A  63                 	db	99	;'c'
  1151  00F94B  65                 	db	101	;'e'
  1152  00F94C  20                 	db	32
  1153  00F94D  73                 	db	115	;'s'
  1154  00F94E  70                 	db	112	;'p'
  1155  00F94F  65                 	db	101	;'e'
  1156  00F950  63                 	db	99	;'c'
  1157  00F951  69                 	db	105	;'i'
  1158  00F952  66                 	db	102	;'f'
  1159  00F953  69                 	db	105	;'i'
  1160  00F954  65                 	db	101	;'e'
  1161  00F955  64                 	db	100	;'d'
  1162  00F956  00                 	db	0
  1163  00F957                     STR_67:
  1164  00F957  45                 	db	69	;'E'
  1165  00F958  72                 	db	114	;'r'
  1166  00F959  72                 	db	114	;'r'
  1167  00F95A  6F                 	db	111	;'o'
  1168  00F95B  72                 	db	114	;'r'
  1169  00F95C  3A                 	db	58	;':'
  1170  00F95D  20                 	db	32
  1171  00F95E  52                 	db	82	;'R'
  1172  00F95F  46                 	db	70	;'F'
  1173  00F960  20                 	db	32
  1174  00F961  63                 	db	99	;'c'
  1175  00F962  6F                 	db	111	;'o'
  1176  00F963  6E                 	db	110	;'n'
  1177  00F964  66                 	db	102	;'f'
  1178  00F965  69                 	db	105	;'i'
  1179  00F966  67                 	db	103	;'g'
  1180  00F967  20                 	db	32
  1181  00F968  32                 	db	50	;'2'
  1182  00F969  2C                 	db	44
  1183  00F96A  20                 	db	32
  1184  00F96B  63                 	db	99	;'c'
  1185  00F96C  68                 	db	104	;'h'
  1186  00F96D  61                 	db	97	;'a'
  1187  00F96E  6E                 	db	110	;'n'
  1188  00F96F  6E                 	db	110	;'n'
  1189  00F970  65                 	db	101	;'e'
  1190  00F971  6C                 	db	108	;'l'
  1191  00F972  20                 	db	32
  1192  00F973  48                 	db	72	;'H'
  1193  00F974  20                 	db	32
  1194  00F975  64                 	db	100	;'d'
  1195  00F976  65                 	db	101	;'e'
  1196  00F977  76                 	db	118	;'v'
  1197  00F978  69                 	db	105	;'i'
  1198  00F979  63                 	db	99	;'c'
  1199  00F97A  65                 	db	101	;'e'
  1200  00F97B  20                 	db	32
  1201  00F97C  6F                 	db	111	;'o'
  1202  00F97D  75                 	db	117	;'u'
  1203  00F97E  74                 	db	116	;'t'
  1204  00F97F  20                 	db	32
  1205  00F980  6F                 	db	111	;'o'
  1206  00F981  66                 	db	102	;'f'
  1207  00F982  20                 	db	32
  1208  00F983  72                 	db	114	;'r'
  1209  00F984  61                 	db	97	;'a'
  1210  00F985  6E                 	db	110	;'n'
  1211  00F986  67                 	db	103	;'g'
  1212  00F987  65                 	db	101	;'e'
  1213  00F988  00                 	db	0
  1214  00F989                     STR_48:
  1215  00F989  45                 	db	69	;'E'
  1216  00F98A  72                 	db	114	;'r'
  1217  00F98B  72                 	db	114	;'r'
  1218  00F98C  6F                 	db	111	;'o'
  1219  00F98D  72                 	db	114	;'r'
  1220  00F98E  3A                 	db	58	;':'
  1221  00F98F  20                 	db	32
  1222  00F990  4E                 	db	78	;'N'
  1223  00F991  6F                 	db	111	;'o'
  1224  00F992  20                 	db	32
  1225  00F993  4E                 	db	78	;'N'
  1226  00F994  45                 	db	69	;'E'
  1227  00F995  43                 	db	67	;'C'
  1228  00F996  20                 	db	32
  1229  00F997  63                 	db	99	;'c'
  1230  00F998  6F                 	db	111	;'o'
  1231  00F999  64                 	db	100	;'d'
  1232  00F99A  65                 	db	101	;'e'
  1233  00F99B  20                 	db	32
  1234  00F99C  73                 	db	115	;'s'
  1235  00F99D  61                 	db	97	;'a'
  1236  00F99E  76                 	db	118	;'v'
  1237  00F99F  65                 	db	101	;'e'
  1238  00F9A0  64                 	db	100	;'d'
  1239  00F9A1  20                 	db	32
  1240  00F9A2  66                 	db	102	;'f'
  1241  00F9A3  6F                 	db	111	;'o'
  1242  00F9A4  72                 	db	114	;'r'
  1243  00F9A5  20                 	db	32
  1244  00F9A6  73                 	db	115	;'s'
  1245  00F9A7  70                 	db	112	;'p'
  1246  00F9A8  65                 	db	101	;'e'
  1247  00F9A9  63                 	db	99	;'c'
  1248  00F9AA  69                 	db	105	;'i'
  1249  00F9AB  66                 	db	102	;'f'
  1250  00F9AC  69                 	db	105	;'i'
  1251  00F9AD  65                 	db	101	;'e'
  1252  00F9AE  64                 	db	100	;'d'
  1253  00F9AF  20                 	db	32
  1254  00F9B0  63                 	db	99	;'c'
  1255  00F9B1  6F                 	db	111	;'o'
  1256  00F9B2  6D                 	db	109	;'m'
  1257  00F9B3  6D                 	db	109	;'m'
  1258  00F9B4  61                 	db	97	;'a'
  1259  00F9B5  6E                 	db	110	;'n'
  1260  00F9B6  64                 	db	100	;'d'
  1261  00F9B7  00                 	db	0
  1262  00F9B8                     STR_49:
  1263  00F9B8  52                 	db	82	;'R'
  1264  00F9B9  65                 	db	101	;'e'
  1265  00F9BA  6D                 	db	109	;'m'
  1266  00F9BB  6F                 	db	111	;'o'
  1267  00F9BC  74                 	db	116	;'t'
  1268  00F9BD  65                 	db	101	;'e'
  1269  00F9BE  42                 	db	66	;'B'
  1270  00F9BF  75                 	db	117	;'u'
  1271  00F9C0  74                 	db	116	;'t'
  1272  00F9C1  74                 	db	116	;'t'
  1273  00F9C2  6F                 	db	111	;'o'
  1274  00F9C3  6E                 	db	110	;'n'
  1275  00F9C4  25                 	db	37
  1276  00F9C5  6C                 	db	108	;'l'
  1277  00F9C6  64                 	db	100	;'d'
  1278  00F9C7  20                 	db	32
  1279  00F9C8  6E                 	db	110	;'n'
  1280  00F9C9  6F                 	db	111	;'o'
  1281  00F9CA  77                 	db	119	;'w'
  1282  00F9CB  20                 	db	32
  1283  00F9CC  74                 	db	116	;'t'
  1284  00F9CD  72                 	db	114	;'r'
  1285  00F9CE  61                 	db	97	;'a'
  1286  00F9CF  6E                 	db	110	;'n'
  1287  00F9D0  73                 	db	115	;'s'
  1288  00F9D1  6D                 	db	109	;'m'
  1289  00F9D2  69                 	db	105	;'i'
  1290  00F9D3  74                 	db	116	;'t'
  1291  00F9D4  73                 	db	115	;'s'
  1292  00F9D5  20                 	db	32
  1293  00F9D6  4E                 	db	78	;'N'
  1294  00F9D7  45                 	db	69	;'E'
  1295  00F9D8  43                 	db	67	;'C'
  1296  00F9D9  20                 	db	32
  1297  00F9DA  63                 	db	99	;'c'
  1298  00F9DB  6F                 	db	111	;'o'
  1299  00F9DC  64                 	db	100	;'d'
  1300  00F9DD  65                 	db	101	;'e'
  1301  00F9DE  20                 	db	32
  1302  00F9DF  30                 	db	48	;'0'
  1303  00F9E0  78                 	db	120	;'x'
  1304  00F9E1  25                 	db	37
  1305  00F9E2  6C                 	db	108	;'l'
  1306  00F9E3  58                 	db	88	;'X'
  1307  00F9E4  20                 	db	32
  1308  00F9E5  00                 	db	0
  1309  00F9E6                     STR_47:
  1310  00F9E6  4E                 	db	78	;'N'
  1311  00F9E7  45                 	db	69	;'E'
  1312  00F9E8  43                 	db	67	;'C'
  1313  00F9E9  20                 	db	32
  1314  00F9EA  43                 	db	67	;'C'
  1315  00F9EB  6F                 	db	111	;'o'
  1316  00F9EC  64                 	db	100	;'d'
  1317  00F9ED  65                 	db	101	;'e'
  1318  00F9EE  20                 	db	32
  1319  00F9EF  61                 	db	97	;'a'
  1320  00F9F0  64                 	db	100	;'d'
  1321  00F9F1  64                 	db	100	;'d'
  1322  00F9F2  72                 	db	114	;'r'
  1323  00F9F3  65                 	db	101	;'e'
  1324  00F9F4  73                 	db	115	;'s'
  1325  00F9F5  73                 	db	115	;'s'
  1326  00F9F6  3A                 	db	58	;':'
  1327  00F9F7  20                 	db	32
  1328  00F9F8  30                 	db	48	;'0'
  1329  00F9F9  78                 	db	120	;'x'
  1330  00F9FA  25                 	db	37
  1331  00F9FB  30                 	db	48	;'0'
  1332  00F9FC  32                 	db	50	;'2'
  1333  00F9FD  58                 	db	88	;'X'
  1334  00F9FE  20                 	db	32
  1335  00F9FF  2C                 	db	44
  1336  00FA00  20                 	db	32
  1337  00FA01  63                 	db	99	;'c'
  1338  00FA02  6F                 	db	111	;'o'
  1339  00FA03  6D                 	db	109	;'m'
  1340  00FA04  6D                 	db	109	;'m'
  1341  00FA05  61                 	db	97	;'a'
  1342  00FA06  6E                 	db	110	;'n'
  1343  00FA07  64                 	db	100	;'d'
  1344  00FA08  3A                 	db	58	;':'
  1345  00FA09  20                 	db	32
  1346  00FA0A  30                 	db	48	;'0'
  1347  00FA0B  78                 	db	120	;'x'
  1348  00FA0C  25                 	db	37
  1349  00FA0D  30                 	db	48	;'0'
  1350  00FA0E  32                 	db	50	;'2'
  1351  00FA0F  58                 	db	88	;'X'
  1352  00FA10  20                 	db	32
  1353  00FA11  00                 	db	0
  1354  00FA12                     STR_70:
  1355  00FA12  45                 	db	69	;'E'
  1356  00FA13  72                 	db	114	;'r'
  1357  00FA14  72                 	db	114	;'r'
  1358  00FA15  6F                 	db	111	;'o'
  1359  00FA16  72                 	db	114	;'r'
  1360  00FA17  3A                 	db	58	;':'
  1361  00FA18  20                 	db	32
  1362  00FA19  52                 	db	82	;'R'
  1363  00FA1A  46                 	db	70	;'F'
  1364  00FA1B  20                 	db	32
  1365  00FA1C  63                 	db	99	;'c'
  1366  00FA1D  68                 	db	104	;'h'
  1367  00FA1E  61                 	db	97	;'a'
  1368  00FA1F  6E                 	db	110	;'n'
  1369  00FA20  6E                 	db	110	;'n'
  1370  00FA21  65                 	db	101	;'e'
  1371  00FA22  6C                 	db	108	;'l'
  1372  00FA23  20                 	db	32
  1373  00FA24  6E                 	db	110	;'n'
  1374  00FA25  65                 	db	101	;'e'
  1375  00FA26  65                 	db	101	;'e'
  1376  00FA27  64                 	db	100	;'d'
  1377  00FA28  73                 	db	115	;'s'
  1378  00FA29  20                 	db	32
  1379  00FA2A  74                 	db	116	;'t'
  1380  00FA2B  6F                 	db	111	;'o'
  1381  00FA2C  20                 	db	32
  1382  00FA2D  62                 	db	98	;'b'
  1383  00FA2E  65                 	db	101	;'e'
  1384  00FA2F  20                 	db	32
  1385  00FA30  6F                 	db	111	;'o'
  1386  00FA31  6E                 	db	110	;'n'
  1387  00FA32  65                 	db	101	;'e'
  1388  00FA33  20                 	db	32
  1389  00FA34  63                 	db	99	;'c'
  1390  00FA35  68                 	db	104	;'h'
  1391  00FA36  61                 	db	97	;'a'
  1392  00FA37  72                 	db	114	;'r'
  1393  00FA38  61                 	db	97	;'a'
  1394  00FA39  63                 	db	99	;'c'
  1395  00FA3A  74                 	db	116	;'t'
  1396  00FA3B  65                 	db	101	;'e'
  1397  00FA3C  72                 	db	114	;'r'
  1398  00FA3D  00                 	db	0
  1399  00FA3E                     STR_85:
  1400  00FA3E  44                 	db	68	;'D'
  1401  00FA3F  69                 	db	105	;'i'
  1402  00FA40  73                 	db	115	;'s'
  1403  00FA41  70                 	db	112	;'p'
  1404  00FA42  6C                 	db	108	;'l'
  1405  00FA43  61                 	db	97	;'a'
  1406  00FA44  79                 	db	121	;'y'
  1407  00FA45  73                 	db	115	;'s'
  1408  00FA46  20                 	db	32
  1409  00FA47  44                 	db	68	;'D'
  1410  00FA48  65                 	db	101	;'e'
  1411  00FA49  73                 	db	115	;'s'
  1412  00FA4A  63                 	db	99	;'c'
  1413  00FA4B  72                 	db	114	;'r'
  1414  00FA4C  69                 	db	105	;'i'
  1415  00FA4D  70                 	db	112	;'p'
  1416  00FA4E  74                 	db	116	;'t'
  1417  00FA4F  69                 	db	105	;'i'
  1418  00FA50  6F                 	db	111	;'o'
  1419  00FA51  6E                 	db	110	;'n'
  1420  00FA52  20                 	db	32
  1421  00FA53  68                 	db	104	;'h'
  1422  00FA54  6F                 	db	111	;'o'
  1423  00FA55  77                 	db	119	;'w'
  1424  00FA56  20                 	db	32
  1425  00FA57  73                 	db	115	;'s'
  1426  00FA58  65                 	db	101	;'e'
  1427  00FA59  6E                 	db	110	;'n'
  1428  00FA5A  64                 	db	100	;'d'
  1429  00FA5B  20                 	db	32
  1430  00FA5C  4E                 	db	78	;'N'
  1431  00FA5D  45                 	db	69	;'E'
  1432  00FA5E  43                 	db	67	;'C'
  1433  00FA5F  20                 	db	32
  1434  00FA60  73                 	db	115	;'s'
  1435  00FA61  69                 	db	105	;'i'
  1436  00FA62  67                 	db	103	;'g'
  1437  00FA63  6E                 	db	110	;'n'
  1438  00FA64  61                 	db	97	;'a'
  1439  00FA65  6C                 	db	108	;'l'
  1440  00FA66  00                 	db	0
  1441  00FA67                     STR_60:
  1442  00FA67  45                 	db	69	;'E'
  1443  00FA68  72                 	db	114	;'r'
  1444  00FA69  72                 	db	114	;'r'
  1445  00FA6A  6F                 	db	111	;'o'
  1446  00FA6B  72                 	db	114	;'r'
  1447  00FA6C  3A                 	db	58	;':'
  1448  00FA6D  20                 	db	32
  1449  00FA6E  4E                 	db	78	;'N'
  1450  00FA6F  6F                 	db	111	;'o'
  1451  00FA70  20                 	db	32
  1452  00FA71  52                 	db	82	;'R'
  1453  00FA72  46                 	db	70	;'F'
  1454  00FA73  20                 	db	32
  1455  00FA74  63                 	db	99	;'c'
  1456  00FA75  6F                 	db	111	;'o'
  1457  00FA76  6E                 	db	110	;'n'
  1458  00FA77  66                 	db	102	;'f'
  1459  00FA78  69                 	db	105	;'i'
  1460  00FA79  67                 	db	103	;'g'
  1461  00FA7A  75                 	db	117	;'u'
  1462  00FA7B  72                 	db	114	;'r'
  1463  00FA7C  61                 	db	97	;'a'
  1464  00FA7D  74                 	db	116	;'t'
  1465  00FA7E  69                 	db	105	;'i'
  1466  00FA7F  6F                 	db	111	;'o'
  1467  00FA80  6E                 	db	110	;'n'
  1468  00FA81  20                 	db	32
  1469  00FA82  73                 	db	115	;'s'
  1470  00FA83  70                 	db	112	;'p'
  1471  00FA84  65                 	db	101	;'e'
  1472  00FA85  63                 	db	99	;'c'
  1473  00FA86  69                 	db	105	;'i'
  1474  00FA87  66                 	db	102	;'f'
  1475  00FA88  69                 	db	105	;'i'
  1476  00FA89  65                 	db	101	;'e'
  1477  00FA8A  64                 	db	100	;'d'
  1478  00FA8B  00                 	db	0
  1479  00FA8C                     STR_62:
  1480  00FA8C  45                 	db	69	;'E'
  1481  00FA8D  72                 	db	114	;'r'
  1482  00FA8E  72                 	db	114	;'r'
  1483  00FA8F  6F                 	db	111	;'o'
  1484  00FA90  72                 	db	114	;'r'
  1485  00FA91  3A                 	db	58	;':'
  1486  00FA92  20                 	db	32
  1487  00FA93  52                 	db	82	;'R'
  1488  00FA94  46                 	db	70	;'F'
  1489  00FA95  20                 	db	32
  1490  00FA96  63                 	db	99	;'c'
  1491  00FA97  6F                 	db	111	;'o'
  1492  00FA98  6E                 	db	110	;'n'
  1493  00FA99  66                 	db	102	;'f'
  1494  00FA9A  69                 	db	105	;'i'
  1495  00FA9B  67                 	db	103	;'g'
  1496  00FA9C  75                 	db	117	;'u'
  1497  00FA9D  72                 	db	114	;'r'
  1498  00FA9E  61                 	db	97	;'a'
  1499  00FA9F  74                 	db	116	;'t'
  1500  00FAA0  69                 	db	105	;'i'
  1501  00FAA1  6F                 	db	111	;'o'
  1502  00FAA2  6E                 	db	110	;'n'
  1503  00FAA3  20                 	db	32
  1504  00FAA4  6F                 	db	111	;'o'
  1505  00FAA5  75                 	db	117	;'u'
  1506  00FAA6  74                 	db	116	;'t'
  1507  00FAA7  20                 	db	32
  1508  00FAA8  6F                 	db	111	;'o'
  1509  00FAA9  66                 	db	102	;'f'
  1510  00FAAA  20                 	db	32
  1511  00FAAB  72                 	db	114	;'r'
  1512  00FAAC  61                 	db	97	;'a'
  1513  00FAAD  6E                 	db	110	;'n'
  1514  00FAAE  67                 	db	103	;'g'
  1515  00FAAF  65                 	db	101	;'e'
  1516  00FAB0  00                 	db	0
  1517  00FAB1                     STR_51:
  1518  00FAB1  45                 	db	69	;'E'
  1519  00FAB2  72                 	db	114	;'r'
  1520  00FAB3  72                 	db	114	;'r'
  1521  00FAB4  6F                 	db	111	;'o'
  1522  00FAB5  72                 	db	114	;'r'
  1523  00FAB6  3A                 	db	58	;':'
  1524  00FAB7  20                 	db	32
  1525  00FAB8  52                 	db	82	;'R'
  1526  00FAB9  65                 	db	101	;'e'
  1527  00FABA  6D                 	db	109	;'m'
  1528  00FABB  6F                 	db	111	;'o'
  1529  00FABC  74                 	db	116	;'t'
  1530  00FABD  65                 	db	101	;'e'
  1531  00FABE  20                 	db	32
  1532  00FABF  62                 	db	98	;'b'
  1533  00FAC0  75                 	db	117	;'u'
  1534  00FAC1  74                 	db	116	;'t'
  1535  00FAC2  74                 	db	116	;'t'
  1536  00FAC3  6F                 	db	111	;'o'
  1537  00FAC4  6E                 	db	110	;'n'
  1538  00FAC5  20                 	db	32
  1539  00FAC6  6E                 	db	110	;'n'
  1540  00FAC7  75                 	db	117	;'u'
  1541  00FAC8  6D                 	db	109	;'m'
  1542  00FAC9  62                 	db	98	;'b'
  1543  00FACA  65                 	db	101	;'e'
  1544  00FACB  72                 	db	114	;'r'
  1545  00FACC  20                 	db	32
  1546  00FACD  74                 	db	116	;'t'
  1547  00FACE  6F                 	db	111	;'o'
  1548  00FACF  6F                 	db	111	;'o'
  1549  00FAD0  20                 	db	32
  1550  00FAD1  68                 	db	104	;'h'
  1551  00FAD2  69                 	db	105	;'i'
  1552  00FAD3  67                 	db	103	;'g'
  1553  00FAD4  68                 	db	104	;'h'
  1554  00FAD5  00                 	db	0
  1555  00FAD6                     STR_101:
  1556  00FAD6  45                 	db	69	;'E'
  1557  00FAD7  72                 	db	114	;'r'
  1558  00FAD8  72                 	db	114	;'r'
  1559  00FAD9  6F                 	db	111	;'o'
  1560  00FADA  72                 	db	114	;'r'
  1561  00FADB  3A                 	db	58	;':'
  1562  00FADC  20                 	db	32
  1563  00FADD  4E                 	db	78	;'N'
  1564  00FADE  6F                 	db	111	;'o'
  1565  00FADF  20                 	db	32
  1566  00FAE0  72                 	db	114	;'r'
  1567  00FAE1  65                 	db	101	;'e'
  1568  00FAE2  6D                 	db	109	;'m'
  1569  00FAE3  6F                 	db	111	;'o'
  1570  00FAE4  74                 	db	116	;'t'
  1571  00FAE5  65                 	db	101	;'e'
  1572  00FAE6  20                 	db	32
  1573  00FAE7  62                 	db	98	;'b'
  1574  00FAE8  75                 	db	117	;'u'
  1575  00FAE9  74                 	db	116	;'t'
  1576  00FAEA  74                 	db	116	;'t'
  1577  00FAEB  6F                 	db	111	;'o'
  1578  00FAEC  6E                 	db	110	;'n'
  1579  00FAED  20                 	db	32
  1580  00FAEE  77                 	db	119	;'w'
  1581  00FAEF  61                 	db	97	;'a'
  1582  00FAF0  73                 	db	115	;'s'
  1583  00FAF1  20                 	db	32
  1584  00FAF2  70                 	db	112	;'p'
  1585  00FAF3  72                 	db	114	;'r'
  1586  00FAF4  65                 	db	101	;'e'
  1587  00FAF5  73                 	db	115	;'s'
  1588  00FAF6  73                 	db	115	;'s'
  1589  00FAF7  65                 	db	101	;'e'
  1590  00FAF8  64                 	db	100	;'d'
  1591  00FAF9  00                 	db	0
  1592  00FAFA                     STR_52:
  1593  00FAFA  45                 	db	69	;'E'
  1594  00FAFB  72                 	db	114	;'r'
  1595  00FAFC  72                 	db	114	;'r'
  1596  00FAFD  6F                 	db	111	;'o'
  1597  00FAFE  72                 	db	114	;'r'
  1598  00FAFF  3A                 	db	58	;':'
  1599  00FB00  20                 	db	32
  1600  00FB01  52                 	db	82	;'R'
  1601  00FB02  65                 	db	101	;'e'
  1602  00FB03  6D                 	db	109	;'m'
  1603  00FB04  6F                 	db	111	;'o'
  1604  00FB05  74                 	db	116	;'t'
  1605  00FB06  65                 	db	101	;'e'
  1606  00FB07  20                 	db	32
  1607  00FB08  62                 	db	98	;'b'
  1608  00FB09  75                 	db	117	;'u'
  1609  00FB0A  74                 	db	116	;'t'
  1610  00FB0B  74                 	db	116	;'t'
  1611  00FB0C  6F                 	db	111	;'o'
  1612  00FB0D  6E                 	db	110	;'n'
  1613  00FB0E  20                 	db	32
  1614  00FB0F  6E                 	db	110	;'n'
  1615  00FB10  6F                 	db	111	;'o'
  1616  00FB11  74                 	db	116	;'t'
  1617  00FB12  20                 	db	32
  1618  00FB13  73                 	db	115	;'s'
  1619  00FB14  70                 	db	112	;'p'
  1620  00FB15  65                 	db	101	;'e'
  1621  00FB16  63                 	db	99	;'c'
  1622  00FB17  69                 	db	105	;'i'
  1623  00FB18  66                 	db	102	;'f'
  1624  00FB19  69                 	db	105	;'i'
  1625  00FB1A  65                 	db	101	;'e'
  1626  00FB1B  64                 	db	100	;'d'
  1627  00FB1C  00                 	db	0
  1628  00FB1D                     STR_34:
  1629  00FB1D  45                 	db	69	;'E'
  1630  00FB1E  72                 	db	114	;'r'
  1631  00FB1F  72                 	db	114	;'r'
  1632  00FB20  6F                 	db	111	;'o'
  1633  00FB21  72                 	db	114	;'r'
  1634  00FB22  3A                 	db	58	;':'
  1635  00FB23  20                 	db	32
  1636  00FB24  63                 	db	99	;'c'
  1637  00FB25  6F                 	db	111	;'o'
  1638  00FB26  75                 	db	117	;'u'
  1639  00FB27  6C                 	db	108	;'l'
  1640  00FB28  64                 	db	100	;'d'
  1641  00FB29  20                 	db	32
  1642  00FB2A  6E                 	db	110	;'n'
  1643  00FB2B  6F                 	db	111	;'o'
  1644  00FB2C  74                 	db	116	;'t'
  1645  00FB2D  20                 	db	32
  1646  00FB2E  64                 	db	100	;'d'
  1647  00FB2F  65                 	db	101	;'e'
  1648  00FB30  63                 	db	99	;'c'
  1649  00FB31  6F                 	db	111	;'o'
  1650  00FB32  64                 	db	100	;'d'
  1651  00FB33  65                 	db	101	;'e'
  1652  00FB34  20                 	db	32
  1653  00FB35  4E                 	db	78	;'N'
  1654  00FB36  45                 	db	69	;'E'
  1655  00FB37  43                 	db	67	;'C'
  1656  00FB38  20                 	db	32
  1657  00FB39  63                 	db	99	;'c'
  1658  00FB3A  6F                 	db	111	;'o'
  1659  00FB3B  64                 	db	100	;'d'
  1660  00FB3C  65                 	db	101	;'e'
  1661  00FB3D  00                 	db	0
  1662  00FB3E                     STR_95:
  1663  00FB3E  52                 	db	82	;'R'
  1664  00FB3F  43                 	db	67	;'C'
  1665  00FB40  2D                 	db	45
  1666  00FB41  30                 	db	48	;'0'
  1667  00FB42  31                 	db	49	;'1'
  1668  00FB43  35                 	db	53	;'5'
  1669  00FB44  2A                 	db	42
  1670  00FB45  33                 	db	51	;'3'
  1671  00FB46  20                 	db	32
  1672  00FB47  43                 	db	67	;'C'
  1673  00FB48  68                 	db	104	;'h'
  1674  00FB49  61                 	db	97	;'a'
  1675  00FB4A  6E                 	db	110	;'n'
  1676  00FB4B  6E                 	db	110	;'n'
  1677  00FB4C  65                 	db	101	;'e'
  1678  00FB4D  6C                 	db	108	;'l'
  1679  00FB4E  20                 	db	32
  1680  00FB4F  48                 	db	72	;'H'
  1681  00FB50  20                 	db	32
  1682  00FB51  64                 	db	100	;'d'
  1683  00FB52  65                 	db	101	;'e'
  1684  00FB53  76                 	db	118	;'v'
  1685  00FB54  69                 	db	105	;'i'
  1686  00FB55  63                 	db	99	;'c'
  1687  00FB56  65                 	db	101	;'e'
  1688  00FB57  20                 	db	32
  1689  00FB58  31                 	db	49	;'1'
  1690  00FB59  20                 	db	32
  1691  00FB5A  4F                 	db	79	;'O'
  1692  00FB5B  46                 	db	70	;'F'
  1693  00FB5C  46                 	db	70	;'F'
  1694  00FB5D  00                 	db	0
  1695  00FB5E                     STR_97:
  1696  00FB5E  52                 	db	82	;'R'
  1697  00FB5F  43                 	db	67	;'C'
  1698  00FB60  2D                 	db	45
  1699  00FB61  30                 	db	48	;'0'
  1700  00FB62  31                 	db	49	;'1'
  1701  00FB63  35                 	db	53	;'5'
  1702  00FB64  2A                 	db	42
  1703  00FB65  33                 	db	51	;'3'
  1704  00FB66  20                 	db	32
  1705  00FB67  43                 	db	67	;'C'
  1706  00FB68  68                 	db	104	;'h'
  1707  00FB69  61                 	db	97	;'a'
  1708  00FB6A  6E                 	db	110	;'n'
  1709  00FB6B  6E                 	db	110	;'n'
  1710  00FB6C  65                 	db	101	;'e'
  1711  00FB6D  6C                 	db	108	;'l'
  1712  00FB6E  20                 	db	32
  1713  00FB6F  48                 	db	72	;'H'
  1714  00FB70  20                 	db	32
  1715  00FB71  64                 	db	100	;'d'
  1716  00FB72  65                 	db	101	;'e'
  1717  00FB73  76                 	db	118	;'v'
  1718  00FB74  69                 	db	105	;'i'
  1719  00FB75  63                 	db	99	;'c'
  1720  00FB76  65                 	db	101	;'e'
  1721  00FB77  20                 	db	32
  1722  00FB78  32                 	db	50	;'2'
  1723  00FB79  20                 	db	32
  1724  00FB7A  4F                 	db	79	;'O'
  1725  00FB7B  46                 	db	70	;'F'
  1726  00FB7C  46                 	db	70	;'F'
  1727  00FB7D  00                 	db	0
  1728  00FB7E                     STR_99:
  1729  00FB7E  52                 	db	82	;'R'
  1730  00FB7F  43                 	db	67	;'C'
  1731  00FB80  2D                 	db	45
  1732  00FB81  30                 	db	48	;'0'
  1733  00FB82  31                 	db	49	;'1'
  1734  00FB83  35                 	db	53	;'5'
  1735  00FB84  2A                 	db	42
  1736  00FB85  33                 	db	51	;'3'
  1737  00FB86  20                 	db	32
  1738  00FB87  43                 	db	67	;'C'
  1739  00FB88  68                 	db	104	;'h'
  1740  00FB89  61                 	db	97	;'a'
  1741  00FB8A  6E                 	db	110	;'n'
  1742  00FB8B  6E                 	db	110	;'n'
  1743  00FB8C  65                 	db	101	;'e'
  1744  00FB8D  6C                 	db	108	;'l'
  1745  00FB8E  20                 	db	32
  1746  00FB8F  48                 	db	72	;'H'
  1747  00FB90  20                 	db	32
  1748  00FB91  64                 	db	100	;'d'
  1749  00FB92  65                 	db	101	;'e'
  1750  00FB93  76                 	db	118	;'v'
  1751  00FB94  69                 	db	105	;'i'
  1752  00FB95  63                 	db	99	;'c'
  1753  00FB96  65                 	db	101	;'e'
  1754  00FB97  20                 	db	32
  1755  00FB98  33                 	db	51	;'3'
  1756  00FB99  20                 	db	32
  1757  00FB9A  4F                 	db	79	;'O'
  1758  00FB9B  46                 	db	70	;'F'
  1759  00FB9C  46                 	db	70	;'F'
  1760  00FB9D  00                 	db	0
  1761  00FB9E                     STR_30:
  1762  00FB9E  45                 	db	69	;'E'
  1763  00FB9F  72                 	db	114	;'r'
  1764  00FBA0  72                 	db	114	;'r'
  1765  00FBA1  6F                 	db	111	;'o'
  1766  00FBA2  72                 	db	114	;'r'
  1767  00FBA3  3A                 	db	58	;':'
  1768  00FBA4  20                 	db	32
  1769  00FBA5  63                 	db	99	;'c'
  1770  00FBA6  6F                 	db	111	;'o'
  1771  00FBA7  75                 	db	117	;'u'
  1772  00FBA8  6C                 	db	108	;'l'
  1773  00FBA9  64                 	db	100	;'d'
  1774  00FBAA  20                 	db	32
  1775  00FBAB  6E                 	db	110	;'n'
  1776  00FBAC  6F                 	db	111	;'o'
  1777  00FBAD  74                 	db	116	;'t'
  1778  00FBAE  20                 	db	32
  1779  00FBAF  64                 	db	100	;'d'
  1780  00FBB0  65                 	db	101	;'e'
  1781  00FBB1  63                 	db	99	;'c'
  1782  00FBB2  6F                 	db	111	;'o'
  1783  00FBB3  64                 	db	100	;'d'
  1784  00FBB4  65                 	db	101	;'e'
  1785  00FBB5  20                 	db	32
  1786  00FBB6  41                 	db	65	;'A'
  1787  00FBB7  64                 	db	100	;'d'
  1788  00FBB8  64                 	db	100	;'d'
  1789  00FBB9  72                 	db	114	;'r'
  1790  00FBBA  65                 	db	101	;'e'
  1791  00FBBB  73                 	db	115	;'s'
  1792  00FBBC  73                 	db	115	;'s'
  1793  00FBBD  00                 	db	0
  1794  00FBBE                     STR_94:
  1795  00FBBE  52                 	db	82	;'R'
  1796  00FBBF  43                 	db	67	;'C'
  1797  00FBC0  2D                 	db	45
  1798  00FBC1  30                 	db	48	;'0'
  1799  00FBC2  31                 	db	49	;'1'
  1800  00FBC3  35                 	db	53	;'5'
  1801  00FBC4  2A                 	db	42
  1802  00FBC5  33                 	db	51	;'3'
  1803  00FBC6  20                 	db	32
  1804  00FBC7  43                 	db	67	;'C'
  1805  00FBC8  68                 	db	104	;'h'
  1806  00FBC9  61                 	db	97	;'a'
  1807  00FBCA  6E                 	db	110	;'n'
  1808  00FBCB  6E                 	db	110	;'n'
  1809  00FBCC  65                 	db	101	;'e'
  1810  00FBCD  6C                 	db	108	;'l'
  1811  00FBCE  20                 	db	32
  1812  00FBCF  48                 	db	72	;'H'
  1813  00FBD0  20                 	db	32
  1814  00FBD1  64                 	db	100	;'d'
  1815  00FBD2  65                 	db	101	;'e'
  1816  00FBD3  76                 	db	118	;'v'
  1817  00FBD4  69                 	db	105	;'i'
  1818  00FBD5  63                 	db	99	;'c'
  1819  00FBD6  65                 	db	101	;'e'
  1820  00FBD7  20                 	db	32
  1821  00FBD8  31                 	db	49	;'1'
  1822  00FBD9  20                 	db	32
  1823  00FBDA  4F                 	db	79	;'O'
  1824  00FBDB  4E                 	db	78	;'N'
  1825  00FBDC  00                 	db	0
  1826  00FBDD                     STR_96:
  1827  00FBDD  52                 	db	82	;'R'
  1828  00FBDE  43                 	db	67	;'C'
  1829  00FBDF  2D                 	db	45
  1830  00FBE0  30                 	db	48	;'0'
  1831  00FBE1  31                 	db	49	;'1'
  1832  00FBE2  35                 	db	53	;'5'
  1833  00FBE3  2A                 	db	42
  1834  00FBE4  33                 	db	51	;'3'
  1835  00FBE5  20                 	db	32
  1836  00FBE6  43                 	db	67	;'C'
  1837  00FBE7  68                 	db	104	;'h'
  1838  00FBE8  61                 	db	97	;'a'
  1839  00FBE9  6E                 	db	110	;'n'
  1840  00FBEA  6E                 	db	110	;'n'
  1841  00FBEB  65                 	db	101	;'e'
  1842  00FBEC  6C                 	db	108	;'l'
  1843  00FBED  20                 	db	32
  1844  00FBEE  48                 	db	72	;'H'
  1845  00FBEF  20                 	db	32
  1846  00FBF0  64                 	db	100	;'d'
  1847  00FBF1  65                 	db	101	;'e'
  1848  00FBF2  76                 	db	118	;'v'
  1849  00FBF3  69                 	db	105	;'i'
  1850  00FBF4  63                 	db	99	;'c'
  1851  00FBF5  65                 	db	101	;'e'
  1852  00FBF6  20                 	db	32
  1853  00FBF7  32                 	db	50	;'2'
  1854  00FBF8  20                 	db	32
  1855  00FBF9  4F                 	db	79	;'O'
  1856  00FBFA  4E                 	db	78	;'N'
  1857  00FBFB  00                 	db	0
  1858  00FBFC                     STR_98:
  1859  00FBFC  52                 	db	82	;'R'
  1860  00FBFD  43                 	db	67	;'C'
  1861  00FBFE  2D                 	db	45
  1862  00FBFF  30                 	db	48	;'0'
  1863  00FC00  31                 	db	49	;'1'
  1864  00FC01  35                 	db	53	;'5'
  1865  00FC02  2A                 	db	42
  1866  00FC03  33                 	db	51	;'3'
  1867  00FC04  20                 	db	32
  1868  00FC05  43                 	db	67	;'C'
  1869  00FC06  68                 	db	104	;'h'
  1870  00FC07  61                 	db	97	;'a'
  1871  00FC08  6E                 	db	110	;'n'
  1872  00FC09  6E                 	db	110	;'n'
  1873  00FC0A  65                 	db	101	;'e'
  1874  00FC0B  6C                 	db	108	;'l'
  1875  00FC0C  20                 	db	32
  1876  00FC0D  48                 	db	72	;'H'
  1877  00FC0E  20                 	db	32
  1878  00FC0F  64                 	db	100	;'d'
  1879  00FC10  65                 	db	101	;'e'
  1880  00FC11  76                 	db	118	;'v'
  1881  00FC12  69                 	db	105	;'i'
  1882  00FC13  63                 	db	99	;'c'
  1883  00FC14  65                 	db	101	;'e'
  1884  00FC15  20                 	db	32
  1885  00FC16  33                 	db	51	;'3'
  1886  00FC17  20                 	db	32
  1887  00FC18  4F                 	db	79	;'O'
  1888  00FC19  4E                 	db	78	;'N'
  1889  00FC1A  00                 	db	0
  1890  00FC1B                     STR_63:
  1891  00FC1B  45                 	db	69	;'E'
  1892  00FC1C  72                 	db	114	;'r'
  1893  00FC1D  72                 	db	114	;'r'
  1894  00FC1E  6F                 	db	111	;'o'
  1895  00FC1F  72                 	db	114	;'r'
  1896  00FC20  3A                 	db	58	;':'
  1897  00FC21  20                 	db	32
  1898  00FC22  4E                 	db	78	;'N'
  1899  00FC23  6F                 	db	111	;'o'
  1900  00FC24  20                 	db	32
  1901  00FC25  52                 	db	82	;'R'
  1902  00FC26  46                 	db	70	;'F'
  1903  00FC27  20                 	db	32
  1904  00FC28  63                 	db	99	;'c'
  1905  00FC29  68                 	db	104	;'h'
  1906  00FC2A  61                 	db	97	;'a'
  1907  00FC2B  6E                 	db	110	;'n'
  1908  00FC2C  6E                 	db	110	;'n'
  1909  00FC2D  65                 	db	101	;'e'
  1910  00FC2E  6C                 	db	108	;'l'
  1911  00FC2F  20                 	db	32
  1912  00FC30  73                 	db	115	;'s'
  1913  00FC31  70                 	db	112	;'p'
  1914  00FC32  65                 	db	101	;'e'
  1915  00FC33  63                 	db	99	;'c'
  1916  00FC34  69                 	db	105	;'i'
  1917  00FC35  66                 	db	102	;'f'
  1918  00FC36  69                 	db	105	;'i'
  1919  00FC37  65                 	db	101	;'e'
  1920  00FC38  64                 	db	100	;'d'
  1921  00FC39  00                 	db	0
  1922  00FC3A                     STR_64:
  1923  00FC3A  45                 	db	69	;'E'
  1924  00FC3B  72                 	db	114	;'r'
  1925  00FC3C  72                 	db	114	;'r'
  1926  00FC3D  6F                 	db	111	;'o'
  1927  00FC3E  72                 	db	114	;'r'
  1928  00FC3F  3A                 	db	58	;':'
  1929  00FC40  20                 	db	32
  1930  00FC41  52                 	db	82	;'R'
  1931  00FC42  46                 	db	70	;'F'
  1932  00FC43  20                 	db	32
  1933  00FC44  63                 	db	99	;'c'
  1934  00FC45  68                 	db	104	;'h'
  1935  00FC46  61                 	db	97	;'a'
  1936  00FC47  6E                 	db	110	;'n'
  1937  00FC48  6E                 	db	110	;'n'
  1938  00FC49  65                 	db	101	;'e'
  1939  00FC4A  6C                 	db	108	;'l'
  1940  00FC4B  20                 	db	32
  1941  00FC4C  6F                 	db	111	;'o'
  1942  00FC4D  75                 	db	117	;'u'
  1943  00FC4E  74                 	db	116	;'t'
  1944  00FC4F  20                 	db	32
  1945  00FC50  6F                 	db	111	;'o'
  1946  00FC51  66                 	db	102	;'f'
  1947  00FC52  20                 	db	32
  1948  00FC53  72                 	db	114	;'r'
  1949  00FC54  61                 	db	97	;'a'
  1950  00FC55  6E                 	db	110	;'n'
  1951  00FC56  67                 	db	103	;'g'
  1952  00FC57  65                 	db	101	;'e'
  1953  00FC58  00                 	db	0
  1954  00FC59                     STR_35:
  1955  00FC59  4E                 	db	78	;'N'
  1956  00FC5A  45                 	db	69	;'E'
  1957  00FC5B  43                 	db	67	;'C'
  1958  00FC5C  20                 	db	32
  1959  00FC5D  63                 	db	99	;'c'
  1960  00FC5E  6F                 	db	111	;'o'
  1961  00FC5F  64                 	db	100	;'d'
  1962  00FC60  65                 	db	101	;'e'
  1963  00FC61  20                 	db	32
  1964  00FC62  6E                 	db	110	;'n'
  1965  00FC63  6F                 	db	111	;'o'
  1966  00FC64  74                 	db	116	;'t'
  1967  00FC65  20                 	db	32
  1968  00FC66  65                 	db	101	;'e'
  1969  00FC67  6E                 	db	110	;'n'
  1970  00FC68  74                 	db	116	;'t'
  1971  00FC69  65                 	db	101	;'e'
  1972  00FC6A  72                 	db	114	;'r'
  1973  00FC6B  65                 	db	101	;'e'
  1974  00FC6C  64                 	db	100	;'d'
  1975  00FC6D  20                 	db	32
  1976  00FC6E  63                 	db	99	;'c'
  1977  00FC6F  6F                 	db	111	;'o'
  1978  00FC70  72                 	db	114	;'r'
  1979  00FC71  72                 	db	114	;'r'
  1980  00FC72  65                 	db	101	;'e'
  1981  00FC73  63                 	db	99	;'c'
  1982  00FC74  74                 	db	116	;'t'
  1983  00FC75  6C                 	db	108	;'l'
  1984  00FC76  79                 	db	121	;'y'
  1985  00FC77  00                 	db	0
  1986  00FC78                     STR_23:
  1987  00FC78  43                 	db	67	;'C'
  1988  00FC79  6F                 	db	111	;'o'
  1989  00FC7A  6E                 	db	110	;'n'
  1990  00FC7B  66                 	db	102	;'f'
  1991  00FC7C  69                 	db	105	;'i'
  1992  00FC7D  67                 	db	103	;'g'
  1993  00FC7E  75                 	db	117	;'u'
  1994  00FC7F  72                 	db	114	;'r'
  1995  00FC80  61                 	db	97	;'a'
  1996  00FC81  74                 	db	116	;'t'
  1997  00FC82  69                 	db	105	;'i'
  1998  00FC83  6F                 	db	111	;'o'
  1999  00FC84  6E                 	db	110	;'n'
  2000  00FC85  20                 	db	32
  2001  00FC86  31                 	db	49	;'1'
  2002  00FC87  20                 	db	32
  2003  00FC88  52                 	db	82	;'R'
  2004  00FC89  46                 	db	70	;'F'
  2005  00FC8A  20                 	db	32
  2006  00FC8B  63                 	db	99	;'c'
  2007  00FC8C  6F                 	db	111	;'o'
  2008  00FC8D  64                 	db	100	;'d'
  2009  00FC8E  65                 	db	101	;'e'
  2010  00FC8F  20                 	db	32
  2011  00FC90  73                 	db	115	;'s'
  2012  00FC91  65                 	db	101	;'e'
  2013  00FC92  6E                 	db	110	;'n'
  2014  00FC93  74                 	db	116	;'t'
  2015  00FC94  00                 	db	0
  2016  00FC95                     STR_25:
  2017  00FC95  43                 	db	67	;'C'
  2018  00FC96  6F                 	db	111	;'o'
  2019  00FC97  6E                 	db	110	;'n'
  2020  00FC98  66                 	db	102	;'f'
  2021  00FC99  69                 	db	105	;'i'
  2022  00FC9A  67                 	db	103	;'g'
  2023  00FC9B  75                 	db	117	;'u'
  2024  00FC9C  72                 	db	114	;'r'
  2025  00FC9D  61                 	db	97	;'a'
  2026  00FC9E  74                 	db	116	;'t'
  2027  00FC9F  69                 	db	105	;'i'
  2028  00FCA0  6F                 	db	111	;'o'
  2029  00FCA1  6E                 	db	110	;'n'
  2030  00FCA2  20                 	db	32
  2031  00FCA3  32                 	db	50	;'2'
  2032  00FCA4  20                 	db	32
  2033  00FCA5  52                 	db	82	;'R'
  2034  00FCA6  46                 	db	70	;'F'
  2035  00FCA7  20                 	db	32
  2036  00FCA8  63                 	db	99	;'c'
  2037  00FCA9  6F                 	db	111	;'o'
  2038  00FCAA  64                 	db	100	;'d'
  2039  00FCAB  65                 	db	101	;'e'
  2040  00FCAC  20                 	db	32
  2041  00FCAD  73                 	db	115	;'s'
  2042  00FCAE  65                 	db	101	;'e'
  2043  00FCAF  6E                 	db	110	;'n'
  2044  00FCB0  74                 	db	116	;'t'
  2045  00FCB1  00                 	db	0
  2046  00FCB2                     STR_19:
  2047  00FCB2  42                 	db	66	;'B'
  2048  00FCB3  54                 	db	84	;'T'
  2049  00FCB4  4E                 	db	78	;'N'
  2050  00FCB5  61                 	db	97	;'a'
  2051  00FCB6  6D                 	db	109	;'m'
  2052  00FCB7  65                 	db	101	;'e'
  2053  00FCB8  3D                 	db	61	;'='
  2054  00FCB9  48                 	db	72	;'H'
  2055  00FCBA  6F                 	db	111	;'o'
  2056  00FCBB  6D                 	db	109	;'m'
  2057  00FCBC  65                 	db	101	;'e'
  2058  00FCBD  20                 	db	32
  2059  00FCBE  41                 	db	65	;'A'
  2060  00FCBF  75                 	db	117	;'u'
  2061  00FCC0  74                 	db	116	;'t'
  2062  00FCC1  6F                 	db	111	;'o'
  2063  00FCC2  6D                 	db	109	;'m'
  2064  00FCC3  61                 	db	97	;'a'
  2065  00FCC4  74                 	db	116	;'t'
  2066  00FCC5  69                 	db	105	;'i'
  2067  00FCC6  6F                 	db	111	;'o'
  2068  00FCC7  6E                 	db	110	;'n'
  2069  00FCC8  20                 	db	32
  2070  00FCC9  25                 	db	37
  2071  00FCCA  6C                 	db	108	;'l'
  2072  00FCCB  64                 	db	100	;'d'
  2073  00FCCC  0D                 	db	13
  2074  00FCCD  00                 	db	0
  2075  00FCCE                     STR_100:
  2076  00FCCE  50                 	db	80	;'P'
  2077  00FCCF  72                 	db	114	;'r'
  2078  00FCD0  65                 	db	101	;'e'
  2079  00FCD1  73                 	db	115	;'s'
  2080  00FCD2  73                 	db	115	;'s'
  2081  00FCD3  20                 	db	32
  2082  00FCD4  52                 	db	82	;'R'
  2083  00FCD5  65                 	db	101	;'e'
  2084  00FCD6  6D                 	db	109	;'m'
  2085  00FCD7  6F                 	db	111	;'o'
  2086  00FCD8  74                 	db	116	;'t'
  2087  00FCD9  65                 	db	101	;'e'
  2088  00FCDA  20                 	db	32
  2089  00FCDB  43                 	db	67	;'C'
  2090  00FCDC  6F                 	db	111	;'o'
  2091  00FCDD  6E                 	db	110	;'n'
  2092  00FCDE  74                 	db	116	;'t'
  2093  00FCDF  72                 	db	114	;'r'
  2094  00FCE0  6F                 	db	111	;'o'
  2095  00FCE1  6C                 	db	108	;'l'
  2096  00FCE2  20                 	db	32
  2097  00FCE3  62                 	db	98	;'b'
  2098  00FCE4  75                 	db	117	;'u'
  2099  00FCE5  74                 	db	116	;'t'
  2100  00FCE6  74                 	db	116	;'t'
  2101  00FCE7  6F                 	db	111	;'o'
  2102  00FCE8  6E                 	db	110	;'n'
  2103  00FCE9  00                 	db	0
  2104  00FCEA                     STR_71:
  2105  00FCEA  45                 	db	69	;'E'
  2106  00FCEB  6E                 	db	110	;'n'
  2107  00FCEC  74                 	db	116	;'t'
  2108  00FCED  65                 	db	101	;'e'
  2109  00FCEE  72                 	db	114	;'r'
  2110  00FCEF  20                 	db	32
  2111  00FCF0  3F                 	db	63	;'?'
  2112  00FCF1  3F                 	db	63	;'?'
  2113  00FCF2  3F                 	db	63	;'?'
  2114  00FCF3  20                 	db	32
  2115  00FCF4  66                 	db	102	;'f'
  2116  00FCF5  6F                 	db	111	;'o'
  2117  00FCF6  72                 	db	114	;'r'
  2118  00FCF7  20                 	db	32
  2119  00FCF8  43                 	db	67	;'C'
  2120  00FCF9  6F                 	db	111	;'o'
  2121  00FCFA  6D                 	db	109	;'m'
  2122  00FCFB  6D                 	db	109	;'m'
  2123  00FCFC  61                 	db	97	;'a'
  2124  00FCFD  6E                 	db	110	;'n'
  2125  00FCFE  64                 	db	100	;'d'
  2126  00FCFF  20                 	db	32
  2127  00FD00  4D                 	db	77	;'M'
  2128  00FD01  65                 	db	101	;'e'
  2129  00FD02  6E                 	db	110	;'n'
  2130  00FD03  75                 	db	117	;'u'
  2131  00FD04  00                 	db	0
  2132  00FD05                     STR_80:
  2133  00FD05  54                 	db	84	;'T'
  2134  00FD06  72                 	db	114	;'r'
  2135  00FD07  61                 	db	97	;'a'
  2136  00FD08  6E                 	db	110	;'n'
  2137  00FD09  73                 	db	115	;'s'
  2138  00FD0A  6D                 	db	109	;'m'
  2139  00FD0B  69                 	db	105	;'i'
  2140  00FD0C  74                 	db	116	;'t'
  2141  00FD0D  73                 	db	115	;'s'
  2142  00FD0E  20                 	db	32
  2143  00FD0F  73                 	db	115	;'s'
  2144  00FD10  61                 	db	97	;'a'
  2145  00FD11  76                 	db	118	;'v'
  2146  00FD12  65                 	db	101	;'e'
  2147  00FD13  64                 	db	100	;'d'
  2148  00FD14  20                 	db	32
  2149  00FD15  4E                 	db	78	;'N'
  2150  00FD16  45                 	db	69	;'E'
  2151  00FD17  43                 	db	67	;'C'
  2152  00FD18  20                 	db	32
  2153  00FD19  63                 	db	99	;'c'
  2154  00FD1A  6F                 	db	111	;'o'
  2155  00FD1B  64                 	db	100	;'d'
  2156  00FD1C  65                 	db	101	;'e'
  2157  00FD1D  00                 	db	0
  2158  00FD1E                     STR_6:
  2159  00FD1E  53                 	db	83	;'S'
  2160  00FD1F  4E                 	db	78	;'N'
  2161  00FD20  2C                 	db	44
  2162  00FD21  48                 	db	72	;'H'
  2163  00FD22  6F                 	db	111	;'o'
  2164  00FD23  6D                 	db	109	;'m'
  2165  00FD24  65                 	db	101	;'e'
  2166  00FD25  20                 	db	32
  2167  00FD26  41                 	db	65	;'A'
  2168  00FD27  75                 	db	117	;'u'
  2169  00FD28  74                 	db	116	;'t'
  2170  00FD29  6F                 	db	111	;'o'
  2171  00FD2A  6D                 	db	109	;'m'
  2172  00FD2B  61                 	db	97	;'a'
  2173  00FD2C  74                 	db	116	;'t'
  2174  00FD2D  69                 	db	105	;'i'
  2175  00FD2E  6F                 	db	111	;'o'
  2176  00FD2F  6E                 	db	110	;'n'
  2177  00FD30  20                 	db	32
  2178  00FD31  25                 	db	37
  2179  00FD32  6C                 	db	108	;'l'
  2180  00FD33  64                 	db	100	;'d'
  2181  00FD34  0D                 	db	13
  2182  00FD35  00                 	db	0
  2183  00FD36                     STR_83:
  2184  00FD36  41                 	db	65	;'A'
  2185  00FD37  6C                 	db	108	;'l'
  2186  00FD38  6C                 	db	108	;'l'
  2187  00FD39  6F                 	db	111	;'o'
  2188  00FD3A  77                 	db	119	;'w'
  2189  00FD3B  73                 	db	115	;'s'
  2190  00FD3C  20                 	db	32
  2191  00FD3D  73                 	db	115	;'s'
  2192  00FD3E  61                 	db	97	;'a'
  2193  00FD3F  76                 	db	118	;'v'
  2194  00FD40  69                 	db	105	;'i'
  2195  00FD41  6E                 	db	110	;'n'
  2196  00FD42  67                 	db	103	;'g'
  2197  00FD43  20                 	db	32
  2198  00FD44  4E                 	db	78	;'N'
  2199  00FD45  45                 	db	69	;'E'
  2200  00FD46  43                 	db	67	;'C'
  2201  00FD47  20                 	db	32
  2202  00FD48  63                 	db	99	;'c'
  2203  00FD49  6F                 	db	111	;'o'
  2204  00FD4A  64                 	db	100	;'d'
  2205  00FD4B  65                 	db	101	;'e'
  2206  00FD4C  73                 	db	115	;'s'
  2207  00FD4D  00                 	db	0
  2208  00FD4E                     STR_29:
  2209  00FD4E  53                 	db	83	;'S'
  2210  00FD4F  65                 	db	101	;'e'
  2211  00FD50  6E                 	db	110	;'n'
  2212  00FD51  74                 	db	116	;'t'
  2213  00FD52  20                 	db	32
  2214  00FD53  4E                 	db	78	;'N'
  2215  00FD54  45                 	db	69	;'E'
  2216  00FD55  43                 	db	67	;'C'
  2217  00FD56  20                 	db	32
  2218  00FD57  63                 	db	99	;'c'
  2219  00FD58  6F                 	db	111	;'o'
  2220  00FD59  64                 	db	100	;'d'
  2221  00FD5A  65                 	db	101	;'e'
  2222  00FD5B  20                 	db	32
  2223  00FD5C  3D                 	db	61	;'='
  2224  00FD5D  20                 	db	32
  2225  00FD5E  30                 	db	48	;'0'
  2226  00FD5F  78                 	db	120	;'x'
  2227  00FD60  25                 	db	37
  2228  00FD61  6C                 	db	108	;'l'
  2229  00FD62  58                 	db	88	;'X'
  2230  00FD63  20                 	db	32
  2231  00FD64  00                 	db	0
  2232  00FD65                     STR_91:
  2233  00FD65  52                 	db	82	;'R'
  2234  00FD66  46                 	db	70	;'F'
  2235  00FD67  4B                 	db	75	;'K'
  2236  00FD68  33                 	db	51	;'3'
  2237  00FD69  30                 	db	48	;'0'
  2238  00FD6A  36                 	db	54	;'6'
  2239  00FD6B  4C                 	db	76	;'L'
  2240  00FD6C  43                 	db	67	;'C'
  2241  00FD6D  20                 	db	32
  2242  00FD6E  43                 	db	67	;'C'
  2243  00FD6F  68                 	db	104	;'h'
  2244  00FD70  61                 	db	97	;'a'
  2245  00FD71  6E                 	db	110	;'n'
  2246  00FD72  6E                 	db	110	;'n'
  2247  00FD73  65                 	db	101	;'e'
  2248  00FD74  6C                 	db	108	;'l'
  2249  00FD75  20                 	db	32
  2250  00FD76  42                 	db	66	;'B'
  2251  00FD77  20                 	db	32
  2252  00FD78  4F                 	db	79	;'O'
  2253  00FD79  46                 	db	70	;'F'
  2254  00FD7A  46                 	db	70	;'F'
  2255  00FD7B  00                 	db	0
  2256  00FD7C                     STR_90:
  2257  00FD7C  52                 	db	82	;'R'
  2258  00FD7D  46                 	db	70	;'F'
  2259  00FD7E  4B                 	db	75	;'K'
  2260  00FD7F  33                 	db	51	;'3'
  2261  00FD80  30                 	db	48	;'0'
  2262  00FD81  36                 	db	54	;'6'
  2263  00FD82  4C                 	db	76	;'L'
  2264  00FD83  43                 	db	67	;'C'
  2265  00FD84  20                 	db	32
  2266  00FD85  43                 	db	67	;'C'
  2267  00FD86  68                 	db	104	;'h'
  2268  00FD87  61                 	db	97	;'a'
  2269  00FD88  6E                 	db	110	;'n'
  2270  00FD89  6E                 	db	110	;'n'
  2271  00FD8A  65                 	db	101	;'e'
  2272  00FD8B  6C                 	db	108	;'l'
  2273  00FD8C  20                 	db	32
  2274  00FD8D  42                 	db	66	;'B'
  2275  00FD8E  20                 	db	32
  2276  00FD8F  4F                 	db	79	;'O'
  2277  00FD90  4E                 	db	78	;'N'
  2278  00FD91  00                 	db	0
  2279  00FD92                     STR_39:
  2280  00FD92  4E                 	db	78	;'N'
  2281  00FD93  45                 	db	69	;'E'
  2282  00FD94  43                 	db	67	;'C'
  2283  00FD95  20                 	db	32
  2284  00FD96  3D                 	db	61	;'='
  2285  00FD97  20                 	db	32
  2286  00FD98  61                 	db	97	;'a'
  2287  00FD99  64                 	db	100	;'d'
  2288  00FD9A  64                 	db	100	;'d'
  2289  00FD9B  72                 	db	114	;'r'
  2290  00FD9C  65                 	db	101	;'e'
  2291  00FD9D  73                 	db	115	;'s'
  2292  00FD9E  73                 	db	115	;'s'
  2293  00FD9F  2C                 	db	44
  2294  00FDA0  63                 	db	99	;'c'
  2295  00FDA1  6F                 	db	111	;'o'
  2296  00FDA2  6D                 	db	109	;'m'
  2297  00FDA3  6D                 	db	109	;'m'
  2298  00FDA4  61                 	db	97	;'a'
  2299  00FDA5  6E                 	db	110	;'n'
  2300  00FDA6  64                 	db	100	;'d'
  2301  00FDA7  00                 	db	0
  2302  00FDA8                     STR_10:
  2303  00FDA8  53                 	db	83	;'S'
  2304  00FDA9  53                 	db	83	;'S'
  2305  00FDAA  2C                 	db	44
  2306  00FDAB  20                 	db	32
  2307  00FDAC  48                 	db	72	;'H'
  2308  00FDAD  6F                 	db	111	;'o'
  2309  00FDAE  6D                 	db	109	;'m'
  2310  00FDAF  65                 	db	101	;'e'
  2311  00FDB0  20                 	db	32
  2312  00FDB1  41                 	db	65	;'A'
  2313  00FDB2  75                 	db	117	;'u'
  2314  00FDB3  74                 	db	116	;'t'
  2315  00FDB4  6F                 	db	111	;'o'
  2316  00FDB5  6D                 	db	109	;'m'
  2317  00FDB6  61                 	db	97	;'a'
  2318  00FDB7  74                 	db	116	;'t'
  2319  00FDB8  69                 	db	105	;'i'
  2320  00FDB9  6F                 	db	111	;'o'
  2321  00FDBA  6E                 	db	110	;'n'
  2322  00FDBB  0D                 	db	13
  2323  00FDBC  00                 	db	0
  2324  00FDBD                     STR_46:
  2325  00FDBD  53                 	db	83	;'S'
  2326  00FDBE  65                 	db	101	;'e'
  2327  00FDBF  6E                 	db	110	;'n'
  2328  00FDC0  74                 	db	116	;'t'
  2329  00FDC1  20                 	db	32
  2330  00FDC2  4E                 	db	78	;'N'
  2331  00FDC3  45                 	db	69	;'E'
  2332  00FDC4  43                 	db	67	;'C'
  2333  00FDC5  20                 	db	32
  2334  00FDC6  63                 	db	99	;'c'
  2335  00FDC7  6F                 	db	111	;'o'
  2336  00FDC8  64                 	db	100	;'d'
  2337  00FDC9  65                 	db	101	;'e'
  2338  00FDCA  20                 	db	32
  2339  00FDCB  30                 	db	48	;'0'
  2340  00FDCC  78                 	db	120	;'x'
  2341  00FDCD  25                 	db	37
  2342  00FDCE  6C                 	db	108	;'l'
  2343  00FDCF  58                 	db	88	;'X'
  2344  00FDD0  20                 	db	32
  2345  00FDD1  00                 	db	0
  2346  00FDD2                     STR_37:
  2347  00FDD2  4E                 	db	78	;'N'
  2348  00FDD3  45                 	db	69	;'E'
  2349  00FDD4  43                 	db	67	;'C'
  2350  00FDD5  20                 	db	32
  2351  00FDD6  3D                 	db	61	;'='
  2352  00FDD7  20                 	db	32
  2353  00FDD8  28                 	db	40
  2354  00FDD9  33                 	db	51	;'3'
  2355  00FDDA  32                 	db	50	;'2'
  2356  00FDDB  20                 	db	32
  2357  00FDDC  62                 	db	98	;'b'
  2358  00FDDD  69                 	db	105	;'i'
  2359  00FDDE  74                 	db	116	;'t'
  2360  00FDDF  20                 	db	32
  2361  00FDE0  63                 	db	99	;'c'
  2362  00FDE1  6F                 	db	111	;'o'
  2363  00FDE2  64                 	db	100	;'d'
  2364  00FDE3  65                 	db	101	;'e'
  2365  00FDE4  29                 	db	41
  2366  00FDE5  00                 	db	0
  2367  00FDE6                     STR_93:
  2368  00FDE6  54                 	db	84	;'T'
  2369  00FDE7  52                 	db	82	;'R'
  2370  00FDE8  30                 	db	48	;'0'
  2371  00FDE9  30                 	db	48	;'0'
  2372  00FDEA  39                 	db	57	;'9'
  2373  00FDEB  20                 	db	32
  2374  00FDEC  43                 	db	67	;'C'
  2375  00FDED  68                 	db	104	;'h'
  2376  00FDEE  61                 	db	97	;'a'
  2377  00FDEF  6E                 	db	110	;'n'
  2378  00FDF0  6E                 	db	110	;'n'
  2379  00FDF1  65                 	db	101	;'e'
  2380  00FDF2  6C                 	db	108	;'l'
  2381  00FDF3  20                 	db	32
  2382  00FDF4  44                 	db	68	;'D'
  2383  00FDF5  20                 	db	32
  2384  00FDF6  4F                 	db	79	;'O'
  2385  00FDF7  46                 	db	70	;'F'
  2386  00FDF8  46                 	db	70	;'F'
  2387  00FDF9  00                 	db	0
  2388  00FDFA                     STR_31:
  2389  00FDFA  73                 	db	115	;'s'
  2390  00FDFB  65                 	db	101	;'e'
  2391  00FDFC  6E                 	db	110	;'n'
  2392  00FDFD  74                 	db	116	;'t'
  2393  00FDFE  20                 	db	32
  2394  00FDFF  4E                 	db	78	;'N'
  2395  00FE00  45                 	db	69	;'E'
  2396  00FE01  43                 	db	67	;'C'
  2397  00FE02  20                 	db	32
  2398  00FE03  63                 	db	99	;'c'
  2399  00FE04  6F                 	db	111	;'o'
  2400  00FE05  64                 	db	100	;'d'
  2401  00FE06  65                 	db	101	;'e'
  2402  00FE07  20                 	db	32
  2403  00FE08  30                 	db	48	;'0'
  2404  00FE09  78                 	db	120	;'x'
  2405  00FE0A  25                 	db	37
  2406  00FE0B  6C                 	db	108	;'l'
  2407  00FE0C  58                 	db	88	;'X'
  2408  00FE0D  00                 	db	0
  2409  00FE0E                     STR_55:
  2410  00FE0E  52                 	db	82	;'R'
  2411  00FE0F  65                 	db	101	;'e'
  2412  00FE10  6D                 	db	109	;'m'
  2413  00FE11  6F                 	db	111	;'o'
  2414  00FE12  74                 	db	116	;'t'
  2415  00FE13  65                 	db	101	;'e'
  2416  00FE14  42                 	db	66	;'B'
  2417  00FE15  75                 	db	117	;'u'
  2418  00FE16  74                 	db	116	;'t'
  2419  00FE17  74                 	db	116	;'t'
  2420  00FE18  6F                 	db	111	;'o'
  2421  00FE19  6E                 	db	110	;'n'
  2422  00FE1A  27                 	db	39
  2423  00FE1B  78                 	db	120	;'x'
  2424  00FE1C  27                 	db	39
  2425  00FE1D  20                 	db	32
  2426  00FE1E  73                 	db	115	;'s'
  2427  00FE1F  65                 	db	101	;'e'
  2428  00FE20  74                 	db	116	;'t'
  2429  00FE21  00                 	db	0
  2430  00FE22                     STR_28:
  2431  00FE22  4E                 	db	78	;'N'
  2432  00FE23  45                 	db	69	;'E'
  2433  00FE24  43                 	db	67	;'C'
  2434  00FE25  20                 	db	32
  2435  00FE26  63                 	db	99	;'c'
  2436  00FE27  6F                 	db	111	;'o'
  2437  00FE28  6D                 	db	109	;'m'
  2438  00FE29  6D                 	db	109	;'m'
  2439  00FE2A  61                 	db	97	;'a'
  2440  00FE2B  6E                 	db	110	;'n'
  2441  00FE2C  64                 	db	100	;'d'
  2442  00FE2D  3A                 	db	58	;':'
  2443  00FE2E  20                 	db	32
  2444  00FE2F  30                 	db	48	;'0'
  2445  00FE30  78                 	db	120	;'x'
  2446  00FE31  25                 	db	37
  2447  00FE32  58                 	db	88	;'X'
  2448  00FE33  20                 	db	32
  2449  00FE34  00                 	db	0
  2450  00FE35                     STR_27:
  2451  00FE35  4E                 	db	78	;'N'
  2452  00FE36  45                 	db	69	;'E'
  2453  00FE37  43                 	db	67	;'C'
  2454  00FE38  20                 	db	32
  2455  00FE39  61                 	db	97	;'a'
  2456  00FE3A  64                 	db	100	;'d'
  2457  00FE3B  64                 	db	100	;'d'
  2458  00FE3C  72                 	db	114	;'r'
  2459  00FE3D  65                 	db	101	;'e'
  2460  00FE3E  73                 	db	115	;'s'
  2461  00FE3F  73                 	db	115	;'s'
  2462  00FE40  3A                 	db	58	;':'
  2463  00FE41  20                 	db	32
  2464  00FE42  30                 	db	48	;'0'
  2465  00FE43  78                 	db	120	;'x'
  2466  00FE44  25                 	db	37
  2467  00FE45  58                 	db	88	;'X'
  2468  00FE46  20                 	db	32
  2469  00FE47  00                 	db	0
  2470  00FE48                     STR_87:
  2471  00FE48  52                 	db	82	;'R'
  2472  00FE49  46                 	db	70	;'F'
  2473  00FE4A  4B                 	db	75	;'K'
  2474  00FE4B  31                 	db	49	;'1'
  2475  00FE4C  30                 	db	48	;'0'
  2476  00FE4D  30                 	db	48	;'0'
  2477  00FE4E  4C                 	db	76	;'L'
  2478  00FE4F  43                 	db	67	;'C'
  2479  00FE50  20                 	db	32
  2480  00FE51  43                 	db	67	;'C'
  2481  00FE52  68                 	db	104	;'h'
  2482  00FE53  61                 	db	97	;'a'
  2483  00FE54  6E                 	db	110	;'n'
  2484  00FE55  6E                 	db	110	;'n'
  2485  00FE56  65                 	db	101	;'e'
  2486  00FE57  6C                 	db	108	;'l'
  2487  00FE58  20                 	db	32
  2488  00FE59  44                 	db	68	;'D'
  2489  00FE5A  00                 	db	0
  2490  00FE5B                     STR_88:
  2491  00FE5B  52                 	db	82	;'R'
  2492  00FE5C  46                 	db	70	;'F'
  2493  00FE5D  4B                 	db	75	;'K'
  2494  00FE5E  31                 	db	49	;'1'
  2495  00FE5F  30                 	db	48	;'0'
  2496  00FE60  30                 	db	48	;'0'
  2497  00FE61  4C                 	db	76	;'L'
  2498  00FE62  43                 	db	67	;'C'
  2499  00FE63  20                 	db	32
  2500  00FE64  43                 	db	67	;'C'
  2501  00FE65  68                 	db	104	;'h'
  2502  00FE66  61                 	db	97	;'a'
  2503  00FE67  6E                 	db	110	;'n'
  2504  00FE68  6E                 	db	110	;'n'
  2505  00FE69  65                 	db	101	;'e'
  2506  00FE6A  6C                 	db	108	;'l'
  2507  00FE6B  20                 	db	32
  2508  00FE6C  45                 	db	69	;'E'
  2509  00FE6D  00                 	db	0
  2510  00FE6E                     STR_89:
  2511  00FE6E  52                 	db	82	;'R'
  2512  00FE6F  46                 	db	70	;'F'
  2513  00FE70  4B                 	db	75	;'K'
  2514  00FE71  31                 	db	49	;'1'
  2515  00FE72  30                 	db	48	;'0'
  2516  00FE73  30                 	db	48	;'0'
  2517  00FE74  4C                 	db	76	;'L'
  2518  00FE75  43                 	db	67	;'C'
  2519  00FE76  20                 	db	32
  2520  00FE77  43                 	db	67	;'C'
  2521  00FE78  68                 	db	104	;'h'
  2522  00FE79  61                 	db	97	;'a'
  2523  00FE7A  6E                 	db	110	;'n'
  2524  00FE7B  6E                 	db	110	;'n'
  2525  00FE7C  65                 	db	101	;'e'
  2526  00FE7D  6C                 	db	108	;'l'
  2527  00FE7E  20                 	db	32
  2528  00FE7F  46                 	db	70	;'F'
  2529  00FE80  00                 	db	0
  2530  00FE81                     STR_92:
  2531  00FE81  54                 	db	84	;'T'
  2532  00FE82  52                 	db	82	;'R'
  2533  00FE83  30                 	db	48	;'0'
  2534  00FE84  30                 	db	48	;'0'
  2535  00FE85  39                 	db	57	;'9'
  2536  00FE86  20                 	db	32
  2537  00FE87  43                 	db	67	;'C'
  2538  00FE88  68                 	db	104	;'h'
  2539  00FE89  61                 	db	97	;'a'
  2540  00FE8A  6E                 	db	110	;'n'
  2541  00FE8B  6E                 	db	110	;'n'
  2542  00FE8C  65                 	db	101	;'e'
  2543  00FE8D  6C                 	db	108	;'l'
  2544  00FE8E  20                 	db	32
  2545  00FE8F  44                 	db	68	;'D'
  2546  00FE90  20                 	db	32
  2547  00FE91  4F                 	db	79	;'O'
  2548  00FE92  4E                 	db	78	;'N'
  2549  00FE93  00                 	db	0
  2550  00FE94                     STR_81:
  2551  00FE94  52                 	db	82	;'R'
  2552  00FE95  65                 	db	101	;'e'
  2553  00FE96  6D                 	db	109	;'m'
  2554  00FE97  6F                 	db	111	;'o'
  2555  00FE98  74                 	db	116	;'t'
  2556  00FE99  65                 	db	101	;'e'
  2557  00FE9A  42                 	db	66	;'B'
  2558  00FE9B  75                 	db	117	;'u'
  2559  00FE9C  74                 	db	116	;'t'
  2560  00FE9D  74                 	db	116	;'t'
  2561  00FE9E  6F                 	db	111	;'o'
  2562  00FE9F  6E                 	db	110	;'n'
  2563  00FEA0  25                 	db	37
  2564  00FEA1  64                 	db	100	;'d'
  2565  00FEA2  20                 	db	32
  2566  00FEA3  73                 	db	115	;'s'
  2567  00FEA4  65                 	db	101	;'e'
  2568  00FEA5  74                 	db	116	;'t'
  2569  00FEA6  00                 	db	0
  2570  00FEA7                     STR_41:
  2571  00FEA7  4E                 	db	78	;'N'
  2572  00FEA8  45                 	db	69	;'E'
  2573  00FEA9  43                 	db	67	;'C'
  2574  00FEAA  20                 	db	32
  2575  00FEAB  3D                 	db	61	;'='
  2576  00FEAC  20                 	db	32
  2577  00FEAD  30                 	db	48	;'0'
  2578  00FEAE  78                 	db	120	;'x'
  2579  00FEAF  31                 	db	49	;'1'
  2580  00FEB0  43                 	db	67	;'C'
  2581  00FEB1  45                 	db	69	;'E'
  2582  00FEB2  33                 	db	51	;'3'
  2583  00FEB3  35                 	db	53	;'5'
  2584  00FEB4  30                 	db	48	;'0'
  2585  00FEB5  61                 	db	97	;'a'
  2586  00FEB6  66                 	db	102	;'f'
  2587  00FEB7  20                 	db	32
  2588  00FEB8  00                 	db	0
  2589  00FEB9                     STR_58:
  2590  00FEB9  52                 	db	82	;'R'
  2591  00FEBA  65                 	db	101	;'e'
  2592  00FEBB  6D                 	db	109	;'m'
  2593  00FEBC  6F                 	db	111	;'o'
  2594  00FEBD  74                 	db	116	;'t'
  2595  00FEBE  65                 	db	101	;'e'
  2596  00FEBF  42                 	db	66	;'B'
  2597  00FEC0  75                 	db	117	;'u'
  2598  00FEC1  74                 	db	116	;'t'
  2599  00FEC2  74                 	db	116	;'t'
  2600  00FEC3  6F                 	db	111	;'o'
  2601  00FEC4  6E                 	db	110	;'n'
  2602  00FEC5  31                 	db	49	;'1'
  2603  00FEC6  20                 	db	32
  2604  00FEC7  73                 	db	115	;'s'
  2605  00FEC8  65                 	db	101	;'e'
  2606  00FEC9  74                 	db	116	;'t'
  2607  00FECA  00                 	db	0
  2608  00FECB                     STR_102:
  2609  00FECB  30                 	db	48	;'0'
  2610  00FECC  31                 	db	49	;'1'
  2611  00FECD  32                 	db	50	;'2'
  2612  00FECE  33                 	db	51	;'3'
  2613  00FECF  34                 	db	52	;'4'
  2614  00FED0  35                 	db	53	;'5'
  2615  00FED1  36                 	db	54	;'6'
  2616  00FED2  37                 	db	55	;'7'
  2617  00FED3  38                 	db	56	;'8'
  2618  00FED4  39                 	db	57	;'9'
  2619  00FED5  41                 	db	65	;'A'
  2620  00FED6  42                 	db	66	;'B'
  2621  00FED7  43                 	db	67	;'C'
  2622  00FED8  44                 	db	68	;'D'
  2623  00FED9  45                 	db	69	;'E'
  2624  00FEDA  46                 	db	70	;'F'
  2625  00FEDB  00                 	db	0
  2626  00FEDC                     STR_103:
  2627  00FEDC  30                 	db	48	;'0'
  2628  00FEDD  31                 	db	49	;'1'
  2629  00FEDE  32                 	db	50	;'2'
  2630  00FEDF  33                 	db	51	;'3'
  2631  00FEE0  34                 	db	52	;'4'
  2632  00FEE1  35                 	db	53	;'5'
  2633  00FEE2  36                 	db	54	;'6'
  2634  00FEE3  37                 	db	55	;'7'
  2635  00FEE4  38                 	db	56	;'8'
  2636  00FEE5  39                 	db	57	;'9'
  2637  00FEE6  61                 	db	97	;'a'
  2638  00FEE7  62                 	db	98	;'b'
  2639  00FEE8  63                 	db	99	;'c'
  2640  00FEE9  64                 	db	100	;'d'
  2641  00FEEA  65                 	db	101	;'e'
  2642  00FEEB  66                 	db	102	;'f'
  2643  00FEEC  00                 	db	0
  2644  00FEED                     STR_74:
  2645  00FEED  53                 	db	83	;'S'
  2646  00FEEE  79                 	db	121	;'y'
  2647  00FEEF  73                 	db	115	;'s'
  2648  00FEF0  74                 	db	116	;'t'
  2649  00FEF1  65                 	db	101	;'e'
  2650  00FEF2  6D                 	db	109	;'m'
  2651  00FEF3  20                 	db	32
  2652  00FEF4  63                 	db	99	;'c'
  2653  00FEF5  6F                 	db	111	;'o'
  2654  00FEF6  6D                 	db	109	;'m'
  2655  00FEF7  6D                 	db	109	;'m'
  2656  00FEF8  61                 	db	97	;'a'
  2657  00FEF9  6E                 	db	110	;'n'
  2658  00FEFA  64                 	db	100	;'d'
  2659  00FEFB  73                 	db	115	;'s'
  2660  00FEFC  3A                 	db	58	;':'
  2661  00FEFD  00                 	db	0
  2662  00FEFE                     STR_54:
  2663  00FEFE  52                 	db	82	;'R'
  2664  00FEFF  65                 	db	101	;'e'
  2665  00FF00  6D                 	db	109	;'m'
  2666  00FF01  6F                 	db	111	;'o'
  2667  00FF02  74                 	db	116	;'t'
  2668  00FF03  65                 	db	101	;'e'
  2669  00FF04  42                 	db	66	;'B'
  2670  00FF05  75                 	db	117	;'u'
  2671  00FF06  74                 	db	116	;'t'
  2672  00FF07  74                 	db	116	;'t'
  2673  00FF08  6F                 	db	111	;'o'
  2674  00FF09  6E                 	db	110	;'n'
  2675  00FF0A  27                 	db	39
  2676  00FF0B  78                 	db	120	;'x'
  2677  00FF0C  27                 	db	39
  2678  00FF0D  00                 	db	0
  2679  00FF0E                     STR_43:
  2680  00FF0E  4E                 	db	78	;'N'
  2681  00FF0F  45                 	db	69	;'E'
  2682  00FF10  43                 	db	67	;'C'
  2683  00FF11  20                 	db	32
  2684  00FF12  3D                 	db	61	;'='
  2685  00FF13  20                 	db	32
  2686  00FF14  30                 	db	48	;'0'
  2687  00FF15  78                 	db	120	;'x'
  2688  00FF16  33                 	db	51	;'3'
  2689  00FF17  38                 	db	56	;'8'
  2690  00FF18  2C                 	db	44
  2691  00FF19  20                 	db	32
  2692  00FF1A  30                 	db	48	;'0'
  2693  00FF1B  78                 	db	120	;'x'
  2694  00FF1C  41                 	db	65	;'A'
  2695  00FF1D  00                 	db	0
  2696  00FF1E                     STR_3:
  2697  00FF1E  42                 	db	66	;'B'
  2698  00FF1F  75                 	db	117	;'u'
  2699  00FF20  66                 	db	102	;'f'
  2700  00FF21  66                 	db	102	;'f'
  2701  00FF22  65                 	db	101	;'e'
  2702  00FF23  72                 	db	114	;'r'
  2703  00FF24  20                 	db	32
  2704  00FF25  4F                 	db	79	;'O'
  2705  00FF26  76                 	db	118	;'v'
  2706  00FF27  65                 	db	101	;'e'
  2707  00FF28  72                 	db	114	;'r'
  2708  00FF29  66                 	db	102	;'f'
  2709  00FF2A  6C                 	db	108	;'l'
  2710  00FF2B  6F                 	db	111	;'o'
  2711  00FF2C  77                 	db	119	;'w'
  2712  00FF2D  00                 	db	0
  2713  00FF2E                     STR_78:
  2714  00FF2E  52                 	db	82	;'R'
  2715  00FF2F  65                 	db	101	;'e'
  2716  00FF30  6D                 	db	109	;'m'
  2717  00FF31  6F                 	db	111	;'o'
  2718  00FF32  74                 	db	116	;'t'
  2719  00FF33  65                 	db	101	;'e'
  2720  00FF34  42                 	db	66	;'B'
  2721  00FF35  75                 	db	117	;'u'
  2722  00FF36  74                 	db	116	;'t'
  2723  00FF37  74                 	db	116	;'t'
  2724  00FF38  6F                 	db	111	;'o'
  2725  00FF39  6E                 	db	110	;'n'
  2726  00FF3A  25                 	db	37
  2727  00FF3B  64                 	db	100	;'d'
  2728  00FF3C  00                 	db	0
  2729  00FF3D                     STR_57:
  2730  00FF3D  52                 	db	82	;'R'
  2731  00FF3E  65                 	db	101	;'e'
  2732  00FF3F  6D                 	db	109	;'m'
  2733  00FF40  6F                 	db	111	;'o'
  2734  00FF41  74                 	db	116	;'t'
  2735  00FF42  65                 	db	101	;'e'
  2736  00FF43  42                 	db	66	;'B'
  2737  00FF44  75                 	db	117	;'u'
  2738  00FF45  74                 	db	116	;'t'
  2739  00FF46  74                 	db	116	;'t'
  2740  00FF47  6F                 	db	111	;'o'
  2741  00FF48  6E                 	db	110	;'n'
  2742  00FF49  31                 	db	49	;'1'
  2743  00FF4A  00                 	db	0
  2744  00FF4B                     STR_65:
  2745  00FF4B  57                 	db	87	;'W'
  2746  00FF4C  68                 	db	104	;'h'
  2747  00FF4D  69                 	db	105	;'i'
  2748  00FF4E  63                 	db	99	;'c'
  2749  00FF4F  68                 	db	104	;'h'
  2750  00FF50  20                 	db	32
  2751  00FF51  64                 	db	100	;'d'
  2752  00FF52  65                 	db	101	;'e'
  2753  00FF53  76                 	db	118	;'v'
  2754  00FF54  69                 	db	105	;'i'
  2755  00FF55  63                 	db	99	;'c'
  2756  00FF56  65                 	db	101	;'e'
  2757  00FF57  3F                 	db	63	;'?'
  2758  00FF58  00                 	db	0
  2759  00FF59                     STR_86:
  2760  00FF59  52                 	db	82	;'R'
  2761  00FF5A  46                 	db	70	;'F'
  2762  00FF5B  20                 	db	32
  2763  00FF5C  63                 	db	99	;'c'
  2764  00FF5D  6F                 	db	111	;'o'
  2765  00FF5E  6D                 	db	109	;'m'
  2766  00FF5F  6D                 	db	109	;'m'
  2767  00FF60  61                 	db	97	;'a'
  2768  00FF61  6E                 	db	110	;'n'
  2769  00FF62  64                 	db	100	;'d'
  2770  00FF63  73                 	db	115	;'s'
  2771  00FF64  3A                 	db	58	;':'
  2772  00FF65  00                 	db	0
  2773  00FF66                     STR_77:
  2774  00FF66  49                 	db	73	;'I'
  2775  00FF67  52                 	db	82	;'R'
  2776  00FF68  20                 	db	32
  2777  00FF69  63                 	db	99	;'c'
  2778  00FF6A  6F                 	db	111	;'o'
  2779  00FF6B  6D                 	db	109	;'m'
  2780  00FF6C  6D                 	db	109	;'m'
  2781  00FF6D  61                 	db	97	;'a'
  2782  00FF6E  6E                 	db	110	;'n'
  2783  00FF6F  64                 	db	100	;'d'
  2784  00FF70  73                 	db	115	;'s'
  2785  00FF71  3A                 	db	58	;':'
  2786  00FF72  00                 	db	0
  2787  00FF73                     STR_44:
  2788  00FF73  52                 	db	82	;'R'
  2789  00FF74  65                 	db	101	;'e'
  2790  00FF75  6D                 	db	109	;'m'
  2791  00FF76  6F                 	db	111	;'o'
  2792  00FF77  74                 	db	116	;'t'
  2793  00FF78  65                 	db	101	;'e'
  2794  00FF79  42                 	db	66	;'B'
  2795  00FF7A  75                 	db	117	;'u'
  2796  00FF7B  74                 	db	116	;'t'
  2797  00FF7C  74                 	db	116	;'t'
  2798  00FF7D  6F                 	db	111	;'o'
  2799  00FF7E  6E                 	db	110	;'n'
  2800  00FF7F  00                 	db	0
  2801  00FF80                     STR_38:
  2802  00FF80  20                 	db	32
  2803  00FF81  20                 	db	32
  2804  00FF82  20                 	db	32
  2805  00FF83  20                 	db	32
  2806  00FF84  20                 	db	32
  2807  00FF85  20                 	db	32
  2808  00FF86  20                 	db	32
  2809  00FF87  20                 	db	32
  2810  00FF88  6F                 	db	111	;'o'
  2811  00FF89  72                 	db	114	;'r'
  2812  00FF8A  00                 	db	0
  2813  00FF8B                     STR_8:
  2814  00FF8B  53                 	db	83	;'S'
  2815  00FF8C  55                 	db	85	;'U'
  2816  00FF8D  2C                 	db	44
  2817  00FF8E  20                 	db	32
  2818  00FF8F  31                 	db	49	;'1'
  2819  00FF90  31                 	db	49	;'1'
  2820  00FF91  35                 	db	53	;'5'
  2821  00FF92  4B                 	db	75	;'K'
  2822  00FF93  0D                 	db	13
  2823  00FF94  00                 	db	0
  2824  00FF95                     STR_76:
  2825  00FF95  48                 	db	72	;'H'
  2826  00FF96  65                 	db	101	;'e'
  2827  00FF97  6C                 	db	108	;'l'
  2828  00FF98  70                 	db	112	;'p'
  2829  00FF99  20                 	db	32
  2830  00FF9A  4D                 	db	77	;'M'
  2831  00FF9B  65                 	db	101	;'e'
  2832  00FF9C  6E                 	db	110	;'n'
  2833  00FF9D  75                 	db	117	;'u'
  2834  00FF9E  00                 	db	0
  2835  00FF9F                     STR_12:
  2836  00FF9F  53                 	db	83	;'S'
  2837  00FFA0  59                 	db	89	;'Y'
  2838  00FFA1  2C                 	db	44
  2839  00FFA2  30                 	db	48	;'0'
  2840  00FFA3  30                 	db	48	;'0'
  2841  00FFA4  31                 	db	49	;'1'
  2842  00FFA5  30                 	db	48	;'0'
  2843  00FFA6  0D                 	db	13
  2844  00FFA7  00                 	db	0
  2845  00FFA8                     STR_40:
  2846  00FFA8  45                 	db	69	;'E'
  2847  00FFA9  78                 	db	120	;'x'
  2848  00FFAA  61                 	db	97	;'a'
  2849  00FFAB  6D                 	db	109	;'m'
  2850  00FFAC  70                 	db	112	;'p'
  2851  00FFAD  6C                 	db	108	;'l'
  2852  00FFAE  65                 	db	101	;'e'
  2853  00FFAF  3A                 	db	58	;':'
  2854  00FFB0  00                 	db	0
  2855  00FFB1                     STR_36:
  2856  00FFB1  55                 	db	85	;'U'
  2857  00FFB2  73                 	db	115	;'s'
  2858  00FFB3  61                 	db	97	;'a'
  2859  00FFB4  67                 	db	103	;'g'
  2860  00FFB5  65                 	db	101	;'e'
  2861  00FFB6  3A                 	db	58	;':'
  2862  00FFB7  00                 	db	0
  2863  00FFB8                     STR_59:
  2864  00FFB8  52                 	db	82	;'R'
  2865  00FFB9  46                 	db	70	;'F'
  2866  00FFBA  20                 	db	32
  2867  00FFBB  73                 	db	115	;'s'
  2868  00FFBC  65                 	db	101	;'e'
  2869  00FFBD  74                 	db	116	;'t'
  2870  00FFBE  00                 	db	0
  2871  00FFBF                     STR_14:
  2872  00FFBF  53                 	db	83	;'S'
  2873  00FFC0  7E                 	db	126
  2874  00FFC1  2C                 	db	44
  2875  00FFC2  30                 	db	48	;'0'
  2876  00FFC3  0D                 	db	13
  2877  00FFC4  00                 	db	0
  2878  00FFC5                     STR_22:
  2879  00FFC5  43                 	db	67	;'C'
  2880  00FFC6  6F                 	db	111	;'o'
  2881  00FFC7  6E                 	db	110	;'n'
  2882  00FFC8  66                 	db	102	;'f'
  2883  00FFC9  31                 	db	49	;'1'
  2884  00FFCA  00                 	db	0
  2885  00FFCB                     STR_24:
  2886  00FFCB  43                 	db	67	;'C'
  2887  00FFCC  6F                 	db	111	;'o'
  2888  00FFCD  6E                 	db	110	;'n'
  2889  00FFCE  66                 	db	102	;'f'
  2890  00FFCF  32                 	db	50	;'2'
  2891  00FFD0  00                 	db	0
  2892  00FFD1                     STR_20:
  2893  00FFD1  2D                 	db	45
  2894  00FFD2  2D                 	db	45
  2895  00FFD3  2D                 	db	45
  2896  00FFD4  0D                 	db	13
  2897  00FFD5  00                 	db	0
  2898  00FFD6                     STR_18:
  2899  00FFD6  44                 	db	68	;'D'
  2900  00FFD7  2C                 	db	44
  2901  00FFD8  30                 	db	48	;'0'
  2902  00FFD9  0D                 	db	13
  2903  00FFDA  00                 	db	0
  2904  00FFDB                     STR_84:
  2905  00FFDB  4E                 	db	78	;'N'
  2906  00FFDC  45                 	db	69	;'E'
  2907  00FFDD  43                 	db	67	;'C'
  2908  00FFDE  3F                 	db	63	;'?'
  2909  00FFDF  00                 	db	0
  2910  00FFE0                     STR_4:
  2911  00FFE0  24                 	db	36
  2912  00FFE1  24                 	db	36
  2913  00FFE2  24                 	db	36
  2914  00FFE3  00                 	db	0
  2915  00FFE4                     STR_72:
  2916  00FFE4  3F                 	db	63	;'?'
  2917  00FFE5  3F                 	db	63	;'?'
  2918  00FFE6  3F                 	db	63	;'?'
  2919  00FFE7  00                 	db	0
  2920  00FFE8                     STR_26:
  2921  00FFE8  4E                 	db	78	;'N'
  2922  00FFE9  45                 	db	69	;'E'
  2923  00FFEA  43                 	db	67	;'C'
  2924  00FFEB  00                 	db	0
  2925  00FFEC                     STR_5:
  2926  00FFEC  43                 	db	67	;'C'
  2927  00FFED  4D                 	db	77	;'M'
  2928  00FFEE  44                 	db	68	;'D'
  2929  00FFEF  00                 	db	0
  2930  00FFF0                     STR_21:
  2931  00FFF0  45                 	db	69	;'E'
  2932  00FFF1  4E                 	db	78	;'N'
  2933  00FFF2  44                 	db	68	;'D'
  2934  00FFF3  00                 	db	0
  2935  00FFF4                     STR_7:
  2936  00FFF4  41                 	db	65	;'A'
  2937  00FFF5  4F                 	db	79	;'O'
  2938  00FFF6  4B                 	db	75	;'K'
  2939  00FFF7  00                 	db	0
  2940  00FFF8                     STR_79:
  2941  00FFF8  62                 	db	98	;'b'
  2942  00FFF9  75                 	db	117	;'u'
  2943  00FFFA  66                 	db	102	;'f'
  2944  00FFFB  00                 	db	0
  2945  00FFFC                     STR_1:
  2946  00FFFC  0D                 	db	13
  2947  00FFFD  0A                 	db	10
  2948  00FFFE  00                 	db	0
  2949  0000                     
  2950                           ; #config settings
  2951  00FFFF  00                 	db	0	; dummy byte at the end
  2952  0000                     
  2953                           	psect	cinit
  2954  0052A2                     __pcinit:
  2955                           	opt stack 0
  2956  0052A2                     start_initialization:
  2957                           	opt stack 0
  2958  0052A2                     __initialization:
  2959                           	opt stack 0
  2960                           
  2961                           ; Clear objects allocated to BANK9 (255 bytes)
  2962  0052A2  EE09  F000         	lfsr	0,__pbssBANK9
  2963  0052A6  EE10 F0FF          	lfsr	1,255
  2964  0052AA                     clear_0:
  2965  0052AA  6AEE               	clrf	postinc0,c
  2966  0052AC  50E5               	movf	postdec1,w,c
  2967  0052AE  50E1               	movf	fsr1l,w,c
  2968  0052B0  E1FC               	bnz	clear_0
  2969  0052B2  50E2               	movf	fsr1h,w,c
  2970  0052B4  E1FA               	bnz	clear_0
  2971                           
  2972                           ; Clear objects allocated to BANK8 (144 bytes)
  2973  0052B6  EE08  F000         	lfsr	0,__pbssBANK8
  2974  0052BA  0E90               	movlw	144
  2975  0052BC                     clear_1:
  2976  0052BC  6AEE               	clrf	postinc0,c
  2977  0052BE  06E8               	decf	wreg,f,c
  2978  0052C0  E1FD               	bnz	clear_1
  2979                           
  2980                           ; Clear objects allocated to BANK7 (246 bytes)
  2981  0052C2  EE07  F000         	lfsr	0,__pbssBANK7
  2982  0052C6  0EF6               	movlw	246
  2983  0052C8                     clear_2:
  2984  0052C8  6AEE               	clrf	postinc0,c
  2985  0052CA  06E8               	decf	wreg,f,c
  2986  0052CC  E1FD               	bnz	clear_2
  2987                           
  2988                           ; Clear objects allocated to BANK6 (255 bytes)
  2989  0052CE  EE06  F000         	lfsr	0,__pbssBANK6
  2990  0052D2  EE10 F0FF          	lfsr	1,255
  2991  0052D6                     clear_3:
  2992  0052D6  6AEE               	clrf	postinc0,c
  2993  0052D8  50E5               	movf	postdec1,w,c
  2994  0052DA  50E1               	movf	fsr1l,w,c
  2995  0052DC  E1FC               	bnz	clear_3
  2996  0052DE  50E2               	movf	fsr1h,w,c
  2997  0052E0  E1FA               	bnz	clear_3
  2998                           
  2999                           ; Clear objects allocated to BANK4 (20 bytes)
  3000  0052E2  EE04  F0E1         	lfsr	0,__pbssBANK4
  3001  0052E6  0E14               	movlw	20
  3002  0052E8                     clear_4:
  3003  0052E8  6AEE               	clrf	postinc0,c
  3004  0052EA  06E8               	decf	wreg,f,c
  3005  0052EC  E1FD               	bnz	clear_4
  3006                           
  3007                           ; Clear objects allocated to BANK2 (3 bytes)
  3008  0052EE  0102               	movlb	2
  3009  0052F0  6BFF               	clrf	(__pbssBANK2+2)& (0+255),b
  3010  0052F2  6BFE               	clrf	(__pbssBANK2+1)& (0+255),b
  3011  0052F4  6BFD               	clrf	__pbssBANK2& (0+255),b
  3012                           
  3013                           ; Clear objects allocated to BANK0 (17 bytes)
  3014  0052F6  EE00  F0C4         	lfsr	0,__pbssBANK0
  3015  0052FA  0E11               	movlw	17
  3016  0052FC                     clear_5:
  3017  0052FC  6AEE               	clrf	postinc0,c
  3018  0052FE  06E8               	decf	wreg,f,c
  3019  005300  E1FD               	bnz	clear_5
  3020                           
  3021                           ; Clear objects allocated to COMRAM (18 bytes)
  3022  005302  EE00  F029         	lfsr	0,__pbssCOMRAM
  3023  005306  0E12               	movlw	18
  3024  005308                     clear_6:
  3025  005308  6AEE               	clrf	postinc0,c
  3026  00530A  06E8               	decf	wreg,f,c
  3027  00530C  E1FD               	bnz	clear_6
  3028                           
  3029                           ; Initialize objects allocated to BANK8 (50 bytes)
  3030                           ; load TBLPTR registers with __pidataBANK8
  3031  00530E  0E8E               	movlw	low __pidataBANK8
  3032  005310  6EF6               	movwf	tblptrl,c
  3033  005312  0E75               	movlw	high __pidataBANK8
  3034  005314  6EF7               	movwf	tblptrh,c
  3035  005316  0E00               	movlw	low (__pidataBANK8 shr (0+16))
  3036  005318  6EF8               	movwf	tblptru,c
  3037  00531A  EE08  F090         	lfsr	0,__pdataBANK8
  3038  00531E  EE10 F032          	lfsr	1,50
  3039  005322                     copy_data0:
  3040  005322  0009               	tblrd		*+
  3041  005324  CFF5 FFEE          	movff	tablat,postinc0
  3042  005328  50E5               	movf	postdec1,w,c
  3043  00532A  50E1               	movf	fsr1l,w,c
  3044  00532C  E1FA               	bnz	copy_data0
  3045                           
  3046                           ; Initialize objects allocated to BANK5 (242 bytes)
  3047                           ; load TBLPTR registers with __pidataBANK5
  3048  00532E  0E9E               	movlw	low __pidataBANK5
  3049  005330  6EF6               	movwf	tblptrl,c
  3050  005332  0E5F               	movlw	high __pidataBANK5
  3051  005334  6EF7               	movwf	tblptrh,c
  3052  005336  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  3053  005338  6EF8               	movwf	tblptru,c
  3054  00533A  EE05  F000         	lfsr	0,__pdataBANK5
  3055  00533E  EE10 F0F2          	lfsr	1,242
  3056  005342                     copy_data1:
  3057  005342  0009               	tblrd		*+
  3058  005344  CFF5 FFEE          	movff	tablat,postinc0
  3059  005348  50E5               	movf	postdec1,w,c
  3060  00534A  50E1               	movf	fsr1l,w,c
  3061  00534C  E1FA               	bnz	copy_data1
  3062                           
  3063                           ; Initialize objects allocated to BANK4 (225 bytes)
  3064                           ; load TBLPTR registers with __pidataBANK4
  3065  00534E  0E90               	movlw	low __pidataBANK4
  3066  005350  6EF6               	movwf	tblptrl,c
  3067  005352  0E60               	movlw	high __pidataBANK4
  3068  005354  6EF7               	movwf	tblptrh,c
  3069  005356  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  3070  005358  6EF8               	movwf	tblptru,c
  3071  00535A  EE04  F000         	lfsr	0,__pdataBANK4
  3072  00535E  EE10 F0E1          	lfsr	1,225
  3073  005362                     copy_data2:
  3074  005362  0009               	tblrd		*+
  3075  005364  CFF5 FFEE          	movff	tablat,postinc0
  3076  005368  50E5               	movf	postdec1,w,c
  3077  00536A  50E1               	movf	fsr1l,w,c
  3078  00536C  E1FA               	bnz	copy_data2
  3079                           
  3080                           ; Initialize objects allocated to BANK2 (4 bytes)
  3081                           ; load TBLPTR registers with __pidataBANK2
  3082  00536E  0EB6               	movlw	low __pidataBANK2
  3083  005370  6EF6               	movwf	tblptrl,c
  3084  005372  0E78               	movlw	high __pidataBANK2
  3085  005374  6EF7               	movwf	tblptrh,c
  3086  005376  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  3087  005378  6EF8               	movwf	tblptru,c
  3088  00537A  EE02  F0F9         	lfsr	0,__pdataBANK2
  3089  00537E  EE10 F004          	lfsr	1,4
  3090  005382                     copy_data3:
  3091  005382  0009               	tblrd		*+
  3092  005384  CFF5 FFEE          	movff	tablat,postinc0
  3093  005388  50E5               	movf	postdec1,w,c
  3094  00538A  50E1               	movf	fsr1l,w,c
  3095  00538C  E1FA               	bnz	copy_data3
  3096                           
  3097                           ; Initialize objects allocated to BANK1 (4 bytes)
  3098                           ; load TBLPTR registers with __pidataBANK1
  3099  00538E  0EB2               	movlw	low __pidataBANK1
  3100  005390  6EF6               	movwf	tblptrl,c
  3101  005392  0E78               	movlw	high __pidataBANK1
  3102  005394  6EF7               	movwf	tblptrh,c
  3103  005396  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3104  005398  6EF8               	movwf	tblptru,c
  3105  00539A  EE01  F0FA         	lfsr	0,__pdataBANK1
  3106  00539E  EE10 F004          	lfsr	1,4
  3107  0053A2                     copy_data4:
  3108  0053A2  0009               	tblrd		*+
  3109  0053A4  CFF5 FFEE          	movff	tablat,postinc0
  3110  0053A8  50E5               	movf	postdec1,w,c
  3111  0053AA  50E1               	movf	fsr1l,w,c
  3112  0053AC  E1FA               	bnz	copy_data4
  3113                           
  3114                           ; Initialize objects allocated to BANK0 (4 bytes)
  3115                           ; load TBLPTR registers with __pidataBANK0
  3116  0053AE  0EAE               	movlw	low __pidataBANK0
  3117  0053B0  6EF6               	movwf	tblptrl,c
  3118  0053B2  0E78               	movlw	high __pidataBANK0
  3119  0053B4  6EF7               	movwf	tblptrh,c
  3120  0053B6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3121  0053B8  6EF8               	movwf	tblptru,c
  3122  0053BA  EE00  F0D5         	lfsr	0,__pdataBANK0
  3123  0053BE  EE10 F004          	lfsr	1,4
  3124  0053C2                     copy_data5:
  3125  0053C2  0009               	tblrd		*+
  3126  0053C4  CFF5 FFEE          	movff	tablat,postinc0
  3127  0053C8  50E5               	movf	postdec1,w,c
  3128  0053CA  50E1               	movf	fsr1l,w,c
  3129  0053CC  E1FA               	bnz	copy_data5
  3130                           
  3131                           ; Initialize objects allocated to COMRAM (9 bytes)
  3132                           ; load TBLPTR registers with __pidataCOMRAM
  3133  0053CE  0E9E               	movlw	low __pidataCOMRAM
  3134  0053D0  6EF6               	movwf	tblptrl,c
  3135  0053D2  0E78               	movlw	high __pidataCOMRAM
  3136  0053D4  6EF7               	movwf	tblptrh,c
  3137  0053D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3138  0053D8  6EF8               	movwf	tblptru,c
  3139  0053DA  EE00  F03B         	lfsr	0,__pdataCOMRAM
  3140  0053DE  EE10 F009          	lfsr	1,9
  3141  0053E2                     copy_data6:
  3142  0053E2  0009               	tblrd		*+
  3143  0053E4  CFF5 FFEE          	movff	tablat,postinc0
  3144  0053E8  50E5               	movf	postdec1,w,c
  3145  0053EA  50E1               	movf	fsr1l,w,c
  3146  0053EC  E1FA               	bnz	copy_data6
  3147  0053EE                     end_of_initialization:
  3148                           	opt stack 0
  3149  0053EE                     __end_of__initialization:
  3150                           	opt stack 0
  3151  0053EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3152  0053F0  6EF8               	movwf	tblptru,c
  3153  0053F2  0100               	movlb	0
  3154  0053F4  EF24  F027         	goto	_main	;jump to C main() function
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           postinc0	equ	0xFEE
  3160                           wreg	equ	0xFE8
  3161                           postdec1	equ	0xFE5
  3162                           fsr1h	equ	0xFE2
  3163                           fsr1l	equ	0xFE1
  3164                           
  3165                           	psect	bssCOMRAM
  3166  000029                     __pbssCOMRAM:
  3167                           	opt stack 0
  3168  000029                     _IRsendCode:
  3169                           	opt stack 0
  3170  000029                     	ds	4
  3171  00002D                     _CommandStringPos:
  3172                           	opt stack 0
  3173  00002D                     	ds	1
  3174  00002E                     _IRbit:
  3175                           	opt stack 0
  3176  00002E                     	ds	1
  3177  00002F                     _IRpinOLD:
  3178                           	opt stack 0
  3179  00002F                     	ds	1
  3180  000030                     _IRrawCodeNum:
  3181                           	opt stack 0
  3182  000030                     	ds	1
  3183  000031                     _IRrepeatAmount:
  3184                           	opt stack 0
  3185  000031                     	ds	1
  3186  000032                     _IRrepeatflag:
  3187                           	opt stack 0
  3188  000032                     	ds	1
  3189  000033                     _RFConfig:
  3190                           	opt stack 0
  3191  000033                     	ds	1
  3192  000034                     _RFcodeBit:
  3193                           	opt stack 0
  3194  000034                     	ds	1
  3195  000035                     _RFcodePlace:
  3196                           	opt stack 0
  3197  000035                     	ds	1
  3198  000036                     _RFsendFlag:
  3199                           	opt stack 0
  3200  000036                     	ds	1
  3201  000037                     _Sendcount:
  3202                           	opt stack 0
  3203  000037                     	ds	1
  3204  000038                     _Timer1_Postscaler:
  3205                           	opt stack 0
  3206  000038                     	ds	1
  3207  000039                     _Timer2_Postscaler:
  3208                           	opt stack 0
  3209  000039                     	ds	1
  3210  00003A                     _Timer3_Postscaler:
  3211                           	opt stack 0
  3212  00003A                     	ds	1
  3213                           tblptru	equ	0xFF8
  3214                           tblptrh	equ	0xFF7
  3215                           tblptrl	equ	0xFF6
  3216                           tablat	equ	0xFF5
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           postdec1	equ	0xFE5
  3220                           fsr1h	equ	0xFE2
  3221                           fsr1l	equ	0xFE1
  3222                           
  3223                           	psect	dataCOMRAM
  3224  00003B                     __pdataCOMRAM:
  3225                           	opt stack 0
  3226  00003B                     _SN:
  3227                           	opt stack 0
  3228  00003B                     	ds	4
  3229  00003F                     _IRbitPosition:
  3230                           	opt stack 0
  3231  00003F                     	ds	1
  3232  000040                     _IRcodePlace:
  3233                           	opt stack 0
  3234  000040                     	ds	1
  3235  000041                     _RF_IR:
  3236                           	opt stack 0
  3237  000041                     	ds	1
  3238  000042                     _RF_IR_Postscaler:
  3239                           	opt stack 0
  3240  000042                     	ds	1
  3241  000043                     _ReceivingIR:
  3242                           	opt stack 0
  3243  000043                     	ds	1
  3244                           tblptru	equ	0xFF8
  3245                           tblptrh	equ	0xFF7
  3246                           tblptrl	equ	0xFF6
  3247                           tablat	equ	0xFF5
  3248                           postinc0	equ	0xFEE
  3249                           wreg	equ	0xFE8
  3250                           postdec1	equ	0xFE5
  3251                           fsr1h	equ	0xFE2
  3252                           fsr1l	equ	0xFE1
  3253                           
  3254                           	psect	bssBANK0
  3255  0000C4                     __pbssBANK0:
  3256                           	opt stack 0
  3257  0000C4                     _Conf2_ChannelB_Status:
  3258                           	opt stack 0
  3259  0000C4                     	ds	1
  3260  0000C5                     _Conf2_ChannelD_Status:
  3261                           	opt stack 0
  3262  0000C5                     	ds	1
  3263  0000C6                     _Conf2_ChannelH_1_Status:
  3264                           	opt stack 0
  3265  0000C6                     	ds	1
  3266  0000C7                     _Conf2_ChannelH_2_Status:
  3267                           	opt stack 0
  3268  0000C7                     	ds	1
  3269  0000C8                     _Conf2_ChannelH_3_Status:
  3270                           	opt stack 0
  3271  0000C8                     	ds	1
  3272  0000C9                     _IRcodeBit:
  3273                           	opt stack 0
  3274  0000C9                     	ds	1
  3275  0000CA                     _IRmod:
  3276                           	opt stack 0
  3277  0000CA                     	ds	1
  3278  0000CB                     _IRsendFlag:
  3279                           	opt stack 0
  3280  0000CB                     	ds	1
  3281  0000CC                     _NewReceivedString:
  3282                           	opt stack 0
  3283  0000CC                     	ds	1
  3284  0000CD                     _ReceivedStringPos:
  3285                           	opt stack 0
  3286  0000CD                     	ds	1
  3287  0000CE                     _IR_NEC:
  3288                           	opt stack 0
  3289  0000CE                     	ds	4
  3290  0000D2                     _IR_New_Code:
  3291                           	opt stack 0
  3292  0000D2                     	ds	1
  3293  0000D3                     _IRaddress:
  3294                           	opt stack 0
  3295  0000D3                     	ds	1
  3296  0000D4                     _IRcommand:
  3297                           	opt stack 0
  3298  0000D4                     	ds	1
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           postinc0	equ	0xFEE
  3304                           wreg	equ	0xFE8
  3305                           postdec1	equ	0xFE5
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           
  3309                           	psect	dataBANK0
  3310  0000D5                     __pdataBANK0:
  3311                           	opt stack 0
  3312  0000D5                     _Sent:
  3313                           	opt stack 0
  3314  0000D5                     	ds	1
  3315  0000D6                     _CRLN:
  3316                           	opt stack 0
  3317  0000D6                     	ds	3
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           postinc0	equ	0xFEE
  3323                           wreg	equ	0xFE8
  3324                           postdec1	equ	0xFE5
  3325                           fsr1h	equ	0xFE2
  3326                           fsr1l	equ	0xFE1
  3327                           
  3328                           	psect	dataBANK1
  3329  0001FA                     __pdataBANK1:
  3330                           	opt stack 0
  3331  0001FA                     _Conf2_Channels:
  3332                           	opt stack 0
  3333  0001FA                     	ds	4
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           postdec1	equ	0xFE5
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           
  3344                           	psect	bssBANK2
  3345  0002FD                     __pbssBANK2:
  3346                           	opt stack 0
  3347  0002FD                     _BatteryVoltage:
  3348                           	opt stack 0
  3349  0002FD                     	ds	3
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postdec1	equ	0xFE5
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           
  3360                           	psect	dataBANK2
  3361  0002F9                     __pdataBANK2:
  3362                           	opt stack 0
  3363  0002F9                     _Conf1_Channels:
  3364                           	opt stack 0
  3365  0002F9                     	ds	4
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           postinc0	equ	0xFEE
  3371                           wreg	equ	0xFE8
  3372                           postdec1	equ	0xFE5
  3373                           fsr1h	equ	0xFE2
  3374                           fsr1l	equ	0xFE1
  3375                           
  3376                           	psect	bssBANK4
  3377  0004E1                     __pbssBANK4:
  3378                           	opt stack 0
  3379  0004E1                     _RFsendCode:
  3380                           	opt stack 0
  3381  0004E1                     	ds	20
  3382                           tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           
  3392                           	psect	dataBANK4
  3393  000400                     __pdataBANK4:
  3394                           	opt stack 0
  3395  000400                     _Conf2_ChannelB_OFF:
  3396                           	opt stack 0
  3397  000400                     	ds	16
  3398  000410                     _Conf2_ChannelB_ON:
  3399                           	opt stack 0
  3400  000410                     	ds	16
  3401  000420                     _Conf2_ChannelD_OFF:
  3402                           	opt stack 0
  3403  000420                     	ds	16
  3404  000430                     _Conf2_ChannelD_ON:
  3405                           	opt stack 0
  3406  000430                     	ds	16
  3407  000440                     _Conf2_ChannelH_1_OFF:
  3408                           	opt stack 0
  3409  000440                     	ds	16
  3410  000450                     _Conf2_ChannelH_1_ON:
  3411                           	opt stack 0
  3412  000450                     	ds	16
  3413  000460                     _Conf2_ChannelH_2_OFF:
  3414                           	opt stack 0
  3415  000460                     	ds	16
  3416  000470                     _Conf2_ChannelH_2_ON:
  3417                           	opt stack 0
  3418  000470                     	ds	16
  3419  000480                     _Conf2_ChannelH_3_ON:
  3420                           	opt stack 0
  3421  000480                     	ds	16
  3422  000490                     _Conf1_ChannelD_STR:
  3423                           	opt stack 0
  3424  000490                     	ds	15
  3425  00049F                     _Conf1_ChannelE_STR:
  3426                           	opt stack 0
  3427  00049F                     	ds	15
  3428  0004AE                     _Conf1_ChannelF_STR:
  3429                           	opt stack 0
  3430  0004AE                     	ds	15
  3431  0004BD                     _Conf1_ChannelD:
  3432                           	opt stack 0
  3433  0004BD                     	ds	12
  3434  0004C9                     _Conf1_ChannelE:
  3435                           	opt stack 0
  3436  0004C9                     	ds	12
  3437  0004D5                     _Conf1_ChannelF:
  3438                           	opt stack 0
  3439  0004D5                     	ds	12
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           postdec1	equ	0xFE5
  3447                           fsr1h	equ	0xFE2
  3448                           fsr1l	equ	0xFE1
  3449                           
  3450                           	psect	dataBANK5
  3451  000500                     __pdataBANK5:
  3452                           	opt stack 0
  3453  000500                     _SYNTAX_ERR:
  3454                           	opt stack 0
  3455  000500                     	ds	29
  3456  00051D                     _Conf2_ChannelH_1_OFF_STR:
  3457                           	opt stack 0
  3458  00051D                     	ds	21
  3459  000532                     _Conf2_ChannelH_2_OFF_STR:
  3460                           	opt stack 0
  3461  000532                     	ds	21
  3462  000547                     _Conf2_ChannelH_3_OFF_STR:
  3463                           	opt stack 0
  3464  000547                     	ds	21
  3465  00055C                     _Conf2_ChannelH_1_ON_STR:
  3466                           	opt stack 0
  3467  00055C                     	ds	20
  3468  000570                     _Conf2_ChannelH_2_ON_STR:
  3469                           	opt stack 0
  3470  000570                     	ds	20
  3471  000584                     _Conf2_ChannelH_3_ON_STR:
  3472                           	opt stack 0
  3473  000584                     	ds	20
  3474  000598                     _Conf2_ChannelB_OFF_STR:
  3475                           	opt stack 0
  3476  000598                     	ds	19
  3477  0005AB                     _Conf2_ChannelD_OFF_STR:
  3478                           	opt stack 0
  3479  0005AB                     	ds	19
  3480  0005BE                     _Conf2_ChannelB_ON_STR:
  3481                           	opt stack 0
  3482  0005BE                     	ds	18
  3483  0005D0                     _Conf2_ChannelD_ON_STR:
  3484                           	opt stack 0
  3485  0005D0                     	ds	18
  3486  0005E2                     _Conf2_ChannelH_3_OFF:
  3487                           	opt stack 0
  3488  0005E2                     	ds	16
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           postinc0	equ	0xFEE
  3494                           wreg	equ	0xFE8
  3495                           postdec1	equ	0xFE5
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           
  3499                           	psect	bssBANK6
  3500  000600                     __pbssBANK6:
  3501                           	opt stack 0
  3502  000600                     _ReceivedString:
  3503                           	opt stack 0
  3504  000600                     	ds	255
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           postinc0	equ	0xFEE
  3510                           wreg	equ	0xFE8
  3511                           postdec1	equ	0xFE5
  3512                           fsr1h	equ	0xFE2
  3513                           fsr1l	equ	0xFE1
  3514                           
  3515                           	psect	bssBANK7
  3516  000700                     __pbssBANK7:
  3517                           	opt stack 0
  3518  000700                     _Global:
  3519                           	opt stack 0
  3520  000700                     	ds	246
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           postdec1	equ	0xFE5
  3528                           fsr1h	equ	0xFE2
  3529                           fsr1l	equ	0xFE1
  3530                           
  3531                           	psect	bssBANK8
  3532  000800                     __pbssBANK8:
  3533                           	opt stack 0
  3534  000800                     _IRRawCode:
  3535                           	opt stack 0
  3536  000800                     	ds	144
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           postinc0	equ	0xFEE
  3542                           wreg	equ	0xFE8
  3543                           postdec1	equ	0xFE5
  3544                           fsr1h	equ	0xFE2
  3545                           fsr1l	equ	0xFE1
  3546                           
  3547                           	psect	dataBANK8
  3548  000890                     __pdataBANK8:
  3549                           	opt stack 0
  3550  000890                     _ProductName:
  3551                           	opt stack 0
  3552  000890                     	ds	50
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           postinc0	equ	0xFEE
  3558                           wreg	equ	0xFE8
  3559                           postdec1	equ	0xFE5
  3560                           fsr1h	equ	0xFE2
  3561                           fsr1l	equ	0xFE1
  3562                           
  3563                           	psect	bssBANK9
  3564  000900                     __pbssBANK9:
  3565                           	opt stack 0
  3566  000900                     _CommandString:
  3567                           	opt stack 0
  3568  000900                     	ds	255
  3569                           tblptru	equ	0xFF8
  3570                           tblptrh	equ	0xFF7
  3571                           tblptrl	equ	0xFF6
  3572                           tablat	equ	0xFF5
  3573                           postinc0	equ	0xFEE
  3574                           wreg	equ	0xFE8
  3575                           postdec1	equ	0xFE5
  3576                           fsr1h	equ	0xFE2
  3577                           fsr1l	equ	0xFE1
  3578                           
  3579                           	psect	cstackBANK3
  3580  000300                     __pcstackBANK3:
  3581                           	opt stack 0
  3582  000300                     SyncEEPROMToGlobal@Temp:
  3583                           	opt stack 0
  3584                           
  3585                           ; 246 bytes @ 0x0
  3586  000300                     	ds	246
  3587  0003F6                     SyncEEPROMToGlobal@i:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0xF6
  3591  0003F6                     	ds	1
  3592  0003F7                     SyncEEPROMToGlobal@j:
  3593                           	opt stack 0
  3594                           
  3595                           ; 1 bytes @ 0xF7
  3596  0003F7                     	ds	1
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           fsr1h	equ	0xFE2
  3605                           fsr1l	equ	0xFE1
  3606                           
  3607                           	psect	cstackBANK2
  3608  000200                     __pcstackBANK2:
  3609                           	opt stack 0
  3610  000200                     GetEEPROM@Arrayspot:
  3611                           	opt stack 0
  3612  000200                     UseBluetooth@buf:
  3613                           	opt stack 0
  3614                           
  3615                           ; 50 bytes @ 0x0
  3616  000200                     	ds	1
  3617  000201                     GetEEPROM@Temp:
  3618                           	opt stack 0
  3619                           
  3620                           ; 246 bytes @ 0x1
  3621  000201                     	ds	49
  3622  000232                     UseBluetooth@rfchannelSTR:
  3623                           	opt stack 0
  3624                           
  3625                           ; 10 bytes @ 0x32
  3626  000232                     	ds	10
  3627  00023C                     UseBluetooth@timeout:
  3628                           	opt stack 0
  3629                           
  3630                           ; 1 bytes @ 0x3C
  3631  00023C                     	ds	1
  3632  00023D                     UseBluetooth@tempNec:
  3633                           	opt stack 0
  3634                           
  3635                           ; 4 bytes @ 0x3D
  3636  00023D                     	ds	4
  3637  000241                     UseBluetooth@device:
  3638                           	opt stack 0
  3639                           
  3640                           ; 1 bytes @ 0x41
  3641  000241                     	ds	1
  3642  000242                     UseBluetooth@tempRFArray:
  3643                           	opt stack 0
  3644                           
  3645                           ; 1 bytes @ 0x42
  3646  000242                     	ds	1
  3647  000243                     UseBluetooth@ok:
  3648                           	opt stack 0
  3649                           
  3650                           ; 1 bytes @ 0x43
  3651  000243                     	ds	1
  3652  000244                     UseBluetooth@EnteredNEC:
  3653                           	opt stack 0
  3654                           
  3655                           ; 4 bytes @ 0x44
  3656  000244                     	ds	4
  3657  000248                     UseBluetooth@i:
  3658                           	opt stack 0
  3659                           
  3660                           ; 1 bytes @ 0x48
  3661  000248                     	ds	1
  3662  000249                     UseBluetooth@rfconf:
  3663                           	opt stack 0
  3664                           
  3665                           ; 1 bytes @ 0x49
  3666  000249                     	ds	1
  3667  00024A                     UseBluetooth@NecAddress:
  3668                           	opt stack 0
  3669                           
  3670                           ; 1 bytes @ 0x4A
  3671  00024A                     	ds	1
  3672  00024B                     UseBluetooth@NecCommand:
  3673                           	opt stack 0
  3674                           
  3675                           ; 1 bytes @ 0x4B
  3676  00024B                     	ds	1
  3677  00024C                     UseBluetooth@temp:
  3678                           	opt stack 0
  3679                           
  3680                           ; 4 bytes @ 0x4C
  3681  00024C                     	ds	171
  3682  0002F7                     GetEEPROM@i:
  3683                           	opt stack 0
  3684                           
  3685                           ; 1 bytes @ 0xF7
  3686  0002F7                     	ds	1
  3687  0002F8                     GetEEPROM@j:
  3688                           	opt stack 0
  3689                           
  3690                           ; 1 bytes @ 0xF8
  3691  0002F8                     	ds	1
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           
  3702                           	psect	cstackBANK1
  3703  000100                     __pcstackBANK1:
  3704                           	opt stack 0
  3705  000100                     ?_SetEEPROM:
  3706                           	opt stack 0
  3707  000100                     ?_GetEEPROM:
  3708                           	opt stack 0
  3709  000100                     BluetoothInitialSetup@RFchannel:
  3710                           	opt stack 0
  3711  000100                     StringAddEqual@temp:
  3712                           	opt stack 0
  3713  000100                     SetEEPROM@Temp:
  3714                           	opt stack 0
  3715                           
  3716                           ; 246 bytes @ 0x0
  3717  000100                     	ds	10
  3718  00010A                     BluetoothInitialSetup@buf:
  3719                           	opt stack 0
  3720                           
  3721                           ; 50 bytes @ 0xA
  3722  00010A                     	ds	50
  3723  00013C                     BluetoothInitialSetup@ok:
  3724                           	opt stack 0
  3725                           
  3726                           ; 1 bytes @ 0x3C
  3727  00013C                     	ds	40
  3728  000164                     StringAddEqual@firstnumber:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x64
  3732  000164                     	ds	1
  3733  000165                     StringAddEqual@i:
  3734                           	opt stack 0
  3735                           
  3736                           ; 1 bytes @ 0x65
  3737  000165                     	ds	1
  3738  000166                     StringAddEqual@j:
  3739                           	opt stack 0
  3740                           
  3741                           ; 1 bytes @ 0x66
  3742  000166                     	ds	144
  3743  0001F6                     SetEEPROM@burn:
  3744                           	opt stack 0
  3745                           
  3746                           ; 4 bytes @ 0xF6
  3747  0001F6                     	ds	4
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           postdec1	equ	0xFE5
  3755                           fsr1h	equ	0xFE2
  3756                           fsr1l	equ	0xFE1
  3757                           
  3758                           	psect	cstackBANK0
  3759  000060                     __pcstackBANK0:
  3760                           	opt stack 0
  3761  000060                     ??_high_isr:
  3762                           
  3763                           ; 0 bytes @ 0x0
  3764  000060                     	ds	18
  3765  000072                     high_isr@IRpin:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x12
  3769  000072                     	ds	1
  3770  000073                     high_isr@Time0:
  3771                           	opt stack 0
  3772                           
  3773                           ; 2 bytes @ 0x13
  3774  000073                     	ds	2
  3775  000075                     ??_isdigit:
  3776  000075                     ??_Reverse_Byte:
  3777  000075                     ?_ReadEEPROM_1Byte:
  3778                           	opt stack 0
  3779  000075                     ?___wmul:
  3780                           	opt stack 0
  3781  000075                     ?___ftpack:
  3782                           	opt stack 0
  3783  000075                     ?_Reverse_4Byte:
  3784                           	opt stack 0
  3785  000075                     ?___lmul:
  3786                           	opt stack 0
  3787  000075                     ?___lldiv:
  3788                           	opt stack 0
  3789  000075                     IsLetter@data:
  3790                           	opt stack 0
  3791  000075                     UARTchar@data:
  3792                           	opt stack 0
  3793  000075                     cleanBuffer@data:
  3794                           	opt stack 0
  3795  000075                     cleanBuffer16bit@data:
  3796                           	opt stack 0
  3797  000075                     StringMatch@This:
  3798                           	opt stack 0
  3799  000075                     StringContains@This:
  3800                           	opt stack 0
  3801  000075                     lowercaseString@Input:
  3802                           	opt stack 0
  3803  000075                     lowercaseChar@Input:
  3804                           	opt stack 0
  3805  000075                     GetStringAfterComma@This:
  3806                           	opt stack 0
  3807  000075                     OpenUSART@spbrg:
  3808                           	opt stack 0
  3809  000075                     ReadEEPROM_1Byte@address:
  3810                           	opt stack 0
  3811  000075                     WriteEEPROM_1Byte@address:
  3812                           	opt stack 0
  3813  000075                     SendRF@Code:
  3814                           	opt stack 0
  3815  000075                     ___wmul@multiplier:
  3816                           	opt stack 0
  3817  000075                     ___ftpack@arg:
  3818                           	opt stack 0
  3819  000075                     ___ftge@ff1:
  3820                           	opt stack 0
  3821  000075                     delayUS@US:
  3822                           	opt stack 0
  3823  000075                     Reverse_4Byte@This:
  3824                           	opt stack 0
  3825  000075                     ___lmul@multiplier:
  3826                           	opt stack 0
  3827  000075                     ___lldiv@dividend:
  3828                           	opt stack 0
  3829                           
  3830                           ; 4 bytes @ 0x15
  3831  000075                     	ds	1
  3832  000076                     _isdigit$3180:
  3833                           	opt stack 0
  3834  000076                     UARTstring@data:
  3835                           	opt stack 0
  3836                           
  3837                           ; 2 bytes @ 0x16
  3838  000076                     	ds	1
  3839  000077                     Reverse_Byte@temp:
  3840                           	opt stack 0
  3841  000077                     GetStringAfterComma@CommaNumber:
  3842                           	opt stack 0
  3843  000077                     OpenUSART@config:
  3844                           	opt stack 0
  3845  000077                     ReadEEPROM_1Byte@GIEstatus:
  3846                           	opt stack 0
  3847  000077                     WriteEEPROM_1Byte@data:
  3848                           	opt stack 0
  3849  000077                     SendRF@Config:
  3850                           	opt stack 0
  3851  000077                     isdigit@c:
  3852                           	opt stack 0
  3853  000077                     cleanBuffer@count:
  3854                           	opt stack 0
  3855  000077                     cleanBuffer16bit@count:
  3856                           	opt stack 0
  3857  000077                     StringMatch@That:
  3858                           	opt stack 0
  3859  000077                     StringContains@That:
  3860                           	opt stack 0
  3861  000077                     ___wmul@multiplicand:
  3862                           	opt stack 0
  3863                           
  3864                           ; 2 bytes @ 0x17
  3865  000077                     	ds	1
  3866  000078                     ?_GetMemoryChar:
  3867                           	opt stack 0
  3868  000078                     ?_GetMemoryLong:
  3869                           	opt stack 0
  3870  000078                     Reverse_Byte@This:
  3871                           	opt stack 0
  3872  000078                     WriteEEPROM_1Byte@GIEstatus:
  3873                           	opt stack 0
  3874  000078                     SendRF@size:
  3875                           	opt stack 0
  3876  000078                     ___ftpack@exp:
  3877                           	opt stack 0
  3878  000078                     StringMatchCaseInsensitive@This:
  3879                           	opt stack 0
  3880  000078                     StringContainsCaseInsensitive@This:
  3881                           	opt stack 0
  3882  000078                     GetStringAfterComma@result:
  3883                           	opt stack 0
  3884  000078                     UARTstringCRLN@data:
  3885                           	opt stack 0
  3886  000078                     UARTcommandMenu@Command:
  3887                           	opt stack 0
  3888  000078                     ___ftge@ff2:
  3889                           	opt stack 0
  3890                           
  3891                           ; 3 bytes @ 0x18
  3892  000078                     	ds	1
  3893  000079                     ??_delayUS:
  3894  000079                     ??_cleanBuffer:
  3895  000079                     ??_cleanBuffer16bit:
  3896  000079                     ??_StringMatch:
  3897  000079                     ??_StringContains:
  3898  000079                     ??_Reverse_4Byte:
  3899  000079                     ?_EncodeNEC:
  3900                           	opt stack 0
  3901  000079                     EncodeNEC@command:
  3902                           	opt stack 0
  3903  000079                     SendRF@RepeatAmount:
  3904                           	opt stack 0
  3905  000079                     ___ftpack@sign:
  3906                           	opt stack 0
  3907  000079                     ___wmul@product:
  3908                           	opt stack 0
  3909  000079                     DecodeNEC@Nec:
  3910                           	opt stack 0
  3911  000079                     ___lmul@multiplicand:
  3912                           	opt stack 0
  3913  000079                     ___lldiv@divisor:
  3914                           	opt stack 0
  3915                           
  3916                           ; 4 bytes @ 0x19
  3917  000079                     	ds	1
  3918  00007A                     ??___ftpack:
  3919  00007A                     StringContains@begin:
  3920                           	opt stack 0
  3921  00007A                     SendRF@i:
  3922                           	opt stack 0
  3923  00007A                     StringMatchCaseInsensitive@That:
  3924                           	opt stack 0
  3925  00007A                     StringContainsCaseInsensitive@That:
  3926                           	opt stack 0
  3927  00007A                     UARTcommandMenu@Desc:
  3928                           	opt stack 0
  3929  00007A                     delayUS@i:
  3930                           	opt stack 0
  3931                           
  3932                           ; 4 bytes @ 0x1A
  3933  00007A                     	ds	1
  3934  00007B                     ??___ftge:
  3935  00007B                     GetStringAfterComma@tempCommaNumber:
  3936                           	opt stack 0
  3937  00007B                     SendRF_wait@Code:
  3938                           	opt stack 0
  3939                           
  3940                           ; 2 bytes @ 0x1B
  3941  00007B                     	ds	1
  3942  00007C                     ??_GetMemoryLong:
  3943  00007C                     ??_UARTcommandMenu:
  3944  00007C                     cleanBuffer@i:
  3945                           	opt stack 0
  3946  00007C                     cleanBuffer16bit@i:
  3947                           	opt stack 0
  3948  00007C                     StringMatchCaseInsensitive@tempThis:
  3949                           	opt stack 0
  3950  00007C                     StringContainsCaseInsensitive@begin:
  3951                           	opt stack 0
  3952  00007C                     GetStringAfterComma@count:
  3953                           	opt stack 0
  3954  00007C                     GetMemoryChar@AddressFirst:
  3955                           	opt stack 0
  3956                           
  3957                           ; 1 bytes @ 0x1C
  3958  00007C                     	ds	1
  3959  00007D                     ??_EncodeNEC:
  3960  00007D                     ?___ftadd:
  3961                           	opt stack 0
  3962  00007D                     ?___altoft:
  3963                           	opt stack 0
  3964  00007D                     ?___lltoft:
  3965                           	opt stack 0
  3966  00007D                     ?___lwtoft:
  3967                           	opt stack 0
  3968  00007D                     StringMatchCaseInsensitive@tempThat:
  3969                           	opt stack 0
  3970  00007D                     StringContainsCaseInsensitive@tempThis:
  3971                           	opt stack 0
  3972  00007D                     GetMemoryChar@H:
  3973                           	opt stack 0
  3974  00007D                     SendRF_wait@Config:
  3975                           	opt stack 0
  3976  00007D                     BufferCopy@from:
  3977                           	opt stack 0
  3978  00007D                     DecodeNEC@address:
  3979                           	opt stack 0
  3980  00007D                     ___lwtoft@c:
  3981                           	opt stack 0
  3982  00007D                     ___ftadd@f1:
  3983                           	opt stack 0
  3984  00007D                     ___lmul@product:
  3985                           	opt stack 0
  3986  00007D                     ___altoft@c:
  3987                           	opt stack 0
  3988  00007D                     ___lldiv@quotient:
  3989                           	opt stack 0
  3990  00007D                     ___lltoft@c:
  3991                           	opt stack 0
  3992                           
  3993                           ; 4 bytes @ 0x1D
  3994  00007D                     	ds	1
  3995  00007E                     StringContainsCaseInsensitive@tempThat:
  3996                           	opt stack 0
  3997  00007E                     SetMemoryChar@AddressFirst:
  3998                           	opt stack 0
  3999  00007E                     ReadCodeButtons@temp:
  4000                           	opt stack 0
  4001  00007E                     EnterCommandMode@count:
  4002                           	opt stack 0
  4003  00007E                     WaitForIRsignal@timeout:
  4004                           	opt stack 0
  4005  00007E                     SendRF_wait@size:
  4006                           	opt stack 0
  4007  00007E                     InternalADC_Read@ADCcounts:
  4008                           	opt stack 0
  4009                           
  4010                           ; 2 bytes @ 0x1E
  4011  00007E                     	ds	1
  4012  00007F                     SetMemoryChar@Test:
  4013                           	opt stack 0
  4014  00007F                     SendRF_wait@amount:
  4015                           	opt stack 0
  4016  00007F                     BufferCopy@to:
  4017                           	opt stack 0
  4018  00007F                     DecodeNEC@command:
  4019                           	opt stack 0
  4020                           
  4021                           ; 2 bytes @ 0x1F
  4022  00007F                     	ds	1
  4023  000080                     ??_InternalADC_Read:
  4024  000080                     ?___ftdiv:
  4025                           	opt stack 0
  4026  000080                     SetMemoryChar@Data:
  4027                           	opt stack 0
  4028  000080                     SendRF_Channel@channel:
  4029                           	opt stack 0
  4030  000080                     ___ftadd@f2:
  4031                           	opt stack 0
  4032  000080                     ___ftdiv@f1:
  4033                           	opt stack 0
  4034                           
  4035                           ; 3 bytes @ 0x20
  4036  000080                     	ds	1
  4037  000081                     ??_DecodeNEC:
  4038  000081                     ??___altoft:
  4039  000081                     ??___lltoft:
  4040  000081                     BufferCopy@count:
  4041                           	opt stack 0
  4042  000081                     UARTcommandMenu@i:
  4043                           	opt stack 0
  4044  000081                     ___lldiv@counter:
  4045                           	opt stack 0
  4046  000081                     GetNumber@This:
  4047                           	opt stack 0
  4048  000081                     Reverse_4Byte@temp:
  4049                           	opt stack 0
  4050                           
  4051                           ; 4 bytes @ 0x21
  4052  000081                     	ds	1
  4053  000082                     ?___llmod:
  4054                           	opt stack 0
  4055  000082                     BufferCopy@shift:
  4056                           	opt stack 0
  4057  000082                     UARTcommandMenu@place:
  4058                           	opt stack 0
  4059  000082                     InternalADC_Read@AnaChanSel:
  4060                           	opt stack 0
  4061  000082                     ___llmod@dividend:
  4062                           	opt stack 0
  4063                           
  4064                           ; 4 bytes @ 0x22
  4065  000082                     	ds	1
  4066  000083                     ??___ftadd:
  4067  000083                     BufferCopy@i:
  4068                           	opt stack 0
  4069  000083                     GetNumber@CommaNumber:
  4070                           	opt stack 0
  4071  000083                     InternalADC_Read@channel:
  4072                           	opt stack 0
  4073  000083                     ___ftdiv@f2:
  4074                           	opt stack 0
  4075                           
  4076                           ; 3 bytes @ 0x23
  4077  000083                     	ds	1
  4078  000084                     GetNumber@result:
  4079                           	opt stack 0
  4080  000084                     StringAddEqual@Input:
  4081                           	opt stack 0
  4082                           
  4083                           ; 2 bytes @ 0x24
  4084  000084                     	ds	1
  4085  000085                     DecodeNEC@temp2:
  4086                           	opt stack 0
  4087  000085                     ___altoft@exp:
  4088                           	opt stack 0
  4089  000085                     ___lltoft@exp:
  4090                           	opt stack 0
  4091  000085                     SendNEC_bytes@code:
  4092                           	opt stack 0
  4093                           
  4094                           ; 4 bytes @ 0x25
  4095  000085                     	ds	1
  4096  000086                     ??___ftdiv:
  4097  000086                     ??_GetNumber:
  4098  000086                     ??_StringAddEqual:
  4099  000086                     DecodeNEC@temp3:
  4100                           	opt stack 0
  4101  000086                     ___altoft@sign:
  4102                           	opt stack 0
  4103  000086                     ___ftadd@sign:
  4104                           	opt stack 0
  4105  000086                     ___llmod@divisor:
  4106                           	opt stack 0
  4107                           
  4108                           ; 4 bytes @ 0x26
  4109  000086                     	ds	1
  4110  000087                     DecodeNEC@temp1:
  4111                           	opt stack 0
  4112  000087                     ___ftadd@exp2:
  4113                           	opt stack 0
  4114                           
  4115                           ; 1 bytes @ 0x27
  4116  000087                     	ds	1
  4117  000088                     ___ftadd@exp1:
  4118                           	opt stack 0
  4119                           
  4120                           ; 1 bytes @ 0x28
  4121  000088                     	ds	1
  4122  000089                     ?___fttol:
  4123                           	opt stack 0
  4124  000089                     SendNEC_bytes@RepeatAmount:
  4125                           	opt stack 0
  4126  000089                     ___ftdiv@cntr:
  4127                           	opt stack 0
  4128  000089                     ___fttol@f1:
  4129                           	opt stack 0
  4130                           
  4131                           ; 3 bytes @ 0x29
  4132  000089                     	ds	1
  4133  00008A                     ___llmod@counter:
  4134                           	opt stack 0
  4135  00008A                     ___ftdiv@f3:
  4136                           	opt stack 0
  4137  00008A                     SendNEC_wait@code:
  4138                           	opt stack 0
  4139                           
  4140                           ; 4 bytes @ 0x2A
  4141  00008A                     	ds	1
  4142  00008B                     ?_sprintf:
  4143                           	opt stack 0
  4144  00008B                     GetNumber@tempCommaNumber:
  4145                           	opt stack 0
  4146  00008B                     sprintf@sp:
  4147                           	opt stack 0
  4148                           
  4149                           ; 2 bytes @ 0x2B
  4150  00008B                     	ds	1
  4151  00008C                     GetNumber@Hex:
  4152                           	opt stack 0
  4153                           
  4154                           ; 1 bytes @ 0x2C
  4155  00008C                     	ds	1
  4156  00008D                     ??___fttol:
  4157  00008D                     GetNumber@negative:
  4158                           	opt stack 0
  4159  00008D                     ___ftdiv@exp:
  4160                           	opt stack 0
  4161  00008D                     sprintf@f:
  4162                           	opt stack 0
  4163                           
  4164                           ; 2 bytes @ 0x2D
  4165  00008D                     	ds	1
  4166  00008E                     GetNumber@count:
  4167                           	opt stack 0
  4168  00008E                     SendNEC_wait@RepeatAmount:
  4169                           	opt stack 0
  4170  00008E                     ___ftdiv@sign:
  4171                           	opt stack 0
  4172                           
  4173                           ; 1 bytes @ 0x2E
  4174  00008E                     	ds	1
  4175  00008F                     ?___ftmul:
  4176                           	opt stack 0
  4177  00008F                     GetNumber@i:
  4178                           	opt stack 0
  4179  00008F                     SendNEC_wait@toggle:
  4180                           	opt stack 0
  4181  00008F                     ___ftmul@f1:
  4182                           	opt stack 0
  4183                           
  4184                           ; 3 bytes @ 0x2F
  4185  00008F                     	ds	1
  4186  000090                     GetNumber@tempThis:
  4187                           	opt stack 0
  4188  000090                     GetMemoryLong@temp:
  4189                           	opt stack 0
  4190                           
  4191                           ; 4 bytes @ 0x30
  4192  000090                     	ds	1
  4193  000091                     GetNumber@temp:
  4194                           	opt stack 0
  4195  000091                     EncodeNEC@temp1:
  4196                           	opt stack 0
  4197                           
  4198                           ; 4 bytes @ 0x31
  4199  000091                     	ds	1
  4200  000092                     ___fttol@sign1:
  4201                           	opt stack 0
  4202  000092                     ___ftmul@f2:
  4203                           	opt stack 0
  4204                           
  4205                           ; 3 bytes @ 0x32
  4206  000092                     	ds	1
  4207  000093                     ___fttol@lval:
  4208                           	opt stack 0
  4209                           
  4210                           ; 4 bytes @ 0x33
  4211  000093                     	ds	1
  4212  000094                     GetMemoryLong@H:
  4213                           	opt stack 0
  4214                           
  4215                           ; 1 bytes @ 0x34
  4216  000094                     	ds	1
  4217  000095                     ??___ftmul:
  4218  000095                     GetMemoryLong@MH:
  4219                           	opt stack 0
  4220  000095                     EncodeNEC@temp2:
  4221                           	opt stack 0
  4222                           
  4223                           ; 4 bytes @ 0x35
  4224  000095                     	ds	1
  4225  000096                     GetMemoryLong@ML:
  4226                           	opt stack 0
  4227                           
  4228                           ; 1 bytes @ 0x36
  4229  000096                     	ds	1
  4230  000097                     GetMemoryLong@L:
  4231                           	opt stack 0
  4232  000097                     ___fttol@exp1:
  4233                           	opt stack 0
  4234                           
  4235                           ; 1 bytes @ 0x37
  4236  000097                     	ds	1
  4237  000098                     ?_Round:
  4238                           	opt stack 0
  4239  000098                     GetMemoryLong@AddressFirst:
  4240                           	opt stack 0
  4241  000098                     ___ftmul@exp:
  4242                           	opt stack 0
  4243  000098                     Round@input:
  4244                           	opt stack 0
  4245                           
  4246                           ; 3 bytes @ 0x38
  4247  000098                     	ds	1
  4248  000099                     ??_sprintf:
  4249  000099                     ??_GetEEPROM:
  4250  000099                     ___ftmul@f3_as_product:
  4251                           	opt stack 0
  4252  000099                     SetMemoryLong@Data:
  4253                           	opt stack 0
  4254  000099                     EncodeNEC@temp3:
  4255                           	opt stack 0
  4256                           
  4257                           ; 4 bytes @ 0x39
  4258  000099                     	ds	2
  4259  00009B                     ??_SyncEEPROMToGlobal:
  4260  00009B                     Round@temp:
  4261                           	opt stack 0
  4262                           
  4263                           ; 4 bytes @ 0x3B
  4264  00009B                     	ds	1
  4265  00009C                     ___ftmul@cntr:
  4266                           	opt stack 0
  4267                           
  4268                           ; 1 bytes @ 0x3C
  4269  00009C                     	ds	1
  4270  00009D                     SetMemoryLong@AddressFirst:
  4271                           	opt stack 0
  4272  00009D                     sprintf@idx:
  4273                           	opt stack 0
  4274  00009D                     ___ftmul@sign:
  4275                           	opt stack 0
  4276  00009D                     EncodeNEC@temp4:
  4277                           	opt stack 0
  4278                           
  4279                           ; 4 bytes @ 0x3D
  4280  00009D                     	ds	1
  4281  00009E                     ??_SetMemoryLong:
  4282  00009E                     ?_ReadVoltage:
  4283                           	opt stack 0
  4284  00009E                     sprintf@cp:
  4285                           	opt stack 0
  4286                           
  4287                           ; 2 bytes @ 0x3E
  4288  00009E                     	ds	1
  4289  00009F                     InitUART@Baud:
  4290                           	opt stack 0
  4291                           
  4292                           ; 4 bytes @ 0x3F
  4293  00009F                     	ds	1
  4294  0000A0                     _sprintf$2904:
  4295                           	opt stack 0
  4296                           
  4297                           ; 2 bytes @ 0x40
  4298  0000A0                     	ds	1
  4299  0000A1                     EncodeNEC@address:
  4300                           	opt stack 0
  4301  0000A1                     ReadVoltage@voltage:
  4302                           	opt stack 0
  4303                           
  4304                           ; 3 bytes @ 0x41
  4305  0000A1                     	ds	1
  4306  0000A2                     _sprintf$2905:
  4307                           	opt stack 0
  4308  0000A2                     SetMemoryLong@Test:
  4309                           	opt stack 0
  4310                           
  4311                           ; 4 bytes @ 0x42
  4312  0000A2                     	ds	1
  4313  0000A3                     ??_InitUART:
  4314                           
  4315                           ; 0 bytes @ 0x43
  4316  0000A3                     	ds	1
  4317  0000A4                     ReadVoltage@temp:
  4318                           	opt stack 0
  4319  0000A4                     _sprintf$2911:
  4320                           	opt stack 0
  4321                           
  4322                           ; 2 bytes @ 0x44
  4323  0000A4                     	ds	2
  4324  0000A6                     SetMemoryLong@H:
  4325                           	opt stack 0
  4326  0000A6                     sprintf@len:
  4327                           	opt stack 0
  4328                           
  4329                           ; 2 bytes @ 0x46
  4330  0000A6                     	ds	1
  4331  0000A7                     SetMemoryLong@MH:
  4332                           	opt stack 0
  4333  0000A7                     _InitUART$3508:
  4334                           	opt stack 0
  4335                           
  4336                           ; 3 bytes @ 0x47
  4337  0000A7                     	ds	1
  4338  0000A8                     SetMemoryLong@ML:
  4339                           	opt stack 0
  4340  0000A8                     sprintf@ap:
  4341                           	opt stack 0
  4342                           
  4343                           ; 2 bytes @ 0x48
  4344  0000A8                     	ds	1
  4345  0000A9                     SetMemoryLong@L:
  4346                           	opt stack 0
  4347                           
  4348                           ; 1 bytes @ 0x49
  4349  0000A9                     	ds	1
  4350  0000AA                     ??_SetEEPROM:
  4351  0000AA                     InitUART@spbrg:
  4352                           	opt stack 0
  4353  0000AA                     sprintf@val:
  4354                           	opt stack 0
  4355                           
  4356                           ; 4 bytes @ 0x4A
  4357  0000AA                     	ds	2
  4358  0000AC                     InitUART@config:
  4359                           	opt stack 0
  4360  0000AC                     SetEEPROM@fail:
  4361                           	opt stack 0
  4362                           
  4363                           ; 4 bytes @ 0x4C
  4364  0000AC                     	ds	1
  4365  0000AD                     InitUART@temp:
  4366                           	opt stack 0
  4367                           
  4368                           ; 4 bytes @ 0x4D
  4369  0000AD                     	ds	1
  4370  0000AE                     sprintf@prec:
  4371                           	opt stack 0
  4372                           
  4373                           ; 2 bytes @ 0x4E
  4374  0000AE                     	ds	2
  4375  0000B0                     SetEEPROM@temp:
  4376                           	opt stack 0
  4377  0000B0                     sprintf@width:
  4378                           	opt stack 0
  4379                           
  4380                           ; 2 bytes @ 0x50
  4381  0000B0                     	ds	1
  4382  0000B1                     SetEEPROM@Arrayspot:
  4383                           	opt stack 0
  4384                           
  4385                           ; 1 bytes @ 0x51
  4386  0000B1                     	ds	1
  4387  0000B2                     SetEEPROM@i:
  4388                           	opt stack 0
  4389  0000B2                     sprintf@c:
  4390                           	opt stack 0
  4391                           
  4392                           ; 1 bytes @ 0x52
  4393  0000B2                     	ds	1
  4394  0000B3                     SetEEPROM@j:
  4395                           	opt stack 0
  4396  0000B3                     sprintf@flag:
  4397                           	opt stack 0
  4398                           
  4399                           ; 2 bytes @ 0x53
  4400  0000B3                     	ds	1
  4401  0000B4                     ??_SetEEPROMdefault:
  4402  0000B4                     UseIRCode@Code:
  4403                           	opt stack 0
  4404                           
  4405                           ; 2 bytes @ 0x54
  4406  0000B4                     	ds	1
  4407  0000B5                     ??_UseBluetooth:
  4408  0000B5                     
  4409                           ; 0 bytes @ 0x55
  4410  0000B5                     	ds	1
  4411  0000B6                     SetEEPROMdefault@i:
  4412                           	opt stack 0
  4413  0000B6                     UseIRCode@NEC:
  4414                           	opt stack 0
  4415                           
  4416                           ; 4 bytes @ 0x56
  4417  0000B6                     	ds	1
  4418  0000B7                     SetEEPROMdefault@j:
  4419                           	opt stack 0
  4420                           
  4421                           ; 1 bytes @ 0x57
  4422  0000B7                     	ds	1
  4423  0000B8                     
  4424                           ; 0 bytes @ 0x58
  4425  0000B8                     	ds	2
  4426  0000BA                     ??_UseIRCode:
  4427                           
  4428                           ; 0 bytes @ 0x5A
  4429  0000BA                     	ds	3
  4430  0000BD                     UseIRCode@found:
  4431                           	opt stack 0
  4432                           
  4433                           ; 1 bytes @ 0x5D
  4434  0000BD                     	ds	1
  4435  0000BE                     UseIRCode@i:
  4436                           	opt stack 0
  4437                           
  4438                           ; 1 bytes @ 0x5E
  4439  0000BE                     	ds	3
  4440  0000C1                     main@IRtask:
  4441                           	opt stack 0
  4442                           
  4443                           ; 1 bytes @ 0x61
  4444  0000C1                     	ds	1
  4445  0000C2                     main@Bluetoothtask:
  4446                           	opt stack 0
  4447                           
  4448                           ; 1 bytes @ 0x62
  4449  0000C2                     	ds	1
  4450  0000C3                     main@i:
  4451                           	opt stack 0
  4452                           
  4453                           ; 1 bytes @ 0x63
  4454  0000C3                     	ds	1
  4455                           tblptru	equ	0xFF8
  4456                           tblptrh	equ	0xFF7
  4457                           tblptrl	equ	0xFF6
  4458                           tablat	equ	0xFF5
  4459                           postinc0	equ	0xFEE
  4460                           wreg	equ	0xFE8
  4461                           postdec1	equ	0xFE5
  4462                           fsr1h	equ	0xFE2
  4463                           fsr1l	equ	0xFE1
  4464                           
  4465                           	psect	cstackCOMRAM
  4466  000001                     __pcstackCOMRAM:
  4467                           	opt stack 0
  4468  000001                     IsCharacter@data:
  4469                           	opt stack 0
  4470  000001                     ReadUSART@data:
  4471                           	opt stack 0
  4472  000001                     i1UARTchar@data:
  4473                           	opt stack 0
  4474  000001                     i1cleanBuffer@data:
  4475                           	opt stack 0
  4476                           
  4477                           ; 2 bytes @ 0x0
  4478  000001                     	ds	1
  4479  000002                     EraseScreen@characters:
  4480                           	opt stack 0
  4481  000002                     i1UARTstring@data:
  4482                           	opt stack 0
  4483                           
  4484                           ; 2 bytes @ 0x1
  4485  000002                     	ds	1
  4486  000003                     EraseScreen@i:
  4487                           	opt stack 0
  4488  000003                     i1cleanBuffer@count:
  4489                           	opt stack 0
  4490                           
  4491                           ; 2 bytes @ 0x2
  4492  000003                     	ds	1
  4493  000004                     i1UARTstringCRLN@data:
  4494                           	opt stack 0
  4495                           
  4496                           ; 2 bytes @ 0x3
  4497  000004                     	ds	1
  4498  000005                     ??i1_cleanBuffer:
  4499                           
  4500                           ; 0 bytes @ 0x4
  4501  000005                     	ds	1
  4502  000006                     
  4503                           ; 0 bytes @ 0x5
  4504  000006                     	ds	2
  4505  000008                     i1cleanBuffer@i:
  4506                           	opt stack 0
  4507                           
  4508                           ; 1 bytes @ 0x7
  4509  000008                     	ds	1
  4510  000009                     ??_low_isr:
  4511                           
  4512                           ; 0 bytes @ 0x8
  4513  000009                     	ds	17
  4514  00001A                     low_isr@data:
  4515                           	opt stack 0
  4516                           
  4517                           ; 1 bytes @ 0x19
  4518  00001A                     	ds	1
  4519  00001B                     IRrawToNEC@Raw:
  4520                           	opt stack 0
  4521                           
  4522                           ; 2 bytes @ 0x1A
  4523  00001B                     	ds	2
  4524  00001D                     IRrawToNEC@NEC:
  4525                           	opt stack 0
  4526                           
  4527                           ; 2 bytes @ 0x1C
  4528  00001D                     	ds	2
  4529  00001F                     IRrawToNEC@Invert:
  4530                           	opt stack 0
  4531                           
  4532                           ; 1 bytes @ 0x1E
  4533  00001F                     	ds	1
  4534  000020                     ??_IRrawToNEC:
  4535                           
  4536                           ; 0 bytes @ 0x1F
  4537  000020                     	ds	2
  4538  000022                     IRrawToNEC@NECtemp:
  4539                           	opt stack 0
  4540                           
  4541                           ; 4 bytes @ 0x21
  4542  000022                     	ds	4
  4543  000026                     IRrawToNEC@first:
  4544                           	opt stack 0
  4545                           
  4546                           ; 1 bytes @ 0x25
  4547  000026                     	ds	1
  4548  000027                     IRrawToNEC@i:
  4549                           	opt stack 0
  4550                           
  4551                           ; 1 bytes @ 0x26
  4552  000027                     	ds	1
  4553  000028                     IRrawToNEC@StartBit:
  4554                           	opt stack 0
  4555                           
  4556                           ; 1 bytes @ 0x27
  4557  000028                     	ds	1
  4558                           tblptru	equ	0xFF8
  4559                           tblptrh	equ	0xFF7
  4560                           tblptrl	equ	0xFF6
  4561                           tablat	equ	0xFF5
  4562                           postinc0	equ	0xFEE
  4563                           wreg	equ	0xFE8
  4564                           postdec1	equ	0xFE5
  4565                           fsr1h	equ	0xFE2
  4566                           fsr1l	equ	0xFE1
  4567                           
  4568 ;;
  4569 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4570 ;;
  4571 ;; *************** function _main *****************
  4572 ;; Defined at:
  4573 ;;		line 64 in file "main.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  i               1   99[BANK0 ] unsigned char 
  4578 ;;  Bluetoothtas    1   98[BANK0 ] unsigned char 
  4579 ;;  IRtask          1   97[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;		None               void
  4582 ;; Registers used:
  4583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;Total ram usage:        3 bytes
  4594 ;; Hardware stack levels required when called:   14
  4595 ;; This function calls:
  4596 ;;		_ConfigureOscillator
  4597 ;;		_InitApp
  4598 ;;		_Init_System
  4599 ;;		_ReadIRpin
  4600 ;;		_ReadVoltage
  4601 ;;		_UARTchar
  4602 ;;		_UARTstring
  4603 ;;		_UseBluetooth
  4604 ;;		_UseIRCode
  4605 ;;		___ftge
  4606 ;;		_cleanBuffer
  4607 ;;		_delayUS
  4608 ;; This function is called by:
  4609 ;;		Startup code after reset
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text0
  4614  004E48                     __ptext0:
  4615                           	opt stack 0
  4616  004E48                     _main:
  4617                           	opt stack 17
  4618                           
  4619                           ;main.c: 66: unsigned char i=0;
  4620                           
  4621                           ;incstack = 0
  4622  004E48  0E00               	movlw	0
  4623  004E4A  0100               	movlb	0	; () banked
  4624  004E4C  6FC3               	movwf	main@i& (0+255),b
  4625                           
  4626                           ;main.c: 67: unsigned char IRtask = 0;
  4627  004E4E  0E00               	movlw	0
  4628  004E50  0100               	movlb	0	; () banked
  4629  004E52  6FC1               	movwf	main@IRtask& (0+255),b
  4630                           
  4631                           ;main.c: 68: unsigned char Bluetoothtask = 0;
  4632  004E54  0E00               	movlw	0
  4633  004E56  0100               	movlb	0	; () banked
  4634  004E58  6FC2               	movwf	main@Bluetoothtask& (0+255),b
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;main.c: 70: ConfigureOscillator();
  4638  004E5A  EC5F  F03C         	call	_ConfigureOscillator	;wreg free
  4639                           
  4640                           ;main.c: 71: InitApp();
  4641  004E5E  ECD0  F039         	call	_InitApp	;wreg free
  4642                           
  4643                           ;main.c: 72: Init_System();
  4644  004E62  EC83  F036         	call	_Init_System	;wreg free
  4645                           
  4646                           ;main.c: 75: for(i =0;i<10;i++)
  4647  004E66  0E00               	movlw	0
  4648  004E68  0100               	movlb	0	; () banked
  4649  004E6A  6FC3               	movwf	main@i& (0+255),b
  4650  004E6C                     l12176:
  4651                           
  4652                           ; BSR set to: 0
  4653  004E6C  0E09               	movlw	9
  4654  004E6E  0100               	movlb	0	; () banked
  4655  004E70  65C3               	cpfsgt	main@i& (0+255),b
  4656  004E72  D001               	goto	l12180
  4657                           
  4658                           ; BSR set to: 0
  4659  004E74  D01D               	goto	l12192
  4660  004E76                     l12180:
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;main.c: 76: {
  4664                           ;main.c: 77: (LATC |= 0x02);
  4665  004E76  828B               	bsf	3979,1,c	;volatile
  4666                           
  4667                           ;main.c: 78: (LATC &= ~0x04);
  4668  004E78  948B               	bcf	3979,2,c	;volatile
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;main.c: 79: delayUS(50000);
  4672  004E7A  0E50               	movlw	80
  4673  004E7C  0100               	movlb	0	; () banked
  4674  004E7E  6F75               	movwf	delayUS@US& (0+255),b
  4675  004E80  0EC3               	movlw	195
  4676  004E82  6F76               	movwf	(delayUS@US+1)& (0+255),b
  4677  004E84  0E00               	movlw	0
  4678  004E86  6F77               	movwf	(delayUS@US+2)& (0+255),b
  4679  004E88  0E00               	movlw	0
  4680  004E8A  6F78               	movwf	(delayUS@US+3)& (0+255),b
  4681  004E8C  EC34  F039         	call	_delayUS	;wreg free
  4682                           
  4683                           ;main.c: 80: (LATC &= ~0x02);
  4684  004E90  928B               	bcf	3979,1,c	;volatile
  4685                           
  4686                           ;main.c: 81: (LATC |= 0x04);
  4687  004E92  848B               	bsf	3979,2,c	;volatile
  4688                           
  4689                           ;main.c: 82: delayUS(50000);
  4690  004E94  0E50               	movlw	80
  4691  004E96  0100               	movlb	0	; () banked
  4692  004E98  6F75               	movwf	delayUS@US& (0+255),b
  4693  004E9A  0EC3               	movlw	195
  4694  004E9C  6F76               	movwf	(delayUS@US+1)& (0+255),b
  4695  004E9E  0E00               	movlw	0
  4696  004EA0  6F77               	movwf	(delayUS@US+2)& (0+255),b
  4697  004EA2  0E00               	movlw	0
  4698  004EA4  6F78               	movwf	(delayUS@US+3)& (0+255),b
  4699  004EA6  EC34  F039         	call	_delayUS	;wreg free
  4700  004EAA  0100               	movlb	0	; () banked
  4701  004EAC  2BC3               	incf	main@i& (0+255),f,b
  4702  004EAE  D7DE               	goto	l12176
  4703  004EB0                     l12192:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;main.c: 83: }
  4707                           ;main.c: 84: (LATC &= ~0x04);
  4708  004EB0  948B               	bcf	3979,2,c	;volatile
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;main.c: 86: BatteryVoltage = ReadVoltage();
  4712  004EB2  ECC4  F032         	call	_ReadVoltage	;wreg free
  4713  004EB6  C09E  F2FD         	movff	?_ReadVoltage,_BatteryVoltage
  4714  004EBA  C09F  F2FE         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  4715  004EBE  C0A0  F2FF         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  4716                           
  4717                           ;main.c: 87: if(BatteryVoltage < 3.7 )
  4718  004EC2  C2FD  F075         	movff	_BatteryVoltage,___ftge@ff1
  4719  004EC6  C2FE  F076         	movff	_BatteryVoltage+1,___ftge@ff1+1
  4720  004ECA  C2FF  F077         	movff	_BatteryVoltage+2,___ftge@ff1+2
  4721  004ECE  0ECD               	movlw	205
  4722  004ED0  0100               	movlb	0	; () banked
  4723  004ED2  6F78               	movwf	___ftge@ff2& (0+255),b
  4724  004ED4  0E6C               	movlw	108
  4725  004ED6  0100               	movlb	0	; () banked
  4726  004ED8  6F79               	movwf	(___ftge@ff2+1)& (0+255),b
  4727  004EDA  0E40               	movlw	64
  4728  004EDC  0100               	movlb	0	; () banked
  4729  004EDE  6F7A               	movwf	(___ftge@ff2+2)& (0+255),b
  4730  004EE0  EC96  F031         	call	___ftge	;wreg free
  4731  004EE4  0100               	movlb	0	; () banked
  4732  004EE6  A0D8               	btfss	status,0,c
  4733  004EE8  D014               	goto	l12202
  4734                           
  4735                           ;main.c: 91: else if (BatteryVoltage > 30.0)
  4736                           
  4737                           ;main.c: 90: }
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;main.c: 88: {
  4741                           ;main.c: 89: __nop();
  4742  004EEA  0E00               	movlw	0
  4743  004EEC  0100               	movlb	0	; () banked
  4744  004EEE  6F75               	movwf	___ftge@ff1& (0+255),b
  4745  004EF0  0EF0               	movlw	240
  4746  004EF2  0100               	movlb	0	; () banked
  4747  004EF4  6F76               	movwf	(___ftge@ff1+1)& (0+255),b
  4748  004EF6  0E41               	movlw	65
  4749  004EF8  0100               	movlb	0	; () banked
  4750  004EFA  6F77               	movwf	(___ftge@ff1+2)& (0+255),b
  4751  004EFC  C2FD  F078         	movff	_BatteryVoltage,___ftge@ff2
  4752  004F00  C2FE  F079         	movff	_BatteryVoltage+1,___ftge@ff2+1
  4753  004F04  C2FF  F07A         	movff	_BatteryVoltage+2,___ftge@ff2+2
  4754  004F08  EC96  F031         	call	___ftge	;wreg free
  4755  004F0C  0100               	movlb	0	; () banked
  4756  004F0E  B0D8               	btfsc	status,0,c
  4757  004F10  D002               	goto	l62
  4758  004F12                     l12202:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;main.c: 92: {
  4762                           ;main.c: 93: __nop();
  4763  004F12  F000               	nop	
  4764  004F14  D000               	goto	l62
  4765  004F16                     l62:
  4766                           
  4767                           ;main.c: 97: {
  4768                           ;main.c: 98: IRtask = IR_New_Code;
  4769  004F16  C0D2  F0C1         	movff	_IR_New_Code,main@IRtask
  4770                           
  4771                           ;main.c: 99: Bluetoothtask = NewReceivedString;
  4772  004F1A  C0CC  F0C2         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  4773                           
  4774                           ;main.c: 100: if(IRtask)
  4775  004F1E  0100               	movlb	0	; () banked
  4776  004F20  51C1               	movf	main@IRtask& (0+255),w,b
  4777  004F22  0100               	movlb	0	; () banked
  4778  004F24  B4D8               	btfsc	status,2,c
  4779  004F26  D011               	goto	l12208
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;main.c: 101: {
  4783                           ;main.c: 102: UseIRCode(&IR_New_Code, IR_NEC);
  4784  004F28  0ED2               	movlw	low _IR_New_Code
  4785  004F2A  0100               	movlb	0	; () banked
  4786  004F2C  6FB4               	movwf	UseIRCode@Code& (0+255),b
  4787  004F2E  0E00               	movlw	high _IR_New_Code
  4788  004F30  0100               	movlb	0	; () banked
  4789  004F32  6FB5               	movwf	(UseIRCode@Code+1)& (0+255),b
  4790  004F34  C0CE  F0B6         	movff	_IR_NEC,UseIRCode@NEC
  4791  004F38  C0CF  F0B7         	movff	_IR_NEC+1,UseIRCode@NEC+1
  4792  004F3C  C0D0  F0B8         	movff	_IR_NEC+2,UseIRCode@NEC+2
  4793  004F40  C0D1  F0B9         	movff	_IR_NEC+3,UseIRCode@NEC+3
  4794  004F44  EC92  F023         	call	_UseIRCode	;wreg free
  4795  004F48  D000               	goto	l12208
  4796  004F4A                     l12208:
  4797                           
  4798                           ;main.c: 103: }
  4799                           ;main.c: 104: if(Bluetoothtask == 1)
  4800  004F4A  0100               	movlb	0	; () banked
  4801  004F4C  05C2               	decf	main@Bluetoothtask& (0+255),w,b
  4802  004F4E  A4D8               	btfss	status,2,c
  4803  004F50  D7E2               	goto	l62
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;main.c: 105: {
  4807                           ;main.c: 106: __nop();
  4808  004F52  F000               	nop	
  4809                           
  4810                           ;main.c: 107: UseBluetooth();
  4811  004F54  ECF6  F000         	call	_UseBluetooth	;wreg free
  4812                           
  4813                           ;main.c: 108: if(ReceivedStringPos || NewReceivedString)
  4814  004F58  0100               	movlb	0	; () banked
  4815  004F5A  51CD               	movf	_ReceivedStringPos& (0+255),w,b
  4816  004F5C  A4D8               	btfss	status,2,c
  4817  004F5E  D004               	goto	l12218
  4818                           
  4819                           ; BSR set to: 0
  4820  004F60  0100               	movlb	0	; () banked
  4821  004F62  51CC               	movf	_NewReceivedString& (0+255),w,b	;volatile
  4822  004F64  B4D8               	btfsc	status,2,c
  4823  004F66  D01E               	goto	l12228
  4824  004F68                     l12218:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;main.c: 109: {
  4828                           ;main.c: 110: cleanBuffer(ReceivedString, ReceivedStringPos);
  4829  004F68  0E00               	movlw	low _ReceivedString
  4830  004F6A  0100               	movlb	0	; () banked
  4831  004F6C  6F75               	movwf	cleanBuffer@data& (0+255),b
  4832  004F6E  0E06               	movlw	high _ReceivedString
  4833  004F70  0100               	movlb	0	; () banked
  4834  004F72  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
  4835  004F74  C0CD  F077         	movff	_ReceivedStringPos,cleanBuffer@count
  4836  004F78  0100               	movlb	0	; () banked
  4837  004F7A  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
  4838  004F7C  EC83  F038         	call	_cleanBuffer	;wreg free
  4839                           
  4840                           ;main.c: 111: ReceivedStringPos = 0;
  4841  004F80  0E00               	movlw	0
  4842  004F82  0100               	movlb	0	; () banked
  4843  004F84  6FCD               	movwf	_ReceivedStringPos& (0+255),b
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;main.c: 112: NewReceivedString = 0;
  4847  004F86  0E00               	movlw	0
  4848  004F88  0100               	movlb	0	; () banked
  4849  004F8A  6FCC               	movwf	_NewReceivedString& (0+255),b	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;main.c: 113: UARTstring(CRLN);
  4853  004F8C  0ED6               	movlw	low _CRLN
  4854  004F8E  0100               	movlb	0	; () banked
  4855  004F90  6F76               	movwf	UARTstring@data& (0+255),b
  4856  004F92  0E00               	movlw	high _CRLN
  4857  004F94  0100               	movlb	0	; () banked
  4858  004F96  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  4859  004F98  ECB0  F038         	call	_UARTstring	;wreg free
  4860                           
  4861                           ;main.c: 114: UARTchar('>');
  4862  004F9C  0E3E               	movlw	62
  4863  004F9E  EC74  F03B         	call	_UARTchar
  4864  004FA2  D000               	goto	l12228
  4865  004FA4                     l12228:
  4866                           
  4867                           ;main.c: 115: }
  4868                           ;main.c: 116: if(IR_New_Code)
  4869  004FA4  0100               	movlb	0	; () banked
  4870  004FA6  51D2               	movf	_IR_New_Code& (0+255),w,b
  4871  004FA8  B4D8               	btfsc	status,2,c
  4872  004FAA  D004               	goto	l12232
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;main.c: 117: {
  4876                           ;main.c: 118: IR_New_Code = 0;
  4877  004FAC  0E00               	movlw	0
  4878  004FAE  0100               	movlb	0	; () banked
  4879  004FB0  6FD2               	movwf	_IR_New_Code& (0+255),b
  4880  004FB2  D000               	goto	l12232
  4881  004FB4                     l12232:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;main.c: 119: }
  4885                           ;main.c: 121: IRpinOLD = ReadIRpin();
  4886  004FB4  EC0D  F03C         	call	_ReadIRpin	;wreg free
  4887  004FB8  6E2F               	movwf	_IRpinOLD,c
  4888                           
  4889                           ;main.c: 122: INTCONbits.RBIF = 0;
  4890  004FBA  90F2               	bcf	intcon,0,c	;volatile
  4891                           
  4892                           ;main.c: 123: (IOCBbits.IOCB4 = 1);
  4893  004FBC  887D               	bsf	3965,4,c	;volatile
  4894                           
  4895                           ;main.c: 124: INTCONbits.RBIE = 1;
  4896  004FBE  86F2               	bsf	intcon,3,c	;volatile
  4897  004FC0  D7AA               	goto	l62
  4898  004FC2  EFF4  F000         	goto	start
  4899  004FC6                     __end_of_main:
  4900                           	opt stack 0
  4901                           tblptru	equ	0xFF8
  4902                           tblptrh	equ	0xFF7
  4903                           tblptrl	equ	0xFF6
  4904                           tablat	equ	0xFF5
  4905                           intcon	equ	0xFF2
  4906                           postinc0	equ	0xFEE
  4907                           wreg	equ	0xFE8
  4908                           postdec1	equ	0xFE5
  4909                           fsr1h	equ	0xFE2
  4910                           fsr1l	equ	0xFE1
  4911                           status	equ	0xFD8
  4912                           
  4913 ;; *************** function ___ftge *****************
  4914 ;; Defined at:
  4915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  ff1             3   21[BANK0 ] float 
  4918 ;;  ff2             3   24[BANK0 ] float 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4930 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;Total ram usage:        9 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    6
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_main
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text1
  4945  00632C                     __ptext1:
  4946                           	opt stack 0
  4947  00632C                     ___ftge:
  4948                           	opt stack 24
  4949                           
  4950                           ;incstack = 0
  4951  00632C  0100               	movlb	0	; () banked
  4952  00632E  AF77               	btfss	(___ftge@ff1+2)& (0+255),7,b
  4953  006330  D01E               	goto	l9796
  4954                           
  4955                           ; BSR set to: 0
  4956  006332  C075  F07B         	movff	___ftge@ff1,??___ftge
  4957  006336  C076  F07C         	movff	___ftge@ff1+1,??___ftge+1
  4958  00633A  C077  F07D         	movff	___ftge@ff1+2,??___ftge+2
  4959  00633E  0100               	movlb	0	; () banked
  4960  006340  1F7B               	comf	??___ftge& (0+255),f,b
  4961  006342  1F7C               	comf	(??___ftge+1)& (0+255),f,b
  4962  006344  1F7D               	comf	(??___ftge+2)& (0+255),f,b
  4963  006346  2B7B               	incf	??___ftge& (0+255),f,b
  4964  006348  0E00               	movlw	0
  4965  00634A  237C               	addwfc	(??___ftge+1)& (0+255),f,b
  4966  00634C  237D               	addwfc	(??___ftge+2)& (0+255),f,b
  4967  00634E  0E00               	movlw	0
  4968  006350  0100               	movlb	0	; () banked
  4969  006352  257B               	addwf	??___ftge& (0+255),w,b
  4970  006354  0100               	movlb	0	; () banked
  4971  006356  6F75               	movwf	___ftge@ff1& (0+255),b
  4972  006358  0E00               	movlw	0
  4973  00635A  0100               	movlb	0	; () banked
  4974  00635C  217C               	addwfc	(??___ftge+1)& (0+255),w,b
  4975  00635E  0100               	movlb	0	; () banked
  4976  006360  6F76               	movwf	(___ftge@ff1+1)& (0+255),b
  4977  006362  0E80               	movlw	128
  4978  006364  0100               	movlb	0	; () banked
  4979  006366  217D               	addwfc	(??___ftge+2)& (0+255),w,b
  4980  006368  0100               	movlb	0	; () banked
  4981  00636A  6F77               	movwf	(___ftge@ff1+2)& (0+255),b
  4982  00636C  D000               	goto	l9796
  4983  00636E                     l9796:
  4984                           
  4985                           ; BSR set to: 0
  4986  00636E  0100               	movlb	0	; () banked
  4987  006370  AF7A               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4988  006372  D01E               	goto	l9800
  4989                           
  4990                           ; BSR set to: 0
  4991  006374  C078  F07B         	movff	___ftge@ff2,??___ftge
  4992  006378  C079  F07C         	movff	___ftge@ff2+1,??___ftge+1
  4993  00637C  C07A  F07D         	movff	___ftge@ff2+2,??___ftge+2
  4994  006380  0100               	movlb	0	; () banked
  4995  006382  1F7B               	comf	??___ftge& (0+255),f,b
  4996  006384  1F7C               	comf	(??___ftge+1)& (0+255),f,b
  4997  006386  1F7D               	comf	(??___ftge+2)& (0+255),f,b
  4998  006388  2B7B               	incf	??___ftge& (0+255),f,b
  4999  00638A  0E00               	movlw	0
  5000  00638C  237C               	addwfc	(??___ftge+1)& (0+255),f,b
  5001  00638E  237D               	addwfc	(??___ftge+2)& (0+255),f,b
  5002  006390  0E00               	movlw	0
  5003  006392  0100               	movlb	0	; () banked
  5004  006394  257B               	addwf	??___ftge& (0+255),w,b
  5005  006396  0100               	movlb	0	; () banked
  5006  006398  6F78               	movwf	___ftge@ff2& (0+255),b
  5007  00639A  0E00               	movlw	0
  5008  00639C  0100               	movlb	0	; () banked
  5009  00639E  217C               	addwfc	(??___ftge+1)& (0+255),w,b
  5010  0063A0  0100               	movlb	0	; () banked
  5011  0063A2  6F79               	movwf	(___ftge@ff2+1)& (0+255),b
  5012  0063A4  0E80               	movlw	128
  5013  0063A6  0100               	movlb	0	; () banked
  5014  0063A8  217D               	addwfc	(??___ftge+2)& (0+255),w,b
  5015  0063AA  0100               	movlb	0	; () banked
  5016  0063AC  6F7A               	movwf	(___ftge@ff2+2)& (0+255),b
  5017  0063AE  D000               	goto	l9800
  5018  0063B0                     l9800:
  5019                           
  5020                           ; BSR set to: 0
  5021  0063B0  0E00               	movlw	0
  5022  0063B2  0100               	movlb	0	; () banked
  5023  0063B4  1B75               	xorwf	___ftge@ff1& (0+255),f,b
  5024  0063B6  0E00               	movlw	0
  5025  0063B8  0100               	movlb	0	; () banked
  5026  0063BA  1B76               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5027  0063BC  0E80               	movlw	128
  5028  0063BE  0100               	movlb	0	; () banked
  5029  0063C0  1B77               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5030                           
  5031                           ; BSR set to: 0
  5032  0063C2  0E00               	movlw	0
  5033  0063C4  0100               	movlb	0	; () banked
  5034  0063C6  1B78               	xorwf	___ftge@ff2& (0+255),f,b
  5035  0063C8  0E00               	movlw	0
  5036  0063CA  0100               	movlb	0	; () banked
  5037  0063CC  1B79               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5038  0063CE  0E80               	movlw	128
  5039  0063D0  0100               	movlb	0	; () banked
  5040  0063D2  1B7A               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5041  0063D4  0100               	movlb	0	; () banked
  5042  0063D6  5178               	movf	___ftge@ff2& (0+255),w,b
  5043  0063D8  0100               	movlb	0	; () banked
  5044  0063DA  5D75               	subwf	___ftge@ff1& (0+255),w,b
  5045  0063DC  0100               	movlb	0	; () banked
  5046  0063DE  5179               	movf	(___ftge@ff2+1)& (0+255),w,b
  5047  0063E0  0100               	movlb	0	; () banked
  5048  0063E2  5976               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5049  0063E4  0100               	movlb	0	; () banked
  5050  0063E6  517A               	movf	(___ftge@ff2+2)& (0+255),w,b
  5051  0063E8  0100               	movlb	0	; () banked
  5052  0063EA  5977               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5053  0063EC  B0D8               	btfsc	status,0,c
  5054  0063EE  D002               	goto	l9806
  5055                           
  5056                           ; BSR set to: 0
  5057  0063F0  90D8               	bcf	status,0,c
  5058  0063F2  0012               	return	
  5059  0063F4                     l9806:
  5060                           
  5061                           ; BSR set to: 0
  5062  0063F4  80D8               	bsf	status,0,c
  5063                           
  5064                           ; BSR set to: 0
  5065  0063F6  0012               	return	
  5066                           
  5067                           ; BSR set to: 0
  5068                           
  5069                           ; BSR set to: 0
  5070  0063F8  0012               	return		;funcret
  5071  0063FA                     __end_of___ftge:
  5072                           	opt stack 0
  5073                           tblptru	equ	0xFF8
  5074                           tblptrh	equ	0xFF7
  5075                           tblptrl	equ	0xFF6
  5076                           tablat	equ	0xFF5
  5077                           intcon	equ	0xFF2
  5078                           postinc0	equ	0xFEE
  5079                           wreg	equ	0xFE8
  5080                           postdec1	equ	0xFE5
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _UseIRCode *****************
  5086 ;; Defined at:
  5087 ;;		line 276 in file "IR.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  Code            2   84[BANK0 ] PTR unsigned char 
  5090 ;;		 -> IR_New_Code(1), 
  5091 ;;  NEC             4   86[BANK0 ] unsigned long 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  i               1   94[BANK0 ] unsigned char 
  5094 ;;  found           1   93[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;		None               void
  5097 ;; Registers used:
  5098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5104 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;Total ram usage:       11 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:   11
  5111 ;; This function calls:
  5112 ;;		_DecodeNEC
  5113 ;;		_LEDTimerON
  5114 ;;		_ReadCodeButtons
  5115 ;;		_ReadIRpin
  5116 ;;		_ReadPushButton
  5117 ;;		_SendRF_Channel
  5118 ;;		_SyncGlobalToEEPROM
  5119 ;;		_delayUS
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text2
  5126  004724                     __ptext2:
  5127                           	opt stack 0
  5128  004724                     _UseIRCode:
  5129                           	opt stack 19
  5130                           
  5131                           ;IR.c: 278: unsigned char i;
  5132                           ;IR.c: 279: unsigned char found = 0;
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;incstack = 0
  5136  004724  0E00               	movlw	0
  5137  004726  0100               	movlb	0	; () banked
  5138  004728  6FBD               	movwf	UseIRCode@found& (0+255),b
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;IR.c: 281: if(*Code == 2 || *Code == 1)
  5142  00472A  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  5143  00472E  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  5144  004732  0E02               	movlw	2
  5145  004734  18DE               	xorwf	postinc2,w,c
  5146  004736  B4D8               	btfsc	status,2,c
  5147  004738  D007               	goto	l11472
  5148                           
  5149                           ; BSR set to: 0
  5150  00473A  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  5151  00473E  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  5152  004742  04DE               	decf	postinc2,w,c
  5153  004744  A4D8               	btfss	status,2,c
  5154  004746  D0EC               	goto	l11550
  5155  004748                     l11472:
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;IR.c: 282: {
  5159                           ;IR.c: 283: DecodeNEC(NEC, &IRaddress, &IRcommand);
  5160  004748  C0B6  F079         	movff	UseIRCode@NEC,DecodeNEC@Nec
  5161  00474C  C0B7  F07A         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  5162  004750  C0B8  F07B         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  5163  004754  C0B9  F07C         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  5164  004758  0ED3               	movlw	low _IRaddress
  5165  00475A  0100               	movlb	0	; () banked
  5166  00475C  6F7D               	movwf	DecodeNEC@address& (0+255),b
  5167  00475E  0E00               	movlw	high _IRaddress
  5168  004760  0100               	movlb	0	; () banked
  5169  004762  6F7E               	movwf	(DecodeNEC@address+1)& (0+255),b
  5170  004764  0ED4               	movlw	low _IRcommand
  5171  004766  0100               	movlb	0	; () banked
  5172  004768  6F7F               	movwf	DecodeNEC@command& (0+255),b
  5173  00476A  0E00               	movlw	high _IRcommand
  5174  00476C  0100               	movlb	0	; () banked
  5175  00476E  6F80               	movwf	(DecodeNEC@command+1)& (0+255),b
  5176  004770  ECD4  F033         	call	_DecodeNEC	;wreg free
  5177                           
  5178                           ;IR.c: 284: if(ReadPushButton())
  5179  004774  ECF1  F03B         	call	_ReadPushButton	;wreg free
  5180  004778  0900               	iorlw	0
  5181  00477A  B4D8               	btfsc	status,2,c
  5182  00477C  D055               	goto	l11512
  5183                           
  5184                           ;IR.c: 285: {
  5185                           ;IR.c: 286: Global.SWNECcode = NEC;
  5186  00477E  C0B6  F701         	movff	UseIRCode@NEC,_Global+1
  5187  004782  C0B7  F702         	movff	UseIRCode@NEC+1,_Global+2
  5188  004786  C0B8  F703         	movff	UseIRCode@NEC+2,_Global+3
  5189  00478A  C0B9  F704         	movff	UseIRCode@NEC+3,_Global+4
  5190                           
  5191                           ;IR.c: 287: if(SyncGlobalToEEPROM())
  5192  00478E  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
  5193  004792  0900               	iorlw	0
  5194  004794  B4D8               	btfsc	status,2,c
  5195  004796  D024               	goto	l11496
  5196                           
  5197                           ;IR.c: 288: {
  5198                           ;IR.c: 290: for(i =0;i<10;i++)
  5199  004798  0E00               	movlw	0
  5200  00479A  0100               	movlb	0	; () banked
  5201  00479C  6FBE               	movwf	UseIRCode@i& (0+255),b
  5202  00479E                     l11482:
  5203                           
  5204                           ; BSR set to: 0
  5205  00479E  0E09               	movlw	9
  5206  0047A0  0100               	movlb	0	; () banked
  5207  0047A2  65BE               	cpfsgt	UseIRCode@i& (0+255),b
  5208  0047A4  D001               	goto	l11486
  5209                           
  5210                           ; BSR set to: 0
  5211  0047A6  D0BC               	goto	l11550
  5212  0047A8                     l11486:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;IR.c: 291: {
  5216                           ;IR.c: 292: (LATC |= 0x04);
  5217  0047A8  848B               	bsf	3979,2,c	;volatile
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;IR.c: 293: delayUS(50000);
  5221  0047AA  0E50               	movlw	80
  5222  0047AC  0100               	movlb	0	; () banked
  5223  0047AE  6F75               	movwf	delayUS@US& (0+255),b
  5224  0047B0  0EC3               	movlw	195
  5225  0047B2  6F76               	movwf	(delayUS@US+1)& (0+255),b
  5226  0047B4  0E00               	movlw	0
  5227  0047B6  6F77               	movwf	(delayUS@US+2)& (0+255),b
  5228  0047B8  0E00               	movlw	0
  5229  0047BA  6F78               	movwf	(delayUS@US+3)& (0+255),b
  5230  0047BC  EC34  F039         	call	_delayUS	;wreg free
  5231                           
  5232                           ;IR.c: 294: (LATC &= ~0x04);
  5233  0047C0  948B               	bcf	3979,2,c	;volatile
  5234                           
  5235                           ;IR.c: 295: delayUS(50000);
  5236  0047C2  0E50               	movlw	80
  5237  0047C4  0100               	movlb	0	; () banked
  5238  0047C6  6F75               	movwf	delayUS@US& (0+255),b
  5239  0047C8  0EC3               	movlw	195
  5240  0047CA  6F76               	movwf	(delayUS@US+1)& (0+255),b
  5241  0047CC  0E00               	movlw	0
  5242  0047CE  6F77               	movwf	(delayUS@US+2)& (0+255),b
  5243  0047D0  0E00               	movlw	0
  5244  0047D2  6F78               	movwf	(delayUS@US+3)& (0+255),b
  5245  0047D4  EC34  F039         	call	_delayUS	;wreg free
  5246  0047D8  0100               	movlb	0	; () banked
  5247  0047DA  2BBE               	incf	UseIRCode@i& (0+255),f,b
  5248  0047DC  D7E0               	goto	l11482
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;IR.c: 296: }
  5252                           ;IR.c: 297: }
  5253                           
  5254                           ; BSR set to: 0
  5255  0047DE  D0A0               	goto	l11550
  5256  0047E0                     l11496:
  5257                           
  5258                           ;IR.c: 298: else
  5259                           ;IR.c: 299: {
  5260                           ;IR.c: 301: for(i =0;i<10;i++)
  5261  0047E0  0E00               	movlw	0
  5262  0047E2  0100               	movlb	0	; () banked
  5263  0047E4  6FBE               	movwf	UseIRCode@i& (0+255),b
  5264  0047E6                     l11498:
  5265                           
  5266                           ; BSR set to: 0
  5267  0047E6  0E09               	movlw	9
  5268  0047E8  0100               	movlb	0	; () banked
  5269  0047EA  65BE               	cpfsgt	UseIRCode@i& (0+255),b
  5270  0047EC  D001               	goto	l11502
  5271                           
  5272                           ; BSR set to: 0
  5273  0047EE  D098               	goto	l11550
  5274  0047F0                     l11502:
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;IR.c: 302: {
  5278                           ;IR.c: 303: (LATC |= 0x02);
  5279  0047F0  828B               	bsf	3979,1,c	;volatile
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;IR.c: 304: delayUS(50000);
  5283  0047F2  0E50               	movlw	80
  5284  0047F4  0100               	movlb	0	; () banked
  5285  0047F6  6F75               	movwf	delayUS@US& (0+255),b
  5286  0047F8  0EC3               	movlw	195
  5287  0047FA  6F76               	movwf	(delayUS@US+1)& (0+255),b
  5288  0047FC  0E00               	movlw	0
  5289  0047FE  6F77               	movwf	(delayUS@US+2)& (0+255),b
  5290  004800  0E00               	movlw	0
  5291  004802  6F78               	movwf	(delayUS@US+3)& (0+255),b
  5292  004804  EC34  F039         	call	_delayUS	;wreg free
  5293                           
  5294                           ;IR.c: 305: (LATC &= ~0x02);
  5295  004808  928B               	bcf	3979,1,c	;volatile
  5296                           
  5297                           ;IR.c: 306: delayUS(50000);
  5298  00480A  0E50               	movlw	80
  5299  00480C  0100               	movlb	0	; () banked
  5300  00480E  6F75               	movwf	delayUS@US& (0+255),b
  5301  004810  0EC3               	movlw	195
  5302  004812  6F76               	movwf	(delayUS@US+1)& (0+255),b
  5303  004814  0E00               	movlw	0
  5304  004816  6F77               	movwf	(delayUS@US+2)& (0+255),b
  5305  004818  0E00               	movlw	0
  5306  00481A  6F78               	movwf	(delayUS@US+3)& (0+255),b
  5307  00481C  EC34  F039         	call	_delayUS	;wreg free
  5308  004820  0100               	movlb	0	; () banked
  5309  004822  2BBE               	incf	UseIRCode@i& (0+255),f,b
  5310  004824  D7E0               	goto	l11498
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;IR.c: 307: }
  5314                           ;IR.c: 308: }
  5315                           ;IR.c: 309: }
  5316                           
  5317                           ; BSR set to: 0
  5318                           
  5319                           ; BSR set to: 0
  5320  004826  D07C               	goto	l11550
  5321  004828                     l11512:
  5322                           
  5323                           ;IR.c: 310: else
  5324                           ;IR.c: 311: {
  5325                           ;IR.c: 312: if(NEC == Global.SWNECcode)
  5326  004828  0100               	movlb	0	; () banked
  5327  00482A  51B6               	movf	UseIRCode@NEC& (0+255),w,b
  5328  00482C  0107               	movlb	7	; () banked
  5329  00482E  1901               	xorwf	(_Global+1)& (0+255),w,b
  5330  004830  E121               	bnz	l11522
  5331  004832  0100               	movlb	0	; () banked
  5332  004834  51B7               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  5333  004836  0107               	movlb	7	; () banked
  5334  004838  1902               	xorwf	(_Global+2)& (0+255),w,b
  5335  00483A  E11C               	bnz	l11522
  5336  00483C  0100               	movlb	0	; () banked
  5337  00483E  51B8               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  5338  004840  0107               	movlb	7	; () banked
  5339  004842  1903               	xorwf	(_Global+3)& (0+255),w,b
  5340  004844  E117               	bnz	l11522
  5341  004846  0100               	movlb	0	; () banked
  5342  004848  51B9               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  5343  00484A  0107               	movlb	7	; () banked
  5344  00484C  1904               	xorwf	(_Global+4)& (0+255),w,b
  5345  00484E  A4D8               	btfss	status,2,c
  5346  004850  D011               	goto	l11522
  5347                           
  5348                           ; BSR set to: 7
  5349                           ;IR.c: 313: {
  5350                           ;IR.c: 314: if(*Code == 2)
  5351  004852  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  5352  004856  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  5353  00485A  0E02               	movlw	2
  5354  00485C  18DE               	xorwf	postinc2,w,c
  5355  00485E  B4D8               	btfsc	status,2,c
  5356                           
  5357                           ; BSR set to: 7
  5358                           ;IR.c: 315: {
  5359                           ;IR.c: 316: (LATC |= 0x02);
  5360  004860  828B               	bsf	3979,1,c	;volatile
  5361                           
  5362                           ; BSR set to: 7
  5363                           ;IR.c: 317: }
  5364                           ;IR.c: 318: (LATC |= 0x04);
  5365  004862  848B               	bsf	3979,2,c	;volatile
  5366                           
  5367                           ; BSR set to: 7
  5368                           ;IR.c: 319: SendRF_Channel(ReadCodeButtons());
  5369  004864  EC5F  F039         	call	_ReadCodeButtons	;wreg free
  5370  004868  EC13  F021         	call	_SendRF_Channel
  5371                           
  5372                           ;IR.c: 320: found = 1;
  5373  00486C  0E01               	movlw	1
  5374  00486E  0100               	movlb	0	; () banked
  5375  004870  6FBD               	movwf	UseIRCode@found& (0+255),b
  5376                           
  5377                           ;IR.c: 321: }
  5378  004872  D04C               	goto	l11544
  5379  004874                     l11522:
  5380                           
  5381                           ;IR.c: 322: else
  5382                           ;IR.c: 323: {
  5383                           ;IR.c: 324: for(i=0; i < 20; i++)
  5384  004874  0E00               	movlw	0
  5385  004876  0100               	movlb	0	; () banked
  5386  004878  6FBE               	movwf	UseIRCode@i& (0+255),b
  5387  00487A                     l11524:
  5388                           
  5389                           ; BSR set to: 0
  5390  00487A  0E13               	movlw	19
  5391  00487C  0100               	movlb	0	; () banked
  5392  00487E  65BE               	cpfsgt	UseIRCode@i& (0+255),b
  5393  004880  D001               	goto	l11528
  5394                           
  5395                           ; BSR set to: 0
  5396  004882  D044               	goto	l11544
  5397  004884                     l11528:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;IR.c: 325: {
  5401                           ;IR.c: 326: if(IRaddress == Global.RemoteButton1RF[i][0])
  5402  004884  0100               	movlb	0	; () banked
  5403  004886  51BE               	movf	UseIRCode@i& (0+255),w,b
  5404  004888  0D02               	mullw	2
  5405  00488A  0E2E               	movlw	low (_Global+46)
  5406  00488C  24F3               	addwf	prodl,w,c
  5407  00488E  6ED9               	movwf	fsr2l,c
  5408  004890  0E07               	movlw	high (_Global+46)
  5409  004892  20F4               	addwfc	prodh,w,c
  5410  004894  6EDA               	movwf	fsr2h,c
  5411  004896  0100               	movlb	0	; () banked
  5412  004898  51D3               	movf	_IRaddress& (0+255),w,b
  5413  00489A  18DE               	xorwf	postinc2,w,c
  5414  00489C  A4D8               	btfss	status,2,c
  5415  00489E  D032               	goto	l11540
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;IR.c: 327: {
  5419                           ;IR.c: 328: if(IRcommand == Global.RemoteButton1RF[i][1])
  5420  0048A0  0100               	movlb	0	; () banked
  5421  0048A2  51BE               	movf	UseIRCode@i& (0+255),w,b
  5422  0048A4  0D02               	mullw	2
  5423  0048A6  0E00               	movlw	low _Global
  5424  0048A8  0100               	movlb	0	; () banked
  5425  0048AA  6FBA               	movwf	??_UseIRCode& (0+255),b
  5426  0048AC  0E07               	movlw	high _Global
  5427  0048AE  0100               	movlb	0	; () banked
  5428  0048B0  6FBB               	movwf	(??_UseIRCode+1)& (0+255),b
  5429  0048B2  0E2E               	movlw	46
  5430  0048B4  0100               	movlb	0	; () banked
  5431  0048B6  27BA               	addwf	??_UseIRCode& (0+255),f,b
  5432  0048B8  0E00               	movlw	0
  5433  0048BA  23BB               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  5434  0048BC  50F3               	movf	prodl,w,c
  5435  0048BE  0100               	movlb	0	; () banked
  5436  0048C0  27BA               	addwf	??_UseIRCode& (0+255),f,b
  5437  0048C2  50F4               	movf	prodh,w,c
  5438  0048C4  0100               	movlb	0	; () banked
  5439  0048C6  23BB               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  5440  0048C8  0E01               	movlw	1
  5441  0048CA  0100               	movlb	0	; () banked
  5442  0048CC  25BA               	addwf	??_UseIRCode& (0+255),w,b
  5443  0048CE  6ED9               	movwf	fsr2l,c
  5444  0048D0  0E00               	movlw	0
  5445  0048D2  0100               	movlb	0	; () banked
  5446  0048D4  21BB               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  5447  0048D6  6EDA               	movwf	fsr2h,c
  5448  0048D8  0100               	movlb	0	; () banked
  5449  0048DA  51D4               	movf	_IRcommand& (0+255),w,b
  5450  0048DC  18DE               	xorwf	postinc2,w,c
  5451  0048DE  A4D8               	btfss	status,2,c
  5452  0048E0  D011               	goto	l11540
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;IR.c: 329: {
  5456                           ;IR.c: 330: if(*Code == 2)
  5457  0048E2  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  5458  0048E6  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  5459  0048EA  0E02               	movlw	2
  5460  0048EC  18DE               	xorwf	postinc2,w,c
  5461  0048EE  B4D8               	btfsc	status,2,c
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;IR.c: 331: {
  5465                           ;IR.c: 332: (LATC |= 0x02);
  5466  0048F0  828B               	bsf	3979,1,c	;volatile
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;IR.c: 333: }
  5470                           ;IR.c: 334: (LATC |= 0x04);
  5471  0048F2  848B               	bsf	3979,2,c	;volatile
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;IR.c: 335: SendRF_Channel(i);
  5475  0048F4  0100               	movlb	0	; () banked
  5476  0048F6  51BE               	movf	UseIRCode@i& (0+255),w,b
  5477  0048F8  EC13  F021         	call	_SendRF_Channel
  5478                           
  5479                           ;IR.c: 336: found = 1;
  5480  0048FC  0E01               	movlw	1
  5481  0048FE  0100               	movlb	0	; () banked
  5482  004900  6FBD               	movwf	UseIRCode@found& (0+255),b
  5483                           
  5484                           ; BSR set to: 0
  5485  004902  D000               	goto	l11540
  5486  004904                     l11540:
  5487                           
  5488                           ; BSR set to: 0
  5489  004904  0100               	movlb	0	; () banked
  5490  004906  2BBE               	incf	UseIRCode@i& (0+255),f,b
  5491  004908  D7B8               	goto	l11524
  5492                           
  5493                           ; BSR set to: 0
  5494                           
  5495                           ; BSR set to: 0
  5496  00490A  D000               	goto	l11544
  5497  00490C                     l11544:
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;IR.c: 337: }
  5501                           ;IR.c: 338: }
  5502                           ;IR.c: 339: }
  5503                           ;IR.c: 340: }
  5504                           ;IR.c: 342: if(found == 0)
  5505  00490C  0100               	movlb	0	; () banked
  5506  00490E  51BD               	movf	UseIRCode@found& (0+255),w,b
  5507  004910  0100               	movlb	0	; () banked
  5508  004912  A4D8               	btfss	status,2,c
  5509  004914  D002               	goto	l11548
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;IR.c: 343: {
  5513                           ;IR.c: 344: (LATC |= 0x02);
  5514  004916  828B               	bsf	3979,1,c	;volatile
  5515  004918  D000               	goto	l11548
  5516  00491A                     l11548:
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;IR.c: 345: }
  5520                           ;IR.c: 347: LEDTimerON();
  5521  00491A  EC30  F03C         	call	_LEDTimerON	;wreg free
  5522  00491E  D000               	goto	l11550
  5523  004920                     l11550:
  5524                           
  5525                           ;IR.c: 348: }
  5526                           ;IR.c: 349: }
  5527                           ;IR.c: 350: *Code = 0;
  5528  004920  C0B4  FFD9         	movff	UseIRCode@Code,fsr2l
  5529  004924  C0B5  FFDA         	movff	UseIRCode@Code+1,fsr2h
  5530  004928  0E00               	movlw	0
  5531  00492A  6EDF               	movwf	indf2,c
  5532                           
  5533                           ;IR.c: 351: IRpinOLD = ReadIRpin();
  5534  00492C  EC0D  F03C         	call	_ReadIRpin	;wreg free
  5535  004930  6E2F               	movwf	_IRpinOLD,c
  5536                           
  5537                           ;IR.c: 352: INTCONbits.RBIF = 0;
  5538  004932  90F2               	bcf	intcon,0,c	;volatile
  5539                           
  5540                           ;IR.c: 353: (IOCBbits.IOCB4 = 1);
  5541  004934  887D               	bsf	3965,4,c	;volatile
  5542                           
  5543                           ;IR.c: 354: INTCONbits.RBIE = 1;
  5544  004936  86F2               	bsf	intcon,3,c	;volatile
  5545  004938  0012               	return		;funcret
  5546  00493A                     __end_of_UseIRCode:
  5547                           	opt stack 0
  5548                           tblptru	equ	0xFF8
  5549                           tblptrh	equ	0xFF7
  5550                           tblptrl	equ	0xFF6
  5551                           tablat	equ	0xFF5
  5552                           prodh	equ	0xFF4
  5553                           prodl	equ	0xFF3
  5554                           intcon	equ	0xFF2
  5555                           postinc0	equ	0xFEE
  5556                           wreg	equ	0xFE8
  5557                           postdec1	equ	0xFE5
  5558                           fsr1h	equ	0xFE2
  5559                           fsr1l	equ	0xFE1
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           fsr2h	equ	0xFDA
  5563                           fsr2l	equ	0xFD9
  5564                           status	equ	0xFD8
  5565                           
  5566 ;; *************** function _SendRF_Channel *****************
  5567 ;; Defined at:
  5568 ;;		line 162 in file "RF.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  channel         1    wreg     unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  channel         1   32[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;		None               void
  5575 ;; Registers used:
  5576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;Total ram usage:        1 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    8
  5589 ;; This function calls:
  5590 ;;		_SendRF_wait
  5591 ;; This function is called by:
  5592 ;;		_UseIRCode
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text3
  5597  004226                     __ptext3:
  5598                           	opt stack 0
  5599  004226                     _SendRF_Channel:
  5600                           	opt stack 21
  5601                           
  5602                           ;incstack = 0
  5603                           ;SendRF_Channel@channel stored from wreg
  5604  004226  0100               	movlb	0	; () banked
  5605  004228  6F80               	movwf	SendRF_Channel@channel& (0+255),b
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;RF.c: 164: switch (channel)
  5609  00422A  D121               	goto	l8796
  5610  00422C                     l8738:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;RF.c: 168: SendRF_wait(Conf1_ChannelD,1,12,8);
  5614  00422C  0EBD               	movlw	low _Conf1_ChannelD
  5615  00422E  0100               	movlb	0	; () banked
  5616  004230  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5617  004232  0E04               	movlw	high _Conf1_ChannelD
  5618  004234  0100               	movlb	0	; () banked
  5619  004236  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5620  004238  0E01               	movlw	1
  5621  00423A  0100               	movlb	0	; () banked
  5622  00423C  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5623  00423E  0E0C               	movlw	12
  5624  004240  0100               	movlb	0	; () banked
  5625  004242  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5626  004244  0E08               	movlw	8
  5627  004246  0100               	movlb	0	; () banked
  5628  004248  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5629  00424A  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5630                           
  5631                           ;RF.c: 169: break;
  5632  00424E  0012               	return	
  5633  004250                     l8740:
  5634                           
  5635                           ;RF.c: 172: SendRF_wait(Conf1_ChannelE,1,12,8);
  5636  004250  0EC9               	movlw	low _Conf1_ChannelE
  5637  004252  0100               	movlb	0	; () banked
  5638  004254  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5639  004256  0E04               	movlw	high _Conf1_ChannelE
  5640  004258  0100               	movlb	0	; () banked
  5641  00425A  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5642  00425C  0E01               	movlw	1
  5643  00425E  0100               	movlb	0	; () banked
  5644  004260  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5645  004262  0E0C               	movlw	12
  5646  004264  0100               	movlb	0	; () banked
  5647  004266  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5648  004268  0E08               	movlw	8
  5649  00426A  0100               	movlb	0	; () banked
  5650  00426C  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5651  00426E  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5652                           
  5653                           ;RF.c: 173: break;
  5654  004272  0012               	return	
  5655  004274                     l8742:
  5656                           
  5657                           ;RF.c: 176: SendRF_wait(Conf1_ChannelF,1,12,8);
  5658  004274  0ED5               	movlw	low _Conf1_ChannelF
  5659  004276  0100               	movlb	0	; () banked
  5660  004278  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5661  00427A  0E04               	movlw	high _Conf1_ChannelF
  5662  00427C  0100               	movlb	0	; () banked
  5663  00427E  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5664  004280  0E01               	movlw	1
  5665  004282  0100               	movlb	0	; () banked
  5666  004284  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5667  004286  0E0C               	movlw	12
  5668  004288  0100               	movlb	0	; () banked
  5669  00428A  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5670  00428C  0E08               	movlw	8
  5671  00428E  0100               	movlb	0	; () banked
  5672  004290  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5673  004292  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5674                           
  5675                           ;RF.c: 177: break;
  5676  004296  0012               	return	
  5677  004298                     l8744:
  5678                           
  5679                           ;RF.c: 180: if(Conf2_ChannelB_Status)
  5680  004298  0100               	movlb	0	; () banked
  5681  00429A  51C4               	movf	_Conf2_ChannelB_Status& (0+255),w,b
  5682  00429C  0100               	movlb	0	; () banked
  5683  00429E  B4D8               	btfsc	status,2,c
  5684  0042A0  D015               	goto	l8750
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;RF.c: 181: {
  5688                           ;RF.c: 182: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  5689  0042A2  0E00               	movlw	low _Conf2_ChannelB_OFF
  5690  0042A4  0100               	movlb	0	; () banked
  5691  0042A6  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5692  0042A8  0E04               	movlw	high _Conf2_ChannelB_OFF
  5693  0042AA  0100               	movlb	0	; () banked
  5694  0042AC  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5695  0042AE  0E02               	movlw	2
  5696  0042B0  0100               	movlb	0	; () banked
  5697  0042B2  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5698  0042B4  0E10               	movlw	16
  5699  0042B6  0100               	movlb	0	; () banked
  5700  0042B8  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5701  0042BA  0E08               	movlw	8
  5702  0042BC  0100               	movlb	0	; () banked
  5703  0042BE  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5704  0042C0  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5705                           
  5706                           ;RF.c: 183: Conf2_ChannelB_Status = 0;
  5707  0042C4  0E00               	movlw	0
  5708  0042C6  0100               	movlb	0	; () banked
  5709  0042C8  6FC4               	movwf	_Conf2_ChannelB_Status& (0+255),b
  5710                           
  5711                           ;RF.c: 184: }
  5712  0042CA  0012               	return	
  5713  0042CC                     l8750:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;RF.c: 185: else
  5717                           ;RF.c: 186: {
  5718                           ;RF.c: 187: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  5719  0042CC  0E10               	movlw	low _Conf2_ChannelB_ON
  5720  0042CE  0100               	movlb	0	; () banked
  5721  0042D0  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5722  0042D2  0E04               	movlw	high _Conf2_ChannelB_ON
  5723  0042D4  0100               	movlb	0	; () banked
  5724  0042D6  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5725  0042D8  0E02               	movlw	2
  5726  0042DA  0100               	movlb	0	; () banked
  5727  0042DC  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5728  0042DE  0E10               	movlw	16
  5729  0042E0  0100               	movlb	0	; () banked
  5730  0042E2  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5731  0042E4  0E08               	movlw	8
  5732  0042E6  0100               	movlb	0	; () banked
  5733  0042E8  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5734  0042EA  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5735                           
  5736                           ;RF.c: 188: Conf2_ChannelB_Status = 1;
  5737  0042EE  0E01               	movlw	1
  5738  0042F0  0100               	movlb	0	; () banked
  5739  0042F2  6FC4               	movwf	_Conf2_ChannelB_Status& (0+255),b
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;RF.c: 189: }
  5743                           ;RF.c: 190: break;
  5744  0042F4  0012               	return	
  5745  0042F6                     l8754:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;RF.c: 193: if(Conf2_ChannelD_Status)
  5749  0042F6  0100               	movlb	0	; () banked
  5750  0042F8  51C5               	movf	_Conf2_ChannelD_Status& (0+255),w,b
  5751  0042FA  0100               	movlb	0	; () banked
  5752  0042FC  B4D8               	btfsc	status,2,c
  5753  0042FE  D015               	goto	l8760
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;RF.c: 194: {
  5757                           ;RF.c: 195: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  5758  004300  0E20               	movlw	low _Conf2_ChannelD_OFF
  5759  004302  0100               	movlb	0	; () banked
  5760  004304  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5761  004306  0E04               	movlw	high _Conf2_ChannelD_OFF
  5762  004308  0100               	movlb	0	; () banked
  5763  00430A  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5764  00430C  0E02               	movlw	2
  5765  00430E  0100               	movlb	0	; () banked
  5766  004310  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5767  004312  0E10               	movlw	16
  5768  004314  0100               	movlb	0	; () banked
  5769  004316  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5770  004318  0E08               	movlw	8
  5771  00431A  0100               	movlb	0	; () banked
  5772  00431C  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5773  00431E  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5774                           
  5775                           ;RF.c: 196: Conf2_ChannelD_Status = 0;
  5776  004322  0E00               	movlw	0
  5777  004324  0100               	movlb	0	; () banked
  5778  004326  6FC5               	movwf	_Conf2_ChannelD_Status& (0+255),b
  5779                           
  5780                           ;RF.c: 197: }
  5781  004328  0012               	return	
  5782  00432A                     l8760:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;RF.c: 198: else
  5786                           ;RF.c: 199: {
  5787                           ;RF.c: 200: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  5788  00432A  0E30               	movlw	low _Conf2_ChannelD_ON
  5789  00432C  0100               	movlb	0	; () banked
  5790  00432E  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5791  004330  0E04               	movlw	high _Conf2_ChannelD_ON
  5792  004332  0100               	movlb	0	; () banked
  5793  004334  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5794  004336  0E02               	movlw	2
  5795  004338  0100               	movlb	0	; () banked
  5796  00433A  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5797  00433C  0E10               	movlw	16
  5798  00433E  0100               	movlb	0	; () banked
  5799  004340  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5800  004342  0E08               	movlw	8
  5801  004344  0100               	movlb	0	; () banked
  5802  004346  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5803  004348  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5804                           
  5805                           ;RF.c: 201: Conf2_ChannelD_Status = 1;
  5806  00434C  0E01               	movlw	1
  5807  00434E  0100               	movlb	0	; () banked
  5808  004350  6FC5               	movwf	_Conf2_ChannelD_Status& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;RF.c: 202: }
  5812                           ;RF.c: 203: break;
  5813  004352  0012               	return	
  5814  004354                     l8764:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;RF.c: 206: if(Conf2_ChannelH_1_Status)
  5818  004354  0100               	movlb	0	; () banked
  5819  004356  51C6               	movf	_Conf2_ChannelH_1_Status& (0+255),w,b
  5820  004358  0100               	movlb	0	; () banked
  5821  00435A  B4D8               	btfsc	status,2,c
  5822  00435C  D015               	goto	l8770
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;RF.c: 207: {
  5826                           ;RF.c: 208: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  5827  00435E  0E50               	movlw	low _Conf2_ChannelH_1_ON
  5828  004360  0100               	movlb	0	; () banked
  5829  004362  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5830  004364  0E04               	movlw	high _Conf2_ChannelH_1_ON
  5831  004366  0100               	movlb	0	; () banked
  5832  004368  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5833  00436A  0E02               	movlw	2
  5834  00436C  0100               	movlb	0	; () banked
  5835  00436E  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5836  004370  0E10               	movlw	16
  5837  004372  0100               	movlb	0	; () banked
  5838  004374  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5839  004376  0E08               	movlw	8
  5840  004378  0100               	movlb	0	; () banked
  5841  00437A  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5842  00437C  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5843                           
  5844                           ;RF.c: 209: Conf2_ChannelH_1_Status = 0;
  5845  004380  0E00               	movlw	0
  5846  004382  0100               	movlb	0	; () banked
  5847  004384  6FC6               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
  5848                           
  5849                           ;RF.c: 210: }
  5850  004386  0012               	return	
  5851  004388                     l8770:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;RF.c: 211: else
  5855                           ;RF.c: 212: {
  5856                           ;RF.c: 213: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  5857  004388  0E40               	movlw	low _Conf2_ChannelH_1_OFF
  5858  00438A  0100               	movlb	0	; () banked
  5859  00438C  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5860  00438E  0E04               	movlw	high _Conf2_ChannelH_1_OFF
  5861  004390  0100               	movlb	0	; () banked
  5862  004392  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5863  004394  0E02               	movlw	2
  5864  004396  0100               	movlb	0	; () banked
  5865  004398  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5866  00439A  0E10               	movlw	16
  5867  00439C  0100               	movlb	0	; () banked
  5868  00439E  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5869  0043A0  0E08               	movlw	8
  5870  0043A2  0100               	movlb	0	; () banked
  5871  0043A4  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5872  0043A6  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5873                           
  5874                           ;RF.c: 214: Conf2_ChannelH_1_Status = 1;
  5875  0043AA  0E01               	movlw	1
  5876  0043AC  0100               	movlb	0	; () banked
  5877  0043AE  6FC6               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;RF.c: 215: }
  5881                           ;RF.c: 216: break;
  5882  0043B0  0012               	return	
  5883  0043B2                     l8774:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;RF.c: 219: if(Conf2_ChannelH_2_Status)
  5887  0043B2  0100               	movlb	0	; () banked
  5888  0043B4  51C7               	movf	_Conf2_ChannelH_2_Status& (0+255),w,b
  5889  0043B6  0100               	movlb	0	; () banked
  5890  0043B8  B4D8               	btfsc	status,2,c
  5891  0043BA  D015               	goto	l8780
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;RF.c: 220: {
  5895                           ;RF.c: 221: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  5896  0043BC  0E70               	movlw	low _Conf2_ChannelH_2_ON
  5897  0043BE  0100               	movlb	0	; () banked
  5898  0043C0  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5899  0043C2  0E04               	movlw	high _Conf2_ChannelH_2_ON
  5900  0043C4  0100               	movlb	0	; () banked
  5901  0043C6  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5902  0043C8  0E02               	movlw	2
  5903  0043CA  0100               	movlb	0	; () banked
  5904  0043CC  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5905  0043CE  0E10               	movlw	16
  5906  0043D0  0100               	movlb	0	; () banked
  5907  0043D2  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5908  0043D4  0E08               	movlw	8
  5909  0043D6  0100               	movlb	0	; () banked
  5910  0043D8  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5911  0043DA  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5912                           
  5913                           ;RF.c: 222: Conf2_ChannelH_2_Status = 0;
  5914  0043DE  0E00               	movlw	0
  5915  0043E0  0100               	movlb	0	; () banked
  5916  0043E2  6FC7               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
  5917                           
  5918                           ;RF.c: 223: }
  5919  0043E4  0012               	return	
  5920  0043E6                     l8780:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;RF.c: 224: else
  5924                           ;RF.c: 225: {
  5925                           ;RF.c: 226: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  5926  0043E6  0E60               	movlw	low _Conf2_ChannelH_2_OFF
  5927  0043E8  0100               	movlb	0	; () banked
  5928  0043EA  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5929  0043EC  0E04               	movlw	high _Conf2_ChannelH_2_OFF
  5930  0043EE  0100               	movlb	0	; () banked
  5931  0043F0  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5932  0043F2  0E02               	movlw	2
  5933  0043F4  0100               	movlb	0	; () banked
  5934  0043F6  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5935  0043F8  0E10               	movlw	16
  5936  0043FA  0100               	movlb	0	; () banked
  5937  0043FC  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5938  0043FE  0E08               	movlw	8
  5939  004400  0100               	movlb	0	; () banked
  5940  004402  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5941  004404  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5942                           
  5943                           ;RF.c: 227: Conf2_ChannelH_2_Status = 1;
  5944  004408  0E01               	movlw	1
  5945  00440A  0100               	movlb	0	; () banked
  5946  00440C  6FC7               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;RF.c: 228: }
  5950                           ;RF.c: 229: break;
  5951  00440E  0012               	return	
  5952  004410                     l8784:
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;RF.c: 232: if(Conf2_ChannelH_3_Status)
  5956  004410  0100               	movlb	0	; () banked
  5957  004412  51C8               	movf	_Conf2_ChannelH_3_Status& (0+255),w,b
  5958  004414  0100               	movlb	0	; () banked
  5959  004416  B4D8               	btfsc	status,2,c
  5960  004418  D015               	goto	l8790
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;RF.c: 233: {
  5964                           ;RF.c: 234: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  5965  00441A  0E80               	movlw	low _Conf2_ChannelH_3_ON
  5966  00441C  0100               	movlb	0	; () banked
  5967  00441E  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5968  004420  0E04               	movlw	high _Conf2_ChannelH_3_ON
  5969  004422  0100               	movlb	0	; () banked
  5970  004424  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  5971  004426  0E02               	movlw	2
  5972  004428  0100               	movlb	0	; () banked
  5973  00442A  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  5974  00442C  0E10               	movlw	16
  5975  00442E  0100               	movlb	0	; () banked
  5976  004430  6F7E               	movwf	SendRF_wait@size& (0+255),b
  5977  004432  0E08               	movlw	8
  5978  004434  0100               	movlb	0	; () banked
  5979  004436  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  5980  004438  EC8F  F03A         	call	_SendRF_wait	;wreg free
  5981                           
  5982                           ;RF.c: 235: Conf2_ChannelH_3_Status = 0;
  5983  00443C  0E00               	movlw	0
  5984  00443E  0100               	movlb	0	; () banked
  5985  004440  6FC8               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
  5986                           
  5987                           ;RF.c: 236: }
  5988  004442  0012               	return	
  5989  004444                     l8790:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;RF.c: 237: else
  5993                           ;RF.c: 238: {
  5994                           ;RF.c: 239: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,8);
  5995  004444  0EE2               	movlw	low _Conf2_ChannelH_3_OFF
  5996  004446  0100               	movlb	0	; () banked
  5997  004448  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  5998  00444A  0E05               	movlw	high _Conf2_ChannelH_3_OFF
  5999  00444C  0100               	movlb	0	; () banked
  6000  00444E  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6001  004450  0E02               	movlw	2
  6002  004452  0100               	movlb	0	; () banked
  6003  004454  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6004  004456  0E10               	movlw	16
  6005  004458  0100               	movlb	0	; () banked
  6006  00445A  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6007  00445C  0E08               	movlw	8
  6008  00445E  0100               	movlb	0	; () banked
  6009  004460  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6010  004462  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6011                           
  6012                           ;RF.c: 240: Conf2_ChannelH_3_Status = 1;
  6013  004466  0E01               	movlw	1
  6014  004468  0100               	movlb	0	; () banked
  6015  00446A  6FC8               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;RF.c: 245: }
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;RF.c: 244: break;
  6022                           
  6023                           ;RF.c: 243: default:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;RF.c: 241: }
  6027                           ;RF.c: 242: break;
  6028  00446C  0012               	return	
  6029  00446E                     l8796:
  6030                           
  6031                           ; BSR set to: 0
  6032  00446E  0100               	movlb	0	; () banked
  6033  004470  5180               	movf	SendRF_Channel@channel& (0+255),w,b
  6034                           
  6035                           ; Switch size 1, requested type "space"
  6036                           ; Number of cases is 8, Range of values is 0 to 7
  6037                           ; switch strategies available:
  6038                           ; Name         Instructions Cycles
  6039                           ; simple_byte           25    13 (average)
  6040                           ;	Chosen strategy is simple_byte
  6041  004472  0A00               	xorlw	0	; case 0
  6042  004474  B4D8               	btfsc	status,2,c
  6043  004476  D6DA               	goto	l8738
  6044  004478  0A01               	xorlw	1	; case 1
  6045  00447A  B4D8               	btfsc	status,2,c
  6046  00447C  D6E9               	goto	l8740
  6047  00447E  0A03               	xorlw	3	; case 2
  6048  004480  B4D8               	btfsc	status,2,c
  6049  004482  D6F8               	goto	l8742
  6050  004484  0A01               	xorlw	1	; case 3
  6051  004486  B4D8               	btfsc	status,2,c
  6052  004488  D707               	goto	l8744
  6053  00448A  0A07               	xorlw	7	; case 4
  6054  00448C  B4D8               	btfsc	status,2,c
  6055  00448E  D733               	goto	l8754
  6056  004490  0A01               	xorlw	1	; case 5
  6057  004492  B4D8               	btfsc	status,2,c
  6058  004494  D75F               	goto	l8764
  6059  004496  0A03               	xorlw	3	; case 6
  6060  004498  B4D8               	btfsc	status,2,c
  6061  00449A  D78B               	goto	l8774
  6062  00449C  0A01               	xorlw	1	; case 7
  6063  00449E  A4D8               	btfss	status,2,c
  6064  0044A0  0012               	return	
  6065  0044A2  D7B6               	goto	l8784
  6066                           
  6067                           ; BSR set to: 0
  6068  0044A4  0012               	return		;funcret
  6069  0044A6                     __end_of_SendRF_Channel:
  6070                           	opt stack 0
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           intcon	equ	0xFF2
  6078                           postinc0	equ	0xFEE
  6079                           wreg	equ	0xFE8
  6080                           postdec1	equ	0xFE5
  6081                           fsr1h	equ	0xFE2
  6082                           fsr1l	equ	0xFE1
  6083                           indf2	equ	0xFDF
  6084                           postinc2	equ	0xFDE
  6085                           fsr2h	equ	0xFDA
  6086                           fsr2l	equ	0xFD9
  6087                           status	equ	0xFD8
  6088                           
  6089 ;; *************** function _ReadPushButton *****************
  6090 ;; Defined at:
  6091 ;;		line 50 in file "Button.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      unsigned char 
  6098 ;; Registers used:
  6099 ;;		wreg
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;Total ram usage:        0 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    6
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_UseIRCode
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text4
  6120  0077E2                     __ptext4:
  6121                           	opt stack 0
  6122  0077E2                     _ReadPushButton:
  6123                           	opt stack 23
  6124                           
  6125                           ;Button.c: 53: if((PORTC & 0x01) != 0x01)
  6126                           
  6127                           ;incstack = 0
  6128  0077E2  B082               	btfsc	3970,0,c	;volatile
  6129  0077E4  D002               	goto	l8706
  6130                           
  6131                           ;Button.c: 54: {
  6132                           ;Button.c: 55: return 1;
  6133  0077E6  0E01               	movlw	1
  6134  0077E8  0012               	return	
  6135  0077EA                     l8706:
  6136                           
  6137                           ;Button.c: 56: }
  6138                           ;Button.c: 57: return 0;
  6139  0077EA  0E00               	movlw	0
  6140  0077EC  0012               	return	
  6141  0077EE  0012               	return		;funcret
  6142  0077F0                     __end_of_ReadPushButton:
  6143                           	opt stack 0
  6144                           tblptru	equ	0xFF8
  6145                           tblptrh	equ	0xFF7
  6146                           tblptrl	equ	0xFF6
  6147                           tablat	equ	0xFF5
  6148                           prodh	equ	0xFF4
  6149                           prodl	equ	0xFF3
  6150                           intcon	equ	0xFF2
  6151                           postinc0	equ	0xFEE
  6152                           wreg	equ	0xFE8
  6153                           postdec1	equ	0xFE5
  6154                           fsr1h	equ	0xFE2
  6155                           fsr1l	equ	0xFE1
  6156                           indf2	equ	0xFDF
  6157                           postinc2	equ	0xFDE
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function _ReadCodeButtons *****************
  6163 ;; Defined at:
  6164 ;;		line 65 in file "Button.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  temp            1   30[BANK0 ] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      unsigned char 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        1 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    7
  6185 ;; This function calls:
  6186 ;;		_delayUS
  6187 ;; This function is called by:
  6188 ;;		_UseIRCode
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text5
  6193  0072BE                     __ptext5:
  6194                           	opt stack 0
  6195  0072BE                     _ReadCodeButtons:
  6196                           	opt stack 22
  6197                           
  6198                           ;Button.c: 67: unsigned char temp = 0;
  6199                           
  6200                           ;incstack = 0
  6201  0072BE  0E00               	movlw	0
  6202  0072C0  0100               	movlb	0	; () banked
  6203  0072C2  6F7E               	movwf	ReadCodeButtons@temp& (0+255),b
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;Button.c: 69: (LATC &= ~0x10);
  6207  0072C4  988B               	bcf	3979,4,c	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;Button.c: 70: delayUS(5);
  6211  0072C6  0E05               	movlw	5
  6212  0072C8  0100               	movlb	0	; () banked
  6213  0072CA  6F75               	movwf	delayUS@US& (0+255),b
  6214  0072CC  0E00               	movlw	0
  6215  0072CE  6F76               	movwf	(delayUS@US+1)& (0+255),b
  6216  0072D0  0E00               	movlw	0
  6217  0072D2  6F77               	movwf	(delayUS@US+2)& (0+255),b
  6218  0072D4  0E00               	movlw	0
  6219  0072D6  6F78               	movwf	(delayUS@US+3)& (0+255),b
  6220  0072D8  EC34  F039         	call	_delayUS	;wreg free
  6221                           
  6222                           ;Button.c: 73: if((PORTB & 0x01) != 0x01)
  6223  0072DC  B081               	btfsc	3969,0,c	;volatile
  6224  0072DE  D004               	goto	l11316
  6225                           
  6226                           ;Button.c: 74: {
  6227                           ;Button.c: 75: temp +=8;
  6228  0072E0  0E08               	movlw	8
  6229  0072E2  0100               	movlb	0	; () banked
  6230  0072E4  277E               	addwf	ReadCodeButtons@temp& (0+255),f,b
  6231  0072E6  D000               	goto	l11316
  6232  0072E8                     l11316:
  6233                           
  6234                           ;Button.c: 76: }
  6235                           ;Button.c: 77: if((PORTB & 0x02) != 0x02)
  6236  0072E8  B281               	btfsc	3969,1,c	;volatile
  6237  0072EA  D004               	goto	l11320
  6238                           
  6239                           ;Button.c: 78: {
  6240                           ;Button.c: 79: temp +=4;
  6241  0072EC  0E04               	movlw	4
  6242  0072EE  0100               	movlb	0	; () banked
  6243  0072F0  277E               	addwf	ReadCodeButtons@temp& (0+255),f,b
  6244  0072F2  D000               	goto	l11320
  6245  0072F4                     l11320:
  6246                           
  6247                           ;Button.c: 80: }
  6248                           ;Button.c: 81: if((PORTB & 0x04) != 0x04)
  6249  0072F4  B481               	btfsc	3969,2,c	;volatile
  6250  0072F6  D004               	goto	l11324
  6251                           
  6252                           ;Button.c: 82: {
  6253                           ;Button.c: 83: temp +=2;
  6254  0072F8  0E02               	movlw	2
  6255  0072FA  0100               	movlb	0	; () banked
  6256  0072FC  277E               	addwf	ReadCodeButtons@temp& (0+255),f,b
  6257  0072FE  D000               	goto	l11324
  6258  007300                     l11324:
  6259                           
  6260                           ;Button.c: 84: }
  6261                           ;Button.c: 85: if((PORTB & 0x08) != 0x08)
  6262  007300  B681               	btfsc	3969,3,c	;volatile
  6263  007302  D002               	goto	l1354
  6264                           
  6265                           ;Button.c: 86: {
  6266                           ;Button.c: 87: temp +=1;
  6267  007304  0100               	movlb	0	; () banked
  6268  007306  2B7E               	incf	ReadCodeButtons@temp& (0+255),f,b
  6269  007308                     l1354:
  6270                           
  6271                           ;Button.c: 88: }
  6272                           ;Button.c: 89: (LATC |= 0x10);
  6273  007308  888B               	bsf	3979,4,c	;volatile
  6274                           
  6275                           ;Button.c: 90: return temp;
  6276  00730A  0100               	movlb	0	; () banked
  6277  00730C  517E               	movf	ReadCodeButtons@temp& (0+255),w,b
  6278  00730E  0012               	return	
  6279                           
  6280                           ; BSR set to: 0
  6281                           
  6282                           ; BSR set to: 0
  6283  007310  0012               	return		;funcret
  6284  007312                     __end_of_ReadCodeButtons:
  6285                           	opt stack 0
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           postinc0	equ	0xFEE
  6294                           wreg	equ	0xFE8
  6295                           postdec1	equ	0xFE5
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _LEDTimerON *****************
  6305 ;; Defined at:
  6306 ;;		line 132 in file "Timer.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;		None               void
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    7
  6327 ;; This function calls:
  6328 ;;		_ResetTimer1
  6329 ;; This function is called by:
  6330 ;;		_UseIRCode
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text6
  6335  007860                     __ptext6:
  6336                           	opt stack 0
  6337  007860                     _LEDTimerON:
  6338                           	opt stack 22
  6339                           
  6340                           ;Timer.c: 134: Timer1_Postscaler = 0;
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;incstack = 0
  6344  007860  0E00               	movlw	0
  6345  007862  6E38               	movwf	_Timer1_Postscaler,c
  6346                           
  6347                           ;Timer.c: 135: ResetTimer1();
  6348  007864  EC36  F03C         	call	_ResetTimer1	;wreg free
  6349                           
  6350                           ;Timer.c: 136: (T1CONbits.TMR1ON = TRUE);
  6351  007868  80CD               	bsf	4045,0,c	;volatile
  6352  00786A  0012               	return		;funcret
  6353  00786C                     __end_of_LEDTimerON:
  6354                           	opt stack 0
  6355                           tblptru	equ	0xFF8
  6356                           tblptrh	equ	0xFF7
  6357                           tblptrl	equ	0xFF6
  6358                           tablat	equ	0xFF5
  6359                           prodh	equ	0xFF4
  6360                           prodl	equ	0xFF3
  6361                           intcon	equ	0xFF2
  6362                           postinc0	equ	0xFEE
  6363                           wreg	equ	0xFE8
  6364                           postdec1	equ	0xFE5
  6365                           fsr1h	equ	0xFE2
  6366                           fsr1l	equ	0xFE1
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           fsr2h	equ	0xFDA
  6370                           fsr2l	equ	0xFD9
  6371                           status	equ	0xFD8
  6372                           
  6373 ;; *************** function _ResetTimer1 *****************
  6374 ;; Defined at:
  6375 ;;		line 106 in file "Timer.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;		None               void
  6382 ;; Registers used:
  6383 ;;		wreg, status,2
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    6
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_LEDTimerON
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text7
  6404  00786C                     __ptext7:
  6405                           	opt stack 0
  6406  00786C                     _ResetTimer1:
  6407                           	opt stack 22
  6408                           
  6409                           ;Timer.c: 112: TMR1H = 0;
  6410                           
  6411                           ;incstack = 0
  6412  00786C  0E00               	movlw	0
  6413  00786E  6ECF               	movwf	4047,c	;volatile
  6414                           
  6415                           ;Timer.c: 113: TMR1L = 2;
  6416  007870  0E02               	movlw	2
  6417  007872  6ECE               	movwf	4046,c	;volatile
  6418  007874  0012               	return		;funcret
  6419  007876                     __end_of_ResetTimer1:
  6420                           	opt stack 0
  6421                           tblptru	equ	0xFF8
  6422                           tblptrh	equ	0xFF7
  6423                           tblptrl	equ	0xFF6
  6424                           tablat	equ	0xFF5
  6425                           prodh	equ	0xFF4
  6426                           prodl	equ	0xFF3
  6427                           intcon	equ	0xFF2
  6428                           postinc0	equ	0xFEE
  6429                           wreg	equ	0xFE8
  6430                           postdec1	equ	0xFE5
  6431                           fsr1h	equ	0xFE2
  6432                           fsr1l	equ	0xFE1
  6433                           indf2	equ	0xFDF
  6434                           postinc2	equ	0xFDE
  6435                           fsr2h	equ	0xFDA
  6436                           fsr2l	equ	0xFD9
  6437                           status	equ	0xFD8
  6438                           
  6439 ;; *************** function _UseBluetooth *****************
  6440 ;; Defined at:
  6441 ;;		line 275 in file "Bluetooth.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;  buf            50    0[BANK2 ] unsigned char [50]
  6446 ;;  rfchannelSTR   10   50[BANK2 ] unsigned char [10]
  6447 ;;  temp            4   76[BANK2 ] unsigned long 
  6448 ;;  EnteredNEC      4   68[BANK2 ] unsigned long 
  6449 ;;  tempNec         4   61[BANK2 ] unsigned long 
  6450 ;;  NecCommand      1   75[BANK2 ] unsigned char 
  6451 ;;  NecAddress      1   74[BANK2 ] unsigned char 
  6452 ;;  rfconf          1   73[BANK2 ] unsigned char 
  6453 ;;  i               1   72[BANK2 ] unsigned char 
  6454 ;;  ok              1   67[BANK2 ] unsigned char 
  6455 ;;  tempRFArray     1   66[BANK2 ] unsigned char 
  6456 ;;  device          1   65[BANK2 ] unsigned char 
  6457 ;;  timeout         1   60[BANK2 ] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      unsigned char 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Locals:         0       0       0      80       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Totals:         0      12       0      80       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;Total ram usage:       92 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:   11
  6474 ;; This function calls:
  6475 ;;		_DecodeNEC
  6476 ;;		_EncodeNEC
  6477 ;;		_GetNumber
  6478 ;;		_GetStringAfterComma
  6479 ;;		_SendNEC_wait
  6480 ;;		_SendRF_wait
  6481 ;;		_StringAddEqual
  6482 ;;		_StringContainsCaseInsensitive
  6483 ;;		_StringMatch
  6484 ;;		_StringMatchCaseInsensitive
  6485 ;;		_SyncGlobalToEEPROM
  6486 ;;		_UARTchar
  6487 ;;		_UARTcommandMenu
  6488 ;;		_UARTstring
  6489 ;;		_UARTstringCRLN
  6490 ;;		_WaitForIRsignal
  6491 ;;		_cleanBuffer
  6492 ;;		_delayUS
  6493 ;;		_lowercaseString
  6494 ;;		_sprintf
  6495 ;; This function is called by:
  6496 ;;		_main
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text8
  6501  0001EC                     __ptext8:
  6502                           	opt stack 0
  6503  0001EC                     _UseBluetooth:
  6504                           	opt stack 19
  6505                           
  6506                           ;Bluetooth.c: 277: unsigned char ok = 1;
  6507                           
  6508                           ;incstack = 0
  6509  0001EC  0E01               	movlw	1
  6510  0001EE  0102               	movlb	2	; () banked
  6511  0001F0  6F43               	movwf	UseBluetooth@ok& (0+255),b
  6512                           
  6513                           ;Bluetooth.c: 279: unsigned long EnteredNEC = 0;
  6514  0001F2  0E00               	movlw	0
  6515  0001F4  0102               	movlb	2	; () banked
  6516  0001F6  6F44               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  6517  0001F8  0E00               	movlw	0
  6518  0001FA  6F45               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  6519  0001FC  0E00               	movlw	0
  6520  0001FE  6F46               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  6521  000200  0E00               	movlw	0
  6522  000202  6F47               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  6523                           
  6524                           ;Bluetooth.c: 280: unsigned char NecAddress = 0;
  6525  000204  0E00               	movlw	0
  6526  000206  0102               	movlb	2	; () banked
  6527  000208  6F4A               	movwf	UseBluetooth@NecAddress& (0+255),b
  6528                           
  6529                           ;Bluetooth.c: 281: unsigned char NecCommand = 0;
  6530  00020A  0E00               	movlw	0
  6531  00020C  0102               	movlb	2	; () banked
  6532  00020E  6F4B               	movwf	UseBluetooth@NecCommand& (0+255),b
  6533                           
  6534                           ;Bluetooth.c: 282: unsigned long temp = 0;
  6535  000210  0E00               	movlw	0
  6536  000212  0102               	movlb	2	; () banked
  6537  000214  6F4C               	movwf	UseBluetooth@temp& (0+255),b
  6538  000216  0E00               	movlw	0
  6539  000218  6F4D               	movwf	(UseBluetooth@temp+1)& (0+255),b
  6540  00021A  0E00               	movlw	0
  6541  00021C  6F4E               	movwf	(UseBluetooth@temp+2)& (0+255),b
  6542  00021E  0E00               	movlw	0
  6543  000220  6F4F               	movwf	(UseBluetooth@temp+3)& (0+255),b
  6544                           
  6545                           ;Bluetooth.c: 283: unsigned long tempNec = 0;
  6546  000222  0E00               	movlw	0
  6547  000224  0102               	movlb	2	; () banked
  6548  000226  6F3D               	movwf	UseBluetooth@tempNec& (0+255),b
  6549  000228  0E00               	movlw	0
  6550  00022A  6F3E               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  6551  00022C  0E00               	movlw	0
  6552  00022E  6F3F               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  6553  000230  0E00               	movlw	0
  6554  000232  6F40               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  6555                           
  6556                           ;Bluetooth.c: 284: unsigned char buf[50];
  6557                           ;Bluetooth.c: 285: unsigned char timeout =0;
  6558  000234  0E00               	movlw	0
  6559  000236  0102               	movlb	2	; () banked
  6560  000238  6F3C               	movwf	UseBluetooth@timeout& (0+255),b
  6561                           
  6562                           ;Bluetooth.c: 286: unsigned char rfchannelSTR[10];
  6563                           ;Bluetooth.c: 287: unsigned char rfconf, i, tempRFArray;
  6564                           ;Bluetooth.c: 288: unsigned char device = 0;
  6565  00023A  0E00               	movlw	0
  6566  00023C  0102               	movlb	2	; () banked
  6567  00023E  6F41               	movwf	UseBluetooth@device& (0+255),b
  6568                           
  6569                           ; BSR set to: 2
  6570                           ;Bluetooth.c: 290: cleanBuffer(buf,50);
  6571  000240  0E00               	movlw	low UseBluetooth@buf
  6572  000242  0100               	movlb	0	; () banked
  6573  000244  6F75               	movwf	cleanBuffer@data& (0+255),b
  6574  000246  0E02               	movlw	high UseBluetooth@buf
  6575  000248  0100               	movlb	0	; () banked
  6576  00024A  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
  6577  00024C  0E00               	movlw	0
  6578  00024E  0100               	movlb	0	; () banked
  6579  000250  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
  6580  000252  0E32               	movlw	50
  6581  000254  6F77               	movwf	cleanBuffer@count& (0+255),b
  6582  000256  EC83  F038         	call	_cleanBuffer	;wreg free
  6583                           
  6584                           ;Bluetooth.c: 291: cleanBuffer(rfchannelSTR,10);
  6585  00025A  0E32               	movlw	low UseBluetooth@rfchannelSTR
  6586  00025C  0100               	movlb	0	; () banked
  6587  00025E  6F75               	movwf	cleanBuffer@data& (0+255),b
  6588  000260  0E02               	movlw	high UseBluetooth@rfchannelSTR
  6589  000262  0100               	movlb	0	; () banked
  6590  000264  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
  6591  000266  0E00               	movlw	0
  6592  000268  0100               	movlb	0	; () banked
  6593  00026A  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
  6594  00026C  0E0A               	movlw	10
  6595  00026E  6F77               	movwf	cleanBuffer@count& (0+255),b
  6596  000270  EC83  F038         	call	_cleanBuffer	;wreg free
  6597                           
  6598                           ;Bluetooth.c: 293: if(StringContainsCaseInsensitive(ReceivedString,(unsigned char *)"Con
      +                          f1"))
  6599  000274  0E00               	movlw	low _ReceivedString
  6600  000276  0100               	movlb	0	; () banked
  6601  000278  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  6602  00027A  0E06               	movlw	high _ReceivedString
  6603  00027C  0100               	movlb	0	; () banked
  6604  00027E  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  6605  000280  0EC5               	movlw	low STR_22
  6606  000282  0100               	movlb	0	; () banked
  6607  000284  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  6608  000286  0EFF               	movlw	high STR_22
  6609  000288  0100               	movlb	0	; () banked
  6610  00028A  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  6611  00028C  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  6612  000290  0900               	iorlw	0
  6613  000292  B4D8               	btfsc	status,2,c
  6614  000294  D08C               	goto	l11590
  6615                           
  6616                           ;Bluetooth.c: 294: {
  6617                           ;Bluetooth.c: 295: if(StringMatchCaseInsensitive(ReceivedString,Conf1_ChannelD_STR))
  6618  000296  0E00               	movlw	low _ReceivedString
  6619  000298  0100               	movlb	0	; () banked
  6620  00029A  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6621  00029C  0E06               	movlw	high _ReceivedString
  6622  00029E  0100               	movlb	0	; () banked
  6623  0002A0  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6624  0002A2  0E90               	movlw	low _Conf1_ChannelD_STR
  6625  0002A4  0100               	movlb	0	; () banked
  6626  0002A6  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6627  0002A8  0E04               	movlw	high _Conf1_ChannelD_STR
  6628  0002AA  0100               	movlb	0	; () banked
  6629  0002AC  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6630  0002AE  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6631  0002B2  0900               	iorlw	0
  6632  0002B4  B4D8               	btfsc	status,2,c
  6633  0002B6  D012               	goto	l11572
  6634                           
  6635                           ;Bluetooth.c: 296: {
  6636                           ;Bluetooth.c: 298: SendRF_wait(Conf1_ChannelD,1,12,8);
  6637  0002B8  0EBD               	movlw	low _Conf1_ChannelD
  6638  0002BA  0100               	movlb	0	; () banked
  6639  0002BC  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6640  0002BE  0E04               	movlw	high _Conf1_ChannelD
  6641  0002C0  0100               	movlb	0	; () banked
  6642  0002C2  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6643  0002C4  0E01               	movlw	1
  6644  0002C6  0100               	movlb	0	; () banked
  6645  0002C8  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6646  0002CA  0E0C               	movlw	12
  6647  0002CC  0100               	movlb	0	; () banked
  6648  0002CE  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6649  0002D0  0E08               	movlw	8
  6650  0002D2  0100               	movlb	0	; () banked
  6651  0002D4  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6652  0002D6  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6653                           
  6654                           ;Bluetooth.c: 299: }
  6655  0002DA  D058               	goto	l11584
  6656  0002DC                     l11572:
  6657                           
  6658                           ;Bluetooth.c: 300: else if(StringMatchCaseInsensitive(ReceivedString,Conf1_ChannelE_STR)
      +                          )
  6659  0002DC  0E00               	movlw	low _ReceivedString
  6660  0002DE  0100               	movlb	0	; () banked
  6661  0002E0  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6662  0002E2  0E06               	movlw	high _ReceivedString
  6663  0002E4  0100               	movlb	0	; () banked
  6664  0002E6  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6665  0002E8  0E9F               	movlw	low _Conf1_ChannelE_STR
  6666  0002EA  0100               	movlb	0	; () banked
  6667  0002EC  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6668  0002EE  0E04               	movlw	high _Conf1_ChannelE_STR
  6669  0002F0  0100               	movlb	0	; () banked
  6670  0002F2  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6671  0002F4  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6672  0002F8  0900               	iorlw	0
  6673  0002FA  B4D8               	btfsc	status,2,c
  6674  0002FC  D012               	goto	l11576
  6675                           
  6676                           ;Bluetooth.c: 301: {
  6677                           ;Bluetooth.c: 303: SendRF_wait(Conf1_ChannelE,1,12,8);
  6678  0002FE  0EC9               	movlw	low _Conf1_ChannelE
  6679  000300  0100               	movlb	0	; () banked
  6680  000302  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6681  000304  0E04               	movlw	high _Conf1_ChannelE
  6682  000306  0100               	movlb	0	; () banked
  6683  000308  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6684  00030A  0E01               	movlw	1
  6685  00030C  0100               	movlb	0	; () banked
  6686  00030E  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6687  000310  0E0C               	movlw	12
  6688  000312  0100               	movlb	0	; () banked
  6689  000314  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6690  000316  0E08               	movlw	8
  6691  000318  0100               	movlb	0	; () banked
  6692  00031A  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6693  00031C  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6694                           
  6695                           ;Bluetooth.c: 304: }
  6696  000320  D035               	goto	l11584
  6697  000322                     l11576:
  6698                           
  6699                           ;Bluetooth.c: 305: else if(StringMatchCaseInsensitive(ReceivedString,Conf1_ChannelF_STR)
      +                          )
  6700  000322  0E00               	movlw	low _ReceivedString
  6701  000324  0100               	movlb	0	; () banked
  6702  000326  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6703  000328  0E06               	movlw	high _ReceivedString
  6704  00032A  0100               	movlb	0	; () banked
  6705  00032C  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6706  00032E  0EAE               	movlw	low _Conf1_ChannelF_STR
  6707  000330  0100               	movlb	0	; () banked
  6708  000332  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6709  000334  0E04               	movlw	high _Conf1_ChannelF_STR
  6710  000336  0100               	movlb	0	; () banked
  6711  000338  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6712  00033A  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6713  00033E  0900               	iorlw	0
  6714  000340  B4D8               	btfsc	status,2,c
  6715  000342  D012               	goto	l11580
  6716                           
  6717                           ;Bluetooth.c: 306: {
  6718                           ;Bluetooth.c: 308: SendRF_wait(Conf1_ChannelF,1,12,8);
  6719  000344  0ED5               	movlw	low _Conf1_ChannelF
  6720  000346  0100               	movlb	0	; () banked
  6721  000348  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6722  00034A  0E04               	movlw	high _Conf1_ChannelF
  6723  00034C  0100               	movlb	0	; () banked
  6724  00034E  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6725  000350  0E01               	movlw	1
  6726  000352  0100               	movlb	0	; () banked
  6727  000354  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6728  000356  0E0C               	movlw	12
  6729  000358  0100               	movlb	0	; () banked
  6730  00035A  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6731  00035C  0E08               	movlw	8
  6732  00035E  0100               	movlb	0	; () banked
  6733  000360  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6734  000362  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6735                           
  6736                           ;Bluetooth.c: 309: }
  6737  000366  D012               	goto	l11584
  6738  000368                     l11580:
  6739                           
  6740                           ;Bluetooth.c: 310: else
  6741                           ;Bluetooth.c: 311: {
  6742                           ;Bluetooth.c: 313: UARTstring((unsigned char *)SYNTAX_ERR);
  6743  000368  0E00               	movlw	low _SYNTAX_ERR
  6744  00036A  0100               	movlb	0	; () banked
  6745  00036C  6F76               	movwf	UARTstring@data& (0+255),b
  6746  00036E  0E05               	movlw	high _SYNTAX_ERR
  6747  000370  0100               	movlb	0	; () banked
  6748  000372  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  6749  000374  ECB0  F038         	call	_UARTstring	;wreg free
  6750                           
  6751                           ;Bluetooth.c: 314: UARTstring((unsigned char *)CRLN);
  6752  000378  0ED6               	movlw	low _CRLN
  6753  00037A  0100               	movlb	0	; () banked
  6754  00037C  6F76               	movwf	UARTstring@data& (0+255),b
  6755  00037E  0E00               	movlw	high _CRLN
  6756  000380  0100               	movlb	0	; () banked
  6757  000382  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  6758  000384  ECB0  F038         	call	_UARTstring	;wreg free
  6759                           
  6760                           ;Bluetooth.c: 315: return 0;
  6761                           ;	Return value of _UseBluetooth is never used
  6762  000388  0012               	return	
  6763  00038A  D000               	goto	l11584
  6764  00038C                     l11584:
  6765                           
  6766                           ;Bluetooth.c: 316: }
  6767                           ;Bluetooth.c: 317: if(ok)
  6768  00038C  0102               	movlb	2	; () banked
  6769  00038E  5143               	movf	UseBluetooth@ok& (0+255),w,b
  6770  000390  0102               	movlb	2	; () banked
  6771  000392  B4D8               	btfsc	status,2,c
  6772  000394  EF61  F00A         	goto	l11930
  6773                           
  6774                           ; BSR set to: 2
  6775                           ;Bluetooth.c: 318: {
  6776                           ;Bluetooth.c: 319: UARTstringCRLN((unsigned char *)"Configuration 1 RF code sent");
  6777  000398  0E78               	movlw	low STR_23
  6778  00039A  0100               	movlb	0	; () banked
  6779  00039C  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  6780  00039E  0EFC               	movlw	high STR_23
  6781  0003A0  0100               	movlb	0	; () banked
  6782  0003A2  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6783  0003A4  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  6784                           
  6785                           ;Bluetooth.c: 320: return 1;
  6786                           ;	Return value of _UseBluetooth is never used
  6787  0003A8  0012               	return	
  6788                           
  6789                           ;Bluetooth.c: 321: }
  6790                           ;Bluetooth.c: 322: }
  6791  0003AA  EF61  F00A         	goto	l11930
  6792  0003AE                     l11590:
  6793                           
  6794                           ;Bluetooth.c: 323: else if(StringContainsCaseInsensitive(ReceivedString,(unsigned char *
      +                          )"Conf2"))
  6795  0003AE  0E00               	movlw	low _ReceivedString
  6796  0003B0  0100               	movlb	0	; () banked
  6797  0003B2  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  6798  0003B4  0E06               	movlw	high _ReceivedString
  6799  0003B6  0100               	movlb	0	; () banked
  6800  0003B8  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  6801  0003BA  0ECB               	movlw	low STR_24
  6802  0003BC  0100               	movlb	0	; () banked
  6803  0003BE  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  6804  0003C0  0EFF               	movlw	high STR_24
  6805  0003C2  0100               	movlb	0	; () banked
  6806  0003C4  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  6807  0003C6  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  6808  0003CA  0900               	iorlw	0
  6809  0003CC  B4D8               	btfsc	status,2,c
  6810  0003CE  D181               	goto	l11642
  6811                           
  6812                           ;Bluetooth.c: 324: {
  6813                           ;Bluetooth.c: 325: if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelB_ON_STR))
  6814  0003D0  0E00               	movlw	low _ReceivedString
  6815  0003D2  0100               	movlb	0	; () banked
  6816  0003D4  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6817  0003D6  0E06               	movlw	high _ReceivedString
  6818  0003D8  0100               	movlb	0	; () banked
  6819  0003DA  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6820  0003DC  0EBE               	movlw	low _Conf2_ChannelB_ON_STR
  6821  0003DE  0100               	movlb	0	; () banked
  6822  0003E0  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6823  0003E2  0E05               	movlw	high _Conf2_ChannelB_ON_STR
  6824  0003E4  0100               	movlb	0	; () banked
  6825  0003E6  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6826  0003E8  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6827  0003EC  0900               	iorlw	0
  6828  0003EE  B4D8               	btfsc	status,2,c
  6829  0003F0  D012               	goto	l11596
  6830                           
  6831                           ;Bluetooth.c: 326: {
  6832                           ;Bluetooth.c: 328: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  6833  0003F2  0E10               	movlw	low _Conf2_ChannelB_ON
  6834  0003F4  0100               	movlb	0	; () banked
  6835  0003F6  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6836  0003F8  0E04               	movlw	high _Conf2_ChannelB_ON
  6837  0003FA  0100               	movlb	0	; () banked
  6838  0003FC  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6839  0003FE  0E02               	movlw	2
  6840  000400  0100               	movlb	0	; () banked
  6841  000402  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6842  000404  0E10               	movlw	16
  6843  000406  0100               	movlb	0	; () banked
  6844  000408  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6845  00040A  0E08               	movlw	8
  6846  00040C  0100               	movlb	0	; () banked
  6847  00040E  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6848  000410  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6849                           
  6850                           ;Bluetooth.c: 329: }
  6851  000414  D14D               	goto	l11636
  6852  000416                     l11596:
  6853                           
  6854                           ;Bluetooth.c: 330: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelB_OFF_
      +                          STR))
  6855  000416  0E00               	movlw	low _ReceivedString
  6856  000418  0100               	movlb	0	; () banked
  6857  00041A  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6858  00041C  0E06               	movlw	high _ReceivedString
  6859  00041E  0100               	movlb	0	; () banked
  6860  000420  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6861  000422  0E98               	movlw	low _Conf2_ChannelB_OFF_STR
  6862  000424  0100               	movlb	0	; () banked
  6863  000426  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6864  000428  0E05               	movlw	high _Conf2_ChannelB_OFF_STR
  6865  00042A  0100               	movlb	0	; () banked
  6866  00042C  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6867  00042E  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6868  000432  0900               	iorlw	0
  6869  000434  B4D8               	btfsc	status,2,c
  6870  000436  D012               	goto	l11600
  6871                           
  6872                           ;Bluetooth.c: 331: {
  6873                           ;Bluetooth.c: 333: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  6874  000438  0E00               	movlw	low _Conf2_ChannelB_OFF
  6875  00043A  0100               	movlb	0	; () banked
  6876  00043C  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6877  00043E  0E04               	movlw	high _Conf2_ChannelB_OFF
  6878  000440  0100               	movlb	0	; () banked
  6879  000442  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6880  000444  0E02               	movlw	2
  6881  000446  0100               	movlb	0	; () banked
  6882  000448  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6883  00044A  0E10               	movlw	16
  6884  00044C  0100               	movlb	0	; () banked
  6885  00044E  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6886  000450  0E08               	movlw	8
  6887  000452  0100               	movlb	0	; () banked
  6888  000454  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6889  000456  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6890                           
  6891                           ;Bluetooth.c: 334: }
  6892  00045A  D12A               	goto	l11636
  6893  00045C                     l11600:
  6894                           
  6895                           ;Bluetooth.c: 335: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelD_ON_S
      +                          TR))
  6896  00045C  0E00               	movlw	low _ReceivedString
  6897  00045E  0100               	movlb	0	; () banked
  6898  000460  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6899  000462  0E06               	movlw	high _ReceivedString
  6900  000464  0100               	movlb	0	; () banked
  6901  000466  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6902  000468  0ED0               	movlw	low _Conf2_ChannelD_ON_STR
  6903  00046A  0100               	movlb	0	; () banked
  6904  00046C  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6905  00046E  0E05               	movlw	high _Conf2_ChannelD_ON_STR
  6906  000470  0100               	movlb	0	; () banked
  6907  000472  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6908  000474  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6909  000478  0900               	iorlw	0
  6910  00047A  B4D8               	btfsc	status,2,c
  6911  00047C  D012               	goto	l11604
  6912                           
  6913                           ;Bluetooth.c: 336: {
  6914                           ;Bluetooth.c: 338: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  6915  00047E  0E30               	movlw	low _Conf2_ChannelD_ON
  6916  000480  0100               	movlb	0	; () banked
  6917  000482  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6918  000484  0E04               	movlw	high _Conf2_ChannelD_ON
  6919  000486  0100               	movlb	0	; () banked
  6920  000488  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6921  00048A  0E02               	movlw	2
  6922  00048C  0100               	movlb	0	; () banked
  6923  00048E  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6924  000490  0E10               	movlw	16
  6925  000492  0100               	movlb	0	; () banked
  6926  000494  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6927  000496  0E08               	movlw	8
  6928  000498  0100               	movlb	0	; () banked
  6929  00049A  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6930  00049C  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6931                           
  6932                           ;Bluetooth.c: 339: }
  6933  0004A0  D107               	goto	l11636
  6934  0004A2                     l11604:
  6935                           
  6936                           ;Bluetooth.c: 340: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelD_OFF_
      +                          STR))
  6937  0004A2  0E00               	movlw	low _ReceivedString
  6938  0004A4  0100               	movlb	0	; () banked
  6939  0004A6  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6940  0004A8  0E06               	movlw	high _ReceivedString
  6941  0004AA  0100               	movlb	0	; () banked
  6942  0004AC  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6943  0004AE  0EAB               	movlw	low _Conf2_ChannelD_OFF_STR
  6944  0004B0  0100               	movlb	0	; () banked
  6945  0004B2  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6946  0004B4  0E05               	movlw	high _Conf2_ChannelD_OFF_STR
  6947  0004B6  0100               	movlb	0	; () banked
  6948  0004B8  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6949  0004BA  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6950  0004BE  0900               	iorlw	0
  6951  0004C0  B4D8               	btfsc	status,2,c
  6952  0004C2  D012               	goto	l11608
  6953                           
  6954                           ;Bluetooth.c: 341: {
  6955                           ;Bluetooth.c: 343: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  6956  0004C4  0E20               	movlw	low _Conf2_ChannelD_OFF
  6957  0004C6  0100               	movlb	0	; () banked
  6958  0004C8  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  6959  0004CA  0E04               	movlw	high _Conf2_ChannelD_OFF
  6960  0004CC  0100               	movlb	0	; () banked
  6961  0004CE  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  6962  0004D0  0E02               	movlw	2
  6963  0004D2  0100               	movlb	0	; () banked
  6964  0004D4  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  6965  0004D6  0E10               	movlw	16
  6966  0004D8  0100               	movlb	0	; () banked
  6967  0004DA  6F7E               	movwf	SendRF_wait@size& (0+255),b
  6968  0004DC  0E08               	movlw	8
  6969  0004DE  0100               	movlb	0	; () banked
  6970  0004E0  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  6971  0004E2  EC8F  F03A         	call	_SendRF_wait	;wreg free
  6972                           
  6973                           ;Bluetooth.c: 344: }
  6974  0004E6  D0E4               	goto	l11636
  6975  0004E8                     l11608:
  6976                           
  6977                           ;Bluetooth.c: 345: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_1_ON
      +                          _STR))
  6978  0004E8  0E00               	movlw	low _ReceivedString
  6979  0004EA  0100               	movlb	0	; () banked
  6980  0004EC  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  6981  0004EE  0E06               	movlw	high _ReceivedString
  6982  0004F0  0100               	movlb	0	; () banked
  6983  0004F2  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  6984  0004F4  0E5C               	movlw	low _Conf2_ChannelH_1_ON_STR
  6985  0004F6  0100               	movlb	0	; () banked
  6986  0004F8  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  6987  0004FA  0E05               	movlw	high _Conf2_ChannelH_1_ON_STR
  6988  0004FC  0100               	movlb	0	; () banked
  6989  0004FE  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  6990  000500  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  6991  000504  0900               	iorlw	0
  6992  000506  B4D8               	btfsc	status,2,c
  6993  000508  D012               	goto	l11612
  6994                           
  6995                           ;Bluetooth.c: 346: {
  6996                           ;Bluetooth.c: 348: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  6997  00050A  0E50               	movlw	low _Conf2_ChannelH_1_ON
  6998  00050C  0100               	movlb	0	; () banked
  6999  00050E  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  7000  000510  0E04               	movlw	high _Conf2_ChannelH_1_ON
  7001  000512  0100               	movlb	0	; () banked
  7002  000514  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7003  000516  0E02               	movlw	2
  7004  000518  0100               	movlb	0	; () banked
  7005  00051A  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  7006  00051C  0E10               	movlw	16
  7007  00051E  0100               	movlb	0	; () banked
  7008  000520  6F7E               	movwf	SendRF_wait@size& (0+255),b
  7009  000522  0E08               	movlw	8
  7010  000524  0100               	movlb	0	; () banked
  7011  000526  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  7012  000528  EC8F  F03A         	call	_SendRF_wait	;wreg free
  7013                           
  7014                           ;Bluetooth.c: 349: }
  7015  00052C  D0C1               	goto	l11636
  7016  00052E                     l11612:
  7017                           
  7018                           ;Bluetooth.c: 350: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_1_OF
      +                          F_STR))
  7019  00052E  0E00               	movlw	low _ReceivedString
  7020  000530  0100               	movlb	0	; () banked
  7021  000532  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  7022  000534  0E06               	movlw	high _ReceivedString
  7023  000536  0100               	movlb	0	; () banked
  7024  000538  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  7025  00053A  0E1D               	movlw	low _Conf2_ChannelH_1_OFF_STR
  7026  00053C  0100               	movlb	0	; () banked
  7027  00053E  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7028  000540  0E05               	movlw	high _Conf2_ChannelH_1_OFF_STR
  7029  000542  0100               	movlb	0	; () banked
  7030  000544  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7031  000546  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  7032  00054A  0900               	iorlw	0
  7033  00054C  B4D8               	btfsc	status,2,c
  7034  00054E  D012               	goto	l11616
  7035                           
  7036                           ;Bluetooth.c: 351: {
  7037                           ;Bluetooth.c: 353: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  7038  000550  0E40               	movlw	low _Conf2_ChannelH_1_OFF
  7039  000552  0100               	movlb	0	; () banked
  7040  000554  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  7041  000556  0E04               	movlw	high _Conf2_ChannelH_1_OFF
  7042  000558  0100               	movlb	0	; () banked
  7043  00055A  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7044  00055C  0E02               	movlw	2
  7045  00055E  0100               	movlb	0	; () banked
  7046  000560  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  7047  000562  0E10               	movlw	16
  7048  000564  0100               	movlb	0	; () banked
  7049  000566  6F7E               	movwf	SendRF_wait@size& (0+255),b
  7050  000568  0E08               	movlw	8
  7051  00056A  0100               	movlb	0	; () banked
  7052  00056C  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  7053  00056E  EC8F  F03A         	call	_SendRF_wait	;wreg free
  7054                           
  7055                           ;Bluetooth.c: 354: }
  7056  000572  D09E               	goto	l11636
  7057  000574                     l11616:
  7058                           
  7059                           ;Bluetooth.c: 355: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_2_ON
      +                          _STR))
  7060  000574  0E00               	movlw	low _ReceivedString
  7061  000576  0100               	movlb	0	; () banked
  7062  000578  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  7063  00057A  0E06               	movlw	high _ReceivedString
  7064  00057C  0100               	movlb	0	; () banked
  7065  00057E  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  7066  000580  0E70               	movlw	low _Conf2_ChannelH_2_ON_STR
  7067  000582  0100               	movlb	0	; () banked
  7068  000584  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7069  000586  0E05               	movlw	high _Conf2_ChannelH_2_ON_STR
  7070  000588  0100               	movlb	0	; () banked
  7071  00058A  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7072  00058C  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  7073  000590  0900               	iorlw	0
  7074  000592  B4D8               	btfsc	status,2,c
  7075  000594  D012               	goto	l11620
  7076                           
  7077                           ;Bluetooth.c: 356: {
  7078                           ;Bluetooth.c: 358: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  7079  000596  0E70               	movlw	low _Conf2_ChannelH_2_ON
  7080  000598  0100               	movlb	0	; () banked
  7081  00059A  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  7082  00059C  0E04               	movlw	high _Conf2_ChannelH_2_ON
  7083  00059E  0100               	movlb	0	; () banked
  7084  0005A0  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7085  0005A2  0E02               	movlw	2
  7086  0005A4  0100               	movlb	0	; () banked
  7087  0005A6  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  7088  0005A8  0E10               	movlw	16
  7089  0005AA  0100               	movlb	0	; () banked
  7090  0005AC  6F7E               	movwf	SendRF_wait@size& (0+255),b
  7091  0005AE  0E08               	movlw	8
  7092  0005B0  0100               	movlb	0	; () banked
  7093  0005B2  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  7094  0005B4  EC8F  F03A         	call	_SendRF_wait	;wreg free
  7095                           
  7096                           ;Bluetooth.c: 359: }
  7097  0005B8  D07B               	goto	l11636
  7098  0005BA                     l11620:
  7099                           
  7100                           ;Bluetooth.c: 360: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_2_OF
      +                          F_STR))
  7101  0005BA  0E00               	movlw	low _ReceivedString
  7102  0005BC  0100               	movlb	0	; () banked
  7103  0005BE  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  7104  0005C0  0E06               	movlw	high _ReceivedString
  7105  0005C2  0100               	movlb	0	; () banked
  7106  0005C4  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  7107  0005C6  0E32               	movlw	low _Conf2_ChannelH_2_OFF_STR
  7108  0005C8  0100               	movlb	0	; () banked
  7109  0005CA  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7110  0005CC  0E05               	movlw	high _Conf2_ChannelH_2_OFF_STR
  7111  0005CE  0100               	movlb	0	; () banked
  7112  0005D0  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7113  0005D2  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  7114  0005D6  0900               	iorlw	0
  7115  0005D8  B4D8               	btfsc	status,2,c
  7116  0005DA  D012               	goto	l11624
  7117                           
  7118                           ;Bluetooth.c: 361: {
  7119                           ;Bluetooth.c: 363: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  7120  0005DC  0E60               	movlw	low _Conf2_ChannelH_2_OFF
  7121  0005DE  0100               	movlb	0	; () banked
  7122  0005E0  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  7123  0005E2  0E04               	movlw	high _Conf2_ChannelH_2_OFF
  7124  0005E4  0100               	movlb	0	; () banked
  7125  0005E6  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7126  0005E8  0E02               	movlw	2
  7127  0005EA  0100               	movlb	0	; () banked
  7128  0005EC  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  7129  0005EE  0E10               	movlw	16
  7130  0005F0  0100               	movlb	0	; () banked
  7131  0005F2  6F7E               	movwf	SendRF_wait@size& (0+255),b
  7132  0005F4  0E08               	movlw	8
  7133  0005F6  0100               	movlb	0	; () banked
  7134  0005F8  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  7135  0005FA  EC8F  F03A         	call	_SendRF_wait	;wreg free
  7136                           
  7137                           ;Bluetooth.c: 364: }
  7138  0005FE  D058               	goto	l11636
  7139  000600                     l11624:
  7140                           
  7141                           ;Bluetooth.c: 365: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_3_ON
      +                          _STR))
  7142  000600  0E00               	movlw	low _ReceivedString
  7143  000602  0100               	movlb	0	; () banked
  7144  000604  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  7145  000606  0E06               	movlw	high _ReceivedString
  7146  000608  0100               	movlb	0	; () banked
  7147  00060A  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  7148  00060C  0E84               	movlw	low _Conf2_ChannelH_3_ON_STR
  7149  00060E  0100               	movlb	0	; () banked
  7150  000610  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7151  000612  0E05               	movlw	high _Conf2_ChannelH_3_ON_STR
  7152  000614  0100               	movlb	0	; () banked
  7153  000616  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7154  000618  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  7155  00061C  0900               	iorlw	0
  7156  00061E  B4D8               	btfsc	status,2,c
  7157  000620  D012               	goto	l11628
  7158                           
  7159                           ;Bluetooth.c: 366: {
  7160                           ;Bluetooth.c: 368: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  7161  000622  0E80               	movlw	low _Conf2_ChannelH_3_ON
  7162  000624  0100               	movlb	0	; () banked
  7163  000626  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  7164  000628  0E04               	movlw	high _Conf2_ChannelH_3_ON
  7165  00062A  0100               	movlb	0	; () banked
  7166  00062C  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7167  00062E  0E02               	movlw	2
  7168  000630  0100               	movlb	0	; () banked
  7169  000632  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  7170  000634  0E10               	movlw	16
  7171  000636  0100               	movlb	0	; () banked
  7172  000638  6F7E               	movwf	SendRF_wait@size& (0+255),b
  7173  00063A  0E08               	movlw	8
  7174  00063C  0100               	movlb	0	; () banked
  7175  00063E  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  7176  000640  EC8F  F03A         	call	_SendRF_wait	;wreg free
  7177                           
  7178                           ;Bluetooth.c: 369: }
  7179  000644  D035               	goto	l11636
  7180  000646                     l11628:
  7181                           
  7182                           ;Bluetooth.c: 370: else if(StringMatchCaseInsensitive(ReceivedString,Conf2_ChannelH_3_OF
      +                          F_STR))
  7183  000646  0E00               	movlw	low _ReceivedString
  7184  000648  0100               	movlb	0	; () banked
  7185  00064A  6F78               	movwf	StringMatchCaseInsensitive@This& (0+255),b
  7186  00064C  0E06               	movlw	high _ReceivedString
  7187  00064E  0100               	movlb	0	; () banked
  7188  000650  6F79               	movwf	(StringMatchCaseInsensitive@This+1)& (0+255),b
  7189  000652  0E47               	movlw	low _Conf2_ChannelH_3_OFF_STR
  7190  000654  0100               	movlb	0	; () banked
  7191  000656  6F7A               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7192  000658  0E05               	movlw	high _Conf2_ChannelH_3_OFF_STR
  7193  00065A  0100               	movlb	0	; () banked
  7194  00065C  6F7B               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7195  00065E  EC6E  F035         	call	_StringMatchCaseInsensitive	;wreg free
  7196  000662  0900               	iorlw	0
  7197  000664  B4D8               	btfsc	status,2,c
  7198  000666  D012               	goto	l11632
  7199                           
  7200                           ;Bluetooth.c: 371: {
  7201                           ;Bluetooth.c: 373: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  7202  000668  0E60               	movlw	low _Conf2_ChannelH_2_OFF
  7203  00066A  0100               	movlb	0	; () banked
  7204  00066C  6F7B               	movwf	SendRF_wait@Code& (0+255),b
  7205  00066E  0E04               	movlw	high _Conf2_ChannelH_2_OFF
  7206  000670  0100               	movlb	0	; () banked
  7207  000672  6F7C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7208  000674  0E03               	movlw	3
  7209  000676  0100               	movlb	0	; () banked
  7210  000678  6F7D               	movwf	SendRF_wait@Config& (0+255),b
  7211  00067A  0E10               	movlw	16
  7212  00067C  0100               	movlb	0	; () banked
  7213  00067E  6F7E               	movwf	SendRF_wait@size& (0+255),b
  7214  000680  0E08               	movlw	8
  7215  000682  0100               	movlb	0	; () banked
  7216  000684  6F7F               	movwf	SendRF_wait@amount& (0+255),b
  7217  000686  EC8F  F03A         	call	_SendRF_wait	;wreg free
  7218                           
  7219                           ;Bluetooth.c: 374: }
  7220  00068A  D012               	goto	l11636
  7221  00068C                     l11632:
  7222                           
  7223                           ;Bluetooth.c: 375: else
  7224                           ;Bluetooth.c: 376: {
  7225                           ;Bluetooth.c: 378: UARTstring((unsigned char *)SYNTAX_ERR);
  7226  00068C  0E00               	movlw	low _SYNTAX_ERR
  7227  00068E  0100               	movlb	0	; () banked
  7228  000690  6F76               	movwf	UARTstring@data& (0+255),b
  7229  000692  0E05               	movlw	high _SYNTAX_ERR
  7230  000694  0100               	movlb	0	; () banked
  7231  000696  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7232  000698  ECB0  F038         	call	_UARTstring	;wreg free
  7233                           
  7234                           ;Bluetooth.c: 379: UARTstring(CRLN);
  7235  00069C  0ED6               	movlw	low _CRLN
  7236  00069E  0100               	movlb	0	; () banked
  7237  0006A0  6F76               	movwf	UARTstring@data& (0+255),b
  7238  0006A2  0E00               	movlw	high _CRLN
  7239  0006A4  0100               	movlb	0	; () banked
  7240  0006A6  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7241  0006A8  ECB0  F038         	call	_UARTstring	;wreg free
  7242                           
  7243                           ;Bluetooth.c: 380: return 0;
  7244                           ;	Return value of _UseBluetooth is never used
  7245  0006AC  0012               	return	
  7246  0006AE  D000               	goto	l11636
  7247  0006B0                     l11636:
  7248                           
  7249                           ;Bluetooth.c: 381: }
  7250                           ;Bluetooth.c: 382: if(ok)
  7251  0006B0  0102               	movlb	2	; () banked
  7252  0006B2  5143               	movf	UseBluetooth@ok& (0+255),w,b
  7253  0006B4  0102               	movlb	2	; () banked
  7254  0006B6  B4D8               	btfsc	status,2,c
  7255  0006B8  EF61  F00A         	goto	l11930
  7256                           
  7257                           ; BSR set to: 2
  7258                           ;Bluetooth.c: 383: {
  7259                           ;Bluetooth.c: 384: UARTstringCRLN((unsigned char *)"Configuration 2 RF code sent");
  7260  0006BC  0E95               	movlw	low STR_25
  7261  0006BE  0100               	movlb	0	; () banked
  7262  0006C0  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7263  0006C2  0EFC               	movlw	high STR_25
  7264  0006C4  0100               	movlb	0	; () banked
  7265  0006C6  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7266  0006C8  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7267                           
  7268                           ;Bluetooth.c: 385: return 1;
  7269                           ;	Return value of _UseBluetooth is never used
  7270  0006CC  0012               	return	
  7271                           
  7272                           ;Bluetooth.c: 386: }
  7273                           ;Bluetooth.c: 387: }
  7274  0006CE  EF61  F00A         	goto	l11930
  7275  0006D2                     l11642:
  7276                           
  7277                           ;Bluetooth.c: 388: else if(StringContainsCaseInsensitive(ReceivedString,(unsigned char *
      +                          )"NEC"))
  7278  0006D2  0E00               	movlw	low _ReceivedString
  7279  0006D4  0100               	movlb	0	; () banked
  7280  0006D6  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  7281  0006D8  0E06               	movlw	high _ReceivedString
  7282  0006DA  0100               	movlb	0	; () banked
  7283  0006DC  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  7284  0006DE  0EE8               	movlw	low STR_26
  7285  0006E0  0100               	movlb	0	; () banked
  7286  0006E2  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  7287  0006E4  0EFF               	movlw	high STR_26
  7288  0006E6  0100               	movlb	0	; () banked
  7289  0006E8  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  7290  0006EA  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  7291  0006EE  0900               	iorlw	0
  7292  0006F0  B4D8               	btfsc	status,2,c
  7293  0006F2  D1B8               	goto	l11696
  7294                           
  7295                           ;Bluetooth.c: 389: {
  7296                           ;Bluetooth.c: 390: if(!GetNumber(ReceivedString, 2, &temp))
  7297  0006F4  0E00               	movlw	low _ReceivedString
  7298  0006F6  0100               	movlb	0	; () banked
  7299  0006F8  6F81               	movwf	GetNumber@This& (0+255),b
  7300  0006FA  0E06               	movlw	high _ReceivedString
  7301  0006FC  0100               	movlb	0	; () banked
  7302  0006FE  6F82               	movwf	(GetNumber@This+1)& (0+255),b
  7303  000700  0E02               	movlw	2
  7304  000702  0100               	movlb	0	; () banked
  7305  000704  6F83               	movwf	GetNumber@CommaNumber& (0+255),b
  7306  000706  0E4C               	movlw	low UseBluetooth@temp
  7307  000708  0100               	movlb	0	; () banked
  7308  00070A  6F84               	movwf	GetNumber@result& (0+255),b
  7309  00070C  0E02               	movlw	high UseBluetooth@temp
  7310  00070E  0100               	movlb	0	; () banked
  7311  000710  6F85               	movwf	(GetNumber@result+1)& (0+255),b
  7312  000712  EC15  F01B         	call	_GetNumber	;wreg free
  7313  000716  0900               	iorlw	0
  7314  000718  A4D8               	btfss	status,2,c
  7315  00071A  D099               	goto	l11670
  7316                           
  7317                           ;Bluetooth.c: 391: {
  7318                           ;Bluetooth.c: 392: NecCommand = (unsigned char)temp;
  7319  00071C  C24C  F24B         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  7320                           
  7321                           ;Bluetooth.c: 393: if(!GetNumber(ReceivedString, 1, &temp))
  7322  000720  0E00               	movlw	low _ReceivedString
  7323  000722  0100               	movlb	0	; () banked
  7324  000724  6F81               	movwf	GetNumber@This& (0+255),b
  7325  000726  0E06               	movlw	high _ReceivedString
  7326  000728  0100               	movlb	0	; () banked
  7327  00072A  6F82               	movwf	(GetNumber@This+1)& (0+255),b
  7328  00072C  0E01               	movlw	1
  7329  00072E  0100               	movlb	0	; () banked
  7330  000730  6F83               	movwf	GetNumber@CommaNumber& (0+255),b
  7331  000732  0E4C               	movlw	low UseBluetooth@temp
  7332  000734  0100               	movlb	0	; () banked
  7333  000736  6F84               	movwf	GetNumber@result& (0+255),b
  7334  000738  0E02               	movlw	high UseBluetooth@temp
  7335  00073A  0100               	movlb	0	; () banked
  7336  00073C  6F85               	movwf	(GetNumber@result+1)& (0+255),b
  7337  00073E  EC15  F01B         	call	_GetNumber	;wreg free
  7338  000742  0900               	iorlw	0
  7339  000744  A4D8               	btfss	status,2,c
  7340  000746  D079               	goto	l11668
  7341                           
  7342                           ;Bluetooth.c: 394: {
  7343                           ;Bluetooth.c: 395: NecAddress = (unsigned char) temp;
  7344  000748  C24C  F24A         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  7345                           
  7346                           ;Bluetooth.c: 396: sprintf(buf,(unsigned char *)"NEC address: 0x%X ", NecAddress);
  7347  00074C  0E00               	movlw	low UseBluetooth@buf
  7348  00074E  0100               	movlb	0	; () banked
  7349  000750  6F8B               	movwf	sprintf@sp& (0+255),b
  7350  000752  0E02               	movlw	high UseBluetooth@buf
  7351  000754  0100               	movlb	0	; () banked
  7352  000756  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  7353  000758  0E35               	movlw	low STR_27
  7354  00075A  0100               	movlb	0	; () banked
  7355  00075C  6F8D               	movwf	sprintf@f& (0+255),b
  7356  00075E  0EFE               	movlw	high STR_27
  7357  000760  0100               	movlb	0	; () banked
  7358  000762  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  7359  000764  C24A  F08F         	movff	UseBluetooth@NecAddress,?_sprintf+4
  7360  000768  0100               	movlb	0	; () banked
  7361  00076A  6B90               	clrf	(?_sprintf+5)& (0+255),b
  7362  00076C  EC3D  F012         	call	_sprintf	;wreg free
  7363                           
  7364                           ;Bluetooth.c: 397: UARTstringCRLN(buf);
  7365  000770  0E00               	movlw	low UseBluetooth@buf
  7366  000772  0100               	movlb	0	; () banked
  7367  000774  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7368  000776  0E02               	movlw	high UseBluetooth@buf
  7369  000778  0100               	movlb	0	; () banked
  7370  00077A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7371  00077C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7372                           
  7373                           ;Bluetooth.c: 398: sprintf(buf,(unsigned char *)"NEC command: 0x%X ", NecCommand);
  7374  000780  0E00               	movlw	low UseBluetooth@buf
  7375  000782  0100               	movlb	0	; () banked
  7376  000784  6F8B               	movwf	sprintf@sp& (0+255),b
  7377  000786  0E02               	movlw	high UseBluetooth@buf
  7378  000788  0100               	movlb	0	; () banked
  7379  00078A  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  7380  00078C  0E22               	movlw	low STR_28
  7381  00078E  0100               	movlb	0	; () banked
  7382  000790  6F8D               	movwf	sprintf@f& (0+255),b
  7383  000792  0EFE               	movlw	high STR_28
  7384  000794  0100               	movlb	0	; () banked
  7385  000796  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  7386  000798  C24B  F08F         	movff	UseBluetooth@NecCommand,?_sprintf+4
  7387  00079C  0100               	movlb	0	; () banked
  7388  00079E  6B90               	clrf	(?_sprintf+5)& (0+255),b
  7389  0007A0  EC3D  F012         	call	_sprintf	;wreg free
  7390                           
  7391                           ;Bluetooth.c: 399: UARTstringCRLN(buf);
  7392  0007A4  0E00               	movlw	low UseBluetooth@buf
  7393  0007A6  0100               	movlb	0	; () banked
  7394  0007A8  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7395  0007AA  0E02               	movlw	high UseBluetooth@buf
  7396  0007AC  0100               	movlb	0	; () banked
  7397  0007AE  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7398  0007B0  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7399                           
  7400                           ;Bluetooth.c: 400: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  7401  0007B4  C24B  F079         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  7402  0007B8  0102               	movlb	2	; () banked
  7403  0007BA  514A               	movf	UseBluetooth@NecAddress& (0+255),w,b
  7404  0007BC  ECF6  F02B         	call	_EncodeNEC
  7405  0007C0  C079  F244         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  7406  0007C4  C07A  F245         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  7407  0007C8  C07B  F246         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  7408  0007CC  C07C  F247         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  7409                           
  7410                           ;Bluetooth.c: 401: SendNEC_wait(EnteredNEC,0);
  7411  0007D0  C244  F08A         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  7412  0007D4  C245  F08B         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  7413  0007D8  C246  F08C         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  7414  0007DC  C247  F08D         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  7415  0007E0  0E00               	movlw	0
  7416  0007E2  0100               	movlb	0	; () banked
  7417  0007E4  6F8E               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  7418  0007E6  EC1F  F035         	call	_SendNEC_wait	;wreg free
  7419                           
  7420                           ;Bluetooth.c: 402: sprintf(buf,(unsigned char *)"Sent NEC code = 0x%lX ", EnteredNEC);
  7421  0007EA  0E00               	movlw	low UseBluetooth@buf
  7422  0007EC  0100               	movlb	0	; () banked
  7423  0007EE  6F8B               	movwf	sprintf@sp& (0+255),b
  7424  0007F0  0E02               	movlw	high UseBluetooth@buf
  7425  0007F2  0100               	movlb	0	; () banked
  7426  0007F4  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  7427  0007F6  0E4E               	movlw	low STR_29
  7428  0007F8  0100               	movlb	0	; () banked
  7429  0007FA  6F8D               	movwf	sprintf@f& (0+255),b
  7430  0007FC  0EFD               	movlw	high STR_29
  7431  0007FE  0100               	movlb	0	; () banked
  7432  000800  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  7433  000802  C244  F08F         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  7434  000806  C245  F090         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  7435  00080A  C246  F091         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  7436  00080E  C247  F092         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  7437  000812  EC3D  F012         	call	_sprintf	;wreg free
  7438                           
  7439                           ;Bluetooth.c: 403: UARTstringCRLN(buf);
  7440  000816  0E00               	movlw	low UseBluetooth@buf
  7441  000818  0100               	movlb	0	; () banked
  7442  00081A  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7443  00081C  0E02               	movlw	high UseBluetooth@buf
  7444  00081E  0100               	movlb	0	; () banked
  7445  000820  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7446  000822  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7447                           
  7448                           ;Bluetooth.c: 404: UARTstring(CRLN);
  7449  000826  0ED6               	movlw	low _CRLN
  7450  000828  0100               	movlb	0	; () banked
  7451  00082A  6F76               	movwf	UARTstring@data& (0+255),b
  7452  00082C  0E00               	movlw	high _CRLN
  7453  00082E  0100               	movlb	0	; () banked
  7454  000830  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7455  000832  ECB0  F038         	call	_UARTstring	;wreg free
  7456                           
  7457                           ;Bluetooth.c: 405: }
  7458  000836  EF61  F00A         	goto	l11930
  7459  00083A                     l11668:
  7460                           
  7461                           ;Bluetooth.c: 406: else
  7462                           ;Bluetooth.c: 407: {
  7463                           ;Bluetooth.c: 408: UARTstringCRLN((unsigned char *)"Error: could not decode Address");
  7464  00083A  0E9E               	movlw	low STR_30
  7465  00083C  0100               	movlb	0	; () banked
  7466  00083E  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7467  000840  0EFB               	movlw	high STR_30
  7468  000842  0100               	movlb	0	; () banked
  7469  000844  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7470  000846  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7471                           
  7472                           ;Bluetooth.c: 409: }
  7473                           ;Bluetooth.c: 410: }
  7474  00084A  EF61  F00A         	goto	l11930
  7475  00084E                     l11670:
  7476                           
  7477                           ;Bluetooth.c: 411: else if(!GetNumber(ReceivedString, 1, &EnteredNEC))
  7478  00084E  0E00               	movlw	low _ReceivedString
  7479  000850  0100               	movlb	0	; () banked
  7480  000852  6F81               	movwf	GetNumber@This& (0+255),b
  7481  000854  0E06               	movlw	high _ReceivedString
  7482  000856  0100               	movlb	0	; () banked
  7483  000858  6F82               	movwf	(GetNumber@This+1)& (0+255),b
  7484  00085A  0E01               	movlw	1
  7485  00085C  0100               	movlb	0	; () banked
  7486  00085E  6F83               	movwf	GetNumber@CommaNumber& (0+255),b
  7487  000860  0E44               	movlw	low UseBluetooth@EnteredNEC
  7488  000862  0100               	movlb	0	; () banked
  7489  000864  6F84               	movwf	GetNumber@result& (0+255),b
  7490  000866  0E02               	movlw	high UseBluetooth@EnteredNEC
  7491  000868  0100               	movlb	0	; () banked
  7492  00086A  6F85               	movwf	(GetNumber@result+1)& (0+255),b
  7493  00086C  EC15  F01B         	call	_GetNumber	;wreg free
  7494  000870  0900               	iorlw	0
  7495  000872  A4D8               	btfss	status,2,c
  7496  000874  D08C               	goto	l11692
  7497                           
  7498                           ;Bluetooth.c: 412: {
  7499                           ;Bluetooth.c: 413: SendNEC_wait(EnteredNEC,0);
  7500  000876  C244  F08A         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  7501  00087A  C245  F08B         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  7502  00087E  C246  F08C         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  7503  000882  C247  F08D         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  7504  000886  0E00               	movlw	0
  7505  000888  0100               	movlb	0	; () banked
  7506  00088A  6F8E               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  7507  00088C  EC1F  F035         	call	_SendNEC_wait	;wreg free
  7508                           
  7509                           ;Bluetooth.c: 414: sprintf(buf,(unsigned char *)"sent NEC code 0x%lX", EnteredNEC);
  7510  000890  0E00               	movlw	low UseBluetooth@buf
  7511  000892  0100               	movlb	0	; () banked
  7512  000894  6F8B               	movwf	sprintf@sp& (0+255),b
  7513  000896  0E02               	movlw	high UseBluetooth@buf
  7514  000898  0100               	movlb	0	; () banked
  7515  00089A  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  7516  00089C  0EFA               	movlw	low STR_31
  7517  00089E  0100               	movlb	0	; () banked
  7518  0008A0  6F8D               	movwf	sprintf@f& (0+255),b
  7519  0008A2  0EFD               	movlw	high STR_31
  7520  0008A4  0100               	movlb	0	; () banked
  7521  0008A6  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  7522  0008A8  C244  F08F         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  7523  0008AC  C245  F090         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  7524  0008B0  C246  F091         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  7525  0008B4  C247  F092         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  7526  0008B8  EC3D  F012         	call	_sprintf	;wreg free
  7527                           
  7528                           ;Bluetooth.c: 415: UARTstringCRLN(buf);
  7529  0008BC  0E00               	movlw	low UseBluetooth@buf
  7530  0008BE  0100               	movlb	0	; () banked
  7531  0008C0  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7532  0008C2  0E02               	movlw	high UseBluetooth@buf
  7533  0008C4  0100               	movlb	0	; () banked
  7534  0008C6  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7535  0008C8  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7536                           
  7537                           ;Bluetooth.c: 416: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  7538  0008CC  C244  F079         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  7539  0008D0  C245  F07A         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  7540  0008D4  C246  F07B         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  7541  0008D8  C247  F07C         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  7542  0008DC  0E4A               	movlw	low UseBluetooth@NecAddress
  7543  0008DE  0100               	movlb	0	; () banked
  7544  0008E0  6F7D               	movwf	DecodeNEC@address& (0+255),b
  7545  0008E2  0E02               	movlw	high UseBluetooth@NecAddress
  7546  0008E4  0100               	movlb	0	; () banked
  7547  0008E6  6F7E               	movwf	(DecodeNEC@address+1)& (0+255),b
  7548  0008E8  0E4B               	movlw	low UseBluetooth@NecCommand
  7549  0008EA  0100               	movlb	0	; () banked
  7550  0008EC  6F7F               	movwf	DecodeNEC@command& (0+255),b
  7551  0008EE  0E02               	movlw	high UseBluetooth@NecCommand
  7552  0008F0  0100               	movlb	0	; () banked
  7553  0008F2  6F80               	movwf	(DecodeNEC@command+1)& (0+255),b
  7554  0008F4  ECD4  F033         	call	_DecodeNEC	;wreg free
  7555  0008F8  0900               	iorlw	0
  7556  0008FA  B4D8               	btfsc	status,2,c
  7557  0008FC  D035               	goto	l11686
  7558                           
  7559                           ;Bluetooth.c: 417: {
  7560                           ;Bluetooth.c: 418: sprintf(buf,(unsigned char *)"address: 0x%X ", NecAddress);
  7561  0008FE  0E00               	movlw	low UseBluetooth@buf
  7562  000900  0100               	movlb	0	; () banked
  7563  000902  6F8B               	movwf	sprintf@sp& (0+255),b
  7564  000904  0E02               	movlw	high UseBluetooth@buf
  7565  000906  0100               	movlb	0	; () banked
  7566  000908  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  7567  00090A  0E39               	movlw	low (STR_27+4)
  7568  00090C  0100               	movlb	0	; () banked
  7569  00090E  6F8D               	movwf	sprintf@f& (0+255),b
  7570  000910  0EFE               	movlw	high (STR_27+4)
  7571  000912  0100               	movlb	0	; () banked
  7572  000914  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  7573  000916  C24A  F08F         	movff	UseBluetooth@NecAddress,?_sprintf+4
  7574  00091A  0100               	movlb	0	; () banked
  7575  00091C  6B90               	clrf	(?_sprintf+5)& (0+255),b
  7576  00091E  EC3D  F012         	call	_sprintf	;wreg free
  7577                           
  7578                           ;Bluetooth.c: 419: UARTstringCRLN(buf);
  7579  000922  0E00               	movlw	low UseBluetooth@buf
  7580  000924  0100               	movlb	0	; () banked
  7581  000926  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7582  000928  0E02               	movlw	high UseBluetooth@buf
  7583  00092A  0100               	movlb	0	; () banked
  7584  00092C  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7585  00092E  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7586                           
  7587                           ;Bluetooth.c: 420: sprintf(buf,(unsigned char *)"command: 0x%X ", NecCommand);
  7588  000932  0E00               	movlw	low UseBluetooth@buf
  7589  000934  0100               	movlb	0	; () banked
  7590  000936  6F8B               	movwf	sprintf@sp& (0+255),b
  7591  000938  0E02               	movlw	high UseBluetooth@buf
  7592  00093A  0100               	movlb	0	; () banked
  7593  00093C  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  7594  00093E  0E26               	movlw	low (STR_28+4)
  7595  000940  0100               	movlb	0	; () banked
  7596  000942  6F8D               	movwf	sprintf@f& (0+255),b
  7597  000944  0EFE               	movlw	high (STR_28+4)
  7598  000946  0100               	movlb	0	; () banked
  7599  000948  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  7600  00094A  C24B  F08F         	movff	UseBluetooth@NecCommand,?_sprintf+4
  7601  00094E  0100               	movlb	0	; () banked
  7602  000950  6B90               	clrf	(?_sprintf+5)& (0+255),b
  7603  000952  EC3D  F012         	call	_sprintf	;wreg free
  7604                           
  7605                           ;Bluetooth.c: 421: UARTstringCRLN(buf);
  7606  000956  0E00               	movlw	low UseBluetooth@buf
  7607  000958  0100               	movlb	0	; () banked
  7608  00095A  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7609  00095C  0E02               	movlw	high UseBluetooth@buf
  7610  00095E  0100               	movlb	0	; () banked
  7611  000960  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7612  000962  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7613                           
  7614                           ;Bluetooth.c: 422: }
  7615  000966  D008               	goto	l1574
  7616  000968                     l11686:
  7617                           
  7618                           ;Bluetooth.c: 423: else
  7619                           ;Bluetooth.c: 424: {
  7620                           ;Bluetooth.c: 425: UARTstringCRLN((unsigned char *)"Error: could not decode NEC code");
  7621  000968  0E1D               	movlw	low STR_34
  7622  00096A  0100               	movlb	0	; () banked
  7623  00096C  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7624  00096E  0EFB               	movlw	high STR_34
  7625  000970  0100               	movlb	0	; () banked
  7626  000972  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7627  000974  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7628  000978                     l1574:
  7629                           
  7630                           ;Bluetooth.c: 426: }
  7631                           ;Bluetooth.c: 427: UARTstring(CRLN);
  7632  000978  0ED6               	movlw	low _CRLN
  7633  00097A  0100               	movlb	0	; () banked
  7634  00097C  6F76               	movwf	UARTstring@data& (0+255),b
  7635  00097E  0E00               	movlw	high _CRLN
  7636  000980  0100               	movlb	0	; () banked
  7637  000982  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7638  000984  ECB0  F038         	call	_UARTstring	;wreg free
  7639                           
  7640                           ;Bluetooth.c: 428: return 1;
  7641                           ;	Return value of _UseBluetooth is never used
  7642  000988  0012               	return	
  7643                           
  7644                           ;Bluetooth.c: 429: }
  7645  00098A  EF61  F00A         	goto	l11930
  7646  00098E                     l11692:
  7647                           
  7648                           ;Bluetooth.c: 430: else
  7649                           ;Bluetooth.c: 431: {
  7650                           ;Bluetooth.c: 432: UARTstring(CRLN);
  7651  00098E  0ED6               	movlw	low _CRLN
  7652  000990  0100               	movlb	0	; () banked
  7653  000992  6F76               	movwf	UARTstring@data& (0+255),b
  7654  000994  0E00               	movlw	high _CRLN
  7655  000996  0100               	movlb	0	; () banked
  7656  000998  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7657  00099A  ECB0  F038         	call	_UARTstring	;wreg free
  7658                           
  7659                           ;Bluetooth.c: 433: UARTstringCRLN((unsigned char *)"NEC code not entered correctly");
  7660  00099E  0E59               	movlw	low STR_35
  7661  0009A0  0100               	movlb	0	; () banked
  7662  0009A2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7663  0009A4  0EFC               	movlw	high STR_35
  7664  0009A6  0100               	movlb	0	; () banked
  7665  0009A8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7666  0009AA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7667                           
  7668                           ;Bluetooth.c: 434: UARTstring(CRLN);
  7669  0009AE  0ED6               	movlw	low _CRLN
  7670  0009B0  0100               	movlb	0	; () banked
  7671  0009B2  6F76               	movwf	UARTstring@data& (0+255),b
  7672  0009B4  0E00               	movlw	high _CRLN
  7673  0009B6  0100               	movlb	0	; () banked
  7674  0009B8  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7675  0009BA  ECB0  F038         	call	_UARTstring	;wreg free
  7676                           
  7677                           ;Bluetooth.c: 435: UARTstringCRLN((unsigned char *)"Usage:");
  7678  0009BE  0EB1               	movlw	low STR_36
  7679  0009C0  0100               	movlb	0	; () banked
  7680  0009C2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7681  0009C4  0EFF               	movlw	high STR_36
  7682  0009C6  0100               	movlb	0	; () banked
  7683  0009C8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7684  0009CA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7685                           
  7686                           ;Bluetooth.c: 436: UARTstringCRLN((unsigned char *)"NEC = (32 bit code)");
  7687  0009CE  0ED2               	movlw	low STR_37
  7688  0009D0  0100               	movlb	0	; () banked
  7689  0009D2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7690  0009D4  0EFD               	movlw	high STR_37
  7691  0009D6  0100               	movlb	0	; () banked
  7692  0009D8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7693  0009DA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7694                           
  7695                           ;Bluetooth.c: 437: UARTstringCRLN((unsigned char *)"        or");
  7696  0009DE  0E80               	movlw	low STR_38
  7697  0009E0  0100               	movlb	0	; () banked
  7698  0009E2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7699  0009E4  0EFF               	movlw	high STR_38
  7700  0009E6  0100               	movlb	0	; () banked
  7701  0009E8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7702  0009EA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7703                           
  7704                           ;Bluetooth.c: 438: UARTstringCRLN((unsigned char *)"NEC = address,command");
  7705  0009EE  0E92               	movlw	low STR_39
  7706  0009F0  0100               	movlb	0	; () banked
  7707  0009F2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7708  0009F4  0EFD               	movlw	high STR_39
  7709  0009F6  0100               	movlb	0	; () banked
  7710  0009F8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7711  0009FA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7712                           
  7713                           ;Bluetooth.c: 439: UARTstring(CRLN);
  7714  0009FE  0ED6               	movlw	low _CRLN
  7715  000A00  0100               	movlb	0	; () banked
  7716  000A02  6F76               	movwf	UARTstring@data& (0+255),b
  7717  000A04  0E00               	movlw	high _CRLN
  7718  000A06  0100               	movlb	0	; () banked
  7719  000A08  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7720  000A0A  ECB0  F038         	call	_UARTstring	;wreg free
  7721                           
  7722                           ;Bluetooth.c: 440: UARTstringCRLN((unsigned char *)"Example:");
  7723  000A0E  0EA8               	movlw	low STR_40
  7724  000A10  0100               	movlb	0	; () banked
  7725  000A12  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7726  000A14  0EFF               	movlw	high STR_40
  7727  000A16  0100               	movlb	0	; () banked
  7728  000A18  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7729  000A1A  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7730                           
  7731                           ;Bluetooth.c: 441: UARTstringCRLN((unsigned char *)"NEC = 0x1CE350af ");
  7732  000A1E  0EA7               	movlw	low STR_41
  7733  000A20  0100               	movlb	0	; () banked
  7734  000A22  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7735  000A24  0EFE               	movlw	high STR_41
  7736  000A26  0100               	movlb	0	; () banked
  7737  000A28  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7738  000A2A  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7739                           
  7740                           ;Bluetooth.c: 442: UARTstringCRLN((unsigned char *)"      or");
  7741  000A2E  0E82               	movlw	low (STR_38+2)
  7742  000A30  0100               	movlb	0	; () banked
  7743  000A32  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7744  000A34  0EFF               	movlw	high (STR_38+2)
  7745  000A36  0100               	movlb	0	; () banked
  7746  000A38  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7747  000A3A  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7748                           
  7749                           ;Bluetooth.c: 443: UARTstringCRLN((unsigned char *)"NEC = 0x38, 0xA");
  7750  000A3E  0E0E               	movlw	low STR_43
  7751  000A40  0100               	movlb	0	; () banked
  7752  000A42  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  7753  000A44  0EFF               	movlw	high STR_43
  7754  000A46  0100               	movlb	0	; () banked
  7755  000A48  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  7756  000A4A  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  7757                           
  7758                           ;Bluetooth.c: 444: UARTstring(CRLN);
  7759  000A4E  0ED6               	movlw	low _CRLN
  7760  000A50  0100               	movlb	0	; () banked
  7761  000A52  6F76               	movwf	UARTstring@data& (0+255),b
  7762  000A54  0E00               	movlw	high _CRLN
  7763  000A56  0100               	movlb	0	; () banked
  7764  000A58  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  7765  000A5A  ECB0  F038         	call	_UARTstring	;wreg free
  7766                           
  7767                           ;Bluetooth.c: 445: return 0;
  7768                           ;	Return value of _UseBluetooth is never used
  7769  000A5E  0012               	return	
  7770                           
  7771                           ;Bluetooth.c: 446: }
  7772                           ;Bluetooth.c: 447: }
  7773  000A60  EF61  F00A         	goto	l11930
  7774  000A64                     l11696:
  7775                           
  7776                           ;Bluetooth.c: 448: else if(StringContainsCaseInsensitive(ReceivedString,(unsigned char *
      +                          )"RemoteButton"))
  7777  000A64  0E00               	movlw	low _ReceivedString
  7778  000A66  0100               	movlb	0	; () banked
  7779  000A68  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  7780  000A6A  0E06               	movlw	high _ReceivedString
  7781  000A6C  0100               	movlb	0	; () banked
  7782  000A6E  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  7783  000A70  0E73               	movlw	low STR_44
  7784  000A72  0100               	movlb	0	; () banked
  7785  000A74  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  7786  000A76  0EFF               	movlw	high STR_44
  7787  000A78  0100               	movlb	0	; () banked
  7788  000A7A  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  7789  000A7C  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  7790  000A80  0900               	iorlw	0
  7791  000A82  B4D8               	btfsc	status,2,c
  7792  000A84  D2A7               	goto	l11770
  7793                           
  7794                           ;Bluetooth.c: 449: {
  7795                           ;Bluetooth.c: 450: if(StringAddEqual(ReceivedString))
  7796  000A86  0E00               	movlw	low _ReceivedString
  7797  000A88  0100               	movlb	0	; () banked
  7798  000A8A  6F84               	movwf	StringAddEqual@Input& (0+255),b
  7799  000A8C  0E06               	movlw	high _ReceivedString
  7800  000A8E  0100               	movlb	0	; () banked
  7801  000A90  6F85               	movwf	(StringAddEqual@Input+1)& (0+255),b
  7802  000A92  EC7F  F025         	call	_StringAddEqual	;wreg free
  7803  000A96  0900               	iorlw	0
  7804  000A98  B4D8               	btfsc	status,2,c
  7805  000A9A  D242               	goto	l11764
  7806                           
  7807                           ;Bluetooth.c: 451: {
  7808                           ;Bluetooth.c: 452: ReceivedStringPos++;
  7809  000A9C  0100               	movlb	0	; () banked
  7810  000A9E  2BCD               	incf	_ReceivedStringPos& (0+255),f,b
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;Bluetooth.c: 453: if(!GetNumber(ReceivedString, 1, &temp))
  7814  000AA0  0E00               	movlw	low _ReceivedString
  7815  000AA2  0100               	movlb	0	; () banked
  7816  000AA4  6F81               	movwf	GetNumber@This& (0+255),b
  7817  000AA6  0E06               	movlw	high _ReceivedString
  7818  000AA8  0100               	movlb	0	; () banked
  7819  000AAA  6F82               	movwf	(GetNumber@This+1)& (0+255),b
  7820  000AAC  0E01               	movlw	1
  7821  000AAE  0100               	movlb	0	; () banked
  7822  000AB0  6F83               	movwf	GetNumber@CommaNumber& (0+255),b
  7823  000AB2  0E4C               	movlw	low UseBluetooth@temp
  7824  000AB4  0100               	movlb	0	; () banked
  7825  000AB6  6F84               	movwf	GetNumber@result& (0+255),b
  7826  000AB8  0E02               	movlw	high UseBluetooth@temp
  7827  000ABA  0100               	movlb	0	; () banked
  7828  000ABC  6F85               	movwf	(GetNumber@result+1)& (0+255),b
  7829  000ABE  EC15  F01B         	call	_GetNumber	;wreg free
  7830  000AC2  0900               	iorlw	0
  7831  000AC4  A4D8               	btfss	status,2,c
  7832  000AC6  D22C               	goto	l11764
  7833                           
  7834                           ;Bluetooth.c: 454: {
  7835                           ;Bluetooth.c: 455: if(temp <= 20 && temp > 0)
  7836  000AC8  0102               	movlb	2	; () banked
  7837  000ACA  514F               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  7838  000ACC  0102               	movlb	2	; () banked
  7839  000ACE  114E               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  7840  000AD0  0102               	movlb	2	; () banked
  7841  000AD2  114D               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  7842  000AD4  E104               	bnz	u14221
  7843  000AD6  0E15               	movlw	21
  7844  000AD8  0102               	movlb	2	; () banked
  7845  000ADA  5D4C               	subwf	UseBluetooth@temp& (0+255),w,b
  7846  000ADC  B0D8               	btfsc	status,0,c
  7847  000ADE                     u14221:
  7848  000ADE  D206               	goto	l11760
  7849                           
  7850                           ; BSR set to: 2
  7851  000AE0  0102               	movlb	2	; () banked
  7852  000AE2  514C               	movf	UseBluetooth@temp& (0+255),w,b
  7853  000AE4  0102               	movlb	2	; () banked
  7854  000AE6  114D               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  7855  000AE8  0102               	movlb	2	; () banked
  7856  000AEA  114E               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  7857  000AEC  0102               	movlb	2	; () banked
  7858  000AEE  114F               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
  7859  000AF0  B4D8               	btfsc	status,2,c
  7860  000AF2  D1FC               	goto	l11760
  7861                           
  7862                           ; BSR set to: 2
  7863                           ;Bluetooth.c: 456: {
  7864                           ;Bluetooth.c: 457: if(!StringContainsCaseInsensitive(ReceivedString,(unsigned char *)"se
      +                          t"))
  7865  000AF4  0E00               	movlw	low _ReceivedString
  7866  000AF6  0100               	movlb	0	; () banked
  7867  000AF8  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  7868  000AFA  0E06               	movlw	high _ReceivedString
  7869  000AFC  0100               	movlb	0	; () banked
  7870  000AFE  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  7871  000B00  0E1E               	movlw	low (STR_55+16)
  7872  000B02  0100               	movlb	0	; () banked
  7873  000B04  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  7874  000B06  0EFE               	movlw	high (STR_55+16)
  7875  000B08  0100               	movlb	0	; () banked
  7876  000B0A  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  7877  000B0C  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  7878  000B10  0900               	iorlw	0
  7879  000B12  A4D8               	btfss	status,2,c
  7880  000B14  D123               	goto	l11734
  7881                           
  7882                           ;Bluetooth.c: 458: {
  7883                           ;Bluetooth.c: 459: tempNec = EncodeNEC(Global.RemoteButtonNEC[temp-1][0], Global.RemoteB
      +                          uttonNEC[temp-1][1]);
  7884  000B16  0EFE               	movlw	254
  7885  000B18  0100               	movlb	0	; () banked
  7886  000B1A  6FB5               	movwf	??_UseBluetooth& (0+255),b
  7887  000B1C  0EFF               	movlw	255
  7888  000B1E  0100               	movlb	0	; () banked
  7889  000B20  6FB6               	movwf	(??_UseBluetooth+1)& (0+255),b
  7890  000B22  C24C  F0B7         	movff	UseBluetooth@temp,??_UseBluetooth+2
  7891  000B26  C24D  F0B8         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  7892  000B2A  90D8               	bcf	status,0,c
  7893  000B2C  0100               	movlb	0	; () banked
  7894  000B2E  37B7               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  7895  000B30  37B8               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  7896  000B32  0100               	movlb	0	; () banked
  7897  000B34  51B5               	movf	??_UseBluetooth& (0+255),w,b
  7898  000B36  0100               	movlb	0	; () banked
  7899  000B38  27B7               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  7900  000B3A  0100               	movlb	0	; () banked
  7901  000B3C  51B6               	movf	(??_UseBluetooth+1)& (0+255),w,b
  7902  000B3E  0100               	movlb	0	; () banked
  7903  000B40  23B8               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  7904  000B42  0E00               	movlw	low _Global
  7905  000B44  0100               	movlb	0	; () banked
  7906  000B46  6FB9               	movwf	(??_UseBluetooth+4)& (0+255),b
  7907  000B48  0E07               	movlw	high _Global
  7908  000B4A  0100               	movlb	0	; () banked
  7909  000B4C  6FBA               	movwf	(??_UseBluetooth+5)& (0+255),b
  7910  000B4E  0E05               	movlw	5
  7911  000B50  0100               	movlb	0	; () banked
  7912  000B52  27B9               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  7913  000B54  0E00               	movlw	0
  7914  000B56  23BA               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  7915  000B58  0100               	movlb	0	; () banked
  7916  000B5A  51B7               	movf	(??_UseBluetooth+2)& (0+255),w,b
  7917  000B5C  0100               	movlb	0	; () banked
  7918  000B5E  27B9               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  7919  000B60  0100               	movlb	0	; () banked
  7920  000B62  51B8               	movf	(??_UseBluetooth+3)& (0+255),w,b
  7921  000B64  0100               	movlb	0	; () banked
  7922  000B66  23BA               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  7923  000B68  0E01               	movlw	1
  7924  000B6A  0100               	movlb	0	; () banked
  7925  000B6C  25B9               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  7926  000B6E  6ED9               	movwf	fsr2l,c
  7927  000B70  0E00               	movlw	0
  7928  000B72  0100               	movlb	0	; () banked
  7929  000B74  21BA               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  7930  000B76  6EDA               	movwf	fsr2h,c
  7931  000B78  50DF               	movf	indf2,w,c
  7932  000B7A  0100               	movlb	0	; () banked
  7933  000B7C  6F79               	movwf	EncodeNEC@command& (0+255),b
  7934  000B7E  0EFE               	movlw	254
  7935  000B80  0100               	movlb	0	; () banked
  7936  000B82  6FBB               	movwf	(??_UseBluetooth+6)& (0+255),b
  7937  000B84  0EFF               	movlw	255
  7938  000B86  0100               	movlb	0	; () banked
  7939  000B88  6FBC               	movwf	(??_UseBluetooth+7)& (0+255),b
  7940  000B8A  C24C  F0BD         	movff	UseBluetooth@temp,??_UseBluetooth+8
  7941  000B8E  C24D  F0BE         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
  7942  000B92  90D8               	bcf	status,0,c
  7943  000B94  0100               	movlb	0	; () banked
  7944  000B96  37BD               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  7945  000B98  37BE               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
  7946  000B9A  0100               	movlb	0	; () banked
  7947  000B9C  51BB               	movf	(??_UseBluetooth+6)& (0+255),w,b
  7948  000B9E  0100               	movlb	0	; () banked
  7949  000BA0  27BD               	addwf	(??_UseBluetooth+8)& (0+255),f,b
  7950  000BA2  0100               	movlb	0	; () banked
  7951  000BA4  51BC               	movf	(??_UseBluetooth+7)& (0+255),w,b
  7952  000BA6  0100               	movlb	0	; () banked
  7953  000BA8  23BE               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
  7954  000BAA  0E05               	movlw	low (_Global+5)
  7955  000BAC  0100               	movlb	0	; () banked
  7956  000BAE  25BD               	addwf	(??_UseBluetooth+8)& (0+255),w,b
  7957  000BB0  6ED9               	movwf	fsr2l,c
  7958  000BB2  0E07               	movlw	high (_Global+5)
  7959  000BB4  0100               	movlb	0	; () banked
  7960  000BB6  21BE               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
  7961  000BB8  6EDA               	movwf	fsr2h,c
  7962  000BBA  50DF               	movf	indf2,w,c
  7963  000BBC  ECF6  F02B         	call	_EncodeNEC
  7964  000BC0  C079  F23D         	movff	?_EncodeNEC,UseBluetooth@tempNec
  7965  000BC4  C07A  F23E         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
  7966  000BC8  C07B  F23F         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
  7967  000BCC  C07C  F240         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
  7968                           
  7969                           ;Bluetooth.c: 460: if(tempNec != 0x00FF00FF)
  7970  000BD0  0102               	movlb	2	; () banked
  7971  000BD2  293D               	incf	UseBluetooth@tempNec& (0+255),w,b
  7972  000BD4  E108               	bnz	u14250
  7973  000BD6  0102               	movlb	2	; () banked
  7974  000BD8  293F               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
  7975  000BDA  0102               	movlb	2	; () banked
  7976  000BDC  113E               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
  7977  000BDE  0102               	movlb	2	; () banked
  7978  000BE0  1140               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
  7979  000BE2  B4D8               	btfsc	status,2,c
  7980  000BE4  D0A9               	goto	l11728
  7981  000BE6                     u14250:
  7982                           
  7983                           ; BSR set to: 2
  7984                           ;Bluetooth.c: 461: {
  7985                           ;Bluetooth.c: 462: SendNEC_wait(tempNec,0);
  7986  000BE6  C23D  F08A         	movff	UseBluetooth@tempNec,SendNEC_wait@code
  7987  000BEA  C23E  F08B         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
  7988  000BEE  C23F  F08C         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
  7989  000BF2  C240  F08D         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
  7990  000BF6  0E00               	movlw	0
  7991  000BF8  0100               	movlb	0	; () banked
  7992  000BFA  6F8E               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  7993  000BFC  EC1F  F035         	call	_SendNEC_wait	;wreg free
  7994                           
  7995                           ;Bluetooth.c: 463: sprintf(buf,(unsigned char *)"Sent NEC code 0x%lX ", tempNec);
  7996  000C00  0E00               	movlw	low UseBluetooth@buf
  7997  000C02  0100               	movlb	0	; () banked
  7998  000C04  6F8B               	movwf	sprintf@sp& (0+255),b
  7999  000C06  0E02               	movlw	high UseBluetooth@buf
  8000  000C08  0100               	movlb	0	; () banked
  8001  000C0A  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  8002  000C0C  0EBD               	movlw	low STR_46
  8003  000C0E  0100               	movlb	0	; () banked
  8004  000C10  6F8D               	movwf	sprintf@f& (0+255),b
  8005  000C12  0EFD               	movlw	high STR_46
  8006  000C14  0100               	movlb	0	; () banked
  8007  000C16  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  8008  000C18  C23D  F08F         	movff	UseBluetooth@tempNec,?_sprintf+4
  8009  000C1C  C23E  F090         	movff	UseBluetooth@tempNec+1,?_sprintf+5
  8010  000C20  C23F  F091         	movff	UseBluetooth@tempNec+2,?_sprintf+6
  8011  000C24  C240  F092         	movff	UseBluetooth@tempNec+3,?_sprintf+7
  8012  000C28  EC3D  F012         	call	_sprintf	;wreg free
  8013                           
  8014                           ;Bluetooth.c: 464: UARTstringCRLN(buf);
  8015  000C2C  0E00               	movlw	low UseBluetooth@buf
  8016  000C2E  0100               	movlb	0	; () banked
  8017  000C30  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8018  000C32  0E02               	movlw	high UseBluetooth@buf
  8019  000C34  0100               	movlb	0	; () banked
  8020  000C36  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8021  000C38  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8022                           
  8023                           ;Bluetooth.c: 465: sprintf(buf,(unsigned char *)"NEC Code address: 0x%02X , command: 0x%
      +                          02X ",Global.RemoteButtonNEC[temp-1][0], Global.RemoteButtonNEC[temp-1][1]);
  8024  000C3C  0E00               	movlw	low UseBluetooth@buf
  8025  000C3E  0100               	movlb	0	; () banked
  8026  000C40  6F8B               	movwf	sprintf@sp& (0+255),b
  8027  000C42  0E02               	movlw	high UseBluetooth@buf
  8028  000C44  0100               	movlb	0	; () banked
  8029  000C46  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  8030  000C48  0EE6               	movlw	low STR_47
  8031  000C4A  0100               	movlb	0	; () banked
  8032  000C4C  6F8D               	movwf	sprintf@f& (0+255),b
  8033  000C4E  0EF9               	movlw	high STR_47
  8034  000C50  0100               	movlb	0	; () banked
  8035  000C52  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  8036  000C54  0EFE               	movlw	254
  8037  000C56  0100               	movlb	0	; () banked
  8038  000C58  6FB5               	movwf	??_UseBluetooth& (0+255),b
  8039  000C5A  0EFF               	movlw	255
  8040  000C5C  0100               	movlb	0	; () banked
  8041  000C5E  6FB6               	movwf	(??_UseBluetooth+1)& (0+255),b
  8042  000C60  C24C  F0B7         	movff	UseBluetooth@temp,??_UseBluetooth+2
  8043  000C64  C24D  F0B8         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  8044  000C68  90D8               	bcf	status,0,c
  8045  000C6A  0100               	movlb	0	; () banked
  8046  000C6C  37B7               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  8047  000C6E  37B8               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  8048  000C70  0100               	movlb	0	; () banked
  8049  000C72  51B5               	movf	??_UseBluetooth& (0+255),w,b
  8050  000C74  0100               	movlb	0	; () banked
  8051  000C76  27B7               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  8052  000C78  0100               	movlb	0	; () banked
  8053  000C7A  51B6               	movf	(??_UseBluetooth+1)& (0+255),w,b
  8054  000C7C  0100               	movlb	0	; () banked
  8055  000C7E  23B8               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  8056  000C80  0E05               	movlw	low (_Global+5)
  8057  000C82  0100               	movlb	0	; () banked
  8058  000C84  25B7               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  8059  000C86  6ED9               	movwf	fsr2l,c
  8060  000C88  0E07               	movlw	high (_Global+5)
  8061  000C8A  0100               	movlb	0	; () banked
  8062  000C8C  21B8               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  8063  000C8E  6EDA               	movwf	fsr2h,c
  8064  000C90  50DF               	movf	indf2,w,c
  8065  000C92  0100               	movlb	0	; () banked
  8066  000C94  6FB9               	movwf	(??_UseBluetooth+4)& (0+255),b
  8067  000C96  0100               	movlb	0	; () banked
  8068  000C98  51B9               	movf	(??_UseBluetooth+4)& (0+255),w,b
  8069  000C9A  0100               	movlb	0	; () banked
  8070  000C9C  6F8F               	movwf	(?_sprintf+4)& (0+255),b
  8071  000C9E  6B90               	clrf	(?_sprintf+5)& (0+255),b
  8072  000CA0  0EFE               	movlw	254
  8073  000CA2  0100               	movlb	0	; () banked
  8074  000CA4  6FBA               	movwf	(??_UseBluetooth+5)& (0+255),b
  8075  000CA6  0EFF               	movlw	255
  8076  000CA8  0100               	movlb	0	; () banked
  8077  000CAA  6FBB               	movwf	(??_UseBluetooth+6)& (0+255),b
  8078  000CAC  C24C  F0BC         	movff	UseBluetooth@temp,??_UseBluetooth+7
  8079  000CB0  C24D  F0BD         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
  8080  000CB4  90D8               	bcf	status,0,c
  8081  000CB6  0100               	movlb	0	; () banked
  8082  000CB8  37BC               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
  8083  000CBA  37BD               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  8084  000CBC  0100               	movlb	0	; () banked
  8085  000CBE  51BA               	movf	(??_UseBluetooth+5)& (0+255),w,b
  8086  000CC0  0100               	movlb	0	; () banked
  8087  000CC2  27BC               	addwf	(??_UseBluetooth+7)& (0+255),f,b
  8088  000CC4  0100               	movlb	0	; () banked
  8089  000CC6  51BB               	movf	(??_UseBluetooth+6)& (0+255),w,b
  8090  000CC8  0100               	movlb	0	; () banked
  8091  000CCA  23BD               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
  8092  000CCC  0E00               	movlw	low _Global
  8093  000CCE  0100               	movlb	0	; () banked
  8094  000CD0  6FBE               	movwf	(??_UseBluetooth+9)& (0+255),b
  8095  000CD2  0E07               	movlw	high _Global
  8096  000CD4  0100               	movlb	0	; () banked
  8097  000CD6  6FBF               	movwf	(??_UseBluetooth+10)& (0+255),b
  8098  000CD8  0E05               	movlw	5
  8099  000CDA  0100               	movlb	0	; () banked
  8100  000CDC  27BE               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  8101  000CDE  0E00               	movlw	0
  8102  000CE0  23BF               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  8103  000CE2  0100               	movlb	0	; () banked
  8104  000CE4  51BC               	movf	(??_UseBluetooth+7)& (0+255),w,b
  8105  000CE6  0100               	movlb	0	; () banked
  8106  000CE8  27BE               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  8107  000CEA  0100               	movlb	0	; () banked
  8108  000CEC  51BD               	movf	(??_UseBluetooth+8)& (0+255),w,b
  8109  000CEE  0100               	movlb	0	; () banked
  8110  000CF0  23BF               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  8111  000CF2  0E01               	movlw	1
  8112  000CF4  0100               	movlb	0	; () banked
  8113  000CF6  25BE               	addwf	(??_UseBluetooth+9)& (0+255),w,b
  8114  000CF8  6ED9               	movwf	fsr2l,c
  8115  000CFA  0E00               	movlw	0
  8116  000CFC  0100               	movlb	0	; () banked
  8117  000CFE  21BF               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
  8118  000D00  6EDA               	movwf	fsr2h,c
  8119  000D02  50DF               	movf	indf2,w,c
  8120  000D04  0100               	movlb	0	; () banked
  8121  000D06  6FC0               	movwf	(??_UseBluetooth+11)& (0+255),b
  8122  000D08  0100               	movlb	0	; () banked
  8123  000D0A  51C0               	movf	(??_UseBluetooth+11)& (0+255),w,b
  8124  000D0C  0100               	movlb	0	; () banked
  8125  000D0E  6F91               	movwf	(?_sprintf+6)& (0+255),b
  8126  000D10  6B92               	clrf	(?_sprintf+7)& (0+255),b
  8127  000D12  EC3D  F012         	call	_sprintf	;wreg free
  8128                           
  8129                           ;Bluetooth.c: 466: UARTstringCRLN(buf);
  8130  000D16  0E00               	movlw	low UseBluetooth@buf
  8131  000D18  0100               	movlb	0	; () banked
  8132  000D1A  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8133  000D1C  0E02               	movlw	high UseBluetooth@buf
  8134  000D1E  0100               	movlb	0	; () banked
  8135  000D20  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8136  000D22  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8137                           
  8138                           ;Bluetooth.c: 467: UARTstring(CRLN);
  8139  000D26  0ED6               	movlw	low _CRLN
  8140  000D28  0100               	movlb	0	; () banked
  8141  000D2A  6F76               	movwf	UARTstring@data& (0+255),b
  8142  000D2C  0E00               	movlw	high _CRLN
  8143  000D2E  0100               	movlb	0	; () banked
  8144  000D30  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8145  000D32  ECB0  F038         	call	_UARTstring	;wreg free
  8146                           
  8147                           ;Bluetooth.c: 468: return 1;
  8148                           ;	Return value of _UseBluetooth is never used
  8149  000D36  0012               	return	
  8150  000D38                     l11728:
  8151                           
  8152                           ;Bluetooth.c: 469: }
  8153                           ;Bluetooth.c: 470: UARTstring(CRLN);
  8154  000D38  0ED6               	movlw	low _CRLN
  8155  000D3A  0100               	movlb	0	; () banked
  8156  000D3C  6F76               	movwf	UARTstring@data& (0+255),b
  8157  000D3E  0E00               	movlw	high _CRLN
  8158  000D40  0100               	movlb	0	; () banked
  8159  000D42  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8160  000D44  ECB0  F038         	call	_UARTstring	;wreg free
  8161                           
  8162                           ;Bluetooth.c: 471: UARTstringCRLN((unsigned char *)"Error: No NEC code saved for specifi
      +                          ed command");
  8163  000D48  0E89               	movlw	low STR_48
  8164  000D4A  0100               	movlb	0	; () banked
  8165  000D4C  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8166  000D4E  0EF9               	movlw	high STR_48
  8167  000D50  0100               	movlb	0	; () banked
  8168  000D52  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8169  000D54  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8170                           
  8171                           ;Bluetooth.c: 472: return 0;
  8172                           ;	Return value of _UseBluetooth is never used
  8173  000D58  0012               	return	
  8174                           
  8175                           ;Bluetooth.c: 473: }
  8176  000D5A  D0E2               	goto	l11764
  8177  000D5C                     l11734:
  8178                           
  8179                           ;Bluetooth.c: 474: else
  8180                           ;Bluetooth.c: 475: {
  8181                           ;Bluetooth.c: 476: if(!WaitForIRsignal())
  8182  000D5C  ECB4  F035         	call	_WaitForIRsignal	;wreg free
  8183  000D60  0900               	iorlw	0
  8184  000D62  B4D8               	btfsc	status,2,c
  8185  000D64  0012               	return	
  8186  000D66  D001               	goto	l11738
  8187                           
  8188                           ;Bluetooth.c: 477: {
  8189                           ;Bluetooth.c: 478: return 0;
  8190                           ;	Return value of _UseBluetooth is never used
  8191  000D68  0012               	return	
  8192  000D6A                     l11738:
  8193                           
  8194                           ;Bluetooth.c: 479: }
  8195                           ;Bluetooth.c: 482: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  8196  000D6A  C0CE  F079         	movff	_IR_NEC,DecodeNEC@Nec
  8197  000D6E  C0CF  F07A         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  8198  000D72  C0D0  F07B         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  8199  000D76  C0D1  F07C         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  8200  000D7A  0E4A               	movlw	low UseBluetooth@NecAddress
  8201  000D7C  0100               	movlb	0	; () banked
  8202  000D7E  6F7D               	movwf	DecodeNEC@address& (0+255),b
  8203  000D80  0E02               	movlw	high UseBluetooth@NecAddress
  8204  000D82  0100               	movlb	0	; () banked
  8205  000D84  6F7E               	movwf	(DecodeNEC@address+1)& (0+255),b
  8206  000D86  0E4B               	movlw	low UseBluetooth@NecCommand
  8207  000D88  0100               	movlb	0	; () banked
  8208  000D8A  6F7F               	movwf	DecodeNEC@command& (0+255),b
  8209  000D8C  0E02               	movlw	high UseBluetooth@NecCommand
  8210  000D8E  0100               	movlb	0	; () banked
  8211  000D90  6F80               	movwf	(DecodeNEC@command+1)& (0+255),b
  8212  000D92  ECD4  F033         	call	_DecodeNEC	;wreg free
  8213                           
  8214                           ;Bluetooth.c: 483: Global.RemoteButtonNEC[temp - 1][0] = NecAddress;
  8215  000D96  0EFE               	movlw	254
  8216  000D98  0100               	movlb	0	; () banked
  8217  000D9A  6FB5               	movwf	??_UseBluetooth& (0+255),b
  8218  000D9C  0EFF               	movlw	255
  8219  000D9E  0100               	movlb	0	; () banked
  8220  000DA0  6FB6               	movwf	(??_UseBluetooth+1)& (0+255),b
  8221  000DA2  C24C  F0B7         	movff	UseBluetooth@temp,??_UseBluetooth+2
  8222  000DA6  C24D  F0B8         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  8223  000DAA  90D8               	bcf	status,0,c
  8224  000DAC  0100               	movlb	0	; () banked
  8225  000DAE  37B7               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  8226  000DB0  37B8               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  8227  000DB2  0100               	movlb	0	; () banked
  8228  000DB4  51B5               	movf	??_UseBluetooth& (0+255),w,b
  8229  000DB6  0100               	movlb	0	; () banked
  8230  000DB8  27B7               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  8231  000DBA  0100               	movlb	0	; () banked
  8232  000DBC  51B6               	movf	(??_UseBluetooth+1)& (0+255),w,b
  8233  000DBE  0100               	movlb	0	; () banked
  8234  000DC0  23B8               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  8235  000DC2  0E05               	movlw	low (_Global+5)
  8236  000DC4  0100               	movlb	0	; () banked
  8237  000DC6  25B7               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  8238  000DC8  6ED9               	movwf	fsr2l,c
  8239  000DCA  0E07               	movlw	high (_Global+5)
  8240  000DCC  0100               	movlb	0	; () banked
  8241  000DCE  21B8               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  8242  000DD0  6EDA               	movwf	fsr2h,c
  8243  000DD2  C24A  FFDF         	movff	UseBluetooth@NecAddress,indf2
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;Bluetooth.c: 484: Global.RemoteButtonNEC[temp - 1][1] = NecCommand;
  8247  000DD6  0EFE               	movlw	254
  8248  000DD8  0100               	movlb	0	; () banked
  8249  000DDA  6FB5               	movwf	??_UseBluetooth& (0+255),b
  8250  000DDC  0EFF               	movlw	255
  8251  000DDE  0100               	movlb	0	; () banked
  8252  000DE0  6FB6               	movwf	(??_UseBluetooth+1)& (0+255),b
  8253  000DE2  C24C  F0B7         	movff	UseBluetooth@temp,??_UseBluetooth+2
  8254  000DE6  C24D  F0B8         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  8255  000DEA  90D8               	bcf	status,0,c
  8256  000DEC  0100               	movlb	0	; () banked
  8257  000DEE  37B7               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  8258  000DF0  37B8               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  8259  000DF2  0100               	movlb	0	; () banked
  8260  000DF4  51B5               	movf	??_UseBluetooth& (0+255),w,b
  8261  000DF6  0100               	movlb	0	; () banked
  8262  000DF8  27B7               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  8263  000DFA  0100               	movlb	0	; () banked
  8264  000DFC  51B6               	movf	(??_UseBluetooth+1)& (0+255),w,b
  8265  000DFE  0100               	movlb	0	; () banked
  8266  000E00  23B8               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  8267  000E02  0E00               	movlw	low _Global
  8268  000E04  0100               	movlb	0	; () banked
  8269  000E06  6FB9               	movwf	(??_UseBluetooth+4)& (0+255),b
  8270  000E08  0E07               	movlw	high _Global
  8271  000E0A  0100               	movlb	0	; () banked
  8272  000E0C  6FBA               	movwf	(??_UseBluetooth+5)& (0+255),b
  8273  000E0E  0E05               	movlw	5
  8274  000E10  0100               	movlb	0	; () banked
  8275  000E12  27B9               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  8276  000E14  0E00               	movlw	0
  8277  000E16  23BA               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  8278  000E18  0100               	movlb	0	; () banked
  8279  000E1A  51B7               	movf	(??_UseBluetooth+2)& (0+255),w,b
  8280  000E1C  0100               	movlb	0	; () banked
  8281  000E1E  27B9               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  8282  000E20  0100               	movlb	0	; () banked
  8283  000E22  51B8               	movf	(??_UseBluetooth+3)& (0+255),w,b
  8284  000E24  0100               	movlb	0	; () banked
  8285  000E26  23BA               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  8286  000E28  0E01               	movlw	1
  8287  000E2A  0100               	movlb	0	; () banked
  8288  000E2C  25B9               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  8289  000E2E  6ED9               	movwf	fsr2l,c
  8290  000E30  0E00               	movlw	0
  8291  000E32  0100               	movlb	0	; () banked
  8292  000E34  21BA               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  8293  000E36  6EDA               	movwf	fsr2h,c
  8294  000E38  C24B  FFDF         	movff	UseBluetooth@NecCommand,indf2
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;Bluetooth.c: 485: SyncGlobalToEEPROM();
  8298  000E3C  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
  8299                           
  8300                           ;Bluetooth.c: 486: UARTstring(CRLN);
  8301  000E40  0ED6               	movlw	low _CRLN
  8302  000E42  0100               	movlb	0	; () banked
  8303  000E44  6F76               	movwf	UARTstring@data& (0+255),b
  8304  000E46  0E00               	movlw	high _CRLN
  8305  000E48  0100               	movlb	0	; () banked
  8306  000E4A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8307  000E4C  ECB0  F038         	call	_UARTstring	;wreg free
  8308                           
  8309                           ;Bluetooth.c: 487: sprintf(buf,(unsigned char *)"RemoteButton%ld now transmits NEC code 
      +                          0x%lX ",temp, IR_NEC);
  8310  000E50  0E00               	movlw	low UseBluetooth@buf
  8311  000E52  0100               	movlb	0	; () banked
  8312  000E54  6F8B               	movwf	sprintf@sp& (0+255),b
  8313  000E56  0E02               	movlw	high UseBluetooth@buf
  8314  000E58  0100               	movlb	0	; () banked
  8315  000E5A  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  8316  000E5C  0EB8               	movlw	low STR_49
  8317  000E5E  0100               	movlb	0	; () banked
  8318  000E60  6F8D               	movwf	sprintf@f& (0+255),b
  8319  000E62  0EF9               	movlw	high STR_49
  8320  000E64  0100               	movlb	0	; () banked
  8321  000E66  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  8322  000E68  C24C  F08F         	movff	UseBluetooth@temp,?_sprintf+4
  8323  000E6C  C24D  F090         	movff	UseBluetooth@temp+1,?_sprintf+5
  8324  000E70  C24E  F091         	movff	UseBluetooth@temp+2,?_sprintf+6
  8325  000E74  C24F  F092         	movff	UseBluetooth@temp+3,?_sprintf+7
  8326  000E78  C0CE  F093         	movff	_IR_NEC,?_sprintf+8
  8327  000E7C  C0CF  F094         	movff	_IR_NEC+1,?_sprintf+9
  8328  000E80  C0D0  F095         	movff	_IR_NEC+2,?_sprintf+10
  8329  000E84  C0D1  F096         	movff	_IR_NEC+3,?_sprintf+11
  8330  000E88  EC3D  F012         	call	_sprintf	;wreg free
  8331                           
  8332                           ;Bluetooth.c: 488: UARTstringCRLN(buf);
  8333  000E8C  0E00               	movlw	low UseBluetooth@buf
  8334  000E8E  0100               	movlb	0	; () banked
  8335  000E90  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8336  000E92  0E02               	movlw	high UseBluetooth@buf
  8337  000E94  0100               	movlb	0	; () banked
  8338  000E96  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8339  000E98  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8340                           
  8341                           ;Bluetooth.c: 489: sprintf(buf,(unsigned char *)"NEC Code address: 0x%02X , command: 0x%
      +                          02X ",NecAddress, NecCommand);
  8342  000E9C  0E00               	movlw	low UseBluetooth@buf
  8343  000E9E  0100               	movlb	0	; () banked
  8344  000EA0  6F8B               	movwf	sprintf@sp& (0+255),b
  8345  000EA2  0E02               	movlw	high UseBluetooth@buf
  8346  000EA4  0100               	movlb	0	; () banked
  8347  000EA6  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  8348  000EA8  0EE6               	movlw	low STR_47
  8349  000EAA  0100               	movlb	0	; () banked
  8350  000EAC  6F8D               	movwf	sprintf@f& (0+255),b
  8351  000EAE  0EF9               	movlw	high STR_47
  8352  000EB0  0100               	movlb	0	; () banked
  8353  000EB2  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  8354  000EB4  C24A  F08F         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8355  000EB8  0100               	movlb	0	; () banked
  8356  000EBA  6B90               	clrf	(?_sprintf+5)& (0+255),b
  8357  000EBC  C24B  F091         	movff	UseBluetooth@NecCommand,?_sprintf+6
  8358  000EC0  0100               	movlb	0	; () banked
  8359  000EC2  6B92               	clrf	(?_sprintf+7)& (0+255),b
  8360  000EC4  EC3D  F012         	call	_sprintf	;wreg free
  8361                           
  8362                           ;Bluetooth.c: 490: UARTstringCRLN(buf);
  8363  000EC8  0E00               	movlw	low UseBluetooth@buf
  8364  000ECA  0100               	movlb	0	; () banked
  8365  000ECC  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8366  000ECE  0E02               	movlw	high UseBluetooth@buf
  8367  000ED0  0100               	movlb	0	; () banked
  8368  000ED2  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8369  000ED4  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8370                           
  8371                           ;Bluetooth.c: 491: UARTstring(CRLN);
  8372  000ED8  0ED6               	movlw	low _CRLN
  8373  000EDA  0100               	movlb	0	; () banked
  8374  000EDC  6F76               	movwf	UARTstring@data& (0+255),b
  8375  000EDE  0E00               	movlw	high _CRLN
  8376  000EE0  0100               	movlb	0	; () banked
  8377  000EE2  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8378  000EE4  ECB0  F038         	call	_UARTstring	;wreg free
  8379                           
  8380                           ;Bluetooth.c: 492: return 1;
  8381                           ;	Return value of _UseBluetooth is never used
  8382  000EE8  0012               	return	
  8383                           
  8384                           ;Bluetooth.c: 493: }
  8385                           ;Bluetooth.c: 494: }
  8386  000EEA  D01A               	goto	l11764
  8387  000EEC                     l11760:
  8388                           
  8389                           ;Bluetooth.c: 495: else
  8390                           ;Bluetooth.c: 496: {
  8391                           ;Bluetooth.c: 497: UARTstring(CRLN);
  8392  000EEC  0ED6               	movlw	low _CRLN
  8393  000EEE  0100               	movlb	0	; () banked
  8394  000EF0  6F76               	movwf	UARTstring@data& (0+255),b
  8395  000EF2  0E00               	movlw	high _CRLN
  8396  000EF4  0100               	movlb	0	; () banked
  8397  000EF6  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8398  000EF8  ECB0  F038         	call	_UARTstring	;wreg free
  8399                           
  8400                           ;Bluetooth.c: 498: UARTstringCRLN((unsigned char *)"Error: Remote button number too high
      +                          ");
  8401  000EFC  0EB1               	movlw	low STR_51
  8402  000EFE  0100               	movlb	0	; () banked
  8403  000F00  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8404  000F02  0EFA               	movlw	high STR_51
  8405  000F04  0100               	movlb	0	; () banked
  8406  000F06  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8407  000F08  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8408                           
  8409                           ;Bluetooth.c: 499: UARTstring(CRLN);
  8410  000F0C  0ED6               	movlw	low _CRLN
  8411  000F0E  0100               	movlb	0	; () banked
  8412  000F10  6F76               	movwf	UARTstring@data& (0+255),b
  8413  000F12  0E00               	movlw	high _CRLN
  8414  000F14  0100               	movlb	0	; () banked
  8415  000F16  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8416  000F18  ECB0  F038         	call	_UARTstring	;wreg free
  8417                           
  8418                           ;Bluetooth.c: 500: return 0;
  8419                           ;	Return value of _UseBluetooth is never used
  8420  000F1C  0012               	return	
  8421  000F1E  D000               	goto	l11764
  8422  000F20                     l11764:
  8423                           
  8424                           ;Bluetooth.c: 501: }
  8425                           ;Bluetooth.c: 502: }
  8426                           ;Bluetooth.c: 503: }
  8427                           ;Bluetooth.c: 504: UARTstring(CRLN);
  8428  000F20  0ED6               	movlw	low _CRLN
  8429  000F22  0100               	movlb	0	; () banked
  8430  000F24  6F76               	movwf	UARTstring@data& (0+255),b
  8431  000F26  0E00               	movlw	high _CRLN
  8432  000F28  0100               	movlb	0	; () banked
  8433  000F2A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8434  000F2C  ECB0  F038         	call	_UARTstring	;wreg free
  8435                           
  8436                           ;Bluetooth.c: 505: UARTstringCRLN((unsigned char *)"Error: Remote button not specified")
      +                          ;
  8437  000F30  0EFA               	movlw	low STR_52
  8438  000F32  0100               	movlb	0	; () banked
  8439  000F34  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8440  000F36  0EFA               	movlw	high STR_52
  8441  000F38  0100               	movlb	0	; () banked
  8442  000F3A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8443  000F3C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8444                           
  8445                           ;Bluetooth.c: 506: UARTstring(CRLN);
  8446  000F40  0ED6               	movlw	low _CRLN
  8447  000F42  0100               	movlb	0	; () banked
  8448  000F44  6F76               	movwf	UARTstring@data& (0+255),b
  8449  000F46  0E00               	movlw	high _CRLN
  8450  000F48  0100               	movlb	0	; () banked
  8451  000F4A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8452  000F4C  ECB0  F038         	call	_UARTstring	;wreg free
  8453                           
  8454                           ;Bluetooth.c: 507: UARTstringCRLN((unsigned char *)"Usage:");
  8455  000F50  0EB1               	movlw	low STR_36
  8456  000F52  0100               	movlb	0	; () banked
  8457  000F54  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8458  000F56  0EFF               	movlw	high STR_36
  8459  000F58  0100               	movlb	0	; () banked
  8460  000F5A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8461  000F5C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8462                           
  8463                           ;Bluetooth.c: 508: UARTstringCRLN((unsigned char *)"RemoteButton'x'");
  8464  000F60  0EFE               	movlw	low STR_54
  8465  000F62  0100               	movlb	0	; () banked
  8466  000F64  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8467  000F66  0EFE               	movlw	high STR_54
  8468  000F68  0100               	movlb	0	; () banked
  8469  000F6A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8470  000F6C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8471                           
  8472                           ;Bluetooth.c: 509: UARTstringCRLN((unsigned char *)"RemoteButton'x' set");
  8473  000F70  0E0E               	movlw	low STR_55
  8474  000F72  0100               	movlb	0	; () banked
  8475  000F74  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8476  000F76  0EFE               	movlw	high STR_55
  8477  000F78  0100               	movlb	0	; () banked
  8478  000F7A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8479  000F7C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8480                           
  8481                           ;Bluetooth.c: 510: UARTstring(CRLN);
  8482  000F80  0ED6               	movlw	low _CRLN
  8483  000F82  0100               	movlb	0	; () banked
  8484  000F84  6F76               	movwf	UARTstring@data& (0+255),b
  8485  000F86  0E00               	movlw	high _CRLN
  8486  000F88  0100               	movlb	0	; () banked
  8487  000F8A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8488  000F8C  ECB0  F038         	call	_UARTstring	;wreg free
  8489                           
  8490                           ;Bluetooth.c: 511: UARTstringCRLN((unsigned char *)"Example:");
  8491  000F90  0EA8               	movlw	low STR_40
  8492  000F92  0100               	movlb	0	; () banked
  8493  000F94  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8494  000F96  0EFF               	movlw	high STR_40
  8495  000F98  0100               	movlb	0	; () banked
  8496  000F9A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8497  000F9C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8498                           
  8499                           ;Bluetooth.c: 512: UARTstringCRLN((unsigned char *)"RemoteButton1");
  8500  000FA0  0E3D               	movlw	low STR_57
  8501  000FA2  0100               	movlb	0	; () banked
  8502  000FA4  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8503  000FA6  0EFF               	movlw	high STR_57
  8504  000FA8  0100               	movlb	0	; () banked
  8505  000FAA  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8506  000FAC  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8507                           
  8508                           ;Bluetooth.c: 513: UARTstringCRLN((unsigned char *)"RemoteButton1 set");
  8509  000FB0  0EB9               	movlw	low STR_58
  8510  000FB2  0100               	movlb	0	; () banked
  8511  000FB4  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8512  000FB6  0EFE               	movlw	high STR_58
  8513  000FB8  0100               	movlb	0	; () banked
  8514  000FBA  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8515  000FBC  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8516                           
  8517                           ;Bluetooth.c: 514: UARTstring(CRLN);
  8518  000FC0  0ED6               	movlw	low _CRLN
  8519  000FC2  0100               	movlb	0	; () banked
  8520  000FC4  6F76               	movwf	UARTstring@data& (0+255),b
  8521  000FC6  0E00               	movlw	high _CRLN
  8522  000FC8  0100               	movlb	0	; () banked
  8523  000FCA  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8524  000FCC  ECB0  F038         	call	_UARTstring	;wreg free
  8525                           
  8526                           ;Bluetooth.c: 515: return 0;
  8527                           ;	Return value of _UseBluetooth is never used
  8528  000FD0  0012               	return	
  8529                           
  8530                           ;Bluetooth.c: 516: }
  8531  000FD2  D277               	goto	l11930
  8532  000FD4                     l11770:
  8533                           
  8534                           ;Bluetooth.c: 517: else if(StringContainsCaseInsensitive(ReceivedString,(unsigned char *
      +                          )"RF set"))
  8535  000FD4  0E00               	movlw	low _ReceivedString
  8536  000FD6  0100               	movlb	0	; () banked
  8537  000FD8  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  8538  000FDA  0E06               	movlw	high _ReceivedString
  8539  000FDC  0100               	movlb	0	; () banked
  8540  000FDE  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  8541  000FE0  0EB8               	movlw	low STR_59
  8542  000FE2  0100               	movlb	0	; () banked
  8543  000FE4  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8544  000FE6  0EFF               	movlw	high STR_59
  8545  000FE8  0100               	movlb	0	; () banked
  8546  000FEA  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8547  000FEC  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  8548  000FF0  0900               	iorlw	0
  8549  000FF2  B4D8               	btfsc	status,2,c
  8550  000FF4  D24C               	goto	l11926
  8551                           
  8552                           ;Bluetooth.c: 518: {
  8553                           ;Bluetooth.c: 519: if(!StringAddEqual(ReceivedString))
  8554  000FF6  0E00               	movlw	low _ReceivedString
  8555  000FF8  0100               	movlb	0	; () banked
  8556  000FFA  6F84               	movwf	StringAddEqual@Input& (0+255),b
  8557  000FFC  0E06               	movlw	high _ReceivedString
  8558  000FFE  0100               	movlb	0	; () banked
  8559  001000  6F85               	movwf	(StringAddEqual@Input+1)& (0+255),b
  8560  001002  EC7F  F025         	call	_StringAddEqual	;wreg free
  8561  001006  0900               	iorlw	0
  8562  001008  A4D8               	btfss	status,2,c
  8563  00100A  D011               	goto	l11778
  8564                           
  8565                           ;Bluetooth.c: 520: {
  8566                           ;Bluetooth.c: 521: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
  8567  00100C  0E67               	movlw	low STR_60
  8568  00100E  0100               	movlb	0	; () banked
  8569  001010  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8570  001012  0EFA               	movlw	high STR_60
  8571  001014  0100               	movlb	0	; () banked
  8572  001016  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8573  001018  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8574                           
  8575                           ;Bluetooth.c: 522: UARTstring(CRLN);
  8576  00101C  0ED6               	movlw	low _CRLN
  8577  00101E  0100               	movlb	0	; () banked
  8578  001020  6F76               	movwf	UARTstring@data& (0+255),b
  8579  001022  0E00               	movlw	high _CRLN
  8580  001024  0100               	movlb	0	; () banked
  8581  001026  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8582  001028  ECB0  F038         	call	_UARTstring	;wreg free
  8583                           
  8584                           ;Bluetooth.c: 523: return 0;
  8585                           ;	Return value of _UseBluetooth is never used
  8586  00102C  0012               	return	
  8587  00102E                     l11778:
  8588                           
  8589                           ;Bluetooth.c: 524: }
  8590                           ;Bluetooth.c: 525: ReceivedStringPos++;
  8591  00102E  0100               	movlb	0	; () banked
  8592  001030  2BCD               	incf	_ReceivedStringPos& (0+255),f,b
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;Bluetooth.c: 526: UARTstring(CRLN);
  8596  001032  0ED6               	movlw	low _CRLN
  8597  001034  0100               	movlb	0	; () banked
  8598  001036  6F76               	movwf	UARTstring@data& (0+255),b
  8599  001038  0E00               	movlw	high _CRLN
  8600  00103A  0100               	movlb	0	; () banked
  8601  00103C  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8602  00103E  ECB0  F038         	call	_UARTstring	;wreg free
  8603                           
  8604                           ;Bluetooth.c: 527: if(!GetNumber(ReceivedString, 1, &temp))
  8605  001042  0E00               	movlw	low _ReceivedString
  8606  001044  0100               	movlb	0	; () banked
  8607  001046  6F81               	movwf	GetNumber@This& (0+255),b
  8608  001048  0E06               	movlw	high _ReceivedString
  8609  00104A  0100               	movlb	0	; () banked
  8610  00104C  6F82               	movwf	(GetNumber@This+1)& (0+255),b
  8611  00104E  0E01               	movlw	1
  8612  001050  0100               	movlb	0	; () banked
  8613  001052  6F83               	movwf	GetNumber@CommaNumber& (0+255),b
  8614  001054  0E4C               	movlw	low UseBluetooth@temp
  8615  001056  0100               	movlb	0	; () banked
  8616  001058  6F84               	movwf	GetNumber@result& (0+255),b
  8617  00105A  0E02               	movlw	high UseBluetooth@temp
  8618  00105C  0100               	movlb	0	; () banked
  8619  00105E  6F85               	movwf	(GetNumber@result+1)& (0+255),b
  8620  001060  EC15  F01B         	call	_GetNumber	;wreg free
  8621  001064  0900               	iorlw	0
  8622  001066  A4D8               	btfss	status,2,c
  8623  001068  D003               	goto	l11786
  8624                           
  8625                           ;Bluetooth.c: 528: {
  8626                           ;Bluetooth.c: 529: rfconf = (unsigned char) temp;
  8627  00106A  C24C  F249         	movff	UseBluetooth@temp,UseBluetooth@rfconf
  8628                           
  8629                           ;Bluetooth.c: 530: }
  8630  00106E  D011               	goto	l11790
  8631  001070                     l11786:
  8632                           
  8633                           ;Bluetooth.c: 531: else
  8634                           ;Bluetooth.c: 532: {
  8635                           ;Bluetooth.c: 533: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
  8636  001070  0E67               	movlw	low STR_60
  8637  001072  0100               	movlb	0	; () banked
  8638  001074  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8639  001076  0EFA               	movlw	high STR_60
  8640  001078  0100               	movlb	0	; () banked
  8641  00107A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8642  00107C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8643                           
  8644                           ;Bluetooth.c: 534: UARTstring(CRLN);
  8645  001080  0ED6               	movlw	low _CRLN
  8646  001082  0100               	movlb	0	; () banked
  8647  001084  6F76               	movwf	UARTstring@data& (0+255),b
  8648  001086  0E00               	movlw	high _CRLN
  8649  001088  0100               	movlb	0	; () banked
  8650  00108A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8651  00108C  ECB0  F038         	call	_UARTstring	;wreg free
  8652                           
  8653                           ;Bluetooth.c: 535: return 0;
  8654                           ;	Return value of _UseBluetooth is never used
  8655  001090  0012               	return	
  8656  001092                     l11790:
  8657                           
  8658                           ;Bluetooth.c: 536: }
  8659                           ;Bluetooth.c: 537: if(rfconf <= 0 || rfconf > 2)
  8660  001092  0102               	movlb	2	; () banked
  8661  001094  5149               	movf	UseBluetooth@rfconf& (0+255),w,b
  8662  001096  0102               	movlb	2	; () banked
  8663  001098  B4D8               	btfsc	status,2,c
  8664  00109A  D005               	goto	l11794
  8665                           
  8666                           ; BSR set to: 2
  8667  00109C  0E02               	movlw	2
  8668  00109E  0102               	movlb	2	; () banked
  8669  0010A0  6549               	cpfsgt	UseBluetooth@rfconf& (0+255),b
  8670  0010A2  D012               	goto	l11798
  8671  0010A4  D000               	goto	l11794
  8672  0010A6                     l11794:
  8673                           
  8674                           ; BSR set to: 2
  8675                           ;Bluetooth.c: 538: {
  8676                           ;Bluetooth.c: 539: UARTstringCRLN((unsigned char *)"Error: RF configuration out of range
      +                          ");
  8677  0010A6  0E8C               	movlw	low STR_62
  8678  0010A8  0100               	movlb	0	; () banked
  8679  0010AA  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8680  0010AC  0EFA               	movlw	high STR_62
  8681  0010AE  0100               	movlb	0	; () banked
  8682  0010B0  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8683  0010B2  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8684                           
  8685                           ;Bluetooth.c: 540: UARTstring(CRLN);
  8686  0010B6  0ED6               	movlw	low _CRLN
  8687  0010B8  0100               	movlb	0	; () banked
  8688  0010BA  6F76               	movwf	UARTstring@data& (0+255),b
  8689  0010BC  0E00               	movlw	high _CRLN
  8690  0010BE  0100               	movlb	0	; () banked
  8691  0010C0  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8692  0010C2  ECB0  F038         	call	_UARTstring	;wreg free
  8693                           
  8694                           ;Bluetooth.c: 541: return 0;
  8695                           ;	Return value of _UseBluetooth is never used
  8696  0010C6  0012               	return	
  8697  0010C8                     l11798:
  8698                           
  8699                           ;Bluetooth.c: 542: }
  8700                           ;Bluetooth.c: 543: if(GetStringAfterComma(ReceivedString, 1, rfchannelSTR))
  8701  0010C8  0E00               	movlw	low _ReceivedString
  8702  0010CA  0100               	movlb	0	; () banked
  8703  0010CC  6F75               	movwf	GetStringAfterComma@This& (0+255),b
  8704  0010CE  0E06               	movlw	high _ReceivedString
  8705  0010D0  0100               	movlb	0	; () banked
  8706  0010D2  6F76               	movwf	(GetStringAfterComma@This+1)& (0+255),b
  8707  0010D4  0E01               	movlw	1
  8708  0010D6  0100               	movlb	0	; () banked
  8709  0010D8  6F77               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
  8710  0010DA  0E32               	movlw	low UseBluetooth@rfchannelSTR
  8711  0010DC  0100               	movlb	0	; () banked
  8712  0010DE  6F78               	movwf	GetStringAfterComma@result& (0+255),b
  8713  0010E0  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8714  0010E2  0100               	movlb	0	; () banked
  8715  0010E4  6F79               	movwf	(GetStringAfterComma@result+1)& (0+255),b
  8716  0010E6  EC2D  F02D         	call	_GetStringAfterComma	;wreg free
  8717  0010EA  0900               	iorlw	0
  8718  0010EC  B4D8               	btfsc	status,2,c
  8719  0010EE  D012               	goto	l11806
  8720                           
  8721                           ;Bluetooth.c: 544: {
  8722                           ;Bluetooth.c: 545: UARTstringCRLN((unsigned char *)"Error: No RF channel specified");
  8723  0010F0  0E1B               	movlw	low STR_63
  8724  0010F2  0100               	movlb	0	; () banked
  8725  0010F4  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8726  0010F6  0EFC               	movlw	high STR_63
  8727  0010F8  0100               	movlb	0	; () banked
  8728  0010FA  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8729  0010FC  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8730                           
  8731                           ;Bluetooth.c: 546: UARTstring(CRLN);
  8732  001100  0ED6               	movlw	low _CRLN
  8733  001102  0100               	movlb	0	; () banked
  8734  001104  6F76               	movwf	UARTstring@data& (0+255),b
  8735  001106  0E00               	movlw	high _CRLN
  8736  001108  0100               	movlb	0	; () banked
  8737  00110A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8738  00110C  ECB0  F038         	call	_UARTstring	;wreg free
  8739                           
  8740                           ;Bluetooth.c: 547: return 0;
  8741                           ;	Return value of _UseBluetooth is never used
  8742  001110  0012               	return	
  8743                           
  8744                           ;Bluetooth.c: 548: }
  8745  001112  D1D7               	goto	l11930
  8746  001114                     l11806:
  8747                           
  8748                           ;Bluetooth.c: 549: else
  8749                           ;Bluetooth.c: 550: {
  8750                           ;Bluetooth.c: 551: lowercaseString(rfchannelSTR);
  8751  001114  0E32               	movlw	low UseBluetooth@rfchannelSTR
  8752  001116  0100               	movlb	0	; () banked
  8753  001118  6F75               	movwf	lowercaseString@Input& (0+255),b
  8754  00111A  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8755  00111C  0100               	movlb	0	; () banked
  8756  00111E  6F76               	movwf	(lowercaseString@Input+1)& (0+255),b
  8757  001120  ECF3  F039         	call	_lowercaseString	;wreg free
  8758                           
  8759                           ;Bluetooth.c: 552: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
  8760  001124  0102               	movlb	2	; () banked
  8761  001126  5133               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
  8762  001128  B4D8               	btfsc	status,2,c
  8763  00112A  D005               	goto	l11812
  8764                           
  8765                           ; BSR set to: 2
  8766  00112C  0E20               	movlw	32
  8767  00112E  0102               	movlb	2	; () banked
  8768  001130  1933               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
  8769  001132  A4D8               	btfss	status,2,c
  8770  001134  D19A               	goto	l11922
  8771  001136                     l11812:
  8772                           
  8773                           ; BSR set to: 2
  8774                           ;Bluetooth.c: 553: {
  8775                           ;Bluetooth.c: 554: rfchannelSTR[1] = 0;
  8776  001136  0E00               	movlw	0
  8777  001138  0102               	movlb	2	; () banked
  8778  00113A  6F33               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
  8779                           
  8780                           ; BSR set to: 2
  8781                           ;Bluetooth.c: 555: if(rfconf == 1)
  8782  00113C  0102               	movlb	2	; () banked
  8783  00113E  0549               	decf	UseBluetooth@rfconf& (0+255),w,b
  8784  001140  A4D8               	btfss	status,2,c
  8785  001142  D015               	goto	l11820
  8786                           
  8787                           ; BSR set to: 2
  8788                           ;Bluetooth.c: 556: {
  8789                           ;Bluetooth.c: 557: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
  8790  001144  0EF9               	movlw	low _Conf1_Channels
  8791  001146  0100               	movlb	0	; () banked
  8792  001148  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  8793  00114A  0E02               	movlw	high _Conf1_Channels
  8794  00114C  0100               	movlb	0	; () banked
  8795  00114E  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  8796  001150  0E32               	movlw	low UseBluetooth@rfchannelSTR
  8797  001152  0100               	movlb	0	; () banked
  8798  001154  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8799  001156  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8800  001158  0100               	movlb	0	; () banked
  8801  00115A  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8802  00115C  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  8803  001160  0900               	iorlw	0
  8804  001162  A4D8               	btfss	status,2,c
  8805  001164  D019               	goto	l1601
  8806                           
  8807                           ;Bluetooth.c: 558: {
  8808                           ;Bluetooth.c: 559: ok = 0;
  8809  001166  0E00               	movlw	0
  8810  001168  0102               	movlb	2	; () banked
  8811  00116A  6F43               	movwf	UseBluetooth@ok& (0+255),b
  8812                           
  8813                           ; BSR set to: 2
  8814                           ;Bluetooth.c: 560: }
  8815                           ;Bluetooth.c: 561: }
  8816  00116C  D015               	goto	l1601
  8817  00116E                     l11820:
  8818                           
  8819                           ; BSR set to: 2
  8820                           ;Bluetooth.c: 562: else if(rfconf == 2)
  8821  00116E  0E02               	movlw	2
  8822  001170  0102               	movlb	2	; () banked
  8823  001172  1949               	xorwf	UseBluetooth@rfconf& (0+255),w,b
  8824  001174  A4D8               	btfss	status,2,c
  8825  001176  D010               	goto	l1601
  8826                           
  8827                           ; BSR set to: 2
  8828                           ;Bluetooth.c: 563: {
  8829                           ;Bluetooth.c: 564: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
  8830  001178  0EFA               	movlw	low _Conf2_Channels
  8831  00117A  0100               	movlb	0	; () banked
  8832  00117C  6F78               	movwf	StringContainsCaseInsensitive@This& (0+255),b
  8833  00117E  0E01               	movlw	high _Conf2_Channels
  8834  001180  0100               	movlb	0	; () banked
  8835  001182  6F79               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
  8836  001184  0E32               	movlw	low UseBluetooth@rfchannelSTR
  8837  001186  0100               	movlb	0	; () banked
  8838  001188  6F7A               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8839  00118A  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8840  00118C  0100               	movlb	0	; () banked
  8841  00118E  6F7B               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8842  001190  EC29  F031         	call	_StringContainsCaseInsensitive	;wreg free
  8843  001194  D7E5               	goto	L6
  8844                           
  8845                           ; BSR set to: 2
  8846                           
  8847                           ;Bluetooth.c: 565: {
  8848                           ;Bluetooth.c: 566: ok = 0;
  8849  001196  D000               	goto	l1601
  8850  001198                     l1601:
  8851                           
  8852                           ;Bluetooth.c: 567: }
  8853                           ;Bluetooth.c: 568: }
  8854                           ;Bluetooth.c: 569: if(!ok)
  8855  001198  0102               	movlb	2	; () banked
  8856  00119A  5143               	movf	UseBluetooth@ok& (0+255),w,b
  8857  00119C  0102               	movlb	2	; () banked
  8858  00119E  A4D8               	btfss	status,2,c
  8859  0011A0  D011               	goto	l11830
  8860                           
  8861                           ; BSR set to: 2
  8862                           ;Bluetooth.c: 570: {
  8863                           ;Bluetooth.c: 571: UARTstringCRLN((unsigned char *)"Error: RF channel out of range");
  8864  0011A2  0E3A               	movlw	low STR_64
  8865  0011A4  0100               	movlb	0	; () banked
  8866  0011A6  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  8867  0011A8  0EFC               	movlw	high STR_64
  8868  0011AA  0100               	movlb	0	; () banked
  8869  0011AC  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8870  0011AE  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  8871                           
  8872                           ;Bluetooth.c: 572: UARTstring(CRLN);
  8873  0011B2  0ED6               	movlw	low _CRLN
  8874  0011B4  0100               	movlb	0	; () banked
  8875  0011B6  6F76               	movwf	UARTstring@data& (0+255),b
  8876  0011B8  0E00               	movlw	high _CRLN
  8877  0011BA  0100               	movlb	0	; () banked
  8878  0011BC  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  8879  0011BE  ECB0  F038         	call	_UARTstring	;wreg free
  8880                           
  8881                           ;Bluetooth.c: 573: return 0;
  8882                           ;	Return value of _UseBluetooth is never used
  8883  0011C2  0012               	return	
  8884  0011C4                     l11830:
  8885                           
  8886                           ;Bluetooth.c: 574: }
  8887                           ;Bluetooth.c: 575: if(!WaitForIRsignal())
  8888  0011C4  ECB4  F035         	call	_WaitForIRsignal	;wreg free
  8889  0011C8  0900               	iorlw	0
  8890  0011CA  B4D8               	btfsc	status,2,c
  8891  0011CC  0012               	return	
  8892  0011CE  D001               	goto	l11834
  8893                           
  8894                           ;Bluetooth.c: 576: {
  8895                           ;Bluetooth.c: 577: return 0;
  8896                           ;	Return value of _UseBluetooth is never used
  8897  0011D0  0012               	return	
  8898  0011D2                     l11834:
  8899                           
  8900                           ;Bluetooth.c: 578: }
  8901                           ;Bluetooth.c: 580: if(rfconf == 1)
  8902  0011D2  0102               	movlb	2	; () banked
  8903  0011D4  0549               	decf	UseBluetooth@rfconf& (0+255),w,b
  8904  0011D6  A4D8               	btfss	status,2,c
  8905  0011D8  D017               	goto	l11848
  8906                           
  8907                           ; BSR set to: 2
  8908                           ;Bluetooth.c: 581: {
  8909                           ;Bluetooth.c: 582: if(rfchannelSTR[0] == 'd')
  8910  0011DA  0E64               	movlw	100
  8911  0011DC  0102               	movlb	2	; () banked
  8912  0011DE  1932               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
  8913  0011E0  A4D8               	btfss	status,2,c
  8914  0011E2  D002               	goto	l11840
  8915                           
  8916                           ; BSR set to: 2
  8917                           ;Bluetooth.c: 583: {
  8918                           ;Bluetooth.c: 584: tempRFArray = 0;
  8919  0011E4  0E00               	movlw	0
  8920  0011E6  D09A               	goto	L5
  8921  0011E8                     l11840:
  8922                           
  8923                           ; BSR set to: 2
  8924                           ;Bluetooth.c: 586: else if(rfchannelSTR[0] == 'e')
  8925  0011E8  0E65               	movlw	101
  8926  0011EA  0102               	movlb	2	; () banked
  8927  0011EC  1932               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
  8928  0011EE  A4D8               	btfss	status,2,c
  8929  0011F0  D002               	goto	l11844
  8930                           
  8931                           ; BSR set to: 2
  8932                           ;Bluetooth.c: 587: {
  8933                           ;Bluetooth.c: 588: tempRFArray = 1;
  8934  0011F2  0E01               	movlw	1
  8935  0011F4  D093               	goto	L5
  8936  0011F6                     l11844:
  8937                           
  8938                           ; BSR set to: 2
  8939                           ;Bluetooth.c: 590: else if(rfchannelSTR[0] == 'f')
  8940  0011F6  0E66               	movlw	102
  8941  0011F8  0102               	movlb	2	; () banked
  8942  0011FA  1932               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
  8943  0011FC  A4D8               	btfss	status,2,c
  8944  0011FE  0012               	return	
  8945                           
  8946                           ; BSR set to: 2
  8947                           ;Bluetooth.c: 591: {
  8948                           ;Bluetooth.c: 592: tempRFArray = 2;
  8949  001200  0E02               	movlw	2
  8950  001202  D08C               	goto	L5
  8951                           
  8952                           ; BSR set to: 2
  8953                           ;Bluetooth.c: 594: else
  8954                           ;Bluetooth.c: 595: {
  8955                           ;Bluetooth.c: 597: return 0;
  8956                           ;	Return value of _UseBluetooth is never used
  8957                           
  8958                           ;Bluetooth.c: 593: }
  8959  001204  0012               	return	
  8960                           
  8961                           ; BSR set to: 2
  8962                           ;Bluetooth.c: 598: }
  8963                           ;Bluetooth.c: 599: }
  8964                           
  8965                           ; BSR set to: 2
  8966                           
  8967                           ; BSR set to: 2
  8968  001206  D08F               	goto	l11898
  8969  001208                     l11848:
  8970                           
  8971                           ; BSR set to: 2
  8972                           ;Bluetooth.c: 600: else if(rfconf ==2)
  8973  001208  0E02               	movlw	2
  8974  00120A  0102               	movlb	2	; () banked
  8975  00120C  1949               	xorwf	UseBluetooth@rfconf& (0+255),w,b
  8976  00120E  A4D8               	btfss	status,2,c
  8977  001210  D08A               	goto	l11898
  8978                           
  8979                           ; BSR set to: 2
  8980                           ;Bluetooth.c: 601: {
  8981                           ;Bluetooth.c: 602: if(rfchannelSTR[0] == 'b')
  8982  001212  0E62               	movlw	98
  8983  001214  0102               	movlb	2	; () banked
  8984  001216  1932               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
  8985  001218  A4D8               	btfss	status,2,c
  8986  00121A  D002               	goto	l11854
  8987                           
  8988                           ; BSR set to: 2
  8989                           ;Bluetooth.c: 603: {
  8990                           ;Bluetooth.c: 604: tempRFArray = 3;
  8991  00121C  0E03               	movlw	3
  8992  00121E  D07E               	goto	L5
  8993  001220                     l11854:
  8994                           
  8995                           ; BSR set to: 2
  8996                           ;Bluetooth.c: 606: else if(rfchannelSTR[0] == 'd')
  8997  001220  0E64               	movlw	100
  8998  001222  0102               	movlb	2	; () banked
  8999  001224  1932               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
  9000  001226  A4D8               	btfss	status,2,c
  9001  001228  D002               	goto	l11858
  9002                           
  9003                           ; BSR set to: 2
  9004                           ;Bluetooth.c: 607: {
  9005                           ;Bluetooth.c: 608: tempRFArray = 4;
  9006  00122A  0E04               	movlw	4
  9007  00122C  D077               	goto	L5
  9008  00122E                     l11858:
  9009                           
  9010                           ; BSR set to: 2
  9011                           ;Bluetooth.c: 610: else if(rfchannelSTR[0] == 'h')
  9012  00122E  0E68               	movlw	104
  9013  001230  0102               	movlb	2	; () banked
  9014  001232  1932               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
  9015  001234  A4D8               	btfss	status,2,c
  9016  001236  0012               	return	
  9017                           
  9018                           ; BSR set to: 2
  9019                           ;Bluetooth.c: 611: {
  9020                           ;Bluetooth.c: 612: cleanBuffer(ReceivedString, ReceivedStringPos);
  9021  001238  0E00               	movlw	low _ReceivedString
  9022  00123A  0100               	movlb	0	; () banked
  9023  00123C  6F75               	movwf	cleanBuffer@data& (0+255),b
  9024  00123E  0E06               	movlw	high _ReceivedString
  9025  001240  0100               	movlb	0	; () banked
  9026  001242  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
  9027  001244  C0CD  F077         	movff	_ReceivedStringPos,cleanBuffer@count
  9028  001248  0100               	movlb	0	; () banked
  9029  00124A  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
  9030  00124C  EC83  F038         	call	_cleanBuffer	;wreg free
  9031                           
  9032                           ;Bluetooth.c: 613: ReceivedStringPos = 0;
  9033  001250  0E00               	movlw	0
  9034  001252  0100               	movlb	0	; () banked
  9035  001254  6FCD               	movwf	_ReceivedStringPos& (0+255),b
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;Bluetooth.c: 614: NewReceivedString = 0;
  9039  001256  0E00               	movlw	0
  9040  001258  0100               	movlb	0	; () banked
  9041  00125A  6FCC               	movwf	_NewReceivedString& (0+255),b	;volatile
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;Bluetooth.c: 615: UARTstring(CRLN);
  9045  00125C  0ED6               	movlw	low _CRLN
  9046  00125E  0100               	movlb	0	; () banked
  9047  001260  6F76               	movwf	UARTstring@data& (0+255),b
  9048  001262  0E00               	movlw	high _CRLN
  9049  001264  0100               	movlb	0	; () banked
  9050  001266  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9051  001268  ECB0  F038         	call	_UARTstring	;wreg free
  9052                           
  9053                           ;Bluetooth.c: 616: UARTstring((unsigned char *)"Which device?");
  9054  00126C  0E4B               	movlw	low STR_65
  9055  00126E  0100               	movlb	0	; () banked
  9056  001270  6F76               	movwf	UARTstring@data& (0+255),b
  9057  001272  0EFF               	movlw	high STR_65
  9058  001274  0100               	movlb	0	; () banked
  9059  001276  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9060  001278  ECB0  F038         	call	_UARTstring	;wreg free
  9061                           
  9062                           ;Bluetooth.c: 617: UARTstring(CRLN);
  9063  00127C  0ED6               	movlw	low _CRLN
  9064  00127E  0100               	movlb	0	; () banked
  9065  001280  6F76               	movwf	UARTstring@data& (0+255),b
  9066  001282  0E00               	movlw	high _CRLN
  9067  001284  0100               	movlb	0	; () banked
  9068  001286  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9069  001288  ECB0  F038         	call	_UARTstring	;wreg free
  9070                           
  9071                           ;Bluetooth.c: 618: UARTchar('>');
  9072  00128C  0E3E               	movlw	62
  9073  00128E  EC74  F03B         	call	_UARTchar
  9074                           
  9075                           ;Bluetooth.c: 619: timeout = 0;
  9076  001292  0E00               	movlw	0
  9077  001294  0102               	movlb	2	; () banked
  9078  001296  6F3C               	movwf	UseBluetooth@timeout& (0+255),b
  9079                           
  9080                           ;Bluetooth.c: 620: while(!NewReceivedString)
  9081  001298  D023               	goto	l11886
  9082  00129A                     l11876:
  9083                           
  9084                           ;Bluetooth.c: 621: {
  9085                           ;Bluetooth.c: 622: delayUS(300000);
  9086  00129A  0EE0               	movlw	224
  9087  00129C  0100               	movlb	0	; () banked
  9088  00129E  6F75               	movwf	delayUS@US& (0+255),b
  9089  0012A0  0E93               	movlw	147
  9090  0012A2  6F76               	movwf	(delayUS@US+1)& (0+255),b
  9091  0012A4  0E04               	movlw	4
  9092  0012A6  6F77               	movwf	(delayUS@US+2)& (0+255),b
  9093  0012A8  0E00               	movlw	0
  9094  0012AA  6F78               	movwf	(delayUS@US+3)& (0+255),b
  9095  0012AC  EC34  F039         	call	_delayUS	;wreg free
  9096                           
  9097                           ;Bluetooth.c: 623: timeout++;
  9098  0012B0  0102               	movlb	2	; () banked
  9099  0012B2  2B3C               	incf	UseBluetooth@timeout& (0+255),f,b
  9100                           
  9101                           ; BSR set to: 2
  9102                           ;Bluetooth.c: 624: if(timeout > 25)
  9103  0012B4  0E19               	movlw	25
  9104  0012B6  0102               	movlb	2	; () banked
  9105  0012B8  653C               	cpfsgt	UseBluetooth@timeout& (0+255),b
  9106  0012BA  D012               	goto	l11886
  9107                           
  9108                           ; BSR set to: 2
  9109                           ;Bluetooth.c: 625: {
  9110                           ;Bluetooth.c: 626: UARTstring(CRLN);
  9111  0012BC  0ED6               	movlw	low _CRLN
  9112  0012BE  0100               	movlb	0	; () banked
  9113  0012C0  6F76               	movwf	UARTstring@data& (0+255),b
  9114  0012C2  0E00               	movlw	high _CRLN
  9115  0012C4  0100               	movlb	0	; () banked
  9116  0012C6  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9117  0012C8  ECB0  F038         	call	_UARTstring	;wreg free
  9118                           
  9119                           ;Bluetooth.c: 627: UARTstringCRLN((unsigned char *)"Error: No RF config 2, channel H dev
      +                          ice specified");
  9120  0012CC  0E25               	movlw	low STR_66
  9121  0012CE  0100               	movlb	0	; () banked
  9122  0012D0  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9123  0012D2  0EF9               	movlw	high STR_66
  9124  0012D4  0100               	movlb	0	; () banked
  9125  0012D6  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9126  0012D8  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9127                           
  9128                           ;Bluetooth.c: 628: return 0;
  9129                           ;	Return value of _UseBluetooth is never used
  9130  0012DC  0012               	return	
  9131  0012DE  D000               	goto	l11886
  9132  0012E0                     l11886:
  9133  0012E0  0100               	movlb	0	; () banked
  9134  0012E2  51CC               	movf	_NewReceivedString& (0+255),w,b	;volatile
  9135  0012E4  B4D8               	btfsc	status,2,c
  9136  0012E6  D7D9               	goto	l11876
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;Bluetooth.c: 629: }
  9140                           ;Bluetooth.c: 630: }
  9141                           ;Bluetooth.c: 631: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
  9142                           
  9143                           ; BSR set to: 0
  9144  0012E8  0E30               	movlw	48
  9145  0012EA  0106               	movlb	6	; () banked
  9146  0012EC  6500               	cpfsgt	_ReceivedString& (0+255),b
  9147  0012EE  D005               	goto	l11892
  9148                           
  9149                           ; BSR set to: 6
  9150  0012F0  0E33               	movlw	51
  9151  0012F2  0106               	movlb	6	; () banked
  9152  0012F4  6500               	cpfsgt	_ReceivedString& (0+255),b
  9153  0012F6  D00A               	goto	l11894
  9154  0012F8  D000               	goto	l11892
  9155  0012FA                     l11892:
  9156                           
  9157                           ; BSR set to: 6
  9158                           ;Bluetooth.c: 632: {
  9159                           ;Bluetooth.c: 633: UARTstringCRLN((unsigned char *)"Error: RF config 2, channel H device
      +                           out of range");
  9160  0012FA  0E57               	movlw	low STR_67
  9161  0012FC  0100               	movlb	0	; () banked
  9162  0012FE  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9163  001300  0EF9               	movlw	high STR_67
  9164  001302  0100               	movlb	0	; () banked
  9165  001304  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9166  001306  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9167  00130A  D000               	goto	l11894
  9168  00130C                     l11894:
  9169                           
  9170                           ;Bluetooth.c: 634: }
  9171                           ;Bluetooth.c: 635: device = ReceivedString[0] - '0';
  9172  00130C  0106               	movlb	6	; () banked
  9173  00130E  5100               	movf	_ReceivedString& (0+255),w,b
  9174  001310  0FD0               	addlw	208
  9175  001312  0102               	movlb	2	; () banked
  9176  001314  6F41               	movwf	UseBluetooth@device& (0+255),b
  9177                           
  9178                           ; BSR set to: 2
  9179                           ;Bluetooth.c: 636: tempRFArray = device + 4;
  9180  001316  0102               	movlb	2	; () banked
  9181  001318  5141               	movf	UseBluetooth@device& (0+255),w,b
  9182  00131A  0F04               	addlw	4
  9183  00131C                     L5:
  9184  00131C  0102               	movlb	2	; () banked
  9185  00131E  6F42               	movwf	UseBluetooth@tempRFArray& (0+255),b
  9186                           
  9187                           ;Bluetooth.c: 637: }
  9188  001320  D002               	goto	l11898
  9189                           
  9190                           ; BSR set to: 2
  9191                           ;Bluetooth.c: 638: else
  9192                           ;Bluetooth.c: 639: {
  9193                           ;Bluetooth.c: 641: return 0;
  9194                           ;	Return value of _UseBluetooth is never used
  9195  001322  0012               	return	
  9196                           
  9197                           ; BSR set to: 2
  9198                           
  9199                           ; BSR set to: 2
  9200                           
  9201                           ; BSR set to: 2
  9202                           
  9203                           ; BSR set to: 2
  9204  001324  D000               	goto	l11898
  9205  001326                     l11898:
  9206                           
  9207                           ; BSR set to: 2
  9208                           ;Bluetooth.c: 642: }
  9209                           ;Bluetooth.c: 643: }
  9210                           ;Bluetooth.c: 644: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  9211  001326  C0CE  F079         	movff	_IR_NEC,DecodeNEC@Nec
  9212  00132A  C0CF  F07A         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  9213  00132E  C0D0  F07B         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  9214  001332  C0D1  F07C         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  9215  001336  0E4A               	movlw	low UseBluetooth@NecAddress
  9216  001338  0100               	movlb	0	; () banked
  9217  00133A  6F7D               	movwf	DecodeNEC@address& (0+255),b
  9218  00133C  0E02               	movlw	high UseBluetooth@NecAddress
  9219  00133E  0100               	movlb	0	; () banked
  9220  001340  6F7E               	movwf	(DecodeNEC@address+1)& (0+255),b
  9221  001342  0E4B               	movlw	low UseBluetooth@NecCommand
  9222  001344  0100               	movlb	0	; () banked
  9223  001346  6F7F               	movwf	DecodeNEC@command& (0+255),b
  9224  001348  0E02               	movlw	high UseBluetooth@NecCommand
  9225  00134A  0100               	movlb	0	; () banked
  9226  00134C  6F80               	movwf	(DecodeNEC@command+1)& (0+255),b
  9227  00134E  ECD4  F033         	call	_DecodeNEC	;wreg free
  9228                           
  9229                           ;Bluetooth.c: 645: Global.RemoteButton1RF[tempRFArray][0] = NecAddress;
  9230  001352  0102               	movlb	2	; () banked
  9231  001354  5142               	movf	UseBluetooth@tempRFArray& (0+255),w,b
  9232  001356  0D02               	mullw	2
  9233  001358  0E2E               	movlw	low (_Global+46)
  9234  00135A  24F3               	addwf	prodl,w,c
  9235  00135C  6ED9               	movwf	fsr2l,c
  9236  00135E  0E07               	movlw	high (_Global+46)
  9237  001360  20F4               	addwfc	prodh,w,c
  9238  001362  6EDA               	movwf	fsr2h,c
  9239  001364  C24A  FFDF         	movff	UseBluetooth@NecAddress,indf2
  9240                           
  9241                           ; BSR set to: 2
  9242                           ;Bluetooth.c: 646: Global.RemoteButton1RF[tempRFArray][1] = NecCommand;
  9243  001368  0102               	movlb	2	; () banked
  9244  00136A  5142               	movf	UseBluetooth@tempRFArray& (0+255),w,b
  9245  00136C  0D02               	mullw	2
  9246  00136E  0E00               	movlw	low _Global
  9247  001370  0100               	movlb	0	; () banked
  9248  001372  6FB5               	movwf	??_UseBluetooth& (0+255),b
  9249  001374  0E07               	movlw	high _Global
  9250  001376  0100               	movlb	0	; () banked
  9251  001378  6FB6               	movwf	(??_UseBluetooth+1)& (0+255),b
  9252  00137A  0E2E               	movlw	46
  9253  00137C  0100               	movlb	0	; () banked
  9254  00137E  27B5               	addwf	??_UseBluetooth& (0+255),f,b
  9255  001380  0E00               	movlw	0
  9256  001382  23B6               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
  9257  001384  50F3               	movf	prodl,w,c
  9258  001386  0100               	movlb	0	; () banked
  9259  001388  27B5               	addwf	??_UseBluetooth& (0+255),f,b
  9260  00138A  50F4               	movf	prodh,w,c
  9261  00138C  0100               	movlb	0	; () banked
  9262  00138E  23B6               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
  9263  001390  0E01               	movlw	1
  9264  001392  0100               	movlb	0	; () banked
  9265  001394  25B5               	addwf	??_UseBluetooth& (0+255),w,b
  9266  001396  6ED9               	movwf	fsr2l,c
  9267  001398  0E00               	movlw	0
  9268  00139A  0100               	movlb	0	; () banked
  9269  00139C  21B6               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
  9270  00139E  6EDA               	movwf	fsr2h,c
  9271  0013A0  C24B  FFDF         	movff	UseBluetooth@NecCommand,indf2
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;Bluetooth.c: 647: SyncGlobalToEEPROM();
  9275  0013A4  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
  9276                           
  9277                           ;Bluetooth.c: 648: UARTstring(CRLN);
  9278  0013A8  0ED6               	movlw	low _CRLN
  9279  0013AA  0100               	movlb	0	; () banked
  9280  0013AC  6F76               	movwf	UARTstring@data& (0+255),b
  9281  0013AE  0E00               	movlw	high _CRLN
  9282  0013B0  0100               	movlb	0	; () banked
  9283  0013B2  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9284  0013B4  ECB0  F038         	call	_UARTstring	;wreg free
  9285                           
  9286                           ;Bluetooth.c: 650: if(device)
  9287  0013B8  0102               	movlb	2	; () banked
  9288  0013BA  5141               	movf	UseBluetooth@device& (0+255),w,b
  9289  0013BC  0102               	movlb	2	; () banked
  9290  0013BE  B4D8               	btfsc	status,2,c
  9291  0013C0  D023               	goto	l11912
  9292                           
  9293                           ; BSR set to: 2
  9294                           ;Bluetooth.c: 651: {
  9295                           ;Bluetooth.c: 652: sprintf(buf,(unsigned char *)"NEC code 0x%lX now transmits RF config 
      +                          %d channel %c device %d",IR_NEC, rfconf, rfchannelSTR[0], device);
  9296  0013C2  0E00               	movlw	low UseBluetooth@buf
  9297  0013C4  0100               	movlb	0	; () banked
  9298  0013C6  6F8B               	movwf	sprintf@sp& (0+255),b
  9299  0013C8  0E02               	movlw	high UseBluetooth@buf
  9300  0013CA  0100               	movlb	0	; () banked
  9301  0013CC  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  9302  0013CE  0EB0               	movlw	low STR_68
  9303  0013D0  0100               	movlb	0	; () banked
  9304  0013D2  6F8D               	movwf	sprintf@f& (0+255),b
  9305  0013D4  0EF8               	movlw	high STR_68
  9306  0013D6  0100               	movlb	0	; () banked
  9307  0013D8  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  9308  0013DA  C0CE  F08F         	movff	_IR_NEC,?_sprintf+4
  9309  0013DE  C0CF  F090         	movff	_IR_NEC+1,?_sprintf+5
  9310  0013E2  C0D0  F091         	movff	_IR_NEC+2,?_sprintf+6
  9311  0013E6  C0D1  F092         	movff	_IR_NEC+3,?_sprintf+7
  9312  0013EA  C249  F093         	movff	UseBluetooth@rfconf,?_sprintf+8
  9313  0013EE  0100               	movlb	0	; () banked
  9314  0013F0  6B94               	clrf	(?_sprintf+9)& (0+255),b
  9315  0013F2  C232  F095         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
  9316  0013F6  0100               	movlb	0	; () banked
  9317  0013F8  6B96               	clrf	(?_sprintf+11)& (0+255),b
  9318  0013FA  C241  F097         	movff	UseBluetooth@device,?_sprintf+12
  9319  0013FE  0100               	movlb	0	; () banked
  9320  001400  6B98               	clrf	(?_sprintf+13)& (0+255),b
  9321  001402  EC3D  F012         	call	_sprintf	;wreg free
  9322                           
  9323                           ;Bluetooth.c: 653: }
  9324  001406  D01F               	goto	l11914
  9325  001408                     l11912:
  9326                           
  9327                           ;Bluetooth.c: 654: else
  9328                           ;Bluetooth.c: 655: {
  9329                           ;Bluetooth.c: 656: sprintf(buf,(unsigned char *)"NEC code 0x%lX now transmits RF config 
      +                          %d channel %c ",IR_NEC, rfconf, rfchannelSTR[0]);
  9330  001408  0E00               	movlw	low UseBluetooth@buf
  9331  00140A  0100               	movlb	0	; () banked
  9332  00140C  6F8B               	movwf	sprintf@sp& (0+255),b
  9333  00140E  0E02               	movlw	high UseBluetooth@buf
  9334  001410  0100               	movlb	0	; () banked
  9335  001412  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  9336  001414  0EEF               	movlw	low STR_69
  9337  001416  0100               	movlb	0	; () banked
  9338  001418  6F8D               	movwf	sprintf@f& (0+255),b
  9339  00141A  0EF8               	movlw	high STR_69
  9340  00141C  0100               	movlb	0	; () banked
  9341  00141E  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  9342  001420  C0CE  F08F         	movff	_IR_NEC,?_sprintf+4
  9343  001424  C0CF  F090         	movff	_IR_NEC+1,?_sprintf+5
  9344  001428  C0D0  F091         	movff	_IR_NEC+2,?_sprintf+6
  9345  00142C  C0D1  F092         	movff	_IR_NEC+3,?_sprintf+7
  9346  001430  C249  F093         	movff	UseBluetooth@rfconf,?_sprintf+8
  9347  001434  0100               	movlb	0	; () banked
  9348  001436  6B94               	clrf	(?_sprintf+9)& (0+255),b
  9349  001438  C232  F095         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
  9350  00143C  0100               	movlb	0	; () banked
  9351  00143E  6B96               	clrf	(?_sprintf+11)& (0+255),b
  9352  001440  EC3D  F012         	call	_sprintf	;wreg free
  9353  001444  D000               	goto	l11914
  9354  001446                     l11914:
  9355                           
  9356                           ;Bluetooth.c: 657: }
  9357                           ;Bluetooth.c: 658: UARTstringCRLN(buf);
  9358  001446  0E00               	movlw	low UseBluetooth@buf
  9359  001448  0100               	movlb	0	; () banked
  9360  00144A  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9361  00144C  0E02               	movlw	high UseBluetooth@buf
  9362  00144E  0100               	movlb	0	; () banked
  9363  001450  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9364  001452  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9365                           
  9366                           ;Bluetooth.c: 659: UARTstring(CRLN);
  9367  001456  0ED6               	movlw	low _CRLN
  9368  001458  0100               	movlb	0	; () banked
  9369  00145A  6F76               	movwf	UARTstring@data& (0+255),b
  9370  00145C  0E00               	movlw	high _CRLN
  9371  00145E  0100               	movlb	0	; () banked
  9372  001460  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9373  001462  ECB0  F038         	call	_UARTstring	;wreg free
  9374                           
  9375                           ;Bluetooth.c: 660: return 1;
  9376                           ;	Return value of _UseBluetooth is never used
  9377  001466  0012               	return	
  9378                           
  9379                           ;Bluetooth.c: 661: }
  9380  001468  D02C               	goto	l11930
  9381  00146A                     l11922:
  9382                           
  9383                           ;Bluetooth.c: 662: else
  9384                           ;Bluetooth.c: 663: {
  9385                           ;Bluetooth.c: 664: UARTstringCRLN((unsigned char *)"Error: RF channel needs to be one ch
      +                          aracter");
  9386  00146A  0E12               	movlw	low STR_70
  9387  00146C  0100               	movlb	0	; () banked
  9388  00146E  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9389  001470  0EFA               	movlw	high STR_70
  9390  001472  0100               	movlb	0	; () banked
  9391  001474  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9392  001476  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9393                           
  9394                           ;Bluetooth.c: 665: UARTstring(CRLN);
  9395  00147A  0ED6               	movlw	low _CRLN
  9396  00147C  0100               	movlb	0	; () banked
  9397  00147E  6F76               	movwf	UARTstring@data& (0+255),b
  9398  001480  0E00               	movlw	high _CRLN
  9399  001482  0100               	movlb	0	; () banked
  9400  001484  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9401  001486  ECB0  F038         	call	_UARTstring	;wreg free
  9402                           
  9403                           ;Bluetooth.c: 666: return 0;
  9404                           ;	Return value of _UseBluetooth is never used
  9405  00148A  0012               	return	
  9406                           
  9407                           ;Bluetooth.c: 667: }
  9408                           ;Bluetooth.c: 668: }
  9409                           ;Bluetooth.c: 669: }
  9410  00148C  D01A               	goto	l11930
  9411  00148E                     l11926:
  9412                           
  9413                           ;Bluetooth.c: 670: else
  9414                           ;Bluetooth.c: 671: {
  9415                           ;Bluetooth.c: 672: UARTstringCRLN(SYNTAX_ERR);
  9416  00148E  0E00               	movlw	low _SYNTAX_ERR
  9417  001490  0100               	movlb	0	; () banked
  9418  001492  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9419  001494  0E05               	movlw	high _SYNTAX_ERR
  9420  001496  0100               	movlb	0	; () banked
  9421  001498  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9422  00149A  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9423                           
  9424                           ;Bluetooth.c: 673: UARTstringCRLN((unsigned char *)"Enter ??? for Command Menu");
  9425  00149E  0EEA               	movlw	low STR_71
  9426  0014A0  0100               	movlb	0	; () banked
  9427  0014A2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9428  0014A4  0EFC               	movlw	high STR_71
  9429  0014A6  0100               	movlb	0	; () banked
  9430  0014A8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9431  0014AA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9432                           
  9433                           ;Bluetooth.c: 674: UARTstring(CRLN);
  9434  0014AE  0ED6               	movlw	low _CRLN
  9435  0014B0  0100               	movlb	0	; () banked
  9436  0014B2  6F76               	movwf	UARTstring@data& (0+255),b
  9437  0014B4  0E00               	movlw	high _CRLN
  9438  0014B6  0100               	movlb	0	; () banked
  9439  0014B8  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9440  0014BA  ECB0  F038         	call	_UARTstring	;wreg free
  9441                           
  9442                           ;Bluetooth.c: 675: return 0;
  9443                           ;	Return value of _UseBluetooth is never used
  9444  0014BE  0012               	return	
  9445  0014C0  D000               	goto	l11930
  9446  0014C2                     l11930:
  9447                           
  9448                           ;Bluetooth.c: 676: }
  9449                           ;Bluetooth.c: 678: if(StringMatch(ReceivedString,(unsigned char *)"???"))
  9450  0014C2  0E00               	movlw	low _ReceivedString
  9451  0014C4  0100               	movlb	0	; () banked
  9452  0014C6  6F75               	movwf	StringMatch@This& (0+255),b
  9453  0014C8  0E06               	movlw	high _ReceivedString
  9454  0014CA  0100               	movlb	0	; () banked
  9455  0014CC  6F76               	movwf	(StringMatch@This+1)& (0+255),b
  9456  0014CE  0EE4               	movlw	low STR_72
  9457  0014D0  0100               	movlb	0	; () banked
  9458  0014D2  6F77               	movwf	StringMatch@That& (0+255),b
  9459  0014D4  0EFF               	movlw	high STR_72
  9460  0014D6  0100               	movlb	0	; () banked
  9461  0014D8  6F78               	movwf	(StringMatch@That+1)& (0+255),b
  9462  0014DA  EC81  F037         	call	_StringMatch	;wreg free
  9463  0014DE  0900               	iorlw	0
  9464  0014E0  B4D8               	btfsc	status,2,c
  9465  0014E2  0012               	return	
  9466                           
  9467                           ;Bluetooth.c: 679: {
  9468                           ;Bluetooth.c: 680: UARTstring(CRLN);
  9469  0014E4  0ED6               	movlw	low _CRLN
  9470  0014E6  0100               	movlb	0	; () banked
  9471  0014E8  6F76               	movwf	UARTstring@data& (0+255),b
  9472  0014EA  0E00               	movlw	high _CRLN
  9473  0014EC  0100               	movlb	0	; () banked
  9474  0014EE  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9475  0014F0  ECB0  F038         	call	_UARTstring	;wreg free
  9476                           
  9477                           ;Bluetooth.c: 681: UARTstringCRLN((unsigned char *)"~~~~~~~~~~~~~~~~~~~~~~~~~Command Men
      +                          u~~~~~~~~~~~~~~~~~~~~~~~~~~");
  9478  0014F4  0E70               	movlw	low STR_73
  9479  0014F6  0100               	movlb	0	; () banked
  9480  0014F8  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9481  0014FA  0EF8               	movlw	high STR_73
  9482  0014FC  0100               	movlb	0	; () banked
  9483  0014FE  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9484  001500  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9485                           
  9486                           ;Bluetooth.c: 682: UARTstring(CRLN);
  9487  001504  0ED6               	movlw	low _CRLN
  9488  001506  0100               	movlb	0	; () banked
  9489  001508  6F76               	movwf	UARTstring@data& (0+255),b
  9490  00150A  0E00               	movlw	high _CRLN
  9491  00150C  0100               	movlb	0	; () banked
  9492  00150E  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9493  001510  ECB0  F038         	call	_UARTstring	;wreg free
  9494                           
  9495                           ;Bluetooth.c: 683: UARTstringCRLN((unsigned char *)"System commands:");
  9496  001514  0EED               	movlw	low STR_74
  9497  001516  0100               	movlb	0	; () banked
  9498  001518  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9499  00151A  0EFE               	movlw	high STR_74
  9500  00151C  0100               	movlb	0	; () banked
  9501  00151E  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9502  001520  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9503                           
  9504                           ;Bluetooth.c: 684: UARTcommandMenu((unsigned char *)"???", (unsigned char *)"Help Menu")
      +                          ;
  9505  001524  0EE4               	movlw	low STR_72
  9506  001526  0100               	movlb	0	; () banked
  9507  001528  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9508  00152A  0EFF               	movlw	high STR_72
  9509  00152C  0100               	movlb	0	; () banked
  9510  00152E  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9511  001530  0E95               	movlw	low STR_76
  9512  001532  0100               	movlb	0	; () banked
  9513  001534  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9514  001536  0EFF               	movlw	high STR_76
  9515  001538  0100               	movlb	0	; () banked
  9516  00153A  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9517  00153C  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9518                           
  9519                           ;Bluetooth.c: 685: UARTstring(CRLN);
  9520  001540  0ED6               	movlw	low _CRLN
  9521  001542  0100               	movlb	0	; () banked
  9522  001544  6F76               	movwf	UARTstring@data& (0+255),b
  9523  001546  0E00               	movlw	high _CRLN
  9524  001548  0100               	movlb	0	; () banked
  9525  00154A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9526  00154C  ECB0  F038         	call	_UARTstring	;wreg free
  9527                           
  9528                           ;Bluetooth.c: 686: UARTstringCRLN((unsigned char *)"IR commands:");
  9529  001550  0E66               	movlw	low STR_77
  9530  001552  0100               	movlb	0	; () banked
  9531  001554  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9532  001556  0EFF               	movlw	high STR_77
  9533  001558  0100               	movlb	0	; () banked
  9534  00155A  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9535  00155C  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9536                           
  9537                           ;Bluetooth.c: 687: for(i=1; i <= 20; i++)
  9538  001560  0E01               	movlw	1
  9539  001562  0102               	movlb	2	; () banked
  9540  001564  6F48               	movwf	UseBluetooth@i& (0+255),b
  9541  001566                     l11936:
  9542                           
  9543                           ; BSR set to: 2
  9544  001566  0E14               	movlw	20
  9545  001568  0102               	movlb	2	; () banked
  9546  00156A  6548               	cpfsgt	UseBluetooth@i& (0+255),b
  9547  00156C  D001               	goto	l11940
  9548                           
  9549                           ; BSR set to: 2
  9550  00156E  D030               	goto	l11950
  9551  001570                     l11940:
  9552                           
  9553                           ; BSR set to: 2
  9554                           ;Bluetooth.c: 688: {
  9555                           ;Bluetooth.c: 689: cleanBuffer(buf,50);
  9556  001570  0E00               	movlw	low UseBluetooth@buf
  9557  001572  0100               	movlb	0	; () banked
  9558  001574  6F75               	movwf	cleanBuffer@data& (0+255),b
  9559  001576  0E02               	movlw	high UseBluetooth@buf
  9560  001578  0100               	movlb	0	; () banked
  9561  00157A  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
  9562  00157C  0E00               	movlw	0
  9563  00157E  0100               	movlb	0	; () banked
  9564  001580  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
  9565  001582  0E32               	movlw	50
  9566  001584  6F77               	movwf	cleanBuffer@count& (0+255),b
  9567  001586  EC83  F038         	call	_cleanBuffer	;wreg free
  9568                           
  9569                           ;Bluetooth.c: 690: sprintf(buf,(unsigned char *)"RemoteButton%d",i);
  9570  00158A  0E00               	movlw	low UseBluetooth@buf
  9571  00158C  0100               	movlb	0	; () banked
  9572  00158E  6F8B               	movwf	sprintf@sp& (0+255),b
  9573  001590  0E02               	movlw	high UseBluetooth@buf
  9574  001592  0100               	movlb	0	; () banked
  9575  001594  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  9576  001596  0E2E               	movlw	low STR_78
  9577  001598  0100               	movlb	0	; () banked
  9578  00159A  6F8D               	movwf	sprintf@f& (0+255),b
  9579  00159C  0EFF               	movlw	high STR_78
  9580  00159E  0100               	movlb	0	; () banked
  9581  0015A0  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  9582  0015A2  C248  F08F         	movff	UseBluetooth@i,?_sprintf+4
  9583  0015A6  0100               	movlb	0	; () banked
  9584  0015A8  6B90               	clrf	(?_sprintf+5)& (0+255),b
  9585  0015AA  EC3D  F012         	call	_sprintf	;wreg free
  9586                           
  9587                           ;Bluetooth.c: 691: UARTcommandMenu((unsigned char *)"buf", (unsigned char *)"Transmits s
      +                          aved NEC code");
  9588  0015AE  0EF8               	movlw	low STR_79
  9589  0015B0  0100               	movlb	0	; () banked
  9590  0015B2  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9591  0015B4  0EFF               	movlw	high STR_79
  9592  0015B6  0100               	movlb	0	; () banked
  9593  0015B8  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9594  0015BA  0E05               	movlw	low STR_80
  9595  0015BC  0100               	movlb	0	; () banked
  9596  0015BE  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9597  0015C0  0EFD               	movlw	high STR_80
  9598  0015C2  0100               	movlb	0	; () banked
  9599  0015C4  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9600  0015C6  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9601  0015CA  0102               	movlb	2	; () banked
  9602  0015CC  2B48               	incf	UseBluetooth@i& (0+255),f,b
  9603  0015CE  D7CB               	goto	l11936
  9604  0015D0                     l11950:
  9605                           
  9606                           ; BSR set to: 2
  9607                           ;Bluetooth.c: 692: }
  9608                           ;Bluetooth.c: 693: for(i=1; i <= 20; i++)
  9609  0015D0  0E01               	movlw	1
  9610  0015D2  0102               	movlb	2	; () banked
  9611  0015D4  6F48               	movwf	UseBluetooth@i& (0+255),b
  9612  0015D6                     l11952:
  9613                           
  9614                           ; BSR set to: 2
  9615  0015D6  0E14               	movlw	20
  9616  0015D8  0102               	movlb	2	; () banked
  9617  0015DA  6548               	cpfsgt	UseBluetooth@i& (0+255),b
  9618  0015DC  D001               	goto	l11956
  9619                           
  9620                           ; BSR set to: 2
  9621  0015DE  D030               	goto	l11966
  9622  0015E0                     l11956:
  9623                           
  9624                           ; BSR set to: 2
  9625                           ;Bluetooth.c: 694: {
  9626                           ;Bluetooth.c: 695: cleanBuffer(buf,50);
  9627  0015E0  0E00               	movlw	low UseBluetooth@buf
  9628  0015E2  0100               	movlb	0	; () banked
  9629  0015E4  6F75               	movwf	cleanBuffer@data& (0+255),b
  9630  0015E6  0E02               	movlw	high UseBluetooth@buf
  9631  0015E8  0100               	movlb	0	; () banked
  9632  0015EA  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
  9633  0015EC  0E00               	movlw	0
  9634  0015EE  0100               	movlb	0	; () banked
  9635  0015F0  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
  9636  0015F2  0E32               	movlw	50
  9637  0015F4  6F77               	movwf	cleanBuffer@count& (0+255),b
  9638  0015F6  EC83  F038         	call	_cleanBuffer	;wreg free
  9639                           
  9640                           ;Bluetooth.c: 696: sprintf(buf,(unsigned char *)"RemoteButton%d set",i);
  9641  0015FA  0E00               	movlw	low UseBluetooth@buf
  9642  0015FC  0100               	movlb	0	; () banked
  9643  0015FE  6F8B               	movwf	sprintf@sp& (0+255),b
  9644  001600  0E02               	movlw	high UseBluetooth@buf
  9645  001602  0100               	movlb	0	; () banked
  9646  001604  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
  9647  001606  0E94               	movlw	low STR_81
  9648  001608  0100               	movlb	0	; () banked
  9649  00160A  6F8D               	movwf	sprintf@f& (0+255),b
  9650  00160C  0EFE               	movlw	high STR_81
  9651  00160E  0100               	movlb	0	; () banked
  9652  001610  6F8E               	movwf	(sprintf@f+1)& (0+255),b
  9653  001612  C248  F08F         	movff	UseBluetooth@i,?_sprintf+4
  9654  001616  0100               	movlb	0	; () banked
  9655  001618  6B90               	clrf	(?_sprintf+5)& (0+255),b
  9656  00161A  EC3D  F012         	call	_sprintf	;wreg free
  9657                           
  9658                           ;Bluetooth.c: 697: UARTcommandMenu((unsigned char *)"buf",(unsigned char *) "Allows savi
      +                          ng NEC codes");
  9659  00161E  0EF8               	movlw	low STR_79
  9660  001620  0100               	movlb	0	; () banked
  9661  001622  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9662  001624  0EFF               	movlw	high STR_79
  9663  001626  0100               	movlb	0	; () banked
  9664  001628  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9665  00162A  0E36               	movlw	low STR_83
  9666  00162C  0100               	movlb	0	; () banked
  9667  00162E  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9668  001630  0EFD               	movlw	high STR_83
  9669  001632  0100               	movlb	0	; () banked
  9670  001634  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9671  001636  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9672  00163A  0102               	movlb	2	; () banked
  9673  00163C  2B48               	incf	UseBluetooth@i& (0+255),f,b
  9674  00163E  D7CB               	goto	l11952
  9675  001640                     l11966:
  9676                           
  9677                           ; BSR set to: 2
  9678                           ;Bluetooth.c: 698: }
  9679                           ;Bluetooth.c: 699: UARTcommandMenu((unsigned char *)"NEC?", (unsigned char *)"Displays D
      +                          escription how send NEC signal");
  9680  001640  0EDB               	movlw	low STR_84
  9681  001642  0100               	movlb	0	; () banked
  9682  001644  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9683  001646  0EFF               	movlw	high STR_84
  9684  001648  0100               	movlb	0	; () banked
  9685  00164A  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9686  00164C  0E3E               	movlw	low STR_85
  9687  00164E  0100               	movlb	0	; () banked
  9688  001650  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9689  001652  0EFA               	movlw	high STR_85
  9690  001654  0100               	movlb	0	; () banked
  9691  001656  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9692  001658  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9693                           
  9694                           ;Bluetooth.c: 700: UARTstring(CRLN);
  9695  00165C  0ED6               	movlw	low _CRLN
  9696  00165E  0100               	movlb	0	; () banked
  9697  001660  6F76               	movwf	UARTstring@data& (0+255),b
  9698  001662  0E00               	movlw	high _CRLN
  9699  001664  0100               	movlb	0	; () banked
  9700  001666  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9701  001668  ECB0  F038         	call	_UARTstring	;wreg free
  9702                           
  9703                           ;Bluetooth.c: 701: UARTstringCRLN((unsigned char *)"RF commands:");
  9704  00166C  0E59               	movlw	low STR_86
  9705  00166E  0100               	movlb	0	; () banked
  9706  001670  6F78               	movwf	UARTstringCRLN@data& (0+255),b
  9707  001672  0EFF               	movlw	high STR_86
  9708  001674  0100               	movlb	0	; () banked
  9709  001676  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9710  001678  ECBA  F037         	call	_UARTstringCRLN	;wreg free
  9711                           
  9712                           ;Bluetooth.c: 702: UARTcommandMenu(Conf1_ChannelD_STR, (unsigned char *)"RFK100LC Channe
      +                          l D");
  9713  00167C  0E90               	movlw	low _Conf1_ChannelD_STR
  9714  00167E  0100               	movlb	0	; () banked
  9715  001680  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9716  001682  0E04               	movlw	high _Conf1_ChannelD_STR
  9717  001684  0100               	movlb	0	; () banked
  9718  001686  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9719  001688  0E48               	movlw	low STR_87
  9720  00168A  0100               	movlb	0	; () banked
  9721  00168C  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9722  00168E  0EFE               	movlw	high STR_87
  9723  001690  0100               	movlb	0	; () banked
  9724  001692  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9725  001694  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9726                           
  9727                           ;Bluetooth.c: 703: UARTcommandMenu(Conf1_ChannelE_STR, (unsigned char *)"RFK100LC Channe
      +                          l E");
  9728  001698  0E9F               	movlw	low _Conf1_ChannelE_STR
  9729  00169A  0100               	movlb	0	; () banked
  9730  00169C  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9731  00169E  0E04               	movlw	high _Conf1_ChannelE_STR
  9732  0016A0  0100               	movlb	0	; () banked
  9733  0016A2  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9734  0016A4  0E5B               	movlw	low STR_88
  9735  0016A6  0100               	movlb	0	; () banked
  9736  0016A8  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9737  0016AA  0EFE               	movlw	high STR_88
  9738  0016AC  0100               	movlb	0	; () banked
  9739  0016AE  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9740  0016B0  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9741                           
  9742                           ;Bluetooth.c: 704: UARTcommandMenu(Conf1_ChannelF_STR, (unsigned char *)"RFK100LC Channe
      +                          l F");
  9743  0016B4  0EAE               	movlw	low _Conf1_ChannelF_STR
  9744  0016B6  0100               	movlb	0	; () banked
  9745  0016B8  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9746  0016BA  0E04               	movlw	high _Conf1_ChannelF_STR
  9747  0016BC  0100               	movlb	0	; () banked
  9748  0016BE  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9749  0016C0  0E6E               	movlw	low STR_89
  9750  0016C2  0100               	movlb	0	; () banked
  9751  0016C4  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9752  0016C6  0EFE               	movlw	high STR_89
  9753  0016C8  0100               	movlb	0	; () banked
  9754  0016CA  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9755  0016CC  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9756                           
  9757                           ;Bluetooth.c: 705: UARTcommandMenu(Conf2_ChannelB_ON_STR, (unsigned char *)"RFK306LC Cha
      +                          nnel B ON");
  9758  0016D0  0EBE               	movlw	low _Conf2_ChannelB_ON_STR
  9759  0016D2  0100               	movlb	0	; () banked
  9760  0016D4  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9761  0016D6  0E05               	movlw	high _Conf2_ChannelB_ON_STR
  9762  0016D8  0100               	movlb	0	; () banked
  9763  0016DA  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9764  0016DC  0E7C               	movlw	low STR_90
  9765  0016DE  0100               	movlb	0	; () banked
  9766  0016E0  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9767  0016E2  0EFD               	movlw	high STR_90
  9768  0016E4  0100               	movlb	0	; () banked
  9769  0016E6  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9770  0016E8  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9771                           
  9772                           ;Bluetooth.c: 706: UARTcommandMenu(Conf2_ChannelB_OFF_STR, (unsigned char *)"RFK306LC Ch
      +                          annel B OFF");
  9773  0016EC  0E98               	movlw	low _Conf2_ChannelB_OFF_STR
  9774  0016EE  0100               	movlb	0	; () banked
  9775  0016F0  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9776  0016F2  0E05               	movlw	high _Conf2_ChannelB_OFF_STR
  9777  0016F4  0100               	movlb	0	; () banked
  9778  0016F6  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9779  0016F8  0E65               	movlw	low STR_91
  9780  0016FA  0100               	movlb	0	; () banked
  9781  0016FC  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9782  0016FE  0EFD               	movlw	high STR_91
  9783  001700  0100               	movlb	0	; () banked
  9784  001702  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9785  001704  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9786                           
  9787                           ;Bluetooth.c: 707: UARTcommandMenu(Conf2_ChannelD_ON_STR, (unsigned char *)"TR009 Channe
      +                          l D ON");
  9788  001708  0ED0               	movlw	low _Conf2_ChannelD_ON_STR
  9789  00170A  0100               	movlb	0	; () banked
  9790  00170C  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9791  00170E  0E05               	movlw	high _Conf2_ChannelD_ON_STR
  9792  001710  0100               	movlb	0	; () banked
  9793  001712  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9794  001714  0E81               	movlw	low STR_92
  9795  001716  0100               	movlb	0	; () banked
  9796  001718  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9797  00171A  0EFE               	movlw	high STR_92
  9798  00171C  0100               	movlb	0	; () banked
  9799  00171E  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9800  001720  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9801                           
  9802                           ;Bluetooth.c: 708: UARTcommandMenu(Conf2_ChannelD_OFF_STR, (unsigned char *)"TR009 Chann
      +                          el D OFF");
  9803  001724  0EAB               	movlw	low _Conf2_ChannelD_OFF_STR
  9804  001726  0100               	movlb	0	; () banked
  9805  001728  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9806  00172A  0E05               	movlw	high _Conf2_ChannelD_OFF_STR
  9807  00172C  0100               	movlb	0	; () banked
  9808  00172E  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9809  001730  0EE6               	movlw	low STR_93
  9810  001732  0100               	movlb	0	; () banked
  9811  001734  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9812  001736  0EFD               	movlw	high STR_93
  9813  001738  0100               	movlb	0	; () banked
  9814  00173A  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9815  00173C  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9816                           
  9817                           ;Bluetooth.c: 709: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 1 ON");
  9818  001740  0E5C               	movlw	low _Conf2_ChannelH_1_ON_STR
  9819  001742  0100               	movlb	0	; () banked
  9820  001744  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9821  001746  0E05               	movlw	high _Conf2_ChannelH_1_ON_STR
  9822  001748  0100               	movlb	0	; () banked
  9823  00174A  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9824  00174C  0EBE               	movlw	low STR_94
  9825  00174E  0100               	movlb	0	; () banked
  9826  001750  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9827  001752  0EFB               	movlw	high STR_94
  9828  001754  0100               	movlb	0	; () banked
  9829  001756  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9830  001758  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9831                           
  9832                           ;Bluetooth.c: 710: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 1 OFF");
  9833  00175C  0E1D               	movlw	low _Conf2_ChannelH_1_OFF_STR
  9834  00175E  0100               	movlb	0	; () banked
  9835  001760  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9836  001762  0E05               	movlw	high _Conf2_ChannelH_1_OFF_STR
  9837  001764  0100               	movlb	0	; () banked
  9838  001766  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9839  001768  0E3E               	movlw	low STR_95
  9840  00176A  0100               	movlb	0	; () banked
  9841  00176C  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9842  00176E  0EFB               	movlw	high STR_95
  9843  001770  0100               	movlb	0	; () banked
  9844  001772  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9845  001774  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9846                           
  9847                           ;Bluetooth.c: 711: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 2 ON");
  9848  001778  0E70               	movlw	low _Conf2_ChannelH_2_ON_STR
  9849  00177A  0100               	movlb	0	; () banked
  9850  00177C  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9851  00177E  0E05               	movlw	high _Conf2_ChannelH_2_ON_STR
  9852  001780  0100               	movlb	0	; () banked
  9853  001782  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9854  001784  0EDD               	movlw	low STR_96
  9855  001786  0100               	movlb	0	; () banked
  9856  001788  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9857  00178A  0EFB               	movlw	high STR_96
  9858  00178C  0100               	movlb	0	; () banked
  9859  00178E  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9860  001790  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9861                           
  9862                           ;Bluetooth.c: 712: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 2 OFF");
  9863  001794  0E32               	movlw	low _Conf2_ChannelH_2_OFF_STR
  9864  001796  0100               	movlb	0	; () banked
  9865  001798  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9866  00179A  0E05               	movlw	high _Conf2_ChannelH_2_OFF_STR
  9867  00179C  0100               	movlb	0	; () banked
  9868  00179E  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9869  0017A0  0E5E               	movlw	low STR_97
  9870  0017A2  0100               	movlb	0	; () banked
  9871  0017A4  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9872  0017A6  0EFB               	movlw	high STR_97
  9873  0017A8  0100               	movlb	0	; () banked
  9874  0017AA  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9875  0017AC  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9876                           
  9877                           ;Bluetooth.c: 713: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 3 ON");
  9878  0017B0  0E84               	movlw	low _Conf2_ChannelH_3_ON_STR
  9879  0017B2  0100               	movlb	0	; () banked
  9880  0017B4  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9881  0017B6  0E05               	movlw	high _Conf2_ChannelH_3_ON_STR
  9882  0017B8  0100               	movlb	0	; () banked
  9883  0017BA  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9884  0017BC  0EFC               	movlw	low STR_98
  9885  0017BE  0100               	movlb	0	; () banked
  9886  0017C0  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9887  0017C2  0EFB               	movlw	high STR_98
  9888  0017C4  0100               	movlb	0	; () banked
  9889  0017C6  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9890  0017C8  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9891                           
  9892                           ;Bluetooth.c: 714: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 3 OFF");
  9893  0017CC  0E47               	movlw	low _Conf2_ChannelH_3_OFF_STR
  9894  0017CE  0100               	movlb	0	; () banked
  9895  0017D0  6F78               	movwf	UARTcommandMenu@Command& (0+255),b
  9896  0017D2  0E05               	movlw	high _Conf2_ChannelH_3_OFF_STR
  9897  0017D4  0100               	movlb	0	; () banked
  9898  0017D6  6F79               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
  9899  0017D8  0E7E               	movlw	low STR_99
  9900  0017DA  0100               	movlb	0	; () banked
  9901  0017DC  6F7A               	movwf	UARTcommandMenu@Desc& (0+255),b
  9902  0017DE  0EFB               	movlw	high STR_99
  9903  0017E0  0100               	movlb	0	; () banked
  9904  0017E2  6F7B               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
  9905  0017E4  ECBC  F02D         	call	_UARTcommandMenu	;wreg free
  9906                           
  9907                           ;Bluetooth.c: 715: UARTstring(CRLN);
  9908  0017E8  0ED6               	movlw	low _CRLN
  9909  0017EA  0100               	movlb	0	; () banked
  9910  0017EC  6F76               	movwf	UARTstring@data& (0+255),b
  9911  0017EE  0E00               	movlw	high _CRLN
  9912  0017F0  0100               	movlb	0	; () banked
  9913  0017F2  6F77               	movwf	(UARTstring@data+1)& (0+255),b
  9914  0017F4  ECB0  F038         	call	_UARTstring	;wreg free
  9915  0017F8  0012               	return	
  9916                           
  9917                           ;Bluetooth.c: 716: }
  9918                           ;Bluetooth.c: 718: return 0;
  9919                           ;	Return value of _UseBluetooth is never used
  9920  0017FA  0012               	return		;funcret
  9921  0017FC                     __end_of_UseBluetooth:
  9922                           	opt stack 0
  9923                           tblptru	equ	0xFF8
  9924                           tblptrh	equ	0xFF7
  9925                           tblptrl	equ	0xFF6
  9926                           tablat	equ	0xFF5
  9927                           prodh	equ	0xFF4
  9928                           prodl	equ	0xFF3
  9929                           intcon	equ	0xFF2
  9930                           postinc0	equ	0xFEE
  9931                           wreg	equ	0xFE8
  9932                           postdec1	equ	0xFE5
  9933                           fsr1h	equ	0xFE2
  9934                           fsr1l	equ	0xFE1
  9935                           indf2	equ	0xFDF
  9936                           postinc2	equ	0xFDE
  9937                           fsr2h	equ	0xFDA
  9938                           fsr2l	equ	0xFD9
  9939                           status	equ	0xFD8
  9940                           
  9941 ;; *************** function _lowercaseString *****************
  9942 ;; Defined at:
  9943 ;;		line 330 in file "MISC.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  Input           2   21[BANK0 ] PTR unsigned char 
  9946 ;;		 -> UseBluetooth@rfchannelSTR(10), 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;		None
  9949 ;; Return value:  Size  Location     Type
  9950 ;;		None               void
  9951 ;; Registers used:
  9952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;Total ram usage:        3 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    6
  9965 ;; This function calls:
  9966 ;;		Nothing
  9967 ;; This function is called by:
  9968 ;;		_UseBluetooth
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           	psect	text9
  9973  0073E6                     __ptext9:
  9974                           	opt stack 0
  9975  0073E6                     _lowercaseString:
  9976                           	opt stack 23
  9977                           
  9978                           ;MISC.c: 332: while((*Input != 0))
  9979                           
  9980                           ;incstack = 0
  9981  0073E6  D019               	goto	l8322
  9982  0073E8                     l8314:
  9983                           
  9984                           ;MISC.c: 333: {
  9985                           ;MISC.c: 334: if((*Input >= 65) && (*Input <= 90 ))
  9986  0073E8  C075  FFD9         	movff	lowercaseString@Input,fsr2l
  9987  0073EC  C076  FFDA         	movff	lowercaseString@Input+1,fsr2h
  9988  0073F0  0E40               	movlw	64
  9989  0073F2  64DF               	cpfsgt	indf2,c
  9990  0073F4  D00E               	goto	l8320
  9991  0073F6  C075  FFD9         	movff	lowercaseString@Input,fsr2l
  9992  0073FA  C076  FFDA         	movff	lowercaseString@Input+1,fsr2h
  9993  0073FE  0E5B               	movlw	91
  9994  007400  60DF               	cpfslt	indf2,c
  9995  007402  D007               	goto	l8320
  9996                           
  9997                           ;MISC.c: 335: {
  9998                           ;MISC.c: 336: *Input += 32;
  9999  007404  C075  FFD9         	movff	lowercaseString@Input,fsr2l
 10000  007408  C076  FFDA         	movff	lowercaseString@Input+1,fsr2h
 10001  00740C  0E20               	movlw	32
 10002  00740E  26DF               	addwf	indf2,f,c
 10003  007410  D000               	goto	l8320
 10004  007412                     l8320:
 10005                           
 10006                           ;MISC.c: 337: }
 10007                           ;MISC.c: 338: Input++;
 10008  007412  0100               	movlb	0	; () banked
 10009  007414  4B75               	infsnz	lowercaseString@Input& (0+255),f,b
 10010  007416  2B76               	incf	(lowercaseString@Input+1)& (0+255),f,b
 10011  007418  D000               	goto	l8322
 10012  00741A                     l8322:
 10013  00741A  C075  FFD9         	movff	lowercaseString@Input,fsr2l
 10014  00741E  C076  FFDA         	movff	lowercaseString@Input+1,fsr2h
 10015  007422  50DF               	movf	indf2,w,c
 10016  007424  A4D8               	btfss	status,2,c
 10017  007426  D7E0               	goto	l8314
 10018  007428  0012               	return		;funcret
 10019  00742A                     __end_of_lowercaseString:
 10020                           	opt stack 0
 10021                           tblptru	equ	0xFF8
 10022                           tblptrh	equ	0xFF7
 10023                           tblptrl	equ	0xFF6
 10024                           tablat	equ	0xFF5
 10025                           prodh	equ	0xFF4
 10026                           prodl	equ	0xFF3
 10027                           intcon	equ	0xFF2
 10028                           postinc0	equ	0xFEE
 10029                           wreg	equ	0xFE8
 10030                           postdec1	equ	0xFE5
 10031                           fsr1h	equ	0xFE2
 10032                           fsr1l	equ	0xFE1
 10033                           indf2	equ	0xFDF
 10034                           postinc2	equ	0xFDE
 10035                           fsr2h	equ	0xFDA
 10036                           fsr2l	equ	0xFD9
 10037                           status	equ	0xFD8
 10038                           
 10039 ;; *************** function _WaitForIRsignal *****************
 10040 ;; Defined at:
 10041 ;;		line 726 in file "Bluetooth.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;		None
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  timeout         1   30[BANK0 ] unsigned char 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1    wreg      unsigned char 
 10048 ;; Registers used:
 10049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;Total ram usage:        1 bytes
 10060 ;; Hardware stack levels used:    1
 10061 ;; Hardware stack levels required when called:    9
 10062 ;; This function calls:
 10063 ;;		_UARTchar
 10064 ;;		_UARTstring
 10065 ;;		_UARTstringCRLN
 10066 ;;		_delayUS
 10067 ;; This function is called by:
 10068 ;;		_UseBluetooth
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text10
 10073  006B68                     __ptext10:
 10074                           	opt stack 0
 10075  006B68                     _WaitForIRsignal:
 10076                           	opt stack 20
 10077                           
 10078                           ;Bluetooth.c: 728: unsigned char timeout = 0;
 10079                           
 10080                           ;incstack = 0
 10081  006B68  0E00               	movlw	0
 10082  006B6A  0100               	movlb	0	; () banked
 10083  006B6C  6F7E               	movwf	WaitForIRsignal@timeout& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;Bluetooth.c: 730: UARTstring(CRLN);
 10087  006B6E  0ED6               	movlw	low _CRLN
 10088  006B70  0100               	movlb	0	; () banked
 10089  006B72  6F76               	movwf	UARTstring@data& (0+255),b
 10090  006B74  0E00               	movlw	high _CRLN
 10091  006B76  0100               	movlb	0	; () banked
 10092  006B78  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 10093  006B7A  ECB0  F038         	call	_UARTstring	;wreg free
 10094                           
 10095                           ;Bluetooth.c: 731: UARTstring((unsigned char *)"Press Remote Control button");
 10096  006B7E  0ECE               	movlw	low STR_100
 10097  006B80  0100               	movlb	0	; () banked
 10098  006B82  6F76               	movwf	UARTstring@data& (0+255),b
 10099  006B84  0EFC               	movlw	high STR_100
 10100  006B86  0100               	movlb	0	; () banked
 10101  006B88  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 10102  006B8A  ECB0  F038         	call	_UARTstring	;wreg free
 10103                           
 10104                           ;Bluetooth.c: 732: timeout = 0;
 10105  006B8E  0E00               	movlw	0
 10106  006B90  0100               	movlb	0	; () banked
 10107  006B92  6F7E               	movwf	WaitForIRsignal@timeout& (0+255),b
 10108                           
 10109                           ;Bluetooth.c: 733: while(IR_New_Code != 1)
 10110  006B94  D027               	goto	l11392
 10111  006B96                     l11378:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;Bluetooth.c: 734: {
 10115                           ;Bluetooth.c: 735: UARTchar('.');
 10116  006B96  0E2E               	movlw	46
 10117  006B98  EC74  F03B         	call	_UARTchar
 10118                           
 10119                           ;Bluetooth.c: 736: delayUS(300000);
 10120  006B9C  0EE0               	movlw	224
 10121  006B9E  0100               	movlb	0	; () banked
 10122  006BA0  6F75               	movwf	delayUS@US& (0+255),b
 10123  006BA2  0E93               	movlw	147
 10124  006BA4  6F76               	movwf	(delayUS@US+1)& (0+255),b
 10125  006BA6  0E04               	movlw	4
 10126  006BA8  6F77               	movwf	(delayUS@US+2)& (0+255),b
 10127  006BAA  0E00               	movlw	0
 10128  006BAC  6F78               	movwf	(delayUS@US+3)& (0+255),b
 10129  006BAE  EC34  F039         	call	_delayUS	;wreg free
 10130                           
 10131                           ;Bluetooth.c: 737: timeout++;
 10132  006BB2  0100               	movlb	0	; () banked
 10133  006BB4  2B7E               	incf	WaitForIRsignal@timeout& (0+255),f,b
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;Bluetooth.c: 738: if(timeout > 25)
 10137  006BB6  0E19               	movlw	25
 10138  006BB8  0100               	movlb	0	; () banked
 10139  006BBA  657E               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 10140  006BBC  D013               	goto	l11392
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;Bluetooth.c: 739: {
 10144                           ;Bluetooth.c: 740: UARTstring(CRLN);
 10145  006BBE  0ED6               	movlw	low _CRLN
 10146  006BC0  0100               	movlb	0	; () banked
 10147  006BC2  6F76               	movwf	UARTstring@data& (0+255),b
 10148  006BC4  0E00               	movlw	high _CRLN
 10149  006BC6  0100               	movlb	0	; () banked
 10150  006BC8  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 10151  006BCA  ECB0  F038         	call	_UARTstring	;wreg free
 10152                           
 10153                           ;Bluetooth.c: 741: UARTstringCRLN((unsigned char *)"Error: No remote button was pressed"
      +                          );
 10154  006BCE  0ED6               	movlw	low STR_101
 10155  006BD0  0100               	movlb	0	; () banked
 10156  006BD2  6F78               	movwf	UARTstringCRLN@data& (0+255),b
 10157  006BD4  0EFA               	movlw	high STR_101
 10158  006BD6  0100               	movlb	0	; () banked
 10159  006BD8  6F79               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10160  006BDA  ECBA  F037         	call	_UARTstringCRLN	;wreg free
 10161                           
 10162                           ;Bluetooth.c: 742: return 0;
 10163  006BDE  0E00               	movlw	0
 10164  006BE0  0012               	return	
 10165  006BE2  D000               	goto	l11392
 10166  006BE4                     l11392:
 10167  006BE4  0100               	movlb	0	; () banked
 10168  006BE6  05D2               	decf	_IR_New_Code& (0+255),w,b
 10169  006BE8  A4D8               	btfss	status,2,c
 10170  006BEA  D7D5               	goto	l11378
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;Bluetooth.c: 743: }
 10174                           ;Bluetooth.c: 744: }
 10175                           ;Bluetooth.c: 745: return 1;
 10176                           
 10177                           ; BSR set to: 0
 10178  006BEC  0E01               	movlw	1
 10179  006BEE  0012               	return	
 10180                           
 10181                           ; BSR set to: 0
 10182  006BF0  0012               	return		;funcret
 10183  006BF2                     __end_of_WaitForIRsignal:
 10184                           	opt stack 0
 10185                           tblptru	equ	0xFF8
 10186                           tblptrh	equ	0xFF7
 10187                           tblptrl	equ	0xFF6
 10188                           tablat	equ	0xFF5
 10189                           prodh	equ	0xFF4
 10190                           prodl	equ	0xFF3
 10191                           intcon	equ	0xFF2
 10192                           postinc0	equ	0xFEE
 10193                           wreg	equ	0xFE8
 10194                           postdec1	equ	0xFE5
 10195                           fsr1h	equ	0xFE2
 10196                           fsr1l	equ	0xFE1
 10197                           indf2	equ	0xFDF
 10198                           postinc2	equ	0xFDE
 10199                           fsr2h	equ	0xFDA
 10200                           fsr2l	equ	0xFD9
 10201                           status	equ	0xFD8
 10202                           
 10203 ;; *************** function _UARTstringCRLN *****************
 10204 ;; Defined at:
 10205 ;;		line 248 in file "UART.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  data            2   24[BANK0 ] PTR unsigned char 
 10208 ;;		 -> STR_101(36), STR_86(13), STR_77(13), STR_74(17), 
 10209 ;;		 -> STR_73(64), STR_71(27), STR_70(44), STR_67(50), 
 10210 ;;		 -> STR_66(50), STR_64(31), STR_63(31), STR_62(37), 
 10211 ;;		 -> STR_61(37), STR_60(37), STR_58(18), STR_57(14), 
 10212 ;;		 -> STR_56(9), STR_55(20), STR_54(16), STR_53(7), 
 10213 ;;		 -> STR_52(35), STR_51(37), STR_48(47), STR_43(16), 
 10214 ;;		 -> STR_42(9), STR_41(18), STR_40(9), STR_39(22), 
 10215 ;;		 -> STR_38(11), STR_37(20), STR_36(7), STR_35(31), 
 10216 ;;		 -> STR_34(33), STR_30(32), STR_25(29), STR_23(29), 
 10217 ;;		 -> SYNTAX_ERR(29), UseBluetooth@buf(50), STR_3(16), 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;		None               void
 10222 ;; Registers used:
 10223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;Total ram usage:        2 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:    8
 10236 ;; This function calls:
 10237 ;;		_UARTchar
 10238 ;;		_UARTstring
 10239 ;; This function is called by:
 10240 ;;		_UseBluetooth
 10241 ;;		_WaitForIRsignal
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           	psect	text11
 10246  006F74                     __ptext11:
 10247                           	opt stack 0
 10248  006F74                     _UARTstringCRLN:
 10249                           	opt stack 20
 10250                           
 10251                           ;UART.c: 250: while(*data != 0)
 10252                           
 10253                           ;incstack = 0
 10254  006F74  D017               	goto	l11010
 10255  006F76                     l11006:
 10256                           
 10257                           ;UART.c: 251: {
 10258                           ;UART.c: 252: UARTchar(*data);
 10259  006F76  C078  FFF6         	movff	UARTstringCRLN@data,tblptrl
 10260  006F7A  C079  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 10261  006F7E  0E00               	movlw	low (__mediumconst shr (0+16))
 10262  006F80  6EF8               	movwf	tblptru,c
 10263  006F82  0E0F               	movlw	(high __ramtop+-1)
 10264  006F84  64F7               	cpfsgt	tblptrh,c
 10265  006F86  D003               	bra	u13227
 10266  006F88  0008               	tblrd		*
 10267  006F8A  50F5               	movf	tablat,w,c
 10268  006F8C  D005               	bra	u13220
 10269  006F8E                     u13227:
 10270  006F8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10271  006F92  CFF7 FFEA          	movff	tblptrh,fsr0h
 10272  006F96  50EF               	movf	indf0,w,c
 10273  006F98                     u13220:
 10274  006F98  EC74  F03B         	call	_UARTchar
 10275                           
 10276                           ;UART.c: 253: *data++;
 10277  006F9C  0100               	movlb	0	; () banked
 10278  006F9E  4B78               	infsnz	UARTstringCRLN@data& (0+255),f,b
 10279  006FA0  2B79               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 10280  006FA2  D000               	goto	l11010
 10281  006FA4                     l11010:
 10282  006FA4  C078  FFF6         	movff	UARTstringCRLN@data,tblptrl
 10283  006FA8  C079  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 10284  006FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10285  006FAE  6EF8               	movwf	tblptru,c
 10286  006FB0  0E0F               	movlw	(high __ramtop+-1)
 10287  006FB2  64F7               	cpfsgt	tblptrh,c
 10288  006FB4  D003               	bra	u13237
 10289  006FB6  0008               	tblrd		*
 10290  006FB8  50F5               	movf	tablat,w,c
 10291  006FBA  D005               	bra	u13230
 10292  006FBC                     u13237:
 10293  006FBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 10294  006FC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10295  006FC4  50EF               	movf	indf0,w,c
 10296  006FC6                     u13230:
 10297  006FC6  0900               	iorlw	0
 10298  006FC8  A4D8               	btfss	status,2,c
 10299  006FCA  D7D5               	goto	l11006
 10300                           
 10301                           ;UART.c: 254: }
 10302                           ;UART.c: 255: UARTstring((unsigned char*)"\r\n");
 10303  006FCC  0EFC               	movlw	low STR_1
 10304  006FCE  0100               	movlb	0	; () banked
 10305  006FD0  6F76               	movwf	UARTstring@data& (0+255),b
 10306  006FD2  0EFF               	movlw	high STR_1
 10307  006FD4  0100               	movlb	0	; () banked
 10308  006FD6  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 10309  006FD8  ECB0  F038         	call	_UARTstring	;wreg free
 10310  006FDC  0012               	return		;funcret
 10311  006FDE                     __end_of_UARTstringCRLN:
 10312                           	opt stack 0
 10313                           tblptru	equ	0xFF8
 10314                           tblptrh	equ	0xFF7
 10315                           tblptrl	equ	0xFF6
 10316                           tablat	equ	0xFF5
 10317                           prodh	equ	0xFF4
 10318                           prodl	equ	0xFF3
 10319                           intcon	equ	0xFF2
 10320                           indf0	equ	0xFEF
 10321                           postinc0	equ	0xFEE
 10322                           fsr0h	equ	0xFEA
 10323                           fsr0l	equ	0xFE9
 10324                           wreg	equ	0xFE8
 10325                           postdec1	equ	0xFE5
 10326                           fsr1h	equ	0xFE2
 10327                           fsr1l	equ	0xFE1
 10328                           indf2	equ	0xFDF
 10329                           postinc2	equ	0xFDE
 10330                           fsr2h	equ	0xFDA
 10331                           fsr2l	equ	0xFD9
 10332                           status	equ	0xFD8
 10333                           
 10334 ;; *************** function _UARTcommandMenu *****************
 10335 ;; Defined at:
 10336 ;;		line 263 in file "UART.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  Command         2   24[BANK0 ] PTR unsigned char 
 10339 ;;		 -> STR_84(5), STR_82(4), STR_79(4), STR_75(4), 
 10340 ;;		 -> Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR
      +(20), 
 10341 ;;		 -> Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18)
      +, 
 10342 ;;		 -> Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), 
 10343 ;;		 -> Conf1_ChannelD_STR(15), 
 10344 ;;  Desc            2   26[BANK0 ] PTR unsigned char 
 10345 ;;		 -> STR_99(32), STR_98(31), STR_97(32), STR_96(31), 
 10346 ;;		 -> STR_95(32), STR_94(31), STR_93(20), STR_92(19), 
 10347 ;;		 -> STR_91(23), STR_90(22), STR_89(19), STR_88(19), 
 10348 ;;		 -> STR_87(19), STR_85(41), STR_83(24), STR_80(25), 
 10349 ;;		 -> STR_76(10), 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  place           1   34[BANK0 ] unsigned char 
 10352 ;;  i               1   33[BANK0 ] unsigned char 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;		None               void
 10355 ;; Registers used:
 10356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10364 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;Total ram usage:       11 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:    8
 10369 ;; This function calls:
 10370 ;;		_UARTchar
 10371 ;;		_UARTstring
 10372 ;; This function is called by:
 10373 ;;		_UseBluetooth
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text12
 10378  005B78                     __ptext12:
 10379                           	opt stack 0
 10380  005B78                     _UARTcommandMenu:
 10381                           	opt stack 21
 10382                           
 10383                           ;UART.c: 265: unsigned char place = 0;
 10384                           
 10385                           ;incstack = 0
 10386  005B78  0E00               	movlw	0
 10387  005B7A  0100               	movlb	0	; () banked
 10388  005B7C  6F82               	movwf	UARTcommandMenu@place& (0+255),b
 10389                           
 10390                           ;UART.c: 266: unsigned char i;
 10391                           ;UART.c: 268: while((*Command != 0) && (place < 30))
 10392  005B7E  D019               	goto	l11244
 10393  005B80                     l11238:
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;UART.c: 269: {
 10397                           ;UART.c: 270: UARTchar(*Command);
 10398  005B80  C078  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 10399  005B84  C079  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 10400  005B88  0E00               	movlw	low (__mediumconst shr (0+16))
 10401  005B8A  6EF8               	movwf	tblptru,c
 10402  005B8C  0E0F               	movlw	(high __ramtop+-1)
 10403  005B8E  64F7               	cpfsgt	tblptrh,c
 10404  005B90  D003               	bra	u13537
 10405  005B92  0008               	tblrd		*
 10406  005B94  50F5               	movf	tablat,w,c
 10407  005B96  D005               	bra	u13530
 10408  005B98                     u13537:
 10409  005B98  CFF6 FFE9          	movff	tblptrl,fsr0l
 10410  005B9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10411  005BA0  50EF               	movf	indf0,w,c
 10412  005BA2                     u13530:
 10413  005BA2  EC74  F03B         	call	_UARTchar
 10414                           
 10415                           ;UART.c: 271: *Command++;
 10416  005BA6  0100               	movlb	0	; () banked
 10417  005BA8  4B78               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 10418  005BAA  2B79               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;UART.c: 272: place++;
 10422  005BAC  0100               	movlb	0	; () banked
 10423  005BAE  2B82               	incf	UARTcommandMenu@place& (0+255),f,b
 10424  005BB0  D000               	goto	l11244
 10425  005BB2                     l11244:
 10426                           
 10427                           ; BSR set to: 0
 10428  005BB2  C078  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 10429  005BB6  C079  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 10430  005BBA  0E00               	movlw	low (__mediumconst shr (0+16))
 10431  005BBC  6EF8               	movwf	tblptru,c
 10432  005BBE  0E0F               	movlw	(high __ramtop+-1)
 10433  005BC0  64F7               	cpfsgt	tblptrh,c
 10434  005BC2  D003               	bra	u13547
 10435  005BC4  0008               	tblrd		*
 10436  005BC6  50F5               	movf	tablat,w,c
 10437  005BC8  D005               	bra	u13540
 10438  005BCA                     u13547:
 10439  005BCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10440  005BCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10441  005BD2  50EF               	movf	indf0,w,c
 10442  005BD4                     u13540:
 10443  005BD4  0900               	iorlw	0
 10444  005BD6  B4D8               	btfsc	status,2,c
 10445  005BD8  D005               	goto	l11248
 10446  005BDA  0E1D               	movlw	29
 10447  005BDC  0100               	movlb	0	; () banked
 10448  005BDE  6582               	cpfsgt	UARTcommandMenu@place& (0+255),b
 10449  005BE0  D7CF               	goto	l11238
 10450                           
 10451                           ; BSR set to: 0
 10452  005BE2  D000               	goto	l11248
 10453  005BE4                     l11248:
 10454                           
 10455                           ;UART.c: 273: }
 10456                           ;UART.c: 274: for(i =0; i < ((30 - place) + 1); i++)
 10457  005BE4  0E00               	movlw	0
 10458  005BE6  0100               	movlb	0	; () banked
 10459  005BE8  6F81               	movwf	UARTcommandMenu@i& (0+255),b
 10460  005BEA  D006               	goto	l11254
 10461  005BEC                     l11250:
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;UART.c: 275: {
 10465                           ;UART.c: 276: UARTchar('-');
 10466  005BEC  0E2D               	movlw	45
 10467  005BEE  EC74  F03B         	call	_UARTchar
 10468  005BF2  0100               	movlb	0	; () banked
 10469  005BF4  2B81               	incf	UARTcommandMenu@i& (0+255),f,b
 10470  005BF6  D000               	goto	l11254
 10471  005BF8                     l11254:
 10472                           
 10473                           ; BSR set to: 0
 10474  005BF8  0100               	movlb	0	; () banked
 10475  005BFA  5182               	movf	UARTcommandMenu@place& (0+255),w,b
 10476  005BFC  0100               	movlb	0	; () banked
 10477  005BFE  6F7C               	movwf	??_UARTcommandMenu& (0+255),b
 10478  005C00  6B7D               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 10479  005C02  0100               	movlb	0	; () banked
 10480  005C04  1F7C               	comf	??_UARTcommandMenu& (0+255),f,b
 10481  005C06  1F7D               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 10482  005C08  4B7C               	infsnz	??_UARTcommandMenu& (0+255),f,b
 10483  005C0A  2B7D               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 10484  005C0C  0E1F               	movlw	31
 10485  005C0E  0100               	movlb	0	; () banked
 10486  005C10  277C               	addwf	??_UARTcommandMenu& (0+255),f,b
 10487  005C12  0E00               	movlw	0
 10488  005C14  237D               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 10489  005C16  0100               	movlb	0	; () banked
 10490  005C18  5181               	movf	UARTcommandMenu@i& (0+255),w,b
 10491  005C1A  0100               	movlb	0	; () banked
 10492  005C1C  6F7E               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 10493  005C1E  6B7F               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 10494  005C20  0100               	movlb	0	; () banked
 10495  005C22  517C               	movf	??_UARTcommandMenu& (0+255),w,b
 10496  005C24  0100               	movlb	0	; () banked
 10497  005C26  5D7E               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 10498  005C28  0100               	movlb	0	; () banked
 10499  005C2A  517F               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 10500  005C2C  0A80               	xorlw	128
 10501  005C2E  0100               	movlb	0	; () banked
 10502  005C30  6F80               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 10503  005C32  0100               	movlb	0	; () banked
 10504  005C34  517D               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 10505  005C36  0A80               	xorlw	128
 10506  005C38  0100               	movlb	0	; () banked
 10507  005C3A  5980               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 10508  005C3C  A0D8               	btfss	status,0,c
 10509  005C3E  D7D6               	goto	l11250
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;UART.c: 277: }
 10513                           ;UART.c: 278: place = 0;
 10514                           
 10515                           ; BSR set to: 0
 10516  005C40  0E00               	movlw	0
 10517  005C42  0100               	movlb	0	; () banked
 10518  005C44  6F82               	movwf	UARTcommandMenu@place& (0+255),b
 10519                           
 10520                           ;UART.c: 279: while((*Desc != 0) && (place < 50))
 10521  005C46  D00E               	goto	l11264
 10522  005C48                     l11258:
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;UART.c: 280: {
 10526                           ;UART.c: 281: UARTchar(*Desc);
 10527  005C48  C07A  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 10528  005C4C  C07B  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 10529  005C50                     	if	0	;tblptru may be non-zero
 10530  005C50                     	endif
 10531  005C50                     	if	0	;tblptru may be non-zero
 10532  005C50                     	endif
 10533  005C50  0008               	tblrd		*
 10534  005C52  50F5               	movf	tablat,w,c
 10535  005C54  EC74  F03B         	call	_UARTchar
 10536                           
 10537                           ;UART.c: 282: *Desc++;
 10538  005C58  0100               	movlb	0	; () banked
 10539  005C5A  4B7A               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 10540  005C5C  2B7B               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;UART.c: 283: place++;
 10544  005C5E  0100               	movlb	0	; () banked
 10545  005C60  2B82               	incf	UARTcommandMenu@place& (0+255),f,b
 10546  005C62  D000               	goto	l11264
 10547  005C64                     l11264:
 10548                           
 10549                           ; BSR set to: 0
 10550  005C64  C07A  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 10551  005C68  C07B  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 10552  005C6C                     	if	0	;tblptru may be non-zero
 10553  005C6C                     	endif
 10554  005C6C                     	if	0	;tblptru may be non-zero
 10555  005C6C                     	endif
 10556  005C6C  0008               	tblrd		*
 10557  005C6E  50F5               	movf	tablat,w,c
 10558  005C70  0900               	iorlw	0
 10559  005C72  B4D8               	btfsc	status,2,c
 10560  005C74  D005               	goto	l11268
 10561                           
 10562                           ; BSR set to: 0
 10563  005C76  0E31               	movlw	49
 10564  005C78  0100               	movlb	0	; () banked
 10565  005C7A  6582               	cpfsgt	UARTcommandMenu@place& (0+255),b
 10566  005C7C  D7E5               	goto	l11258
 10567                           
 10568                           ; BSR set to: 0
 10569  005C7E  D000               	goto	l11268
 10570  005C80                     l11268:
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;UART.c: 284: }
 10574                           ;UART.c: 285: UARTstring((unsigned char*)"\r\n");
 10575  005C80  0EFC               	movlw	low STR_1
 10576  005C82  0100               	movlb	0	; () banked
 10577  005C84  6F76               	movwf	UARTstring@data& (0+255),b
 10578  005C86  0EFF               	movlw	high STR_1
 10579  005C88  0100               	movlb	0	; () banked
 10580  005C8A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 10581  005C8C  ECB0  F038         	call	_UARTstring	;wreg free
 10582  005C90  0012               	return		;funcret
 10583  005C92                     __end_of_UARTcommandMenu:
 10584                           	opt stack 0
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           intcon	equ	0xFF2
 10592                           indf0	equ	0xFEF
 10593                           postinc0	equ	0xFEE
 10594                           fsr0h	equ	0xFEA
 10595                           fsr0l	equ	0xFE9
 10596                           wreg	equ	0xFE8
 10597                           postdec1	equ	0xFE5
 10598                           fsr1h	equ	0xFE2
 10599                           fsr1l	equ	0xFE1
 10600                           indf2	equ	0xFDF
 10601                           postinc2	equ	0xFDE
 10602                           fsr2h	equ	0xFDA
 10603                           fsr2l	equ	0xFD9
 10604                           status	equ	0xFD8
 10605                           
 10606 ;; *************** function _StringMatchCaseInsensitive *****************
 10607 ;; Defined at:
 10608 ;;		line 215 in file "MISC.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;  This            2   24[BANK0 ] PTR unsigned char 
 10611 ;;		 -> ReceivedString(255), 
 10612 ;;  That            2   26[BANK0 ] PTR const unsigned char 
 10613 ;;		 -> Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR
      +(20), 
 10614 ;;		 -> Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18)
      +, 
 10615 ;;		 -> Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), 
 10616 ;;		 -> Conf1_ChannelD_STR(15), 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  tempThat        1   29[BANK0 ] unsigned char 
 10619 ;;  tempThis        1   28[BANK0 ] unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      unsigned char 
 10622 ;; Registers used:
 10623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;Total ram usage:        6 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:    7
 10636 ;; This function calls:
 10637 ;;		_lowercaseChar
 10638 ;; This function is called by:
 10639 ;;		_UseBluetooth
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text13
 10644  006ADC                     __ptext13:
 10645                           	opt stack 0
 10646  006ADC                     _StringMatchCaseInsensitive:
 10647                           	opt stack 22
 10648                           
 10649                           ;MISC.c: 217: unsigned char tempThis,
 10650                           ;MISC.c: 218: tempThat;
 10651                           ;MISC.c: 220: while(*This != 0)
 10652                           
 10653                           ;incstack = 0
 10654  006ADC  D032               	goto	l8256
 10655  006ADE                     l8240:
 10656                           
 10657                           ;MISC.c: 221: {
 10658                           ;MISC.c: 222: tempThis = *This;
 10659  006ADE  C078  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 10660  006AE2  C079  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 10661  006AE6  50DF               	movf	indf2,w,c
 10662  006AE8  0100               	movlb	0	; () banked
 10663  006AEA  6F7C               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 10664                           
 10665                           ;MISC.c: 223: tempThat = *That;
 10666  006AEC  C07A  FFD9         	movff	StringMatchCaseInsensitive@That,fsr2l
 10667  006AF0  C07B  FFDA         	movff	StringMatchCaseInsensitive@That+1,fsr2h
 10668  006AF4  50DF               	movf	indf2,w,c
 10669  006AF6  0100               	movlb	0	; () banked
 10670  006AF8  6F7D               	movwf	StringMatchCaseInsensitive@tempThat& (0+255),b
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;MISC.c: 224: lowercaseChar(&tempThis);
 10674  006AFA  0E7C               	movlw	low StringMatchCaseInsensitive@tempThis
 10675  006AFC  0100               	movlb	0	; () banked
 10676  006AFE  6F75               	movwf	lowercaseChar@Input& (0+255),b
 10677  006B00  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 10678  006B02  0100               	movlb	0	; () banked
 10679  006B04  6F76               	movwf	(lowercaseChar@Input+1)& (0+255),b
 10680  006B06  EC10  F03B         	call	_lowercaseChar	;wreg free
 10681                           
 10682                           ;MISC.c: 225: lowercaseChar(&tempThat);
 10683  006B0A  0E7D               	movlw	low StringMatchCaseInsensitive@tempThat
 10684  006B0C  0100               	movlb	0	; () banked
 10685  006B0E  6F75               	movwf	lowercaseChar@Input& (0+255),b
 10686  006B10  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 10687  006B12  0100               	movlb	0	; () banked
 10688  006B14  6F76               	movwf	(lowercaseChar@Input+1)& (0+255),b
 10689  006B16  EC10  F03B         	call	_lowercaseChar	;wreg free
 10690                           
 10691                           ;MISC.c: 227: if((tempThis != tempThat) || (tempThat == 0))
 10692  006B1A  0100               	movlb	0	; () banked
 10693  006B1C  517D               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 10694  006B1E  0100               	movlb	0	; () banked
 10695  006B20  197C               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 10696  006B22  A4D8               	btfss	status,2,c
 10697  006B24  D005               	goto	l8250
 10698                           
 10699                           ; BSR set to: 0
 10700  006B26  0100               	movlb	0	; () banked
 10701  006B28  517D               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 10702  006B2A  0100               	movlb	0	; () banked
 10703  006B2C  A4D8               	btfss	status,2,c
 10704  006B2E  D002               	goto	l8254
 10705  006B30                     l8250:
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;MISC.c: 228: {
 10709                           ;MISC.c: 229: return 0;
 10710  006B30  0E00               	movlw	0
 10711                           
 10712                           ; BSR set to: 0
 10713  006B32  0012               	return	
 10714  006B34                     l8254:
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;MISC.c: 230: }
 10718                           ;MISC.c: 231: This++;
 10719  006B34  0100               	movlb	0	; () banked
 10720  006B36  4B78               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 10721  006B38  2B79               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 10722                           
 10723                           ;MISC.c: 232: That++;
 10724  006B3A  0100               	movlb	0	; () banked
 10725  006B3C  4B7A               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 10726  006B3E  2B7B               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 10727  006B40  D000               	goto	l8256
 10728  006B42                     l8256:
 10729  006B42  C078  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 10730  006B46  C079  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 10731  006B4A  50DF               	movf	indf2,w,c
 10732  006B4C  A4D8               	btfss	status,2,c
 10733  006B4E  D7C7               	goto	l8240
 10734                           
 10735                           ;MISC.c: 233: }
 10736                           ;MISC.c: 234: if(*That == 0)
 10737  006B50  C07A  FFD9         	movff	StringMatchCaseInsensitive@That,fsr2l
 10738  006B54  C07B  FFDA         	movff	StringMatchCaseInsensitive@That+1,fsr2h
 10739  006B58  50DF               	movf	indf2,w,c
 10740  006B5A  A4D8               	btfss	status,2,c
 10741  006B5C  D002               	goto	l8266
 10742                           
 10743                           ;MISC.c: 235: {
 10744                           ;MISC.c: 236: return 1;
 10745  006B5E  0E01               	movlw	1
 10746                           
 10747                           ;MISC.c: 237: }
 10748  006B60  0012               	return	
 10749  006B62                     l8266:
 10750                           
 10751                           ;MISC.c: 238: else
 10752                           ;MISC.c: 239: {
 10753                           ;MISC.c: 240: return 0;
 10754  006B62  0E00               	movlw	0
 10755  006B64  0012               	return	
 10756  006B66  0012               	return		;funcret
 10757  006B68                     __end_of_StringMatchCaseInsensitive:
 10758                           	opt stack 0
 10759                           tblptru	equ	0xFF8
 10760                           tblptrh	equ	0xFF7
 10761                           tblptrl	equ	0xFF6
 10762                           tablat	equ	0xFF5
 10763                           prodh	equ	0xFF4
 10764                           prodl	equ	0xFF3
 10765                           intcon	equ	0xFF2
 10766                           indf0	equ	0xFEF
 10767                           postinc0	equ	0xFEE
 10768                           fsr0h	equ	0xFEA
 10769                           fsr0l	equ	0xFE9
 10770                           wreg	equ	0xFE8
 10771                           postdec1	equ	0xFE5
 10772                           fsr1h	equ	0xFE2
 10773                           fsr1l	equ	0xFE1
 10774                           indf2	equ	0xFDF
 10775                           postinc2	equ	0xFDE
 10776                           fsr2h	equ	0xFDA
 10777                           fsr2l	equ	0xFD9
 10778                           status	equ	0xFD8
 10779                           
 10780 ;; *************** function _StringMatch *****************
 10781 ;; Defined at:
 10782 ;;		line 188 in file "MISC.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  This            2   21[BANK0 ] PTR unsigned char 
 10785 ;;		 -> ReceivedString(255), 
 10786 ;;  That            2   23[BANK0 ] PTR const unsigned char 
 10787 ;;		 -> STR_72(4), 
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;		None
 10790 ;; Return value:  Size  Location     Type
 10791 ;;                  1    wreg      unsigned char 
 10792 ;; Registers used:
 10793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10803 ;;Total ram usage:        5 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    6
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_UseBluetooth
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text14
 10814  006F02                     __ptext14:
 10815                           	opt stack 0
 10816  006F02                     _StringMatch:
 10817                           	opt stack 23
 10818                           
 10819                           ;MISC.c: 190: while(*This != 0)
 10820                           
 10821                           ;incstack = 0
 10822  006F02  D023               	goto	l8224
 10823  006F04                     l8214:
 10824                           
 10825                           ;MISC.c: 191: {
 10826                           ;MISC.c: 192: if(*This != *That || *That == 0)
 10827  006F04  C075  FFD9         	movff	StringMatch@This,fsr2l
 10828  006F08  C076  FFDA         	movff	StringMatch@This+1,fsr2h
 10829  006F0C  50DF               	movf	indf2,w,c
 10830  006F0E  0100               	movlb	0	; () banked
 10831  006F10  6F79               	movwf	??_StringMatch& (0+255),b
 10832  006F12  C077  FFF6         	movff	StringMatch@That,tblptrl
 10833  006F16  C078  FFF7         	movff	StringMatch@That+1,tblptrh
 10834  006F1A                     	if	0	;tblptru may be non-zero
 10835  006F1A                     	endif
 10836  006F1A                     	if	0	;tblptru may be non-zero
 10837  006F1A                     	endif
 10838  006F1A  0008               	tblrd		*
 10839  006F1C  50F5               	movf	tablat,w,c
 10840  006F1E  0100               	movlb	0	; () banked
 10841  006F20  1979               	xorwf	??_StringMatch& (0+255),w,b
 10842  006F22  A4D8               	btfss	status,2,c
 10843  006F24  D009               	goto	l8218
 10844                           
 10845                           ; BSR set to: 0
 10846  006F26  C077  FFF6         	movff	StringMatch@That,tblptrl
 10847  006F2A  C078  FFF7         	movff	StringMatch@That+1,tblptrh
 10848  006F2E                     	if	0	;tblptru may be non-zero
 10849  006F2E                     	endif
 10850  006F2E                     	if	0	;tblptru may be non-zero
 10851  006F2E                     	endif
 10852  006F2E  0008               	tblrd		*
 10853  006F30  50F5               	movf	tablat,w,c
 10854  006F32  0900               	iorlw	0
 10855  006F34  A4D8               	btfss	status,2,c
 10856  006F36  D002               	goto	l8222
 10857  006F38                     l8218:
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;MISC.c: 193: {
 10861                           ;MISC.c: 194: return 0;
 10862  006F38  0E00               	movlw	0
 10863                           
 10864                           ; BSR set to: 0
 10865  006F3A  0012               	return	
 10866  006F3C                     l8222:
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;MISC.c: 195: }
 10870                           ;MISC.c: 196: This++;
 10871  006F3C  0100               	movlb	0	; () banked
 10872  006F3E  4B75               	infsnz	StringMatch@This& (0+255),f,b
 10873  006F40  2B76               	incf	(StringMatch@This+1)& (0+255),f,b
 10874                           
 10875                           ;MISC.c: 197: That++;
 10876  006F42  0100               	movlb	0	; () banked
 10877  006F44  4B77               	infsnz	StringMatch@That& (0+255),f,b
 10878  006F46  2B78               	incf	(StringMatch@That+1)& (0+255),f,b
 10879  006F48  D000               	goto	l8224
 10880  006F4A                     l8224:
 10881  006F4A  C075  FFD9         	movff	StringMatch@This,fsr2l
 10882  006F4E  C076  FFDA         	movff	StringMatch@This+1,fsr2h
 10883  006F52  50DF               	movf	indf2,w,c
 10884  006F54  A4D8               	btfss	status,2,c
 10885  006F56  D7D6               	goto	l8214
 10886                           
 10887                           ;MISC.c: 198: }
 10888                           ;MISC.c: 199: if(*That == 0)
 10889  006F58  C077  FFF6         	movff	StringMatch@That,tblptrl
 10890  006F5C  C078  FFF7         	movff	StringMatch@That+1,tblptrh
 10891  006F60                     	if	0	;tblptru may be non-zero
 10892  006F60                     	endif
 10893  006F60                     	if	0	;tblptru may be non-zero
 10894  006F60                     	endif
 10895  006F60  0008               	tblrd		*
 10896  006F62  50F5               	movf	tablat,w,c
 10897  006F64  0900               	iorlw	0
 10898  006F66  A4D8               	btfss	status,2,c
 10899  006F68  D002               	goto	l8234
 10900                           
 10901                           ;MISC.c: 200: {
 10902                           ;MISC.c: 201: return 1;
 10903  006F6A  0E01               	movlw	1
 10904                           
 10905                           ;MISC.c: 202: }
 10906  006F6C  0012               	return	
 10907  006F6E                     l8234:
 10908                           
 10909                           ;MISC.c: 203: else
 10910                           ;MISC.c: 204: {
 10911                           ;MISC.c: 205: return 0;
 10912  006F6E  0E00               	movlw	0
 10913  006F70  0012               	return	
 10914  006F72  0012               	return		;funcret
 10915  006F74                     __end_of_StringMatch:
 10916                           	opt stack 0
 10917                           tblptru	equ	0xFF8
 10918                           tblptrh	equ	0xFF7
 10919                           tblptrl	equ	0xFF6
 10920                           tablat	equ	0xFF5
 10921                           prodh	equ	0xFF4
 10922                           prodl	equ	0xFF3
 10923                           intcon	equ	0xFF2
 10924                           indf0	equ	0xFEF
 10925                           postinc0	equ	0xFEE
 10926                           fsr0h	equ	0xFEA
 10927                           fsr0l	equ	0xFE9
 10928                           wreg	equ	0xFE8
 10929                           postdec1	equ	0xFE5
 10930                           fsr1h	equ	0xFE2
 10931                           fsr1l	equ	0xFE1
 10932                           indf2	equ	0xFDF
 10933                           postinc2	equ	0xFDE
 10934                           fsr2h	equ	0xFDA
 10935                           fsr2l	equ	0xFD9
 10936                           status	equ	0xFD8
 10937                           
 10938 ;; *************** function _StringContainsCaseInsensitive *****************
 10939 ;; Defined at:
 10940 ;;		line 287 in file "MISC.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  This            2   24[BANK0 ] PTR unsigned char 
 10943 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), ReceivedString(255), 
 10944 ;;  That            2   26[BANK0 ] PTR const unsigned char 
 10945 ;;		 -> STR_59(7), STR_45(4), STR_44(13), STR_26(4), 
 10946 ;;		 -> STR_24(6), STR_22(6), UseBluetooth@rfchannelSTR(10), 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  tempThat        1   30[BANK0 ] unsigned char 
 10949 ;;  tempThis        1   29[BANK0 ] unsigned char 
 10950 ;;  begin           1   28[BANK0 ] unsigned char 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      unsigned char 
 10953 ;; Registers used:
 10954 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10960 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10961 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10963 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10964 ;;Total ram usage:        7 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    7
 10967 ;; This function calls:
 10968 ;;		_lowercaseChar
 10969 ;; This function is called by:
 10970 ;;		_UseBluetooth
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text15
 10975  006252                     __ptext15:
 10976                           	opt stack 0
 10977  006252                     _StringContainsCaseInsensitive:
 10978                           	opt stack 22
 10979                           
 10980                           ;MISC.c: 289: unsigned char tempThis,
 10981                           ;MISC.c: 290: tempThat;
 10982                           ;MISC.c: 291: unsigned char begin = 0;
 10983                           
 10984                           ;incstack = 0
 10985  006252  0E00               	movlw	0
 10986  006254  0100               	movlb	0	; () banked
 10987  006256  6F7C               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 10988                           
 10989                           ;MISC.c: 293: while(*This != 0)
 10990  006258  D05F               	goto	l8306
 10991  00625A                     l8272:
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;MISC.c: 294: {
 10995                           ;MISC.c: 295: tempThis = *This;
 10996  00625A  C078  FFD9         	movff	StringContainsCaseInsensitive@This,fsr2l
 10997  00625E  C079  FFDA         	movff	StringContainsCaseInsensitive@This+1,fsr2h
 10998  006262  50DF               	movf	indf2,w,c
 10999  006264  0100               	movlb	0	; () banked
 11000  006266  6F7D               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;MISC.c: 296: tempThat = *That;
 11004  006268  C07A  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 11005  00626C  C07B  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 11006  006270  0E00               	movlw	low (__mediumconst shr (0+16))
 11007  006272  6EF8               	movwf	tblptru,c
 11008  006274  0E0F               	movlw	(high __ramtop+-1)
 11009  006276  64F7               	cpfsgt	tblptrh,c
 11010  006278  D003               	bra	u9027
 11011  00627A  0008               	tblrd		*
 11012  00627C  50F5               	movf	tablat,w,c
 11013  00627E  D005               	bra	u9020
 11014  006280                     u9027:
 11015  006280  CFF6 FFE9          	movff	tblptrl,fsr0l
 11016  006284  CFF7 FFEA          	movff	tblptrh,fsr0h
 11017  006288  50EF               	movf	indf0,w,c
 11018  00628A                     u9020:
 11019  00628A  0100               	movlb	0	; () banked
 11020  00628C  6F7E               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;MISC.c: 297: lowercaseChar(&tempThis);
 11024  00628E  0E7D               	movlw	low StringContainsCaseInsensitive@tempThis
 11025  006290  0100               	movlb	0	; () banked
 11026  006292  6F75               	movwf	lowercaseChar@Input& (0+255),b
 11027  006294  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 11028  006296  0100               	movlb	0	; () banked
 11029  006298  6F76               	movwf	(lowercaseChar@Input+1)& (0+255),b
 11030  00629A  EC10  F03B         	call	_lowercaseChar	;wreg free
 11031                           
 11032                           ;MISC.c: 298: lowercaseChar(&tempThat);
 11033  00629E  0E7E               	movlw	low StringContainsCaseInsensitive@tempThat
 11034  0062A0  0100               	movlb	0	; () banked
 11035  0062A2  6F75               	movwf	lowercaseChar@Input& (0+255),b
 11036  0062A4  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 11037  0062A6  0100               	movlb	0	; () banked
 11038  0062A8  6F76               	movwf	(lowercaseChar@Input+1)& (0+255),b
 11039  0062AA  EC10  F03B         	call	_lowercaseChar	;wreg free
 11040                           
 11041                           ;MISC.c: 300: if(tempThis == tempThat)
 11042  0062AE  0100               	movlb	0	; () banked
 11043  0062B0  517E               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 11044  0062B2  0100               	movlb	0	; () banked
 11045  0062B4  197D               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 11046  0062B6  A4D8               	btfss	status,2,c
 11047  0062B8  D026               	goto	l8298
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;MISC.c: 301: {
 11051                           ;MISC.c: 302: begin = 1;
 11052  0062BA  0E01               	movlw	1
 11053  0062BC  0100               	movlb	0	; () banked
 11054  0062BE  6F7C               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;MISC.c: 303: That++;
 11058  0062C0  0100               	movlb	0	; () banked
 11059  0062C2  4B7A               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 11060  0062C4  2B7B               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;MISC.c: 304: if(*That == 0)
 11064  0062C6  C07A  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 11065  0062CA  C07B  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 11066  0062CE  0E00               	movlw	low (__mediumconst shr (0+16))
 11067  0062D0  6EF8               	movwf	tblptru,c
 11068  0062D2  0E0F               	movlw	(high __ramtop+-1)
 11069  0062D4  64F7               	cpfsgt	tblptrh,c
 11070  0062D6  D003               	bra	u9047
 11071  0062D8  0008               	tblrd		*
 11072  0062DA  50F5               	movf	tablat,w,c
 11073  0062DC  D005               	bra	u9040
 11074  0062DE                     u9047:
 11075  0062DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 11076  0062E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 11077  0062E6  50EF               	movf	indf0,w,c
 11078  0062E8                     u9040:
 11079  0062E8  0900               	iorlw	0
 11080  0062EA  A4D8               	btfss	status,2,c
 11081  0062EC  D002               	goto	l8292
 11082                           
 11083                           ;MISC.c: 305: {
 11084                           ;MISC.c: 306: return 1;
 11085  0062EE  0E01               	movlw	1
 11086  0062F0  0012               	return	
 11087  0062F2                     l8292:
 11088                           
 11089                           ;MISC.c: 307: }
 11090                           ;MISC.c: 308: if(*This == 0)
 11091  0062F2  C078  FFD9         	movff	StringContainsCaseInsensitive@This,fsr2l
 11092  0062F6  C079  FFDA         	movff	StringContainsCaseInsensitive@This+1,fsr2h
 11093  0062FA  50DF               	movf	indf2,w,c
 11094  0062FC  A4D8               	btfss	status,2,c
 11095  0062FE  D008               	goto	l8304
 11096                           
 11097                           ;MISC.c: 309: {
 11098                           ;MISC.c: 310: return 0;
 11099  006300  0E00               	movlw	0
 11100  006302  0012               	return	
 11101                           
 11102                           ;MISC.c: 311: }
 11103                           ;MISC.c: 312: }
 11104  006304  D005               	goto	l8304
 11105  006306                     l8298:
 11106                           
 11107                           ;MISC.c: 313: else
 11108                           ;MISC.c: 314: {
 11109                           ;MISC.c: 315: if(begin == 1)
 11110  006306  0100               	movlb	0	; () banked
 11111  006308  057C               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
 11112  00630A  D7F8               	goto	L7
 11113                           
 11114                           ; BSR set to: 0
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;MISC.c: 316: {
 11118                           ;MISC.c: 317: return 0;
 11119  00630C  0012               	return	
 11120                           
 11121                           ; BSR set to: 0
 11122  00630E  D000               	goto	l8304
 11123  006310                     l8304:
 11124                           
 11125                           ;MISC.c: 318: }
 11126                           ;MISC.c: 319: }
 11127                           ;MISC.c: 320: This++;
 11128  006310  0100               	movlb	0	; () banked
 11129  006312  4B78               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 11130  006314  2B79               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 11131  006316  D000               	goto	l8306
 11132  006318                     l8306:
 11133                           
 11134                           ; BSR set to: 0
 11135  006318  C078  FFD9         	movff	StringContainsCaseInsensitive@This,fsr2l
 11136  00631C  C079  FFDA         	movff	StringContainsCaseInsensitive@This+1,fsr2h
 11137  006320  50DF               	movf	indf2,w,c
 11138  006322  A4D8               	btfss	status,2,c
 11139  006324  D79A               	goto	l8272
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;MISC.c: 321: }
 11143                           ;MISC.c: 322: return 0;
 11144                           
 11145                           ; BSR set to: 0
 11146  006326  0E00               	movlw	0
 11147  006328  0012               	return	
 11148                           
 11149                           ; BSR set to: 0
 11150  00632A  0012               	return		;funcret
 11151  00632C                     __end_of_StringContainsCaseInsensitive:
 11152                           	opt stack 0
 11153                           tblptru	equ	0xFF8
 11154                           tblptrh	equ	0xFF7
 11155                           tblptrl	equ	0xFF6
 11156                           tablat	equ	0xFF5
 11157                           prodh	equ	0xFF4
 11158                           prodl	equ	0xFF3
 11159                           intcon	equ	0xFF2
 11160                           indf0	equ	0xFEF
 11161                           postinc0	equ	0xFEE
 11162                           fsr0h	equ	0xFEA
 11163                           fsr0l	equ	0xFE9
 11164                           wreg	equ	0xFE8
 11165                           postdec1	equ	0xFE5
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           fsr2h	equ	0xFDA
 11171                           fsr2l	equ	0xFD9
 11172                           status	equ	0xFD8
 11173                           
 11174 ;; *************** function _StringAddEqual *****************
 11175 ;; Defined at:
 11176 ;;		line 581 in file "MISC.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  Input           2   36[BANK0 ] PTR unsigned char 
 11179 ;;		 -> ReceivedString(255), 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  temp          100    0[BANK1 ] unsigned char [100]
 11182 ;;  j               1  102[BANK1 ] unsigned char 
 11183 ;;  i               1  101[BANK1 ] unsigned char 
 11184 ;;  firstnumber     1  100[BANK1 ] unsigned char 
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  1    wreg      unsigned char 
 11187 ;; Registers used:
 11188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11195 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11197 ;;      Totals:         0       4     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;Total ram usage:      107 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:    8
 11201 ;; This function calls:
 11202 ;;		_BufferCopy
 11203 ;;		_cleanBuffer
 11204 ;; This function is called by:
 11205 ;;		_UseBluetooth
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text16
 11210  004AFE                     __ptext16:
 11211                           	opt stack 0
 11212  004AFE                     _StringAddEqual:
 11213                           	opt stack 21
 11214                           
 11215                           ;MISC.c: 583: unsigned char i =0;
 11216                           
 11217                           ;incstack = 0
 11218  004AFE  0E00               	movlw	0
 11219  004B00  0101               	movlb	1	; () banked
 11220  004B02  6F65               	movwf	StringAddEqual@i& (0+255),b
 11221                           
 11222                           ;MISC.c: 584: unsigned char j =0;
 11223  004B04  0E00               	movlw	0
 11224  004B06  0101               	movlb	1	; () banked
 11225  004B08  6F66               	movwf	StringAddEqual@j& (0+255),b
 11226                           
 11227                           ;MISC.c: 585: unsigned char firstnumber = 200;
 11228  004B0A  0EC8               	movlw	200
 11229  004B0C  0101               	movlb	1	; () banked
 11230  004B0E  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 11231                           
 11232                           ; BSR set to: 1
 11233                           ;MISC.c: 586: unsigned char temp[100];
 11234                           ;MISC.c: 587: cleanBuffer(temp,100);
 11235  004B10  0E00               	movlw	low StringAddEqual@temp
 11236  004B12  0100               	movlb	0	; () banked
 11237  004B14  6F75               	movwf	cleanBuffer@data& (0+255),b
 11238  004B16  0E01               	movlw	high StringAddEqual@temp
 11239  004B18  0100               	movlb	0	; () banked
 11240  004B1A  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 11241  004B1C  0E00               	movlw	0
 11242  004B1E  0100               	movlb	0	; () banked
 11243  004B20  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
 11244  004B22  0E64               	movlw	100
 11245  004B24  6F77               	movwf	cleanBuffer@count& (0+255),b
 11246  004B26  EC83  F038         	call	_cleanBuffer	;wreg free
 11247                           
 11248                           ;MISC.c: 588: while(Input[i] != 0)
 11249  004B2A  D032               	goto	l11196
 11250  004B2C                     l11188:
 11251                           
 11252                           ;MISC.c: 589: {
 11253                           ;MISC.c: 590: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 11254  004B2C  0101               	movlb	1	; () banked
 11255  004B2E  5165               	movf	StringAddEqual@i& (0+255),w,b
 11256  004B30  0D01               	mullw	1
 11257  004B32  50F3               	movf	prodl,w,c
 11258  004B34  0100               	movlb	0	; () banked
 11259  004B36  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11260  004B38  6ED9               	movwf	fsr2l,c
 11261  004B3A  50F4               	movf	prodh,w,c
 11262  004B3C  0100               	movlb	0	; () banked
 11263  004B3E  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11264  004B40  6EDA               	movwf	fsr2h,c
 11265  004B42  0E2F               	movlw	47
 11266  004B44  64DF               	cpfsgt	indf2,c
 11267  004B46  D00F               	goto	l11192
 11268                           
 11269                           ; BSR set to: 0
 11270  004B48  0101               	movlb	1	; () banked
 11271  004B4A  5165               	movf	StringAddEqual@i& (0+255),w,b
 11272  004B4C  0D01               	mullw	1
 11273  004B4E  50F3               	movf	prodl,w,c
 11274  004B50  0100               	movlb	0	; () banked
 11275  004B52  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11276  004B54  6ED9               	movwf	fsr2l,c
 11277  004B56  50F4               	movf	prodh,w,c
 11278  004B58  0100               	movlb	0	; () banked
 11279  004B5A  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11280  004B5C  6EDA               	movwf	fsr2h,c
 11281  004B5E  0E39               	movlw	57
 11282  004B60  64DF               	cpfsgt	indf2,c
 11283  004B62  D010               	goto	l336
 11284  004B64  D000               	goto	l11192
 11285  004B66                     l11192:
 11286                           
 11287                           ; BSR set to: 0
 11288  004B66  0101               	movlb	1	; () banked
 11289  004B68  5165               	movf	StringAddEqual@i& (0+255),w,b
 11290  004B6A  0D01               	mullw	1
 11291  004B6C  50F3               	movf	prodl,w,c
 11292  004B6E  0100               	movlb	0	; () banked
 11293  004B70  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11294  004B72  6ED9               	movwf	fsr2l,c
 11295  004B74  50F4               	movf	prodh,w,c
 11296  004B76  0100               	movlb	0	; () banked
 11297  004B78  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11298  004B7A  6EDA               	movwf	fsr2h,c
 11299  004B7C  0E2D               	movlw	45
 11300  004B7E  18DE               	xorwf	postinc2,w,c
 11301  004B80  A4D8               	btfss	status,2,c
 11302  004B82  D003               	goto	l11194
 11303  004B84                     l336:
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;MISC.c: 591: {
 11307                           ;MISC.c: 592: firstnumber = i;
 11308  004B84  C165  F164         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 11309                           
 11310                           ;MISC.c: 593: break;
 11311  004B88  D011               	goto	l11198
 11312  004B8A                     l11194:
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;MISC.c: 594: }
 11316                           ;MISC.c: 595: i++;
 11317  004B8A  0101               	movlb	1	; () banked
 11318  004B8C  2B65               	incf	StringAddEqual@i& (0+255),f,b
 11319  004B8E  D000               	goto	l11196
 11320  004B90                     l11196:
 11321  004B90  0101               	movlb	1	; () banked
 11322  004B92  5165               	movf	StringAddEqual@i& (0+255),w,b
 11323  004B94  0D01               	mullw	1
 11324  004B96  50F3               	movf	prodl,w,c
 11325  004B98  0100               	movlb	0	; () banked
 11326  004B9A  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11327  004B9C  6ED9               	movwf	fsr2l,c
 11328  004B9E  50F4               	movf	prodh,w,c
 11329  004BA0  0100               	movlb	0	; () banked
 11330  004BA2  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11331  004BA4  6EDA               	movwf	fsr2h,c
 11332  004BA6  50DF               	movf	indf2,w,c
 11333  004BA8  A4D8               	btfss	status,2,c
 11334  004BAA  D7C0               	goto	l11188
 11335  004BAC                     l11198:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;MISC.c: 596: }
 11339                           ;MISC.c: 597: if(firstnumber == 200)
 11340  004BAC  0EC8               	movlw	200
 11341  004BAE  0101               	movlb	1	; () banked
 11342  004BB0  1964               	xorwf	StringAddEqual@firstnumber& (0+255),w,b
 11343  004BB2  A4D8               	btfss	status,2,c
 11344  004BB4  D002               	goto	l11204
 11345                           
 11346                           ; BSR set to: 1
 11347                           ;MISC.c: 598: {
 11348                           ;MISC.c: 600: return 0;
 11349  004BB6  0E00               	movlw	0
 11350                           
 11351                           ; BSR set to: 1
 11352  004BB8  0012               	return	
 11353  004BBA                     l11204:
 11354                           
 11355                           ; BSR set to: 1
 11356                           ;MISC.c: 601: }
 11357                           ;MISC.c: 602: for(j=0;j<firstnumber;j++)
 11358  004BBA  0E00               	movlw	0
 11359  004BBC  0101               	movlb	1	; () banked
 11360  004BBE  6F66               	movwf	StringAddEqual@j& (0+255),b
 11361  004BC0  D019               	goto	l11210
 11362  004BC2                     l11206:
 11363                           
 11364                           ; BSR set to: 1
 11365                           ;MISC.c: 603: {
 11366                           ;MISC.c: 604: temp[j] = Input[j];
 11367  004BC2  0101               	movlb	1	; () banked
 11368  004BC4  5166               	movf	StringAddEqual@j& (0+255),w,b
 11369  004BC6  0D01               	mullw	1
 11370  004BC8  50F3               	movf	prodl,w,c
 11371  004BCA  0100               	movlb	0	; () banked
 11372  004BCC  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11373  004BCE  6ED9               	movwf	fsr2l,c
 11374  004BD0  50F4               	movf	prodh,w,c
 11375  004BD2  0100               	movlb	0	; () banked
 11376  004BD4  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11377  004BD6  6EDA               	movwf	fsr2h,c
 11378  004BD8  0101               	movlb	1	; () banked
 11379  004BDA  5166               	movf	StringAddEqual@j& (0+255),w,b
 11380  004BDC  0D01               	mullw	1
 11381  004BDE  0E00               	movlw	low StringAddEqual@temp
 11382  004BE0  24F3               	addwf	prodl,w,c
 11383  004BE2  6EE1               	movwf	fsr1l,c
 11384  004BE4  0E01               	movlw	high StringAddEqual@temp
 11385  004BE6  20F4               	addwfc	prodh,w,c
 11386  004BE8  6EE2               	movwf	fsr1h,c
 11387  004BEA  CFDF FFE7          	movff	indf2,indf1
 11388                           
 11389                           ; BSR set to: 1
 11390  004BEE  0101               	movlb	1	; () banked
 11391  004BF0  2B66               	incf	StringAddEqual@j& (0+255),f,b
 11392  004BF2  D000               	goto	l11210
 11393  004BF4                     l11210:
 11394                           
 11395                           ; BSR set to: 1
 11396  004BF4  0101               	movlb	1	; () banked
 11397  004BF6  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 11398  004BF8  0101               	movlb	1	; () banked
 11399  004BFA  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 11400  004BFC  A0D8               	btfss	status,0,c
 11401  004BFE  D7E1               	goto	l11206
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;MISC.c: 605: }
 11405                           ;MISC.c: 606: temp[firstnumber] = '=';
 11406                           
 11407                           ; BSR set to: 1
 11408  004C00  0101               	movlb	1	; () banked
 11409  004C02  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 11410  004C04  0D01               	mullw	1
 11411  004C06  0E00               	movlw	low StringAddEqual@temp
 11412  004C08  24F3               	addwf	prodl,w,c
 11413  004C0A  6ED9               	movwf	fsr2l,c
 11414  004C0C  0E01               	movlw	high StringAddEqual@temp
 11415  004C0E  20F4               	addwfc	prodh,w,c
 11416  004C10  6EDA               	movwf	fsr2h,c
 11417  004C12  0E3D               	movlw	61
 11418  004C14  6EDF               	movwf	indf2,c
 11419                           
 11420                           ; BSR set to: 1
 11421                           ;MISC.c: 607: for(j = (firstnumber);j<99;j++)
 11422  004C16  C164  F166         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 11423  004C1A                     l11216:
 11424                           
 11425                           ; BSR set to: 1
 11426  004C1A  0E62               	movlw	98
 11427  004C1C  0101               	movlb	1	; () banked
 11428  004C1E  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 11429  004C20  D001               	goto	l11220
 11430                           
 11431                           ; BSR set to: 1
 11432  004C22  D032               	goto	l11230
 11433  004C24                     l11220:
 11434                           
 11435                           ; BSR set to: 1
 11436                           ;MISC.c: 608: {
 11437                           ;MISC.c: 609: temp[j+1] = Input[j];
 11438  004C24  0101               	movlb	1	; () banked
 11439  004C26  5166               	movf	StringAddEqual@j& (0+255),w,b
 11440  004C28  0D01               	mullw	1
 11441  004C2A  50F3               	movf	prodl,w,c
 11442  004C2C  0100               	movlb	0	; () banked
 11443  004C2E  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11444  004C30  6ED9               	movwf	fsr2l,c
 11445  004C32  50F4               	movf	prodh,w,c
 11446  004C34  0100               	movlb	0	; () banked
 11447  004C36  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11448  004C38  6EDA               	movwf	fsr2h,c
 11449  004C3A  0101               	movlb	1	; () banked
 11450  004C3C  5166               	movf	StringAddEqual@j& (0+255),w,b
 11451  004C3E  0100               	movlb	0	; () banked
 11452  004C40  6F86               	movwf	??_StringAddEqual& (0+255),b
 11453  004C42  6B87               	clrf	(??_StringAddEqual+1)& (0+255),b
 11454  004C44  0E01               	movlw	1
 11455  004C46  0100               	movlb	0	; () banked
 11456  004C48  2786               	addwf	??_StringAddEqual& (0+255),f,b
 11457  004C4A  0E00               	movlw	0
 11458  004C4C  2387               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 11459  004C4E  0E00               	movlw	low StringAddEqual@temp
 11460  004C50  0100               	movlb	0	; () banked
 11461  004C52  2586               	addwf	??_StringAddEqual& (0+255),w,b
 11462  004C54  6EE1               	movwf	fsr1l,c
 11463  004C56  0E01               	movlw	high StringAddEqual@temp
 11464  004C58  0100               	movlb	0	; () banked
 11465  004C5A  2187               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 11466  004C5C  6EE2               	movwf	fsr1h,c
 11467  004C5E  CFDF FFE7          	movff	indf2,indf1
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;MISC.c: 610: if(Input[j] ==0)
 11471  004C62  0101               	movlb	1	; () banked
 11472  004C64  5166               	movf	StringAddEqual@j& (0+255),w,b
 11473  004C66  0D01               	mullw	1
 11474  004C68  50F3               	movf	prodl,w,c
 11475  004C6A  0100               	movlb	0	; () banked
 11476  004C6C  2584               	addwf	StringAddEqual@Input& (0+255),w,b
 11477  004C6E  6ED9               	movwf	fsr2l,c
 11478  004C70  50F4               	movf	prodh,w,c
 11479  004C72  0100               	movlb	0	; () banked
 11480  004C74  2185               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 11481  004C76  6EDA               	movwf	fsr2h,c
 11482  004C78  50DF               	movf	indf2,w,c
 11483  004C7A  B4D8               	btfsc	status,2,c
 11484  004C7C  D005               	goto	l11230
 11485  004C7E  D001               	goto	l11226
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;MISC.c: 611: {
 11489                           ;MISC.c: 612: break;
 11490  004C80  D003               	goto	l11230
 11491  004C82                     l11226:
 11492                           
 11493                           ; BSR set to: 0
 11494  004C82  0101               	movlb	1	; () banked
 11495  004C84  2B66               	incf	StringAddEqual@j& (0+255),f,b
 11496  004C86  D7C9               	goto	l11216
 11497  004C88                     l11230:
 11498                           
 11499                           ;MISC.c: 613: }
 11500                           ;MISC.c: 614: }
 11501                           ;MISC.c: 615: BufferCopy(temp,Input,100, 0);
 11502  004C88  0E00               	movlw	low StringAddEqual@temp
 11503  004C8A  0100               	movlb	0	; () banked
 11504  004C8C  6F7D               	movwf	BufferCopy@from& (0+255),b
 11505  004C8E  0E01               	movlw	high StringAddEqual@temp
 11506  004C90  0100               	movlb	0	; () banked
 11507  004C92  6F7E               	movwf	(BufferCopy@from+1)& (0+255),b
 11508  004C94  C084  F07F         	movff	StringAddEqual@Input,BufferCopy@to
 11509  004C98  C085  F080         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 11510  004C9C  0E64               	movlw	100
 11511  004C9E  0100               	movlb	0	; () banked
 11512  004CA0  6F81               	movwf	BufferCopy@count& (0+255),b
 11513  004CA2  0E00               	movlw	0
 11514  004CA4  0100               	movlb	0	; () banked
 11515  004CA6  6F82               	movwf	BufferCopy@shift& (0+255),b
 11516  004CA8  ECF9  F035         	call	_BufferCopy	;wreg free
 11517                           
 11518                           ;MISC.c: 616: return 1;
 11519  004CAC  0E01               	movlw	1
 11520  004CAE  0012               	return	
 11521  004CB0  0012               	return		;funcret
 11522  004CB2                     __end_of_StringAddEqual:
 11523                           	opt stack 0
 11524                           tblptru	equ	0xFF8
 11525                           tblptrh	equ	0xFF7
 11526                           tblptrl	equ	0xFF6
 11527                           tablat	equ	0xFF5
 11528                           prodh	equ	0xFF4
 11529                           prodl	equ	0xFF3
 11530                           intcon	equ	0xFF2
 11531                           indf0	equ	0xFEF
 11532                           postinc0	equ	0xFEE
 11533                           fsr0h	equ	0xFEA
 11534                           fsr0l	equ	0xFE9
 11535                           wreg	equ	0xFE8
 11536                           indf1	equ	0xFE7
 11537                           postdec1	equ	0xFE5
 11538                           fsr1h	equ	0xFE2
 11539                           fsr1l	equ	0xFE1
 11540                           indf2	equ	0xFDF
 11541                           postinc2	equ	0xFDE
 11542                           fsr2h	equ	0xFDA
 11543                           fsr2l	equ	0xFD9
 11544                           status	equ	0xFD8
 11545                           
 11546 ;; *************** function _BufferCopy *****************
 11547 ;; Defined at:
 11548 ;;		line 165 in file "MISC.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;  from            2   29[BANK0 ] PTR unsigned char 
 11551 ;;		 -> StringAddEqual@temp(100), 
 11552 ;;  to              2   31[BANK0 ] PTR unsigned char 
 11553 ;;		 -> ReceivedString(255), 
 11554 ;;  count           1   33[BANK0 ] unsigned char 
 11555 ;;  shift           1   34[BANK0 ] unsigned char 
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;  i               1   35[BANK0 ] unsigned char 
 11558 ;; Return value:  Size  Location     Type
 11559 ;;		None               void
 11560 ;; Registers used:
 11561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11570 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11571 ;;Total ram usage:        7 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:    7
 11574 ;; This function calls:
 11575 ;;		_cleanBuffer
 11576 ;; This function is called by:
 11577 ;;		_StringAddEqual
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text17
 11582  006BF2                     __ptext17:
 11583                           	opt stack 0
 11584  006BF2                     _BufferCopy:
 11585                           	opt stack 21
 11586                           
 11587                           ;MISC.c: 167: unsigned char i=0;
 11588                           
 11589                           ;incstack = 0
 11590  006BF2  0E00               	movlw	0
 11591  006BF4  0100               	movlb	0	; () banked
 11592  006BF6  6F83               	movwf	BufferCopy@i& (0+255),b
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;MISC.c: 168: cleanBuffer(to,count);
 11596  006BF8  C07F  F075         	movff	BufferCopy@to,cleanBuffer@data
 11597  006BFC  C080  F076         	movff	BufferCopy@to+1,cleanBuffer@data+1
 11598  006C00  C081  F077         	movff	BufferCopy@count,cleanBuffer@count
 11599  006C04  0100               	movlb	0	; () banked
 11600  006C06  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 11601  006C08  EC83  F038         	call	_cleanBuffer	;wreg free
 11602                           
 11603                           ;MISC.c: 169: for(i = shift; i>0;i--)
 11604  006C0C  C082  F083         	movff	BufferCopy@shift,BufferCopy@i
 11605  006C10                     l10980:
 11606  006C10  0100               	movlb	0	; () banked
 11607  006C12  5183               	movf	BufferCopy@i& (0+255),w,b
 11608  006C14  0100               	movlb	0	; () banked
 11609  006C16  B4D8               	btfsc	status,2,c
 11610  006C18  D022               	goto	l11000
 11611  006C1A  D001               	goto	l10984
 11612                           
 11613                           ; BSR set to: 0
 11614  006C1C  D020               	goto	l11000
 11615  006C1E                     l10984:
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;MISC.c: 170: {
 11619                           ;MISC.c: 171: *to = ' ';
 11620  006C1E  C07F  FFD9         	movff	BufferCopy@to,fsr2l
 11621  006C22  C080  FFDA         	movff	BufferCopy@to+1,fsr2h
 11622  006C26  0E20               	movlw	32
 11623  006C28  6EDF               	movwf	indf2,c
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;MISC.c: 172: to++;
 11627  006C2A  0100               	movlb	0	; () banked
 11628  006C2C  4B7F               	infsnz	BufferCopy@to& (0+255),f,b
 11629  006C2E  2B80               	incf	(BufferCopy@to+1)& (0+255),f,b
 11630                           
 11631                           ; BSR set to: 0
 11632  006C30  0100               	movlb	0	; () banked
 11633  006C32  0783               	decf	BufferCopy@i& (0+255),f,b
 11634  006C34  D7ED               	goto	l10980
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;MISC.c: 173: }
 11638                           ;MISC.c: 174: while(*from != 0 && count >0)
 11639                           
 11640                           ; BSR set to: 0
 11641  006C36  D013               	goto	l11000
 11642  006C38                     l10992:
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;MISC.c: 175: {
 11646                           ;MISC.c: 176: *to = *from;
 11647  006C38  C07D  FFD9         	movff	BufferCopy@from,fsr2l
 11648  006C3C  C07E  FFDA         	movff	BufferCopy@from+1,fsr2h
 11649  006C40  C07F  FFE1         	movff	BufferCopy@to,fsr1l
 11650  006C44  C080  FFE2         	movff	BufferCopy@to+1,fsr1h
 11651  006C48  CFDF FFE7          	movff	indf2,indf1
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;MISC.c: 177: from++;
 11655  006C4C  0100               	movlb	0	; () banked
 11656  006C4E  4B7D               	infsnz	BufferCopy@from& (0+255),f,b
 11657  006C50  2B7E               	incf	(BufferCopy@from+1)& (0+255),f,b
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;MISC.c: 178: to++;
 11661  006C52  0100               	movlb	0	; () banked
 11662  006C54  4B7F               	infsnz	BufferCopy@to& (0+255),f,b
 11663  006C56  2B80               	incf	(BufferCopy@to+1)& (0+255),f,b
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;MISC.c: 179: count--;
 11667  006C58  0100               	movlb	0	; () banked
 11668  006C5A  0781               	decf	BufferCopy@count& (0+255),f,b
 11669  006C5C  D000               	goto	l11000
 11670  006C5E                     l11000:
 11671                           
 11672                           ; BSR set to: 0
 11673  006C5E  C07D  FFD9         	movff	BufferCopy@from,fsr2l
 11674  006C62  C07E  FFDA         	movff	BufferCopy@from+1,fsr2h
 11675  006C66  50DF               	movf	indf2,w,c
 11676  006C68  B4D8               	btfsc	status,2,c
 11677  006C6A  0012               	return	
 11678                           
 11679                           ; BSR set to: 0
 11680  006C6C  0100               	movlb	0	; () banked
 11681  006C6E  5181               	movf	BufferCopy@count& (0+255),w,b
 11682  006C70  0100               	movlb	0	; () banked
 11683  006C72  B4D8               	btfsc	status,2,c
 11684  006C74  0012               	return	
 11685  006C76  D7E0               	goto	l10992
 11686                           
 11687                           ; BSR set to: 0
 11688  006C78  0012               	return	
 11689                           
 11690                           ; BSR set to: 0
 11691                           
 11692                           ; BSR set to: 0
 11693  006C7A  0012               	return		;funcret
 11694  006C7C                     __end_of_BufferCopy:
 11695                           	opt stack 0
 11696                           tblptru	equ	0xFF8
 11697                           tblptrh	equ	0xFF7
 11698                           tblptrl	equ	0xFF6
 11699                           tablat	equ	0xFF5
 11700                           prodh	equ	0xFF4
 11701                           prodl	equ	0xFF3
 11702                           intcon	equ	0xFF2
 11703                           indf0	equ	0xFEF
 11704                           postinc0	equ	0xFEE
 11705                           fsr0h	equ	0xFEA
 11706                           fsr0l	equ	0xFE9
 11707                           wreg	equ	0xFE8
 11708                           indf1	equ	0xFE7
 11709                           postdec1	equ	0xFE5
 11710                           fsr1h	equ	0xFE2
 11711                           fsr1l	equ	0xFE1
 11712                           indf2	equ	0xFDF
 11713                           postinc2	equ	0xFDE
 11714                           fsr2h	equ	0xFDA
 11715                           fsr2l	equ	0xFD9
 11716                           status	equ	0xFD8
 11717                           
 11718 ;; *************** function _SendRF_wait *****************
 11719 ;; Defined at:
 11720 ;;		line 143 in file "RF.c"
 11721 ;; Parameters:    Size  Location     Type
 11722 ;;  Code            2   27[BANK0 ] PTR const unsigned char 
 11723 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 11724 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 11725 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 11726 ;;		 -> Conf1_ChannelD(12), 
 11727 ;;  Config          1   29[BANK0 ] unsigned char 
 11728 ;;  size            1   30[BANK0 ] unsigned char 
 11729 ;;  amount          1   31[BANK0 ] unsigned char 
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;		None
 11732 ;; Return value:  Size  Location     Type
 11733 ;;		None               void
 11734 ;; Registers used:
 11735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11741 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11744 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;Total ram usage:        5 bytes
 11746 ;; Hardware stack levels used:    1
 11747 ;; Hardware stack levels required when called:    7
 11748 ;; This function calls:
 11749 ;;		_ReadIRpin
 11750 ;;		_SendRF
 11751 ;; This function is called by:
 11752 ;;		_UseBluetooth
 11753 ;;		_SendRF_Channel
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           	psect	text18
 11758  00751E                     __ptext18:
 11759                           	opt stack 0
 11760  00751E                     _SendRF_wait:
 11761                           	opt stack 21
 11762                           
 11763                           ;RF.c: 145: (IOCBbits.IOCB4 = 0);
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;incstack = 0
 11767  00751E  987D               	bcf	3965,4,c	;volatile
 11768                           
 11769                           ;RF.c: 146: INTCONbits.RBIE = 0;
 11770  007520  96F2               	bcf	intcon,3,c	;volatile
 11771                           
 11772                           ;RF.c: 147: INTCONbits.PEIE = 0;
 11773  007522  9CF2               	bcf	intcon,6,c	;volatile
 11774                           
 11775                           ;RF.c: 149: SendRF(Code, Config, size, amount);
 11776  007524  C07B  F075         	movff	SendRF_wait@Code,SendRF@Code
 11777  007528  C07C  F076         	movff	SendRF_wait@Code+1,SendRF@Code+1
 11778  00752C  C07D  F077         	movff	SendRF_wait@Config,SendRF@Config
 11779  007530  C07E  F078         	movff	SendRF_wait@size,SendRF@size
 11780  007534  C07F  F079         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 11781  007538  ECB9  F030         	call	_SendRF	;wreg free
 11782                           
 11783                           ;RF.c: 150: while(!Sent);
 11784  00753C  D000               	goto	l7986
 11785  00753E                     l7986:
 11786  00753E  0100               	movlb	0	; () banked
 11787  007540  51D5               	movf	_Sent& (0+255),w,b	;volatile
 11788  007542  B4D8               	btfsc	status,2,c
 11789  007544  D7FC               	goto	l7986
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;RF.c: 151: INTCONbits.PEIE = 1;
 11793  007546  8CF2               	bsf	intcon,6,c	;volatile
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;RF.c: 152: IRpinOLD = ReadIRpin();
 11797  007548  EC0D  F03C         	call	_ReadIRpin	;wreg free
 11798  00754C  6E2F               	movwf	_IRpinOLD,c
 11799                           
 11800                           ;RF.c: 153: INTCONbits.RBIF = 0;
 11801  00754E  90F2               	bcf	intcon,0,c	;volatile
 11802                           
 11803                           ;RF.c: 154: (IOCBbits.IOCB4 = 1);
 11804  007550  887D               	bsf	3965,4,c	;volatile
 11805                           
 11806                           ;RF.c: 155: INTCONbits.RBIE = 1;
 11807  007552  86F2               	bsf	intcon,3,c	;volatile
 11808  007554  0012               	return		;funcret
 11809  007556                     __end_of_SendRF_wait:
 11810                           	opt stack 0
 11811                           tblptru	equ	0xFF8
 11812                           tblptrh	equ	0xFF7
 11813                           tblptrl	equ	0xFF6
 11814                           tablat	equ	0xFF5
 11815                           prodh	equ	0xFF4
 11816                           prodl	equ	0xFF3
 11817                           intcon	equ	0xFF2
 11818                           indf0	equ	0xFEF
 11819                           postinc0	equ	0xFEE
 11820                           fsr0h	equ	0xFEA
 11821                           fsr0l	equ	0xFE9
 11822                           wreg	equ	0xFE8
 11823                           indf1	equ	0xFE7
 11824                           postdec1	equ	0xFE5
 11825                           fsr1h	equ	0xFE2
 11826                           fsr1l	equ	0xFE1
 11827                           indf2	equ	0xFDF
 11828                           postinc2	equ	0xFDE
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833 ;; *************** function _SendRF *****************
 11834 ;; Defined at:
 11835 ;;		line 66 in file "RF.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;  Code            2   21[BANK0 ] PTR const unsigned char 
 11838 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 11839 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 11840 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 11841 ;;		 -> Conf1_ChannelD(12), 
 11842 ;;  Config          1   23[BANK0 ] unsigned char 
 11843 ;;  size            1   24[BANK0 ] unsigned char 
 11844 ;;  RepeatAmount    1   25[BANK0 ] unsigned char 
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;  i               1   26[BANK0 ] unsigned char 
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  1    wreg      unsigned char 
 11849 ;; Registers used:
 11850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11856 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;Total ram usage:        6 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; Hardware stack levels required when called:    6
 11863 ;; This function calls:
 11864 ;;		Nothing
 11865 ;; This function is called by:
 11866 ;;		_SendRF_wait
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text19
 11871  006172                     __ptext19:
 11872                           	opt stack 0
 11873  006172                     _SendRF:
 11874                           	opt stack 21
 11875                           
 11876                           ;RF.c: 68: unsigned char i;
 11877                           ;RF.c: 69: if(Sent == 1)
 11878                           
 11879                           ;incstack = 0
 11880  006172  0100               	movlb	0	; () banked
 11881  006174  05D5               	decf	_Sent& (0+255),w,b	;volatile
 11882  006176  A4D8               	btfss	status,2,c
 11883  006178  0012               	return	
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;RF.c: 70: {
 11887                           ;RF.c: 72: RF_IR = 55;
 11888  00617A  0E37               	movlw	55
 11889  00617C  6E41               	movwf	_RF_IR,c
 11890                           
 11891                           ;RF.c: 73: if((Config <= 0) || (Config > 2))
 11892  00617E  0100               	movlb	0	; () banked
 11893  006180  5177               	movf	SendRF@Config& (0+255),w,b
 11894  006182  0100               	movlb	0	; () banked
 11895  006184  B4D8               	btfsc	status,2,c
 11896  006186  0012               	return	
 11897                           
 11898                           ; BSR set to: 0
 11899  006188  0E02               	movlw	2
 11900  00618A  0100               	movlb	0	; () banked
 11901  00618C  6577               	cpfsgt	SendRF@Config& (0+255),b
 11902  00618E  D002               	goto	l1749
 11903  006190  0012               	return	
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;RF.c: 74: {
 11907                           ;RF.c: 75: return 0;
 11908                           ;	Return value of _SendRF is never used
 11909  006192  0012               	return	
 11910  006194                     l1749:
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;RF.c: 76: }
 11914                           ;RF.c: 77: RFConfig = Config;
 11915  006194  C077  F033         	movff	SendRF@Config,_RFConfig
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;RF.c: 78: if(Config == 1)
 11919  006198  0100               	movlb	0	; () banked
 11920  00619A  0577               	decf	SendRF@Config& (0+255),w,b
 11921  00619C  A4D8               	btfss	status,2,c
 11922  00619E  D002               	goto	l7432
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;RF.c: 79: {
 11926                           ;RF.c: 80: RF_IR_Postscaler = 2;
 11927  0061A0  0E02               	movlw	2
 11928  0061A2  D006               	goto	L8
 11929  0061A4                     l7432:
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;RF.c: 82: else if(Config == 2)
 11933  0061A4  0E02               	movlw	2
 11934  0061A6  0100               	movlb	0	; () banked
 11935  0061A8  1977               	xorwf	SendRF@Config& (0+255),w,b
 11936  0061AA  A4D8               	btfss	status,2,c
 11937  0061AC  0012               	return	
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;RF.c: 83: {
 11941                           ;RF.c: 84: RF_IR_Postscaler = 4;
 11942  0061AE  0E04               	movlw	4
 11943  0061B0                     L8:
 11944  0061B0  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 11945                           
 11946                           ;RF.c: 85: }
 11947  0061B2  D002               	goto	l7436
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;RF.c: 86: else
 11951                           ;RF.c: 87: {
 11952                           ;RF.c: 88: return 0;
 11953                           ;	Return value of _SendRF is never used
 11954  0061B4  0012               	return	
 11955                           
 11956                           ; BSR set to: 0
 11957  0061B6  D000               	goto	l7436
 11958  0061B8                     l7436:
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;RF.c: 89: }
 11962                           ;RF.c: 91: Sent = 0;
 11963  0061B8  0E00               	movlw	0
 11964  0061BA  0100               	movlb	0	; () banked
 11965  0061BC  6FD5               	movwf	_Sent& (0+255),b	;volatile
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;RF.c: 92: Sendcount = RepeatAmount;
 11969  0061BE  C079  F037         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 11970                           
 11971                           ;RF.c: 93: RFsendFlag = 1;
 11972  0061C2  0E01               	movlw	1
 11973  0061C4  6E36               	movwf	_RFsendFlag,c	;volatile
 11974                           
 11975                           ;RF.c: 94: RFcodeBit = 0;
 11976  0061C6  0E00               	movlw	0
 11977  0061C8  6E34               	movwf	_RFcodeBit,c
 11978                           
 11979                           ;RF.c: 95: RFcodePlace = 1;
 11980  0061CA  0E01               	movlw	1
 11981  0061CC  6E35               	movwf	_RFcodePlace,c
 11982                           
 11983                           ; BSR set to: 0
 11984                           ;RF.c: 98: if(size >= 20)
 11985  0061CE  0E13               	movlw	19
 11986  0061D0  0100               	movlb	0	; () banked
 11987  0061D2  6578               	cpfsgt	SendRF@size& (0+255),b
 11988  0061D4  D002               	goto	l7444
 11989  0061D6  0012               	return	
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;RF.c: 99: {
 11993                           ;RF.c: 100: return 0;
 11994                           ;	Return value of _SendRF is never used
 11995  0061D8  0012               	return	
 11996  0061DA                     l7444:
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;RF.c: 101: }
 12000                           ;RF.c: 102: for(i=0;i<size;i++)
 12001  0061DA  0E00               	movlw	0
 12002  0061DC  0100               	movlb	0	; () banked
 12003  0061DE  6F7A               	movwf	SendRF@i& (0+255),b
 12004  0061E0  D019               	goto	l7450
 12005  0061E2                     l7446:
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;RF.c: 103: {
 12009                           ;RF.c: 104: RFsendCode[i] = Code[i];
 12010  0061E2  0100               	movlb	0	; () banked
 12011  0061E4  517A               	movf	SendRF@i& (0+255),w,b
 12012  0061E6  0D01               	mullw	1
 12013  0061E8  50F3               	movf	prodl,w,c
 12014  0061EA  0100               	movlb	0	; () banked
 12015  0061EC  2575               	addwf	SendRF@Code& (0+255),w,b
 12016  0061EE  6ED9               	movwf	fsr2l,c
 12017  0061F0  50F4               	movf	prodh,w,c
 12018  0061F2  0100               	movlb	0	; () banked
 12019  0061F4  2176               	addwfc	(SendRF@Code+1)& (0+255),w,b
 12020  0061F6  6EDA               	movwf	fsr2h,c
 12021  0061F8  0100               	movlb	0	; () banked
 12022  0061FA  517A               	movf	SendRF@i& (0+255),w,b
 12023  0061FC  0D01               	mullw	1
 12024  0061FE  0EE1               	movlw	low _RFsendCode
 12025  006200  24F3               	addwf	prodl,w,c
 12026  006202  6EE1               	movwf	fsr1l,c
 12027  006204  0E04               	movlw	high _RFsendCode
 12028  006206  20F4               	addwfc	prodh,w,c
 12029  006208  6EE2               	movwf	fsr1h,c
 12030  00620A  CFDF FFE7          	movff	indf2,indf1
 12031                           
 12032                           ; BSR set to: 0
 12033  00620E  0100               	movlb	0	; () banked
 12034  006210  2B7A               	incf	SendRF@i& (0+255),f,b
 12035  006212  D000               	goto	l7450
 12036  006214                     l7450:
 12037                           
 12038                           ; BSR set to: 0
 12039  006214  0100               	movlb	0	; () banked
 12040  006216  5178               	movf	SendRF@size& (0+255),w,b
 12041  006218  0100               	movlb	0	; () banked
 12042  00621A  5D7A               	subwf	SendRF@i& (0+255),w,b
 12043  00621C  A0D8               	btfss	status,0,c
 12044  00621E  D7E1               	goto	l7446
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;RF.c: 105: }
 12048                           ;RF.c: 106: RFsendCode[i] = 99;
 12049                           
 12050                           ; BSR set to: 0
 12051  006220  0100               	movlb	0	; () banked
 12052  006222  517A               	movf	SendRF@i& (0+255),w,b
 12053  006224  0D01               	mullw	1
 12054  006226  0EE1               	movlw	low _RFsendCode
 12055  006228  24F3               	addwf	prodl,w,c
 12056  00622A  6ED9               	movwf	fsr2l,c
 12057  00622C  0E04               	movlw	high _RFsendCode
 12058  00622E  20F4               	addwfc	prodh,w,c
 12059  006230  6EDA               	movwf	fsr2h,c
 12060  006232  0E63               	movlw	99
 12061  006234  6EDF               	movwf	indf2,c
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;RF.c: 108: (TMR2 = 0);
 12065  006236  0E00               	movlw	0
 12066  006238  6ECC               	movwf	4044,c	;volatile
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;RF.c: 109: if(Config == 1)
 12070  00623A  0100               	movlb	0	; () banked
 12071  00623C  0577               	decf	SendRF@Config& (0+255),w,b
 12072  00623E  A4D8               	btfss	status,2,c
 12073  006240  D002               	goto	l7460
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;RF.c: 110: {
 12077                           ;RF.c: 111: (PR2 = 250);
 12078  006242  0EFA               	movlw	250
 12079  006244  D001               	goto	L9
 12080  006246                     l7460:
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;RF.c: 113: else
 12084                           ;RF.c: 114: {
 12085                           ;RF.c: 115: (PR2 = 187);
 12086  006246  0EBB               	movlw	187
 12087  006248                     L9:
 12088  006248  6ECB               	movwf	4043,c	;volatile
 12089  00624A  D000               	goto	l7462
 12090  00624C                     l7462:
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;RF.c: 116: }
 12094                           ;RF.c: 117: (T2CONbits.TMR2ON = 1);
 12095  00624C  84CA               	bsf	4042,2,c	;volatile
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;RF.c: 118: return 1;
 12099                           ;	Return value of _SendRF is never used
 12100  00624E  0012               	return	
 12101                           
 12102                           ; BSR set to: 0
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;RF.c: 119: }
 12106                           ;RF.c: 120: return 2;
 12107                           ;	Return value of _SendRF is never used
 12108  006250  0012               	return		;funcret
 12109  006252                     __end_of_SendRF:
 12110                           	opt stack 0
 12111                           tblptru	equ	0xFF8
 12112                           tblptrh	equ	0xFF7
 12113                           tblptrl	equ	0xFF6
 12114                           tablat	equ	0xFF5
 12115                           prodh	equ	0xFF4
 12116                           prodl	equ	0xFF3
 12117                           intcon	equ	0xFF2
 12118                           indf0	equ	0xFEF
 12119                           postinc0	equ	0xFEE
 12120                           fsr0h	equ	0xFEA
 12121                           fsr0l	equ	0xFE9
 12122                           wreg	equ	0xFE8
 12123                           indf1	equ	0xFE7
 12124                           postdec1	equ	0xFE5
 12125                           fsr1h	equ	0xFE2
 12126                           fsr1l	equ	0xFE1
 12127                           indf2	equ	0xFDF
 12128                           postinc2	equ	0xFDE
 12129                           fsr2h	equ	0xFDA
 12130                           fsr2l	equ	0xFD9
 12131                           status	equ	0xFD8
 12132                           
 12133 ;; *************** function _SendNEC_wait *****************
 12134 ;; Defined at:
 12135 ;;		line 424 in file "IR.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  code            4   42[BANK0 ] unsigned long 
 12138 ;;  RepeatAmount    1   46[BANK0 ] unsigned char 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;  toggle          1   47[BANK0 ] unsigned char 
 12141 ;; Return value:  Size  Location     Type
 12142 ;;		None               void
 12143 ;; Registers used:
 12144 ;;		wreg, status,2, status,0, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12150 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;Total ram usage:        6 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    8
 12157 ;; This function calls:
 12158 ;;		_CheckReceivingIR
 12159 ;;		_ReadIRpin
 12160 ;;		_SendNEC_bytes
 12161 ;;		_delayUS
 12162 ;; This function is called by:
 12163 ;;		_UseBluetooth
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167                           	psect	text20
 12168  006A3E                     __ptext20:
 12169                           	opt stack 0
 12170  006A3E                     _SendNEC_wait:
 12171                           	opt stack 21
 12172                           
 12173                           ;IR.c: 426: unsigned char toggle = 0;
 12174                           
 12175                           ; BSR set to: 0
 12176                           ;incstack = 0
 12177  006A3E  0E00               	movlw	0
 12178  006A40  0100               	movlb	0	; () banked
 12179  006A42  6F8F               	movwf	SendNEC_wait@toggle& (0+255),b
 12180                           
 12181                           ; BSR set to: 0
 12182                           
 12183                           ;IR.c: 427: while(CheckReceivingIR());
 12184  006A44  D000               	goto	l11334
 12185  006A46                     l11334:
 12186  006A46  ECE0  F03B         	call	_CheckReceivingIR	;wreg free
 12187  006A4A  0900               	iorlw	0
 12188  006A4C  A4D8               	btfss	status,2,c
 12189  006A4E  D7FB               	goto	l11334
 12190                           
 12191                           ;IR.c: 429: (IOCBbits.IOCB4 = 0);
 12192  006A50  987D               	bcf	3965,4,c	;volatile
 12193                           
 12194                           ;IR.c: 430: INTCONbits.RBIE = 0;
 12195  006A52  96F2               	bcf	intcon,3,c	;volatile
 12196                           
 12197                           ;IR.c: 431: INTCONbits.PEIE = 0;
 12198  006A54  9CF2               	bcf	intcon,6,c	;volatile
 12199                           
 12200                           ;IR.c: 433: SendNEC_bytes(code, RepeatAmount);
 12201  006A56  C08A  F085         	movff	SendNEC_wait@code,SendNEC_bytes@code
 12202  006A5A  C08B  F086         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 12203  006A5E  C08C  F087         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 12204  006A62  C08D  F088         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 12205  006A66  C08E  F089         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 12206  006A6A  EC3E  F036         	call	_SendNEC_bytes	;wreg free
 12207                           
 12208                           ;IR.c: 434: while(!Sent)
 12209  006A6E  D01C               	goto	l11356
 12210  006A70                     l11338:
 12211                           
 12212                           ;IR.c: 435: {
 12213                           ;IR.c: 436: if(IRmod)
 12214  006A70  0100               	movlb	0	; () banked
 12215  006A72  51CA               	movf	_IRmod& (0+255),w,b	;volatile
 12216  006A74  B4D8               	btfsc	status,2,c
 12217  006A76  D013               	goto	l11352
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;IR.c: 437: {
 12221                           ;IR.c: 439: if(toggle < 9)
 12222  006A78  0E09               	movlw	9
 12223  006A7A  0100               	movlb	0	; () banked
 12224  006A7C  618F               	cpfslt	SendNEC_wait@toggle& (0+255),b
 12225  006A7E  D002               	goto	l11344
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;IR.c: 440: {
 12229                           ;IR.c: 441: (LATC |= 0x08);
 12230  006A80  868B               	bsf	3979,3,c	;volatile
 12231                           
 12232                           ;IR.c: 442: }
 12233  006A82  D00A               	goto	l11350
 12234  006A84                     l11344:
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;IR.c: 443: else if(toggle < 17)
 12238  006A84  0E11               	movlw	17
 12239  006A86  0100               	movlb	0	; () banked
 12240  006A88  618F               	cpfslt	SendNEC_wait@toggle& (0+255),b
 12241  006A8A  D002               	goto	l11348
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;IR.c: 444: {
 12245                           ;IR.c: 445: (LATC &= ~0x08);
 12246  006A8C  968B               	bcf	3979,3,c	;volatile
 12247                           
 12248                           ;IR.c: 446: }
 12249  006A8E  D004               	goto	l11350
 12250  006A90                     l11348:
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;IR.c: 447: else
 12254                           ;IR.c: 448: {
 12255                           ;IR.c: 449: toggle = 0;
 12256  006A90  0E00               	movlw	0
 12257  006A92  0100               	movlb	0	; () banked
 12258  006A94  6F8F               	movwf	SendNEC_wait@toggle& (0+255),b
 12259                           
 12260                           ; BSR set to: 0
 12261  006A96  D000               	goto	l11350
 12262  006A98                     l11350:
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;IR.c: 450: }
 12266                           ;IR.c: 451: toggle++;
 12267  006A98  0100               	movlb	0	; () banked
 12268  006A9A  2B8F               	incf	SendNEC_wait@toggle& (0+255),f,b
 12269                           
 12270                           ;IR.c: 452: }
 12271  006A9C  D005               	goto	l11356
 12272  006A9E                     l11352:
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;IR.c: 453: else
 12276                           ;IR.c: 454: {
 12277                           ;IR.c: 455: (LATC &= ~0x08);
 12278  006A9E  968B               	bcf	3979,3,c	;volatile
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;IR.c: 456: toggle = 0;
 12282  006AA0  0E00               	movlw	0
 12283  006AA2  0100               	movlb	0	; () banked
 12284  006AA4  6F8F               	movwf	SendNEC_wait@toggle& (0+255),b
 12285                           
 12286                           ; BSR set to: 0
 12287  006AA6  D000               	goto	l11356
 12288  006AA8                     l11356:
 12289  006AA8  0100               	movlb	0	; () banked
 12290  006AAA  51D5               	movf	_Sent& (0+255),w,b	;volatile
 12291  006AAC  B4D8               	btfsc	status,2,c
 12292  006AAE  D7E0               	goto	l11338
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;IR.c: 457: }
 12296                           ;IR.c: 458: }
 12297                           ;IR.c: 460: if(IRbitPosition)
 12298                           
 12299                           ; BSR set to: 0
 12300  006AB0  503F               	movf	_IRbitPosition,w,c	;volatile
 12301  006AB2  A4D8               	btfss	status,2,c
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;IR.c: 461: {
 12305                           ;IR.c: 463: __nop();
 12306  006AB4  F000               	nop	
 12307                           
 12308                           ;IR.c: 464: }
 12309                           ;IR.c: 466: INTCONbits.PEIE = 1;
 12310  006AB6  8CF2               	bsf	intcon,6,c	;volatile
 12311                           
 12312                           ;IR.c: 467: delayUS(8000);
 12313  006AB8  0E40               	movlw	64
 12314  006ABA  0100               	movlb	0	; () banked
 12315  006ABC  6F75               	movwf	delayUS@US& (0+255),b
 12316  006ABE  0E1F               	movlw	31
 12317  006AC0  6F76               	movwf	(delayUS@US+1)& (0+255),b
 12318  006AC2  0E00               	movlw	0
 12319  006AC4  6F77               	movwf	(delayUS@US+2)& (0+255),b
 12320  006AC6  0E00               	movlw	0
 12321  006AC8  6F78               	movwf	(delayUS@US+3)& (0+255),b
 12322  006ACA  EC34  F039         	call	_delayUS	;wreg free
 12323                           
 12324                           ;IR.c: 468: IRpinOLD = ReadIRpin();
 12325  006ACE  EC0D  F03C         	call	_ReadIRpin	;wreg free
 12326  006AD2  6E2F               	movwf	_IRpinOLD,c
 12327                           
 12328                           ;IR.c: 469: INTCONbits.RBIF = 0;
 12329  006AD4  90F2               	bcf	intcon,0,c	;volatile
 12330                           
 12331                           ;IR.c: 470: (IOCBbits.IOCB4 = 1);
 12332  006AD6  887D               	bsf	3965,4,c	;volatile
 12333                           
 12334                           ;IR.c: 471: INTCONbits.RBIE = 1;
 12335  006AD8  86F2               	bsf	intcon,3,c	;volatile
 12336  006ADA  0012               	return		;funcret
 12337  006ADC                     __end_of_SendNEC_wait:
 12338                           	opt stack 0
 12339                           tblptru	equ	0xFF8
 12340                           tblptrh	equ	0xFF7
 12341                           tblptrl	equ	0xFF6
 12342                           tablat	equ	0xFF5
 12343                           prodh	equ	0xFF4
 12344                           prodl	equ	0xFF3
 12345                           intcon	equ	0xFF2
 12346                           indf0	equ	0xFEF
 12347                           postinc0	equ	0xFEE
 12348                           fsr0h	equ	0xFEA
 12349                           fsr0l	equ	0xFE9
 12350                           wreg	equ	0xFE8
 12351                           indf1	equ	0xFE7
 12352                           postdec1	equ	0xFE5
 12353                           fsr1h	equ	0xFE2
 12354                           fsr1l	equ	0xFE1
 12355                           indf2	equ	0xFDF
 12356                           postinc2	equ	0xFDE
 12357                           fsr2h	equ	0xFDA
 12358                           fsr2l	equ	0xFD9
 12359                           status	equ	0xFD8
 12360                           
 12361 ;; *************** function _SendNEC_bytes *****************
 12362 ;; Defined at:
 12363 ;;		line 361 in file "IR.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  code            4   37[BANK0 ] unsigned long 
 12366 ;;  RepeatAmount    1   41[BANK0 ] unsigned char 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      unsigned char 
 12371 ;; Registers used:
 12372 ;;		wreg, status,2, status,0, cstack
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12378 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;Total ram usage:        5 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:    7
 12385 ;; This function calls:
 12386 ;;		_Reverse_4Byte
 12387 ;; This function is called by:
 12388 ;;		_SendNEC_wait
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text21
 12393  006C7C                     __ptext21:
 12394                           	opt stack 0
 12395  006C7C                     _SendNEC_bytes:
 12396                           	opt stack 21
 12397                           
 12398                           ;IR.c: 390: if(Sent == 1)
 12399                           
 12400                           ;incstack = 0
 12401  006C7C  0100               	movlb	0	; () banked
 12402  006C7E  05D5               	decf	_Sent& (0+255),w,b	;volatile
 12403  006C80  A4D8               	btfss	status,2,c
 12404  006C82  0012               	return	
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;IR.c: 391: {
 12408                           ;IR.c: 393: if(!code)
 12409  006C84  0100               	movlb	0	; () banked
 12410  006C86  5185               	movf	SendNEC_bytes@code& (0+255),w,b
 12411  006C88  0100               	movlb	0	; () banked
 12412  006C8A  1186               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 12413  006C8C  0100               	movlb	0	; () banked
 12414  006C8E  1187               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 12415  006C90  0100               	movlb	0	; () banked
 12416  006C92  1188               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 12417  006C94  B4D8               	btfsc	status,2,c
 12418  006C96  0012               	return	
 12419  006C98  D001               	goto	l7824
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;IR.c: 394: {
 12423                           ;IR.c: 395: return 0;
 12424                           ;	Return value of _SendNEC_bytes is never used
 12425  006C9A  0012               	return	
 12426  006C9C                     l7824:
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;IR.c: 396: }
 12430                           ;IR.c: 397: RF_IR = 66;
 12431  006C9C  0E42               	movlw	66
 12432  006C9E  6E41               	movwf	_RF_IR,c
 12433                           
 12434                           ;IR.c: 398: Sent = 0;
 12435  006CA0  0E00               	movlw	0
 12436  006CA2  0100               	movlb	0	; () banked
 12437  006CA4  6FD5               	movwf	_Sent& (0+255),b	;volatile
 12438                           
 12439                           ;IR.c: 399: IRsendFlag = 1;
 12440  006CA6  0E01               	movlw	1
 12441  006CA8  0100               	movlb	0	; () banked
 12442  006CAA  6FCB               	movwf	_IRsendFlag& (0+255),b
 12443                           
 12444                           ;IR.c: 400: IRcodeBit = 0;
 12445  006CAC  0E00               	movlw	0
 12446  006CAE  0100               	movlb	0	; () banked
 12447  006CB0  6FC9               	movwf	_IRcodeBit& (0+255),b
 12448                           
 12449                           ;IR.c: 401: IRcodePlace = 7;
 12450  006CB2  0E07               	movlw	7
 12451  006CB4  6E40               	movwf	_IRcodePlace,c
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;IR.c: 402: IRsendCode = Reverse_4Byte(code);
 12455  006CB6  C085  F075         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 12456  006CBA  C086  F076         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 12457  006CBE  C087  F077         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 12458  006CC2  C088  F078         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 12459  006CC6  ECFE  F00B         	call	_Reverse_4Byte	;wreg free
 12460  006CCA  C075  F029         	movff	?_Reverse_4Byte,_IRsendCode
 12461  006CCE  C076  F02A         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 12462  006CD2  C077  F02B         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 12463  006CD6  C078  F02C         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 12464                           
 12465                           ;IR.c: 403: if(RepeatAmount)
 12466  006CDA  0100               	movlb	0	; () banked
 12467  006CDC  5189               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 12468  006CDE  0100               	movlb	0	; () banked
 12469  006CE0  B4D8               	btfsc	status,2,c
 12470  006CE2  D003               	goto	l7832
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;IR.c: 404: {
 12474                           ;IR.c: 405: IRrepeatflag = 1;
 12475  006CE4  0E01               	movlw	1
 12476  006CE6  6E32               	movwf	_IRrepeatflag,c
 12477  006CE8  D000               	goto	l7832
 12478  006CEA                     l7832:
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;IR.c: 406: }
 12482                           ;IR.c: 407: IRrepeatAmount = RepeatAmount;
 12483  006CEA  C089  F031         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 12484                           
 12485                           ;IR.c: 408: (TMR2 = 0);
 12486  006CEE  0E00               	movlw	0
 12487  006CF0  6ECC               	movwf	4044,c	;volatile
 12488                           
 12489                           ;IR.c: 409: (PR2 = 150);
 12490  006CF2  0E96               	movlw	150
 12491  006CF4  6ECB               	movwf	4043,c	;volatile
 12492                           
 12493                           ;IR.c: 410: RF_IR_Postscaler = 4;
 12494  006CF6  0E04               	movlw	4
 12495  006CF8  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 12496                           
 12497                           ;IR.c: 411: (IRmod = 1);
 12498  006CFA  0E01               	movlw	1
 12499  006CFC  0100               	movlb	0	; () banked
 12500  006CFE  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;IR.c: 412: (T2CONbits.TMR2ON = 1);
 12504  006D00  84CA               	bsf	4042,2,c	;volatile
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;IR.c: 413: return 1;
 12508                           ;	Return value of _SendNEC_bytes is never used
 12509  006D02  0012               	return	
 12510                           
 12511                           ; BSR set to: 0
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;IR.c: 414: }
 12515                           ;IR.c: 415: return 2;
 12516                           ;	Return value of _SendNEC_bytes is never used
 12517  006D04  0012               	return		;funcret
 12518  006D06                     __end_of_SendNEC_bytes:
 12519                           	opt stack 0
 12520                           tblptru	equ	0xFF8
 12521                           tblptrh	equ	0xFF7
 12522                           tblptrl	equ	0xFF6
 12523                           tablat	equ	0xFF5
 12524                           prodh	equ	0xFF4
 12525                           prodl	equ	0xFF3
 12526                           intcon	equ	0xFF2
 12527                           indf0	equ	0xFEF
 12528                           postinc0	equ	0xFEE
 12529                           fsr0h	equ	0xFEA
 12530                           fsr0l	equ	0xFE9
 12531                           wreg	equ	0xFE8
 12532                           indf1	equ	0xFE7
 12533                           postdec1	equ	0xFE5
 12534                           fsr1h	equ	0xFE2
 12535                           fsr1l	equ	0xFE1
 12536                           indf2	equ	0xFDF
 12537                           postinc2	equ	0xFDE
 12538                           fsr2h	equ	0xFDA
 12539                           fsr2l	equ	0xFD9
 12540                           status	equ	0xFD8
 12541                           
 12542 ;; *************** function _Reverse_4Byte *****************
 12543 ;; Defined at:
 12544 ;;		line 410 in file "MISC.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;  This            4   21[BANK0 ] unsigned long 
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;  temp            4   33[BANK0 ] unsigned long 
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  4   21[BANK0 ] unsigned long 
 12551 ;; Registers used:
 12552 ;;		wreg, status,2, status,0
 12553 ;; Tracked objects:
 12554 ;;		On entry : 0/0
 12555 ;;		On exit  : 0/0
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12559 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12560 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12561 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;Total ram usage:       16 bytes
 12563 ;; Hardware stack levels used:    1
 12564 ;; Hardware stack levels required when called:    6
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_SendNEC_bytes
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text22
 12573  0017FC                     __ptext22:
 12574                           	opt stack 0
 12575  0017FC                     _Reverse_4Byte:
 12576                           	opt stack 21
 12577                           
 12578                           ;MISC.c: 412: unsigned long temp=0;
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;incstack = 0
 12582  0017FC  0E00               	movlw	0
 12583  0017FE  0100               	movlb	0	; () banked
 12584  001800  6F81               	movwf	Reverse_4Byte@temp& (0+255),b
 12585  001802  0E00               	movlw	0
 12586  001804  6F82               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 12587  001806  0E00               	movlw	0
 12588  001808  6F83               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 12589  00180A  0E00               	movlw	0
 12590  00180C  6F84               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;MISC.c: 414: temp += (This & 0x00000001) << 31;
 12594  00180E  0E01               	movlw	1
 12595  001810  0100               	movlb	0	; () banked
 12596  001812  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12597  001814  0100               	movlb	0	; () banked
 12598  001816  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12599  001818  0E00               	movlw	0
 12600  00181A  0100               	movlb	0	; () banked
 12601  00181C  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12602  00181E  0100               	movlb	0	; () banked
 12603  001820  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12604  001822  0E00               	movlw	0
 12605  001824  0100               	movlb	0	; () banked
 12606  001826  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12607  001828  0100               	movlb	0	; () banked
 12608  00182A  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12609  00182C  0E00               	movlw	0
 12610  00182E  0100               	movlb	0	; () banked
 12611  001830  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12612  001832  0100               	movlb	0	; () banked
 12613  001834  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12614  001836  0E1F               	movlw	31
 12615  001838                     u6835:
 12616  001838  90D8               	bcf	status,0,c
 12617  00183A  0100               	movlb	0	; () banked
 12618  00183C  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12619  00183E  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12620  001840  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12621  001842  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12622  001844  2EE8               	decfsz	wreg,f,c
 12623  001846  D7F8               	goto	u6835
 12624  001848  0100               	movlb	0	; () banked
 12625  00184A  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12626  00184C  0100               	movlb	0	; () banked
 12627  00184E  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12628  001850  0100               	movlb	0	; () banked
 12629  001852  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12630  001854  0100               	movlb	0	; () banked
 12631  001856  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12632  001858  0100               	movlb	0	; () banked
 12633  00185A  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12634  00185C  0100               	movlb	0	; () banked
 12635  00185E  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12636  001860  0100               	movlb	0	; () banked
 12637  001862  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12638  001864  0100               	movlb	0	; () banked
 12639  001866  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;MISC.c: 415: temp += (This & 0x00000002) << 29;
 12643  001868  0E02               	movlw	2
 12644  00186A  0100               	movlb	0	; () banked
 12645  00186C  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12646  00186E  0100               	movlb	0	; () banked
 12647  001870  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12648  001872  0E00               	movlw	0
 12649  001874  0100               	movlb	0	; () banked
 12650  001876  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12651  001878  0100               	movlb	0	; () banked
 12652  00187A  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12653  00187C  0E00               	movlw	0
 12654  00187E  0100               	movlb	0	; () banked
 12655  001880  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12656  001882  0100               	movlb	0	; () banked
 12657  001884  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12658  001886  0E00               	movlw	0
 12659  001888  0100               	movlb	0	; () banked
 12660  00188A  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12661  00188C  0100               	movlb	0	; () banked
 12662  00188E  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12663  001890  0E1D               	movlw	29
 12664  001892                     u6845:
 12665  001892  90D8               	bcf	status,0,c
 12666  001894  0100               	movlb	0	; () banked
 12667  001896  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12668  001898  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12669  00189A  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12670  00189C  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12671  00189E  2EE8               	decfsz	wreg,f,c
 12672  0018A0  D7F8               	goto	u6845
 12673  0018A2  0100               	movlb	0	; () banked
 12674  0018A4  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12675  0018A6  0100               	movlb	0	; () banked
 12676  0018A8  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12677  0018AA  0100               	movlb	0	; () banked
 12678  0018AC  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12679  0018AE  0100               	movlb	0	; () banked
 12680  0018B0  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12681  0018B2  0100               	movlb	0	; () banked
 12682  0018B4  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12683  0018B6  0100               	movlb	0	; () banked
 12684  0018B8  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12685  0018BA  0100               	movlb	0	; () banked
 12686  0018BC  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12687  0018BE  0100               	movlb	0	; () banked
 12688  0018C0  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;MISC.c: 416: temp += (This & 0x00000004) << 27;
 12692  0018C2  0E04               	movlw	4
 12693  0018C4  0100               	movlb	0	; () banked
 12694  0018C6  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12695  0018C8  0100               	movlb	0	; () banked
 12696  0018CA  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12697  0018CC  0E00               	movlw	0
 12698  0018CE  0100               	movlb	0	; () banked
 12699  0018D0  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12700  0018D2  0100               	movlb	0	; () banked
 12701  0018D4  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12702  0018D6  0E00               	movlw	0
 12703  0018D8  0100               	movlb	0	; () banked
 12704  0018DA  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12705  0018DC  0100               	movlb	0	; () banked
 12706  0018DE  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12707  0018E0  0E00               	movlw	0
 12708  0018E2  0100               	movlb	0	; () banked
 12709  0018E4  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12710  0018E6  0100               	movlb	0	; () banked
 12711  0018E8  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12712  0018EA  0E1B               	movlw	27
 12713  0018EC                     u6855:
 12714  0018EC  90D8               	bcf	status,0,c
 12715  0018EE  0100               	movlb	0	; () banked
 12716  0018F0  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12717  0018F2  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12718  0018F4  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12719  0018F6  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12720  0018F8  2EE8               	decfsz	wreg,f,c
 12721  0018FA  D7F8               	goto	u6855
 12722  0018FC  0100               	movlb	0	; () banked
 12723  0018FE  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12724  001900  0100               	movlb	0	; () banked
 12725  001902  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12726  001904  0100               	movlb	0	; () banked
 12727  001906  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12728  001908  0100               	movlb	0	; () banked
 12729  00190A  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12730  00190C  0100               	movlb	0	; () banked
 12731  00190E  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12732  001910  0100               	movlb	0	; () banked
 12733  001912  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12734  001914  0100               	movlb	0	; () banked
 12735  001916  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12736  001918  0100               	movlb	0	; () banked
 12737  00191A  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;MISC.c: 417: temp += (This & 0x00000008) << 25;
 12741  00191C  0E08               	movlw	8
 12742  00191E  0100               	movlb	0	; () banked
 12743  001920  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12744  001922  0100               	movlb	0	; () banked
 12745  001924  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12746  001926  0E00               	movlw	0
 12747  001928  0100               	movlb	0	; () banked
 12748  00192A  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12749  00192C  0100               	movlb	0	; () banked
 12750  00192E  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12751  001930  0E00               	movlw	0
 12752  001932  0100               	movlb	0	; () banked
 12753  001934  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12754  001936  0100               	movlb	0	; () banked
 12755  001938  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12756  00193A  0E00               	movlw	0
 12757  00193C  0100               	movlb	0	; () banked
 12758  00193E  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12759  001940  0100               	movlb	0	; () banked
 12760  001942  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12761  001944  0E19               	movlw	25
 12762  001946                     u6865:
 12763  001946  90D8               	bcf	status,0,c
 12764  001948  0100               	movlb	0	; () banked
 12765  00194A  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12766  00194C  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12767  00194E  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12768  001950  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12769  001952  2EE8               	decfsz	wreg,f,c
 12770  001954  D7F8               	goto	u6865
 12771  001956  0100               	movlb	0	; () banked
 12772  001958  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12773  00195A  0100               	movlb	0	; () banked
 12774  00195C  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12775  00195E  0100               	movlb	0	; () banked
 12776  001960  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12777  001962  0100               	movlb	0	; () banked
 12778  001964  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12779  001966  0100               	movlb	0	; () banked
 12780  001968  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12781  00196A  0100               	movlb	0	; () banked
 12782  00196C  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12783  00196E  0100               	movlb	0	; () banked
 12784  001970  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12785  001972  0100               	movlb	0	; () banked
 12786  001974  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;MISC.c: 418: temp += (This & 0x00000010) << 23;
 12790  001976  0E10               	movlw	16
 12791  001978  0100               	movlb	0	; () banked
 12792  00197A  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12793  00197C  0100               	movlb	0	; () banked
 12794  00197E  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12795  001980  0E00               	movlw	0
 12796  001982  0100               	movlb	0	; () banked
 12797  001984  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12798  001986  0100               	movlb	0	; () banked
 12799  001988  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12800  00198A  0E00               	movlw	0
 12801  00198C  0100               	movlb	0	; () banked
 12802  00198E  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12803  001990  0100               	movlb	0	; () banked
 12804  001992  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12805  001994  0E00               	movlw	0
 12806  001996  0100               	movlb	0	; () banked
 12807  001998  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12808  00199A  0100               	movlb	0	; () banked
 12809  00199C  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12810  00199E  0E17               	movlw	23
 12811  0019A0                     u6875:
 12812  0019A0  90D8               	bcf	status,0,c
 12813  0019A2  0100               	movlb	0	; () banked
 12814  0019A4  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12815  0019A6  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12816  0019A8  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12817  0019AA  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12818  0019AC  2EE8               	decfsz	wreg,f,c
 12819  0019AE  D7F8               	goto	u6875
 12820  0019B0  0100               	movlb	0	; () banked
 12821  0019B2  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12822  0019B4  0100               	movlb	0	; () banked
 12823  0019B6  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12824  0019B8  0100               	movlb	0	; () banked
 12825  0019BA  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12826  0019BC  0100               	movlb	0	; () banked
 12827  0019BE  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12828  0019C0  0100               	movlb	0	; () banked
 12829  0019C2  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12830  0019C4  0100               	movlb	0	; () banked
 12831  0019C6  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12832  0019C8  0100               	movlb	0	; () banked
 12833  0019CA  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12834  0019CC  0100               	movlb	0	; () banked
 12835  0019CE  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;MISC.c: 419: temp += (This & 0x00000020) << 21;
 12839  0019D0  0E20               	movlw	32
 12840  0019D2  0100               	movlb	0	; () banked
 12841  0019D4  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12842  0019D6  0100               	movlb	0	; () banked
 12843  0019D8  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12844  0019DA  0E00               	movlw	0
 12845  0019DC  0100               	movlb	0	; () banked
 12846  0019DE  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12847  0019E0  0100               	movlb	0	; () banked
 12848  0019E2  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12849  0019E4  0E00               	movlw	0
 12850  0019E6  0100               	movlb	0	; () banked
 12851  0019E8  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12852  0019EA  0100               	movlb	0	; () banked
 12853  0019EC  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12854  0019EE  0E00               	movlw	0
 12855  0019F0  0100               	movlb	0	; () banked
 12856  0019F2  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12857  0019F4  0100               	movlb	0	; () banked
 12858  0019F6  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12859  0019F8  0E15               	movlw	21
 12860  0019FA                     u6885:
 12861  0019FA  90D8               	bcf	status,0,c
 12862  0019FC  0100               	movlb	0	; () banked
 12863  0019FE  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12864  001A00  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12865  001A02  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12866  001A04  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12867  001A06  2EE8               	decfsz	wreg,f,c
 12868  001A08  D7F8               	goto	u6885
 12869  001A0A  0100               	movlb	0	; () banked
 12870  001A0C  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12871  001A0E  0100               	movlb	0	; () banked
 12872  001A10  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12873  001A12  0100               	movlb	0	; () banked
 12874  001A14  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12875  001A16  0100               	movlb	0	; () banked
 12876  001A18  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12877  001A1A  0100               	movlb	0	; () banked
 12878  001A1C  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12879  001A1E  0100               	movlb	0	; () banked
 12880  001A20  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12881  001A22  0100               	movlb	0	; () banked
 12882  001A24  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12883  001A26  0100               	movlb	0	; () banked
 12884  001A28  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;MISC.c: 420: temp += (This & 0x00000040) << 19;
 12888  001A2A  0E40               	movlw	64
 12889  001A2C  0100               	movlb	0	; () banked
 12890  001A2E  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12891  001A30  0100               	movlb	0	; () banked
 12892  001A32  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12893  001A34  0E00               	movlw	0
 12894  001A36  0100               	movlb	0	; () banked
 12895  001A38  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12896  001A3A  0100               	movlb	0	; () banked
 12897  001A3C  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12898  001A3E  0E00               	movlw	0
 12899  001A40  0100               	movlb	0	; () banked
 12900  001A42  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12901  001A44  0100               	movlb	0	; () banked
 12902  001A46  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12903  001A48  0E00               	movlw	0
 12904  001A4A  0100               	movlb	0	; () banked
 12905  001A4C  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12906  001A4E  0100               	movlb	0	; () banked
 12907  001A50  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12908  001A52  0E13               	movlw	19
 12909  001A54                     u6895:
 12910  001A54  90D8               	bcf	status,0,c
 12911  001A56  0100               	movlb	0	; () banked
 12912  001A58  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12913  001A5A  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12914  001A5C  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12915  001A5E  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12916  001A60  2EE8               	decfsz	wreg,f,c
 12917  001A62  D7F8               	goto	u6895
 12918  001A64  0100               	movlb	0	; () banked
 12919  001A66  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12920  001A68  0100               	movlb	0	; () banked
 12921  001A6A  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12922  001A6C  0100               	movlb	0	; () banked
 12923  001A6E  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12924  001A70  0100               	movlb	0	; () banked
 12925  001A72  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12926  001A74  0100               	movlb	0	; () banked
 12927  001A76  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12928  001A78  0100               	movlb	0	; () banked
 12929  001A7A  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12930  001A7C  0100               	movlb	0	; () banked
 12931  001A7E  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12932  001A80  0100               	movlb	0	; () banked
 12933  001A82  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;MISC.c: 421: temp += (This & 0x00000080) << 17;
 12937  001A84  0E80               	movlw	128
 12938  001A86  0100               	movlb	0	; () banked
 12939  001A88  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12940  001A8A  0100               	movlb	0	; () banked
 12941  001A8C  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12942  001A8E  0E00               	movlw	0
 12943  001A90  0100               	movlb	0	; () banked
 12944  001A92  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12945  001A94  0100               	movlb	0	; () banked
 12946  001A96  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12947  001A98  0E00               	movlw	0
 12948  001A9A  0100               	movlb	0	; () banked
 12949  001A9C  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12950  001A9E  0100               	movlb	0	; () banked
 12951  001AA0  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 12952  001AA2  0E00               	movlw	0
 12953  001AA4  0100               	movlb	0	; () banked
 12954  001AA6  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 12955  001AA8  0100               	movlb	0	; () banked
 12956  001AAA  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 12957  001AAC  0E11               	movlw	17
 12958  001AAE                     u6905:
 12959  001AAE  90D8               	bcf	status,0,c
 12960  001AB0  0100               	movlb	0	; () banked
 12961  001AB2  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 12962  001AB4  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 12963  001AB6  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 12964  001AB8  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 12965  001ABA  2EE8               	decfsz	wreg,f,c
 12966  001ABC  D7F8               	goto	u6905
 12967  001ABE  0100               	movlb	0	; () banked
 12968  001AC0  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 12969  001AC2  0100               	movlb	0	; () banked
 12970  001AC4  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 12971  001AC6  0100               	movlb	0	; () banked
 12972  001AC8  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 12973  001ACA  0100               	movlb	0	; () banked
 12974  001ACC  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 12975  001ACE  0100               	movlb	0	; () banked
 12976  001AD0  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 12977  001AD2  0100               	movlb	0	; () banked
 12978  001AD4  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 12979  001AD6  0100               	movlb	0	; () banked
 12980  001AD8  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 12981  001ADA  0100               	movlb	0	; () banked
 12982  001ADC  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;MISC.c: 422: temp += (This & 0x00000100) << 15;
 12986  001ADE  0E00               	movlw	0
 12987  001AE0  0100               	movlb	0	; () banked
 12988  001AE2  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 12989  001AE4  0100               	movlb	0	; () banked
 12990  001AE6  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 12991  001AE8  0E01               	movlw	1
 12992  001AEA  0100               	movlb	0	; () banked
 12993  001AEC  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 12994  001AEE  0100               	movlb	0	; () banked
 12995  001AF0  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 12996  001AF2  0E00               	movlw	0
 12997  001AF4  0100               	movlb	0	; () banked
 12998  001AF6  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 12999  001AF8  0100               	movlb	0	; () banked
 13000  001AFA  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13001  001AFC  0E00               	movlw	0
 13002  001AFE  0100               	movlb	0	; () banked
 13003  001B00  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13004  001B02  0100               	movlb	0	; () banked
 13005  001B04  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13006  001B06  0E0F               	movlw	15
 13007  001B08                     u6915:
 13008  001B08  90D8               	bcf	status,0,c
 13009  001B0A  0100               	movlb	0	; () banked
 13010  001B0C  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13011  001B0E  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13012  001B10  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13013  001B12  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13014  001B14  2EE8               	decfsz	wreg,f,c
 13015  001B16  D7F8               	goto	u6915
 13016  001B18  0100               	movlb	0	; () banked
 13017  001B1A  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13018  001B1C  0100               	movlb	0	; () banked
 13019  001B1E  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13020  001B20  0100               	movlb	0	; () banked
 13021  001B22  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13022  001B24  0100               	movlb	0	; () banked
 13023  001B26  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13024  001B28  0100               	movlb	0	; () banked
 13025  001B2A  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13026  001B2C  0100               	movlb	0	; () banked
 13027  001B2E  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13028  001B30  0100               	movlb	0	; () banked
 13029  001B32  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13030  001B34  0100               	movlb	0	; () banked
 13031  001B36  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;MISC.c: 423: temp += (This & 0x00000200) << 13;
 13035  001B38  0E00               	movlw	0
 13036  001B3A  0100               	movlb	0	; () banked
 13037  001B3C  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13038  001B3E  0100               	movlb	0	; () banked
 13039  001B40  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13040  001B42  0E02               	movlw	2
 13041  001B44  0100               	movlb	0	; () banked
 13042  001B46  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13043  001B48  0100               	movlb	0	; () banked
 13044  001B4A  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13045  001B4C  0E00               	movlw	0
 13046  001B4E  0100               	movlb	0	; () banked
 13047  001B50  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13048  001B52  0100               	movlb	0	; () banked
 13049  001B54  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13050  001B56  0E00               	movlw	0
 13051  001B58  0100               	movlb	0	; () banked
 13052  001B5A  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13053  001B5C  0100               	movlb	0	; () banked
 13054  001B5E  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13055  001B60  0E0D               	movlw	13
 13056  001B62                     u6925:
 13057  001B62  90D8               	bcf	status,0,c
 13058  001B64  0100               	movlb	0	; () banked
 13059  001B66  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13060  001B68  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13061  001B6A  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13062  001B6C  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13063  001B6E  2EE8               	decfsz	wreg,f,c
 13064  001B70  D7F8               	goto	u6925
 13065  001B72  0100               	movlb	0	; () banked
 13066  001B74  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13067  001B76  0100               	movlb	0	; () banked
 13068  001B78  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13069  001B7A  0100               	movlb	0	; () banked
 13070  001B7C  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13071  001B7E  0100               	movlb	0	; () banked
 13072  001B80  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13073  001B82  0100               	movlb	0	; () banked
 13074  001B84  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13075  001B86  0100               	movlb	0	; () banked
 13076  001B88  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13077  001B8A  0100               	movlb	0	; () banked
 13078  001B8C  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13079  001B8E  0100               	movlb	0	; () banked
 13080  001B90  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;MISC.c: 424: temp += (This & 0x00000400) << 11;
 13084  001B92  0E00               	movlw	0
 13085  001B94  0100               	movlb	0	; () banked
 13086  001B96  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13087  001B98  0100               	movlb	0	; () banked
 13088  001B9A  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13089  001B9C  0E04               	movlw	4
 13090  001B9E  0100               	movlb	0	; () banked
 13091  001BA0  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13092  001BA2  0100               	movlb	0	; () banked
 13093  001BA4  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13094  001BA6  0E00               	movlw	0
 13095  001BA8  0100               	movlb	0	; () banked
 13096  001BAA  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13097  001BAC  0100               	movlb	0	; () banked
 13098  001BAE  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13099  001BB0  0E00               	movlw	0
 13100  001BB2  0100               	movlb	0	; () banked
 13101  001BB4  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13102  001BB6  0100               	movlb	0	; () banked
 13103  001BB8  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13104  001BBA  0E0B               	movlw	11
 13105  001BBC                     u6935:
 13106  001BBC  90D8               	bcf	status,0,c
 13107  001BBE  0100               	movlb	0	; () banked
 13108  001BC0  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13109  001BC2  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13110  001BC4  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13111  001BC6  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13112  001BC8  2EE8               	decfsz	wreg,f,c
 13113  001BCA  D7F8               	goto	u6935
 13114  001BCC  0100               	movlb	0	; () banked
 13115  001BCE  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13116  001BD0  0100               	movlb	0	; () banked
 13117  001BD2  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13118  001BD4  0100               	movlb	0	; () banked
 13119  001BD6  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13120  001BD8  0100               	movlb	0	; () banked
 13121  001BDA  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13122  001BDC  0100               	movlb	0	; () banked
 13123  001BDE  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13124  001BE0  0100               	movlb	0	; () banked
 13125  001BE2  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13126  001BE4  0100               	movlb	0	; () banked
 13127  001BE6  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13128  001BE8  0100               	movlb	0	; () banked
 13129  001BEA  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;MISC.c: 425: temp += (This & 0x00000800) << 9;
 13133  001BEC  0E00               	movlw	0
 13134  001BEE  0100               	movlb	0	; () banked
 13135  001BF0  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13136  001BF2  0100               	movlb	0	; () banked
 13137  001BF4  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13138  001BF6  0E08               	movlw	8
 13139  001BF8  0100               	movlb	0	; () banked
 13140  001BFA  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13141  001BFC  0100               	movlb	0	; () banked
 13142  001BFE  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13143  001C00  0E00               	movlw	0
 13144  001C02  0100               	movlb	0	; () banked
 13145  001C04  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13146  001C06  0100               	movlb	0	; () banked
 13147  001C08  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13148  001C0A  0E00               	movlw	0
 13149  001C0C  0100               	movlb	0	; () banked
 13150  001C0E  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13151  001C10  0100               	movlb	0	; () banked
 13152  001C12  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13153  001C14  0E09               	movlw	9
 13154  001C16                     u6945:
 13155  001C16  90D8               	bcf	status,0,c
 13156  001C18  0100               	movlb	0	; () banked
 13157  001C1A  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13158  001C1C  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13159  001C1E  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13160  001C20  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13161  001C22  2EE8               	decfsz	wreg,f,c
 13162  001C24  D7F8               	goto	u6945
 13163  001C26  0100               	movlb	0	; () banked
 13164  001C28  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13165  001C2A  0100               	movlb	0	; () banked
 13166  001C2C  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13167  001C2E  0100               	movlb	0	; () banked
 13168  001C30  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13169  001C32  0100               	movlb	0	; () banked
 13170  001C34  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13171  001C36  0100               	movlb	0	; () banked
 13172  001C38  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13173  001C3A  0100               	movlb	0	; () banked
 13174  001C3C  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13175  001C3E  0100               	movlb	0	; () banked
 13176  001C40  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13177  001C42  0100               	movlb	0	; () banked
 13178  001C44  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;MISC.c: 426: temp += (This & 0x00001000) << 7;
 13182  001C46  0E00               	movlw	0
 13183  001C48  0100               	movlb	0	; () banked
 13184  001C4A  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13185  001C4C  0100               	movlb	0	; () banked
 13186  001C4E  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13187  001C50  0E10               	movlw	16
 13188  001C52  0100               	movlb	0	; () banked
 13189  001C54  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13190  001C56  0100               	movlb	0	; () banked
 13191  001C58  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13192  001C5A  0E00               	movlw	0
 13193  001C5C  0100               	movlb	0	; () banked
 13194  001C5E  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13195  001C60  0100               	movlb	0	; () banked
 13196  001C62  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13197  001C64  0E00               	movlw	0
 13198  001C66  0100               	movlb	0	; () banked
 13199  001C68  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13200  001C6A  0100               	movlb	0	; () banked
 13201  001C6C  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13202  001C6E  0E07               	movlw	7
 13203  001C70                     u6955:
 13204  001C70  90D8               	bcf	status,0,c
 13205  001C72  0100               	movlb	0	; () banked
 13206  001C74  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13207  001C76  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13208  001C78  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13209  001C7A  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13210  001C7C  2EE8               	decfsz	wreg,f,c
 13211  001C7E  D7F8               	goto	u6955
 13212  001C80  0100               	movlb	0	; () banked
 13213  001C82  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13214  001C84  0100               	movlb	0	; () banked
 13215  001C86  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13216  001C88  0100               	movlb	0	; () banked
 13217  001C8A  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13218  001C8C  0100               	movlb	0	; () banked
 13219  001C8E  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13220  001C90  0100               	movlb	0	; () banked
 13221  001C92  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13222  001C94  0100               	movlb	0	; () banked
 13223  001C96  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13224  001C98  0100               	movlb	0	; () banked
 13225  001C9A  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13226  001C9C  0100               	movlb	0	; () banked
 13227  001C9E  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;MISC.c: 427: temp += (This & 0x00002000) << 5;
 13231  001CA0  0E00               	movlw	0
 13232  001CA2  0100               	movlb	0	; () banked
 13233  001CA4  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13234  001CA6  0100               	movlb	0	; () banked
 13235  001CA8  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13236  001CAA  0E20               	movlw	32
 13237  001CAC  0100               	movlb	0	; () banked
 13238  001CAE  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13239  001CB0  0100               	movlb	0	; () banked
 13240  001CB2  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13241  001CB4  0E00               	movlw	0
 13242  001CB6  0100               	movlb	0	; () banked
 13243  001CB8  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13244  001CBA  0100               	movlb	0	; () banked
 13245  001CBC  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13246  001CBE  0E00               	movlw	0
 13247  001CC0  0100               	movlb	0	; () banked
 13248  001CC2  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13249  001CC4  0100               	movlb	0	; () banked
 13250  001CC6  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13251  001CC8  0E05               	movlw	5
 13252  001CCA                     u6965:
 13253  001CCA  90D8               	bcf	status,0,c
 13254  001CCC  0100               	movlb	0	; () banked
 13255  001CCE  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13256  001CD0  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13257  001CD2  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13258  001CD4  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13259  001CD6  2EE8               	decfsz	wreg,f,c
 13260  001CD8  D7F8               	goto	u6965
 13261  001CDA  0100               	movlb	0	; () banked
 13262  001CDC  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13263  001CDE  0100               	movlb	0	; () banked
 13264  001CE0  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13265  001CE2  0100               	movlb	0	; () banked
 13266  001CE4  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13267  001CE6  0100               	movlb	0	; () banked
 13268  001CE8  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13269  001CEA  0100               	movlb	0	; () banked
 13270  001CEC  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13271  001CEE  0100               	movlb	0	; () banked
 13272  001CF0  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13273  001CF2  0100               	movlb	0	; () banked
 13274  001CF4  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13275  001CF6  0100               	movlb	0	; () banked
 13276  001CF8  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;MISC.c: 428: temp += (This & 0x00004000) << 3;
 13280  001CFA  0E00               	movlw	0
 13281  001CFC  0100               	movlb	0	; () banked
 13282  001CFE  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13283  001D00  0100               	movlb	0	; () banked
 13284  001D02  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13285  001D04  0E40               	movlw	64
 13286  001D06  0100               	movlb	0	; () banked
 13287  001D08  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13288  001D0A  0100               	movlb	0	; () banked
 13289  001D0C  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13290  001D0E  0E00               	movlw	0
 13291  001D10  0100               	movlb	0	; () banked
 13292  001D12  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13293  001D14  0100               	movlb	0	; () banked
 13294  001D16  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13295  001D18  0E00               	movlw	0
 13296  001D1A  0100               	movlb	0	; () banked
 13297  001D1C  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13298  001D1E  0100               	movlb	0	; () banked
 13299  001D20  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13300  001D22  0E03               	movlw	3
 13301  001D24                     u6975:
 13302  001D24  90D8               	bcf	status,0,c
 13303  001D26  0100               	movlb	0	; () banked
 13304  001D28  3779               	rlcf	??_Reverse_4Byte& (0+255),f,b
 13305  001D2A  377A               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13306  001D2C  377B               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13307  001D2E  377C               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13308  001D30  2EE8               	decfsz	wreg,f,c
 13309  001D32  D7F8               	goto	u6975
 13310  001D34  0100               	movlb	0	; () banked
 13311  001D36  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 13312  001D38  0100               	movlb	0	; () banked
 13313  001D3A  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13314  001D3C  0100               	movlb	0	; () banked
 13315  001D3E  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 13316  001D40  0100               	movlb	0	; () banked
 13317  001D42  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13318  001D44  0100               	movlb	0	; () banked
 13319  001D46  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 13320  001D48  0100               	movlb	0	; () banked
 13321  001D4A  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13322  001D4C  0100               	movlb	0	; () banked
 13323  001D4E  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 13324  001D50  0100               	movlb	0	; () banked
 13325  001D52  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;MISC.c: 429: temp += (This & 0x00008000) << 1;
 13329  001D54  0E00               	movlw	0
 13330  001D56  0100               	movlb	0	; () banked
 13331  001D58  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 13332  001D5A  0100               	movlb	0	; () banked
 13333  001D5C  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 13334  001D5E  0E80               	movlw	128
 13335  001D60  0100               	movlb	0	; () banked
 13336  001D62  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 13337  001D64  0100               	movlb	0	; () banked
 13338  001D66  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 13339  001D68  0E00               	movlw	0
 13340  001D6A  0100               	movlb	0	; () banked
 13341  001D6C  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 13342  001D6E  0100               	movlb	0	; () banked
 13343  001D70  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 13344  001D72  0E00               	movlw	0
 13345  001D74  0100               	movlb	0	; () banked
 13346  001D76  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 13347  001D78  0100               	movlb	0	; () banked
 13348  001D7A  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 13349  001D7C  90D8               	bcf	status,0,c
 13350  001D7E  0100               	movlb	0	; () banked
 13351  001D80  3579               	rlcf	??_Reverse_4Byte& (0+255),w,b
 13352  001D82  0100               	movlb	0	; () banked
 13353  001D84  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13354  001D86  0100               	movlb	0	; () banked
 13355  001D88  357A               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 13356  001D8A  0100               	movlb	0	; () banked
 13357  001D8C  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13358  001D8E  0100               	movlb	0	; () banked
 13359  001D90  357B               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 13360  001D92  0100               	movlb	0	; () banked
 13361  001D94  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13362  001D96  0100               	movlb	0	; () banked
 13363  001D98  357C               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 13364  001D9A  0100               	movlb	0	; () banked
 13365  001D9C  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13366  001D9E  0100               	movlb	0	; () banked
 13367  001DA0  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13368  001DA2  0100               	movlb	0	; () banked
 13369  001DA4  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13370  001DA6  0100               	movlb	0	; () banked
 13371  001DA8  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13372  001DAA  0100               	movlb	0	; () banked
 13373  001DAC  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13374  001DAE  0100               	movlb	0	; () banked
 13375  001DB0  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13376  001DB2  0100               	movlb	0	; () banked
 13377  001DB4  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13378  001DB6  0100               	movlb	0	; () banked
 13379  001DB8  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13380  001DBA  0100               	movlb	0	; () banked
 13381  001DBC  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;MISC.c: 430: temp += (This & 0x00010000) >> 1;
 13385  001DBE  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13386  001DC2  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13387  001DC6  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13388  001DCA  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13389  001DCE  0100               	movlb	0	; () banked
 13390  001DD0  90D8               	bcf	status,0,c
 13391  001DD2  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13392  001DD4  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13393  001DD6  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13394  001DD8  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13395  001DDA  0E00               	movlw	0
 13396  001DDC  0100               	movlb	0	; () banked
 13397  001DDE  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13398  001DE0  0100               	movlb	0	; () banked
 13399  001DE2  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13400  001DE4  0E80               	movlw	128
 13401  001DE6  0100               	movlb	0	; () banked
 13402  001DE8  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13403  001DEA  0100               	movlb	0	; () banked
 13404  001DEC  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13405  001DEE  0E00               	movlw	0
 13406  001DF0  0100               	movlb	0	; () banked
 13407  001DF2  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13408  001DF4  0100               	movlb	0	; () banked
 13409  001DF6  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13410  001DF8  0E00               	movlw	0
 13411  001DFA  0100               	movlb	0	; () banked
 13412  001DFC  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13413  001DFE  0100               	movlb	0	; () banked
 13414  001E00  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13415  001E02  0100               	movlb	0	; () banked
 13416  001E04  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13417  001E06  0100               	movlb	0	; () banked
 13418  001E08  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13419  001E0A  0100               	movlb	0	; () banked
 13420  001E0C  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13421  001E0E  0100               	movlb	0	; () banked
 13422  001E10  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13423  001E12  0100               	movlb	0	; () banked
 13424  001E14  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13425  001E16  0100               	movlb	0	; () banked
 13426  001E18  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13427  001E1A  0100               	movlb	0	; () banked
 13428  001E1C  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13429  001E1E  0100               	movlb	0	; () banked
 13430  001E20  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;MISC.c: 431: temp += (This & 0x00020000) >> 3;
 13434  001E22  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13435  001E26  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13436  001E2A  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13437  001E2E  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13438  001E32  0E04               	movlw	4
 13439  001E34  D006               	goto	u6980
 13440  001E36                     u6985:
 13441  001E36  0100               	movlb	0	; () banked
 13442  001E38  90D8               	bcf	status,0,c
 13443  001E3A  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13444  001E3C  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13445  001E3E  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13446  001E40  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13447  001E42                     u6980:
 13448  001E42  2EE8               	decfsz	wreg,f,c
 13449  001E44  D7F8               	goto	u6985
 13450  001E46  0E00               	movlw	0
 13451  001E48  0100               	movlb	0	; () banked
 13452  001E4A  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13453  001E4C  0100               	movlb	0	; () banked
 13454  001E4E  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13455  001E50  0E40               	movlw	64
 13456  001E52  0100               	movlb	0	; () banked
 13457  001E54  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13458  001E56  0100               	movlb	0	; () banked
 13459  001E58  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13460  001E5A  0E00               	movlw	0
 13461  001E5C  0100               	movlb	0	; () banked
 13462  001E5E  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13463  001E60  0100               	movlb	0	; () banked
 13464  001E62  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13465  001E64  0E00               	movlw	0
 13466  001E66  0100               	movlb	0	; () banked
 13467  001E68  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13468  001E6A  0100               	movlb	0	; () banked
 13469  001E6C  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13470  001E6E  0100               	movlb	0	; () banked
 13471  001E70  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13472  001E72  0100               	movlb	0	; () banked
 13473  001E74  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13474  001E76  0100               	movlb	0	; () banked
 13475  001E78  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13476  001E7A  0100               	movlb	0	; () banked
 13477  001E7C  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13478  001E7E  0100               	movlb	0	; () banked
 13479  001E80  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13480  001E82  0100               	movlb	0	; () banked
 13481  001E84  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13482  001E86  0100               	movlb	0	; () banked
 13483  001E88  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13484  001E8A  0100               	movlb	0	; () banked
 13485  001E8C  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;MISC.c: 432: temp += (This & 0x00040000) >> 5;
 13489  001E8E  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13490  001E92  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13491  001E96  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13492  001E9A  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13493  001E9E  0E06               	movlw	6
 13494  001EA0  D006               	goto	u6990
 13495  001EA2                     u6995:
 13496  001EA2  0100               	movlb	0	; () banked
 13497  001EA4  90D8               	bcf	status,0,c
 13498  001EA6  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13499  001EA8  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13500  001EAA  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13501  001EAC  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13502  001EAE                     u6990:
 13503  001EAE  2EE8               	decfsz	wreg,f,c
 13504  001EB0  D7F8               	goto	u6995
 13505  001EB2  0E00               	movlw	0
 13506  001EB4  0100               	movlb	0	; () banked
 13507  001EB6  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13508  001EB8  0100               	movlb	0	; () banked
 13509  001EBA  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13510  001EBC  0E20               	movlw	32
 13511  001EBE  0100               	movlb	0	; () banked
 13512  001EC0  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13513  001EC2  0100               	movlb	0	; () banked
 13514  001EC4  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13515  001EC6  0E00               	movlw	0
 13516  001EC8  0100               	movlb	0	; () banked
 13517  001ECA  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13518  001ECC  0100               	movlb	0	; () banked
 13519  001ECE  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13520  001ED0  0E00               	movlw	0
 13521  001ED2  0100               	movlb	0	; () banked
 13522  001ED4  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13523  001ED6  0100               	movlb	0	; () banked
 13524  001ED8  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13525  001EDA  0100               	movlb	0	; () banked
 13526  001EDC  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13527  001EDE  0100               	movlb	0	; () banked
 13528  001EE0  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13529  001EE2  0100               	movlb	0	; () banked
 13530  001EE4  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13531  001EE6  0100               	movlb	0	; () banked
 13532  001EE8  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13533  001EEA  0100               	movlb	0	; () banked
 13534  001EEC  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13535  001EEE  0100               	movlb	0	; () banked
 13536  001EF0  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13537  001EF2  0100               	movlb	0	; () banked
 13538  001EF4  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13539  001EF6  0100               	movlb	0	; () banked
 13540  001EF8  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;MISC.c: 433: temp += (This & 0x00080000) >> 7;
 13544  001EFA  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13545  001EFE  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13546  001F02  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13547  001F06  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13548  001F0A  0E08               	movlw	8
 13549  001F0C  D006               	goto	u7000
 13550  001F0E                     u7005:
 13551  001F0E  0100               	movlb	0	; () banked
 13552  001F10  90D8               	bcf	status,0,c
 13553  001F12  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13554  001F14  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13555  001F16  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13556  001F18  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13557  001F1A                     u7000:
 13558  001F1A  2EE8               	decfsz	wreg,f,c
 13559  001F1C  D7F8               	goto	u7005
 13560  001F1E  0E00               	movlw	0
 13561  001F20  0100               	movlb	0	; () banked
 13562  001F22  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13563  001F24  0100               	movlb	0	; () banked
 13564  001F26  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13565  001F28  0E10               	movlw	16
 13566  001F2A  0100               	movlb	0	; () banked
 13567  001F2C  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13568  001F2E  0100               	movlb	0	; () banked
 13569  001F30  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13570  001F32  0E00               	movlw	0
 13571  001F34  0100               	movlb	0	; () banked
 13572  001F36  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13573  001F38  0100               	movlb	0	; () banked
 13574  001F3A  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13575  001F3C  0E00               	movlw	0
 13576  001F3E  0100               	movlb	0	; () banked
 13577  001F40  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13578  001F42  0100               	movlb	0	; () banked
 13579  001F44  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13580  001F46  0100               	movlb	0	; () banked
 13581  001F48  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13582  001F4A  0100               	movlb	0	; () banked
 13583  001F4C  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13584  001F4E  0100               	movlb	0	; () banked
 13585  001F50  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13586  001F52  0100               	movlb	0	; () banked
 13587  001F54  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13588  001F56  0100               	movlb	0	; () banked
 13589  001F58  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13590  001F5A  0100               	movlb	0	; () banked
 13591  001F5C  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13592  001F5E  0100               	movlb	0	; () banked
 13593  001F60  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13594  001F62  0100               	movlb	0	; () banked
 13595  001F64  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;MISC.c: 434: temp += (This & 0x00100000) >> 9;
 13599  001F66  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13600  001F6A  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13601  001F6E  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13602  001F72  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13603  001F76  0E0A               	movlw	10
 13604  001F78  D006               	goto	u7010
 13605  001F7A                     u7015:
 13606  001F7A  0100               	movlb	0	; () banked
 13607  001F7C  90D8               	bcf	status,0,c
 13608  001F7E  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13609  001F80  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13610  001F82  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13611  001F84  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13612  001F86                     u7010:
 13613  001F86  2EE8               	decfsz	wreg,f,c
 13614  001F88  D7F8               	goto	u7015
 13615  001F8A  0E00               	movlw	0
 13616  001F8C  0100               	movlb	0	; () banked
 13617  001F8E  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13618  001F90  0100               	movlb	0	; () banked
 13619  001F92  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13620  001F94  0E08               	movlw	8
 13621  001F96  0100               	movlb	0	; () banked
 13622  001F98  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13623  001F9A  0100               	movlb	0	; () banked
 13624  001F9C  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13625  001F9E  0E00               	movlw	0
 13626  001FA0  0100               	movlb	0	; () banked
 13627  001FA2  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13628  001FA4  0100               	movlb	0	; () banked
 13629  001FA6  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13630  001FA8  0E00               	movlw	0
 13631  001FAA  0100               	movlb	0	; () banked
 13632  001FAC  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13633  001FAE  0100               	movlb	0	; () banked
 13634  001FB0  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13635  001FB2  0100               	movlb	0	; () banked
 13636  001FB4  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13637  001FB6  0100               	movlb	0	; () banked
 13638  001FB8  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13639  001FBA  0100               	movlb	0	; () banked
 13640  001FBC  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13641  001FBE  0100               	movlb	0	; () banked
 13642  001FC0  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13643  001FC2  0100               	movlb	0	; () banked
 13644  001FC4  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13645  001FC6  0100               	movlb	0	; () banked
 13646  001FC8  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13647  001FCA  0100               	movlb	0	; () banked
 13648  001FCC  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13649  001FCE  0100               	movlb	0	; () banked
 13650  001FD0  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;MISC.c: 435: temp += (This & 0x00200000) >> 11;
 13654  001FD2  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13655  001FD6  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13656  001FDA  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13657  001FDE  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13658  001FE2  0E0C               	movlw	12
 13659  001FE4  D006               	goto	u7020
 13660  001FE6                     u7025:
 13661  001FE6  0100               	movlb	0	; () banked
 13662  001FE8  90D8               	bcf	status,0,c
 13663  001FEA  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13664  001FEC  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13665  001FEE  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13666  001FF0  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13667  001FF2                     u7020:
 13668  001FF2  2EE8               	decfsz	wreg,f,c
 13669  001FF4  D7F8               	goto	u7025
 13670  001FF6  0E00               	movlw	0
 13671  001FF8  0100               	movlb	0	; () banked
 13672  001FFA  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13673  001FFC  0100               	movlb	0	; () banked
 13674  001FFE  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13675  002000  0E04               	movlw	4
 13676  002002  0100               	movlb	0	; () banked
 13677  002004  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13678  002006  0100               	movlb	0	; () banked
 13679  002008  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13680  00200A  0E00               	movlw	0
 13681  00200C  0100               	movlb	0	; () banked
 13682  00200E  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13683  002010  0100               	movlb	0	; () banked
 13684  002012  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13685  002014  0E00               	movlw	0
 13686  002016  0100               	movlb	0	; () banked
 13687  002018  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13688  00201A  0100               	movlb	0	; () banked
 13689  00201C  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13690  00201E  0100               	movlb	0	; () banked
 13691  002020  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13692  002022  0100               	movlb	0	; () banked
 13693  002024  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13694  002026  0100               	movlb	0	; () banked
 13695  002028  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13696  00202A  0100               	movlb	0	; () banked
 13697  00202C  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13698  00202E  0100               	movlb	0	; () banked
 13699  002030  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13700  002032  0100               	movlb	0	; () banked
 13701  002034  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13702  002036  0100               	movlb	0	; () banked
 13703  002038  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13704  00203A  0100               	movlb	0	; () banked
 13705  00203C  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;MISC.c: 436: temp += (This & 0x00400000) >> 13;
 13709  00203E  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13710  002042  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13711  002046  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13712  00204A  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13713  00204E  0E0E               	movlw	14
 13714  002050  D006               	goto	u7030
 13715  002052                     u7035:
 13716  002052  0100               	movlb	0	; () banked
 13717  002054  90D8               	bcf	status,0,c
 13718  002056  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13719  002058  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13720  00205A  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13721  00205C  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13722  00205E                     u7030:
 13723  00205E  2EE8               	decfsz	wreg,f,c
 13724  002060  D7F8               	goto	u7035
 13725  002062  0E00               	movlw	0
 13726  002064  0100               	movlb	0	; () banked
 13727  002066  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13728  002068  0100               	movlb	0	; () banked
 13729  00206A  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13730  00206C  0E02               	movlw	2
 13731  00206E  0100               	movlb	0	; () banked
 13732  002070  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13733  002072  0100               	movlb	0	; () banked
 13734  002074  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13735  002076  0E00               	movlw	0
 13736  002078  0100               	movlb	0	; () banked
 13737  00207A  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13738  00207C  0100               	movlb	0	; () banked
 13739  00207E  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13740  002080  0E00               	movlw	0
 13741  002082  0100               	movlb	0	; () banked
 13742  002084  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13743  002086  0100               	movlb	0	; () banked
 13744  002088  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13745  00208A  0100               	movlb	0	; () banked
 13746  00208C  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13747  00208E  0100               	movlb	0	; () banked
 13748  002090  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13749  002092  0100               	movlb	0	; () banked
 13750  002094  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13751  002096  0100               	movlb	0	; () banked
 13752  002098  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13753  00209A  0100               	movlb	0	; () banked
 13754  00209C  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13755  00209E  0100               	movlb	0	; () banked
 13756  0020A0  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13757  0020A2  0100               	movlb	0	; () banked
 13758  0020A4  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13759  0020A6  0100               	movlb	0	; () banked
 13760  0020A8  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;MISC.c: 437: temp += (This & 0x00800000) >> 15;
 13764  0020AA  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13765  0020AE  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13766  0020B2  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13767  0020B6  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13768  0020BA  0E10               	movlw	16
 13769  0020BC  D006               	goto	u7040
 13770  0020BE                     u7045:
 13771  0020BE  0100               	movlb	0	; () banked
 13772  0020C0  90D8               	bcf	status,0,c
 13773  0020C2  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13774  0020C4  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13775  0020C6  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13776  0020C8  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13777  0020CA                     u7040:
 13778  0020CA  2EE8               	decfsz	wreg,f,c
 13779  0020CC  D7F8               	goto	u7045
 13780  0020CE  0E00               	movlw	0
 13781  0020D0  0100               	movlb	0	; () banked
 13782  0020D2  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13783  0020D4  0100               	movlb	0	; () banked
 13784  0020D6  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13785  0020D8  0E01               	movlw	1
 13786  0020DA  0100               	movlb	0	; () banked
 13787  0020DC  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13788  0020DE  0100               	movlb	0	; () banked
 13789  0020E0  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13790  0020E2  0E00               	movlw	0
 13791  0020E4  0100               	movlb	0	; () banked
 13792  0020E6  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13793  0020E8  0100               	movlb	0	; () banked
 13794  0020EA  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13795  0020EC  0E00               	movlw	0
 13796  0020EE  0100               	movlb	0	; () banked
 13797  0020F0  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13798  0020F2  0100               	movlb	0	; () banked
 13799  0020F4  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13800  0020F6  0100               	movlb	0	; () banked
 13801  0020F8  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13802  0020FA  0100               	movlb	0	; () banked
 13803  0020FC  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13804  0020FE  0100               	movlb	0	; () banked
 13805  002100  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13806  002102  0100               	movlb	0	; () banked
 13807  002104  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13808  002106  0100               	movlb	0	; () banked
 13809  002108  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13810  00210A  0100               	movlb	0	; () banked
 13811  00210C  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13812  00210E  0100               	movlb	0	; () banked
 13813  002110  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13814  002112  0100               	movlb	0	; () banked
 13815  002114  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;MISC.c: 438: temp += (This & 0x01000000) >> 17;
 13819  002116  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13820  00211A  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13821  00211E  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13822  002122  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13823  002126  0E12               	movlw	18
 13824  002128  D006               	goto	u7050
 13825  00212A                     u7055:
 13826  00212A  0100               	movlb	0	; () banked
 13827  00212C  90D8               	bcf	status,0,c
 13828  00212E  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13829  002130  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13830  002132  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13831  002134  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13832  002136                     u7050:
 13833  002136  2EE8               	decfsz	wreg,f,c
 13834  002138  D7F8               	goto	u7055
 13835  00213A  0E80               	movlw	128
 13836  00213C  0100               	movlb	0	; () banked
 13837  00213E  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13838  002140  0100               	movlb	0	; () banked
 13839  002142  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13840  002144  0E00               	movlw	0
 13841  002146  0100               	movlb	0	; () banked
 13842  002148  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13843  00214A  0100               	movlb	0	; () banked
 13844  00214C  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13845  00214E  0E00               	movlw	0
 13846  002150  0100               	movlb	0	; () banked
 13847  002152  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13848  002154  0100               	movlb	0	; () banked
 13849  002156  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13850  002158  0E00               	movlw	0
 13851  00215A  0100               	movlb	0	; () banked
 13852  00215C  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13853  00215E  0100               	movlb	0	; () banked
 13854  002160  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13855  002162  0100               	movlb	0	; () banked
 13856  002164  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13857  002166  0100               	movlb	0	; () banked
 13858  002168  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13859  00216A  0100               	movlb	0	; () banked
 13860  00216C  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13861  00216E  0100               	movlb	0	; () banked
 13862  002170  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13863  002172  0100               	movlb	0	; () banked
 13864  002174  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13865  002176  0100               	movlb	0	; () banked
 13866  002178  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13867  00217A  0100               	movlb	0	; () banked
 13868  00217C  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13869  00217E  0100               	movlb	0	; () banked
 13870  002180  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;MISC.c: 439: temp += (This & 0x02000000) >> 19;
 13874  002182  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13875  002186  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13876  00218A  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13877  00218E  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13878  002192  0E14               	movlw	20
 13879  002194  D006               	goto	u7060
 13880  002196                     u7065:
 13881  002196  0100               	movlb	0	; () banked
 13882  002198  90D8               	bcf	status,0,c
 13883  00219A  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13884  00219C  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13885  00219E  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13886  0021A0  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13887  0021A2                     u7060:
 13888  0021A2  2EE8               	decfsz	wreg,f,c
 13889  0021A4  D7F8               	goto	u7065
 13890  0021A6  0E40               	movlw	64
 13891  0021A8  0100               	movlb	0	; () banked
 13892  0021AA  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13893  0021AC  0100               	movlb	0	; () banked
 13894  0021AE  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13895  0021B0  0E00               	movlw	0
 13896  0021B2  0100               	movlb	0	; () banked
 13897  0021B4  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13898  0021B6  0100               	movlb	0	; () banked
 13899  0021B8  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13900  0021BA  0E00               	movlw	0
 13901  0021BC  0100               	movlb	0	; () banked
 13902  0021BE  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13903  0021C0  0100               	movlb	0	; () banked
 13904  0021C2  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13905  0021C4  0E00               	movlw	0
 13906  0021C6  0100               	movlb	0	; () banked
 13907  0021C8  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13908  0021CA  0100               	movlb	0	; () banked
 13909  0021CC  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13910  0021CE  0100               	movlb	0	; () banked
 13911  0021D0  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13912  0021D2  0100               	movlb	0	; () banked
 13913  0021D4  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13914  0021D6  0100               	movlb	0	; () banked
 13915  0021D8  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13916  0021DA  0100               	movlb	0	; () banked
 13917  0021DC  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13918  0021DE  0100               	movlb	0	; () banked
 13919  0021E0  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13920  0021E2  0100               	movlb	0	; () banked
 13921  0021E4  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13922  0021E6  0100               	movlb	0	; () banked
 13923  0021E8  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13924  0021EA  0100               	movlb	0	; () banked
 13925  0021EC  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;MISC.c: 440: temp += (This & 0x04000000) >> 21;
 13929  0021EE  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13930  0021F2  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13931  0021F6  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13932  0021FA  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13933  0021FE  0E16               	movlw	22
 13934  002200  D006               	goto	u7070
 13935  002202                     u7075:
 13936  002202  0100               	movlb	0	; () banked
 13937  002204  90D8               	bcf	status,0,c
 13938  002206  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13939  002208  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13940  00220A  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13941  00220C  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13942  00220E                     u7070:
 13943  00220E  2EE8               	decfsz	wreg,f,c
 13944  002210  D7F8               	goto	u7075
 13945  002212  0E20               	movlw	32
 13946  002214  0100               	movlb	0	; () banked
 13947  002216  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 13948  002218  0100               	movlb	0	; () banked
 13949  00221A  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 13950  00221C  0E00               	movlw	0
 13951  00221E  0100               	movlb	0	; () banked
 13952  002220  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 13953  002222  0100               	movlb	0	; () banked
 13954  002224  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 13955  002226  0E00               	movlw	0
 13956  002228  0100               	movlb	0	; () banked
 13957  00222A  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 13958  00222C  0100               	movlb	0	; () banked
 13959  00222E  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 13960  002230  0E00               	movlw	0
 13961  002232  0100               	movlb	0	; () banked
 13962  002234  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 13963  002236  0100               	movlb	0	; () banked
 13964  002238  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 13965  00223A  0100               	movlb	0	; () banked
 13966  00223C  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 13967  00223E  0100               	movlb	0	; () banked
 13968  002240  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 13969  002242  0100               	movlb	0	; () banked
 13970  002244  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 13971  002246  0100               	movlb	0	; () banked
 13972  002248  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 13973  00224A  0100               	movlb	0	; () banked
 13974  00224C  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 13975  00224E  0100               	movlb	0	; () banked
 13976  002250  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 13977  002252  0100               	movlb	0	; () banked
 13978  002254  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 13979  002256  0100               	movlb	0	; () banked
 13980  002258  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;MISC.c: 441: temp += (This & 0x08000000) >> 23;
 13984  00225A  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 13985  00225E  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 13986  002262  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 13987  002266  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 13988  00226A  0E18               	movlw	24
 13989  00226C  D006               	goto	u7080
 13990  00226E                     u7085:
 13991  00226E  0100               	movlb	0	; () banked
 13992  002270  90D8               	bcf	status,0,c
 13993  002272  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 13994  002274  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 13995  002276  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 13996  002278  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 13997  00227A                     u7080:
 13998  00227A  2EE8               	decfsz	wreg,f,c
 13999  00227C  D7F8               	goto	u7085
 14000  00227E  0E10               	movlw	16
 14001  002280  0100               	movlb	0	; () banked
 14002  002282  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 14003  002284  0100               	movlb	0	; () banked
 14004  002286  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 14005  002288  0E00               	movlw	0
 14006  00228A  0100               	movlb	0	; () banked
 14007  00228C  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 14008  00228E  0100               	movlb	0	; () banked
 14009  002290  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 14010  002292  0E00               	movlw	0
 14011  002294  0100               	movlb	0	; () banked
 14012  002296  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 14013  002298  0100               	movlb	0	; () banked
 14014  00229A  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 14015  00229C  0E00               	movlw	0
 14016  00229E  0100               	movlb	0	; () banked
 14017  0022A0  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 14018  0022A2  0100               	movlb	0	; () banked
 14019  0022A4  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 14020  0022A6  0100               	movlb	0	; () banked
 14021  0022A8  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 14022  0022AA  0100               	movlb	0	; () banked
 14023  0022AC  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 14024  0022AE  0100               	movlb	0	; () banked
 14025  0022B0  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 14026  0022B2  0100               	movlb	0	; () banked
 14027  0022B4  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 14028  0022B6  0100               	movlb	0	; () banked
 14029  0022B8  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 14030  0022BA  0100               	movlb	0	; () banked
 14031  0022BC  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 14032  0022BE  0100               	movlb	0	; () banked
 14033  0022C0  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 14034  0022C2  0100               	movlb	0	; () banked
 14035  0022C4  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 14036                           
 14037                           ; BSR set to: 0
 14038                           ;MISC.c: 442: temp += (This & 0x10000000) >> 25;
 14039  0022C6  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 14040  0022CA  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 14041  0022CE  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 14042  0022D2  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 14043  0022D6  0E1A               	movlw	26
 14044  0022D8  D006               	goto	u7090
 14045  0022DA                     u7095:
 14046  0022DA  0100               	movlb	0	; () banked
 14047  0022DC  90D8               	bcf	status,0,c
 14048  0022DE  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 14049  0022E0  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 14050  0022E2  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 14051  0022E4  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 14052  0022E6                     u7090:
 14053  0022E6  2EE8               	decfsz	wreg,f,c
 14054  0022E8  D7F8               	goto	u7095
 14055  0022EA  0E08               	movlw	8
 14056  0022EC  0100               	movlb	0	; () banked
 14057  0022EE  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 14058  0022F0  0100               	movlb	0	; () banked
 14059  0022F2  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 14060  0022F4  0E00               	movlw	0
 14061  0022F6  0100               	movlb	0	; () banked
 14062  0022F8  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 14063  0022FA  0100               	movlb	0	; () banked
 14064  0022FC  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 14065  0022FE  0E00               	movlw	0
 14066  002300  0100               	movlb	0	; () banked
 14067  002302  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 14068  002304  0100               	movlb	0	; () banked
 14069  002306  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 14070  002308  0E00               	movlw	0
 14071  00230A  0100               	movlb	0	; () banked
 14072  00230C  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 14073  00230E  0100               	movlb	0	; () banked
 14074  002310  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 14075  002312  0100               	movlb	0	; () banked
 14076  002314  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 14077  002316  0100               	movlb	0	; () banked
 14078  002318  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 14079  00231A  0100               	movlb	0	; () banked
 14080  00231C  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 14081  00231E  0100               	movlb	0	; () banked
 14082  002320  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 14083  002322  0100               	movlb	0	; () banked
 14084  002324  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 14085  002326  0100               	movlb	0	; () banked
 14086  002328  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 14087  00232A  0100               	movlb	0	; () banked
 14088  00232C  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 14089  00232E  0100               	movlb	0	; () banked
 14090  002330  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;MISC.c: 443: temp += (This & 0x20000000) >> 27;
 14094  002332  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 14095  002336  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 14096  00233A  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 14097  00233E  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 14098  002342  0E1C               	movlw	28
 14099  002344  D006               	goto	u7100
 14100  002346                     u7105:
 14101  002346  0100               	movlb	0	; () banked
 14102  002348  90D8               	bcf	status,0,c
 14103  00234A  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 14104  00234C  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 14105  00234E  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 14106  002350  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 14107  002352                     u7100:
 14108  002352  2EE8               	decfsz	wreg,f,c
 14109  002354  D7F8               	goto	u7105
 14110  002356  0E04               	movlw	4
 14111  002358  0100               	movlb	0	; () banked
 14112  00235A  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 14113  00235C  0100               	movlb	0	; () banked
 14114  00235E  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 14115  002360  0E00               	movlw	0
 14116  002362  0100               	movlb	0	; () banked
 14117  002364  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 14118  002366  0100               	movlb	0	; () banked
 14119  002368  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 14120  00236A  0E00               	movlw	0
 14121  00236C  0100               	movlb	0	; () banked
 14122  00236E  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 14123  002370  0100               	movlb	0	; () banked
 14124  002372  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 14125  002374  0E00               	movlw	0
 14126  002376  0100               	movlb	0	; () banked
 14127  002378  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 14128  00237A  0100               	movlb	0	; () banked
 14129  00237C  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 14130  00237E  0100               	movlb	0	; () banked
 14131  002380  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 14132  002382  0100               	movlb	0	; () banked
 14133  002384  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 14134  002386  0100               	movlb	0	; () banked
 14135  002388  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 14136  00238A  0100               	movlb	0	; () banked
 14137  00238C  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 14138  00238E  0100               	movlb	0	; () banked
 14139  002390  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 14140  002392  0100               	movlb	0	; () banked
 14141  002394  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 14142  002396  0100               	movlb	0	; () banked
 14143  002398  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 14144  00239A  0100               	movlb	0	; () banked
 14145  00239C  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;MISC.c: 444: temp += (This & 0x40000000) >> 29;
 14149  00239E  C075  F079         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 14150  0023A2  C076  F07A         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 14151  0023A6  C077  F07B         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 14152  0023AA  C078  F07C         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 14153  0023AE  0E1E               	movlw	30
 14154  0023B0  D006               	goto	u7110
 14155  0023B2                     u7115:
 14156  0023B2  0100               	movlb	0	; () banked
 14157  0023B4  90D8               	bcf	status,0,c
 14158  0023B6  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 14159  0023B8  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 14160  0023BA  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 14161  0023BC  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 14162  0023BE                     u7110:
 14163  0023BE  2EE8               	decfsz	wreg,f,c
 14164  0023C0  D7F8               	goto	u7115
 14165  0023C2  0E02               	movlw	2
 14166  0023C4  0100               	movlb	0	; () banked
 14167  0023C6  1579               	andwf	??_Reverse_4Byte& (0+255),w,b
 14168  0023C8  0100               	movlb	0	; () banked
 14169  0023CA  6F7D               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 14170  0023CC  0E00               	movlw	0
 14171  0023CE  0100               	movlb	0	; () banked
 14172  0023D0  157A               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 14173  0023D2  0100               	movlb	0	; () banked
 14174  0023D4  6F7E               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 14175  0023D6  0E00               	movlw	0
 14176  0023D8  0100               	movlb	0	; () banked
 14177  0023DA  157B               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 14178  0023DC  0100               	movlb	0	; () banked
 14179  0023DE  6F7F               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 14180  0023E0  0E00               	movlw	0
 14181  0023E2  0100               	movlb	0	; () banked
 14182  0023E4  157C               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 14183  0023E6  0100               	movlb	0	; () banked
 14184  0023E8  6F80               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 14185  0023EA  0100               	movlb	0	; () banked
 14186  0023EC  517D               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 14187  0023EE  0100               	movlb	0	; () banked
 14188  0023F0  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 14189  0023F2  0100               	movlb	0	; () banked
 14190  0023F4  517E               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 14191  0023F6  0100               	movlb	0	; () banked
 14192  0023F8  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 14193  0023FA  0100               	movlb	0	; () banked
 14194  0023FC  517F               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 14195  0023FE  0100               	movlb	0	; () banked
 14196  002400  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 14197  002402  0100               	movlb	0	; () banked
 14198  002404  5180               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 14199  002406  0100               	movlb	0	; () banked
 14200  002408  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;MISC.c: 445: temp += (This & 0x80000000) >> 31;
 14204  00240A  0E00               	movlw	0
 14205  00240C  0100               	movlb	0	; () banked
 14206  00240E  1575               	andwf	Reverse_4Byte@This& (0+255),w,b
 14207  002410  0100               	movlb	0	; () banked
 14208  002412  6F79               	movwf	??_Reverse_4Byte& (0+255),b
 14209  002414  0E00               	movlw	0
 14210  002416  0100               	movlb	0	; () banked
 14211  002418  1576               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 14212  00241A  0100               	movlb	0	; () banked
 14213  00241C  6F7A               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 14214  00241E  0E00               	movlw	0
 14215  002420  0100               	movlb	0	; () banked
 14216  002422  1577               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 14217  002424  0100               	movlb	0	; () banked
 14218  002426  6F7B               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 14219  002428  0E80               	movlw	128
 14220  00242A  0100               	movlb	0	; () banked
 14221  00242C  1578               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 14222  00242E  0100               	movlb	0	; () banked
 14223  002430  6F7C               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 14224  002432  0E20               	movlw	32
 14225  002434  D006               	goto	u7120
 14226  002436                     u7125:
 14227  002436  0100               	movlb	0	; () banked
 14228  002438  90D8               	bcf	status,0,c
 14229  00243A  337C               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 14230  00243C  337B               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 14231  00243E  337A               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 14232  002440  3379               	rrcf	??_Reverse_4Byte& (0+255),f,b
 14233  002442                     u7120:
 14234  002442  2EE8               	decfsz	wreg,f,c
 14235  002444  D7F8               	goto	u7125
 14236  002446  0100               	movlb	0	; () banked
 14237  002448  5179               	movf	??_Reverse_4Byte& (0+255),w,b
 14238  00244A  0100               	movlb	0	; () banked
 14239  00244C  2781               	addwf	Reverse_4Byte@temp& (0+255),f,b
 14240  00244E  0100               	movlb	0	; () banked
 14241  002450  517A               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 14242  002452  0100               	movlb	0	; () banked
 14243  002454  2382               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 14244  002456  0100               	movlb	0	; () banked
 14245  002458  517B               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 14246  00245A  0100               	movlb	0	; () banked
 14247  00245C  2383               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 14248  00245E  0100               	movlb	0	; () banked
 14249  002460  517C               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 14250  002462  0100               	movlb	0	; () banked
 14251  002464  2384               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;MISC.c: 447: return temp;
 14255  002466  C081  F075         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 14256  00246A  C082  F076         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 14257  00246E  C083  F077         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 14258  002472  C084  F078         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 14259  002476  0012               	return	
 14260                           
 14261                           ; BSR set to: 0
 14262                           
 14263                           ; BSR set to: 0
 14264  002478  0012               	return		;funcret
 14265  00247A                     __end_of_Reverse_4Byte:
 14266                           	opt stack 0
 14267                           tblptru	equ	0xFF8
 14268                           tblptrh	equ	0xFF7
 14269                           tblptrl	equ	0xFF6
 14270                           tablat	equ	0xFF5
 14271                           prodh	equ	0xFF4
 14272                           prodl	equ	0xFF3
 14273                           intcon	equ	0xFF2
 14274                           indf0	equ	0xFEF
 14275                           postinc0	equ	0xFEE
 14276                           fsr0h	equ	0xFEA
 14277                           fsr0l	equ	0xFE9
 14278                           wreg	equ	0xFE8
 14279                           indf1	equ	0xFE7
 14280                           postdec1	equ	0xFE5
 14281                           fsr1h	equ	0xFE2
 14282                           fsr1l	equ	0xFE1
 14283                           indf2	equ	0xFDF
 14284                           postinc2	equ	0xFDE
 14285                           fsr2h	equ	0xFDA
 14286                           fsr2l	equ	0xFD9
 14287                           status	equ	0xFD8
 14288                           
 14289 ;; *************** function _CheckReceivingIR *****************
 14290 ;; Defined at:
 14291 ;;		line 513 in file "IR.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;		None
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;		None
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  1    wreg      unsigned char 
 14298 ;; Registers used:
 14299 ;;		wreg, status,2, status,0
 14300 ;; Tracked objects:
 14301 ;;		On entry : 0/0
 14302 ;;		On exit  : 0/0
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14309 ;;Total ram usage:        0 bytes
 14310 ;; Hardware stack levels used:    1
 14311 ;; Hardware stack levels required when called:    6
 14312 ;; This function calls:
 14313 ;;		Nothing
 14314 ;; This function is called by:
 14315 ;;		_SendNEC_wait
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text23
 14320  0077C0                     __ptext23:
 14321                           	opt stack 0
 14322  0077C0                     _CheckReceivingIR:
 14323                           	opt stack 22
 14324                           
 14325                           ;IR.c: 515: if(ReceivingIR == 13)
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;incstack = 0
 14329  0077C0  0E0D               	movlw	13
 14330  0077C2  1843               	xorwf	_ReceivingIR,w,c	;volatile
 14331  0077C4  A4D8               	btfss	status,2,c
 14332  0077C6  D002               	goto	l7844
 14333                           
 14334                           ;IR.c: 516: {
 14335                           ;IR.c: 517: return 0;
 14336  0077C8  0E00               	movlw	0
 14337  0077CA  0012               	return	
 14338  0077CC                     l7844:
 14339                           
 14340                           ;IR.c: 518: }
 14341                           ;IR.c: 519: return 1;
 14342  0077CC  0E01               	movlw	1
 14343  0077CE  0012               	return	
 14344  0077D0  0012               	return		;funcret
 14345  0077D2                     __end_of_CheckReceivingIR:
 14346                           	opt stack 0
 14347                           tblptru	equ	0xFF8
 14348                           tblptrh	equ	0xFF7
 14349                           tblptrl	equ	0xFF6
 14350                           tablat	equ	0xFF5
 14351                           prodh	equ	0xFF4
 14352                           prodl	equ	0xFF3
 14353                           intcon	equ	0xFF2
 14354                           indf0	equ	0xFEF
 14355                           postinc0	equ	0xFEE
 14356                           fsr0h	equ	0xFEA
 14357                           fsr0l	equ	0xFE9
 14358                           wreg	equ	0xFE8
 14359                           indf1	equ	0xFE7
 14360                           postdec1	equ	0xFE5
 14361                           fsr1h	equ	0xFE2
 14362                           fsr1l	equ	0xFE1
 14363                           indf2	equ	0xFDF
 14364                           postinc2	equ	0xFDE
 14365                           fsr2h	equ	0xFDA
 14366                           fsr2l	equ	0xFD9
 14367                           status	equ	0xFD8
 14368                           
 14369 ;; *************** function _GetStringAfterComma *****************
 14370 ;; Defined at:
 14371 ;;		line 624 in file "MISC.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  This            2   21[BANK0 ] PTR unsigned char 
 14374 ;;		 -> ReceivedString(255), 
 14375 ;;  CommaNumber     1   23[BANK0 ] unsigned char 
 14376 ;;  result          2   24[BANK0 ] PTR unsigned char 
 14377 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 14378 ;; Auto vars:     Size  Location     Type
 14379 ;;  count           1   28[BANK0 ] unsigned char 
 14380 ;;  tempCommaNum    1   27[BANK0 ] unsigned char 
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1    wreg      unsigned char 
 14383 ;; Registers used:
 14384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14390 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14393 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;Total ram usage:        8 bytes
 14395 ;; Hardware stack levels used:    1
 14396 ;; Hardware stack levels required when called:    6
 14397 ;; This function calls:
 14398 ;;		Nothing
 14399 ;; This function is called by:
 14400 ;;		_UseBluetooth
 14401 ;; This function uses a non-reentrant model
 14402 ;;
 14403                           
 14404                           	psect	text24
 14405  005A5A                     __ptext24:
 14406                           	opt stack 0
 14407  005A5A                     _GetStringAfterComma:
 14408                           	opt stack 23
 14409                           
 14410                           ;MISC.c: 626: unsigned char tempCommaNumber = 1;
 14411                           
 14412                           ;incstack = 0
 14413  005A5A  0E01               	movlw	1
 14414  005A5C  0100               	movlb	0	; () banked
 14415  005A5E  6F7B               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 14416                           
 14417                           ;MISC.c: 627: unsigned char count = 0;
 14418  005A60  0E00               	movlw	0
 14419  005A62  0100               	movlb	0	; () banked
 14420  005A64  6F7C               	movwf	GetStringAfterComma@count& (0+255),b
 14421                           
 14422                           ; BSR set to: 0
 14423                           
 14424                           ;MISC.c: 629: SCAN:while(*This != ',' && *This != 0)
 14425  005A66  D001               	goto	l8534
 14426                           
 14427                           ; BSR set to: 0
 14428  005A68  D02B               	goto	L10
 14429  005A6A                     l8534:
 14430                           
 14431                           ; BSR set to: 0
 14432  005A6A  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14433  005A6E  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14434  005A72  0E2C               	movlw	44
 14435  005A74  18DE               	xorwf	postinc2,w,c
 14436  005A76  B4D8               	btfsc	status,2,c
 14437  005A78  D009               	goto	l8538
 14438                           
 14439                           ; BSR set to: 0
 14440  005A7A  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14441  005A7E  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14442  005A82  50DF               	movf	indf2,w,c
 14443  005A84  B4D8               	btfsc	status,2,c
 14444  005A86  D002               	goto	l8538
 14445  005A88  D01B               	goto	L10
 14446                           
 14447                           ; BSR set to: 0
 14448  005A8A  D000               	goto	l8538
 14449  005A8C                     l8538:
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;MISC.c: 633: }
 14453                           ;MISC.c: 634: if(*This == 0)
 14454  005A8C  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14455  005A90  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14456  005A94  50DF               	movf	indf2,w,c
 14457  005A96  A4D8               	btfss	status,2,c
 14458  005A98  D003               	goto	l8546
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;MISC.c: 635: {
 14462                           ;MISC.c: 636: return 1;
 14463  005A9A  0E01               	movlw	1
 14464                           
 14465                           ; BSR set to: 0
 14466  005A9C  0012               	return	
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;MISC.c: 637: }
 14470  005A9E  D015               	goto	l8552
 14471  005AA0                     l8546:
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;MISC.c: 638: else if(*This != ',')
 14475  005AA0  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14476  005AA4  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14477  005AA8  0E2C               	movlw	44
 14478  005AAA  18DE               	xorwf	postinc2,w,c
 14479  005AAC  B4D8               	btfsc	status,2,c
 14480  005AAE  D00D               	goto	l8552
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;MISC.c: 639: {
 14484                           ;MISC.c: 640: if(tempCommaNumber < CommaNumber)
 14485  005AB0  0100               	movlb	0	; () banked
 14486  005AB2  5177               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 14487  005AB4  0100               	movlb	0	; () banked
 14488  005AB6  5D7B               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 14489  005AB8  B0D8               	btfsc	status,0,c
 14490  005ABA  D007               	goto	l8552
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;MISC.c: 641: {
 14494                           ;MISC.c: 642: tempCommaNumber++;
 14495  005ABC  0100               	movlb	0	; () banked
 14496  005ABE  2B7B               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 14497  005AC0                     L10:
 14498                           
 14499                           ;MISC.c: 643: This++;
 14500  005AC0  0100               	movlb	0	; () banked
 14501  005AC2  4B75               	infsnz	GetStringAfterComma@This& (0+255),f,b
 14502  005AC4  2B76               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 14503                           
 14504                           ;MISC.c: 644: goto SCAN;
 14505  005AC6  D7D1               	goto	l8534
 14506                           
 14507                           ; BSR set to: 0
 14508                           
 14509                           ; BSR set to: 0
 14510  005AC8  D000               	goto	l8552
 14511  005ACA                     l8552:
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;MISC.c: 645: }
 14515                           ;MISC.c: 646: }
 14516                           ;MISC.c: 647: if(*This == 0)
 14517  005ACA  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14518  005ACE  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14519  005AD2  50DF               	movf	indf2,w,c
 14520  005AD4  A4D8               	btfss	status,2,c
 14521  005AD6  D002               	goto	l8558
 14522                           
 14523                           ; BSR set to: 0
 14524                           ;MISC.c: 648: {
 14525                           ;MISC.c: 649: return 1;
 14526  005AD8  0E01               	movlw	1
 14527                           
 14528                           ; BSR set to: 0
 14529  005ADA  0012               	return	
 14530  005ADC                     l8558:
 14531                           
 14532                           ; BSR set to: 0
 14533                           ;MISC.c: 650: }
 14534                           ;MISC.c: 651: This++;
 14535  005ADC  0100               	movlb	0	; () banked
 14536  005ADE  4B75               	infsnz	GetStringAfterComma@This& (0+255),f,b
 14537  005AE0  2B76               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 14538                           
 14539                           ; BSR set to: 0
 14540                           ;MISC.c: 652: if(*This == ' ')
 14541  005AE2  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14542  005AE6  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14543  005AEA  0E20               	movlw	32
 14544  005AEC  18DE               	xorwf	postinc2,w,c
 14545  005AEE  A4D8               	btfss	status,2,c
 14546  005AF0  D004               	goto	l8564
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;MISC.c: 653: {
 14550                           ;MISC.c: 654: This++;
 14551  005AF2  0100               	movlb	0	; () banked
 14552  005AF4  4B75               	infsnz	GetStringAfterComma@This& (0+255),f,b
 14553  005AF6  2B76               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 14554                           
 14555                           ;MISC.c: 656: }
 14556  005AF8  D028               	goto	l8586
 14557  005AFA                     l8564:
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;MISC.c: 657: else if (*This == ',')
 14561  005AFA  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14562  005AFE  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14563  005B02  0E2C               	movlw	44
 14564  005B04  18DE               	xorwf	postinc2,w,c
 14565  005B06  A4D8               	btfss	status,2,c
 14566  005B08  D003               	goto	l8572
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;MISC.c: 658: {
 14570                           ;MISC.c: 659: return 2;
 14571  005B0A  0E02               	movlw	2
 14572                           
 14573                           ; BSR set to: 0
 14574  005B0C  0012               	return	
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;MISC.c: 660: }
 14578  005B0E  D01D               	goto	l8586
 14579  005B10                     l8572:
 14580                           
 14581                           ; BSR set to: 0
 14582                           ;MISC.c: 661: else if(*This == 0)
 14583  005B10  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14584  005B14  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14585  005B18  50DF               	movf	indf2,w,c
 14586  005B1A  A4D8               	btfss	status,2,c
 14587  005B1C  D016               	goto	l8586
 14588                           
 14589                           ; BSR set to: 0
 14590                           ;MISC.c: 662: {
 14591                           ;MISC.c: 663: return 3;
 14592  005B1E  0E03               	movlw	3
 14593                           
 14594                           ; BSR set to: 0
 14595  005B20  0012               	return	
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;MISC.c: 664: }
 14599                           ;MISC.c: 665: while(*This != 0 && *This != ' ' && count < 10)
 14600                           
 14601                           ; BSR set to: 0
 14602                           
 14603                           ; BSR set to: 0
 14604  005B22  D013               	goto	l8586
 14605  005B24                     l8578:
 14606                           
 14607                           ; BSR set to: 0
 14608                           ;MISC.c: 666: {
 14609                           ;MISC.c: 667: *result = *This;
 14610  005B24  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14611  005B28  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14612  005B2C  C078  FFE1         	movff	GetStringAfterComma@result,fsr1l
 14613  005B30  C079  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 14614  005B34  CFDF FFE7          	movff	indf2,indf1
 14615                           
 14616                           ; BSR set to: 0
 14617                           ;MISC.c: 668: result++;
 14618  005B38  0100               	movlb	0	; () banked
 14619  005B3A  4B78               	infsnz	GetStringAfterComma@result& (0+255),f,b
 14620  005B3C  2B79               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 14621                           
 14622                           ; BSR set to: 0
 14623                           ;MISC.c: 669: This++;
 14624  005B3E  0100               	movlb	0	; () banked
 14625  005B40  4B75               	infsnz	GetStringAfterComma@This& (0+255),f,b
 14626  005B42  2B76               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 14627                           
 14628                           ; BSR set to: 0
 14629                           ;MISC.c: 670: count++;
 14630  005B44  0100               	movlb	0	; () banked
 14631  005B46  2B7C               	incf	GetStringAfterComma@count& (0+255),f,b
 14632  005B48  D000               	goto	l8586
 14633  005B4A                     l8586:
 14634                           
 14635                           ; BSR set to: 0
 14636  005B4A  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14637  005B4E  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14638  005B52  50DF               	movf	indf2,w,c
 14639  005B54  B4D8               	btfsc	status,2,c
 14640  005B56  D00D               	goto	l8592
 14641                           
 14642                           ; BSR set to: 0
 14643  005B58  C075  FFD9         	movff	GetStringAfterComma@This,fsr2l
 14644  005B5C  C076  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 14645  005B60  0E20               	movlw	32
 14646  005B62  18DE               	xorwf	postinc2,w,c
 14647  005B64  B4D8               	btfsc	status,2,c
 14648  005B66  D005               	goto	l8592
 14649                           
 14650                           ; BSR set to: 0
 14651  005B68  0E09               	movlw	9
 14652  005B6A  0100               	movlb	0	; () banked
 14653  005B6C  657C               	cpfsgt	GetStringAfterComma@count& (0+255),b
 14654  005B6E  D7DA               	goto	l8578
 14655                           
 14656                           ; BSR set to: 0
 14657  005B70  D000               	goto	l8592
 14658  005B72                     l8592:
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;MISC.c: 671: }
 14662                           ;MISC.c: 672: return 0;
 14663  005B72  0E00               	movlw	0
 14664  005B74  0012               	return	
 14665                           
 14666                           ; BSR set to: 0
 14667                           
 14668                           ; BSR set to: 0
 14669  005B76  0012               	return		;funcret
 14670  005B78                     __end_of_GetStringAfterComma:
 14671                           	opt stack 0
 14672                           tblptru	equ	0xFF8
 14673                           tblptrh	equ	0xFF7
 14674                           tblptrl	equ	0xFF6
 14675                           tablat	equ	0xFF5
 14676                           prodh	equ	0xFF4
 14677                           prodl	equ	0xFF3
 14678                           intcon	equ	0xFF2
 14679                           indf0	equ	0xFEF
 14680                           postinc0	equ	0xFEE
 14681                           fsr0h	equ	0xFEA
 14682                           fsr0l	equ	0xFE9
 14683                           wreg	equ	0xFE8
 14684                           indf1	equ	0xFE7
 14685                           postdec1	equ	0xFE5
 14686                           fsr1h	equ	0xFE2
 14687                           fsr1l	equ	0xFE1
 14688                           indf2	equ	0xFDF
 14689                           postinc2	equ	0xFDE
 14690                           fsr2h	equ	0xFDA
 14691                           fsr2l	equ	0xFD9
 14692                           status	equ	0xFD8
 14693                           
 14694 ;; *************** function _GetNumber *****************
 14695 ;; Defined at:
 14696 ;;		line 455 in file "MISC.c"
 14697 ;; Parameters:    Size  Location     Type
 14698 ;;  This            2   33[BANK0 ] PTR unsigned char 
 14699 ;;		 -> ReceivedString(255), 
 14700 ;;  CommaNumber     1   35[BANK0 ] unsigned char 
 14701 ;;  result          2   36[BANK0 ] PTR unsigned long 
 14702 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;  temp            4   49[BANK0 ] long 
 14705 ;;  tempThis        1   48[BANK0 ] unsigned char 
 14706 ;;  i               1   47[BANK0 ] unsigned char 
 14707 ;;  count           1   46[BANK0 ] unsigned char 
 14708 ;;  negative        1   45[BANK0 ] unsigned char 
 14709 ;;  Hex             1   44[BANK0 ] unsigned char 
 14710 ;;  tempCommaNum    1   43[BANK0 ] unsigned char 
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      unsigned char 
 14713 ;; Registers used:
 14714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14720 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14721 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;Total ram usage:       20 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:    7
 14727 ;; This function calls:
 14728 ;;		_IsLetter
 14729 ;;		___lmul
 14730 ;;		_lowercaseChar
 14731 ;; This function is called by:
 14732 ;;		_UseBluetooth
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text25
 14737  00362A                     __ptext25:
 14738                           	opt stack 0
 14739  00362A                     _GetNumber:
 14740                           	opt stack 22
 14741                           
 14742                           ;MISC.c: 457: unsigned char i =0;
 14743                           
 14744                           ; BSR set to: 0
 14745                           ;incstack = 0
 14746  00362A  0E00               	movlw	0
 14747  00362C  0100               	movlb	0	; () banked
 14748  00362E  6F8F               	movwf	GetNumber@i& (0+255),b
 14749                           
 14750                           ;MISC.c: 458: long temp =0;
 14751  003630  0E00               	movlw	0
 14752  003632  0100               	movlb	0	; () banked
 14753  003634  6F91               	movwf	GetNumber@temp& (0+255),b
 14754  003636  0E00               	movlw	0
 14755  003638  6F92               	movwf	(GetNumber@temp+1)& (0+255),b
 14756  00363A  0E00               	movlw	0
 14757  00363C  6F93               	movwf	(GetNumber@temp+2)& (0+255),b
 14758  00363E  0E00               	movlw	0
 14759  003640  6F94               	movwf	(GetNumber@temp+3)& (0+255),b
 14760                           
 14761                           ;MISC.c: 459: unsigned char negative =0;
 14762  003642  0E00               	movlw	0
 14763  003644  0100               	movlb	0	; () banked
 14764  003646  6F8D               	movwf	GetNumber@negative& (0+255),b
 14765                           
 14766                           ;MISC.c: 460: unsigned char tempCommaNumber = 1;
 14767  003648  0E01               	movlw	1
 14768  00364A  0100               	movlb	0	; () banked
 14769  00364C  6F8B               	movwf	GetNumber@tempCommaNumber& (0+255),b
 14770                           
 14771                           ;MISC.c: 461: unsigned char count =0;
 14772  00364E  0E00               	movlw	0
 14773  003650  0100               	movlb	0	; () banked
 14774  003652  6F8E               	movwf	GetNumber@count& (0+255),b
 14775                           
 14776                           ;MISC.c: 462: unsigned char Hex = 0;
 14777  003654  0E00               	movlw	0
 14778  003656  0100               	movlb	0	; () banked
 14779  003658  6F8C               	movwf	GetNumber@Hex& (0+255),b
 14780                           
 14781                           ;MISC.c: 463: unsigned char tempThis;
 14782                           ;MISC.c: 465: while(*This != 0)
 14783  00365A  D027               	goto	l8340
 14784  00365C                     l8326:
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;MISC.c: 466: {
 14788                           ;MISC.c: 467: if(*This == '0')
 14789  00365C  C081  FFD9         	movff	GetNumber@This,fsr2l
 14790  003660  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14791  003664  0E30               	movlw	48
 14792  003666  18DE               	xorwf	postinc2,w,c
 14793  003668  A4D8               	btfss	status,2,c
 14794  00366A  D019               	goto	l8336
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;MISC.c: 468: {
 14798                           ;MISC.c: 469: count++;
 14799  00366C  0100               	movlb	0	; () banked
 14800  00366E  2B8E               	incf	GetNumber@count& (0+255),f,b
 14801                           
 14802                           ;MISC.c: 470: This++;
 14803  003670  0100               	movlb	0	; () banked
 14804  003672  4B81               	infsnz	GetNumber@This& (0+255),f,b
 14805  003674  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;MISC.c: 471: if(*This == 'x' || *This == 'X')
 14809  003676  C081  FFD9         	movff	GetNumber@This,fsr2l
 14810  00367A  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14811  00367E  0E78               	movlw	120
 14812  003680  18DE               	xorwf	postinc2,w,c
 14813  003682  B4D8               	btfsc	status,2,c
 14814  003684  D008               	goto	l8334
 14815                           
 14816                           ; BSR set to: 0
 14817  003686  C081  FFD9         	movff	GetNumber@This,fsr2l
 14818  00368A  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14819  00368E  0E58               	movlw	88
 14820  003690  18DE               	xorwf	postinc2,w,c
 14821  003692  A4D8               	btfss	status,2,c
 14822  003694  D004               	goto	l8336
 14823  003696                     l8334:
 14824                           
 14825                           ; BSR set to: 0
 14826                           ;MISC.c: 472: {
 14827                           ;MISC.c: 473: Hex = 1;
 14828  003696  0E01               	movlw	1
 14829  003698  0100               	movlb	0	; () banked
 14830  00369A  6F8C               	movwf	GetNumber@Hex& (0+255),b
 14831                           
 14832                           ; BSR set to: 0
 14833  00369C  D000               	goto	l8336
 14834  00369E                     l8336:
 14835                           
 14836                           ; BSR set to: 0
 14837                           ;MISC.c: 474: }
 14838                           ;MISC.c: 475: }
 14839                           ;MISC.c: 476: count++;
 14840  00369E  0100               	movlb	0	; () banked
 14841  0036A0  2B8E               	incf	GetNumber@count& (0+255),f,b
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;MISC.c: 477: This++;
 14845  0036A2  0100               	movlb	0	; () banked
 14846  0036A4  4B81               	infsnz	GetNumber@This& (0+255),f,b
 14847  0036A6  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 14848  0036A8  D000               	goto	l8340
 14849  0036AA                     l8340:
 14850                           
 14851                           ; BSR set to: 0
 14852  0036AA  C081  FFD9         	movff	GetNumber@This,fsr2l
 14853  0036AE  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14854  0036B2  50DF               	movf	indf2,w,c
 14855  0036B4  A4D8               	btfss	status,2,c
 14856  0036B6  D7D2               	goto	l8326
 14857                           
 14858                           ; BSR set to: 0
 14859                           ;MISC.c: 478: }
 14860                           ;MISC.c: 479: This-=count;
 14861                           
 14862                           ; BSR set to: 0
 14863  0036B8  0100               	movlb	0	; () banked
 14864  0036BA  518E               	movf	GetNumber@count& (0+255),w,b
 14865  0036BC  0D01               	mullw	1
 14866  0036BE  50F3               	movf	prodl,w,c
 14867  0036C0  0100               	movlb	0	; () banked
 14868  0036C2  5F81               	subwf	GetNumber@This& (0+255),f,b
 14869  0036C4  50F4               	movf	prodh,w,c
 14870  0036C6  0100               	movlb	0	; () banked
 14871  0036C8  5B82               	subwfb	(GetNumber@This+1)& (0+255),f,b
 14872                           
 14873                           ; BSR set to: 0
 14874                           
 14875                           ;MISC.c: 481: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 14876  0036CA  D001               	goto	l8346
 14877                           
 14878                           ; BSR set to: 0
 14879  0036CC  D03B               	goto	L11
 14880  0036CE                     l8346:
 14881                           
 14882                           ; BSR set to: 0
 14883  0036CE  C081  FFD9         	movff	GetNumber@This,fsr2l
 14884  0036D2  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14885  0036D6  0E3D               	movlw	61
 14886  0036D8  18DE               	xorwf	postinc2,w,c
 14887  0036DA  B4D8               	btfsc	status,2,c
 14888  0036DC  D011               	goto	l8352
 14889                           
 14890                           ; BSR set to: 0
 14891  0036DE  C081  FFD9         	movff	GetNumber@This,fsr2l
 14892  0036E2  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14893  0036E6  0E2C               	movlw	44
 14894  0036E8  18DE               	xorwf	postinc2,w,c
 14895  0036EA  B4D8               	btfsc	status,2,c
 14896  0036EC  D009               	goto	l8352
 14897                           
 14898                           ; BSR set to: 0
 14899  0036EE  C081  FFD9         	movff	GetNumber@This,fsr2l
 14900  0036F2  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14901  0036F6  50DF               	movf	indf2,w,c
 14902  0036F8  B4D8               	btfsc	status,2,c
 14903  0036FA  D002               	goto	l8352
 14904  0036FC  D023               	goto	L11
 14905                           
 14906                           ; BSR set to: 0
 14907  0036FE  D000               	goto	l8352
 14908  003700                     l8352:
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;MISC.c: 485: }
 14912                           ;MISC.c: 486: if(*This == 0)
 14913  003700  C081  FFD9         	movff	GetNumber@This,fsr2l
 14914  003704  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14915  003708  50DF               	movf	indf2,w,c
 14916  00370A  A4D8               	btfss	status,2,c
 14917  00370C  D003               	goto	l8360
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;MISC.c: 487: {
 14921                           ;MISC.c: 488: return 1;
 14922  00370E  0E01               	movlw	1
 14923                           
 14924                           ; BSR set to: 0
 14925  003710  0012               	return	
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;MISC.c: 489: }
 14929  003712  D01D               	goto	l8368
 14930  003714                     l8360:
 14931                           
 14932                           ; BSR set to: 0
 14933                           ;MISC.c: 490: else if(*This != '=' || *This != ',')
 14934  003714  C081  FFD9         	movff	GetNumber@This,fsr2l
 14935  003718  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14936  00371C  0E3D               	movlw	61
 14937  00371E  18DE               	xorwf	postinc2,w,c
 14938  003720  A4D8               	btfss	status,2,c
 14939  003722  D008               	goto	l8364
 14940                           
 14941                           ; BSR set to: 0
 14942  003724  C081  FFD9         	movff	GetNumber@This,fsr2l
 14943  003728  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14944  00372C  0E2C               	movlw	44
 14945  00372E  18DE               	xorwf	postinc2,w,c
 14946  003730  B4D8               	btfsc	status,2,c
 14947  003732  D00D               	goto	l8368
 14948  003734                     l8364:
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;MISC.c: 491: {
 14952                           ;MISC.c: 492: if(tempCommaNumber < CommaNumber)
 14953  003734  0100               	movlb	0	; () banked
 14954  003736  5183               	movf	GetNumber@CommaNumber& (0+255),w,b
 14955  003738  0100               	movlb	0	; () banked
 14956  00373A  5D8B               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 14957  00373C  B0D8               	btfsc	status,0,c
 14958  00373E  D007               	goto	l8368
 14959                           
 14960                           ; BSR set to: 0
 14961                           ;MISC.c: 493: {
 14962                           ;MISC.c: 494: tempCommaNumber++;
 14963  003740  0100               	movlb	0	; () banked
 14964  003742  2B8B               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 14965  003744                     L11:
 14966                           
 14967                           ;MISC.c: 495: This++;
 14968  003744  0100               	movlb	0	; () banked
 14969  003746  4B81               	infsnz	GetNumber@This& (0+255),f,b
 14970  003748  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 14971                           
 14972                           ;MISC.c: 496: goto SCAN;
 14973  00374A  D7C1               	goto	l8346
 14974                           
 14975                           ; BSR set to: 0
 14976                           
 14977                           ; BSR set to: 0
 14978  00374C  D000               	goto	l8368
 14979  00374E                     l8368:
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;MISC.c: 497: }
 14983                           ;MISC.c: 498: }
 14984                           ;MISC.c: 499: if(*This == 0)
 14985  00374E  C081  FFD9         	movff	GetNumber@This,fsr2l
 14986  003752  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 14987  003756  50DF               	movf	indf2,w,c
 14988  003758  A4D8               	btfss	status,2,c
 14989  00375A  D002               	goto	l8374
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;MISC.c: 500: {
 14993                           ;MISC.c: 501: return 1;
 14994  00375C  0E01               	movlw	1
 14995                           
 14996                           ; BSR set to: 0
 14997  00375E  0012               	return	
 14998  003760                     l8374:
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;MISC.c: 502: }
 15002                           ;MISC.c: 503: This++;
 15003  003760  0100               	movlb	0	; () banked
 15004  003762  4B81               	infsnz	GetNumber@This& (0+255),f,b
 15005  003764  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;MISC.c: 504: if(*This == ' ')
 15009  003766  C081  FFD9         	movff	GetNumber@This,fsr2l
 15010  00376A  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15011  00376E  0E20               	movlw	32
 15012  003770  18DE               	xorwf	postinc2,w,c
 15013  003772  B4D8               	btfsc	status,2,c
 15014  003774  D142               	goto	l8462
 15015                           
 15016                           ; BSR set to: 0
 15017                           ;MISC.c: 509: else if (*This == '=' || *This == ',')
 15018                           
 15019                           ; BSR set to: 0
 15020                           
 15021                           ;MISC.c: 508: }
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;MISC.c: 505: {
 15025                           ;MISC.c: 506: This++;
 15026  003776  C081  FFD9         	movff	GetNumber@This,fsr2l
 15027  00377A  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15028  00377E  0E3D               	movlw	61
 15029  003780  18DE               	xorwf	postinc2,w,c
 15030  003782  B4D8               	btfsc	status,2,c
 15031  003784  D008               	goto	l8384
 15032                           
 15033                           ; BSR set to: 0
 15034  003786  C081  FFD9         	movff	GetNumber@This,fsr2l
 15035  00378A  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15036  00378E  0E2C               	movlw	44
 15037  003790  18DE               	xorwf	postinc2,w,c
 15038  003792  A4D8               	btfss	status,2,c
 15039  003794  D003               	goto	l8390
 15040  003796                     l8384:
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;MISC.c: 510: {
 15044                           ;MISC.c: 511: return 2;
 15045  003796  0E02               	movlw	2
 15046                           
 15047                           ; BSR set to: 0
 15048  003798  0012               	return	
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;MISC.c: 512: }
 15052  00379A  D133               	goto	l8464
 15053  00379C                     l8390:
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;MISC.c: 513: else if(*This == '-')
 15057  00379C  C081  FFD9         	movff	GetNumber@This,fsr2l
 15058  0037A0  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15059  0037A4  0E2D               	movlw	45
 15060  0037A6  18DE               	xorwf	postinc2,w,c
 15061  0037A8  A4D8               	btfss	status,2,c
 15062  0037AA  D004               	goto	l8396
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;MISC.c: 514: {
 15066                           ;MISC.c: 515: negative = 1;
 15067  0037AC  0E01               	movlw	1
 15068  0037AE  0100               	movlb	0	; () banked
 15069  0037B0  6F8D               	movwf	GetNumber@negative& (0+255),b
 15070  0037B2  D123               	goto	l8462
 15071  0037B4                     l8396:
 15072                           
 15073                           ; BSR set to: 0
 15074                           ;MISC.c: 519: else if(*This == 0)
 15075  0037B4  C081  FFD9         	movff	GetNumber@This,fsr2l
 15076  0037B8  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15077  0037BC  50DF               	movf	indf2,w,c
 15078  0037BE  A4D8               	btfss	status,2,c
 15079  0037C0  D120               	goto	l8464
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;MISC.c: 520: {
 15083                           ;MISC.c: 521: return 3;
 15084  0037C2  0E03               	movlw	3
 15085                           
 15086                           ; BSR set to: 0
 15087  0037C4  0012               	return	
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;MISC.c: 522: }
 15091                           ;MISC.c: 523: while(*This != 0 && *This != ' ')
 15092                           
 15093                           ; BSR set to: 0
 15094                           
 15095                           ; BSR set to: 0
 15096                           
 15097                           ; BSR set to: 0
 15098  0037C6  D11D               	goto	l8464
 15099  0037C8                     l8402:
 15100                           
 15101                           ; BSR set to: 0
 15102                           ;MISC.c: 524: {
 15103                           ;MISC.c: 525: if(!Hex)
 15104  0037C8  0100               	movlb	0	; () banked
 15105  0037CA  518C               	movf	GetNumber@Hex& (0+255),w,b
 15106  0037CC  0100               	movlb	0	; () banked
 15107  0037CE  A4D8               	btfss	status,2,c
 15108  0037D0  D05B               	goto	l8420
 15109                           
 15110                           ; BSR set to: 0
 15111                           ;MISC.c: 526: {
 15112                           ;MISC.c: 527: if(*This >=48 && *This <= 57)
 15113  0037D2  C081  FFD9         	movff	GetNumber@This,fsr2l
 15114  0037D6  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15115  0037DA  0E2F               	movlw	47
 15116  0037DC  64DF               	cpfsgt	indf2,c
 15117  0037DE  D10D               	goto	l8462
 15118                           
 15119                           ; BSR set to: 0
 15120  0037E0  C081  FFD9         	movff	GetNumber@This,fsr2l
 15121  0037E4  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15122  0037E8  0E3A               	movlw	58
 15123  0037EA  60DF               	cpfslt	indf2,c
 15124  0037EC  D106               	goto	l8462
 15125                           
 15126                           ; BSR set to: 0
 15127                           ;MISC.c: 528: {
 15128                           ;MISC.c: 529: temp = temp * 10;
 15129  0037EE  C091  F075         	movff	GetNumber@temp,___lmul@multiplier
 15130  0037F2  C092  F076         	movff	GetNumber@temp+1,___lmul@multiplier+1
 15131  0037F6  C093  F077         	movff	GetNumber@temp+2,___lmul@multiplier+2
 15132  0037FA  C094  F078         	movff	GetNumber@temp+3,___lmul@multiplier+3
 15133  0037FE  0E0A               	movlw	10
 15134  003800  0100               	movlb	0	; () banked
 15135  003802  6F79               	movwf	___lmul@multiplicand& (0+255),b
 15136  003804  0E00               	movlw	0
 15137  003806  6F7A               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15138  003808  0E00               	movlw	0
 15139  00380A  6F7B               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15140  00380C  0E00               	movlw	0
 15141  00380E  6F7C               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15142  003810  EC44  F037         	call	___lmul	;wreg free
 15143  003814  C075  F091         	movff	?___lmul,GetNumber@temp
 15144  003818  C076  F092         	movff	?___lmul+1,GetNumber@temp+1
 15145  00381C  C077  F093         	movff	?___lmul+2,GetNumber@temp+2
 15146  003820  C078  F094         	movff	?___lmul+3,GetNumber@temp+3
 15147                           
 15148                           ;MISC.c: 530: temp += *This - 48;
 15149  003824  C081  FFD9         	movff	GetNumber@This,fsr2l
 15150  003828  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15151  00382C  50DF               	movf	indf2,w,c
 15152  00382E  0100               	movlb	0	; () banked
 15153  003830  6F86               	movwf	??_GetNumber& (0+255),b
 15154  003832  0ED0               	movlw	208
 15155  003834  0100               	movlb	0	; () banked
 15156  003836  2586               	addwf	??_GetNumber& (0+255),w,b
 15157  003838  0100               	movlb	0	; () banked
 15158  00383A  6F87               	movwf	(??_GetNumber+1)& (0+255),b
 15159  00383C  0100               	movlb	0	; () banked
 15160  00383E  6B88               	clrf	(??_GetNumber+2)& (0+255),b
 15161  003840  0EFF               	movlw	255
 15162  003842  2388               	addwfc	(??_GetNumber+2)& (0+255),f,b
 15163  003844  0100               	movlb	0	; () banked
 15164  003846  6B89               	clrf	(??_GetNumber+3)& (0+255),b
 15165  003848  0100               	movlb	0	; () banked
 15166  00384A  BF88               	btfsc	(??_GetNumber+2)& (0+255),7,b
 15167  00384C  0789               	decf	(??_GetNumber+3)& (0+255),f,b
 15168  00384E  0100               	movlb	0	; () banked
 15169  003850  5189               	movf	(??_GetNumber+3)& (0+255),w,b
 15170  003852  0100               	movlb	0	; () banked
 15171  003854  6F8A               	movwf	(??_GetNumber+4)& (0+255),b
 15172  003856  0100               	movlb	0	; () banked
 15173  003858  5187               	movf	(??_GetNumber+1)& (0+255),w,b
 15174  00385A  0100               	movlb	0	; () banked
 15175  00385C  2791               	addwf	GetNumber@temp& (0+255),f,b
 15176  00385E  0100               	movlb	0	; () banked
 15177  003860  5188               	movf	(??_GetNumber+2)& (0+255),w,b
 15178  003862  0100               	movlb	0	; () banked
 15179  003864  2392               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 15180  003866  0100               	movlb	0	; () banked
 15181  003868  5189               	movf	(??_GetNumber+3)& (0+255),w,b
 15182  00386A  0100               	movlb	0	; () banked
 15183  00386C  2393               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 15184  00386E  0100               	movlb	0	; () banked
 15185  003870  518A               	movf	(??_GetNumber+4)& (0+255),w,b
 15186  003872  0100               	movlb	0	; () banked
 15187  003874  2394               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 15188                           
 15189                           ; BSR set to: 0
 15190                           ;MISC.c: 531: i++;
 15191  003876  0100               	movlb	0	; () banked
 15192  003878  2B8F               	incf	GetNumber@i& (0+255),f,b
 15193  00387A                     l8414:
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;MISC.c: 532: if(i>32)
 15197  00387A  0E20               	movlw	32
 15198  00387C  0100               	movlb	0	; () banked
 15199  00387E  658F               	cpfsgt	GetNumber@i& (0+255),b
 15200  003880  D0BC               	goto	l8462
 15201                           
 15202                           ; BSR set to: 0
 15203                           ;MISC.c: 533: {
 15204                           ;MISC.c: 534: return 4;
 15205  003882  0E04               	movlw	4
 15206                           
 15207                           ; BSR set to: 0
 15208  003884  0012               	return	
 15209                           
 15210                           ; BSR set to: 0
 15211                           ;MISC.c: 535: }
 15212                           ;MISC.c: 536: }
 15213                           ;MISC.c: 537: }
 15214                           
 15215                           ; BSR set to: 0
 15216  003886  D0B9               	goto	l8462
 15217  003888                     l8420:
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;MISC.c: 538: else
 15221                           ;MISC.c: 539: {
 15222                           ;MISC.c: 540: negative = 0;
 15223  003888  0E00               	movlw	0
 15224  00388A  0100               	movlb	0	; () banked
 15225  00388C  6F8D               	movwf	GetNumber@negative& (0+255),b
 15226                           
 15227                           ;MISC.c: 541: while(*This != 'x' && *This != 'X')
 15228  00388E  D004               	goto	l8424
 15229  003890                     l8422:
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;MISC.c: 542: {
 15233                           ;MISC.c: 543: This++;
 15234  003890  0100               	movlb	0	; () banked
 15235  003892  4B81               	infsnz	GetNumber@This& (0+255),f,b
 15236  003894  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 15237  003896  D000               	goto	l8424
 15238  003898                     l8424:
 15239                           
 15240                           ; BSR set to: 0
 15241  003898  C081  FFD9         	movff	GetNumber@This,fsr2l
 15242  00389C  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15243  0038A0  0E78               	movlw	120
 15244  0038A2  18DE               	xorwf	postinc2,w,c
 15245  0038A4  B4D8               	btfsc	status,2,c
 15246  0038A6  D00A               	goto	l8428
 15247                           
 15248                           ; BSR set to: 0
 15249  0038A8  C081  FFD9         	movff	GetNumber@This,fsr2l
 15250  0038AC  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15251  0038B0  0E58               	movlw	88
 15252  0038B2  18DE               	xorwf	postinc2,w,c
 15253  0038B4  B4D8               	btfsc	status,2,c
 15254  0038B6  D002               	goto	l8428
 15255  0038B8  D7EB               	goto	l8422
 15256                           
 15257                           ; BSR set to: 0
 15258  0038BA  D000               	goto	l8428
 15259  0038BC                     l8428:
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;MISC.c: 544: }
 15263                           ;MISC.c: 545: This++;
 15264  0038BC  0100               	movlb	0	; () banked
 15265  0038BE  4B81               	infsnz	GetNumber@This& (0+255),f,b
 15266  0038C0  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;MISC.c: 546: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 15270  0038C2  C081  FFD9         	movff	GetNumber@This,fsr2l
 15271  0038C6  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15272  0038CA  0E2F               	movlw	47
 15273  0038CC  64DF               	cpfsgt	indf2,c
 15274  0038CE  D008               	goto	l8434
 15275                           
 15276                           ; BSR set to: 0
 15277  0038D0  C081  FFD9         	movff	GetNumber@This,fsr2l
 15278  0038D4  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15279  0038D8  0E39               	movlw	57
 15280  0038DA  64DF               	cpfsgt	indf2,c
 15281  0038DC  D01F               	goto	l8442
 15282  0038DE  D000               	goto	l8434
 15283  0038E0                     l8434:
 15284                           
 15285                           ; BSR set to: 0
 15286  0038E0  C081  FFD9         	movff	GetNumber@This,fsr2l
 15287  0038E4  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15288  0038E8  0E40               	movlw	64
 15289  0038EA  64DF               	cpfsgt	indf2,c
 15290  0038EC  D008               	goto	l8438
 15291                           
 15292                           ; BSR set to: 0
 15293  0038EE  C081  FFD9         	movff	GetNumber@This,fsr2l
 15294  0038F2  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15295  0038F6  0E46               	movlw	70
 15296  0038F8  64DF               	cpfsgt	indf2,c
 15297  0038FA  D010               	goto	l8442
 15298  0038FC  D000               	goto	l8438
 15299  0038FE                     l8438:
 15300                           
 15301                           ; BSR set to: 0
 15302  0038FE  C081  FFD9         	movff	GetNumber@This,fsr2l
 15303  003902  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15304  003906  0E60               	movlw	96
 15305  003908  64DF               	cpfsgt	indf2,c
 15306  00390A  D077               	goto	l8462
 15307                           
 15308                           ; BSR set to: 0
 15309  00390C  C081  FFD9         	movff	GetNumber@This,fsr2l
 15310  003910  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15311  003914  0E67               	movlw	103
 15312  003916  60DF               	cpfslt	indf2,c
 15313  003918  D070               	goto	l8462
 15314  00391A  D000               	goto	l8442
 15315  00391C                     l8442:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;MISC.c: 547: {
 15319                           ;MISC.c: 548: temp <<= 4;
 15320  00391C  0100               	movlb	0	; () banked
 15321  00391E  0E04               	movlw	4
 15322  003920                     u9415:
 15323  003920  90D8               	bcf	status,0,c
 15324  003922  3791               	rlcf	GetNumber@temp& (0+255),f,b
 15325  003924  3792               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 15326  003926  3793               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 15327  003928  3794               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 15328  00392A  2EE8               	decfsz	wreg,f,c
 15329  00392C  D7F9               	goto	u9415
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;MISC.c: 549: tempThis = *This;
 15333  00392E  C081  FFD9         	movff	GetNumber@This,fsr2l
 15334  003932  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15335  003936  50DF               	movf	indf2,w,c
 15336  003938  0100               	movlb	0	; () banked
 15337  00393A  6F90               	movwf	GetNumber@tempThis& (0+255),b
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;MISC.c: 550: if(IsLetter(tempThis))
 15341  00393C  0100               	movlb	0	; () banked
 15342  00393E  5190               	movf	GetNumber@tempThis& (0+255),w,b
 15343  003940  EC65  F03B         	call	_IsLetter
 15344  003944  0900               	iorlw	0
 15345  003946  B4D8               	btfsc	status,2,c
 15346  003948  D029               	goto	l8452
 15347                           
 15348                           ;MISC.c: 551: {
 15349                           ;MISC.c: 552: lowercaseChar(&tempThis);
 15350  00394A  0E90               	movlw	low GetNumber@tempThis
 15351  00394C  0100               	movlb	0	; () banked
 15352  00394E  6F75               	movwf	lowercaseChar@Input& (0+255),b
 15353  003950  0E00               	movlw	high GetNumber@tempThis
 15354  003952  0100               	movlb	0	; () banked
 15355  003954  6F76               	movwf	(lowercaseChar@Input+1)& (0+255),b
 15356  003956  EC10  F03B         	call	_lowercaseChar	;wreg free
 15357                           
 15358                           ;MISC.c: 553: temp += (tempThis - 87);
 15359  00395A  0EA9               	movlw	169
 15360  00395C  0100               	movlb	0	; () banked
 15361  00395E  2590               	addwf	GetNumber@tempThis& (0+255),w,b
 15362  003960  0100               	movlb	0	; () banked
 15363  003962  6F86               	movwf	??_GetNumber& (0+255),b
 15364  003964  0100               	movlb	0	; () banked
 15365  003966  6B87               	clrf	(??_GetNumber+1)& (0+255),b
 15366  003968  0EFF               	movlw	255
 15367  00396A  2387               	addwfc	(??_GetNumber+1)& (0+255),f,b
 15368  00396C  0100               	movlb	0	; () banked
 15369  00396E  6B88               	clrf	(??_GetNumber+2)& (0+255),b
 15370  003970  0100               	movlb	0	; () banked
 15371  003972  BF87               	btfsc	(??_GetNumber+1)& (0+255),7,b
 15372  003974  0788               	decf	(??_GetNumber+2)& (0+255),f,b
 15373  003976  0100               	movlb	0	; () banked
 15374  003978  5188               	movf	(??_GetNumber+2)& (0+255),w,b
 15375  00397A  0100               	movlb	0	; () banked
 15376  00397C  6F89               	movwf	(??_GetNumber+3)& (0+255),b
 15377  00397E  0100               	movlb	0	; () banked
 15378  003980  5186               	movf	??_GetNumber& (0+255),w,b
 15379  003982  0100               	movlb	0	; () banked
 15380  003984  2791               	addwf	GetNumber@temp& (0+255),f,b
 15381  003986  0100               	movlb	0	; () banked
 15382  003988  5187               	movf	(??_GetNumber+1)& (0+255),w,b
 15383  00398A  0100               	movlb	0	; () banked
 15384  00398C  2392               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 15385  00398E  0100               	movlb	0	; () banked
 15386  003990  5188               	movf	(??_GetNumber+2)& (0+255),w,b
 15387  003992  0100               	movlb	0	; () banked
 15388  003994  2393               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 15389  003996  0100               	movlb	0	; () banked
 15390  003998  5189               	movf	(??_GetNumber+3)& (0+255),w,b
 15391  00399A  D027               	goto	L12
 15392  00399C                     l8452:
 15393                           
 15394                           ;MISC.c: 555: else
 15395                           ;MISC.c: 556: {
 15396                           ;MISC.c: 557: temp += (*This - 48);
 15397  00399C  C081  FFD9         	movff	GetNumber@This,fsr2l
 15398  0039A0  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15399  0039A4  50DF               	movf	indf2,w,c
 15400  0039A6  0100               	movlb	0	; () banked
 15401  0039A8  6F86               	movwf	??_GetNumber& (0+255),b
 15402  0039AA  0ED0               	movlw	208
 15403  0039AC  0100               	movlb	0	; () banked
 15404  0039AE  2586               	addwf	??_GetNumber& (0+255),w,b
 15405  0039B0  0100               	movlb	0	; () banked
 15406  0039B2  6F87               	movwf	(??_GetNumber+1)& (0+255),b
 15407  0039B4  0100               	movlb	0	; () banked
 15408  0039B6  6B88               	clrf	(??_GetNumber+2)& (0+255),b
 15409  0039B8  0EFF               	movlw	255
 15410  0039BA  2388               	addwfc	(??_GetNumber+2)& (0+255),f,b
 15411  0039BC  0100               	movlb	0	; () banked
 15412  0039BE  6B89               	clrf	(??_GetNumber+3)& (0+255),b
 15413  0039C0  0100               	movlb	0	; () banked
 15414  0039C2  BF88               	btfsc	(??_GetNumber+2)& (0+255),7,b
 15415  0039C4  0789               	decf	(??_GetNumber+3)& (0+255),f,b
 15416  0039C6  0100               	movlb	0	; () banked
 15417  0039C8  5189               	movf	(??_GetNumber+3)& (0+255),w,b
 15418  0039CA  0100               	movlb	0	; () banked
 15419  0039CC  6F8A               	movwf	(??_GetNumber+4)& (0+255),b
 15420  0039CE  0100               	movlb	0	; () banked
 15421  0039D0  5187               	movf	(??_GetNumber+1)& (0+255),w,b
 15422  0039D2  0100               	movlb	0	; () banked
 15423  0039D4  2791               	addwf	GetNumber@temp& (0+255),f,b
 15424  0039D6  0100               	movlb	0	; () banked
 15425  0039D8  5188               	movf	(??_GetNumber+2)& (0+255),w,b
 15426  0039DA  0100               	movlb	0	; () banked
 15427  0039DC  2392               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 15428  0039DE  0100               	movlb	0	; () banked
 15429  0039E0  5189               	movf	(??_GetNumber+3)& (0+255),w,b
 15430  0039E2  0100               	movlb	0	; () banked
 15431  0039E4  2393               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 15432  0039E6  0100               	movlb	0	; () banked
 15433  0039E8  518A               	movf	(??_GetNumber+4)& (0+255),w,b
 15434  0039EA                     L12:
 15435  0039EA  0100               	movlb	0	; () banked
 15436  0039EC  2394               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 15437  0039EE  D000               	goto	l8454
 15438  0039F0                     l8454:
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;MISC.c: 558: }
 15442                           ;MISC.c: 559: i++;
 15443  0039F0  0100               	movlb	0	; () banked
 15444  0039F2  2B8F               	incf	GetNumber@i& (0+255),f,b
 15445  0039F4  D742               	goto	l8414
 15446                           
 15447                           ; BSR set to: 0
 15448                           
 15449                           ; BSR set to: 0
 15450                           ;MISC.c: 561: {
 15451                           ;MISC.c: 562: return 4;
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;MISC.c: 560: if(i>32)
 15455  0039F6  0012               	return	
 15456                           
 15457                           ; BSR set to: 0
 15458                           
 15459                           ; BSR set to: 0
 15460  0039F8  D000               	goto	l8462
 15461  0039FA                     l8462:
 15462                           
 15463                           ; BSR set to: 0
 15464                           ;MISC.c: 563: }
 15465                           ;MISC.c: 564: }
 15466                           ;MISC.c: 565: }
 15467                           ;MISC.c: 566: This++;
 15468  0039FA  0100               	movlb	0	; () banked
 15469  0039FC  4B81               	infsnz	GetNumber@This& (0+255),f,b
 15470  0039FE  2B82               	incf	(GetNumber@This+1)& (0+255),f,b
 15471  003A00  D000               	goto	l8464
 15472  003A02                     l8464:
 15473                           
 15474                           ; BSR set to: 0
 15475  003A02  C081  FFD9         	movff	GetNumber@This,fsr2l
 15476  003A06  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15477  003A0A  50DF               	movf	indf2,w,c
 15478  003A0C  B4D8               	btfsc	status,2,c
 15479  003A0E  D00A               	goto	l8468
 15480                           
 15481                           ; BSR set to: 0
 15482  003A10  C081  FFD9         	movff	GetNumber@This,fsr2l
 15483  003A14  C082  FFDA         	movff	GetNumber@This+1,fsr2h
 15484  003A18  0E20               	movlw	32
 15485  003A1A  18DE               	xorwf	postinc2,w,c
 15486  003A1C  B4D8               	btfsc	status,2,c
 15487  003A1E  D002               	goto	l8468
 15488  003A20  D6D3               	goto	l8402
 15489                           
 15490                           ; BSR set to: 0
 15491  003A22  D000               	goto	l8468
 15492  003A24                     l8468:
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;MISC.c: 567: }
 15496                           ;MISC.c: 568: if(negative)
 15497  003A24  0100               	movlb	0	; () banked
 15498  003A26  518D               	movf	GetNumber@negative& (0+255),w,b
 15499  003A28  0100               	movlb	0	; () banked
 15500  003A2A  B4D8               	btfsc	status,2,c
 15501  003A2C  D00A               	goto	l8472
 15502                           
 15503                           ; BSR set to: 0
 15504                           ;MISC.c: 569: {
 15505                           ;MISC.c: 570: temp = (temp * -1);
 15506  003A2E  0100               	movlb	0	; () banked
 15507  003A30  1F94               	comf	(GetNumber@temp+3)& (0+255),f,b
 15508  003A32  1F93               	comf	(GetNumber@temp+2)& (0+255),f,b
 15509  003A34  1F92               	comf	(GetNumber@temp+1)& (0+255),f,b
 15510  003A36  6D91               	negf	GetNumber@temp& (0+255),b
 15511  003A38  0E00               	movlw	0
 15512  003A3A  2392               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 15513  003A3C  2393               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 15514  003A3E  2394               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 15515  003A40  D000               	goto	l8472
 15516  003A42                     l8472:
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;MISC.c: 571: }
 15520                           ;MISC.c: 572: *result = temp;
 15521  003A42  C084  FFD9         	movff	GetNumber@result,fsr2l
 15522  003A46  C085  FFDA         	movff	GetNumber@result+1,fsr2h
 15523  003A4A  C091  FFDE         	movff	GetNumber@temp,postinc2
 15524  003A4E  C092  FFDE         	movff	GetNumber@temp+1,postinc2
 15525  003A52  C093  FFDE         	movff	GetNumber@temp+2,postinc2
 15526  003A56  C094  FFDE         	movff	GetNumber@temp+3,postinc2
 15527                           
 15528                           ; BSR set to: 0
 15529                           ;MISC.c: 573: return 0;
 15530  003A5A  0E00               	movlw	0
 15531  003A5C  0012               	return	
 15532                           
 15533                           ; BSR set to: 0
 15534                           
 15535                           ; BSR set to: 0
 15536  003A5E  0012               	return		;funcret
 15537  003A60                     __end_of_GetNumber:
 15538                           	opt stack 0
 15539                           tblptru	equ	0xFF8
 15540                           tblptrh	equ	0xFF7
 15541                           tblptrl	equ	0xFF6
 15542                           tablat	equ	0xFF5
 15543                           prodh	equ	0xFF4
 15544                           prodl	equ	0xFF3
 15545                           intcon	equ	0xFF2
 15546                           indf0	equ	0xFEF
 15547                           postinc0	equ	0xFEE
 15548                           fsr0h	equ	0xFEA
 15549                           fsr0l	equ	0xFE9
 15550                           wreg	equ	0xFE8
 15551                           indf1	equ	0xFE7
 15552                           postdec1	equ	0xFE5
 15553                           fsr1h	equ	0xFE2
 15554                           fsr1l	equ	0xFE1
 15555                           indf2	equ	0xFDF
 15556                           postinc2	equ	0xFDE
 15557                           fsr2h	equ	0xFDA
 15558                           fsr2l	equ	0xFD9
 15559                           status	equ	0xFD8
 15560                           
 15561 ;; *************** function _lowercaseChar *****************
 15562 ;; Defined at:
 15563 ;;		line 347 in file "MISC.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  Input           2   21[BANK0 ] PTR unsigned char 
 15566 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 15567 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;		None               void
 15572 ;; Registers used:
 15573 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15581 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15582 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15583 ;;Total ram usage:        3 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    6
 15586 ;; This function calls:
 15587 ;;		Nothing
 15588 ;; This function is called by:
 15589 ;;		_StringMatchCaseInsensitive
 15590 ;;		_StringContainsCaseInsensitive
 15591 ;;		_GetNumber
 15592 ;; This function uses a non-reentrant model
 15593 ;;
 15594                           
 15595                           	psect	text26
 15596  007620                     __ptext26:
 15597                           	opt stack 0
 15598  007620                     _lowercaseChar:
 15599                           	opt stack 22
 15600                           
 15601                           ;MISC.c: 349: if((*Input >= 65) && (*Input <= 90 ))
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;incstack = 0
 15605  007620  C075  FFD9         	movff	lowercaseChar@Input,fsr2l
 15606  007624  C076  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 15607  007628  0E40               	movlw	64
 15608  00762A  64DF               	cpfsgt	indf2,c
 15609  00762C  0012               	return	
 15610  00762E  C075  FFD9         	movff	lowercaseChar@Input,fsr2l
 15611  007632  C076  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 15612  007636  0E5B               	movlw	91
 15613  007638  60DF               	cpfslt	indf2,c
 15614  00763A  0012               	return	
 15615                           
 15616                           ;MISC.c: 350: {
 15617                           ;MISC.c: 351: *Input += 32;
 15618  00763C  C075  FFD9         	movff	lowercaseChar@Input,fsr2l
 15619  007640  C076  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 15620  007644  0E20               	movlw	32
 15621  007646  26DF               	addwf	indf2,f,c
 15622  007648  0012               	return	
 15623  00764A  0012               	return		;funcret
 15624  00764C                     __end_of_lowercaseChar:
 15625                           	opt stack 0
 15626                           tblptru	equ	0xFF8
 15627                           tblptrh	equ	0xFF7
 15628                           tblptrl	equ	0xFF6
 15629                           tablat	equ	0xFF5
 15630                           prodh	equ	0xFF4
 15631                           prodl	equ	0xFF3
 15632                           intcon	equ	0xFF2
 15633                           indf0	equ	0xFEF
 15634                           postinc0	equ	0xFEE
 15635                           fsr0h	equ	0xFEA
 15636                           fsr0l	equ	0xFE9
 15637                           wreg	equ	0xFE8
 15638                           indf1	equ	0xFE7
 15639                           postdec1	equ	0xFE5
 15640                           fsr1h	equ	0xFE2
 15641                           fsr1l	equ	0xFE1
 15642                           indf2	equ	0xFDF
 15643                           postinc2	equ	0xFDE
 15644                           fsr2h	equ	0xFDA
 15645                           fsr2l	equ	0xFD9
 15646                           status	equ	0xFD8
 15647                           
 15648 ;; *************** function ___lmul *****************
 15649 ;; Defined at:
 15650 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 15651 ;; Parameters:    Size  Location     Type
 15652 ;;  multiplier      4   21[BANK0 ] unsigned long 
 15653 ;;  multiplicand    4   25[BANK0 ] unsigned long 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;  product         4   29[BANK0 ] unsigned long 
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  4   21[BANK0 ] unsigned long 
 15658 ;; Registers used:
 15659 ;;		wreg, status,2, status,0
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15665 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15668 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15669 ;;Total ram usage:       12 bytes
 15670 ;; Hardware stack levels used:    1
 15671 ;; Hardware stack levels required when called:    6
 15672 ;; This function calls:
 15673 ;;		Nothing
 15674 ;; This function is called by:
 15675 ;;		_GetNumber
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679                           	psect	text27
 15680  006E88                     __ptext27:
 15681                           	opt stack 0
 15682  006E88                     ___lmul:
 15683                           	opt stack 22
 15684                           
 15685                           ;incstack = 0
 15686  006E88  0E00               	movlw	0
 15687  006E8A  0100               	movlb	0	; () banked
 15688  006E8C  6F7D               	movwf	___lmul@product& (0+255),b
 15689  006E8E  0E00               	movlw	0
 15690  006E90  6F7E               	movwf	(___lmul@product+1)& (0+255),b
 15691  006E92  0E00               	movlw	0
 15692  006E94  6F7F               	movwf	(___lmul@product+2)& (0+255),b
 15693  006E96  0E00               	movlw	0
 15694  006E98  6F80               	movwf	(___lmul@product+3)& (0+255),b
 15695  006E9A  D000               	goto	l7998
 15696  006E9C                     l7998:
 15697                           
 15698                           ; BSR set to: 0
 15699  006E9C  0100               	movlb	0	; () banked
 15700  006E9E  A175               	btfss	___lmul@multiplier& (0+255),0,b
 15701  006EA0  D011               	goto	l8002
 15702                           
 15703                           ; BSR set to: 0
 15704  006EA2  0100               	movlb	0	; () banked
 15705  006EA4  5179               	movf	___lmul@multiplicand& (0+255),w,b
 15706  006EA6  0100               	movlb	0	; () banked
 15707  006EA8  277D               	addwf	___lmul@product& (0+255),f,b
 15708  006EAA  0100               	movlb	0	; () banked
 15709  006EAC  517A               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 15710  006EAE  0100               	movlb	0	; () banked
 15711  006EB0  237E               	addwfc	(___lmul@product+1)& (0+255),f,b
 15712  006EB2  0100               	movlb	0	; () banked
 15713  006EB4  517B               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 15714  006EB6  0100               	movlb	0	; () banked
 15715  006EB8  237F               	addwfc	(___lmul@product+2)& (0+255),f,b
 15716  006EBA  0100               	movlb	0	; () banked
 15717  006EBC  517C               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 15718  006EBE  0100               	movlb	0	; () banked
 15719  006EC0  2380               	addwfc	(___lmul@product+3)& (0+255),f,b
 15720  006EC2  D000               	goto	l8002
 15721  006EC4                     l8002:
 15722                           
 15723                           ; BSR set to: 0
 15724  006EC4  0100               	movlb	0	; () banked
 15725  006EC6  90D8               	bcf	status,0,c
 15726  006EC8  3779               	rlcf	___lmul@multiplicand& (0+255),f,b
 15727  006ECA  377A               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 15728  006ECC  377B               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 15729  006ECE  377C               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 15730                           
 15731                           ; BSR set to: 0
 15732  006ED0  0100               	movlb	0	; () banked
 15733  006ED2  90D8               	bcf	status,0,c
 15734  006ED4  3378               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 15735  006ED6  3377               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 15736  006ED8  3376               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 15737  006EDA  3375               	rrcf	___lmul@multiplier& (0+255),f,b
 15738  006EDC  0100               	movlb	0	; () banked
 15739  006EDE  5175               	movf	___lmul@multiplier& (0+255),w,b
 15740  006EE0  0100               	movlb	0	; () banked
 15741  006EE2  1176               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 15742  006EE4  0100               	movlb	0	; () banked
 15743  006EE6  1177               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 15744  006EE8  0100               	movlb	0	; () banked
 15745  006EEA  1178               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 15746  006EEC  A4D8               	btfss	status,2,c
 15747  006EEE  D7D6               	goto	l7998
 15748                           
 15749                           ; BSR set to: 0
 15750  006EF0  C07D  F075         	movff	___lmul@product,?___lmul
 15751  006EF4  C07E  F076         	movff	___lmul@product+1,?___lmul+1
 15752  006EF8  C07F  F077         	movff	___lmul@product+2,?___lmul+2
 15753  006EFC  C080  F078         	movff	___lmul@product+3,?___lmul+3
 15754                           
 15755                           ; BSR set to: 0
 15756  006F00  0012               	return		;funcret
 15757  006F02                     __end_of___lmul:
 15758                           	opt stack 0
 15759                           tblptru	equ	0xFF8
 15760                           tblptrh	equ	0xFF7
 15761                           tblptrl	equ	0xFF6
 15762                           tablat	equ	0xFF5
 15763                           prodh	equ	0xFF4
 15764                           prodl	equ	0xFF3
 15765                           intcon	equ	0xFF2
 15766                           indf0	equ	0xFEF
 15767                           postinc0	equ	0xFEE
 15768                           fsr0h	equ	0xFEA
 15769                           fsr0l	equ	0xFE9
 15770                           wreg	equ	0xFE8
 15771                           indf1	equ	0xFE7
 15772                           postdec1	equ	0xFE5
 15773                           fsr1h	equ	0xFE2
 15774                           fsr1l	equ	0xFE1
 15775                           indf2	equ	0xFDF
 15776                           postinc2	equ	0xFDE
 15777                           fsr2h	equ	0xFDA
 15778                           fsr2l	equ	0xFD9
 15779                           status	equ	0xFD8
 15780                           
 15781 ;; *************** function _IsLetter *****************
 15782 ;; Defined at:
 15783 ;;		line 97 in file "MISC.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;  data            1    wreg     unsigned char 
 15786 ;; Auto vars:     Size  Location     Type
 15787 ;;  data            1   21[BANK0 ] unsigned char 
 15788 ;; Return value:  Size  Location     Type
 15789 ;;                  1    wreg      unsigned char 
 15790 ;; Registers used:
 15791 ;;		wreg, status,2, status,0
 15792 ;; Tracked objects:
 15793 ;;		On entry : 0/0
 15794 ;;		On exit  : 0/0
 15795 ;;		Unchanged: 0/0
 15796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;Total ram usage:        1 bytes
 15802 ;; Hardware stack levels used:    1
 15803 ;; Hardware stack levels required when called:    6
 15804 ;; This function calls:
 15805 ;;		Nothing
 15806 ;; This function is called by:
 15807 ;;		_GetNumber
 15808 ;; This function uses a non-reentrant model
 15809 ;;
 15810                           
 15811                           	psect	text28
 15812  0076CA                     __ptext28:
 15813                           	opt stack 0
 15814  0076CA                     _IsLetter:
 15815                           	opt stack 22
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;incstack = 0
 15819                           ;IsLetter@data stored from wreg
 15820  0076CA  0100               	movlb	0	; () banked
 15821  0076CC  6F75               	movwf	IsLetter@data& (0+255),b
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;MISC.c: 99: if(data >= 65 && data <= 90)
 15825  0076CE  0E40               	movlw	64
 15826  0076D0  0100               	movlb	0	; () banked
 15827  0076D2  6575               	cpfsgt	IsLetter@data& (0+255),b
 15828  0076D4  D006               	goto	l7606
 15829                           
 15830                           ; BSR set to: 0
 15831  0076D6  0E5B               	movlw	91
 15832  0076D8  0100               	movlb	0	; () banked
 15833  0076DA  6175               	cpfslt	IsLetter@data& (0+255),b
 15834  0076DC  D002               	goto	l7606
 15835                           
 15836                           ; BSR set to: 0
 15837                           ;MISC.c: 100: {
 15838                           ;MISC.c: 101: return 1;
 15839  0076DE  0E01               	movlw	1
 15840                           
 15841                           ; BSR set to: 0
 15842  0076E0  0012               	return	
 15843  0076E2                     l7606:
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;MISC.c: 102: }
 15847                           ;MISC.c: 103: return 0;
 15848  0076E2  0E00               	movlw	0
 15849  0076E4  0012               	return	
 15850                           
 15851                           ; BSR set to: 0
 15852                           
 15853                           ; BSR set to: 0
 15854  0076E6  0012               	return		;funcret
 15855  0076E8                     __end_of_IsLetter:
 15856                           	opt stack 0
 15857                           tblptru	equ	0xFF8
 15858                           tblptrh	equ	0xFF7
 15859                           tblptrl	equ	0xFF6
 15860                           tablat	equ	0xFF5
 15861                           prodh	equ	0xFF4
 15862                           prodl	equ	0xFF3
 15863                           intcon	equ	0xFF2
 15864                           indf0	equ	0xFEF
 15865                           postinc0	equ	0xFEE
 15866                           fsr0h	equ	0xFEA
 15867                           fsr0l	equ	0xFE9
 15868                           wreg	equ	0xFE8
 15869                           indf1	equ	0xFE7
 15870                           postdec1	equ	0xFE5
 15871                           fsr1h	equ	0xFE2
 15872                           fsr1l	equ	0xFE1
 15873                           indf2	equ	0xFDF
 15874                           postinc2	equ	0xFDE
 15875                           fsr2h	equ	0xFDA
 15876                           fsr2l	equ	0xFD9
 15877                           status	equ	0xFD8
 15878                           
 15879 ;; *************** function _EncodeNEC *****************
 15880 ;; Defined at:
 15881 ;;		line 527 in file "IR.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;  address         1    wreg     unsigned char 
 15884 ;;  command         1   25[BANK0 ] unsigned char 
 15885 ;; Auto vars:     Size  Location     Type
 15886 ;;  address         1   65[BANK0 ] unsigned char 
 15887 ;;  temp4           4   61[BANK0 ] unsigned long 
 15888 ;;  temp3           4   57[BANK0 ] unsigned long 
 15889 ;;  temp2           4   53[BANK0 ] unsigned long 
 15890 ;;  temp1           4   49[BANK0 ] unsigned long 
 15891 ;; Return value:  Size  Location     Type
 15892 ;;                  4   25[BANK0 ] unsigned long 
 15893 ;; Registers used:
 15894 ;;		wreg, status,2, status,0, cstack
 15895 ;; Tracked objects:
 15896 ;;		On entry : 0/0
 15897 ;;		On exit  : 0/0
 15898 ;;		Unchanged: 0/0
 15899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15900 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15901 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;Total ram usage:       41 bytes
 15905 ;; Hardware stack levels used:    1
 15906 ;; Hardware stack levels required when called:    7
 15907 ;; This function calls:
 15908 ;;		_Reverse_Byte
 15909 ;; This function is called by:
 15910 ;;		_UseBluetooth
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text29
 15915  0057EC                     __ptext29:
 15916                           	opt stack 0
 15917  0057EC                     _EncodeNEC:
 15918                           	opt stack 22
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;incstack = 0
 15922                           ;EncodeNEC@address stored from wreg
 15923  0057EC  0100               	movlb	0	; () banked
 15924  0057EE  6FA1               	movwf	EncodeNEC@address& (0+255),b
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;IR.c: 529: unsigned long temp1,
 15928                           ;IR.c: 530: temp2,
 15929                           ;IR.c: 531: temp3,
 15930                           ;IR.c: 532: temp4;
 15931                           ;IR.c: 540: temp1 = (unsigned long) Reverse_Byte(address);
 15932  0057F0  0100               	movlb	0	; () banked
 15933  0057F2  51A1               	movf	EncodeNEC@address& (0+255),w,b
 15934  0057F4  EC20  F033         	call	_Reverse_Byte
 15935  0057F8  0100               	movlb	0	; () banked
 15936  0057FA  6F7D               	movwf	??_EncodeNEC& (0+255),b
 15937  0057FC  0100               	movlb	0	; () banked
 15938  0057FE  517D               	movf	??_EncodeNEC& (0+255),w,b
 15939  005800  0100               	movlb	0	; () banked
 15940  005802  6F91               	movwf	EncodeNEC@temp1& (0+255),b
 15941  005804  6B92               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 15942  005806  6B93               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 15943  005808  6B94               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 15944                           
 15945                           ;IR.c: 541: temp2 = (unsigned long) Reverse_Byte(~address);
 15946  00580A  0100               	movlb	0	; () banked
 15947  00580C  51A1               	movf	EncodeNEC@address& (0+255),w,b
 15948  00580E  0AFF               	xorlw	255
 15949  005810  EC20  F033         	call	_Reverse_Byte
 15950  005814  0100               	movlb	0	; () banked
 15951  005816  6F7D               	movwf	??_EncodeNEC& (0+255),b
 15952  005818  0100               	movlb	0	; () banked
 15953  00581A  517D               	movf	??_EncodeNEC& (0+255),w,b
 15954  00581C  0100               	movlb	0	; () banked
 15955  00581E  6F95               	movwf	EncodeNEC@temp2& (0+255),b
 15956  005820  6B96               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 15957  005822  6B97               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 15958  005824  6B98               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 15959                           
 15960                           ;IR.c: 542: temp3 = (unsigned long) Reverse_Byte(command);
 15961  005826  0100               	movlb	0	; () banked
 15962  005828  5179               	movf	EncodeNEC@command& (0+255),w,b
 15963  00582A  EC20  F033         	call	_Reverse_Byte
 15964  00582E  0100               	movlb	0	; () banked
 15965  005830  6F7D               	movwf	??_EncodeNEC& (0+255),b
 15966  005832  0100               	movlb	0	; () banked
 15967  005834  517D               	movf	??_EncodeNEC& (0+255),w,b
 15968  005836  0100               	movlb	0	; () banked
 15969  005838  6F99               	movwf	EncodeNEC@temp3& (0+255),b
 15970  00583A  6B9A               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 15971  00583C  6B9B               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 15972  00583E  6B9C               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 15973                           
 15974                           ;IR.c: 543: temp4 = (unsigned long) Reverse_Byte(~command);
 15975  005840  0100               	movlb	0	; () banked
 15976  005842  5179               	movf	EncodeNEC@command& (0+255),w,b
 15977  005844  0AFF               	xorlw	255
 15978  005846  EC20  F033         	call	_Reverse_Byte
 15979  00584A  0100               	movlb	0	; () banked
 15980  00584C  6F7D               	movwf	??_EncodeNEC& (0+255),b
 15981  00584E  0100               	movlb	0	; () banked
 15982  005850  517D               	movf	??_EncodeNEC& (0+255),w,b
 15983  005852  0100               	movlb	0	; () banked
 15984  005854  6F9D               	movwf	EncodeNEC@temp4& (0+255),b
 15985  005856  6B9E               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 15986  005858  6B9F               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 15987  00585A  6BA0               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 15988                           
 15989                           ; BSR set to: 0
 15990                           ;IR.c: 545: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 15991  00585C  C099  F07E         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 15992  005860  C09A  F07F         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 15993  005864  C09B  F080         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 15994  005868  0100               	movlb	0	; () banked
 15995  00586A  6B7D               	clrf	??_EncodeNEC& (0+255),b
 15996  00586C  C095  F081         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 15997  005870  C096  F082         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 15998  005874  C097  F083         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 15999  005878  C098  F084         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 16000  00587C  C082  F084         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 16001  005880  C081  F083         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 16002  005884  0100               	movlb	0	; () banked
 16003  005886  6B82               	clrf	(??_EncodeNEC+5)& (0+255),b
 16004  005888  6B81               	clrf	(??_EncodeNEC+4)& (0+255),b
 16005  00588A  C091  F085         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 16006  00588E  C092  F086         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 16007  005892  C093  F087         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 16008  005896  C094  F088         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 16009  00589A  C085  F088         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 16010  00589E  0100               	movlb	0	; () banked
 16011  0058A0  6B87               	clrf	(??_EncodeNEC+10)& (0+255),b
 16012  0058A2  6B86               	clrf	(??_EncodeNEC+9)& (0+255),b
 16013  0058A4  6B85               	clrf	(??_EncodeNEC+8)& (0+255),b
 16014  0058A6  0100               	movlb	0	; () banked
 16015  0058A8  5181               	movf	(??_EncodeNEC+4)& (0+255),w,b
 16016  0058AA  0100               	movlb	0	; () banked
 16017  0058AC  2585               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 16018  0058AE  0100               	movlb	0	; () banked
 16019  0058B0  6F89               	movwf	(??_EncodeNEC+12)& (0+255),b
 16020  0058B2  0100               	movlb	0	; () banked
 16021  0058B4  5182               	movf	(??_EncodeNEC+5)& (0+255),w,b
 16022  0058B6  0100               	movlb	0	; () banked
 16023  0058B8  2186               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 16024  0058BA  0100               	movlb	0	; () banked
 16025  0058BC  6F8A               	movwf	(??_EncodeNEC+13)& (0+255),b
 16026  0058BE  0100               	movlb	0	; () banked
 16027  0058C0  5183               	movf	(??_EncodeNEC+6)& (0+255),w,b
 16028  0058C2  0100               	movlb	0	; () banked
 16029  0058C4  2187               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 16030  0058C6  0100               	movlb	0	; () banked
 16031  0058C8  6F8B               	movwf	(??_EncodeNEC+14)& (0+255),b
 16032  0058CA  0100               	movlb	0	; () banked
 16033  0058CC  5184               	movf	(??_EncodeNEC+7)& (0+255),w,b
 16034  0058CE  0100               	movlb	0	; () banked
 16035  0058D0  2188               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 16036  0058D2  0100               	movlb	0	; () banked
 16037  0058D4  6F8C               	movwf	(??_EncodeNEC+15)& (0+255),b
 16038  0058D6  0100               	movlb	0	; () banked
 16039  0058D8  517D               	movf	??_EncodeNEC& (0+255),w,b
 16040  0058DA  0100               	movlb	0	; () banked
 16041  0058DC  2589               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 16042  0058DE  0100               	movlb	0	; () banked
 16043  0058E0  6F8D               	movwf	(??_EncodeNEC+16)& (0+255),b
 16044  0058E2  0100               	movlb	0	; () banked
 16045  0058E4  517E               	movf	(??_EncodeNEC+1)& (0+255),w,b
 16046  0058E6  0100               	movlb	0	; () banked
 16047  0058E8  218A               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 16048  0058EA  0100               	movlb	0	; () banked
 16049  0058EC  6F8E               	movwf	(??_EncodeNEC+17)& (0+255),b
 16050  0058EE  0100               	movlb	0	; () banked
 16051  0058F0  517F               	movf	(??_EncodeNEC+2)& (0+255),w,b
 16052  0058F2  0100               	movlb	0	; () banked
 16053  0058F4  218B               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 16054  0058F6  0100               	movlb	0	; () banked
 16055  0058F8  6F8F               	movwf	(??_EncodeNEC+18)& (0+255),b
 16056  0058FA  0100               	movlb	0	; () banked
 16057  0058FC  5180               	movf	(??_EncodeNEC+3)& (0+255),w,b
 16058  0058FE  0100               	movlb	0	; () banked
 16059  005900  218C               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 16060  005902  0100               	movlb	0	; () banked
 16061  005904  6F90               	movwf	(??_EncodeNEC+19)& (0+255),b
 16062  005906  0100               	movlb	0	; () banked
 16063  005908  519D               	movf	EncodeNEC@temp4& (0+255),w,b
 16064  00590A  0100               	movlb	0	; () banked
 16065  00590C  258D               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 16066  00590E  0100               	movlb	0	; () banked
 16067  005910  6F79               	movwf	?_EncodeNEC& (0+255),b
 16068  005912  0100               	movlb	0	; () banked
 16069  005914  519E               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 16070  005916  0100               	movlb	0	; () banked
 16071  005918  218E               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 16072  00591A  0100               	movlb	0	; () banked
 16073  00591C  6F7A               	movwf	(?_EncodeNEC+1)& (0+255),b
 16074  00591E  0100               	movlb	0	; () banked
 16075  005920  519F               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 16076  005922  0100               	movlb	0	; () banked
 16077  005924  218F               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 16078  005926  0100               	movlb	0	; () banked
 16079  005928  6F7B               	movwf	(?_EncodeNEC+2)& (0+255),b
 16080  00592A  0100               	movlb	0	; () banked
 16081  00592C  51A0               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 16082  00592E  0100               	movlb	0	; () banked
 16083  005930  2190               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 16084  005932  0100               	movlb	0	; () banked
 16085  005934  6F7C               	movwf	(?_EncodeNEC+3)& (0+255),b
 16086  005936  0012               	return	
 16087                           
 16088                           ; BSR set to: 0
 16089                           
 16090                           ; BSR set to: 0
 16091  005938  0012               	return		;funcret
 16092  00593A                     __end_of_EncodeNEC:
 16093                           	opt stack 0
 16094                           tblptru	equ	0xFF8
 16095                           tblptrh	equ	0xFF7
 16096                           tblptrl	equ	0xFF6
 16097                           tablat	equ	0xFF5
 16098                           prodh	equ	0xFF4
 16099                           prodl	equ	0xFF3
 16100                           intcon	equ	0xFF2
 16101                           indf0	equ	0xFEF
 16102                           postinc0	equ	0xFEE
 16103                           fsr0h	equ	0xFEA
 16104                           fsr0l	equ	0xFE9
 16105                           wreg	equ	0xFE8
 16106                           indf1	equ	0xFE7
 16107                           postdec1	equ	0xFE5
 16108                           fsr1h	equ	0xFE2
 16109                           fsr1l	equ	0xFE1
 16110                           indf2	equ	0xFDF
 16111                           postinc2	equ	0xFDE
 16112                           fsr2h	equ	0xFDA
 16113                           fsr2l	equ	0xFD9
 16114                           status	equ	0xFD8
 16115                           
 16116 ;; *************** function _DecodeNEC *****************
 16117 ;; Defined at:
 16118 ;;		line 553 in file "IR.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;  Nec             4   25[BANK0 ] unsigned long 
 16121 ;;  address         2   29[BANK0 ] PTR unsigned char 
 16122 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 16123 ;;  command         2   31[BANK0 ] PTR unsigned char 
 16124 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 16125 ;; Auto vars:     Size  Location     Type
 16126 ;;  temp1           1   39[BANK0 ] unsigned char 
 16127 ;;  temp3           1   38[BANK0 ] unsigned char 
 16128 ;;  temp2           1   37[BANK0 ] unsigned char 
 16129 ;; Return value:  Size  Location     Type
 16130 ;;                  1    wreg      unsigned char 
 16131 ;; Registers used:
 16132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16133 ;; Tracked objects:
 16134 ;;		On entry : 0/0
 16135 ;;		On exit  : 0/0
 16136 ;;		Unchanged: 0/0
 16137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16139 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16141 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16142 ;;Total ram usage:       15 bytes
 16143 ;; Hardware stack levels used:    1
 16144 ;; Hardware stack levels required when called:    7
 16145 ;; This function calls:
 16146 ;;		_Reverse_Byte
 16147 ;; This function is called by:
 16148 ;;		_UseIRCode
 16149 ;;		_UseBluetooth
 16150 ;; This function uses a non-reentrant model
 16151 ;;
 16152                           
 16153                           	psect	text30
 16154  0067A8                     __ptext30:
 16155                           	opt stack 0
 16156  0067A8                     _DecodeNEC:
 16157                           	opt stack 22
 16158                           
 16159                           ;IR.c: 555: unsigned char temp1,
 16160                           ;IR.c: 556: temp2,
 16161                           ;IR.c: 557: temp3;
 16162                           ;IR.c: 559: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 16163                           
 16164                           ; BSR set to: 0
 16165                           ;incstack = 0
 16166  0067A8  0100               	movlb	0	; () banked
 16167  0067AA  5179               	movf	DecodeNEC@Nec& (0+255),w,b
 16168  0067AC  EC20  F033         	call	_Reverse_Byte
 16169  0067B0  0AFF               	xorlw	255
 16170  0067B2  0100               	movlb	0	; () banked
 16171  0067B4  6F87               	movwf	DecodeNEC@temp1& (0+255),b
 16172                           
 16173                           ;IR.c: 560: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 16174  0067B6  0100               	movlb	0	; () banked
 16175  0067B8  517A               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 16176  0067BA  EC20  F033         	call	_Reverse_Byte
 16177  0067BE  0100               	movlb	0	; () banked
 16178  0067C0  6F85               	movwf	DecodeNEC@temp2& (0+255),b
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;IR.c: 561: if(temp1 != temp2)
 16182  0067C2  0100               	movlb	0	; () banked
 16183  0067C4  5185               	movf	DecodeNEC@temp2& (0+255),w,b
 16184  0067C6  0100               	movlb	0	; () banked
 16185  0067C8  1987               	xorwf	DecodeNEC@temp1& (0+255),w,b
 16186  0067CA  B4D8               	btfsc	status,2,c
 16187  0067CC  D002               	goto	l8686
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;IR.c: 562: {
 16191                           ;IR.c: 564: return 0;
 16192  0067CE  0E00               	movlw	0
 16193                           
 16194                           ; BSR set to: 0
 16195  0067D0  0012               	return	
 16196  0067D2                     l8686:
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;IR.c: 565: }
 16200                           ;IR.c: 566: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 16201  0067D2  0100               	movlb	0	; () banked
 16202  0067D4  517B               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 16203  0067D6  EC20  F033         	call	_Reverse_Byte
 16204  0067DA  0AFF               	xorlw	255
 16205  0067DC  0100               	movlb	0	; () banked
 16206  0067DE  6F87               	movwf	DecodeNEC@temp1& (0+255),b
 16207                           
 16208                           ;IR.c: 567: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 16209  0067E0  0E00               	movlw	0
 16210  0067E2  0100               	movlb	0	; () banked
 16211  0067E4  1579               	andwf	DecodeNEC@Nec& (0+255),w,b
 16212  0067E6  0100               	movlb	0	; () banked
 16213  0067E8  6F81               	movwf	??_DecodeNEC& (0+255),b
 16214  0067EA  0E00               	movlw	0
 16215  0067EC  0100               	movlb	0	; () banked
 16216  0067EE  157A               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 16217  0067F0  0100               	movlb	0	; () banked
 16218  0067F2  6F82               	movwf	(??_DecodeNEC+1)& (0+255),b
 16219  0067F4  0E00               	movlw	0
 16220  0067F6  0100               	movlb	0	; () banked
 16221  0067F8  157B               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 16222  0067FA  0100               	movlb	0	; () banked
 16223  0067FC  6F83               	movwf	(??_DecodeNEC+2)& (0+255),b
 16224  0067FE  0EFF               	movlw	255
 16225  006800  0100               	movlb	0	; () banked
 16226  006802  157C               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 16227  006804  0100               	movlb	0	; () banked
 16228  006806  6F84               	movwf	(??_DecodeNEC+3)& (0+255),b
 16229  006808  0E19               	movlw	25
 16230  00680A  D006               	goto	u9800
 16231  00680C                     u9805:
 16232  00680C  0100               	movlb	0	; () banked
 16233  00680E  90D8               	bcf	status,0,c
 16234  006810  3384               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 16235  006812  3383               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 16236  006814  3382               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 16237  006816  3381               	rrcf	??_DecodeNEC& (0+255),f,b
 16238  006818                     u9800:
 16239  006818  2EE8               	decfsz	wreg,f,c
 16240  00681A  D7F8               	goto	u9805
 16241  00681C  0100               	movlb	0	; () banked
 16242  00681E  5181               	movf	??_DecodeNEC& (0+255),w,b
 16243  006820  EC20  F033         	call	_Reverse_Byte
 16244  006824  0100               	movlb	0	; () banked
 16245  006826  6F86               	movwf	DecodeNEC@temp3& (0+255),b
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;IR.c: 568: if(temp1 != temp3)
 16249  006828  0100               	movlb	0	; () banked
 16250  00682A  5186               	movf	DecodeNEC@temp3& (0+255),w,b
 16251  00682C  0100               	movlb	0	; () banked
 16252  00682E  1987               	xorwf	DecodeNEC@temp1& (0+255),w,b
 16253  006830  B4D8               	btfsc	status,2,c
 16254  006832  D002               	goto	l8694
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;IR.c: 569: {
 16258                           ;IR.c: 571: return 0;
 16259  006834  0E00               	movlw	0
 16260                           
 16261                           ; BSR set to: 0
 16262  006836  0012               	return	
 16263  006838                     l8694:
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;IR.c: 572: }
 16267                           ;IR.c: 573: *command = temp2;
 16268  006838  C07F  FFD9         	movff	DecodeNEC@command,fsr2l
 16269  00683C  C080  FFDA         	movff	DecodeNEC@command+1,fsr2h
 16270  006840  C085  FFDF         	movff	DecodeNEC@temp2,indf2
 16271                           
 16272                           ;IR.c: 574: *address = temp3;
 16273  006844  C07D  FFD9         	movff	DecodeNEC@address,fsr2l
 16274  006848  C07E  FFDA         	movff	DecodeNEC@address+1,fsr2h
 16275  00684C  C086  FFDF         	movff	DecodeNEC@temp3,indf2
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;IR.c: 575: return 1;
 16279  006850  0E01               	movlw	1
 16280  006852  0012               	return	
 16281                           
 16282                           ; BSR set to: 0
 16283                           
 16284                           ; BSR set to: 0
 16285  006854  0012               	return		;funcret
 16286  006856                     __end_of_DecodeNEC:
 16287                           	opt stack 0
 16288                           tblptru	equ	0xFF8
 16289                           tblptrh	equ	0xFF7
 16290                           tblptrl	equ	0xFF6
 16291                           tablat	equ	0xFF5
 16292                           prodh	equ	0xFF4
 16293                           prodl	equ	0xFF3
 16294                           intcon	equ	0xFF2
 16295                           indf0	equ	0xFEF
 16296                           postinc0	equ	0xFEE
 16297                           fsr0h	equ	0xFEA
 16298                           fsr0l	equ	0xFE9
 16299                           wreg	equ	0xFE8
 16300                           indf1	equ	0xFE7
 16301                           postdec1	equ	0xFE5
 16302                           fsr1h	equ	0xFE2
 16303                           fsr1l	equ	0xFE1
 16304                           indf2	equ	0xFDF
 16305                           postinc2	equ	0xFDE
 16306                           fsr2h	equ	0xFDA
 16307                           fsr2l	equ	0xFD9
 16308                           status	equ	0xFD8
 16309                           
 16310 ;; *************** function _Reverse_Byte *****************
 16311 ;; Defined at:
 16312 ;;		line 360 in file "MISC.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;  This            1    wreg     unsigned char 
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;  This            1   24[BANK0 ] unsigned char 
 16317 ;;  temp            1   23[BANK0 ] unsigned char 
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  1    wreg      unsigned char 
 16320 ;; Registers used:
 16321 ;;		wreg, status,2, status,0
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16329 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16330 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16331 ;;Total ram usage:        4 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:    6
 16334 ;; This function calls:
 16335 ;;		Nothing
 16336 ;; This function is called by:
 16337 ;;		_EncodeNEC
 16338 ;;		_DecodeNEC
 16339 ;; This function uses a non-reentrant model
 16340 ;;
 16341                           
 16342                           	psect	text31
 16343  006640                     __ptext31:
 16344                           	opt stack 0
 16345  006640                     _Reverse_Byte:
 16346                           	opt stack 22
 16347                           
 16348                           ; BSR set to: 0
 16349                           ;incstack = 0
 16350                           ;Reverse_Byte@This stored from wreg
 16351  006640  0100               	movlb	0	; () banked
 16352  006642  6F78               	movwf	Reverse_Byte@This& (0+255),b
 16353                           
 16354                           ; BSR set to: 0
 16355                           ;MISC.c: 362: unsigned char temp=0;
 16356  006644  0E00               	movlw	0
 16357  006646  0100               	movlb	0	; () banked
 16358  006648  6F77               	movwf	Reverse_Byte@temp& (0+255),b
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;MISC.c: 364: temp += (This & 0x01) << 7;
 16362  00664A  C078  F075         	movff	Reverse_Byte@This,??_Reverse_Byte
 16363  00664E  0E01               	movlw	1
 16364  006650  0100               	movlb	0	; () banked
 16365  006652  1775               	andwf	??_Reverse_Byte& (0+255),f,b
 16366  006654  0E00               	movlw	0
 16367  006656  B175               	btfsc	??_Reverse_Byte& (0+255),0,b
 16368  006658  0E80               	movlw	128
 16369  00665A  6F75               	movwf	??_Reverse_Byte& (0+255),b
 16370  00665C  0100               	movlb	0	; () banked
 16371  00665E  5175               	movf	??_Reverse_Byte& (0+255),w,b
 16372  006660  0100               	movlb	0	; () banked
 16373  006662  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16374                           
 16375                           ; BSR set to: 0
 16376                           ;MISC.c: 365: temp += (This & 0x02) << 5;
 16377  006664  C078  F075         	movff	Reverse_Byte@This,??_Reverse_Byte
 16378  006668  0E02               	movlw	2
 16379  00666A  0100               	movlb	0	; () banked
 16380  00666C  1775               	andwf	??_Reverse_Byte& (0+255),f,b
 16381  00666E  0E05               	movlw	5
 16382  006670  0100               	movlb	0	; () banked
 16383  006672  6F76               	movwf	(??_Reverse_Byte+1)& (0+255),b
 16384  006674                     u8275:
 16385  006674  0100               	movlb	0	; () banked
 16386  006676  90D8               	bcf	status,0,c
 16387  006678  3775               	rlcf	??_Reverse_Byte& (0+255),f,b
 16388  00667A  0100               	movlb	0	; () banked
 16389  00667C  2F76               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 16390  00667E  D7FA               	goto	u8275
 16391  006680  0100               	movlb	0	; () banked
 16392  006682  5175               	movf	??_Reverse_Byte& (0+255),w,b
 16393  006684  0100               	movlb	0	; () banked
 16394  006686  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;MISC.c: 366: temp += (This & 0x04) << 3;
 16398  006688  C078  F075         	movff	Reverse_Byte@This,??_Reverse_Byte
 16399  00668C  0E04               	movlw	4
 16400  00668E  0100               	movlb	0	; () banked
 16401  006690  1775               	andwf	??_Reverse_Byte& (0+255),f,b
 16402  006692  0100               	movlb	0	; () banked
 16403  006694  90D8               	bcf	status,0,c
 16404  006696  3775               	rlcf	??_Reverse_Byte& (0+255),f,b
 16405  006698  0100               	movlb	0	; () banked
 16406  00669A  90D8               	bcf	status,0,c
 16407  00669C  3775               	rlcf	??_Reverse_Byte& (0+255),f,b
 16408  00669E  0100               	movlb	0	; () banked
 16409  0066A0  90D8               	bcf	status,0,c
 16410  0066A2  3575               	rlcf	??_Reverse_Byte& (0+255),w,b
 16411  0066A4  0100               	movlb	0	; () banked
 16412  0066A6  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16413                           
 16414                           ; BSR set to: 0
 16415                           ;MISC.c: 367: temp += (This & 0x08) << 1;
 16416  0066A8  C078  F075         	movff	Reverse_Byte@This,??_Reverse_Byte
 16417  0066AC  0E08               	movlw	8
 16418  0066AE  0100               	movlb	0	; () banked
 16419  0066B0  1775               	andwf	??_Reverse_Byte& (0+255),f,b
 16420  0066B2  0100               	movlb	0	; () banked
 16421  0066B4  90D8               	bcf	status,0,c
 16422  0066B6  3575               	rlcf	??_Reverse_Byte& (0+255),w,b
 16423  0066B8  0100               	movlb	0	; () banked
 16424  0066BA  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;MISC.c: 368: temp += (This & 0x10) >> 1;
 16428  0066BC  0100               	movlb	0	; () banked
 16429  0066BE  90D8               	bcf	status,0,c
 16430  0066C0  3178               	rrcf	Reverse_Byte@This& (0+255),w,b
 16431  0066C2  0B08               	andlw	8
 16432  0066C4  0100               	movlb	0	; () banked
 16433  0066C6  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16434                           
 16435                           ; BSR set to: 0
 16436                           ;MISC.c: 369: temp += (This & 0x20) >> 3;
 16437  0066C8  0100               	movlb	0	; () banked
 16438  0066CA  3978               	swapf	Reverse_Byte@This& (0+255),w,b
 16439  0066CC  46E8               	rlncf	wreg,f,c
 16440  0066CE  0B1F               	andlw	31
 16441  0066D0  0B04               	andlw	4
 16442  0066D2  0100               	movlb	0	; () banked
 16443  0066D4  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16444                           
 16445                           ; BSR set to: 0
 16446                           ;MISC.c: 370: temp += (This & 0x40) >> 5;
 16447  0066D6  0100               	movlb	0	; () banked
 16448  0066D8  3978               	swapf	Reverse_Byte@This& (0+255),w,b
 16449  0066DA  42E8               	rrncf	wreg,f,c
 16450  0066DC  0B07               	andlw	7
 16451  0066DE  0B02               	andlw	2
 16452  0066E0  0100               	movlb	0	; () banked
 16453  0066E2  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;MISC.c: 371: temp += (This & 0x80) >> 7;
 16457  0066E4  0100               	movlb	0	; () banked
 16458  0066E6  4578               	rlncf	Reverse_Byte@This& (0+255),w,b
 16459  0066E8  0B01               	andlw	1
 16460  0066EA  0100               	movlb	0	; () banked
 16461  0066EC  2777               	addwf	Reverse_Byte@temp& (0+255),f,b
 16462                           
 16463                           ; BSR set to: 0
 16464                           ;MISC.c: 373: return temp;
 16465  0066EE  0100               	movlb	0	; () banked
 16466  0066F0  5177               	movf	Reverse_Byte@temp& (0+255),w,b
 16467  0066F2  0012               	return	
 16468                           
 16469                           ; BSR set to: 0
 16470                           
 16471                           ; BSR set to: 0
 16472  0066F4  0012               	return		;funcret
 16473  0066F6                     __end_of_Reverse_Byte:
 16474                           	opt stack 0
 16475                           tblptru	equ	0xFF8
 16476                           tblptrh	equ	0xFF7
 16477                           tblptrl	equ	0xFF6
 16478                           tablat	equ	0xFF5
 16479                           prodh	equ	0xFF4
 16480                           prodl	equ	0xFF3
 16481                           intcon	equ	0xFF2
 16482                           indf0	equ	0xFEF
 16483                           postinc0	equ	0xFEE
 16484                           fsr0h	equ	0xFEA
 16485                           fsr0l	equ	0xFE9
 16486                           wreg	equ	0xFE8
 16487                           indf1	equ	0xFE7
 16488                           postdec1	equ	0xFE5
 16489                           fsr1h	equ	0xFE2
 16490                           fsr1l	equ	0xFE1
 16491                           indf2	equ	0xFDF
 16492                           postinc2	equ	0xFDE
 16493                           fsr2h	equ	0xFDA
 16494                           fsr2l	equ	0xFD9
 16495                           status	equ	0xFD8
 16496                           
 16497 ;; *************** function _ReadVoltage *****************
 16498 ;; Defined at:
 16499 ;;		line 58 in file "ADC.c"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;		None
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;  voltage         3   65[BANK0 ] unsigned char 
 16504 ;;  temp            2   68[BANK0 ] unsigned int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  3   62[BANK0 ] unsigned int 
 16507 ;; Registers used:
 16508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16515 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;Total ram usage:        8 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    8
 16521 ;; This function calls:
 16522 ;;		_InternalADC_Read
 16523 ;;		_VoltageDividerOFF
 16524 ;;		_VoltageDividerON
 16525 ;;		___ftdiv
 16526 ;;		___ftmul
 16527 ;;		___lwtoft
 16528 ;;		_delayUS
 16529 ;; This function is called by:
 16530 ;;		_main
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text32
 16535  006588                     __ptext32:
 16536                           	opt stack 0
 16537  006588                     _ReadVoltage:
 16538                           	opt stack 22
 16539                           
 16540                           ;ADC.c: 60: unsigned int temp;
 16541                           ;ADC.c: 61: double voltage;
 16542                           ;ADC.c: 63: VoltageDividerON();
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;incstack = 0
 16546  006588  EC54  F03C         	call	_VoltageDividerON	;wreg free
 16547                           
 16548                           ;ADC.c: 64: delayUS(5);
 16549  00658C  0E05               	movlw	5
 16550  00658E  0100               	movlb	0	; () banked
 16551  006590  6F75               	movwf	delayUS@US& (0+255),b
 16552  006592  0E00               	movlw	0
 16553  006594  6F76               	movwf	(delayUS@US+1)& (0+255),b
 16554  006596  0E00               	movlw	0
 16555  006598  6F77               	movwf	(delayUS@US+2)& (0+255),b
 16556  00659A  0E00               	movlw	0
 16557  00659C  6F78               	movwf	(delayUS@US+3)& (0+255),b
 16558  00659E  EC34  F039         	call	_delayUS	;wreg free
 16559                           
 16560                           ;ADC.c: 65: if(InternalADC_Read(0, &temp))
 16561  0065A2  0EA4               	movlw	low ReadVoltage@temp
 16562  0065A4  0100               	movlb	0	; () banked
 16563  0065A6  6F7E               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 16564  0065A8  0E00               	movlw	high ReadVoltage@temp
 16565  0065AA  0100               	movlb	0	; () banked
 16566  0065AC  6F7F               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 16567  0065AE  0E00               	movlw	0
 16568  0065B0  EC7D  F034         	call	_InternalADC_Read
 16569  0065B4  0900               	iorlw	0
 16570  0065B6  B4D8               	btfsc	status,2,c
 16571  0065B8  D02F               	goto	l11458
 16572                           
 16573                           ;ADC.c: 66: {
 16574                           ;ADC.c: 67: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 16575  0065BA  0E00               	movlw	0
 16576  0065BC  0100               	movlb	0	; () banked
 16577  0065BE  6F83               	movwf	___ftdiv@f2& (0+255),b
 16578  0065C0  0E80               	movlw	128
 16579  0065C2  0100               	movlb	0	; () banked
 16580  0065C4  6F84               	movwf	(___ftdiv@f2+1)& (0+255),b
 16581  0065C6  0E44               	movlw	68
 16582  0065C8  0100               	movlb	0	; () banked
 16583  0065CA  6F85               	movwf	(___ftdiv@f2+2)& (0+255),b
 16584  0065CC  C0A4  F07D         	movff	ReadVoltage@temp,___lwtoft@c
 16585  0065D0  C0A5  F07E         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 16586  0065D4  EC26  F03B         	call	___lwtoft	;wreg free
 16587  0065D8  C07D  F080         	movff	?___lwtoft,___ftdiv@f1
 16588  0065DC  C07E  F081         	movff	?___lwtoft+1,___ftdiv@f1+1
 16589  0065E0  C07F  F082         	movff	?___lwtoft+2,___ftdiv@f1+2
 16590  0065E4  ECFC  F029         	call	___ftdiv	;wreg free
 16591  0065E8  C080  F08F         	movff	?___ftdiv,___ftmul@f1
 16592  0065EC  C081  F090         	movff	?___ftdiv+1,___ftmul@f1+1
 16593  0065F0  C082  F091         	movff	?___ftdiv+2,___ftmul@f1+2
 16594  0065F4  0E33               	movlw	51
 16595  0065F6  0100               	movlb	0	; () banked
 16596  0065F8  6F92               	movwf	___ftmul@f2& (0+255),b
 16597  0065FA  0E11               	movlw	17
 16598  0065FC  0100               	movlb	0	; () banked
 16599  0065FE  6F93               	movwf	(___ftmul@f2+1)& (0+255),b
 16600  006600  0E42               	movlw	66
 16601  006602  0100               	movlb	0	; () banked
 16602  006604  6F94               	movwf	(___ftmul@f2+2)& (0+255),b
 16603  006606  EC9B  F028         	call	___ftmul	;wreg free
 16604  00660A  C08F  F0A1         	movff	?___ftmul,ReadVoltage@voltage
 16605  00660E  C090  F0A2         	movff	?___ftmul+1,ReadVoltage@voltage+1
 16606  006612  C091  F0A3         	movff	?___ftmul+2,ReadVoltage@voltage+2
 16607                           
 16608                           ;ADC.c: 68: }
 16609  006616  D00A               	goto	l11460
 16610  006618                     l11458:
 16611                           
 16612                           ;ADC.c: 69: else
 16613                           ;ADC.c: 70: {
 16614                           ;ADC.c: 71: voltage = 0.0;
 16615  006618  0E00               	movlw	0
 16616  00661A  0100               	movlb	0	; () banked
 16617  00661C  6FA1               	movwf	ReadVoltage@voltage& (0+255),b
 16618  00661E  0E00               	movlw	0
 16619  006620  0100               	movlb	0	; () banked
 16620  006622  6FA2               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 16621  006624  0E00               	movlw	0
 16622  006626  0100               	movlb	0	; () banked
 16623  006628  6FA3               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 16624  00662A  D000               	goto	l11460
 16625  00662C                     l11460:
 16626                           
 16627                           ;ADC.c: 72: }
 16628                           ;ADC.c: 73: VoltageDividerOFF();
 16629  00662C  EC5D  F03C         	call	_VoltageDividerOFF	;wreg free
 16630                           
 16631                           ;ADC.c: 74: return voltage;
 16632  006630  C0A1  F09E         	movff	ReadVoltage@voltage,?_ReadVoltage
 16633  006634  C0A2  F09F         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 16634  006638  C0A3  F0A0         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 16635  00663C  0012               	return	
 16636  00663E  0012               	return		;funcret
 16637  006640                     __end_of_ReadVoltage:
 16638                           	opt stack 0
 16639                           tblptru	equ	0xFF8
 16640                           tblptrh	equ	0xFF7
 16641                           tblptrl	equ	0xFF6
 16642                           tablat	equ	0xFF5
 16643                           prodh	equ	0xFF4
 16644                           prodl	equ	0xFF3
 16645                           intcon	equ	0xFF2
 16646                           indf0	equ	0xFEF
 16647                           postinc0	equ	0xFEE
 16648                           fsr0h	equ	0xFEA
 16649                           fsr0l	equ	0xFE9
 16650                           wreg	equ	0xFE8
 16651                           indf1	equ	0xFE7
 16652                           postdec1	equ	0xFE5
 16653                           fsr1h	equ	0xFE2
 16654                           fsr1l	equ	0xFE1
 16655                           indf2	equ	0xFDF
 16656                           postinc2	equ	0xFDE
 16657                           fsr2h	equ	0xFDA
 16658                           fsr2l	equ	0xFD9
 16659                           status	equ	0xFD8
 16660                           
 16661 ;; *************** function ___lwtoft *****************
 16662 ;; Defined at:
 16663 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 16664 ;; Parameters:    Size  Location     Type
 16665 ;;  c               2   29[BANK0 ] unsigned int 
 16666 ;; Auto vars:     Size  Location     Type
 16667 ;;		None
 16668 ;; Return value:  Size  Location     Type
 16669 ;;                  3   29[BANK0 ] float 
 16670 ;; Registers used:
 16671 ;;		wreg, status,2, status,0, cstack
 16672 ;; Tracked objects:
 16673 ;;		On entry : 0/0
 16674 ;;		On exit  : 0/0
 16675 ;;		Unchanged: 0/0
 16676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16677 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16681 ;;Total ram usage:        3 bytes
 16682 ;; Hardware stack levels used:    1
 16683 ;; Hardware stack levels required when called:    7
 16684 ;; This function calls:
 16685 ;;		___ftpack
 16686 ;; This function is called by:
 16687 ;;		_ReadVoltage
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text33
 16692  00764C                     __ptext33:
 16693                           	opt stack 0
 16694  00764C                     ___lwtoft:
 16695                           	opt stack 22
 16696                           
 16697                           ;incstack = 0
 16698  00764C  C07D  F075         	movff	___lwtoft@c,___ftpack@arg
 16699  007650  C07E  F076         	movff	___lwtoft@c+1,___ftpack@arg+1
 16700  007654  0100               	movlb	0	; () banked
 16701  007656  6B77               	clrf	(___ftpack@arg+2)& (0+255),b
 16702  007658  0E8E               	movlw	142
 16703  00765A  0100               	movlb	0	; () banked
 16704  00765C  6F78               	movwf	___ftpack@exp& (0+255),b
 16705  00765E  0E00               	movlw	0
 16706  007660  0100               	movlb	0	; () banked
 16707  007662  6F79               	movwf	___ftpack@sign& (0+255),b
 16708  007664  EC9D  F02C         	call	___ftpack	;wreg free
 16709  007668  C075  F07D         	movff	?___ftpack,?___lwtoft
 16710  00766C  C076  F07E         	movff	?___ftpack+1,?___lwtoft+1
 16711  007670  C077  F07F         	movff	?___ftpack+2,?___lwtoft+2
 16712  007674  0012               	return	
 16713  007676  0012               	return		;funcret
 16714  007678                     __end_of___lwtoft:
 16715                           	opt stack 0
 16716                           tblptru	equ	0xFF8
 16717                           tblptrh	equ	0xFF7
 16718                           tblptrl	equ	0xFF6
 16719                           tablat	equ	0xFF5
 16720                           prodh	equ	0xFF4
 16721                           prodl	equ	0xFF3
 16722                           intcon	equ	0xFF2
 16723                           indf0	equ	0xFEF
 16724                           postinc0	equ	0xFEE
 16725                           fsr0h	equ	0xFEA
 16726                           fsr0l	equ	0xFE9
 16727                           wreg	equ	0xFE8
 16728                           indf1	equ	0xFE7
 16729                           postdec1	equ	0xFE5
 16730                           fsr1h	equ	0xFE2
 16731                           fsr1l	equ	0xFE1
 16732                           indf2	equ	0xFDF
 16733                           postinc2	equ	0xFDE
 16734                           fsr2h	equ	0xFDA
 16735                           fsr2l	equ	0xFD9
 16736                           status	equ	0xFD8
 16737                           
 16738 ;; *************** function ___ftmul *****************
 16739 ;; Defined at:
 16740 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;  f1              3   47[BANK0 ] float 
 16743 ;;  f2              3   50[BANK0 ] float 
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;  f3_as_produc    3   57[BANK0 ] unsigned um
 16746 ;;  sign            1   61[BANK0 ] unsigned char 
 16747 ;;  cntr            1   60[BANK0 ] unsigned char 
 16748 ;;  exp             1   56[BANK0 ] unsigned char 
 16749 ;; Return value:  Size  Location     Type
 16750 ;;                  3   47[BANK0 ] float 
 16751 ;; Registers used:
 16752 ;;		wreg, status,2, status,0, cstack
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/0
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16758 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16759 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16760 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16761 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16762 ;;Total ram usage:       15 bytes
 16763 ;; Hardware stack levels used:    1
 16764 ;; Hardware stack levels required when called:    7
 16765 ;; This function calls:
 16766 ;;		___ftpack
 16767 ;; This function is called by:
 16768 ;;		_ReadVoltage
 16769 ;; This function uses a non-reentrant model
 16770 ;;
 16771                           
 16772                           	psect	text34
 16773  005136                     __ptext34:
 16774                           	opt stack 0
 16775  005136                     ___ftmul:
 16776                           	opt stack 22
 16777                           
 16778                           ;incstack = 0
 16779  005136  C091  F095         	movff	___ftmul@f1+2,??___ftmul
 16780  00513A  0100               	movlb	0	; () banked
 16781  00513C  6B96               	clrf	(??___ftmul+1)& (0+255),b
 16782  00513E  6B97               	clrf	(??___ftmul+2)& (0+255),b
 16783  005140  0100               	movlb	0	; () banked
 16784  005142  3590               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 16785  005144  0100               	movlb	0	; () banked
 16786  005146  3795               	rlcf	??___ftmul& (0+255),f,b
 16787  005148  E301               	bnc	u10051
 16788  00514A  8196               	bsf	(??___ftmul+1)& (0+255),0,b
 16789  00514C                     u10051:
 16790  00514C  0100               	movlb	0	; () banked
 16791  00514E  5195               	movf	??___ftmul& (0+255),w,b
 16792  005150  0100               	movlb	0	; () banked
 16793  005152  6F98               	movwf	___ftmul@exp& (0+255),b
 16794  005154  0100               	movlb	0	; () banked
 16795  005156  5198               	movf	___ftmul@exp& (0+255),w,b
 16796  005158  A4D8               	btfss	status,2,c
 16797  00515A  D00A               	goto	l8922
 16798                           
 16799                           ; BSR set to: 0
 16800  00515C  0E00               	movlw	0
 16801  00515E  0100               	movlb	0	; () banked
 16802  005160  6F8F               	movwf	?___ftmul& (0+255),b
 16803  005162  0E00               	movlw	0
 16804  005164  0100               	movlb	0	; () banked
 16805  005166  6F90               	movwf	(?___ftmul+1)& (0+255),b
 16806  005168  0E00               	movlw	0
 16807  00516A  0100               	movlb	0	; () banked
 16808  00516C  6F91               	movwf	(?___ftmul+2)& (0+255),b
 16809                           
 16810                           ; BSR set to: 0
 16811  00516E  0012               	return	
 16812  005170                     l8922:
 16813                           
 16814                           ; BSR set to: 0
 16815  005170  C094  F095         	movff	___ftmul@f2+2,??___ftmul
 16816  005174  0100               	movlb	0	; () banked
 16817  005176  6B96               	clrf	(??___ftmul+1)& (0+255),b
 16818  005178  6B97               	clrf	(??___ftmul+2)& (0+255),b
 16819  00517A  0100               	movlb	0	; () banked
 16820  00517C  3593               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 16821  00517E  0100               	movlb	0	; () banked
 16822  005180  3795               	rlcf	??___ftmul& (0+255),f,b
 16823  005182  E301               	bnc	u10071
 16824  005184  8196               	bsf	(??___ftmul+1)& (0+255),0,b
 16825  005186                     u10071:
 16826  005186  0100               	movlb	0	; () banked
 16827  005188  5195               	movf	??___ftmul& (0+255),w,b
 16828  00518A  0100               	movlb	0	; () banked
 16829  00518C  6F9D               	movwf	___ftmul@sign& (0+255),b
 16830  00518E  0100               	movlb	0	; () banked
 16831  005190  519D               	movf	___ftmul@sign& (0+255),w,b
 16832  005192  A4D8               	btfss	status,2,c
 16833  005194  D00A               	goto	l8928
 16834                           
 16835                           ; BSR set to: 0
 16836  005196  0E00               	movlw	0
 16837  005198  0100               	movlb	0	; () banked
 16838  00519A  6F8F               	movwf	?___ftmul& (0+255),b
 16839  00519C  0E00               	movlw	0
 16840  00519E  0100               	movlb	0	; () banked
 16841  0051A0  6F90               	movwf	(?___ftmul+1)& (0+255),b
 16842  0051A2  0E00               	movlw	0
 16843  0051A4  0100               	movlb	0	; () banked
 16844  0051A6  6F91               	movwf	(?___ftmul+2)& (0+255),b
 16845                           
 16846                           ; BSR set to: 0
 16847  0051A8  0012               	return	
 16848  0051AA                     l8928:
 16849                           
 16850                           ; BSR set to: 0
 16851  0051AA  0100               	movlb	0	; () banked
 16852  0051AC  519D               	movf	___ftmul@sign& (0+255),w,b
 16853  0051AE  0F7B               	addlw	123
 16854  0051B0  0100               	movlb	0	; () banked
 16855  0051B2  2798               	addwf	___ftmul@exp& (0+255),f,b
 16856                           
 16857                           ; BSR set to: 0
 16858  0051B4  C091  F09D         	movff	___ftmul@f1+2,___ftmul@sign
 16859  0051B8  0100               	movlb	0	; () banked
 16860  0051BA  5194               	movf	(___ftmul@f2+2)& (0+255),w,b
 16861  0051BC  0100               	movlb	0	; () banked
 16862  0051BE  1B9D               	xorwf	___ftmul@sign& (0+255),f,b
 16863  0051C0  0E80               	movlw	128
 16864  0051C2  0100               	movlb	0	; () banked
 16865  0051C4  179D               	andwf	___ftmul@sign& (0+255),f,b
 16866                           
 16867                           ; BSR set to: 0
 16868  0051C6  0100               	movlb	0	; () banked
 16869  0051C8  8F90               	bsf	(___ftmul@f1+1)& (0+255),7,b
 16870                           
 16871                           ; BSR set to: 0
 16872  0051CA  0100               	movlb	0	; () banked
 16873  0051CC  8F93               	bsf	(___ftmul@f2+1)& (0+255),7,b
 16874                           
 16875                           ; BSR set to: 0
 16876  0051CE  0EFF               	movlw	255
 16877  0051D0  0100               	movlb	0	; () banked
 16878  0051D2  1792               	andwf	___ftmul@f2& (0+255),f,b
 16879  0051D4  0EFF               	movlw	255
 16880  0051D6  0100               	movlb	0	; () banked
 16881  0051D8  1793               	andwf	(___ftmul@f2+1)& (0+255),f,b
 16882  0051DA  0E00               	movlw	0
 16883  0051DC  0100               	movlb	0	; () banked
 16884  0051DE  1794               	andwf	(___ftmul@f2+2)& (0+255),f,b
 16885                           
 16886                           ; BSR set to: 0
 16887  0051E0  0E00               	movlw	0
 16888  0051E2  0100               	movlb	0	; () banked
 16889  0051E4  6F99               	movwf	___ftmul@f3_as_product& (0+255),b
 16890  0051E6  0E00               	movlw	0
 16891  0051E8  0100               	movlb	0	; () banked
 16892  0051EA  6F9A               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 16893  0051EC  0E00               	movlw	0
 16894  0051EE  0100               	movlb	0	; () banked
 16895  0051F0  6F9B               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 16896                           
 16897                           ; BSR set to: 0
 16898  0051F2  0E07               	movlw	7
 16899  0051F4  0100               	movlb	0	; () banked
 16900  0051F6  6F9C               	movwf	___ftmul@cntr& (0+255),b
 16901  0051F8  D000               	goto	l8942
 16902  0051FA                     l8942:
 16903                           
 16904                           ; BSR set to: 0
 16905  0051FA  0100               	movlb	0	; () banked
 16906  0051FC  A18F               	btfss	___ftmul@f1& (0+255),0,b
 16907  0051FE  D00D               	goto	l8946
 16908                           
 16909                           ; BSR set to: 0
 16910  005200  0100               	movlb	0	; () banked
 16911  005202  5192               	movf	___ftmul@f2& (0+255),w,b
 16912  005204  0100               	movlb	0	; () banked
 16913  005206  2799               	addwf	___ftmul@f3_as_product& (0+255),f,b
 16914  005208  0100               	movlb	0	; () banked
 16915  00520A  5193               	movf	(___ftmul@f2+1)& (0+255),w,b
 16916  00520C  0100               	movlb	0	; () banked
 16917  00520E  239A               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 16918  005210  0100               	movlb	0	; () banked
 16919  005212  5194               	movf	(___ftmul@f2+2)& (0+255),w,b
 16920  005214  0100               	movlb	0	; () banked
 16921  005216  239B               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 16922  005218  D000               	goto	l8946
 16923  00521A                     l8946:
 16924                           
 16925                           ; BSR set to: 0
 16926  00521A  0100               	movlb	0	; () banked
 16927  00521C  90D8               	bcf	status,0,c
 16928  00521E  3391               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 16929  005220  3390               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 16930  005222  338F               	rrcf	___ftmul@f1& (0+255),f,b
 16931  005224  0100               	movlb	0	; () banked
 16932  005226  90D8               	bcf	status,0,c
 16933  005228  3792               	rlcf	___ftmul@f2& (0+255),f,b
 16934  00522A  3793               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 16935  00522C  3794               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 16936                           
 16937                           ; BSR set to: 0
 16938  00522E  0100               	movlb	0	; () banked
 16939  005230  2F9C               	decfsz	___ftmul@cntr& (0+255),f,b
 16940  005232  D7E3               	goto	l8942
 16941  005234  D000               	goto	l8950
 16942  005236                     l8950:
 16943                           
 16944                           ; BSR set to: 0
 16945  005236  0E09               	movlw	9
 16946  005238  0100               	movlb	0	; () banked
 16947  00523A  6F9C               	movwf	___ftmul@cntr& (0+255),b
 16948  00523C  D000               	goto	l8952
 16949  00523E                     l8952:
 16950                           
 16951                           ; BSR set to: 0
 16952  00523E  0100               	movlb	0	; () banked
 16953  005240  A18F               	btfss	___ftmul@f1& (0+255),0,b
 16954  005242  D00D               	goto	l8956
 16955                           
 16956                           ; BSR set to: 0
 16957  005244  0100               	movlb	0	; () banked
 16958  005246  5192               	movf	___ftmul@f2& (0+255),w,b
 16959  005248  0100               	movlb	0	; () banked
 16960  00524A  2799               	addwf	___ftmul@f3_as_product& (0+255),f,b
 16961  00524C  0100               	movlb	0	; () banked
 16962  00524E  5193               	movf	(___ftmul@f2+1)& (0+255),w,b
 16963  005250  0100               	movlb	0	; () banked
 16964  005252  239A               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 16965  005254  0100               	movlb	0	; () banked
 16966  005256  5194               	movf	(___ftmul@f2+2)& (0+255),w,b
 16967  005258  0100               	movlb	0	; () banked
 16968  00525A  239B               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 16969  00525C  D000               	goto	l8956
 16970  00525E                     l8956:
 16971                           
 16972                           ; BSR set to: 0
 16973  00525E  0100               	movlb	0	; () banked
 16974  005260  90D8               	bcf	status,0,c
 16975  005262  3391               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 16976  005264  3390               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 16977  005266  338F               	rrcf	___ftmul@f1& (0+255),f,b
 16978  005268  0100               	movlb	0	; () banked
 16979  00526A  90D8               	bcf	status,0,c
 16980  00526C  339B               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 16981  00526E  339A               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 16982  005270  3399               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 16983                           
 16984                           ; BSR set to: 0
 16985  005272  0100               	movlb	0	; () banked
 16986  005274  2F9C               	decfsz	___ftmul@cntr& (0+255),f,b
 16987  005276  D7E3               	goto	l8952
 16988  005278  D000               	goto	l8960
 16989  00527A                     l8960:
 16990                           
 16991                           ; BSR set to: 0
 16992  00527A  C099  F075         	movff	___ftmul@f3_as_product,___ftpack@arg
 16993  00527E  C09A  F076         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 16994  005282  C09B  F077         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 16995  005286  C098  F078         	movff	___ftmul@exp,___ftpack@exp
 16996  00528A  C09D  F079         	movff	___ftmul@sign,___ftpack@sign
 16997  00528E  EC9D  F02C         	call	___ftpack	;wreg free
 16998  005292  C075  F08F         	movff	?___ftpack,?___ftmul
 16999  005296  C076  F090         	movff	?___ftpack+1,?___ftmul+1
 17000  00529A  C077  F091         	movff	?___ftpack+2,?___ftmul+2
 17001  00529E  0012               	return	
 17002  0052A0  0012               	return		;funcret
 17003  0052A2                     __end_of___ftmul:
 17004                           	opt stack 0
 17005                           tblptru	equ	0xFF8
 17006                           tblptrh	equ	0xFF7
 17007                           tblptrl	equ	0xFF6
 17008                           tablat	equ	0xFF5
 17009                           prodh	equ	0xFF4
 17010                           prodl	equ	0xFF3
 17011                           intcon	equ	0xFF2
 17012                           indf0	equ	0xFEF
 17013                           postinc0	equ	0xFEE
 17014                           fsr0h	equ	0xFEA
 17015                           fsr0l	equ	0xFE9
 17016                           wreg	equ	0xFE8
 17017                           indf1	equ	0xFE7
 17018                           postdec1	equ	0xFE5
 17019                           fsr1h	equ	0xFE2
 17020                           fsr1l	equ	0xFE1
 17021                           indf2	equ	0xFDF
 17022                           postinc2	equ	0xFDE
 17023                           fsr2h	equ	0xFDA
 17024                           fsr2l	equ	0xFD9
 17025                           status	equ	0xFD8
 17026                           
 17027 ;; *************** function ___ftdiv *****************
 17028 ;; Defined at:
 17029 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 17030 ;; Parameters:    Size  Location     Type
 17031 ;;  f1              3   32[BANK0 ] float 
 17032 ;;  f2              3   35[BANK0 ] float 
 17033 ;; Auto vars:     Size  Location     Type
 17034 ;;  f3              3   42[BANK0 ] float 
 17035 ;;  sign            1   46[BANK0 ] unsigned char 
 17036 ;;  exp             1   45[BANK0 ] unsigned char 
 17037 ;;  cntr            1   41[BANK0 ] unsigned char 
 17038 ;; Return value:  Size  Location     Type
 17039 ;;                  3   32[BANK0 ] float 
 17040 ;; Registers used:
 17041 ;;		wreg, status,2, status,0, cstack
 17042 ;; Tracked objects:
 17043 ;;		On entry : 0/0
 17044 ;;		On exit  : 0/0
 17045 ;;		Unchanged: 0/0
 17046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17047 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17048 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17049 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17050 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;Total ram usage:       15 bytes
 17052 ;; Hardware stack levels used:    1
 17053 ;; Hardware stack levels required when called:    7
 17054 ;; This function calls:
 17055 ;;		___ftpack
 17056 ;; This function is called by:
 17057 ;;		_ReadVoltage
 17058 ;; This function uses a non-reentrant model
 17059 ;;
 17060                           
 17061                           	psect	text35
 17062  0053F8                     __ptext35:
 17063                           	opt stack 0
 17064  0053F8                     ___ftdiv:
 17065                           	opt stack 22
 17066                           
 17067                           ;incstack = 0
 17068  0053F8  C082  F086         	movff	___ftdiv@f1+2,??___ftdiv
 17069  0053FC  0100               	movlb	0	; () banked
 17070  0053FE  6B87               	clrf	(??___ftdiv+1)& (0+255),b
 17071  005400  6B88               	clrf	(??___ftdiv+2)& (0+255),b
 17072  005402  0100               	movlb	0	; () banked
 17073  005404  3581               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17074  005406  0100               	movlb	0	; () banked
 17075  005408  3786               	rlcf	??___ftdiv& (0+255),f,b
 17076  00540A  E301               	bnc	u10001
 17077  00540C  8187               	bsf	(??___ftdiv+1)& (0+255),0,b
 17078  00540E                     u10001:
 17079  00540E  0100               	movlb	0	; () banked
 17080  005410  5186               	movf	??___ftdiv& (0+255),w,b
 17081  005412  0100               	movlb	0	; () banked
 17082  005414  6F8D               	movwf	___ftdiv@exp& (0+255),b
 17083  005416  0100               	movlb	0	; () banked
 17084  005418  518D               	movf	___ftdiv@exp& (0+255),w,b
 17085  00541A  A4D8               	btfss	status,2,c
 17086  00541C  D00A               	goto	l8876
 17087                           
 17088                           ; BSR set to: 0
 17089  00541E  0E00               	movlw	0
 17090  005420  0100               	movlb	0	; () banked
 17091  005422  6F80               	movwf	?___ftdiv& (0+255),b
 17092  005424  0E00               	movlw	0
 17093  005426  0100               	movlb	0	; () banked
 17094  005428  6F81               	movwf	(?___ftdiv+1)& (0+255),b
 17095  00542A  0E00               	movlw	0
 17096  00542C  0100               	movlb	0	; () banked
 17097  00542E  6F82               	movwf	(?___ftdiv+2)& (0+255),b
 17098                           
 17099                           ; BSR set to: 0
 17100  005430  0012               	return	
 17101  005432                     l8876:
 17102                           
 17103                           ; BSR set to: 0
 17104  005432  C085  F086         	movff	___ftdiv@f2+2,??___ftdiv
 17105  005436  0100               	movlb	0	; () banked
 17106  005438  6B87               	clrf	(??___ftdiv+1)& (0+255),b
 17107  00543A  6B88               	clrf	(??___ftdiv+2)& (0+255),b
 17108  00543C  0100               	movlb	0	; () banked
 17109  00543E  3584               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17110  005440  0100               	movlb	0	; () banked
 17111  005442  3786               	rlcf	??___ftdiv& (0+255),f,b
 17112  005444  E301               	bnc	u10021
 17113  005446  8187               	bsf	(??___ftdiv+1)& (0+255),0,b
 17114  005448                     u10021:
 17115  005448  0100               	movlb	0	; () banked
 17116  00544A  5186               	movf	??___ftdiv& (0+255),w,b
 17117  00544C  0100               	movlb	0	; () banked
 17118  00544E  6F8E               	movwf	___ftdiv@sign& (0+255),b
 17119  005450  0100               	movlb	0	; () banked
 17120  005452  518E               	movf	___ftdiv@sign& (0+255),w,b
 17121  005454  A4D8               	btfss	status,2,c
 17122  005456  D00A               	goto	l8882
 17123                           
 17124                           ; BSR set to: 0
 17125  005458  0E00               	movlw	0
 17126  00545A  0100               	movlb	0	; () banked
 17127  00545C  6F80               	movwf	?___ftdiv& (0+255),b
 17128  00545E  0E00               	movlw	0
 17129  005460  0100               	movlb	0	; () banked
 17130  005462  6F81               	movwf	(?___ftdiv+1)& (0+255),b
 17131  005464  0E00               	movlw	0
 17132  005466  0100               	movlb	0	; () banked
 17133  005468  6F82               	movwf	(?___ftdiv+2)& (0+255),b
 17134                           
 17135                           ; BSR set to: 0
 17136  00546A  0012               	return	
 17137  00546C                     l8882:
 17138                           
 17139                           ; BSR set to: 0
 17140  00546C  0E00               	movlw	0
 17141  00546E  0100               	movlb	0	; () banked
 17142  005470  6F8A               	movwf	___ftdiv@f3& (0+255),b
 17143  005472  0E00               	movlw	0
 17144  005474  0100               	movlb	0	; () banked
 17145  005476  6F8B               	movwf	(___ftdiv@f3+1)& (0+255),b
 17146  005478  0E00               	movlw	0
 17147  00547A  0100               	movlb	0	; () banked
 17148  00547C  6F8C               	movwf	(___ftdiv@f3+2)& (0+255),b
 17149                           
 17150                           ; BSR set to: 0
 17151  00547E  0100               	movlb	0	; () banked
 17152  005480  518E               	movf	___ftdiv@sign& (0+255),w,b
 17153  005482  0F89               	addlw	137
 17154  005484  0100               	movlb	0	; () banked
 17155  005486  5F8D               	subwf	___ftdiv@exp& (0+255),f,b
 17156                           
 17157                           ; BSR set to: 0
 17158  005488  C082  F08E         	movff	___ftdiv@f1+2,___ftdiv@sign
 17159                           
 17160                           ; BSR set to: 0
 17161  00548C  0100               	movlb	0	; () banked
 17162  00548E  5185               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17163  005490  0100               	movlb	0	; () banked
 17164  005492  1B8E               	xorwf	___ftdiv@sign& (0+255),f,b
 17165                           
 17166                           ; BSR set to: 0
 17167  005494  0E80               	movlw	128
 17168  005496  0100               	movlb	0	; () banked
 17169  005498  178E               	andwf	___ftdiv@sign& (0+255),f,b
 17170                           
 17171                           ; BSR set to: 0
 17172  00549A  0100               	movlb	0	; () banked
 17173  00549C  8F81               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17174                           
 17175                           ; BSR set to: 0
 17176  00549E  0EFF               	movlw	255
 17177  0054A0  0100               	movlb	0	; () banked
 17178  0054A2  1780               	andwf	___ftdiv@f1& (0+255),f,b
 17179  0054A4  0EFF               	movlw	255
 17180  0054A6  0100               	movlb	0	; () banked
 17181  0054A8  1781               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 17182  0054AA  0E00               	movlw	0
 17183  0054AC  0100               	movlb	0	; () banked
 17184  0054AE  1782               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 17185                           
 17186                           ; BSR set to: 0
 17187  0054B0  0100               	movlb	0	; () banked
 17188  0054B2  8F84               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 17189                           
 17190                           ; BSR set to: 0
 17191  0054B4  0EFF               	movlw	255
 17192  0054B6  0100               	movlb	0	; () banked
 17193  0054B8  1783               	andwf	___ftdiv@f2& (0+255),f,b
 17194  0054BA  0EFF               	movlw	255
 17195  0054BC  0100               	movlb	0	; () banked
 17196  0054BE  1784               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 17197  0054C0  0E00               	movlw	0
 17198  0054C2  0100               	movlb	0	; () banked
 17199  0054C4  1785               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 17200                           
 17201                           ; BSR set to: 0
 17202  0054C6  0E18               	movlw	24
 17203  0054C8  0100               	movlb	0	; () banked
 17204  0054CA  6F89               	movwf	___ftdiv@cntr& (0+255),b
 17205  0054CC  D000               	goto	l8902
 17206  0054CE                     l8902:
 17207                           
 17208                           ; BSR set to: 0
 17209  0054CE  0100               	movlb	0	; () banked
 17210  0054D0  90D8               	bcf	status,0,c
 17211  0054D2  378A               	rlcf	___ftdiv@f3& (0+255),f,b
 17212  0054D4  378B               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 17213  0054D6  378C               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 17214                           
 17215                           ; BSR set to: 0
 17216  0054D8  0100               	movlb	0	; () banked
 17217  0054DA  5183               	movf	___ftdiv@f2& (0+255),w,b
 17218  0054DC  0100               	movlb	0	; () banked
 17219  0054DE  5D80               	subwf	___ftdiv@f1& (0+255),w,b
 17220  0054E0  0100               	movlb	0	; () banked
 17221  0054E2  5184               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17222  0054E4  0100               	movlb	0	; () banked
 17223  0054E6  5981               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 17224  0054E8  0100               	movlb	0	; () banked
 17225  0054EA  5185               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17226  0054EC  0100               	movlb	0	; () banked
 17227  0054EE  5982               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 17228  0054F0  A0D8               	btfss	status,0,c
 17229  0054F2  D00E               	goto	l2333
 17230                           
 17231                           ; BSR set to: 0
 17232  0054F4  0100               	movlb	0	; () banked
 17233  0054F6  5183               	movf	___ftdiv@f2& (0+255),w,b
 17234  0054F8  0100               	movlb	0	; () banked
 17235  0054FA  5F80               	subwf	___ftdiv@f1& (0+255),f,b
 17236  0054FC  0100               	movlb	0	; () banked
 17237  0054FE  5184               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17238  005500  0100               	movlb	0	; () banked
 17239  005502  5B81               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 17240  005504  0100               	movlb	0	; () banked
 17241  005506  5185               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17242  005508  0100               	movlb	0	; () banked
 17243  00550A  5B82               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 17244                           
 17245                           ; BSR set to: 0
 17246  00550C  0100               	movlb	0	; () banked
 17247  00550E  818A               	bsf	___ftdiv@f3& (0+255),0,b
 17248  005510                     l2333:
 17249                           
 17250                           ; BSR set to: 0
 17251  005510  0100               	movlb	0	; () banked
 17252  005512  90D8               	bcf	status,0,c
 17253  005514  3780               	rlcf	___ftdiv@f1& (0+255),f,b
 17254  005516  3781               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 17255  005518  3782               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 17256                           
 17257                           ; BSR set to: 0
 17258  00551A  0100               	movlb	0	; () banked
 17259  00551C  2F89               	decfsz	___ftdiv@cntr& (0+255),f,b
 17260  00551E  D7D7               	goto	l8902
 17261  005520  D000               	goto	l8912
 17262  005522                     l8912:
 17263                           
 17264                           ; BSR set to: 0
 17265  005522  C08A  F075         	movff	___ftdiv@f3,___ftpack@arg
 17266  005526  C08B  F076         	movff	___ftdiv@f3+1,___ftpack@arg+1
 17267  00552A  C08C  F077         	movff	___ftdiv@f3+2,___ftpack@arg+2
 17268  00552E  C08D  F078         	movff	___ftdiv@exp,___ftpack@exp
 17269  005532  C08E  F079         	movff	___ftdiv@sign,___ftpack@sign
 17270  005536  EC9D  F02C         	call	___ftpack	;wreg free
 17271  00553A  C075  F080         	movff	?___ftpack,?___ftdiv
 17272  00553E  C076  F081         	movff	?___ftpack+1,?___ftdiv+1
 17273  005542  C077  F082         	movff	?___ftpack+2,?___ftdiv+2
 17274  005546  0012               	return	
 17275  005548  0012               	return		;funcret
 17276  00554A                     __end_of___ftdiv:
 17277                           	opt stack 0
 17278                           tblptru	equ	0xFF8
 17279                           tblptrh	equ	0xFF7
 17280                           tblptrl	equ	0xFF6
 17281                           tablat	equ	0xFF5
 17282                           prodh	equ	0xFF4
 17283                           prodl	equ	0xFF3
 17284                           intcon	equ	0xFF2
 17285                           indf0	equ	0xFEF
 17286                           postinc0	equ	0xFEE
 17287                           fsr0h	equ	0xFEA
 17288                           fsr0l	equ	0xFE9
 17289                           wreg	equ	0xFE8
 17290                           indf1	equ	0xFE7
 17291                           postdec1	equ	0xFE5
 17292                           fsr1h	equ	0xFE2
 17293                           fsr1l	equ	0xFE1
 17294                           indf2	equ	0xFDF
 17295                           postinc2	equ	0xFDE
 17296                           fsr2h	equ	0xFDA
 17297                           fsr2l	equ	0xFD9
 17298                           status	equ	0xFD8
 17299                           
 17300 ;; *************** function _VoltageDividerON *****************
 17301 ;; Defined at:
 17302 ;;		line 146 in file "ADC.c"
 17303 ;; Parameters:    Size  Location     Type
 17304 ;;		None
 17305 ;; Auto vars:     Size  Location     Type
 17306 ;;		None
 17307 ;; Return value:  Size  Location     Type
 17308 ;;		None               void
 17309 ;; Registers used:
 17310 ;;		status,2, status,0
 17311 ;; Tracked objects:
 17312 ;;		On entry : 0/0
 17313 ;;		On exit  : 0/0
 17314 ;;		Unchanged: 0/0
 17315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17320 ;;Total ram usage:        0 bytes
 17321 ;; Hardware stack levels used:    1
 17322 ;; Hardware stack levels required when called:    6
 17323 ;; This function calls:
 17324 ;;		Nothing
 17325 ;; This function is called by:
 17326 ;;		_ReadVoltage
 17327 ;; This function uses a non-reentrant model
 17328 ;;
 17329                           
 17330                           	psect	text36
 17331  0078A8                     __ptext36:
 17332                           	opt stack 0
 17333  0078A8                     _VoltageDividerON:
 17334                           	opt stack 23
 17335                           
 17336                           ;ADC.c: 148: TRISBbits.TRISB5 = 0;
 17337                           
 17338                           ;incstack = 0
 17339  0078A8  9A93               	bcf	3987,5,c	;volatile
 17340                           
 17341                           ;ADC.c: 149: LATB &= ~0x20;
 17342  0078AA  9A8A               	bcf	3978,5,c	;volatile
 17343  0078AC  0012               	return		;funcret
 17344  0078AE                     __end_of_VoltageDividerON:
 17345                           	opt stack 0
 17346                           tblptru	equ	0xFF8
 17347                           tblptrh	equ	0xFF7
 17348                           tblptrl	equ	0xFF6
 17349                           tablat	equ	0xFF5
 17350                           prodh	equ	0xFF4
 17351                           prodl	equ	0xFF3
 17352                           intcon	equ	0xFF2
 17353                           indf0	equ	0xFEF
 17354                           postinc0	equ	0xFEE
 17355                           fsr0h	equ	0xFEA
 17356                           fsr0l	equ	0xFE9
 17357                           wreg	equ	0xFE8
 17358                           indf1	equ	0xFE7
 17359                           postdec1	equ	0xFE5
 17360                           fsr1h	equ	0xFE2
 17361                           fsr1l	equ	0xFE1
 17362                           indf2	equ	0xFDF
 17363                           postinc2	equ	0xFDE
 17364                           fsr2h	equ	0xFDA
 17365                           fsr2l	equ	0xFD9
 17366                           status	equ	0xFD8
 17367                           
 17368 ;; *************** function _VoltageDividerOFF *****************
 17369 ;; Defined at:
 17370 ;;		line 157 in file "ADC.c"
 17371 ;; Parameters:    Size  Location     Type
 17372 ;;		None
 17373 ;; Auto vars:     Size  Location     Type
 17374 ;;		None
 17375 ;; Return value:  Size  Location     Type
 17376 ;;		None               void
 17377 ;; Registers used:
 17378 ;;		None
 17379 ;; Tracked objects:
 17380 ;;		On entry : 0/0
 17381 ;;		On exit  : 0/0
 17382 ;;		Unchanged: 0/0
 17383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17388 ;;Total ram usage:        0 bytes
 17389 ;; Hardware stack levels used:    1
 17390 ;; Hardware stack levels required when called:    6
 17391 ;; This function calls:
 17392 ;;		Nothing
 17393 ;; This function is called by:
 17394 ;;		_ReadVoltage
 17395 ;; This function uses a non-reentrant model
 17396 ;;
 17397                           
 17398                           	psect	text37
 17399  0078BA                     __ptext37:
 17400                           	opt stack 0
 17401  0078BA                     _VoltageDividerOFF:
 17402                           	opt stack 23
 17403                           
 17404                           ;ADC.c: 159: TRISBbits.TRISB5 = 1;
 17405                           
 17406                           ;incstack = 0
 17407  0078BA  8A93               	bsf	3987,5,c	;volatile
 17408  0078BC  0012               	return		;funcret
 17409  0078BE                     __end_of_VoltageDividerOFF:
 17410                           	opt stack 0
 17411                           tblptru	equ	0xFF8
 17412                           tblptrh	equ	0xFF7
 17413                           tblptrl	equ	0xFF6
 17414                           tablat	equ	0xFF5
 17415                           prodh	equ	0xFF4
 17416                           prodl	equ	0xFF3
 17417                           intcon	equ	0xFF2
 17418                           indf0	equ	0xFEF
 17419                           postinc0	equ	0xFEE
 17420                           fsr0h	equ	0xFEA
 17421                           fsr0l	equ	0xFE9
 17422                           wreg	equ	0xFE8
 17423                           indf1	equ	0xFE7
 17424                           postdec1	equ	0xFE5
 17425                           fsr1h	equ	0xFE2
 17426                           fsr1l	equ	0xFE1
 17427                           indf2	equ	0xFDF
 17428                           postinc2	equ	0xFDE
 17429                           fsr2h	equ	0xFDA
 17430                           fsr2l	equ	0xFD9
 17431                           status	equ	0xFD8
 17432                           
 17433 ;; *************** function _InternalADC_Read *****************
 17434 ;; Defined at:
 17435 ;;		line 82 in file "ADC.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;  channel         1    wreg     unsigned char 
 17438 ;;  ADCcounts       2   30[BANK0 ] PTR unsigned int 
 17439 ;;		 -> ReadVoltage@temp(2), 
 17440 ;; Auto vars:     Size  Location     Type
 17441 ;;  channel         1   35[BANK0 ] unsigned char 
 17442 ;;  AnaChanSel      1   34[BANK0 ] unsigned char 
 17443 ;; Return value:  Size  Location     Type
 17444 ;;                  1    wreg      unsigned char 
 17445 ;; Registers used:
 17446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17447 ;; Tracked objects:
 17448 ;;		On entry : 0/0
 17449 ;;		On exit  : 0/0
 17450 ;;		Unchanged: 0/0
 17451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17456 ;;Total ram usage:        6 bytes
 17457 ;; Hardware stack levels used:    1
 17458 ;; Hardware stack levels required when called:    7
 17459 ;; This function calls:
 17460 ;;		_delayUS
 17461 ;; This function is called by:
 17462 ;;		_ReadVoltage
 17463 ;; This function uses a non-reentrant model
 17464 ;;
 17465                           
 17466                           	psect	text38
 17467  0068FA                     __ptext38:
 17468                           	opt stack 0
 17469  0068FA                     _InternalADC_Read:
 17470                           	opt stack 22
 17471                           
 17472                           ;incstack = 0
 17473                           ;InternalADC_Read@channel stored from wreg
 17474  0068FA  0100               	movlb	0	; () banked
 17475  0068FC  6F83               	movwf	InternalADC_Read@channel& (0+255),b
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;ADC.c: 84: unsigned char AnaChanSel = 1;
 17479  0068FE  0E01               	movlw	1
 17480  006900  0100               	movlb	0	; () banked
 17481  006902  6F82               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;ADC.c: 85: if(channel > 0b1100)
 17485  006904  0E0C               	movlw	12
 17486  006906  0100               	movlb	0	; () banked
 17487  006908  6583               	cpfsgt	InternalADC_Read@channel& (0+255),b
 17488  00690A  D00A               	goto	l11280
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;ADC.c: 86: {
 17492                           ;ADC.c: 87: *ADCcounts = 0;
 17493  00690C  C07E  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 17494  006910  C07F  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 17495  006914  0E00               	movlw	0
 17496  006916  6EDE               	movwf	postinc2,c
 17497  006918  0E00               	movlw	0
 17498  00691A  6EDD               	movwf	postdec2,c
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;ADC.c: 88: return 0;
 17502  00691C  0E00               	movlw	0
 17503                           
 17504                           ; BSR set to: 0
 17505  00691E  0012               	return	
 17506  006920                     l11280:
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;ADC.c: 89: }
 17510                           ;ADC.c: 90: if(channel > 1)
 17511  006920  0E01               	movlw	1
 17512  006922  0100               	movlb	0	; () banked
 17513  006924  6583               	cpfsgt	InternalADC_Read@channel& (0+255),b
 17514  006926  D001               	goto	l11284
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;ADC.c: 93: }
 17518  006928  D009               	goto	l11288
 17519  00692A                     l11284:
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;ADC.c: 94: else if (channel == 0)
 17523  00692A  0100               	movlb	0	; () banked
 17524  00692C  5183               	movf	InternalADC_Read@channel& (0+255),w,b
 17525  00692E  0100               	movlb	0	; () banked
 17526  006930  A4D8               	btfss	status,2,c
 17527  006932  D004               	goto	l11288
 17528                           
 17529                           ; BSR set to: 0
 17530                           ;ADC.c: 95: {
 17531                           ;ADC.c: 96: AnaChanSel = 0;
 17532  006934  0E00               	movlw	0
 17533  006936  0100               	movlb	0	; () banked
 17534  006938  6F82               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 17535                           
 17536                           ; BSR set to: 0
 17537  00693A  D000               	goto	l11288
 17538  00693C                     l11288:
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;ADC.c: 97: }
 17542                           ;ADC.c: 99: ADCON0 |= (AnaChanSel << 2);
 17543  00693C  0100               	movlb	0	; () banked
 17544  00693E  4582               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 17545  006940  46E8               	rlncf	wreg,f,c
 17546  006942  0BFC               	andlw	252
 17547  006944  12C2               	iorwf	4034,f,c	;volatile
 17548                           
 17549                           ; BSR set to: 0
 17550                           ;ADC.c: 101: ADCON1bits.VCFG0 = 0;
 17551  006946  98C1               	bcf	4033,4,c	;volatile
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;ADC.c: 102: ADCON1bits.VCFG1 = 0;
 17555  006948  9AC1               	bcf	4033,5,c	;volatile
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;ADC.c: 104: (ADCON0bits.ADON = 1);
 17559  00694A  80C2               	bsf	4034,0,c	;volatile
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;ADC.c: 105: delayUS(50);
 17563  00694C  0E32               	movlw	50
 17564  00694E  0100               	movlb	0	; () banked
 17565  006950  6F75               	movwf	delayUS@US& (0+255),b
 17566  006952  0E00               	movlw	0
 17567  006954  6F76               	movwf	(delayUS@US+1)& (0+255),b
 17568  006956  0E00               	movlw	0
 17569  006958  6F77               	movwf	(delayUS@US+2)& (0+255),b
 17570  00695A  0E00               	movlw	0
 17571  00695C  6F78               	movwf	(delayUS@US+3)& (0+255),b
 17572  00695E  EC34  F039         	call	_delayUS	;wreg free
 17573                           
 17574                           ;ADC.c: 107: ADCON0bits.GO = 1;
 17575  006962  82C2               	bsf	4034,1,c	;volatile
 17576                           
 17577                           ;ADC.c: 108: while(ADCON0bits.GO);
 17578  006964  D000               	goto	l533
 17579  006966                     l533:
 17580  006966  B2C2               	btfsc	4034,1,c	;volatile
 17581  006968  D7FE               	goto	l533
 17582                           
 17583                           ;ADC.c: 109: (ADCON0bits.ADON = 0);
 17584  00696A  90C2               	bcf	4034,0,c	;volatile
 17585                           
 17586                           ;ADC.c: 111: *ADCcounts = ((ADRESH << 8) + ADRESL);
 17587  00696C  50C3               	movf	4035,w,c	;volatile
 17588  00696E  CFC4 F080          	movff	4036,??_InternalADC_Read	;volatile
 17589  006972  0100               	movlb	0	; () banked
 17590  006974  6B81               	clrf	(??_InternalADC_Read+1)& (0+255),b
 17591  006976  C080  F081         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 17592  00697A  0100               	movlb	0	; () banked
 17593  00697C  6B80               	clrf	??_InternalADC_Read& (0+255),b
 17594  00697E  0100               	movlb	0	; () banked
 17595  006980  2780               	addwf	??_InternalADC_Read& (0+255),f,b
 17596  006982  0E00               	movlw	0
 17597  006984  2381               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 17598  006986  C07E  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 17599  00698A  C07F  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 17600  00698E  C080  FFDE         	movff	??_InternalADC_Read,postinc2
 17601  006992  C081  FFDD         	movff	??_InternalADC_Read+1,postdec2
 17602                           
 17603                           ; BSR set to: 0
 17604                           ;ADC.c: 112: return 1;
 17605  006996  0E01               	movlw	1
 17606  006998  0012               	return	
 17607                           
 17608                           ; BSR set to: 0
 17609                           
 17610                           ; BSR set to: 0
 17611  00699A  0012               	return		;funcret
 17612  00699C                     __end_of_InternalADC_Read:
 17613                           	opt stack 0
 17614                           tblptru	equ	0xFF8
 17615                           tblptrh	equ	0xFF7
 17616                           tblptrl	equ	0xFF6
 17617                           tablat	equ	0xFF5
 17618                           prodh	equ	0xFF4
 17619                           prodl	equ	0xFF3
 17620                           intcon	equ	0xFF2
 17621                           indf0	equ	0xFEF
 17622                           postinc0	equ	0xFEE
 17623                           fsr0h	equ	0xFEA
 17624                           fsr0l	equ	0xFE9
 17625                           wreg	equ	0xFE8
 17626                           indf1	equ	0xFE7
 17627                           postdec1	equ	0xFE5
 17628                           fsr1h	equ	0xFE2
 17629                           fsr1l	equ	0xFE1
 17630                           indf2	equ	0xFDF
 17631                           postinc2	equ	0xFDE
 17632                           postdec2	equ	0xFDD
 17633                           fsr2h	equ	0xFDA
 17634                           fsr2l	equ	0xFD9
 17635                           status	equ	0xFD8
 17636                           
 17637 ;; *************** function _Init_System *****************
 17638 ;; Defined at:
 17639 ;;		line 103 in file "user.c"
 17640 ;; Parameters:    Size  Location     Type
 17641 ;;		None
 17642 ;; Auto vars:     Size  Location     Type
 17643 ;;		None
 17644 ;; Return value:  Size  Location     Type
 17645 ;;		None               void
 17646 ;; Registers used:
 17647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17648 ;; Tracked objects:
 17649 ;;		On entry : 0/0
 17650 ;;		On exit  : 0/0
 17651 ;;		Unchanged: 0/0
 17652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17657 ;;Total ram usage:        0 bytes
 17658 ;; Hardware stack levels used:    1
 17659 ;; Hardware stack levels required when called:   13
 17660 ;; This function calls:
 17661 ;;		_EEPROMinitialized
 17662 ;;		_InitADC
 17663 ;;		_InitBluetooth
 17664 ;;		_InitIR
 17665 ;;		_InitTimers
 17666 ;;		_InitUART
 17667 ;;		_SetEEPROMdefault
 17668 ;;		_SyncEEPROMToGlobal
 17669 ;;		_SyncGlobalToEEPROM
 17670 ;;		_UARTchar
 17671 ;;		_UARTstring
 17672 ;;		_cleanBuffer
 17673 ;; This function is called by:
 17674 ;;		_main
 17675 ;; This function uses a non-reentrant model
 17676 ;;
 17677                           
 17678                           	psect	text39
 17679  006D06                     __ptext39:
 17680                           	opt stack 0
 17681  006D06                     _Init_System:
 17682                           	opt stack 17
 17683                           
 17684                           ;user.c: 105: cleanBuffer(&ReceivedString, 255);
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;incstack = 0
 17688  006D06  0E00               	movlw	low _ReceivedString
 17689  006D08  0100               	movlb	0	; () banked
 17690  006D0A  6F75               	movwf	cleanBuffer@data& (0+255),b
 17691  006D0C  0E06               	movlw	high _ReceivedString
 17692  006D0E  0100               	movlb	0	; () banked
 17693  006D10  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 17694  006D12  0E00               	movlw	0
 17695  006D14  0100               	movlb	0	; () banked
 17696  006D16  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
 17697  006D18  6977               	setf	cleanBuffer@count& (0+255),b
 17698  006D1A  EC83  F038         	call	_cleanBuffer	;wreg free
 17699                           
 17700                           ;user.c: 108: IPR1bits.RCIP = 0;
 17701  006D1E  9A9F               	bcf	3999,5,c	;volatile
 17702                           
 17703                           ;user.c: 109: INTCON2bits.RBIP = 1;
 17704  006D20  80F1               	bsf	intcon2,0,c	;volatile
 17705                           
 17706                           ;user.c: 110: INTCON2bits.TMR0IP = 1;
 17707  006D22  84F1               	bsf	intcon2,2,c	;volatile
 17708                           
 17709                           ;user.c: 111: IPR1bits.TMR2IP = 1;
 17710  006D24  829F               	bsf	3999,1,c	;volatile
 17711                           
 17712                           ;user.c: 112: IPR1bits.TMR1IP = 0;
 17713  006D26  909F               	bcf	3999,0,c	;volatile
 17714                           
 17715                           ;user.c: 113: IPR2bits.TMR3IP = 1;
 17716  006D28  82A2               	bsf	4002,1,c	;volatile
 17717                           
 17718                           ;user.c: 116: RCONbits.IPEN = 1;
 17719  006D2A  8ED0               	bsf	4048,7,c	;volatile
 17720                           
 17721                           ;user.c: 117: INTCONbits.PEIE = 1;
 17722  006D2C  8CF2               	bsf	intcon,6,c	;volatile
 17723                           
 17724                           ;user.c: 118: INTCONbits.GIE = 1;
 17725  006D2E  8EF2               	bsf	intcon,7,c	;volatile
 17726                           
 17727                           ;user.c: 120: SyncEEPROMToGlobal();
 17728  006D30  EC59  F026         	call	_SyncEEPROMToGlobal	;wreg free
 17729                           
 17730                           ;user.c: 121: if(!EEPROMinitialized())
 17731  006D34  EC91  F03B         	call	_EEPROMinitialized	;wreg free
 17732  006D38  0900               	iorlw	0
 17733  006D3A  A4D8               	btfss	status,2,c
 17734  006D3C  D008               	goto	l11436
 17735                           
 17736                           ;user.c: 122: {
 17737                           ;user.c: 123: SetEEPROMdefault();
 17738  006D3E  ECD2  F02E         	call	_SetEEPROMdefault	;wreg free
 17739                           
 17740                           ;user.c: 124: Global.EEPROMinitFlag = 59;
 17741  006D42  0E3B               	movlw	59
 17742  006D44  0107               	movlb	7	; () banked
 17743  006D46  6F2D               	movwf	(_Global+45)& (0+255),b
 17744                           
 17745                           ; BSR set to: 7
 17746                           ;user.c: 125: SyncGlobalToEEPROM();
 17747  006D48  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
 17748  006D4C  D000               	goto	l11436
 17749  006D4E                     l11436:
 17750                           
 17751                           ;user.c: 126: }
 17752                           ;user.c: 127: InitADC();
 17753  006D4E  ECB5  F03B         	call	_InitADC	;wreg free
 17754                           
 17755                           ;user.c: 128: InitIR();
 17756  006D52  EC89  F039         	call	_InitIR	;wreg free
 17757                           
 17758                           ;user.c: 129: InitUART(115200);
 17759  006D56  0E00               	movlw	0
 17760  006D58  0100               	movlb	0	; () banked
 17761  006D5A  6F9F               	movwf	InitUART@Baud& (0+255),b
 17762  006D5C  0EC2               	movlw	194
 17763  006D5E  6FA0               	movwf	(InitUART@Baud+1)& (0+255),b
 17764  006D60  0E01               	movlw	1
 17765  006D62  6FA1               	movwf	(InitUART@Baud+2)& (0+255),b
 17766  006D64  0E00               	movlw	0
 17767  006D66  6FA2               	movwf	(InitUART@Baud+3)& (0+255),b
 17768  006D68  EC49  F02E         	call	_InitUART	;wreg free
 17769                           
 17770                           ;user.c: 130: UARTstring(CRLN);
 17771  006D6C  0ED6               	movlw	low _CRLN
 17772  006D6E  0100               	movlb	0	; () banked
 17773  006D70  6F76               	movwf	UARTstring@data& (0+255),b
 17774  006D72  0E00               	movlw	high _CRLN
 17775  006D74  0100               	movlb	0	; () banked
 17776  006D76  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 17777  006D78  ECB0  F038         	call	_UARTstring	;wreg free
 17778                           
 17779                           ;user.c: 131: UARTchar('>');
 17780  006D7C  0E3E               	movlw	62
 17781  006D7E  EC74  F03B         	call	_UARTchar
 17782                           
 17783                           ;user.c: 132: InitBluetooth();
 17784  006D82  EC09  F039         	call	_InitBluetooth	;wreg free
 17785                           
 17786                           ;user.c: 133: InitTimers();
 17787  006D86  ECD6  F03B         	call	_InitTimers	;wreg free
 17788  006D8A  0012               	return		;funcret
 17789  006D8C                     __end_of_Init_System:
 17790                           	opt stack 0
 17791                           tblptru	equ	0xFF8
 17792                           tblptrh	equ	0xFF7
 17793                           tblptrl	equ	0xFF6
 17794                           tablat	equ	0xFF5
 17795                           prodh	equ	0xFF4
 17796                           prodl	equ	0xFF3
 17797                           intcon	equ	0xFF2
 17798                           intcon2	equ	0xFF1
 17799                           indf0	equ	0xFEF
 17800                           postinc0	equ	0xFEE
 17801                           fsr0h	equ	0xFEA
 17802                           fsr0l	equ	0xFE9
 17803                           wreg	equ	0xFE8
 17804                           indf1	equ	0xFE7
 17805                           postdec1	equ	0xFE5
 17806                           fsr1h	equ	0xFE2
 17807                           fsr1l	equ	0xFE1
 17808                           indf2	equ	0xFDF
 17809                           postinc2	equ	0xFDE
 17810                           postdec2	equ	0xFDD
 17811                           fsr2h	equ	0xFDA
 17812                           fsr2l	equ	0xFD9
 17813                           status	equ	0xFD8
 17814                           
 17815 ;; *************** function _SyncEEPROMToGlobal *****************
 17816 ;; Defined at:
 17817 ;;		line 281 in file "EEPROM.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;		None
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;  Temp          246    0[BANK3 ] struct EEdata
 17822 ;;  j               1  247[BANK3 ] unsigned char 
 17823 ;;  i               1  246[BANK3 ] unsigned char 
 17824 ;; Return value:  Size  Location     Type
 17825 ;;		None               void
 17826 ;; Registers used:
 17827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17828 ;; Tracked objects:
 17829 ;;		On entry : 0/0
 17830 ;;		On exit  : 0/0
 17831 ;;		Unchanged: 0/0
 17832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17834 ;;      Locals:         0       0       0       0     248       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17835 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17836 ;;      Totals:         0       4       0       0     248       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17837 ;;Total ram usage:      252 bytes
 17838 ;; Hardware stack levels used:    1
 17839 ;; Hardware stack levels required when called:    9
 17840 ;; This function calls:
 17841 ;;		_GetEEPROM
 17842 ;; This function is called by:
 17843 ;;		_Init_System
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847                           	psect	text40
 17848  004CB2                     __ptext40:
 17849                           	opt stack 0
 17850  004CB2                     _SyncEEPROMToGlobal:
 17851                           	opt stack 20
 17852                           
 17853                           ;EEPROM.c: 283: unsigned char i,j;
 17854                           ;EEPROM.c: 284: GBLdata Temp;
 17855                           ;EEPROM.c: 286: Temp = GetEEPROM();
 17856                           
 17857                           ;incstack = 0
 17858  004CB2  EC4E  F02B         	call	_GetEEPROM	;wreg free
 17859  004CB6  EE23  F000         	lfsr	2,SyncEEPROMToGlobal@Temp
 17860  004CBA  0EF5               	movlw	245
 17861  004CBC                     u8741:
 17862  004CBC  CFEB FFDB          	movff	plusw0,plusw2
 17863  004CC0  06E8               	decf	wreg,f,c
 17864  004CC2  E2FC               	bc	u8741
 17865                           
 17866                           ;EEPROM.c: 288: Global.BlueToothFlag = Temp.BlueToothFlag;
 17867  004CC4  C300  F700         	movff	SyncEEPROMToGlobal@Temp,_Global
 17868                           
 17869                           ;EEPROM.c: 289: Global.SWNECcode = Temp.SWNECcode;
 17870  004CC8  C301  F701         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 17871  004CCC  C302  F702         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 17872  004CD0  C303  F703         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 17873  004CD4  C304  F704         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 17874                           
 17875                           ;EEPROM.c: 290: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 17876  004CD8  C32D  F72D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 17877                           
 17878                           ;EEPROM.c: 291: for(i=0; i< 20; i++)
 17879  004CDC  0E00               	movlw	0
 17880  004CDE  0103               	movlb	3	; () banked
 17881  004CE0  6FF6               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 17882  004CE2  D04F               	goto	l8048
 17883                           
 17884                           ; BSR set to: 3
 17885                           
 17886                           ; BSR set to: 3
 17887  004CE4  D052               	goto	l717
 17888  004CE6                     l8034:
 17889                           
 17890                           ; BSR set to: 3
 17891                           ;EEPROM.c: 292: {
 17892                           ;EEPROM.c: 293: for(j=0; j < 2; j++)
 17893  004CE6  0E00               	movlw	0
 17894  004CE8  0103               	movlb	3	; () banked
 17895  004CEA  6FF7               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 17896  004CEC                     l8036:
 17897                           
 17898                           ; BSR set to: 3
 17899  004CEC  0E01               	movlw	1
 17900  004CEE  0103               	movlb	3	; () banked
 17901  004CF0  65F7               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 17902  004CF2  D001               	goto	l8040
 17903                           
 17904                           ; BSR set to: 3
 17905  004CF4  D044               	goto	l8046
 17906  004CF6                     l8040:
 17907                           
 17908                           ; BSR set to: 3
 17909                           ;EEPROM.c: 294: {
 17910                           ;EEPROM.c: 295: Global.RemoteButtonNEC[i][j] = Temp.RemoteButtonNEC[i][j];
 17911  004CF6  0103               	movlb	3	; () banked
 17912  004CF8  51F6               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 17913  004CFA  0D02               	mullw	2
 17914  004CFC  0E00               	movlw	low SyncEEPROMToGlobal@Temp
 17915  004CFE  0100               	movlb	0	; () banked
 17916  004D00  6F9B               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 17917  004D02  0E03               	movlw	high SyncEEPROMToGlobal@Temp
 17918  004D04  0100               	movlb	0	; () banked
 17919  004D06  6F9C               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 17920  004D08  50F3               	movf	prodl,w,c
 17921  004D0A  0100               	movlb	0	; () banked
 17922  004D0C  279B               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 17923  004D0E  50F4               	movf	prodh,w,c
 17924  004D10  0100               	movlb	0	; () banked
 17925  004D12  239C               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 17926  004D14  0103               	movlb	3	; () banked
 17927  004D16  51F7               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 17928  004D18  0D01               	mullw	1
 17929  004D1A  50F3               	movf	prodl,w,c
 17930  004D1C  0100               	movlb	0	; () banked
 17931  004D1E  279B               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 17932  004D20  50F4               	movf	prodh,w,c
 17933  004D22  0100               	movlb	0	; () banked
 17934  004D24  239C               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 17935  004D26  0E05               	movlw	5
 17936  004D28  0100               	movlb	0	; () banked
 17937  004D2A  259B               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 17938  004D2C  6ED9               	movwf	fsr2l,c
 17939  004D2E  0E00               	movlw	0
 17940  004D30  0100               	movlb	0	; () banked
 17941  004D32  219C               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 17942  004D34  6EDA               	movwf	fsr2h,c
 17943  004D36  0103               	movlb	3	; () banked
 17944  004D38  51F6               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 17945  004D3A  0D02               	mullw	2
 17946  004D3C  0E00               	movlw	low _Global
 17947  004D3E  0100               	movlb	0	; () banked
 17948  004D40  6F9D               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 17949  004D42  0E07               	movlw	high _Global
 17950  004D44  0100               	movlb	0	; () banked
 17951  004D46  6F9E               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 17952  004D48  0E05               	movlw	5
 17953  004D4A  0100               	movlb	0	; () banked
 17954  004D4C  279D               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 17955  004D4E  0E00               	movlw	0
 17956  004D50  239E               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 17957  004D52  50F3               	movf	prodl,w,c
 17958  004D54  0100               	movlb	0	; () banked
 17959  004D56  279D               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 17960  004D58  50F4               	movf	prodh,w,c
 17961  004D5A  0100               	movlb	0	; () banked
 17962  004D5C  239E               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 17963  004D5E  0103               	movlb	3	; () banked
 17964  004D60  51F7               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 17965  004D62  0D01               	mullw	1
 17966  004D64  50F3               	movf	prodl,w,c
 17967  004D66  0100               	movlb	0	; () banked
 17968  004D68  259D               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 17969  004D6A  6EE1               	movwf	fsr1l,c
 17970  004D6C  50F4               	movf	prodh,w,c
 17971  004D6E  0100               	movlb	0	; () banked
 17972  004D70  219E               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 17973  004D72  6EE2               	movwf	fsr1h,c
 17974  004D74  CFDF FFE7          	movff	indf2,indf1
 17975                           
 17976                           ; BSR set to: 0
 17977  004D78  0103               	movlb	3	; () banked
 17978  004D7A  2BF7               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 17979  004D7C  D7B7               	goto	l8036
 17980  004D7E                     l8046:
 17981                           
 17982                           ; BSR set to: 3
 17983  004D7E  0103               	movlb	3	; () banked
 17984  004D80  2BF6               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 17985  004D82                     l8048:
 17986                           
 17987                           ; BSR set to: 3
 17988  004D82  0E13               	movlw	19
 17989  004D84  0103               	movlb	3	; () banked
 17990  004D86  65F6               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 17991  004D88  D7AE               	goto	l8034
 17992  004D8A                     l717:
 17993                           
 17994                           ; BSR set to: 3
 17995                           ;EEPROM.c: 296: }
 17996                           ;EEPROM.c: 297: }
 17997                           ;EEPROM.c: 298: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 17998  004D8A  C32D  F72D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 17999                           
 18000                           ; BSR set to: 3
 18001                           ;EEPROM.c: 299: for(i=0; i< 20; i++)
 18002  004D8E  0E00               	movlw	0
 18003  004D90  0103               	movlb	3	; () banked
 18004  004D92  6FF6               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 18005                           
 18006                           ; BSR set to: 3
 18007  004D94  0E13               	movlw	19
 18008  004D96  0103               	movlb	3	; () banked
 18009  004D98  65F6               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 18010  004D9A  D002               	goto	l8056
 18011  004D9C  0012               	return	
 18012                           
 18013                           ; BSR set to: 3
 18014  004D9E  0012               	return	
 18015  004DA0                     l8056:
 18016                           
 18017                           ; BSR set to: 3
 18018                           ;EEPROM.c: 300: {
 18019                           ;EEPROM.c: 301: for(j=0; j < 2; j++)
 18020  004DA0  0E00               	movlw	0
 18021  004DA2  0103               	movlb	3	; () banked
 18022  004DA4  6FF7               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 18023  004DA6                     l8058:
 18024                           
 18025                           ; BSR set to: 3
 18026  004DA6  0E01               	movlw	1
 18027  004DA8  0103               	movlb	3	; () banked
 18028  004DAA  65F7               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 18029  004DAC  D001               	goto	l8062
 18030                           
 18031                           ; BSR set to: 3
 18032  004DAE  D044               	goto	l8068
 18033  004DB0                     l8062:
 18034                           
 18035                           ; BSR set to: 3
 18036                           ;EEPROM.c: 302: {
 18037                           ;EEPROM.c: 303: Global.RemoteButton1RF[i][j] = Temp.RemoteButton1RF[i][j];
 18038  004DB0  0103               	movlb	3	; () banked
 18039  004DB2  51F6               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 18040  004DB4  0D02               	mullw	2
 18041  004DB6  0E00               	movlw	low SyncEEPROMToGlobal@Temp
 18042  004DB8  0100               	movlb	0	; () banked
 18043  004DBA  6F9B               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 18044  004DBC  0E03               	movlw	high SyncEEPROMToGlobal@Temp
 18045  004DBE  0100               	movlb	0	; () banked
 18046  004DC0  6F9C               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 18047  004DC2  50F3               	movf	prodl,w,c
 18048  004DC4  0100               	movlb	0	; () banked
 18049  004DC6  279B               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 18050  004DC8  50F4               	movf	prodh,w,c
 18051  004DCA  0100               	movlb	0	; () banked
 18052  004DCC  239C               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 18053  004DCE  0103               	movlb	3	; () banked
 18054  004DD0  51F7               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 18055  004DD2  0D01               	mullw	1
 18056  004DD4  50F3               	movf	prodl,w,c
 18057  004DD6  0100               	movlb	0	; () banked
 18058  004DD8  279B               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 18059  004DDA  50F4               	movf	prodh,w,c
 18060  004DDC  0100               	movlb	0	; () banked
 18061  004DDE  239C               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 18062  004DE0  0E2E               	movlw	46
 18063  004DE2  0100               	movlb	0	; () banked
 18064  004DE4  259B               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 18065  004DE6  6ED9               	movwf	fsr2l,c
 18066  004DE8  0E00               	movlw	0
 18067  004DEA  0100               	movlb	0	; () banked
 18068  004DEC  219C               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 18069  004DEE  6EDA               	movwf	fsr2h,c
 18070  004DF0  0103               	movlb	3	; () banked
 18071  004DF2  51F6               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 18072  004DF4  0D02               	mullw	2
 18073  004DF6  0E00               	movlw	low _Global
 18074  004DF8  0100               	movlb	0	; () banked
 18075  004DFA  6F9D               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 18076  004DFC  0E07               	movlw	high _Global
 18077  004DFE  0100               	movlb	0	; () banked
 18078  004E00  6F9E               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 18079  004E02  0E2E               	movlw	46
 18080  004E04  0100               	movlb	0	; () banked
 18081  004E06  279D               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 18082  004E08  0E00               	movlw	0
 18083  004E0A  239E               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 18084  004E0C  50F3               	movf	prodl,w,c
 18085  004E0E  0100               	movlb	0	; () banked
 18086  004E10  279D               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 18087  004E12  50F4               	movf	prodh,w,c
 18088  004E14  0100               	movlb	0	; () banked
 18089  004E16  239E               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 18090  004E18  0103               	movlb	3	; () banked
 18091  004E1A  51F7               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 18092  004E1C  0D01               	mullw	1
 18093  004E1E  50F3               	movf	prodl,w,c
 18094  004E20  0100               	movlb	0	; () banked
 18095  004E22  259D               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 18096  004E24  6EE1               	movwf	fsr1l,c
 18097  004E26  50F4               	movf	prodh,w,c
 18098  004E28  0100               	movlb	0	; () banked
 18099  004E2A  219E               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 18100  004E2C  6EE2               	movwf	fsr1h,c
 18101  004E2E  CFDF FFE7          	movff	indf2,indf1
 18102                           
 18103                           ; BSR set to: 0
 18104  004E32  0103               	movlb	3	; () banked
 18105  004E34  2BF7               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 18106  004E36  D7B7               	goto	l8058
 18107  004E38                     l8068:
 18108                           
 18109                           ; BSR set to: 3
 18110  004E38  0103               	movlb	3	; () banked
 18111  004E3A  2BF6               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 18112                           
 18113                           ; BSR set to: 3
 18114  004E3C  0E13               	movlw	19
 18115  004E3E  0103               	movlb	3	; () banked
 18116  004E40  65F6               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 18117  004E42  D7AE               	goto	l8056
 18118  004E44  0012               	return	
 18119                           
 18120                           ; BSR set to: 3
 18121                           
 18122                           ; BSR set to: 3
 18123  004E46  0012               	return		;funcret
 18124  004E48                     __end_of_SyncEEPROMToGlobal:
 18125                           	opt stack 0
 18126                           tblptru	equ	0xFF8
 18127                           tblptrh	equ	0xFF7
 18128                           tblptrl	equ	0xFF6
 18129                           tablat	equ	0xFF5
 18130                           prodh	equ	0xFF4
 18131                           prodl	equ	0xFF3
 18132                           intcon	equ	0xFF2
 18133                           intcon2	equ	0xFF1
 18134                           indf0	equ	0xFEF
 18135                           postinc0	equ	0xFEE
 18136                           plusw0	equ	0xFEB
 18137                           fsr0h	equ	0xFEA
 18138                           fsr0l	equ	0xFE9
 18139                           wreg	equ	0xFE8
 18140                           indf1	equ	0xFE7
 18141                           postdec1	equ	0xFE5
 18142                           fsr1h	equ	0xFE2
 18143                           fsr1l	equ	0xFE1
 18144                           indf2	equ	0xFDF
 18145                           postinc2	equ	0xFDE
 18146                           postdec2	equ	0xFDD
 18147                           plusw2	equ	0xFDB
 18148                           fsr2h	equ	0xFDA
 18149                           fsr2l	equ	0xFD9
 18150                           status	equ	0xFD8
 18151                           
 18152 ;; *************** function _GetEEPROM *****************
 18153 ;; Defined at:
 18154 ;;		line 118 in file "EEPROM.c"
 18155 ;; Parameters:    Size  Location     Type
 18156 ;;		None
 18157 ;; Auto vars:     Size  Location     Type
 18158 ;;  Temp          246    1[BANK2 ] struct EEdata
 18159 ;;  j               1  248[BANK2 ] unsigned char 
 18160 ;;  i               1  247[BANK2 ] unsigned char 
 18161 ;;  Arrayspot       1    0[BANK2 ] unsigned char 
 18162 ;; Return value:  Size  Location     Type
 18163 ;;                  246    0[BANK1 ] struct EEdata
 18164 ;; Registers used:
 18165 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18171 ;;      Params:         0       0     246       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18172 ;;      Locals:         0       0       0     249       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18174 ;;      Totals:         0       2     246     249       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18175 ;;Total ram usage:      497 bytes
 18176 ;; Hardware stack levels used:    1
 18177 ;; Hardware stack levels required when called:    8
 18178 ;; This function calls:
 18179 ;;		_GetMemoryChar
 18180 ;;		_GetMemoryLong
 18181 ;; This function is called by:
 18182 ;;		_SyncEEPROMToGlobal
 18183 ;; This function uses a non-reentrant model
 18184 ;;
 18185                           
 18186                           	psect	text41
 18187  00569C                     __ptext41:
 18188                           	opt stack 0
 18189  00569C                     _GetEEPROM:
 18190                           	opt stack 20
 18191                           
 18192                           ;EEPROM.c: 120: unsigned char i,j;
 18193                           ;EEPROM.c: 121: unsigned char Arrayspot=5;
 18194                           
 18195                           ; BSR set to: 3
 18196                           ;incstack = 0
 18197  00569C  0E05               	movlw	5
 18198  00569E  0102               	movlb	2	; () banked
 18199  0056A0  6F00               	movwf	GetEEPROM@Arrayspot& (0+255),b
 18200                           
 18201                           ; BSR set to: 2
 18202                           ;EEPROM.c: 123: GBLdata Temp;
 18203                           ;EEPROM.c: 124: Temp.BlueToothFlag = GetMemoryChar(0);
 18204  0056A2  0E00               	movlw	0
 18205  0056A4  EC3C  F03B         	call	_GetMemoryChar
 18206  0056A8  0100               	movlb	0	; () banked
 18207  0056AA  5178               	movf	?_GetMemoryChar& (0+255),w,b
 18208  0056AC  0102               	movlb	2	; () banked
 18209  0056AE  6F01               	movwf	GetEEPROM@Temp& (0+255),b
 18210                           
 18211                           ; BSR set to: 2
 18212                           ;EEPROM.c: 125: Temp.SWNECcode = GetMemoryLong(1);
 18213  0056B0  0E01               	movlw	1
 18214  0056B2  ECE3  F027         	call	_GetMemoryLong
 18215  0056B6  C078  F202         	movff	?_GetMemoryLong,GetEEPROM@Temp+1
 18216  0056BA  C079  F203         	movff	?_GetMemoryLong+1,GetEEPROM@Temp+2
 18217  0056BE  C07A  F204         	movff	?_GetMemoryLong+2,GetEEPROM@Temp+3
 18218  0056C2  C07B  F205         	movff	?_GetMemoryLong+3,GetEEPROM@Temp+4
 18219                           
 18220                           ;EEPROM.c: 126: for(i=0; i< 20; i++)
 18221  0056C6  0E00               	movlw	0
 18222  0056C8  0102               	movlb	2	; () banked
 18223  0056CA  6FF7               	movwf	GetEEPROM@i& (0+255),b
 18224  0056CC                     l7764:
 18225                           
 18226                           ; BSR set to: 2
 18227  0056CC  0E13               	movlw	19
 18228  0056CE  0102               	movlb	2	; () banked
 18229  0056D0  65F7               	cpfsgt	GetEEPROM@i& (0+255),b
 18230  0056D2  D001               	goto	l7768
 18231                           
 18232                           ; BSR set to: 2
 18233  0056D4  D037               	goto	l7786
 18234  0056D6                     l7768:
 18235                           
 18236                           ; BSR set to: 2
 18237                           ;EEPROM.c: 127: {
 18238                           ;EEPROM.c: 128: for(j=0; j < 2; j++)
 18239  0056D6  0E00               	movlw	0
 18240  0056D8  0102               	movlb	2	; () banked
 18241  0056DA  6FF8               	movwf	GetEEPROM@j& (0+255),b
 18242  0056DC                     l7770:
 18243                           
 18244                           ; BSR set to: 2
 18245  0056DC  0E01               	movlw	1
 18246  0056DE  0102               	movlb	2	; () banked
 18247  0056E0  65F8               	cpfsgt	GetEEPROM@j& (0+255),b
 18248  0056E2  D001               	goto	l7774
 18249                           
 18250                           ; BSR set to: 2
 18251  0056E4  D02C               	goto	l7782
 18252  0056E6                     l7774:
 18253                           
 18254                           ; BSR set to: 2
 18255                           ;EEPROM.c: 129: {
 18256                           ;EEPROM.c: 130: Temp.RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 18257  0056E6  0102               	movlb	2	; () banked
 18258  0056E8  51F7               	movf	GetEEPROM@i& (0+255),w,b
 18259  0056EA  0D02               	mullw	2
 18260  0056EC  0E01               	movlw	low GetEEPROM@Temp
 18261  0056EE  0100               	movlb	0	; () banked
 18262  0056F0  6F99               	movwf	??_GetEEPROM& (0+255),b
 18263  0056F2  0E02               	movlw	high GetEEPROM@Temp
 18264  0056F4  0100               	movlb	0	; () banked
 18265  0056F6  6F9A               	movwf	(??_GetEEPROM+1)& (0+255),b
 18266  0056F8  50F3               	movf	prodl,w,c
 18267  0056FA  0100               	movlb	0	; () banked
 18268  0056FC  2799               	addwf	??_GetEEPROM& (0+255),f,b
 18269  0056FE  50F4               	movf	prodh,w,c
 18270  005700  0100               	movlb	0	; () banked
 18271  005702  239A               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 18272  005704  0102               	movlb	2	; () banked
 18273  005706  51F8               	movf	GetEEPROM@j& (0+255),w,b
 18274  005708  0D01               	mullw	1
 18275  00570A  50F3               	movf	prodl,w,c
 18276  00570C  0100               	movlb	0	; () banked
 18277  00570E  2799               	addwf	??_GetEEPROM& (0+255),f,b
 18278  005710  50F4               	movf	prodh,w,c
 18279  005712  0100               	movlb	0	; () banked
 18280  005714  239A               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 18281  005716  0E05               	movlw	5
 18282  005718  0100               	movlb	0	; () banked
 18283  00571A  2599               	addwf	??_GetEEPROM& (0+255),w,b
 18284  00571C  6ED9               	movwf	fsr2l,c
 18285  00571E  0E00               	movlw	0
 18286  005720  0100               	movlb	0	; () banked
 18287  005722  219A               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 18288  005724  6EDA               	movwf	fsr2h,c
 18289  005726  0102               	movlb	2	; () banked
 18290  005728  5100               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 18291  00572A  EC3C  F03B         	call	_GetMemoryChar
 18292  00572E  0100               	movlb	0	; () banked
 18293  005730  5178               	movf	?_GetMemoryChar& (0+255),w,b
 18294  005732  6EDF               	movwf	indf2,c
 18295                           
 18296                           ; BSR set to: 0
 18297  005734  0102               	movlb	2	; () banked
 18298  005736  2B00               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 18299                           
 18300                           ; BSR set to: 2
 18301  005738  0102               	movlb	2	; () banked
 18302  00573A  2BF8               	incf	GetEEPROM@j& (0+255),f,b
 18303  00573C  D7CF               	goto	l7770
 18304  00573E                     l7782:
 18305                           
 18306                           ; BSR set to: 2
 18307  00573E  0102               	movlb	2	; () banked
 18308  005740  2BF7               	incf	GetEEPROM@i& (0+255),f,b
 18309  005742  D7C4               	goto	l7764
 18310  005744                     l7786:
 18311                           
 18312                           ; BSR set to: 2
 18313                           ;EEPROM.c: 131: }
 18314                           ;EEPROM.c: 132: }
 18315                           ;EEPROM.c: 133: Temp.EEPROMinitFlag = GetMemoryChar((2*20 + 5));
 18316  005744  0E2D               	movlw	45
 18317  005746  EC3C  F03B         	call	_GetMemoryChar
 18318  00574A  0100               	movlb	0	; () banked
 18319  00574C  5178               	movf	?_GetMemoryChar& (0+255),w,b
 18320  00574E  0102               	movlb	2	; () banked
 18321  005750  6F2E               	movwf	(GetEEPROM@Temp+45)& (0+255),b
 18322                           
 18323                           ; BSR set to: 2
 18324                           ;EEPROM.c: 134: Arrayspot=(2*20 + 7);
 18325  005752  0E2F               	movlw	47
 18326  005754  0102               	movlb	2	; () banked
 18327  005756  6F00               	movwf	GetEEPROM@Arrayspot& (0+255),b
 18328                           
 18329                           ; BSR set to: 2
 18330                           ;EEPROM.c: 135: for(i=0; i< 20; i++)
 18331  005758  0E00               	movlw	0
 18332  00575A  0102               	movlb	2	; () banked
 18333  00575C  6FF7               	movwf	GetEEPROM@i& (0+255),b
 18334  00575E                     l7792:
 18335                           
 18336                           ; BSR set to: 2
 18337  00575E  0E13               	movlw	19
 18338  005760  0102               	movlb	2	; () banked
 18339  005762  65F7               	cpfsgt	GetEEPROM@i& (0+255),b
 18340  005764  D001               	goto	l7796
 18341                           
 18342                           ; BSR set to: 2
 18343  005766  D037               	goto	l7814
 18344  005768                     l7796:
 18345                           
 18346                           ; BSR set to: 2
 18347                           ;EEPROM.c: 136: {
 18348                           ;EEPROM.c: 137: for(j=0; j < 2; j++)
 18349  005768  0E00               	movlw	0
 18350  00576A  0102               	movlb	2	; () banked
 18351  00576C  6FF8               	movwf	GetEEPROM@j& (0+255),b
 18352  00576E                     l7798:
 18353                           
 18354                           ; BSR set to: 2
 18355  00576E  0E01               	movlw	1
 18356  005770  0102               	movlb	2	; () banked
 18357  005772  65F8               	cpfsgt	GetEEPROM@j& (0+255),b
 18358  005774  D001               	goto	l7802
 18359                           
 18360                           ; BSR set to: 2
 18361  005776  D02C               	goto	l7810
 18362  005778                     l7802:
 18363                           
 18364                           ; BSR set to: 2
 18365                           ;EEPROM.c: 138: {
 18366                           ;EEPROM.c: 139: Temp.RemoteButton1RF[i][j] = GetMemoryChar(Arrayspot++);
 18367  005778  0102               	movlb	2	; () banked
 18368  00577A  51F7               	movf	GetEEPROM@i& (0+255),w,b
 18369  00577C  0D02               	mullw	2
 18370  00577E  0E01               	movlw	low GetEEPROM@Temp
 18371  005780  0100               	movlb	0	; () banked
 18372  005782  6F99               	movwf	??_GetEEPROM& (0+255),b
 18373  005784  0E02               	movlw	high GetEEPROM@Temp
 18374  005786  0100               	movlb	0	; () banked
 18375  005788  6F9A               	movwf	(??_GetEEPROM+1)& (0+255),b
 18376  00578A  50F3               	movf	prodl,w,c
 18377  00578C  0100               	movlb	0	; () banked
 18378  00578E  2799               	addwf	??_GetEEPROM& (0+255),f,b
 18379  005790  50F4               	movf	prodh,w,c
 18380  005792  0100               	movlb	0	; () banked
 18381  005794  239A               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 18382  005796  0102               	movlb	2	; () banked
 18383  005798  51F8               	movf	GetEEPROM@j& (0+255),w,b
 18384  00579A  0D01               	mullw	1
 18385  00579C  50F3               	movf	prodl,w,c
 18386  00579E  0100               	movlb	0	; () banked
 18387  0057A0  2799               	addwf	??_GetEEPROM& (0+255),f,b
 18388  0057A2  50F4               	movf	prodh,w,c
 18389  0057A4  0100               	movlb	0	; () banked
 18390  0057A6  239A               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 18391  0057A8  0E2E               	movlw	46
 18392  0057AA  0100               	movlb	0	; () banked
 18393  0057AC  2599               	addwf	??_GetEEPROM& (0+255),w,b
 18394  0057AE  6ED9               	movwf	fsr2l,c
 18395  0057B0  0E00               	movlw	0
 18396  0057B2  0100               	movlb	0	; () banked
 18397  0057B4  219A               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 18398  0057B6  6EDA               	movwf	fsr2h,c
 18399  0057B8  0102               	movlb	2	; () banked
 18400  0057BA  5100               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 18401  0057BC  EC3C  F03B         	call	_GetMemoryChar
 18402  0057C0  0100               	movlb	0	; () banked
 18403  0057C2  5178               	movf	?_GetMemoryChar& (0+255),w,b
 18404  0057C4  6EDF               	movwf	indf2,c
 18405                           
 18406                           ; BSR set to: 0
 18407  0057C6  0102               	movlb	2	; () banked
 18408  0057C8  2B00               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 18409                           
 18410                           ; BSR set to: 2
 18411  0057CA  0102               	movlb	2	; () banked
 18412  0057CC  2BF8               	incf	GetEEPROM@j& (0+255),f,b
 18413  0057CE  D7CF               	goto	l7798
 18414  0057D0                     l7810:
 18415                           
 18416                           ; BSR set to: 2
 18417  0057D0  0102               	movlb	2	; () banked
 18418  0057D2  2BF7               	incf	GetEEPROM@i& (0+255),f,b
 18419  0057D4  D7C4               	goto	l7792
 18420  0057D6                     l7814:
 18421                           
 18422                           ; BSR set to: 2
 18423                           ;EEPROM.c: 140: }
 18424                           ;EEPROM.c: 141: }
 18425                           ;EEPROM.c: 143: return Temp;
 18426  0057D6  EE22  F001         	lfsr	2,GetEEPROM@Temp
 18427  0057DA  EE01  F000         	lfsr	0,?_GetEEPROM
 18428  0057DE  0EF5               	movlw	245
 18429  0057E0                     u8471:
 18430  0057E0  CFDB FFEB          	movff	plusw2,plusw0
 18431  0057E4  06E8               	decf	wreg,f,c
 18432  0057E6  E2FC               	bc	u8471
 18433  0057E8  0012               	return	
 18434                           
 18435                           ; BSR set to: 2
 18436                           
 18437                           ; BSR set to: 2
 18438  0057EA  0012               	return		;funcret
 18439  0057EC                     __end_of_GetEEPROM:
 18440                           	opt stack 0
 18441                           tblptru	equ	0xFF8
 18442                           tblptrh	equ	0xFF7
 18443                           tblptrl	equ	0xFF6
 18444                           tablat	equ	0xFF5
 18445                           prodh	equ	0xFF4
 18446                           prodl	equ	0xFF3
 18447                           intcon	equ	0xFF2
 18448                           intcon2	equ	0xFF1
 18449                           indf0	equ	0xFEF
 18450                           postinc0	equ	0xFEE
 18451                           plusw0	equ	0xFEB
 18452                           fsr0h	equ	0xFEA
 18453                           fsr0l	equ	0xFE9
 18454                           wreg	equ	0xFE8
 18455                           indf1	equ	0xFE7
 18456                           postdec1	equ	0xFE5
 18457                           fsr1h	equ	0xFE2
 18458                           fsr1l	equ	0xFE1
 18459                           indf2	equ	0xFDF
 18460                           postinc2	equ	0xFDE
 18461                           postdec2	equ	0xFDD
 18462                           plusw2	equ	0xFDB
 18463                           fsr2h	equ	0xFDA
 18464                           fsr2l	equ	0xFD9
 18465                           status	equ	0xFD8
 18466                           
 18467 ;; *************** function _SetEEPROMdefault *****************
 18468 ;; Defined at:
 18469 ;;		line 236 in file "EEPROM.c"
 18470 ;; Parameters:    Size  Location     Type
 18471 ;;		None
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;  j               1   87[BANK0 ] unsigned char 
 18474 ;;  i               1   86[BANK0 ] unsigned char 
 18475 ;; Return value:  Size  Location     Type
 18476 ;;		None               void
 18477 ;; Registers used:
 18478 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18479 ;; Tracked objects:
 18480 ;;		On entry : 0/0
 18481 ;;		On exit  : 0/0
 18482 ;;		Unchanged: 0/0
 18483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18487 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18488 ;;Total ram usage:        4 bytes
 18489 ;; Hardware stack levels used:    1
 18490 ;; Hardware stack levels required when called:   11
 18491 ;; This function calls:
 18492 ;;		_SyncGlobalToEEPROM
 18493 ;; This function is called by:
 18494 ;;		_Init_System
 18495 ;; This function uses a non-reentrant model
 18496 ;;
 18497                           
 18498                           	psect	text42
 18499  005DA4                     __ptext42:
 18500                           	opt stack 0
 18501  005DA4                     _SetEEPROMdefault:
 18502                           	opt stack 18
 18503                           
 18504                           ;EEPROM.c: 238: unsigned char i,j;
 18505                           ;EEPROM.c: 240: Global.BlueToothFlag = 0;
 18506                           
 18507                           ; BSR set to: 2
 18508                           ;incstack = 0
 18509  005DA4  0E00               	movlw	0
 18510  005DA6  0107               	movlb	7	; () banked
 18511  005DA8  6F00               	movwf	_Global& (0+255),b
 18512                           
 18513                           ;EEPROM.c: 241: Global.SWNECcode = 0x00FF00FF;
 18514  005DAA  0EFF               	movlw	255
 18515  005DAC  0107               	movlb	7	; () banked
 18516  005DAE  6F01               	movwf	(_Global+1)& (0+255),b
 18517  005DB0  0E00               	movlw	0
 18518  005DB2  6F02               	movwf	(_Global+2)& (0+255),b
 18519  005DB4  0EFF               	movlw	255
 18520  005DB6  6F03               	movwf	(_Global+3)& (0+255),b
 18521  005DB8  0E00               	movlw	0
 18522  005DBA  6F04               	movwf	(_Global+4)& (0+255),b
 18523                           
 18524                           ;EEPROM.c: 242: Global.EEPROMinitFlag = 0;
 18525  005DBC  0E00               	movlw	0
 18526  005DBE  0107               	movlb	7	; () banked
 18527  005DC0  6F2D               	movwf	(_Global+45)& (0+255),b
 18528                           
 18529                           ;EEPROM.c: 243: for(i=0; i< 20; i++)
 18530  005DC2  0E00               	movlw	0
 18531  005DC4  0100               	movlb	0	; () banked
 18532  005DC6  6FB6               	movwf	SetEEPROMdefault@i& (0+255),b
 18533  005DC8                     l8086:
 18534                           
 18535                           ; BSR set to: 0
 18536  005DC8  0E13               	movlw	19
 18537  005DCA  0100               	movlb	0	; () banked
 18538  005DCC  65B6               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 18539  005DCE  D001               	goto	l8090
 18540                           
 18541                           ; BSR set to: 0
 18542  005DD0  D02F               	goto	l8106
 18543  005DD2                     l8090:
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;EEPROM.c: 244: {
 18547                           ;EEPROM.c: 245: for(j=0; j < 2; j++)
 18548  005DD2  0E00               	movlw	0
 18549  005DD4  0100               	movlb	0	; () banked
 18550  005DD6  6FB7               	movwf	SetEEPROMdefault@j& (0+255),b
 18551  005DD8                     l8092:
 18552                           
 18553                           ; BSR set to: 0
 18554  005DD8  0E01               	movlw	1
 18555  005DDA  0100               	movlb	0	; () banked
 18556  005DDC  65B7               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 18557  005DDE  D001               	goto	l8096
 18558                           
 18559                           ; BSR set to: 0
 18560  005DE0  D024               	goto	l8102
 18561  005DE2                     l8096:
 18562                           
 18563                           ; BSR set to: 0
 18564                           ;EEPROM.c: 246: {
 18565                           ;EEPROM.c: 247: Global.RemoteButtonNEC[i][j] = 0x00;
 18566  005DE2  0100               	movlb	0	; () banked
 18567  005DE4  51B6               	movf	SetEEPROMdefault@i& (0+255),w,b
 18568  005DE6  0D02               	mullw	2
 18569  005DE8  0E00               	movlw	low _Global
 18570  005DEA  0100               	movlb	0	; () banked
 18571  005DEC  6FB4               	movwf	??_SetEEPROMdefault& (0+255),b
 18572  005DEE  0E07               	movlw	high _Global
 18573  005DF0  0100               	movlb	0	; () banked
 18574  005DF2  6FB5               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 18575  005DF4  0E05               	movlw	5
 18576  005DF6  0100               	movlb	0	; () banked
 18577  005DF8  27B4               	addwf	??_SetEEPROMdefault& (0+255),f,b
 18578  005DFA  0E00               	movlw	0
 18579  005DFC  23B5               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 18580  005DFE  50F3               	movf	prodl,w,c
 18581  005E00  0100               	movlb	0	; () banked
 18582  005E02  27B4               	addwf	??_SetEEPROMdefault& (0+255),f,b
 18583  005E04  50F4               	movf	prodh,w,c
 18584  005E06  0100               	movlb	0	; () banked
 18585  005E08  23B5               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 18586  005E0A  0100               	movlb	0	; () banked
 18587  005E0C  51B7               	movf	SetEEPROMdefault@j& (0+255),w,b
 18588  005E0E  0D01               	mullw	1
 18589  005E10  50F3               	movf	prodl,w,c
 18590  005E12  0100               	movlb	0	; () banked
 18591  005E14  25B4               	addwf	??_SetEEPROMdefault& (0+255),w,b
 18592  005E16  6ED9               	movwf	fsr2l,c
 18593  005E18  50F4               	movf	prodh,w,c
 18594  005E1A  0100               	movlb	0	; () banked
 18595  005E1C  21B5               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 18596  005E1E  6EDA               	movwf	fsr2h,c
 18597  005E20  0E00               	movlw	0
 18598  005E22  6EDF               	movwf	indf2,c
 18599                           
 18600                           ; BSR set to: 0
 18601  005E24  0100               	movlb	0	; () banked
 18602  005E26  2BB7               	incf	SetEEPROMdefault@j& (0+255),f,b
 18603  005E28  D7D7               	goto	l8092
 18604  005E2A                     l8102:
 18605                           
 18606                           ; BSR set to: 0
 18607  005E2A  0100               	movlb	0	; () banked
 18608  005E2C  2BB6               	incf	SetEEPROMdefault@i& (0+255),f,b
 18609  005E2E  D7CC               	goto	l8086
 18610  005E30                     l8106:
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;EEPROM.c: 248: }
 18614                           ;EEPROM.c: 249: }
 18615                           ;EEPROM.c: 250: for(i=0; i< 20; i++)
 18616  005E30  0E00               	movlw	0
 18617  005E32  0100               	movlb	0	; () banked
 18618  005E34  6FB6               	movwf	SetEEPROMdefault@i& (0+255),b
 18619  005E36                     l8108:
 18620                           
 18621                           ; BSR set to: 0
 18622  005E36  0E13               	movlw	19
 18623  005E38  0100               	movlb	0	; () banked
 18624  005E3A  65B6               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 18625  005E3C  D001               	goto	l8112
 18626                           
 18627                           ; BSR set to: 0
 18628  005E3E  D02F               	goto	l8128
 18629  005E40                     l8112:
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;EEPROM.c: 251: {
 18633                           ;EEPROM.c: 252: for(j=0; j < 2; j++)
 18634  005E40  0E00               	movlw	0
 18635  005E42  0100               	movlb	0	; () banked
 18636  005E44  6FB7               	movwf	SetEEPROMdefault@j& (0+255),b
 18637  005E46                     l8114:
 18638                           
 18639                           ; BSR set to: 0
 18640  005E46  0E01               	movlw	1
 18641  005E48  0100               	movlb	0	; () banked
 18642  005E4A  65B7               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 18643  005E4C  D001               	goto	l8118
 18644                           
 18645                           ; BSR set to: 0
 18646  005E4E  D024               	goto	l8124
 18647  005E50                     l8118:
 18648                           
 18649                           ; BSR set to: 0
 18650                           ;EEPROM.c: 253: {
 18651                           ;EEPROM.c: 254: Global.RemoteButton1RF[i][j] = 0x00;
 18652  005E50  0100               	movlb	0	; () banked
 18653  005E52  51B6               	movf	SetEEPROMdefault@i& (0+255),w,b
 18654  005E54  0D02               	mullw	2
 18655  005E56  0E00               	movlw	low _Global
 18656  005E58  0100               	movlb	0	; () banked
 18657  005E5A  6FB4               	movwf	??_SetEEPROMdefault& (0+255),b
 18658  005E5C  0E07               	movlw	high _Global
 18659  005E5E  0100               	movlb	0	; () banked
 18660  005E60  6FB5               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 18661  005E62  0E2E               	movlw	46
 18662  005E64  0100               	movlb	0	; () banked
 18663  005E66  27B4               	addwf	??_SetEEPROMdefault& (0+255),f,b
 18664  005E68  0E00               	movlw	0
 18665  005E6A  23B5               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 18666  005E6C  50F3               	movf	prodl,w,c
 18667  005E6E  0100               	movlb	0	; () banked
 18668  005E70  27B4               	addwf	??_SetEEPROMdefault& (0+255),f,b
 18669  005E72  50F4               	movf	prodh,w,c
 18670  005E74  0100               	movlb	0	; () banked
 18671  005E76  23B5               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 18672  005E78  0100               	movlb	0	; () banked
 18673  005E7A  51B7               	movf	SetEEPROMdefault@j& (0+255),w,b
 18674  005E7C  0D01               	mullw	1
 18675  005E7E  50F3               	movf	prodl,w,c
 18676  005E80  0100               	movlb	0	; () banked
 18677  005E82  25B4               	addwf	??_SetEEPROMdefault& (0+255),w,b
 18678  005E84  6ED9               	movwf	fsr2l,c
 18679  005E86  50F4               	movf	prodh,w,c
 18680  005E88  0100               	movlb	0	; () banked
 18681  005E8A  21B5               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 18682  005E8C  6EDA               	movwf	fsr2h,c
 18683  005E8E  0E00               	movlw	0
 18684  005E90  6EDF               	movwf	indf2,c
 18685                           
 18686                           ; BSR set to: 0
 18687  005E92  0100               	movlb	0	; () banked
 18688  005E94  2BB7               	incf	SetEEPROMdefault@j& (0+255),f,b
 18689  005E96  D7D7               	goto	l8114
 18690  005E98                     l8124:
 18691                           
 18692                           ; BSR set to: 0
 18693  005E98  0100               	movlb	0	; () banked
 18694  005E9A  2BB6               	incf	SetEEPROMdefault@i& (0+255),f,b
 18695  005E9C  D7CC               	goto	l8108
 18696  005E9E                     l8128:
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;EEPROM.c: 255: }
 18700                           ;EEPROM.c: 256: }
 18701                           ;EEPROM.c: 257: SyncGlobalToEEPROM();
 18702  005E9E  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
 18703  005EA2  0012               	return		;funcret
 18704  005EA4                     __end_of_SetEEPROMdefault:
 18705                           	opt stack 0
 18706                           tblptru	equ	0xFF8
 18707                           tblptrh	equ	0xFF7
 18708                           tblptrl	equ	0xFF6
 18709                           tablat	equ	0xFF5
 18710                           prodh	equ	0xFF4
 18711                           prodl	equ	0xFF3
 18712                           intcon	equ	0xFF2
 18713                           intcon2	equ	0xFF1
 18714                           indf0	equ	0xFEF
 18715                           postinc0	equ	0xFEE
 18716                           plusw0	equ	0xFEB
 18717                           fsr0h	equ	0xFEA
 18718                           fsr0l	equ	0xFE9
 18719                           wreg	equ	0xFE8
 18720                           indf1	equ	0xFE7
 18721                           postdec1	equ	0xFE5
 18722                           fsr1h	equ	0xFE2
 18723                           fsr1l	equ	0xFE1
 18724                           indf2	equ	0xFDF
 18725                           postinc2	equ	0xFDE
 18726                           postdec2	equ	0xFDD
 18727                           plusw2	equ	0xFDB
 18728                           fsr2h	equ	0xFDA
 18729                           fsr2l	equ	0xFD9
 18730                           status	equ	0xFD8
 18731                           
 18732 ;; *************** function _InitUART *****************
 18733 ;; Defined at:
 18734 ;;		line 78 in file "UART.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;  Baud            4   63[BANK0 ] unsigned long 
 18737 ;; Auto vars:     Size  Location     Type
 18738 ;;  temp            4   77[BANK0 ] unsigned long 
 18739 ;;  spbrg           2   74[BANK0 ] unsigned int 
 18740 ;;  config          1   76[BANK0 ] unsigned char 
 18741 ;; Return value:  Size  Location     Type
 18742 ;;		None               void
 18743 ;; Registers used:
 18744 ;;		wreg, status,2, status,0, cstack
 18745 ;; Tracked objects:
 18746 ;;		On entry : 0/0
 18747 ;;		On exit  : 0/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18751 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18753 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18754 ;;Total ram usage:       18 bytes
 18755 ;; Hardware stack levels used:    1
 18756 ;; Hardware stack levels required when called:    9
 18757 ;; This function calls:
 18758 ;;		_Local_CloseUSART
 18759 ;;		_OpenUSART
 18760 ;;		_Round
 18761 ;;		___fttol
 18762 ;;		___lldiv
 18763 ;;		___lltoft
 18764 ;; This function is called by:
 18765 ;;		_Init_System
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text43
 18770  005C92                     __ptext43:
 18771                           	opt stack 0
 18772  005C92                     _InitUART:
 18773                           	opt stack 20
 18774                           
 18775                           ;UART.c: 80: unsigned long temp;
 18776                           ;UART.c: 81: unsigned char config = 0;
 18777                           
 18778                           ;incstack = 0
 18779  005C92  0E00               	movlw	0
 18780  005C94  0100               	movlb	0	; () banked
 18781  005C96  6FAC               	movwf	InitUART@config& (0+255),b
 18782                           
 18783                           ; BSR set to: 0
 18784                           ;UART.c: 82: unsigned int spbrg;
 18785                           ;UART.c: 84: Local_CloseUSART();
 18786  005C98  ECF8  F03B         	call	_Local_CloseUSART	;wreg free
 18787                           
 18788                           ;UART.c: 89: config |= 0b00001000;
 18789  005C9C  0100               	movlb	0	; () banked
 18790  005C9E  87AC               	bsf	InitUART@config& (0+255),3,b
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;UART.c: 90: config |= 0b00010000;
 18794  005CA0  0100               	movlb	0	; () banked
 18795  005CA2  89AC               	bsf	InitUART@config& (0+255),4,b
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;UART.c: 91: config &= ~0b00000010;
 18799  005CA4  0100               	movlb	0	; () banked
 18800  005CA6  93AC               	bcf	InitUART@config& (0+255),1,b
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;UART.c: 94: temp = (64000000L / Baud) - 1;
 18804  005CA8  0E00               	movlw	0
 18805  005CAA  0100               	movlb	0	; () banked
 18806  005CAC  6F75               	movwf	___lldiv@dividend& (0+255),b
 18807  005CAE  0E90               	movlw	144
 18808  005CB0  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
 18809  005CB2  0ED0               	movlw	208
 18810  005CB4  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
 18811  005CB6  0E03               	movlw	3
 18812  005CB8  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
 18813  005CBA  C09F  F079         	movff	InitUART@Baud,___lldiv@divisor
 18814  005CBE  C0A0  F07A         	movff	InitUART@Baud+1,___lldiv@divisor+1
 18815  005CC2  C0A1  F07B         	movff	InitUART@Baud+2,___lldiv@divisor+2
 18816  005CC6  C0A2  F07C         	movff	InitUART@Baud+3,___lldiv@divisor+3
 18817  005CCA  EC61  F032         	call	___lldiv	;wreg free
 18818  005CCE  0EFF               	movlw	255
 18819  005CD0  0100               	movlb	0	; () banked
 18820  005CD2  2575               	addwf	?___lldiv& (0+255),w,b
 18821  005CD4  0100               	movlb	0	; () banked
 18822  005CD6  6FAD               	movwf	InitUART@temp& (0+255),b
 18823  005CD8  0EFF               	movlw	255
 18824  005CDA  0100               	movlb	0	; () banked
 18825  005CDC  2176               	addwfc	(?___lldiv+1)& (0+255),w,b
 18826  005CDE  0100               	movlb	0	; () banked
 18827  005CE0  6FAE               	movwf	(InitUART@temp+1)& (0+255),b
 18828  005CE2  0EFF               	movlw	255
 18829  005CE4  0100               	movlb	0	; () banked
 18830  005CE6  2177               	addwfc	(?___lldiv+2)& (0+255),w,b
 18831  005CE8  0100               	movlb	0	; () banked
 18832  005CEA  6FAF               	movwf	(InitUART@temp+2)& (0+255),b
 18833  005CEC  0EFF               	movlw	255
 18834  005CEE  0100               	movlb	0	; () banked
 18835  005CF0  2178               	addwfc	(?___lldiv+3)& (0+255),w,b
 18836  005CF2  0100               	movlb	0	; () banked
 18837  005CF4  6FB0               	movwf	(InitUART@temp+3)& (0+255),b
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;UART.c: 95: temp = (temp >> 2) - 1;
 18841  005CF6  C0AD  F0A3         	movff	InitUART@temp,??_InitUART
 18842  005CFA  C0AE  F0A4         	movff	InitUART@temp+1,??_InitUART+1
 18843  005CFE  C0AF  F0A5         	movff	InitUART@temp+2,??_InitUART+2
 18844  005D02  C0B0  F0A6         	movff	InitUART@temp+3,??_InitUART+3
 18845  005D06  0E03               	movlw	3
 18846  005D08  D006               	goto	u13420
 18847  005D0A                     u13425:
 18848  005D0A  0100               	movlb	0	; () banked
 18849  005D0C  90D8               	bcf	status,0,c
 18850  005D0E  33A6               	rrcf	(??_InitUART+3)& (0+255),f,b
 18851  005D10  33A5               	rrcf	(??_InitUART+2)& (0+255),f,b
 18852  005D12  33A4               	rrcf	(??_InitUART+1)& (0+255),f,b
 18853  005D14  33A3               	rrcf	??_InitUART& (0+255),f,b
 18854  005D16                     u13420:
 18855  005D16  2EE8               	decfsz	wreg,f,c
 18856  005D18  D7F8               	goto	u13425
 18857  005D1A  0EFF               	movlw	255
 18858  005D1C  0100               	movlb	0	; () banked
 18859  005D1E  25A3               	addwf	??_InitUART& (0+255),w,b
 18860  005D20  0100               	movlb	0	; () banked
 18861  005D22  6FAD               	movwf	InitUART@temp& (0+255),b
 18862  005D24  0EFF               	movlw	255
 18863  005D26  0100               	movlb	0	; () banked
 18864  005D28  21A4               	addwfc	(??_InitUART+1)& (0+255),w,b
 18865  005D2A  0100               	movlb	0	; () banked
 18866  005D2C  6FAE               	movwf	(InitUART@temp+1)& (0+255),b
 18867  005D2E  0EFF               	movlw	255
 18868  005D30  0100               	movlb	0	; () banked
 18869  005D32  21A5               	addwfc	(??_InitUART+2)& (0+255),w,b
 18870  005D34  0100               	movlb	0	; () banked
 18871  005D36  6FAF               	movwf	(InitUART@temp+2)& (0+255),b
 18872  005D38  0EFF               	movlw	255
 18873  005D3A  0100               	movlb	0	; () banked
 18874  005D3C  21A6               	addwfc	(??_InitUART+3)& (0+255),w,b
 18875  005D3E  0100               	movlb	0	; () banked
 18876  005D40  6FB0               	movwf	(InitUART@temp+3)& (0+255),b
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
 18880  005D42  C0AD  F07D         	movff	InitUART@temp,___lltoft@c
 18881  005D46  C0AE  F07E         	movff	InitUART@temp+1,___lltoft@c+1
 18882  005D4A  C0AF  F07F         	movff	InitUART@temp+2,___lltoft@c+2
 18883  005D4E  C0B0  F080         	movff	InitUART@temp+3,___lltoft@c+3
 18884  005D52  ECC6  F036         	call	___lltoft	;wreg free
 18885  005D56  C07D  F098         	movff	?___lltoft,Round@input
 18886  005D5A  C07E  F099         	movff	?___lltoft+1,Round@input+1
 18887  005D5E  C07F  F09A         	movff	?___lltoft+2,Round@input+2
 18888  005D62  ECEF  F037         	call	_Round	;wreg free
 18889  005D66  C098  F0A7         	movff	?_Round,_InitUART$3508
 18890  005D6A  C099  F0A8         	movff	?_Round+1,_InitUART$3508+1
 18891  005D6E  C09A  F0A9         	movff	?_Round+2,_InitUART$3508+2
 18892                           
 18893                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
 18894  005D72  C0A7  F089         	movff	_InitUART$3508,___fttol@f1
 18895  005D76  C0A8  F08A         	movff	_InitUART$3508+1,___fttol@f1+1
 18896  005D7A  C0A9  F08B         	movff	_InitUART$3508+2,___fttol@f1+2
 18897  005D7E  ECA5  F02A         	call	___fttol	;wreg free
 18898  005D82  C089  F0AA         	movff	?___fttol,InitUART@spbrg
 18899  005D86  C08A  F0AB         	movff	?___fttol+1,InitUART@spbrg+1
 18900                           
 18901                           ;UART.c: 98: BAUDCONbits.BRG16 = 1;
 18902  005D8A  86B8               	bsf	4024,3,c	;volatile
 18903                           
 18904                           ;UART.c: 100: OpenUSART(config, spbrg);
 18905  005D8C  C0AA  F075         	movff	InitUART@spbrg,OpenUSART@spbrg
 18906  005D90  C0AB  F076         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 18907  005D94  0100               	movlb	0	; () banked
 18908  005D96  51AC               	movf	InitUART@config& (0+255),w,b
 18909  005D98  EC06  F037         	call	_OpenUSART
 18910                           
 18911                           ;UART.c: 102: PIR1bits.RCIF = 0;
 18912  005D9C  9A9E               	bcf	3998,5,c	;volatile
 18913                           
 18914                           ;UART.c: 103: PIE1bits.RCIE = 1;
 18915  005D9E  8A9D               	bsf	3997,5,c	;volatile
 18916                           
 18917                           ;UART.c: 104: INTCONbits.PEIE = 1;
 18918  005DA0  8CF2               	bsf	intcon,6,c	;volatile
 18919  005DA2  0012               	return		;funcret
 18920  005DA4                     __end_of_InitUART:
 18921                           	opt stack 0
 18922                           tblptru	equ	0xFF8
 18923                           tblptrh	equ	0xFF7
 18924                           tblptrl	equ	0xFF6
 18925                           tablat	equ	0xFF5
 18926                           prodh	equ	0xFF4
 18927                           prodl	equ	0xFF3
 18928                           intcon	equ	0xFF2
 18929                           intcon2	equ	0xFF1
 18930                           indf0	equ	0xFEF
 18931                           postinc0	equ	0xFEE
 18932                           plusw0	equ	0xFEB
 18933                           fsr0h	equ	0xFEA
 18934                           fsr0l	equ	0xFE9
 18935                           wreg	equ	0xFE8
 18936                           indf1	equ	0xFE7
 18937                           postdec1	equ	0xFE5
 18938                           fsr1h	equ	0xFE2
 18939                           fsr1l	equ	0xFE1
 18940                           indf2	equ	0xFDF
 18941                           postinc2	equ	0xFDE
 18942                           postdec2	equ	0xFDD
 18943                           plusw2	equ	0xFDB
 18944                           fsr2h	equ	0xFDA
 18945                           fsr2l	equ	0xFD9
 18946                           status	equ	0xFD8
 18947                           
 18948 ;; *************** function ___lltoft *****************
 18949 ;; Defined at:
 18950 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;  c               4   29[BANK0 ] unsigned long 
 18953 ;; Auto vars:     Size  Location     Type
 18954 ;;  exp             1   37[BANK0 ] unsigned char 
 18955 ;; Return value:  Size  Location     Type
 18956 ;;                  3   29[BANK0 ] float 
 18957 ;; Registers used:
 18958 ;;		wreg, status,2, status,0, cstack
 18959 ;; Tracked objects:
 18960 ;;		On entry : 0/0
 18961 ;;		On exit  : 0/0
 18962 ;;		Unchanged: 0/0
 18963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18967 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18968 ;;Total ram usage:        9 bytes
 18969 ;; Hardware stack levels used:    1
 18970 ;; Hardware stack levels required when called:    7
 18971 ;; This function calls:
 18972 ;;		___ftpack
 18973 ;; This function is called by:
 18974 ;;		_InitUART
 18975 ;; This function uses a non-reentrant model
 18976 ;;
 18977                           
 18978                           	psect	text44
 18979  006D8C                     __ptext44:
 18980                           	opt stack 0
 18981  006D8C                     ___lltoft:
 18982                           	opt stack 21
 18983                           
 18984                           ;incstack = 0
 18985  006D8C  0E8E               	movlw	142
 18986  006D8E  0100               	movlb	0	; () banked
 18987  006D90  6F85               	movwf	___lltoft@exp& (0+255),b
 18988  006D92  D009               	goto	l8010
 18989  006D94                     l8008:
 18990                           
 18991                           ; BSR set to: 0
 18992  006D94  0100               	movlb	0	; () banked
 18993  006D96  90D8               	bcf	status,0,c
 18994  006D98  3380               	rrcf	(___lltoft@c+3)& (0+255),f,b
 18995  006D9A  337F               	rrcf	(___lltoft@c+2)& (0+255),f,b
 18996  006D9C  337E               	rrcf	(___lltoft@c+1)& (0+255),f,b
 18997  006D9E  337D               	rrcf	___lltoft@c& (0+255),f,b
 18998  006DA0  0100               	movlb	0	; () banked
 18999  006DA2  2B85               	incf	___lltoft@exp& (0+255),f,b
 19000  006DA4  D000               	goto	l8010
 19001  006DA6                     l8010:
 19002                           
 19003                           ; BSR set to: 0
 19004  006DA6  0E00               	movlw	0
 19005  006DA8  0100               	movlb	0	; () banked
 19006  006DAA  157D               	andwf	___lltoft@c& (0+255),w,b
 19007  006DAC  0100               	movlb	0	; () banked
 19008  006DAE  6F81               	movwf	??___lltoft& (0+255),b
 19009  006DB0  0E00               	movlw	0
 19010  006DB2  0100               	movlb	0	; () banked
 19011  006DB4  157E               	andwf	(___lltoft@c+1)& (0+255),w,b
 19012  006DB6  0100               	movlb	0	; () banked
 19013  006DB8  6F82               	movwf	(??___lltoft+1)& (0+255),b
 19014  006DBA  0E00               	movlw	0
 19015  006DBC  0100               	movlb	0	; () banked
 19016  006DBE  157F               	andwf	(___lltoft@c+2)& (0+255),w,b
 19017  006DC0  0100               	movlb	0	; () banked
 19018  006DC2  6F83               	movwf	(??___lltoft+2)& (0+255),b
 19019  006DC4  0EFF               	movlw	255
 19020  006DC6  0100               	movlb	0	; () banked
 19021  006DC8  1580               	andwf	(___lltoft@c+3)& (0+255),w,b
 19022  006DCA  0100               	movlb	0	; () banked
 19023  006DCC  6F84               	movwf	(??___lltoft+3)& (0+255),b
 19024  006DCE  0100               	movlb	0	; () banked
 19025  006DD0  5181               	movf	??___lltoft& (0+255),w,b
 19026  006DD2  0100               	movlb	0	; () banked
 19027  006DD4  1182               	iorwf	(??___lltoft+1)& (0+255),w,b
 19028  006DD6  0100               	movlb	0	; () banked
 19029  006DD8  1183               	iorwf	(??___lltoft+2)& (0+255),w,b
 19030  006DDA  0100               	movlb	0	; () banked
 19031  006DDC  1184               	iorwf	(??___lltoft+3)& (0+255),w,b
 19032  006DDE  A4D8               	btfss	status,2,c
 19033  006DE0  D7D9               	goto	l8008
 19034                           
 19035                           ; BSR set to: 0
 19036                           
 19037                           ; BSR set to: 0
 19038  006DE2  C07D  F075         	movff	___lltoft@c,___ftpack@arg
 19039  006DE6  C07E  F076         	movff	___lltoft@c+1,___ftpack@arg+1
 19040  006DEA  C07F  F077         	movff	___lltoft@c+2,___ftpack@arg+2
 19041  006DEE  C085  F078         	movff	___lltoft@exp,___ftpack@exp
 19042  006DF2  0E00               	movlw	0
 19043  006DF4  0100               	movlb	0	; () banked
 19044  006DF6  6F79               	movwf	___ftpack@sign& (0+255),b
 19045  006DF8  EC9D  F02C         	call	___ftpack	;wreg free
 19046  006DFC  C075  F07D         	movff	?___ftpack,?___lltoft
 19047  006E00  C076  F07E         	movff	?___ftpack+1,?___lltoft+1
 19048  006E04  C077  F07F         	movff	?___ftpack+2,?___lltoft+2
 19049  006E08  0012               	return	
 19050  006E0A  0012               	return		;funcret
 19051  006E0C                     __end_of___lltoft:
 19052                           	opt stack 0
 19053                           tblptru	equ	0xFF8
 19054                           tblptrh	equ	0xFF7
 19055                           tblptrl	equ	0xFF6
 19056                           tablat	equ	0xFF5
 19057                           prodh	equ	0xFF4
 19058                           prodl	equ	0xFF3
 19059                           intcon	equ	0xFF2
 19060                           intcon2	equ	0xFF1
 19061                           indf0	equ	0xFEF
 19062                           postinc0	equ	0xFEE
 19063                           plusw0	equ	0xFEB
 19064                           fsr0h	equ	0xFEA
 19065                           fsr0l	equ	0xFE9
 19066                           wreg	equ	0xFE8
 19067                           indf1	equ	0xFE7
 19068                           postdec1	equ	0xFE5
 19069                           fsr1h	equ	0xFE2
 19070                           fsr1l	equ	0xFE1
 19071                           indf2	equ	0xFDF
 19072                           postinc2	equ	0xFDE
 19073                           postdec2	equ	0xFDD
 19074                           plusw2	equ	0xFDB
 19075                           fsr2h	equ	0xFDA
 19076                           fsr2l	equ	0xFD9
 19077                           status	equ	0xFD8
 19078                           
 19079 ;; *************** function _Round *****************
 19080 ;; Defined at:
 19081 ;;		line 153 in file "MISC.c"
 19082 ;; Parameters:    Size  Location     Type
 19083 ;;  input           3   56[BANK0 ] float 
 19084 ;; Auto vars:     Size  Location     Type
 19085 ;;  temp            4   59[BANK0 ] long 
 19086 ;; Return value:  Size  Location     Type
 19087 ;;                  3   56[BANK0 ] long 
 19088 ;; Registers used:
 19089 ;;		wreg, status,2, status,0, cstack
 19090 ;; Tracked objects:
 19091 ;;		On entry : 0/0
 19092 ;;		On exit  : 0/0
 19093 ;;		Unchanged: 0/0
 19094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19095 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19096 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19098 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19099 ;;Total ram usage:        7 bytes
 19100 ;; Hardware stack levels used:    1
 19101 ;; Hardware stack levels required when called:    8
 19102 ;; This function calls:
 19103 ;;		___altoft
 19104 ;;		___ftadd
 19105 ;;		___fttol
 19106 ;; This function is called by:
 19107 ;;		_InitUART
 19108 ;; This function uses a non-reentrant model
 19109 ;;
 19110                           
 19111                           	psect	text45
 19112  006FDE                     __ptext45:
 19113                           	opt stack 0
 19114  006FDE                     _Round:
 19115                           	opt stack 20
 19116                           
 19117                           ;MISC.c: 155: long temp = (long)(input + 0.5);
 19118                           
 19119                           ;incstack = 0
 19120  006FDE  0E00               	movlw	0
 19121  006FE0  0100               	movlb	0	; () banked
 19122  006FE2  6F80               	movwf	___ftadd@f2& (0+255),b
 19123  006FE4  0E00               	movlw	0
 19124  006FE6  0100               	movlb	0	; () banked
 19125  006FE8  6F81               	movwf	(___ftadd@f2+1)& (0+255),b
 19126  006FEA  0E3F               	movlw	63
 19127  006FEC  0100               	movlb	0	; () banked
 19128  006FEE  6F82               	movwf	(___ftadd@f2+2)& (0+255),b
 19129  006FF0  C098  F07D         	movff	Round@input,___ftadd@f1
 19130  006FF4  C099  F07E         	movff	Round@input+1,___ftadd@f1+1
 19131  006FF8  C09A  F07F         	movff	Round@input+2,___ftadd@f1+2
 19132  006FFC  EC53  F022         	call	___ftadd	;wreg free
 19133  007000  C07D  F089         	movff	?___ftadd,___fttol@f1
 19134  007004  C07E  F08A         	movff	?___ftadd+1,___fttol@f1+1
 19135  007008  C07F  F08B         	movff	?___ftadd+2,___fttol@f1+2
 19136  00700C  ECA5  F02A         	call	___fttol	;wreg free
 19137  007010  C089  F09B         	movff	?___fttol,Round@temp
 19138  007014  C08A  F09C         	movff	?___fttol+1,Round@temp+1
 19139  007018  C08B  F09D         	movff	?___fttol+2,Round@temp+2
 19140  00701C  C08C  F09E         	movff	?___fttol+3,Round@temp+3
 19141                           
 19142                           ;MISC.c: 157: return temp;
 19143  007020  C09B  F07D         	movff	Round@temp,___altoft@c
 19144  007024  C09C  F07E         	movff	Round@temp+1,___altoft@c+1
 19145  007028  C09D  F07F         	movff	Round@temp+2,___altoft@c+2
 19146  00702C  C09E  F080         	movff	Round@temp+3,___altoft@c+3
 19147  007030  ECCE  F034         	call	___altoft	;wreg free
 19148  007034  C07D  F098         	movff	?___altoft,?_Round
 19149  007038  C07E  F099         	movff	?___altoft+1,?_Round+1
 19150  00703C  C07F  F09A         	movff	?___altoft+2,?_Round+2
 19151  007040  0012               	return	
 19152  007042  0012               	return		;funcret
 19153  007044                     __end_of_Round:
 19154                           	opt stack 0
 19155                           tblptru	equ	0xFF8
 19156                           tblptrh	equ	0xFF7
 19157                           tblptrl	equ	0xFF6
 19158                           tablat	equ	0xFF5
 19159                           prodh	equ	0xFF4
 19160                           prodl	equ	0xFF3
 19161                           intcon	equ	0xFF2
 19162                           intcon2	equ	0xFF1
 19163                           indf0	equ	0xFEF
 19164                           postinc0	equ	0xFEE
 19165                           plusw0	equ	0xFEB
 19166                           fsr0h	equ	0xFEA
 19167                           fsr0l	equ	0xFE9
 19168                           wreg	equ	0xFE8
 19169                           indf1	equ	0xFE7
 19170                           postdec1	equ	0xFE5
 19171                           fsr1h	equ	0xFE2
 19172                           fsr1l	equ	0xFE1
 19173                           indf2	equ	0xFDF
 19174                           postinc2	equ	0xFDE
 19175                           postdec2	equ	0xFDD
 19176                           plusw2	equ	0xFDB
 19177                           fsr2h	equ	0xFDA
 19178                           fsr2l	equ	0xFD9
 19179                           status	equ	0xFD8
 19180                           
 19181 ;; *************** function ___fttol *****************
 19182 ;; Defined at:
 19183 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;  f1              3   41[BANK0 ] float 
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;  lval            4   51[BANK0 ] unsigned long 
 19188 ;;  exp1            1   55[BANK0 ] unsigned char 
 19189 ;;  sign1           1   50[BANK0 ] unsigned char 
 19190 ;; Return value:  Size  Location     Type
 19191 ;;                  4   41[BANK0 ] long 
 19192 ;; Registers used:
 19193 ;;		wreg, status,2, status,0
 19194 ;; Tracked objects:
 19195 ;;		On entry : 0/0
 19196 ;;		On exit  : 0/0
 19197 ;;		Unchanged: 0/0
 19198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19199 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19200 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19201 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19202 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19203 ;;Total ram usage:       15 bytes
 19204 ;; Hardware stack levels used:    1
 19205 ;; Hardware stack levels required when called:    6
 19206 ;; This function calls:
 19207 ;;		Nothing
 19208 ;; This function is called by:
 19209 ;;		_Round
 19210 ;;		_InitUART
 19211 ;; This function uses a non-reentrant model
 19212 ;;
 19213                           
 19214                           	psect	text46
 19215  00554A                     __ptext46:
 19216                           	opt stack 0
 19217  00554A                     ___fttol:
 19218                           	opt stack 22
 19219                           
 19220                           ;incstack = 0
 19221  00554A  C08B  F08D         	movff	___fttol@f1+2,??___fttol
 19222  00554E  0100               	movlb	0	; () banked
 19223  005550  6B8E               	clrf	(??___fttol+1)& (0+255),b
 19224  005552  6B8F               	clrf	(??___fttol+2)& (0+255),b
 19225  005554  0100               	movlb	0	; () banked
 19226  005556  358A               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19227  005558  0100               	movlb	0	; () banked
 19228  00555A  378D               	rlcf	??___fttol& (0+255),f,b
 19229  00555C  E301               	bnc	u8101
 19230  00555E  818E               	bsf	(??___fttol+1)& (0+255),0,b
 19231  005560                     u8101:
 19232  005560  0100               	movlb	0	; () banked
 19233  005562  518D               	movf	??___fttol& (0+255),w,b
 19234  005564  0100               	movlb	0	; () banked
 19235  005566  6F97               	movwf	___fttol@exp1& (0+255),b
 19236  005568  0100               	movlb	0	; () banked
 19237  00556A  5197               	movf	___fttol@exp1& (0+255),w,b
 19238  00556C  A4D8               	btfss	status,2,c
 19239  00556E  D00A               	goto	l7558
 19240                           
 19241                           ; BSR set to: 0
 19242  005570  0E00               	movlw	0
 19243  005572  0100               	movlb	0	; () banked
 19244  005574  6F89               	movwf	?___fttol& (0+255),b
 19245  005576  0E00               	movlw	0
 19246  005578  6F8A               	movwf	(?___fttol+1)& (0+255),b
 19247  00557A  0E00               	movlw	0
 19248  00557C  6F8B               	movwf	(?___fttol+2)& (0+255),b
 19249  00557E  0E00               	movlw	0
 19250  005580  6F8C               	movwf	(?___fttol+3)& (0+255),b
 19251                           
 19252                           ; BSR set to: 0
 19253  005582  0012               	return	
 19254  005584                     l7558:
 19255                           
 19256                           ; BSR set to: 0
 19257  005584  0E17               	movlw	23
 19258  005586  0100               	movlb	0	; () banked
 19259  005588  6F8D               	movwf	??___fttol& (0+255),b
 19260  00558A  C089  F08E         	movff	___fttol@f1,??___fttol+1
 19261  00558E  C08A  F08F         	movff	___fttol@f1+1,??___fttol+2
 19262  005592  C08B  F090         	movff	___fttol@f1+2,??___fttol+3
 19263  005596  0100               	movlb	0	; () banked
 19264  005598  298D               	incf	??___fttol& (0+255),w,b
 19265  00559A  0100               	movlb	0	; () banked
 19266  00559C  6F91               	movwf	(??___fttol+4)& (0+255),b
 19267  00559E  D005               	goto	u8120
 19268  0055A0                     u8125:
 19269  0055A0  0100               	movlb	0	; () banked
 19270  0055A2  90D8               	bcf	status,0,c
 19271  0055A4  3390               	rrcf	(??___fttol+3)& (0+255),f,b
 19272  0055A6  338F               	rrcf	(??___fttol+2)& (0+255),f,b
 19273  0055A8  338E               	rrcf	(??___fttol+1)& (0+255),f,b
 19274  0055AA                     u8120:
 19275  0055AA  0100               	movlb	0	; () banked
 19276  0055AC  2F91               	decfsz	(??___fttol+4)& (0+255),f,b
 19277  0055AE  D7F8               	goto	u8125
 19278  0055B0  0100               	movlb	0	; () banked
 19279  0055B2  518E               	movf	(??___fttol+1)& (0+255),w,b
 19280  0055B4  0100               	movlb	0	; () banked
 19281  0055B6  6F92               	movwf	___fttol@sign1& (0+255),b
 19282                           
 19283                           ; BSR set to: 0
 19284  0055B8  0100               	movlb	0	; () banked
 19285  0055BA  8F8A               	bsf	(___fttol@f1+1)& (0+255),7,b
 19286                           
 19287                           ; BSR set to: 0
 19288  0055BC  0EFF               	movlw	255
 19289  0055BE  0100               	movlb	0	; () banked
 19290  0055C0  1789               	andwf	___fttol@f1& (0+255),f,b
 19291  0055C2  0EFF               	movlw	255
 19292  0055C4  0100               	movlb	0	; () banked
 19293  0055C6  178A               	andwf	(___fttol@f1+1)& (0+255),f,b
 19294  0055C8  0E00               	movlw	0
 19295  0055CA  0100               	movlb	0	; () banked
 19296  0055CC  178B               	andwf	(___fttol@f1+2)& (0+255),f,b
 19297                           
 19298                           ; BSR set to: 0
 19299  0055CE  0100               	movlb	0	; () banked
 19300  0055D0  5189               	movf	___fttol@f1& (0+255),w,b
 19301  0055D2  0100               	movlb	0	; () banked
 19302  0055D4  6F93               	movwf	___fttol@lval& (0+255),b
 19303  0055D6  0100               	movlb	0	; () banked
 19304  0055D8  518A               	movf	(___fttol@f1+1)& (0+255),w,b
 19305  0055DA  0100               	movlb	0	; () banked
 19306  0055DC  6F94               	movwf	(___fttol@lval+1)& (0+255),b
 19307  0055DE  0100               	movlb	0	; () banked
 19308  0055E0  518B               	movf	(___fttol@f1+2)& (0+255),w,b
 19309  0055E2  0100               	movlb	0	; () banked
 19310  0055E4  6F95               	movwf	(___fttol@lval+2)& (0+255),b
 19311  0055E6  0100               	movlb	0	; () banked
 19312  0055E8  6B96               	clrf	(___fttol@lval+3)& (0+255),b
 19313                           
 19314                           ; BSR set to: 0
 19315  0055EA  0E8E               	movlw	142
 19316  0055EC  0100               	movlb	0	; () banked
 19317  0055EE  5F97               	subwf	___fttol@exp1& (0+255),f,b
 19318                           
 19319                           ; BSR set to: 0
 19320  0055F0  0100               	movlb	0	; () banked
 19321  0055F2  AF97               	btfss	___fttol@exp1& (0+255),7,b
 19322  0055F4  D01B               	goto	l7580
 19323                           
 19324                           ; BSR set to: 0
 19325  0055F6  0100               	movlb	0	; () banked
 19326  0055F8  5197               	movf	___fttol@exp1& (0+255),w,b
 19327  0055FA  0A80               	xorlw	128
 19328  0055FC  0F8F               	addlw	143
 19329  0055FE  B0D8               	btfsc	status,0,c
 19330  005600  D00B               	goto	l7576
 19331                           
 19332                           ; BSR set to: 0
 19333  005602  0E00               	movlw	0
 19334  005604  0100               	movlb	0	; () banked
 19335  005606  6F89               	movwf	?___fttol& (0+255),b
 19336  005608  0E00               	movlw	0
 19337  00560A  6F8A               	movwf	(?___fttol+1)& (0+255),b
 19338  00560C  0E00               	movlw	0
 19339  00560E  6F8B               	movwf	(?___fttol+2)& (0+255),b
 19340  005610  0E00               	movlw	0
 19341  005612  6F8C               	movwf	(?___fttol+3)& (0+255),b
 19342                           
 19343                           ; BSR set to: 0
 19344  005614  0012               	return	
 19345                           
 19346                           ; BSR set to: 0
 19347  005616  D000               	goto	l7576
 19348  005618                     l7576:
 19349                           
 19350                           ; BSR set to: 0
 19351  005618  0100               	movlb	0	; () banked
 19352  00561A  90D8               	bcf	status,0,c
 19353  00561C  3396               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19354  00561E  3395               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19355  005620  3394               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19356  005622  3393               	rrcf	___fttol@lval& (0+255),f,b
 19357                           
 19358                           ; BSR set to: 0
 19359  005624  0100               	movlb	0	; () banked
 19360  005626  3F97               	incfsz	___fttol@exp1& (0+255),f,b
 19361  005628  D7F7               	goto	l7576
 19362                           
 19363                           ; BSR set to: 0
 19364  00562A  D01F               	goto	l7590
 19365  00562C                     l7580:
 19366                           
 19367                           ; BSR set to: 0
 19368  00562C  0E17               	movlw	23
 19369  00562E  0100               	movlb	0	; () banked
 19370  005630  6597               	cpfsgt	___fttol@exp1& (0+255),b
 19371  005632  D014               	goto	l7588
 19372                           
 19373                           ; BSR set to: 0
 19374  005634  0E00               	movlw	0
 19375  005636  0100               	movlb	0	; () banked
 19376  005638  6F89               	movwf	?___fttol& (0+255),b
 19377  00563A  0E00               	movlw	0
 19378  00563C  6F8A               	movwf	(?___fttol+1)& (0+255),b
 19379  00563E  0E00               	movlw	0
 19380  005640  6F8B               	movwf	(?___fttol+2)& (0+255),b
 19381  005642  0E00               	movlw	0
 19382  005644  6F8C               	movwf	(?___fttol+3)& (0+255),b
 19383                           
 19384                           ; BSR set to: 0
 19385  005646  0012               	return	
 19386                           
 19387                           ; BSR set to: 0
 19388  005648  D009               	goto	l7588
 19389  00564A                     l7586:
 19390                           
 19391                           ; BSR set to: 0
 19392  00564A  0100               	movlb	0	; () banked
 19393  00564C  90D8               	bcf	status,0,c
 19394  00564E  3793               	rlcf	___fttol@lval& (0+255),f,b
 19395  005650  3794               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19396  005652  3795               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19397  005654  3796               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19398  005656  0100               	movlb	0	; () banked
 19399  005658  0797               	decf	___fttol@exp1& (0+255),f,b
 19400  00565A  D000               	goto	l7588
 19401  00565C                     l7588:
 19402                           
 19403                           ; BSR set to: 0
 19404  00565C  0100               	movlb	0	; () banked
 19405  00565E  5197               	movf	___fttol@exp1& (0+255),w,b
 19406  005660  0100               	movlb	0	; () banked
 19407  005662  B4D8               	btfsc	status,2,c
 19408  005664  D002               	goto	l7590
 19409  005666  D7F1               	goto	l7586
 19410                           
 19411                           ; BSR set to: 0
 19412  005668  D000               	goto	l7590
 19413  00566A                     l7590:
 19414                           
 19415                           ; BSR set to: 0
 19416  00566A  0100               	movlb	0	; () banked
 19417  00566C  5192               	movf	___fttol@sign1& (0+255),w,b
 19418  00566E  0100               	movlb	0	; () banked
 19419  005670  B4D8               	btfsc	status,2,c
 19420  005672  D00A               	goto	l7594
 19421                           
 19422                           ; BSR set to: 0
 19423  005674  0100               	movlb	0	; () banked
 19424  005676  1F96               	comf	(___fttol@lval+3)& (0+255),f,b
 19425  005678  1F95               	comf	(___fttol@lval+2)& (0+255),f,b
 19426  00567A  1F94               	comf	(___fttol@lval+1)& (0+255),f,b
 19427  00567C  6D93               	negf	___fttol@lval& (0+255),b
 19428  00567E  0E00               	movlw	0
 19429  005680  2394               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19430  005682  2395               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19431  005684  2396               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19432  005686  D000               	goto	l7594
 19433  005688                     l7594:
 19434                           
 19435                           ; BSR set to: 0
 19436  005688  C093  F089         	movff	___fttol@lval,?___fttol
 19437  00568C  C094  F08A         	movff	___fttol@lval+1,?___fttol+1
 19438  005690  C095  F08B         	movff	___fttol@lval+2,?___fttol+2
 19439  005694  C096  F08C         	movff	___fttol@lval+3,?___fttol+3
 19440  005698  0012               	return	
 19441                           
 19442                           ; BSR set to: 0
 19443                           
 19444                           ; BSR set to: 0
 19445  00569A  0012               	return		;funcret
 19446  00569C                     __end_of___fttol:
 19447                           	opt stack 0
 19448                           tblptru	equ	0xFF8
 19449                           tblptrh	equ	0xFF7
 19450                           tblptrl	equ	0xFF6
 19451                           tablat	equ	0xFF5
 19452                           prodh	equ	0xFF4
 19453                           prodl	equ	0xFF3
 19454                           intcon	equ	0xFF2
 19455                           intcon2	equ	0xFF1
 19456                           indf0	equ	0xFEF
 19457                           postinc0	equ	0xFEE
 19458                           plusw0	equ	0xFEB
 19459                           fsr0h	equ	0xFEA
 19460                           fsr0l	equ	0xFE9
 19461                           wreg	equ	0xFE8
 19462                           indf1	equ	0xFE7
 19463                           postdec1	equ	0xFE5
 19464                           fsr1h	equ	0xFE2
 19465                           fsr1l	equ	0xFE1
 19466                           indf2	equ	0xFDF
 19467                           postinc2	equ	0xFDE
 19468                           postdec2	equ	0xFDD
 19469                           plusw2	equ	0xFDB
 19470                           fsr2h	equ	0xFDA
 19471                           fsr2l	equ	0xFD9
 19472                           status	equ	0xFD8
 19473                           
 19474 ;; *************** function ___ftadd *****************
 19475 ;; Defined at:
 19476 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  f1              3   29[BANK0 ] float 
 19479 ;;  f2              3   32[BANK0 ] float 
 19480 ;; Auto vars:     Size  Location     Type
 19481 ;;  exp1            1   40[BANK0 ] unsigned char 
 19482 ;;  exp2            1   39[BANK0 ] unsigned char 
 19483 ;;  sign            1   38[BANK0 ] unsigned char 
 19484 ;; Return value:  Size  Location     Type
 19485 ;;                  3   29[BANK0 ] float 
 19486 ;; Registers used:
 19487 ;;		wreg, status,2, status,0, cstack
 19488 ;; Tracked objects:
 19489 ;;		On entry : 0/0
 19490 ;;		On exit  : 0/0
 19491 ;;		Unchanged: 0/0
 19492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19493 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19494 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19495 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19496 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19497 ;;Total ram usage:       12 bytes
 19498 ;; Hardware stack levels used:    1
 19499 ;; Hardware stack levels required when called:    7
 19500 ;; This function calls:
 19501 ;;		___ftpack
 19502 ;; This function is called by:
 19503 ;;		_Round
 19504 ;; This function uses a non-reentrant model
 19505 ;;
 19506                           
 19507                           	psect	text47
 19508  0044A6                     __ptext47:
 19509                           	opt stack 0
 19510  0044A6                     ___ftadd:
 19511                           	opt stack 20
 19512                           
 19513                           ; BSR set to: 0
 19514                           ;incstack = 0
 19515  0044A6  C07F  F083         	movff	___ftadd@f1+2,??___ftadd
 19516  0044AA  0100               	movlb	0	; () banked
 19517  0044AC  6B84               	clrf	(??___ftadd+1)& (0+255),b
 19518  0044AE  6B85               	clrf	(??___ftadd+2)& (0+255),b
 19519  0044B0  0100               	movlb	0	; () banked
 19520  0044B2  357E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 19521  0044B4  0100               	movlb	0	; () banked
 19522  0044B6  3783               	rlcf	??___ftadd& (0+255),f,b
 19523  0044B8  E301               	bnc	u7891
 19524  0044BA  8184               	bsf	(??___ftadd+1)& (0+255),0,b
 19525  0044BC                     u7891:
 19526  0044BC  0100               	movlb	0	; () banked
 19527  0044BE  5183               	movf	??___ftadd& (0+255),w,b
 19528  0044C0  0100               	movlb	0	; () banked
 19529  0044C2  6F88               	movwf	___ftadd@exp1& (0+255),b
 19530  0044C4  C082  F083         	movff	___ftadd@f2+2,??___ftadd
 19531  0044C8  0100               	movlb	0	; () banked
 19532  0044CA  6B84               	clrf	(??___ftadd+1)& (0+255),b
 19533  0044CC  6B85               	clrf	(??___ftadd+2)& (0+255),b
 19534  0044CE  0100               	movlb	0	; () banked
 19535  0044D0  3581               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 19536  0044D2  0100               	movlb	0	; () banked
 19537  0044D4  3783               	rlcf	??___ftadd& (0+255),f,b
 19538  0044D6  E301               	bnc	u7901
 19539  0044D8  8184               	bsf	(??___ftadd+1)& (0+255),0,b
 19540  0044DA                     u7901:
 19541  0044DA  0100               	movlb	0	; () banked
 19542  0044DC  5183               	movf	??___ftadd& (0+255),w,b
 19543  0044DE  0100               	movlb	0	; () banked
 19544  0044E0  6F87               	movwf	___ftadd@exp2& (0+255),b
 19545                           
 19546                           ; BSR set to: 0
 19547  0044E2  0100               	movlb	0	; () banked
 19548  0044E4  5188               	movf	___ftadd@exp1& (0+255),w,b
 19549  0044E6  0100               	movlb	0	; () banked
 19550  0044E8  B4D8               	btfsc	status,2,c
 19551  0044EA  D011               	goto	l2298
 19552                           
 19553                           ; BSR set to: 0
 19554  0044EC  0100               	movlb	0	; () banked
 19555  0044EE  5187               	movf	___ftadd@exp2& (0+255),w,b
 19556  0044F0  0100               	movlb	0	; () banked
 19557  0044F2  5D88               	subwf	___ftadd@exp1& (0+255),w,b
 19558  0044F4  B0D8               	btfsc	status,0,c
 19559  0044F6  D012               	goto	l7490
 19560                           
 19561                           ; BSR set to: 0
 19562  0044F8  0100               	movlb	0	; () banked
 19563  0044FA  5188               	movf	___ftadd@exp1& (0+255),w,b
 19564  0044FC  0800               	sublw	0
 19565  0044FE  0100               	movlb	0	; () banked
 19566  004500  2587               	addwf	___ftadd@exp2& (0+255),w,b
 19567  004502  0100               	movlb	0	; () banked
 19568  004504  6F83               	movwf	??___ftadd& (0+255),b
 19569  004506  0E18               	movlw	24
 19570  004508  0100               	movlb	0	; () banked
 19571  00450A  6583               	cpfsgt	??___ftadd& (0+255),b
 19572  00450C  D007               	goto	l7490
 19573  00450E                     l2298:
 19574                           
 19575                           ; BSR set to: 0
 19576  00450E  C080  F07D         	movff	___ftadd@f2,?___ftadd
 19577  004512  C081  F07E         	movff	___ftadd@f2+1,?___ftadd+1
 19578  004516  C082  F07F         	movff	___ftadd@f2+2,?___ftadd+2
 19579  00451A  0012               	return	
 19580  00451C                     l7490:
 19581                           
 19582                           ; BSR set to: 0
 19583  00451C  0100               	movlb	0	; () banked
 19584  00451E  5187               	movf	___ftadd@exp2& (0+255),w,b
 19585  004520  0100               	movlb	0	; () banked
 19586  004522  B4D8               	btfsc	status,2,c
 19587  004524  D011               	goto	l2302
 19588                           
 19589                           ; BSR set to: 0
 19590  004526  0100               	movlb	0	; () banked
 19591  004528  5188               	movf	___ftadd@exp1& (0+255),w,b
 19592  00452A  0100               	movlb	0	; () banked
 19593  00452C  5D87               	subwf	___ftadd@exp2& (0+255),w,b
 19594  00452E  B0D8               	btfsc	status,0,c
 19595  004530  D012               	goto	l7496
 19596                           
 19597                           ; BSR set to: 0
 19598  004532  0100               	movlb	0	; () banked
 19599  004534  5187               	movf	___ftadd@exp2& (0+255),w,b
 19600  004536  0800               	sublw	0
 19601  004538  0100               	movlb	0	; () banked
 19602  00453A  2588               	addwf	___ftadd@exp1& (0+255),w,b
 19603  00453C  0100               	movlb	0	; () banked
 19604  00453E  6F83               	movwf	??___ftadd& (0+255),b
 19605  004540  0E18               	movlw	24
 19606  004542  0100               	movlb	0	; () banked
 19607  004544  6583               	cpfsgt	??___ftadd& (0+255),b
 19608  004546  D007               	goto	l7496
 19609  004548                     l2302:
 19610                           
 19611                           ; BSR set to: 0
 19612  004548  C07D  F07D         	movff	___ftadd@f1,?___ftadd
 19613  00454C  C07E  F07E         	movff	___ftadd@f1+1,?___ftadd+1
 19614  004550  C07F  F07F         	movff	___ftadd@f1+2,?___ftadd+2
 19615  004554  0012               	return	
 19616  004556                     l7496:
 19617                           
 19618                           ; BSR set to: 0
 19619  004556  0E06               	movlw	6
 19620  004558  0100               	movlb	0	; () banked
 19621  00455A  6F86               	movwf	___ftadd@sign& (0+255),b
 19622                           
 19623                           ; BSR set to: 0
 19624  00455C  0100               	movlb	0	; () banked
 19625  00455E  AF7F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 19626  004560  D003               	goto	l7502
 19627                           
 19628                           ; BSR set to: 0
 19629  004562  0100               	movlb	0	; () banked
 19630  004564  8F86               	bsf	___ftadd@sign& (0+255),7,b
 19631  004566  D000               	goto	l7502
 19632  004568                     l7502:
 19633                           
 19634                           ; BSR set to: 0
 19635  004568  0100               	movlb	0	; () banked
 19636  00456A  AF82               	btfss	(___ftadd@f2+2)& (0+255),7,b
 19637  00456C  D002               	goto	l2304
 19638                           
 19639                           ; BSR set to: 0
 19640  00456E  0100               	movlb	0	; () banked
 19641  004570  8D86               	bsf	___ftadd@sign& (0+255),6,b
 19642  004572                     l2304:
 19643                           
 19644                           ; BSR set to: 0
 19645  004572  0100               	movlb	0	; () banked
 19646  004574  8F7E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 19647                           
 19648                           ; BSR set to: 0
 19649  004576  0EFF               	movlw	255
 19650  004578  0100               	movlb	0	; () banked
 19651  00457A  177D               	andwf	___ftadd@f1& (0+255),f,b
 19652  00457C  0EFF               	movlw	255
 19653  00457E  0100               	movlb	0	; () banked
 19654  004580  177E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 19655  004582  0E00               	movlw	0
 19656  004584  0100               	movlb	0	; () banked
 19657  004586  177F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 19658  004588  0100               	movlb	0	; () banked
 19659  00458A  8F81               	bsf	(___ftadd@f2+1)& (0+255),7,b
 19660                           
 19661                           ; BSR set to: 0
 19662  00458C  0EFF               	movlw	255
 19663  00458E  0100               	movlb	0	; () banked
 19664  004590  1780               	andwf	___ftadd@f2& (0+255),f,b
 19665  004592  0EFF               	movlw	255
 19666  004594  0100               	movlb	0	; () banked
 19667  004596  1781               	andwf	(___ftadd@f2+1)& (0+255),f,b
 19668  004598  0E00               	movlw	0
 19669  00459A  0100               	movlb	0	; () banked
 19670  00459C  1782               	andwf	(___ftadd@f2+2)& (0+255),f,b
 19671                           
 19672                           ; BSR set to: 0
 19673  00459E  0100               	movlb	0	; () banked
 19674  0045A0  5187               	movf	___ftadd@exp2& (0+255),w,b
 19675  0045A2  0100               	movlb	0	; () banked
 19676  0045A4  5D88               	subwf	___ftadd@exp1& (0+255),w,b
 19677  0045A6  B0D8               	btfsc	status,0,c
 19678  0045A8  D028               	goto	l7522
 19679  0045AA                     l7512:
 19680                           
 19681                           ; BSR set to: 0
 19682  0045AA  0100               	movlb	0	; () banked
 19683  0045AC  90D8               	bcf	status,0,c
 19684  0045AE  3780               	rlcf	___ftadd@f2& (0+255),f,b
 19685  0045B0  3781               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 19686  0045B2  3782               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 19687  0045B4  0100               	movlb	0	; () banked
 19688  0045B6  0787               	decf	___ftadd@exp2& (0+255),f,b
 19689                           
 19690                           ; BSR set to: 0
 19691  0045B8  0100               	movlb	0	; () banked
 19692  0045BA  5188               	movf	___ftadd@exp1& (0+255),w,b
 19693  0045BC  0100               	movlb	0	; () banked
 19694  0045BE  1987               	xorwf	___ftadd@exp2& (0+255),w,b
 19695  0045C0  B4D8               	btfsc	status,2,c
 19696  0045C2  D013               	goto	l7520
 19697                           
 19698                           ; BSR set to: 0
 19699  0045C4  0100               	movlb	0	; () banked
 19700  0045C6  0786               	decf	___ftadd@sign& (0+255),f,b
 19701  0045C8  C086  F083         	movff	___ftadd@sign,??___ftadd
 19702  0045CC  0E07               	movlw	7
 19703  0045CE  0100               	movlb	0	; () banked
 19704  0045D0  1783               	andwf	??___ftadd& (0+255),f,b
 19705  0045D2  B4D8               	btfsc	status,2,c
 19706  0045D4  D00A               	goto	l7520
 19707  0045D6  D7E9               	goto	l7512
 19708                           
 19709                           ; BSR set to: 0
 19710                           
 19711                           ; BSR set to: 0
 19712  0045D8  D008               	goto	l7520
 19713  0045DA                     l7518:
 19714                           
 19715                           ; BSR set to: 0
 19716  0045DA  0100               	movlb	0	; () banked
 19717  0045DC  90D8               	bcf	status,0,c
 19718  0045DE  337F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 19719  0045E0  337E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 19720  0045E2  337D               	rrcf	___ftadd@f1& (0+255),f,b
 19721  0045E4  0100               	movlb	0	; () banked
 19722  0045E6  2B88               	incf	___ftadd@exp1& (0+255),f,b
 19723  0045E8  D000               	goto	l7520
 19724  0045EA                     l7520:
 19725                           
 19726                           ; BSR set to: 0
 19727  0045EA  0100               	movlb	0	; () banked
 19728  0045EC  5187               	movf	___ftadd@exp2& (0+255),w,b
 19729  0045EE  0100               	movlb	0	; () banked
 19730  0045F0  1988               	xorwf	___ftadd@exp1& (0+255),w,b
 19731  0045F2  B4D8               	btfsc	status,2,c
 19732  0045F4  D030               	goto	l2313
 19733  0045F6  D7F1               	goto	l7518
 19734                           
 19735                           ; BSR set to: 0
 19736  0045F8  D02E               	goto	l2313
 19737  0045FA                     l7522:
 19738                           
 19739                           ; BSR set to: 0
 19740  0045FA  0100               	movlb	0	; () banked
 19741  0045FC  5188               	movf	___ftadd@exp1& (0+255),w,b
 19742  0045FE  0100               	movlb	0	; () banked
 19743  004600  5D87               	subwf	___ftadd@exp2& (0+255),w,b
 19744  004602  B0D8               	btfsc	status,0,c
 19745  004604  D028               	goto	l2313
 19746  004606                     l7524:
 19747                           
 19748                           ; BSR set to: 0
 19749  004606  0100               	movlb	0	; () banked
 19750  004608  90D8               	bcf	status,0,c
 19751  00460A  377D               	rlcf	___ftadd@f1& (0+255),f,b
 19752  00460C  377E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 19753  00460E  377F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 19754  004610  0100               	movlb	0	; () banked
 19755  004612  0788               	decf	___ftadd@exp1& (0+255),f,b
 19756                           
 19757                           ; BSR set to: 0
 19758  004614  0100               	movlb	0	; () banked
 19759  004616  5188               	movf	___ftadd@exp1& (0+255),w,b
 19760  004618  0100               	movlb	0	; () banked
 19761  00461A  1987               	xorwf	___ftadd@exp2& (0+255),w,b
 19762  00461C  B4D8               	btfsc	status,2,c
 19763  00461E  D013               	goto	l7532
 19764                           
 19765                           ; BSR set to: 0
 19766  004620  0100               	movlb	0	; () banked
 19767  004622  0786               	decf	___ftadd@sign& (0+255),f,b
 19768  004624  C086  F083         	movff	___ftadd@sign,??___ftadd
 19769  004628  0E07               	movlw	7
 19770  00462A  0100               	movlb	0	; () banked
 19771  00462C  1783               	andwf	??___ftadd& (0+255),f,b
 19772  00462E  B4D8               	btfsc	status,2,c
 19773  004630  D00A               	goto	l7532
 19774  004632  D7E9               	goto	l7524
 19775                           
 19776                           ; BSR set to: 0
 19777                           
 19778                           ; BSR set to: 0
 19779  004634  D008               	goto	l7532
 19780  004636                     l7530:
 19781                           
 19782                           ; BSR set to: 0
 19783  004636  0100               	movlb	0	; () banked
 19784  004638  90D8               	bcf	status,0,c
 19785  00463A  3382               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 19786  00463C  3381               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 19787  00463E  3380               	rrcf	___ftadd@f2& (0+255),f,b
 19788  004640  0100               	movlb	0	; () banked
 19789  004642  2B87               	incf	___ftadd@exp2& (0+255),f,b
 19790  004644  D000               	goto	l7532
 19791  004646                     l7532:
 19792                           
 19793                           ; BSR set to: 0
 19794  004646  0100               	movlb	0	; () banked
 19795  004648  5187               	movf	___ftadd@exp2& (0+255),w,b
 19796  00464A  0100               	movlb	0	; () banked
 19797  00464C  1988               	xorwf	___ftadd@exp1& (0+255),w,b
 19798  00464E  B4D8               	btfsc	status,2,c
 19799  004650  D002               	goto	l2313
 19800  004652  D7F1               	goto	l7530
 19801                           
 19802                           ; BSR set to: 0
 19803  004654  D000               	goto	l2313
 19804  004656                     l2313:
 19805                           
 19806                           ; BSR set to: 0
 19807  004656  0100               	movlb	0	; () banked
 19808  004658  AF86               	btfss	___ftadd@sign& (0+255),7,b
 19809  00465A  D012               	goto	l2322
 19810                           
 19811                           ; BSR set to: 0
 19812  00465C  0EFF               	movlw	255
 19813  00465E  0100               	movlb	0	; () banked
 19814  004660  1B7D               	xorwf	___ftadd@f1& (0+255),f,b
 19815  004662  0EFF               	movlw	255
 19816  004664  0100               	movlb	0	; () banked
 19817  004666  1B7E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 19818  004668  0EFF               	movlw	255
 19819  00466A  0100               	movlb	0	; () banked
 19820  00466C  1B7F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 19821  00466E  0E01               	movlw	1
 19822  004670  0100               	movlb	0	; () banked
 19823  004672  277D               	addwf	___ftadd@f1& (0+255),f,b
 19824  004674  0E00               	movlw	0
 19825  004676  0100               	movlb	0	; () banked
 19826  004678  237E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 19827  00467A  0E00               	movlw	0
 19828  00467C  0100               	movlb	0	; () banked
 19829  00467E  237F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 19830  004680                     l2322:
 19831                           
 19832                           ; BSR set to: 0
 19833  004680  0100               	movlb	0	; () banked
 19834  004682  AD86               	btfss	___ftadd@sign& (0+255),6,b
 19835  004684  D013               	goto	l7538
 19836                           
 19837                           ; BSR set to: 0
 19838  004686  0EFF               	movlw	255
 19839  004688  0100               	movlb	0	; () banked
 19840  00468A  1B80               	xorwf	___ftadd@f2& (0+255),f,b
 19841  00468C  0EFF               	movlw	255
 19842  00468E  0100               	movlb	0	; () banked
 19843  004690  1B81               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 19844  004692  0EFF               	movlw	255
 19845  004694  0100               	movlb	0	; () banked
 19846  004696  1B82               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 19847  004698  0E01               	movlw	1
 19848  00469A  0100               	movlb	0	; () banked
 19849  00469C  2780               	addwf	___ftadd@f2& (0+255),f,b
 19850  00469E  0E00               	movlw	0
 19851  0046A0  0100               	movlb	0	; () banked
 19852  0046A2  2381               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19853  0046A4  0E00               	movlw	0
 19854  0046A6  0100               	movlb	0	; () banked
 19855  0046A8  2382               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19856  0046AA  D000               	goto	l7538
 19857  0046AC                     l7538:
 19858                           
 19859                           ; BSR set to: 0
 19860  0046AC  0E00               	movlw	0
 19861  0046AE  0100               	movlb	0	; () banked
 19862  0046B0  6F86               	movwf	___ftadd@sign& (0+255),b
 19863                           
 19864                           ; BSR set to: 0
 19865  0046B2  0100               	movlb	0	; () banked
 19866  0046B4  517D               	movf	___ftadd@f1& (0+255),w,b
 19867  0046B6  0100               	movlb	0	; () banked
 19868  0046B8  2780               	addwf	___ftadd@f2& (0+255),f,b
 19869  0046BA  0100               	movlb	0	; () banked
 19870  0046BC  517E               	movf	(___ftadd@f1+1)& (0+255),w,b
 19871  0046BE  0100               	movlb	0	; () banked
 19872  0046C0  2381               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19873  0046C2  0100               	movlb	0	; () banked
 19874  0046C4  517F               	movf	(___ftadd@f1+2)& (0+255),w,b
 19875  0046C6  0100               	movlb	0	; () banked
 19876  0046C8  2382               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19877                           
 19878                           ; BSR set to: 0
 19879  0046CA  0100               	movlb	0	; () banked
 19880  0046CC  AF82               	btfss	(___ftadd@f2+2)& (0+255),7,b
 19881  0046CE  D016               	goto	l7548
 19882                           
 19883                           ; BSR set to: 0
 19884  0046D0  0EFF               	movlw	255
 19885  0046D2  0100               	movlb	0	; () banked
 19886  0046D4  1B80               	xorwf	___ftadd@f2& (0+255),f,b
 19887  0046D6  0EFF               	movlw	255
 19888  0046D8  0100               	movlb	0	; () banked
 19889  0046DA  1B81               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 19890  0046DC  0EFF               	movlw	255
 19891  0046DE  0100               	movlb	0	; () banked
 19892  0046E0  1B82               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 19893  0046E2  0E01               	movlw	1
 19894  0046E4  0100               	movlb	0	; () banked
 19895  0046E6  2780               	addwf	___ftadd@f2& (0+255),f,b
 19896  0046E8  0E00               	movlw	0
 19897  0046EA  0100               	movlb	0	; () banked
 19898  0046EC  2381               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19899  0046EE  0E00               	movlw	0
 19900  0046F0  0100               	movlb	0	; () banked
 19901  0046F2  2382               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19902                           
 19903                           ; BSR set to: 0
 19904  0046F4  0E01               	movlw	1
 19905  0046F6  0100               	movlb	0	; () banked
 19906  0046F8  6F86               	movwf	___ftadd@sign& (0+255),b
 19907  0046FA  D000               	goto	l7548
 19908  0046FC                     l7548:
 19909                           
 19910                           ; BSR set to: 0
 19911  0046FC  C080  F075         	movff	___ftadd@f2,___ftpack@arg
 19912  004700  C081  F076         	movff	___ftadd@f2+1,___ftpack@arg+1
 19913  004704  C082  F077         	movff	___ftadd@f2+2,___ftpack@arg+2
 19914  004708  C088  F078         	movff	___ftadd@exp1,___ftpack@exp
 19915  00470C  C086  F079         	movff	___ftadd@sign,___ftpack@sign
 19916  004710  EC9D  F02C         	call	___ftpack	;wreg free
 19917  004714  C075  F07D         	movff	?___ftpack,?___ftadd
 19918  004718  C076  F07E         	movff	?___ftpack+1,?___ftadd+1
 19919  00471C  C077  F07F         	movff	?___ftpack+2,?___ftadd+2
 19920  004720  0012               	return	
 19921  004722  0012               	return		;funcret
 19922  004724                     __end_of___ftadd:
 19923                           	opt stack 0
 19924                           tblptru	equ	0xFF8
 19925                           tblptrh	equ	0xFF7
 19926                           tblptrl	equ	0xFF6
 19927                           tablat	equ	0xFF5
 19928                           prodh	equ	0xFF4
 19929                           prodl	equ	0xFF3
 19930                           intcon	equ	0xFF2
 19931                           intcon2	equ	0xFF1
 19932                           indf0	equ	0xFEF
 19933                           postinc0	equ	0xFEE
 19934                           plusw0	equ	0xFEB
 19935                           fsr0h	equ	0xFEA
 19936                           fsr0l	equ	0xFE9
 19937                           wreg	equ	0xFE8
 19938                           indf1	equ	0xFE7
 19939                           postdec1	equ	0xFE5
 19940                           fsr1h	equ	0xFE2
 19941                           fsr1l	equ	0xFE1
 19942                           indf2	equ	0xFDF
 19943                           postinc2	equ	0xFDE
 19944                           postdec2	equ	0xFDD
 19945                           plusw2	equ	0xFDB
 19946                           fsr2h	equ	0xFDA
 19947                           fsr2l	equ	0xFD9
 19948                           status	equ	0xFD8
 19949                           
 19950 ;; *************** function ___altoft *****************
 19951 ;; Defined at:
 19952 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;  c               4   29[BANK0 ] long 
 19955 ;; Auto vars:     Size  Location     Type
 19956 ;;  sign            1   38[BANK0 ] unsigned char 
 19957 ;;  exp             1   37[BANK0 ] unsigned char 
 19958 ;; Return value:  Size  Location     Type
 19959 ;;                  3   29[BANK0 ] float 
 19960 ;; Registers used:
 19961 ;;		wreg, status,2, status,0, cstack
 19962 ;; Tracked objects:
 19963 ;;		On entry : 0/0
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19968 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19970 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19971 ;;Total ram usage:       10 bytes
 19972 ;; Hardware stack levels used:    1
 19973 ;; Hardware stack levels required when called:    7
 19974 ;; This function calls:
 19975 ;;		___ftpack
 19976 ;; This function is called by:
 19977 ;;		_Round
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981                           	psect	text48
 19982  00699C                     __ptext48:
 19983                           	opt stack 0
 19984  00699C                     ___altoft:
 19985                           	opt stack 20
 19986                           
 19987                           ;incstack = 0
 19988  00699C  0E00               	movlw	0
 19989  00699E  0100               	movlb	0	; () banked
 19990  0069A0  6F86               	movwf	___altoft@sign& (0+255),b
 19991  0069A2  0E8E               	movlw	142
 19992  0069A4  0100               	movlb	0	; () banked
 19993  0069A6  6F85               	movwf	___altoft@exp& (0+255),b
 19994                           
 19995                           ; BSR set to: 0
 19996  0069A8  0100               	movlb	0	; () banked
 19997  0069AA  AF80               	btfss	(___altoft@c+3)& (0+255),7,b
 19998  0069AC  D016               	goto	l7476
 19999                           
 20000                           ; BSR set to: 0
 20001  0069AE  0100               	movlb	0	; () banked
 20002  0069B0  1F80               	comf	(___altoft@c+3)& (0+255),f,b
 20003  0069B2  1F7F               	comf	(___altoft@c+2)& (0+255),f,b
 20004  0069B4  1F7E               	comf	(___altoft@c+1)& (0+255),f,b
 20005  0069B6  6D7D               	negf	___altoft@c& (0+255),b
 20006  0069B8  0E00               	movlw	0
 20007  0069BA  237E               	addwfc	(___altoft@c+1)& (0+255),f,b
 20008  0069BC  237F               	addwfc	(___altoft@c+2)& (0+255),f,b
 20009  0069BE  2380               	addwfc	(___altoft@c+3)& (0+255),f,b
 20010                           
 20011                           ; BSR set to: 0
 20012  0069C0  0E01               	movlw	1
 20013  0069C2  0100               	movlb	0	; () banked
 20014  0069C4  6F86               	movwf	___altoft@sign& (0+255),b
 20015                           
 20016                           ; BSR set to: 0
 20017  0069C6  D009               	goto	l7476
 20018  0069C8                     l7474:
 20019                           
 20020                           ; BSR set to: 0
 20021  0069C8  0100               	movlb	0	; () banked
 20022  0069CA  90D8               	bcf	status,0,c
 20023  0069CC  3380               	rrcf	(___altoft@c+3)& (0+255),f,b
 20024  0069CE  337F               	rrcf	(___altoft@c+2)& (0+255),f,b
 20025  0069D0  337E               	rrcf	(___altoft@c+1)& (0+255),f,b
 20026  0069D2  337D               	rrcf	___altoft@c& (0+255),f,b
 20027  0069D4  0100               	movlb	0	; () banked
 20028  0069D6  2B85               	incf	___altoft@exp& (0+255),f,b
 20029  0069D8  D000               	goto	l7476
 20030  0069DA                     l7476:
 20031                           
 20032                           ; BSR set to: 0
 20033  0069DA  0E00               	movlw	0
 20034  0069DC  0100               	movlb	0	; () banked
 20035  0069DE  157D               	andwf	___altoft@c& (0+255),w,b
 20036  0069E0  0100               	movlb	0	; () banked
 20037  0069E2  6F81               	movwf	??___altoft& (0+255),b
 20038  0069E4  0E00               	movlw	0
 20039  0069E6  0100               	movlb	0	; () banked
 20040  0069E8  157E               	andwf	(___altoft@c+1)& (0+255),w,b
 20041  0069EA  0100               	movlb	0	; () banked
 20042  0069EC  6F82               	movwf	(??___altoft+1)& (0+255),b
 20043  0069EE  0E00               	movlw	0
 20044  0069F0  0100               	movlb	0	; () banked
 20045  0069F2  157F               	andwf	(___altoft@c+2)& (0+255),w,b
 20046  0069F4  0100               	movlb	0	; () banked
 20047  0069F6  6F83               	movwf	(??___altoft+2)& (0+255),b
 20048  0069F8  0EFF               	movlw	255
 20049  0069FA  0100               	movlb	0	; () banked
 20050  0069FC  1580               	andwf	(___altoft@c+3)& (0+255),w,b
 20051  0069FE  0100               	movlb	0	; () banked
 20052  006A00  6F84               	movwf	(??___altoft+3)& (0+255),b
 20053  006A02  0100               	movlb	0	; () banked
 20054  006A04  5181               	movf	??___altoft& (0+255),w,b
 20055  006A06  0100               	movlb	0	; () banked
 20056  006A08  1182               	iorwf	(??___altoft+1)& (0+255),w,b
 20057  006A0A  0100               	movlb	0	; () banked
 20058  006A0C  1183               	iorwf	(??___altoft+2)& (0+255),w,b
 20059  006A0E  0100               	movlb	0	; () banked
 20060  006A10  1184               	iorwf	(??___altoft+3)& (0+255),w,b
 20061  006A12  A4D8               	btfss	status,2,c
 20062  006A14  D7D9               	goto	l7474
 20063                           
 20064                           ; BSR set to: 0
 20065                           
 20066                           ; BSR set to: 0
 20067  006A16  C07D  F075         	movff	___altoft@c,___ftpack@arg
 20068  006A1A  C07E  F076         	movff	___altoft@c+1,___ftpack@arg+1
 20069  006A1E  C07F  F077         	movff	___altoft@c+2,___ftpack@arg+2
 20070  006A22  C085  F078         	movff	___altoft@exp,___ftpack@exp
 20071  006A26  C086  F079         	movff	___altoft@sign,___ftpack@sign
 20072  006A2A  EC9D  F02C         	call	___ftpack	;wreg free
 20073  006A2E  C075  F07D         	movff	?___ftpack,?___altoft
 20074  006A32  C076  F07E         	movff	?___ftpack+1,?___altoft+1
 20075  006A36  C077  F07F         	movff	?___ftpack+2,?___altoft+2
 20076  006A3A  0012               	return	
 20077  006A3C  0012               	return		;funcret
 20078  006A3E                     __end_of___altoft:
 20079                           	opt stack 0
 20080                           tblptru	equ	0xFF8
 20081                           tblptrh	equ	0xFF7
 20082                           tblptrl	equ	0xFF6
 20083                           tablat	equ	0xFF5
 20084                           prodh	equ	0xFF4
 20085                           prodl	equ	0xFF3
 20086                           intcon	equ	0xFF2
 20087                           intcon2	equ	0xFF1
 20088                           indf0	equ	0xFEF
 20089                           postinc0	equ	0xFEE
 20090                           plusw0	equ	0xFEB
 20091                           fsr0h	equ	0xFEA
 20092                           fsr0l	equ	0xFE9
 20093                           wreg	equ	0xFE8
 20094                           indf1	equ	0xFE7
 20095                           postdec1	equ	0xFE5
 20096                           fsr1h	equ	0xFE2
 20097                           fsr1l	equ	0xFE1
 20098                           indf2	equ	0xFDF
 20099                           postinc2	equ	0xFDE
 20100                           postdec2	equ	0xFDD
 20101                           plusw2	equ	0xFDB
 20102                           fsr2h	equ	0xFDA
 20103                           fsr2l	equ	0xFD9
 20104                           status	equ	0xFD8
 20105                           
 20106 ;; *************** function ___ftpack *****************
 20107 ;; Defined at:
 20108 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 20109 ;; Parameters:    Size  Location     Type
 20110 ;;  arg             3   21[BANK0 ] unsigned um
 20111 ;;  exp             1   24[BANK0 ] unsigned char 
 20112 ;;  sign            1   25[BANK0 ] unsigned char 
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;		None
 20115 ;; Return value:  Size  Location     Type
 20116 ;;                  3   21[BANK0 ] float 
 20117 ;; Registers used:
 20118 ;;		wreg, status,2, status,0
 20119 ;; Tracked objects:
 20120 ;;		On entry : 0/0
 20121 ;;		On exit  : 0/0
 20122 ;;		Unchanged: 0/0
 20123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20124 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20126 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20127 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20128 ;;Total ram usage:        8 bytes
 20129 ;; Hardware stack levels used:    1
 20130 ;; Hardware stack levels required when called:    6
 20131 ;; This function calls:
 20132 ;;		Nothing
 20133 ;; This function is called by:
 20134 ;;		___altoft
 20135 ;;		___ftadd
 20136 ;;		___ftdiv
 20137 ;;		___ftmul
 20138 ;;		___lltoft
 20139 ;;		___lwtoft
 20140 ;; This function uses a non-reentrant model
 20141 ;;
 20142                           
 20143                           	psect	text49
 20144  00593A                     __ptext49:
 20145                           	opt stack 0
 20146  00593A                     ___ftpack:
 20147                           	opt stack 22
 20148                           
 20149                           ;incstack = 0
 20150  00593A  0100               	movlb	0	; () banked
 20151  00593C  5178               	movf	___ftpack@exp& (0+255),w,b
 20152  00593E  0100               	movlb	0	; () banked
 20153  005940  B4D8               	btfsc	status,2,c
 20154  005942  D008               	goto	l6862
 20155                           
 20156                           ; BSR set to: 0
 20157  005944  0100               	movlb	0	; () banked
 20158  005946  5175               	movf	___ftpack@arg& (0+255),w,b
 20159  005948  0100               	movlb	0	; () banked
 20160  00594A  1176               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 20161  00594C  0100               	movlb	0	; () banked
 20162  00594E  1177               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 20163  005950  A4D8               	btfss	status,2,c
 20164  005952  D013               	goto	l6868
 20165  005954                     l6862:
 20166                           
 20167                           ; BSR set to: 0
 20168  005954  0E00               	movlw	0
 20169  005956  0100               	movlb	0	; () banked
 20170  005958  6F75               	movwf	?___ftpack& (0+255),b
 20171  00595A  0E00               	movlw	0
 20172  00595C  0100               	movlb	0	; () banked
 20173  00595E  6F76               	movwf	(?___ftpack+1)& (0+255),b
 20174  005960  0E00               	movlw	0
 20175  005962  0100               	movlb	0	; () banked
 20176  005964  6F77               	movwf	(?___ftpack+2)& (0+255),b
 20177                           
 20178                           ; BSR set to: 0
 20179  005966  0012               	return	
 20180                           
 20181                           ; BSR set to: 0
 20182  005968  D008               	goto	l6868
 20183  00596A                     l6866:
 20184                           
 20185                           ; BSR set to: 0
 20186  00596A  0100               	movlb	0	; () banked
 20187  00596C  2B78               	incf	___ftpack@exp& (0+255),f,b
 20188  00596E  0100               	movlb	0	; () banked
 20189  005970  90D8               	bcf	status,0,c
 20190  005972  3377               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20191  005974  3376               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20192  005976  3375               	rrcf	___ftpack@arg& (0+255),f,b
 20193  005978  D000               	goto	l6868
 20194  00597A                     l6868:
 20195                           
 20196                           ; BSR set to: 0
 20197  00597A  0E00               	movlw	0
 20198  00597C  0100               	movlb	0	; () banked
 20199  00597E  1575               	andwf	___ftpack@arg& (0+255),w,b
 20200  005980  0100               	movlb	0	; () banked
 20201  005982  6F7A               	movwf	??___ftpack& (0+255),b
 20202  005984  0E00               	movlw	0
 20203  005986  0100               	movlb	0	; () banked
 20204  005988  1576               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20205  00598A  0100               	movlb	0	; () banked
 20206  00598C  6F7B               	movwf	(??___ftpack+1)& (0+255),b
 20207  00598E  0EFE               	movlw	254
 20208  005990  0100               	movlb	0	; () banked
 20209  005992  1577               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20210  005994  0100               	movlb	0	; () banked
 20211  005996  6F7C               	movwf	(??___ftpack+2)& (0+255),b
 20212  005998  0100               	movlb	0	; () banked
 20213  00599A  517A               	movf	??___ftpack& (0+255),w,b
 20214  00599C  0100               	movlb	0	; () banked
 20215  00599E  117B               	iorwf	(??___ftpack+1)& (0+255),w,b
 20216  0059A0  0100               	movlb	0	; () banked
 20217  0059A2  117C               	iorwf	(??___ftpack+2)& (0+255),w,b
 20218  0059A4  B4D8               	btfsc	status,2,c
 20219  0059A6  D013               	goto	l6874
 20220  0059A8  D7E0               	goto	l6866
 20221                           
 20222                           ; BSR set to: 0
 20223  0059AA  D011               	goto	l6874
 20224  0059AC                     l6870:
 20225                           
 20226                           ; BSR set to: 0
 20227  0059AC  0100               	movlb	0	; () banked
 20228  0059AE  2B78               	incf	___ftpack@exp& (0+255),f,b
 20229                           
 20230                           ; BSR set to: 0
 20231  0059B0  0E01               	movlw	1
 20232  0059B2  0100               	movlb	0	; () banked
 20233  0059B4  2775               	addwf	___ftpack@arg& (0+255),f,b
 20234  0059B6  0E00               	movlw	0
 20235  0059B8  0100               	movlb	0	; () banked
 20236  0059BA  2376               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 20237  0059BC  0E00               	movlw	0
 20238  0059BE  0100               	movlb	0	; () banked
 20239  0059C0  2377               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 20240  0059C2  0100               	movlb	0	; () banked
 20241  0059C4  90D8               	bcf	status,0,c
 20242  0059C6  3377               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20243  0059C8  3376               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20244  0059CA  3375               	rrcf	___ftpack@arg& (0+255),f,b
 20245  0059CC  D000               	goto	l6874
 20246  0059CE                     l6874:
 20247                           
 20248                           ; BSR set to: 0
 20249  0059CE  0E00               	movlw	0
 20250  0059D0  0100               	movlb	0	; () banked
 20251  0059D2  1575               	andwf	___ftpack@arg& (0+255),w,b
 20252  0059D4  0100               	movlb	0	; () banked
 20253  0059D6  6F7A               	movwf	??___ftpack& (0+255),b
 20254  0059D8  0E00               	movlw	0
 20255  0059DA  0100               	movlb	0	; () banked
 20256  0059DC  1576               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20257  0059DE  0100               	movlb	0	; () banked
 20258  0059E0  6F7B               	movwf	(??___ftpack+1)& (0+255),b
 20259  0059E2  0EFF               	movlw	255
 20260  0059E4  0100               	movlb	0	; () banked
 20261  0059E6  1577               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20262  0059E8  0100               	movlb	0	; () banked
 20263  0059EA  6F7C               	movwf	(??___ftpack+2)& (0+255),b
 20264  0059EC  0100               	movlb	0	; () banked
 20265  0059EE  517A               	movf	??___ftpack& (0+255),w,b
 20266  0059F0  0100               	movlb	0	; () banked
 20267  0059F2  117B               	iorwf	(??___ftpack+1)& (0+255),w,b
 20268  0059F4  0100               	movlb	0	; () banked
 20269  0059F6  117C               	iorwf	(??___ftpack+2)& (0+255),w,b
 20270  0059F8  B4D8               	btfsc	status,2,c
 20271  0059FA  D00A               	goto	l6878
 20272  0059FC  D7D7               	goto	l6870
 20273                           
 20274                           ; BSR set to: 0
 20275  0059FE  D008               	goto	l6878
 20276  005A00                     l6876:
 20277                           
 20278                           ; BSR set to: 0
 20279  005A00  0100               	movlb	0	; () banked
 20280  005A02  0778               	decf	___ftpack@exp& (0+255),f,b
 20281  005A04  0100               	movlb	0	; () banked
 20282  005A06  90D8               	bcf	status,0,c
 20283  005A08  3775               	rlcf	___ftpack@arg& (0+255),f,b
 20284  005A0A  3776               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 20285  005A0C  3777               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 20286  005A0E  D000               	goto	l6878
 20287  005A10                     l6878:
 20288                           
 20289                           ; BSR set to: 0
 20290  005A10  0100               	movlb	0	; () banked
 20291  005A12  BF76               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 20292  005A14  D005               	goto	l2269
 20293                           
 20294                           ; BSR set to: 0
 20295  005A16  0E02               	movlw	2
 20296  005A18  0100               	movlb	0	; () banked
 20297  005A1A  6178               	cpfslt	___ftpack@exp& (0+255),b
 20298  005A1C  D7F1               	goto	l6876
 20299  005A1E  D000               	goto	l2269
 20300  005A20                     l2269:
 20301                           
 20302                           ; BSR set to: 0
 20303  005A20  0100               	movlb	0	; () banked
 20304  005A22  B178               	btfsc	___ftpack@exp& (0+255),0,b
 20305  005A24  D003               	goto	l6884
 20306                           
 20307                           ; BSR set to: 0
 20308  005A26  0100               	movlb	0	; () banked
 20309  005A28  9F76               	bcf	(___ftpack@arg+1)& (0+255),7,b
 20310  005A2A  D000               	goto	l6884
 20311  005A2C                     l6884:
 20312                           
 20313                           ; BSR set to: 0
 20314  005A2C  0100               	movlb	0	; () banked
 20315  005A2E  90D8               	bcf	status,0,c
 20316  005A30  3378               	rrcf	___ftpack@exp& (0+255),f,b
 20317  005A32  0100               	movlb	0	; () banked
 20318  005A34  5178               	movf	___ftpack@exp& (0+255),w,b
 20319  005A36  0100               	movlb	0	; () banked
 20320  005A38  1377               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 20321                           
 20322                           ; BSR set to: 0
 20323  005A3A  0100               	movlb	0	; () banked
 20324  005A3C  5179               	movf	___ftpack@sign& (0+255),w,b
 20325  005A3E  0100               	movlb	0	; () banked
 20326  005A40  B4D8               	btfsc	status,2,c
 20327  005A42  D003               	goto	l6890
 20328                           
 20329                           ; BSR set to: 0
 20330  005A44  0100               	movlb	0	; () banked
 20331  005A46  8F77               	bsf	(___ftpack@arg+2)& (0+255),7,b
 20332  005A48  D000               	goto	l6890
 20333  005A4A                     l6890:
 20334                           
 20335                           ; BSR set to: 0
 20336  005A4A  C075  F075         	movff	___ftpack@arg,?___ftpack
 20337  005A4E  C076  F076         	movff	___ftpack@arg+1,?___ftpack+1
 20338  005A52  C077  F077         	movff	___ftpack@arg+2,?___ftpack+2
 20339  005A56  0012               	return	
 20340                           
 20341                           ; BSR set to: 0
 20342                           
 20343                           ; BSR set to: 0
 20344  005A58  0012               	return		;funcret
 20345  005A5A                     __end_of___ftpack:
 20346                           	opt stack 0
 20347                           tblptru	equ	0xFF8
 20348                           tblptrh	equ	0xFF7
 20349                           tblptrl	equ	0xFF6
 20350                           tablat	equ	0xFF5
 20351                           prodh	equ	0xFF4
 20352                           prodl	equ	0xFF3
 20353                           intcon	equ	0xFF2
 20354                           intcon2	equ	0xFF1
 20355                           indf0	equ	0xFEF
 20356                           postinc0	equ	0xFEE
 20357                           plusw0	equ	0xFEB
 20358                           fsr0h	equ	0xFEA
 20359                           fsr0l	equ	0xFE9
 20360                           wreg	equ	0xFE8
 20361                           indf1	equ	0xFE7
 20362                           postdec1	equ	0xFE5
 20363                           fsr1h	equ	0xFE2
 20364                           fsr1l	equ	0xFE1
 20365                           indf2	equ	0xFDF
 20366                           postinc2	equ	0xFDE
 20367                           postdec2	equ	0xFDD
 20368                           plusw2	equ	0xFDB
 20369                           fsr2h	equ	0xFDA
 20370                           fsr2l	equ	0xFD9
 20371                           status	equ	0xFD8
 20372                           
 20373 ;; *************** function _OpenUSART *****************
 20374 ;; Defined at:
 20375 ;;		line 112 in file "UART.c"
 20376 ;; Parameters:    Size  Location     Type
 20377 ;;  config          1    wreg     unsigned char 
 20378 ;;  spbrg           2   21[BANK0 ] unsigned int 
 20379 ;; Auto vars:     Size  Location     Type
 20380 ;;  config          1   23[BANK0 ] unsigned char 
 20381 ;; Return value:  Size  Location     Type
 20382 ;;		None               void
 20383 ;; Registers used:
 20384 ;;		wreg, status,2
 20385 ;; Tracked objects:
 20386 ;;		On entry : 0/0
 20387 ;;		On exit  : 0/0
 20388 ;;		Unchanged: 0/0
 20389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20393 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20394 ;;Total ram usage:        3 bytes
 20395 ;; Hardware stack levels used:    1
 20396 ;; Hardware stack levels required when called:    6
 20397 ;; This function calls:
 20398 ;;		Nothing
 20399 ;; This function is called by:
 20400 ;;		_InitUART
 20401 ;; This function uses a non-reentrant model
 20402 ;;
 20403                           
 20404                           	psect	text50
 20405  006E0C                     __ptext50:
 20406                           	opt stack 0
 20407  006E0C                     _OpenUSART:
 20408                           	opt stack 22
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;incstack = 0
 20412                           ;OpenUSART@config stored from wreg
 20413  006E0C  0100               	movlb	0	; () banked
 20414  006E0E  6F77               	movwf	OpenUSART@config& (0+255),b
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;UART.c: 114: TXSTA = 0;
 20418  006E10  0E00               	movlw	0
 20419  006E12  6EAC               	movwf	4012,c	;volatile
 20420                           
 20421                           ;UART.c: 115: RCSTA = 0;
 20422  006E14  0E00               	movlw	0
 20423  006E16  6EAB               	movwf	4011,c	;volatile
 20424                           
 20425                           ; BSR set to: 0
 20426                           ;UART.c: 117: if(config&0x01)
 20427  006E18  0100               	movlb	0	; () banked
 20428  006E1A  A177               	btfss	OpenUSART@config& (0+255),0,b
 20429  006E1C  D002               	goto	l7688
 20430                           
 20431                           ; BSR set to: 0
 20432                           ;UART.c: 118: {
 20433                           ;UART.c: 119: TXSTAbits.SYNC = 1;
 20434  006E1E  88AC               	bsf	4012,4,c	;volatile
 20435  006E20  D000               	goto	l7688
 20436  006E22                     l7688:
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;UART.c: 120: }
 20440                           ;UART.c: 122: if(config&0x02)
 20441  006E22  0100               	movlb	0	; () banked
 20442  006E24  A377               	btfss	OpenUSART@config& (0+255),1,b
 20443  006E26  D003               	goto	l7692
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;UART.c: 123: {
 20447                           ;UART.c: 124: TXSTAbits.TX9 = 1;
 20448  006E28  8CAC               	bsf	4012,6,c	;volatile
 20449                           
 20450                           ;UART.c: 125: RCSTAbits.RX9 = 1;
 20451  006E2A  8CAB               	bsf	4011,6,c	;volatile
 20452  006E2C  D000               	goto	l7692
 20453  006E2E                     l7692:
 20454                           
 20455                           ; BSR set to: 0
 20456                           ;UART.c: 126: }
 20457                           ;UART.c: 128: if(config&0x04)
 20458  006E2E  0100               	movlb	0	; () banked
 20459  006E30  A577               	btfss	OpenUSART@config& (0+255),2,b
 20460  006E32  D002               	goto	l7696
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;UART.c: 129: {
 20464                           ;UART.c: 130: TXSTAbits.CSRC = 1;
 20465  006E34  8EAC               	bsf	4012,7,c	;volatile
 20466  006E36  D000               	goto	l7696
 20467  006E38                     l7696:
 20468                           
 20469                           ; BSR set to: 0
 20470                           ;UART.c: 131: }
 20471                           ;UART.c: 133: if(config&0x08)
 20472  006E38  0100               	movlb	0	; () banked
 20473  006E3A  A777               	btfss	OpenUSART@config& (0+255),3,b
 20474  006E3C  D002               	goto	l429
 20475                           
 20476                           ; BSR set to: 0
 20477                           ;UART.c: 134: {
 20478                           ;UART.c: 135: RCSTAbits.CREN = 1;
 20479  006E3E  88AB               	bsf	4011,4,c	;volatile
 20480                           
 20481                           ;UART.c: 136: }
 20482  006E40  D002               	goto	l7700
 20483  006E42                     l429:
 20484                           
 20485                           ; BSR set to: 0
 20486                           ;UART.c: 137: else
 20487                           ;UART.c: 138: {
 20488                           ;UART.c: 139: RCSTAbits.SREN = 1;
 20489  006E42  8AAB               	bsf	4011,5,c	;volatile
 20490  006E44  D000               	goto	l7700
 20491  006E46                     l7700:
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;UART.c: 140: }
 20495                           ;UART.c: 142: if(config&0x10)
 20496  006E46  0100               	movlb	0	; () banked
 20497  006E48  A977               	btfss	OpenUSART@config& (0+255),4,b
 20498  006E4A  D002               	goto	l7704
 20499                           
 20500                           ; BSR set to: 0
 20501                           ;UART.c: 143: {
 20502                           ;UART.c: 144: TXSTAbits.BRGH = 1;
 20503  006E4C  84AC               	bsf	4012,2,c	;volatile
 20504  006E4E  D000               	goto	l7704
 20505  006E50                     l7704:
 20506                           
 20507                           ; BSR set to: 0
 20508                           ;UART.c: 145: }
 20509                           ;UART.c: 147: if(config&0x20)
 20510  006E50  0100               	movlb	0	; () banked
 20511  006E52  AB77               	btfss	OpenUSART@config& (0+255),5,b
 20512  006E54  D002               	goto	l7708
 20513                           
 20514                           ; BSR set to: 0
 20515                           ;UART.c: 148: {
 20516                           ;UART.c: 149: RCSTAbits.ADEN = 1;
 20517  006E56  86AB               	bsf	4011,3,c	;volatile
 20518  006E58  D000               	goto	l7708
 20519  006E5A                     l7708:
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;UART.c: 150: }
 20523                           ;UART.c: 152: if(config&0x40)
 20524  006E5A  0100               	movlb	0	; () banked
 20525  006E5C  AD77               	btfss	OpenUSART@config& (0+255),6,b
 20526  006E5E  D003               	goto	l433
 20527                           
 20528                           ; BSR set to: 0
 20529                           ;UART.c: 153: {
 20530                           ;UART.c: 154: PIR1bits.RCIF = 0;
 20531  006E60  9A9E               	bcf	3998,5,c	;volatile
 20532                           
 20533                           ;UART.c: 155: PIE1bits.RCIE = 1;
 20534  006E62  8A9D               	bsf	3997,5,c	;volatile
 20535                           
 20536                           ;UART.c: 157: }
 20537  006E64  D002               	goto	l7712
 20538  006E66                     l433:
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;UART.c: 158: else
 20542                           ;UART.c: 159: {
 20543                           ;UART.c: 160: PIE1bits.RCIE = 0;
 20544  006E66  9A9D               	bcf	3997,5,c	;volatile
 20545  006E68  D000               	goto	l7712
 20546  006E6A                     l7712:
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;UART.c: 161: }
 20550                           ;UART.c: 163: if(config&0x80)
 20551  006E6A  0100               	movlb	0	; () banked
 20552  006E6C  AF77               	btfss	OpenUSART@config& (0+255),7,b
 20553  006E6E  D003               	goto	l435
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;UART.c: 164: {
 20557                           ;UART.c: 165: PIR1bits.TXIF = 0;
 20558  006E70  989E               	bcf	3998,4,c	;volatile
 20559                           
 20560                           ;UART.c: 166: PIE1bits.TXIE = 1;
 20561  006E72  889D               	bsf	3997,4,c	;volatile
 20562                           
 20563                           ;UART.c: 167: }
 20564  006E74  D001               	goto	l436
 20565  006E76                     l435:
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;UART.c: 168: else
 20569                           ;UART.c: 169: {
 20570                           ;UART.c: 170: PIE1bits.TXIE = 0;
 20571  006E76  989D               	bcf	3997,4,c	;volatile
 20572  006E78                     l436:
 20573                           
 20574                           ; BSR set to: 0
 20575                           ;UART.c: 171: }
 20576                           ;UART.c: 173: SPBRG = spbrg;
 20577  006E78  C075  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;UART.c: 174: SPBRGH = spbrg >> 8;
 20581  006E7C  0100               	movlb	0	; () banked
 20582  006E7E  5176               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 20583  006E80  6EB0               	movwf	4016,c	;volatile
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;UART.c: 176: TXSTAbits.TXEN = 1;
 20587  006E82  8AAC               	bsf	4012,5,c	;volatile
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;UART.c: 177: RCSTAbits.SPEN = 1;
 20591  006E84  8EAB               	bsf	4011,7,c	;volatile
 20592                           
 20593                           ; BSR set to: 0
 20594  006E86  0012               	return		;funcret
 20595  006E88                     __end_of_OpenUSART:
 20596                           	opt stack 0
 20597                           tblptru	equ	0xFF8
 20598                           tblptrh	equ	0xFF7
 20599                           tblptrl	equ	0xFF6
 20600                           tablat	equ	0xFF5
 20601                           prodh	equ	0xFF4
 20602                           prodl	equ	0xFF3
 20603                           intcon	equ	0xFF2
 20604                           intcon2	equ	0xFF1
 20605                           indf0	equ	0xFEF
 20606                           postinc0	equ	0xFEE
 20607                           plusw0	equ	0xFEB
 20608                           fsr0h	equ	0xFEA
 20609                           fsr0l	equ	0xFE9
 20610                           wreg	equ	0xFE8
 20611                           indf1	equ	0xFE7
 20612                           postdec1	equ	0xFE5
 20613                           fsr1h	equ	0xFE2
 20614                           fsr1l	equ	0xFE1
 20615                           indf2	equ	0xFDF
 20616                           postinc2	equ	0xFDE
 20617                           postdec2	equ	0xFDD
 20618                           plusw2	equ	0xFDB
 20619                           fsr2h	equ	0xFDA
 20620                           fsr2l	equ	0xFD9
 20621                           status	equ	0xFD8
 20622                           
 20623 ;; *************** function _Local_CloseUSART *****************
 20624 ;; Defined at:
 20625 ;;		line 62 in file "UART.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;		None
 20628 ;; Auto vars:     Size  Location     Type
 20629 ;;		None
 20630 ;; Return value:  Size  Location     Type
 20631 ;;		None               void
 20632 ;; Registers used:
 20633 ;;		None
 20634 ;; Tracked objects:
 20635 ;;		On entry : 0/0
 20636 ;;		On exit  : 0/0
 20637 ;;		Unchanged: 0/0
 20638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20643 ;;Total ram usage:        0 bytes
 20644 ;; Hardware stack levels used:    1
 20645 ;; Hardware stack levels required when called:    6
 20646 ;; This function calls:
 20647 ;;		Nothing
 20648 ;; This function is called by:
 20649 ;;		_InitUART
 20650 ;; This function uses a non-reentrant model
 20651 ;;
 20652                           
 20653                           	psect	text51
 20654  0077F0                     __ptext51:
 20655                           	opt stack 0
 20656  0077F0                     _Local_CloseUSART:
 20657                           	opt stack 22
 20658                           
 20659                           ;UART.c: 64: PIE1bits.RCIE = 0;
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;incstack = 0
 20663  0077F0  9A9D               	bcf	3997,5,c	;volatile
 20664                           
 20665                           ;UART.c: 65: PIE1bits.TXIE = 0;
 20666  0077F2  989D               	bcf	3997,4,c	;volatile
 20667                           
 20668                           ;UART.c: 66: RCSTAbits.SPEN = 0;
 20669  0077F4  9EAB               	bcf	4011,7,c	;volatile
 20670                           
 20671                           ;UART.c: 67: RCSTAbits.CREN = 0;
 20672  0077F6  98AB               	bcf	4011,4,c	;volatile
 20673                           
 20674                           ;UART.c: 68: RCSTAbits.FERR = 0;
 20675  0077F8  94AB               	bcf	4011,2,c	;volatile
 20676                           
 20677                           ;UART.c: 69: TXSTAbits.TXEN = 0;
 20678  0077FA  9AAC               	bcf	4012,5,c	;volatile
 20679  0077FC  0012               	return		;funcret
 20680  0077FE                     __end_of_Local_CloseUSART:
 20681                           	opt stack 0
 20682                           tblptru	equ	0xFF8
 20683                           tblptrh	equ	0xFF7
 20684                           tblptrl	equ	0xFF6
 20685                           tablat	equ	0xFF5
 20686                           prodh	equ	0xFF4
 20687                           prodl	equ	0xFF3
 20688                           intcon	equ	0xFF2
 20689                           intcon2	equ	0xFF1
 20690                           indf0	equ	0xFEF
 20691                           postinc0	equ	0xFEE
 20692                           plusw0	equ	0xFEB
 20693                           fsr0h	equ	0xFEA
 20694                           fsr0l	equ	0xFE9
 20695                           wreg	equ	0xFE8
 20696                           indf1	equ	0xFE7
 20697                           postdec1	equ	0xFE5
 20698                           fsr1h	equ	0xFE2
 20699                           fsr1l	equ	0xFE1
 20700                           indf2	equ	0xFDF
 20701                           postinc2	equ	0xFDE
 20702                           postdec2	equ	0xFDD
 20703                           plusw2	equ	0xFDB
 20704                           fsr2h	equ	0xFDA
 20705                           fsr2l	equ	0xFD9
 20706                           status	equ	0xFD8
 20707                           
 20708 ;; *************** function _InitTimers *****************
 20709 ;; Defined at:
 20710 ;;		line 49 in file "Timer.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;		None
 20713 ;; Auto vars:     Size  Location     Type
 20714 ;;		None
 20715 ;; Return value:  Size  Location     Type
 20716 ;;		None               void
 20717 ;; Registers used:
 20718 ;;		wreg, status,2, cstack
 20719 ;; Tracked objects:
 20720 ;;		On entry : 0/0
 20721 ;;		On exit  : 0/0
 20722 ;;		Unchanged: 0/0
 20723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20728 ;;Total ram usage:        0 bytes
 20729 ;; Hardware stack levels used:    1
 20730 ;; Hardware stack levels required when called:    7
 20731 ;; This function calls:
 20732 ;;		_InitTimer1
 20733 ;;		_InitTimer2
 20734 ;;		_InitTimer3
 20735 ;; This function is called by:
 20736 ;;		_Init_System
 20737 ;; This function uses a non-reentrant model
 20738 ;;
 20739                           
 20740                           	psect	text52
 20741  0077AC                     __ptext52:
 20742                           	opt stack 0
 20743  0077AC                     _InitTimers:
 20744                           	opt stack 22
 20745                           
 20746                           ;Timer.c: 51: InitTimer1();
 20747                           
 20748                           ;incstack = 0
 20749  0077AC  EC06  F03C         	call	_InitTimer1	;wreg free
 20750                           
 20751                           ;Timer.c: 52: (PIE1bits.TMR1IE = TRUE);
 20752  0077B0  809D               	bsf	3997,0,c	;volatile
 20753                           
 20754                           ;Timer.c: 53: InitTimer2();
 20755  0077B2  ECFF  F03B         	call	_InitTimer2	;wreg free
 20756                           
 20757                           ;Timer.c: 54: (PIE1bits.TMR2IE = TRUE);
 20758  0077B6  829D               	bsf	3997,1,c	;volatile
 20759                           
 20760                           ;Timer.c: 55: InitTimer3();
 20761  0077B8  EC3B  F03C         	call	_InitTimer3	;wreg free
 20762                           
 20763                           ;Timer.c: 56: (PIE2bits.TMR3IE = TRUE);
 20764  0077BC  82A0               	bsf	4000,1,c	;volatile
 20765  0077BE  0012               	return		;funcret
 20766  0077C0                     __end_of_InitTimers:
 20767                           	opt stack 0
 20768                           tblptru	equ	0xFF8
 20769                           tblptrh	equ	0xFF7
 20770                           tblptrl	equ	0xFF6
 20771                           tablat	equ	0xFF5
 20772                           prodh	equ	0xFF4
 20773                           prodl	equ	0xFF3
 20774                           intcon	equ	0xFF2
 20775                           intcon2	equ	0xFF1
 20776                           indf0	equ	0xFEF
 20777                           postinc0	equ	0xFEE
 20778                           plusw0	equ	0xFEB
 20779                           fsr0h	equ	0xFEA
 20780                           fsr0l	equ	0xFE9
 20781                           wreg	equ	0xFE8
 20782                           indf1	equ	0xFE7
 20783                           postdec1	equ	0xFE5
 20784                           fsr1h	equ	0xFE2
 20785                           fsr1l	equ	0xFE1
 20786                           indf2	equ	0xFDF
 20787                           postinc2	equ	0xFDE
 20788                           postdec2	equ	0xFDD
 20789                           plusw2	equ	0xFDB
 20790                           fsr2h	equ	0xFDA
 20791                           fsr2l	equ	0xFD9
 20792                           status	equ	0xFD8
 20793                           
 20794 ;; *************** function _InitTimer3 *****************
 20795 ;; Defined at:
 20796 ;;		line 144 in file "Timer.c"
 20797 ;; Parameters:    Size  Location     Type
 20798 ;;		None
 20799 ;; Auto vars:     Size  Location     Type
 20800 ;;		None
 20801 ;; Return value:  Size  Location     Type
 20802 ;;		None               void
 20803 ;; Registers used:
 20804 ;;		wreg, status,2
 20805 ;; Tracked objects:
 20806 ;;		On entry : 0/0
 20807 ;;		On exit  : 0/0
 20808 ;;		Unchanged: 0/0
 20809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20814 ;;Total ram usage:        0 bytes
 20815 ;; Hardware stack levels used:    1
 20816 ;; Hardware stack levels required when called:    6
 20817 ;; This function calls:
 20818 ;;		Nothing
 20819 ;; This function is called by:
 20820 ;;		_InitTimers
 20821 ;; This function uses a non-reentrant model
 20822 ;;
 20823                           
 20824                           	psect	text53
 20825  007876                     __ptext53:
 20826                           	opt stack 0
 20827  007876                     _InitTimer3:
 20828                           	opt stack 22
 20829                           
 20830                           ;Timer.c: 146: T3CONbits.RD16 = TRUE;
 20831                           
 20832                           ;incstack = 0
 20833  007876  8EB1               	bsf	4017,7,c	;volatile
 20834                           
 20835                           ;Timer.c: 147: T3CONbits.T3CKPS = 0x3;
 20836  007878  0E30               	movlw	48
 20837  00787A  12B1               	iorwf	4017,f,c	;volatile
 20838                           
 20839                           ;Timer.c: 148: T3CONbits.TMR3CS = FALSE;
 20840  00787C  92B1               	bcf	4017,1,c	;volatile
 20841  00787E  0012               	return		;funcret
 20842  007880                     __end_of_InitTimer3:
 20843                           	opt stack 0
 20844                           tblptru	equ	0xFF8
 20845                           tblptrh	equ	0xFF7
 20846                           tblptrl	equ	0xFF6
 20847                           tablat	equ	0xFF5
 20848                           prodh	equ	0xFF4
 20849                           prodl	equ	0xFF3
 20850                           intcon	equ	0xFF2
 20851                           intcon2	equ	0xFF1
 20852                           indf0	equ	0xFEF
 20853                           postinc0	equ	0xFEE
 20854                           plusw0	equ	0xFEB
 20855                           fsr0h	equ	0xFEA
 20856                           fsr0l	equ	0xFE9
 20857                           wreg	equ	0xFE8
 20858                           indf1	equ	0xFE7
 20859                           postdec1	equ	0xFE5
 20860                           fsr1h	equ	0xFE2
 20861                           fsr1l	equ	0xFE1
 20862                           indf2	equ	0xFDF
 20863                           postinc2	equ	0xFDE
 20864                           postdec2	equ	0xFDD
 20865                           plusw2	equ	0xFDB
 20866                           fsr2h	equ	0xFDA
 20867                           fsr2l	equ	0xFD9
 20868                           status	equ	0xFD8
 20869                           
 20870 ;; *************** function _InitTimer2 *****************
 20871 ;; Defined at:
 20872 ;;		line 121 in file "Timer.c"
 20873 ;; Parameters:    Size  Location     Type
 20874 ;;		None
 20875 ;; Auto vars:     Size  Location     Type
 20876 ;;		None
 20877 ;; Return value:  Size  Location     Type
 20878 ;;		None               void
 20879 ;; Registers used:
 20880 ;;		wreg, status,2
 20881 ;; Tracked objects:
 20882 ;;		On entry : 0/0
 20883 ;;		On exit  : 0/0
 20884 ;;		Unchanged: 0/0
 20885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20890 ;;Total ram usage:        0 bytes
 20891 ;; Hardware stack levels used:    1
 20892 ;; Hardware stack levels required when called:    6
 20893 ;; This function calls:
 20894 ;;		Nothing
 20895 ;; This function is called by:
 20896 ;;		_InitTimers
 20897 ;; This function uses a non-reentrant model
 20898 ;;
 20899                           
 20900                           	psect	text54
 20901  0077FE                     __ptext54:
 20902                           	opt stack 0
 20903  0077FE                     _InitTimer2:
 20904                           	opt stack 22
 20905                           
 20906                           ;Timer.c: 123: T2CONbits.T2OUTPS = 0xE;
 20907                           
 20908                           ;incstack = 0
 20909  0077FE  50CA               	movf	4042,w,c	;volatile
 20910  007800  0B87               	andlw	-121
 20911  007802  0970               	iorlw	112
 20912  007804  6ECA               	movwf	4042,c	;volatile
 20913                           
 20914                           ;Timer.c: 124: T2CONbits.T2CKPS = 0x3;
 20915  007806  0E03               	movlw	3
 20916  007808  12CA               	iorwf	4042,f,c	;volatile
 20917  00780A  0012               	return		;funcret
 20918  00780C                     __end_of_InitTimer2:
 20919                           	opt stack 0
 20920                           tblptru	equ	0xFF8
 20921                           tblptrh	equ	0xFF7
 20922                           tblptrl	equ	0xFF6
 20923                           tablat	equ	0xFF5
 20924                           prodh	equ	0xFF4
 20925                           prodl	equ	0xFF3
 20926                           intcon	equ	0xFF2
 20927                           intcon2	equ	0xFF1
 20928                           indf0	equ	0xFEF
 20929                           postinc0	equ	0xFEE
 20930                           plusw0	equ	0xFEB
 20931                           fsr0h	equ	0xFEA
 20932                           fsr0l	equ	0xFE9
 20933                           wreg	equ	0xFE8
 20934                           indf1	equ	0xFE7
 20935                           postdec1	equ	0xFE5
 20936                           fsr1h	equ	0xFE2
 20937                           fsr1l	equ	0xFE1
 20938                           indf2	equ	0xFDF
 20939                           postinc2	equ	0xFDE
 20940                           postdec2	equ	0xFDD
 20941                           plusw2	equ	0xFDB
 20942                           fsr2h	equ	0xFDA
 20943                           fsr2l	equ	0xFD9
 20944                           status	equ	0xFD8
 20945                           
 20946 ;; *************** function _InitTimer1 *****************
 20947 ;; Defined at:
 20948 ;;		line 92 in file "Timer.c"
 20949 ;; Parameters:    Size  Location     Type
 20950 ;;		None
 20951 ;; Auto vars:     Size  Location     Type
 20952 ;;		None
 20953 ;; Return value:  Size  Location     Type
 20954 ;;		None               void
 20955 ;; Registers used:
 20956 ;;		wreg, status,2
 20957 ;; Tracked objects:
 20958 ;;		On entry : 0/0
 20959 ;;		On exit  : 0/0
 20960 ;;		Unchanged: 0/0
 20961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20966 ;;Total ram usage:        0 bytes
 20967 ;; Hardware stack levels used:    1
 20968 ;; Hardware stack levels required when called:    6
 20969 ;; This function calls:
 20970 ;;		Nothing
 20971 ;; This function is called by:
 20972 ;;		_InitTimers
 20973 ;; This function uses a non-reentrant model
 20974 ;;
 20975                           
 20976                           	psect	text55
 20977  00780C                     __ptext55:
 20978                           	opt stack 0
 20979  00780C                     _InitTimer1:
 20980                           	opt stack 22
 20981                           
 20982                           ;Timer.c: 94: T1CONbits.RD16 = TRUE;
 20983                           
 20984                           ;incstack = 0
 20985  00780C  8ECD               	bsf	4045,7,c	;volatile
 20986                           
 20987                           ;Timer.c: 95: T1CONbits.T1RUN = FALSE;
 20988  00780E  9CCD               	bcf	4045,6,c	;volatile
 20989                           
 20990                           ;Timer.c: 96: T1CONbits.T1CKPS = 0x3;
 20991  007810  0E30               	movlw	48
 20992  007812  12CD               	iorwf	4045,f,c	;volatile
 20993                           
 20994                           ;Timer.c: 97: T1CONbits.T1OSCEN = FALSE;
 20995  007814  96CD               	bcf	4045,3,c	;volatile
 20996                           
 20997                           ;Timer.c: 98: T1CONbits.TMR1CS = FALSE;
 20998  007816  92CD               	bcf	4045,1,c	;volatile
 20999  007818  0012               	return		;funcret
 21000  00781A                     __end_of_InitTimer1:
 21001                           	opt stack 0
 21002                           tblptru	equ	0xFF8
 21003                           tblptrh	equ	0xFF7
 21004                           tblptrl	equ	0xFF6
 21005                           tablat	equ	0xFF5
 21006                           prodh	equ	0xFF4
 21007                           prodl	equ	0xFF3
 21008                           intcon	equ	0xFF2
 21009                           intcon2	equ	0xFF1
 21010                           indf0	equ	0xFEF
 21011                           postinc0	equ	0xFEE
 21012                           plusw0	equ	0xFEB
 21013                           fsr0h	equ	0xFEA
 21014                           fsr0l	equ	0xFE9
 21015                           wreg	equ	0xFE8
 21016                           indf1	equ	0xFE7
 21017                           postdec1	equ	0xFE5
 21018                           fsr1h	equ	0xFE2
 21019                           fsr1l	equ	0xFE1
 21020                           indf2	equ	0xFDF
 21021                           postinc2	equ	0xFDE
 21022                           postdec2	equ	0xFDD
 21023                           plusw2	equ	0xFDB
 21024                           fsr2h	equ	0xFDA
 21025                           fsr2l	equ	0xFD9
 21026                           status	equ	0xFD8
 21027                           
 21028 ;; *************** function _InitIR *****************
 21029 ;; Defined at:
 21030 ;;		line 77 in file "IR.c"
 21031 ;; Parameters:    Size  Location     Type
 21032 ;;		None
 21033 ;; Auto vars:     Size  Location     Type
 21034 ;;		None
 21035 ;; Return value:  Size  Location     Type
 21036 ;;		None               void
 21037 ;; Registers used:
 21038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21039 ;; Tracked objects:
 21040 ;;		On entry : 0/0
 21041 ;;		On exit  : 0/0
 21042 ;;		Unchanged: 0/0
 21043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21048 ;;Total ram usage:        0 bytes
 21049 ;; Hardware stack levels used:    1
 21050 ;; Hardware stack levels required when called:    7
 21051 ;; This function calls:
 21052 ;;		_InitTimer0
 21053 ;;		_ReadIRpin
 21054 ;;		_ResetTimer0
 21055 ;;		_cleanBuffer16bit
 21056 ;; This function is called by:
 21057 ;;		_Init_System
 21058 ;; This function uses a non-reentrant model
 21059 ;;
 21060                           
 21061                           	psect	text56
 21062  007312                     __ptext56:
 21063                           	opt stack 0
 21064  007312                     _InitIR:
 21065                           	opt stack 22
 21066                           
 21067                           ;IR.c: 80: (IOCBbits.IOCB4 = 1);
 21068                           
 21069                           ;incstack = 0
 21070  007312  887D               	bsf	3965,4,c	;volatile
 21071                           
 21072                           ;IR.c: 82: IRpinOLD = ReadIRpin();
 21073  007314  EC0D  F03C         	call	_ReadIRpin	;wreg free
 21074  007318  6E2F               	movwf	_IRpinOLD,c
 21075                           
 21076                           ;IR.c: 84: InitTimer0();
 21077  00731A  ECE9  F03B         	call	_InitTimer0	;wreg free
 21078                           
 21079                           ;IR.c: 86: cleanBuffer16bit(IRRawCode, 72);
 21080  00731E  0E00               	movlw	low _IRRawCode
 21081  007320  0100               	movlb	0	; () banked
 21082  007322  6F75               	movwf	cleanBuffer16bit@data& (0+255),b
 21083  007324  0E08               	movlw	high _IRRawCode
 21084  007326  0100               	movlb	0	; () banked
 21085  007328  6F76               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 21086  00732A  0E00               	movlw	0
 21087  00732C  0100               	movlb	0	; () banked
 21088  00732E  6F78               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 21089  007330  0E48               	movlw	72
 21090  007332  6F77               	movwf	cleanBuffer16bit@count& (0+255),b
 21091  007334  EC54  F038         	call	_cleanBuffer16bit	;wreg free
 21092                           
 21093                           ;IR.c: 87: IR_NEC = 0;
 21094  007338  0E00               	movlw	0
 21095  00733A  0100               	movlb	0	; () banked
 21096  00733C  6FCE               	movwf	_IR_NEC& (0+255),b
 21097  00733E  0E00               	movlw	0
 21098  007340  6FCF               	movwf	(_IR_NEC+1)& (0+255),b
 21099  007342  0E00               	movlw	0
 21100  007344  6FD0               	movwf	(_IR_NEC+2)& (0+255),b
 21101  007346  0E00               	movlw	0
 21102  007348  6FD1               	movwf	(_IR_NEC+3)& (0+255),b
 21103                           
 21104                           ; BSR set to: 0
 21105                           ;IR.c: 88: (T0CONbits.TMR0ON = 0);
 21106  00734A  9ED5               	bcf	4053,7,c	;volatile
 21107                           
 21108                           ; BSR set to: 0
 21109                           ;IR.c: 90: ResetTimer0();
 21110  00734C  EC40  F03C         	call	_ResetTimer0	;wreg free
 21111                           
 21112                           ;IR.c: 92: (INTCONbits.TMR0IE = 0);
 21113  007350  9AF2               	bcf	intcon,5,c	;volatile
 21114                           
 21115                           ;IR.c: 93: INTCONbits.TMR0IF = 0;
 21116  007352  94F2               	bcf	intcon,2,c	;volatile
 21117                           
 21118                           ;IR.c: 95: INTCONbits.RBIF = 0;
 21119  007354  90F2               	bcf	intcon,0,c	;volatile
 21120                           
 21121                           ;IR.c: 96: INTCONbits.RBIE = 1;
 21122  007356  86F2               	bsf	intcon,3,c	;volatile
 21123  007358  0012               	return		;funcret
 21124  00735A                     __end_of_InitIR:
 21125                           	opt stack 0
 21126                           tblptru	equ	0xFF8
 21127                           tblptrh	equ	0xFF7
 21128                           tblptrl	equ	0xFF6
 21129                           tablat	equ	0xFF5
 21130                           prodh	equ	0xFF4
 21131                           prodl	equ	0xFF3
 21132                           intcon	equ	0xFF2
 21133                           intcon2	equ	0xFF1
 21134                           indf0	equ	0xFEF
 21135                           postinc0	equ	0xFEE
 21136                           plusw0	equ	0xFEB
 21137                           fsr0h	equ	0xFEA
 21138                           fsr0l	equ	0xFE9
 21139                           wreg	equ	0xFE8
 21140                           indf1	equ	0xFE7
 21141                           postdec1	equ	0xFE5
 21142                           fsr1h	equ	0xFE2
 21143                           fsr1l	equ	0xFE1
 21144                           indf2	equ	0xFDF
 21145                           postinc2	equ	0xFDE
 21146                           postdec2	equ	0xFDD
 21147                           plusw2	equ	0xFDB
 21148                           fsr2h	equ	0xFDA
 21149                           fsr2l	equ	0xFD9
 21150                           status	equ	0xFD8
 21151                           
 21152 ;; *************** function _cleanBuffer16bit *****************
 21153 ;; Defined at:
 21154 ;;		line 139 in file "MISC.c"
 21155 ;; Parameters:    Size  Location     Type
 21156 ;;  data            2   21[BANK0 ] PTR unsigned int 
 21157 ;;		 -> IRRawCode(144), 
 21158 ;;  count           2   23[BANK0 ] int 
 21159 ;; Auto vars:     Size  Location     Type
 21160 ;;  i               1   28[BANK0 ] unsigned char 
 21161 ;; Return value:  Size  Location     Type
 21162 ;;		None               void
 21163 ;; Registers used:
 21164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/0
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21172 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21173 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21174 ;;Total ram usage:        8 bytes
 21175 ;; Hardware stack levels used:    1
 21176 ;; Hardware stack levels required when called:    6
 21177 ;; This function calls:
 21178 ;;		Nothing
 21179 ;; This function is called by:
 21180 ;;		_InitIR
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text57
 21185  0070A8                     __ptext57:
 21186                           	opt stack 0
 21187  0070A8                     _cleanBuffer16bit:
 21188                           	opt stack 22
 21189                           
 21190                           ;MISC.c: 141: unsigned char i=0;
 21191                           
 21192                           ;incstack = 0
 21193  0070A8  0E00               	movlw	0
 21194  0070AA  0100               	movlb	0	; () banked
 21195  0070AC  6F7C               	movwf	cleanBuffer16bit@i& (0+255),b
 21196                           
 21197                           ;MISC.c: 142: for(i=0; i<count;i++)
 21198  0070AE  0E00               	movlw	0
 21199  0070B0  0100               	movlb	0	; () banked
 21200  0070B2  6F7C               	movwf	cleanBuffer16bit@i& (0+255),b
 21201  0070B4  D012               	goto	l7616
 21202  0070B6                     l7612:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;MISC.c: 143: {
 21206                           ;MISC.c: 144: data[i]= 0;
 21207  0070B6  0100               	movlb	0	; () banked
 21208  0070B8  517C               	movf	cleanBuffer16bit@i& (0+255),w,b
 21209  0070BA  0D02               	mullw	2
 21210  0070BC  50F3               	movf	prodl,w,c
 21211  0070BE  0100               	movlb	0	; () banked
 21212  0070C0  2575               	addwf	cleanBuffer16bit@data& (0+255),w,b
 21213  0070C2  6ED9               	movwf	fsr2l,c
 21214  0070C4  50F4               	movf	prodh,w,c
 21215  0070C6  0100               	movlb	0	; () banked
 21216  0070C8  2176               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 21217  0070CA  6EDA               	movwf	fsr2h,c
 21218  0070CC  0E00               	movlw	0
 21219  0070CE  6EDE               	movwf	postinc2,c
 21220  0070D0  0E00               	movlw	0
 21221  0070D2  6EDD               	movwf	postdec2,c
 21222                           
 21223                           ; BSR set to: 0
 21224  0070D4  0100               	movlb	0	; () banked
 21225  0070D6  2B7C               	incf	cleanBuffer16bit@i& (0+255),f,b
 21226  0070D8  D000               	goto	l7616
 21227  0070DA                     l7616:
 21228                           
 21229                           ; BSR set to: 0
 21230  0070DA  0100               	movlb	0	; () banked
 21231  0070DC  517C               	movf	cleanBuffer16bit@i& (0+255),w,b
 21232  0070DE  0100               	movlb	0	; () banked
 21233  0070E0  6F79               	movwf	??_cleanBuffer16bit& (0+255),b
 21234  0070E2  6B7A               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 21235  0070E4  0100               	movlb	0	; () banked
 21236  0070E6  5177               	movf	cleanBuffer16bit@count& (0+255),w,b
 21237  0070E8  0100               	movlb	0	; () banked
 21238  0070EA  5D79               	subwf	??_cleanBuffer16bit& (0+255),w,b
 21239  0070EC  0100               	movlb	0	; () banked
 21240  0070EE  517A               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 21241  0070F0  0A80               	xorlw	128
 21242  0070F2  0100               	movlb	0	; () banked
 21243  0070F4  6F7B               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 21244  0070F6  0100               	movlb	0	; () banked
 21245  0070F8  5178               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 21246  0070FA  0A80               	xorlw	128
 21247  0070FC  0100               	movlb	0	; () banked
 21248  0070FE  597B               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 21249  007100  A0D8               	btfss	status,0,c
 21250  007102  D7D9               	goto	l7612
 21251                           
 21252                           ; BSR set to: 0
 21253                           
 21254                           ; BSR set to: 0
 21255  007104  0012               	return		;funcret
 21256  007106                     __end_of_cleanBuffer16bit:
 21257                           	opt stack 0
 21258                           tblptru	equ	0xFF8
 21259                           tblptrh	equ	0xFF7
 21260                           tblptrl	equ	0xFF6
 21261                           tablat	equ	0xFF5
 21262                           prodh	equ	0xFF4
 21263                           prodl	equ	0xFF3
 21264                           intcon	equ	0xFF2
 21265                           intcon2	equ	0xFF1
 21266                           indf0	equ	0xFEF
 21267                           postinc0	equ	0xFEE
 21268                           plusw0	equ	0xFEB
 21269                           fsr0h	equ	0xFEA
 21270                           fsr0l	equ	0xFE9
 21271                           wreg	equ	0xFE8
 21272                           indf1	equ	0xFE7
 21273                           postdec1	equ	0xFE5
 21274                           fsr1h	equ	0xFE2
 21275                           fsr1l	equ	0xFE1
 21276                           indf2	equ	0xFDF
 21277                           postinc2	equ	0xFDE
 21278                           postdec2	equ	0xFDD
 21279                           plusw2	equ	0xFDB
 21280                           fsr2h	equ	0xFDA
 21281                           fsr2l	equ	0xFD9
 21282                           status	equ	0xFD8
 21283                           
 21284 ;; *************** function _ResetTimer0 *****************
 21285 ;; Defined at:
 21286 ;;		line 77 in file "Timer.c"
 21287 ;; Parameters:    Size  Location     Type
 21288 ;;		None
 21289 ;; Auto vars:     Size  Location     Type
 21290 ;;		None
 21291 ;; Return value:  Size  Location     Type
 21292 ;;		None               void
 21293 ;; Registers used:
 21294 ;;		wreg, status,2
 21295 ;; Tracked objects:
 21296 ;;		On entry : 0/0
 21297 ;;		On exit  : 0/0
 21298 ;;		Unchanged: 0/0
 21299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21304 ;;Total ram usage:        0 bytes
 21305 ;; Hardware stack levels used:    1
 21306 ;; Hardware stack levels required when called:    6
 21307 ;; This function calls:
 21308 ;;		Nothing
 21309 ;; This function is called by:
 21310 ;;		_InitIR
 21311 ;; This function uses a non-reentrant model
 21312 ;;
 21313                           
 21314                           	psect	text58
 21315  007880                     __ptext58:
 21316                           	opt stack 0
 21317  007880                     _ResetTimer0:
 21318                           	opt stack 22
 21319                           
 21320                           ;Timer.c: 83: TMR0H = 0;
 21321                           
 21322                           ; BSR set to: 0
 21323                           ;incstack = 0
 21324  007880  0E00               	movlw	0
 21325  007882  6ED7               	movwf	4055,c	;volatile
 21326                           
 21327                           ;Timer.c: 84: TMR0L = 2;
 21328  007884  0E02               	movlw	2
 21329  007886  6ED6               	movwf	4054,c	;volatile
 21330  007888  0012               	return		;funcret
 21331  00788A                     __end_of_ResetTimer0:
 21332                           	opt stack 0
 21333                           tblptru	equ	0xFF8
 21334                           tblptrh	equ	0xFF7
 21335                           tblptrl	equ	0xFF6
 21336                           tablat	equ	0xFF5
 21337                           prodh	equ	0xFF4
 21338                           prodl	equ	0xFF3
 21339                           intcon	equ	0xFF2
 21340                           intcon2	equ	0xFF1
 21341                           indf0	equ	0xFEF
 21342                           postinc0	equ	0xFEE
 21343                           plusw0	equ	0xFEB
 21344                           fsr0h	equ	0xFEA
 21345                           fsr0l	equ	0xFE9
 21346                           wreg	equ	0xFE8
 21347                           indf1	equ	0xFE7
 21348                           postdec1	equ	0xFE5
 21349                           fsr1h	equ	0xFE2
 21350                           fsr1l	equ	0xFE1
 21351                           indf2	equ	0xFDF
 21352                           postinc2	equ	0xFDE
 21353                           postdec2	equ	0xFDD
 21354                           plusw2	equ	0xFDB
 21355                           fsr2h	equ	0xFDA
 21356                           fsr2l	equ	0xFD9
 21357                           status	equ	0xFD8
 21358                           
 21359 ;; *************** function _ReadIRpin *****************
 21360 ;; Defined at:
 21361 ;;		line 104 in file "IR.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;		None
 21364 ;; Auto vars:     Size  Location     Type
 21365 ;;		None
 21366 ;; Return value:  Size  Location     Type
 21367 ;;                  1    wreg      unsigned char 
 21368 ;; Registers used:
 21369 ;;		wreg
 21370 ;; Tracked objects:
 21371 ;;		On entry : 0/0
 21372 ;;		On exit  : 0/0
 21373 ;;		Unchanged: 0/0
 21374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21379 ;;Total ram usage:        0 bytes
 21380 ;; Hardware stack levels used:    1
 21381 ;; Hardware stack levels required when called:    6
 21382 ;; This function calls:
 21383 ;;		Nothing
 21384 ;; This function is called by:
 21385 ;;		_main
 21386 ;;		_InitIR
 21387 ;;		_UseIRCode
 21388 ;;		_SendNEC_wait
 21389 ;;		_SendRF_wait
 21390 ;; This function uses a non-reentrant model
 21391 ;;
 21392                           
 21393                           	psect	text59
 21394  00781A                     __ptext59:
 21395                           	opt stack 0
 21396  00781A                     _ReadIRpin:
 21397                           	opt stack 21
 21398                           
 21399                           ;IR.c: 107: if((PORTB & 0x10) == 0x10)
 21400                           
 21401                           ;incstack = 0
 21402  00781A  A881               	btfss	3969,4,c	;volatile
 21403  00781C  D002               	goto	l6940
 21404                           
 21405                           ;IR.c: 108: {
 21406                           ;IR.c: 109: return (1);
 21407  00781E  0E01               	movlw	1
 21408                           
 21409                           ;IR.c: 110: }
 21410  007820  0012               	return	
 21411  007822                     l6940:
 21412                           
 21413                           ;IR.c: 111: else
 21414                           ;IR.c: 112: {
 21415                           ;IR.c: 113: return 0;
 21416  007822  0E00               	movlw	0
 21417  007824  0012               	return	
 21418  007826  0012               	return		;funcret
 21419  007828                     __end_of_ReadIRpin:
 21420                           	opt stack 0
 21421                           tblptru	equ	0xFF8
 21422                           tblptrh	equ	0xFF7
 21423                           tblptrl	equ	0xFF6
 21424                           tablat	equ	0xFF5
 21425                           prodh	equ	0xFF4
 21426                           prodl	equ	0xFF3
 21427                           intcon	equ	0xFF2
 21428                           intcon2	equ	0xFF1
 21429                           indf0	equ	0xFEF
 21430                           postinc0	equ	0xFEE
 21431                           plusw0	equ	0xFEB
 21432                           fsr0h	equ	0xFEA
 21433                           fsr0l	equ	0xFE9
 21434                           wreg	equ	0xFE8
 21435                           indf1	equ	0xFE7
 21436                           postdec1	equ	0xFE5
 21437                           fsr1h	equ	0xFE2
 21438                           fsr1l	equ	0xFE1
 21439                           indf2	equ	0xFDF
 21440                           postinc2	equ	0xFDE
 21441                           postdec2	equ	0xFDD
 21442                           plusw2	equ	0xFDB
 21443                           fsr2h	equ	0xFDA
 21444                           fsr2l	equ	0xFD9
 21445                           status	equ	0xFD8
 21446                           
 21447 ;; *************** function _InitTimer0 *****************
 21448 ;; Defined at:
 21449 ;;		line 64 in file "Timer.c"
 21450 ;; Parameters:    Size  Location     Type
 21451 ;;		None
 21452 ;; Auto vars:     Size  Location     Type
 21453 ;;		None
 21454 ;; Return value:  Size  Location     Type
 21455 ;;		None               void
 21456 ;; Registers used:
 21457 ;;		wreg, status,2
 21458 ;; Tracked objects:
 21459 ;;		On entry : 0/0
 21460 ;;		On exit  : 0/0
 21461 ;;		Unchanged: 0/0
 21462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21467 ;;Total ram usage:        0 bytes
 21468 ;; Hardware stack levels used:    1
 21469 ;; Hardware stack levels required when called:    6
 21470 ;; This function calls:
 21471 ;;		Nothing
 21472 ;; This function is called by:
 21473 ;;		_InitIR
 21474 ;; This function uses a non-reentrant model
 21475 ;;
 21476                           
 21477                           	psect	text60
 21478  0077D2                     __ptext60:
 21479                           	opt stack 0
 21480  0077D2                     _InitTimer0:
 21481                           	opt stack 22
 21482                           
 21483                           ;Timer.c: 66: T0CONbits.T08BIT = FALSE;
 21484                           
 21485                           ;incstack = 0
 21486  0077D2  9CD5               	bcf	4053,6,c	;volatile
 21487                           
 21488                           ;Timer.c: 67: T0CONbits.T0CS = FALSE;
 21489  0077D4  9AD5               	bcf	4053,5,c	;volatile
 21490                           
 21491                           ;Timer.c: 68: T0CONbits.PSA = FALSE;
 21492  0077D6  96D5               	bcf	4053,3,c	;volatile
 21493                           
 21494                           ;Timer.c: 69: T0CONbits.T0PS = 0x4;
 21495  0077D8  50D5               	movf	4053,w,c	;volatile
 21496  0077DA  0BF8               	andlw	-8
 21497  0077DC  0904               	iorlw	4
 21498  0077DE  6ED5               	movwf	4053,c	;volatile
 21499  0077E0  0012               	return		;funcret
 21500  0077E2                     __end_of_InitTimer0:
 21501                           	opt stack 0
 21502                           tblptru	equ	0xFF8
 21503                           tblptrh	equ	0xFF7
 21504                           tblptrl	equ	0xFF6
 21505                           tablat	equ	0xFF5
 21506                           prodh	equ	0xFF4
 21507                           prodl	equ	0xFF3
 21508                           intcon	equ	0xFF2
 21509                           intcon2	equ	0xFF1
 21510                           indf0	equ	0xFEF
 21511                           postinc0	equ	0xFEE
 21512                           plusw0	equ	0xFEB
 21513                           fsr0h	equ	0xFEA
 21514                           fsr0l	equ	0xFE9
 21515                           wreg	equ	0xFE8
 21516                           indf1	equ	0xFE7
 21517                           postdec1	equ	0xFE5
 21518                           fsr1h	equ	0xFE2
 21519                           fsr1l	equ	0xFE1
 21520                           indf2	equ	0xFDF
 21521                           postinc2	equ	0xFDE
 21522                           postdec2	equ	0xFDD
 21523                           plusw2	equ	0xFDB
 21524                           fsr2h	equ	0xFDA
 21525                           fsr2l	equ	0xFD9
 21526                           status	equ	0xFD8
 21527                           
 21528 ;; *************** function _InitBluetooth *****************
 21529 ;; Defined at:
 21530 ;;		line 61 in file "Bluetooth.c"
 21531 ;; Parameters:    Size  Location     Type
 21532 ;;		None
 21533 ;; Auto vars:     Size  Location     Type
 21534 ;;		None
 21535 ;; Return value:  Size  Location     Type
 21536 ;;		None               void
 21537 ;; Registers used:
 21538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21539 ;; Tracked objects:
 21540 ;;		On entry : 0/0
 21541 ;;		On exit  : 0/0
 21542 ;;		Unchanged: 0/0
 21543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21548 ;;Total ram usage:        0 bytes
 21549 ;; Hardware stack levels used:    1
 21550 ;; Hardware stack levels required when called:   12
 21551 ;; This function calls:
 21552 ;;		_BluetoothConfigured
 21553 ;;		_BluetoothInitialSetup
 21554 ;;		_ResetBlue
 21555 ;;		_cleanBuffer
 21556 ;; This function is called by:
 21557 ;;		_Init_System
 21558 ;; This function uses a non-reentrant model
 21559 ;;
 21560                           
 21561                           	psect	text61
 21562  007212                     __ptext61:
 21563                           	opt stack 0
 21564  007212                     _InitBluetooth:
 21565                           	opt stack 17
 21566                           
 21567                           ;Bluetooth.c: 63: cleanBuffer(ReceivedString,255);
 21568                           
 21569                           ;incstack = 0
 21570  007212  0E00               	movlw	low _ReceivedString
 21571  007214  0100               	movlb	0	; () banked
 21572  007216  6F75               	movwf	cleanBuffer@data& (0+255),b
 21573  007218  0E06               	movlw	high _ReceivedString
 21574  00721A  0100               	movlb	0	; () banked
 21575  00721C  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 21576  00721E  0E00               	movlw	0
 21577  007220  0100               	movlb	0	; () banked
 21578  007222  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
 21579  007224  6977               	setf	cleanBuffer@count& (0+255),b
 21580  007226  EC83  F038         	call	_cleanBuffer	;wreg free
 21581                           
 21582                           ;Bluetooth.c: 64: ReceivedStringPos = 0;
 21583  00722A  0E00               	movlw	0
 21584  00722C  0100               	movlb	0	; () banked
 21585  00722E  6FCD               	movwf	_ReceivedStringPos& (0+255),b
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;Bluetooth.c: 65: cleanBuffer(CommandString,255);
 21589  007230  0E00               	movlw	low _CommandString
 21590  007232  0100               	movlb	0	; () banked
 21591  007234  6F75               	movwf	cleanBuffer@data& (0+255),b
 21592  007236  0E09               	movlw	high _CommandString
 21593  007238  0100               	movlb	0	; () banked
 21594  00723A  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 21595  00723C  0E00               	movlw	0
 21596  00723E  0100               	movlb	0	; () banked
 21597  007240  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
 21598  007242  6977               	setf	cleanBuffer@count& (0+255),b
 21599  007244  EC83  F038         	call	_cleanBuffer	;wreg free
 21600                           
 21601                           ;Bluetooth.c: 66: CommandStringPos = 0;
 21602  007248  0E00               	movlw	0
 21603  00724A  6E2D               	movwf	_CommandStringPos,c
 21604                           
 21605                           ;Bluetooth.c: 68: LATA &= ~0x10;
 21606  00724C  9889               	bcf	3977,4,c	;volatile
 21607                           
 21608                           ;Bluetooth.c: 69: LATA |= 0x08;
 21609  00724E  8689               	bsf	3977,3,c	;volatile
 21610                           
 21611                           ;Bluetooth.c: 70: LATA &= ~0x10;
 21612  007250  9889               	bcf	3977,4,c	;volatile
 21613                           
 21614                           ;Bluetooth.c: 71: if(!BluetoothConfigured())
 21615  007252  EC83  F03B         	call	_BluetoothConfigured	;wreg free
 21616  007256  0900               	iorlw	0
 21617  007258  A4D8               	btfss	status,2,c
 21618  00725A  0012               	return	
 21619                           
 21620                           ;Bluetooth.c: 72: {
 21621                           ;Bluetooth.c: 73: BluetoothInitialSetup();
 21622  00725C  EC30  F01D         	call	_BluetoothInitialSetup	;wreg free
 21623                           
 21624                           ;Bluetooth.c: 74: ResetBlue();
 21625  007260  ECE0  F03A         	call	_ResetBlue	;wreg free
 21626  007264  0012               	return	
 21627  007266  0012               	return		;funcret
 21628  007268                     __end_of_InitBluetooth:
 21629                           	opt stack 0
 21630                           tblptru	equ	0xFF8
 21631                           tblptrh	equ	0xFF7
 21632                           tblptrl	equ	0xFF6
 21633                           tablat	equ	0xFF5
 21634                           prodh	equ	0xFF4
 21635                           prodl	equ	0xFF3
 21636                           intcon	equ	0xFF2
 21637                           intcon2	equ	0xFF1
 21638                           indf0	equ	0xFEF
 21639                           postinc0	equ	0xFEE
 21640                           plusw0	equ	0xFEB
 21641                           fsr0h	equ	0xFEA
 21642                           fsr0l	equ	0xFE9
 21643                           wreg	equ	0xFE8
 21644                           indf1	equ	0xFE7
 21645                           postdec1	equ	0xFE5
 21646                           fsr1h	equ	0xFE2
 21647                           fsr1l	equ	0xFE1
 21648                           indf2	equ	0xFDF
 21649                           postinc2	equ	0xFDE
 21650                           postdec2	equ	0xFDD
 21651                           plusw2	equ	0xFDB
 21652                           fsr2h	equ	0xFDA
 21653                           fsr2l	equ	0xFD9
 21654                           status	equ	0xFD8
 21655                           
 21656 ;; *************** function _BluetoothInitialSetup *****************
 21657 ;; Defined at:
 21658 ;;		line 144 in file "Bluetooth.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;		None
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;  buf            50   10[BANK1 ] unsigned char [50]
 21663 ;;  RFchannel      10    0[BANK1 ] unsigned char [10]
 21664 ;;  ok              1   60[BANK1 ] unsigned char 
 21665 ;; Return value:  Size  Location     Type
 21666 ;;                  1    wreg      unsigned char 
 21667 ;; Registers used:
 21668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21669 ;; Tracked objects:
 21670 ;;		On entry : 0/0
 21671 ;;		On exit  : 0/0
 21672 ;;		Unchanged: 0/0
 21673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21675 ;;      Locals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21677 ;;      Totals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21678 ;;Total ram usage:       61 bytes
 21679 ;; Hardware stack levels used:    1
 21680 ;; Hardware stack levels required when called:    9
 21681 ;; This function calls:
 21682 ;;		_EnterCommandMode
 21683 ;;		_StringContains
 21684 ;;		_UARTstring
 21685 ;;		_cleanBuffer
 21686 ;;		_delayUS
 21687 ;;		_sprintf
 21688 ;; This function is called by:
 21689 ;;		_InitBluetooth
 21690 ;; This function uses a non-reentrant model
 21691 ;;
 21692                           
 21693                           	psect	text62
 21694  003A60                     __ptext62:
 21695                           	opt stack 0
 21696  003A60                     _BluetoothInitialSetup:
 21697                           	opt stack 19
 21698                           
 21699                           ;Bluetooth.c: 146: unsigned char buf[50];
 21700                           ;Bluetooth.c: 147: unsigned char ok = 1;
 21701                           
 21702                           ;incstack = 0
 21703  003A60  0E01               	movlw	1
 21704  003A62  0101               	movlb	1	; () banked
 21705  003A64  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 21706                           
 21707                           ; BSR set to: 1
 21708                           ;Bluetooth.c: 148: unsigned char RFchannel[10];
 21709                           ;Bluetooth.c: 150: cleanBuffer(buf,50);
 21710  003A66  0E0A               	movlw	low BluetoothInitialSetup@buf
 21711  003A68  0100               	movlb	0	; () banked
 21712  003A6A  6F75               	movwf	cleanBuffer@data& (0+255),b
 21713  003A6C  0E01               	movlw	high BluetoothInitialSetup@buf
 21714  003A6E  0100               	movlb	0	; () banked
 21715  003A70  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 21716  003A72  0E00               	movlw	0
 21717  003A74  0100               	movlb	0	; () banked
 21718  003A76  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
 21719  003A78  0E32               	movlw	50
 21720  003A7A  6F77               	movwf	cleanBuffer@count& (0+255),b
 21721  003A7C  EC83  F038         	call	_cleanBuffer	;wreg free
 21722                           
 21723                           ;Bluetooth.c: 151: cleanBuffer(RFchannel,10);
 21724  003A80  0E00               	movlw	low BluetoothInitialSetup@RFchannel
 21725  003A82  0100               	movlb	0	; () banked
 21726  003A84  6F75               	movwf	cleanBuffer@data& (0+255),b
 21727  003A86  0E01               	movlw	high BluetoothInitialSetup@RFchannel
 21728  003A88  0100               	movlb	0	; () banked
 21729  003A8A  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 21730  003A8C  0E00               	movlw	0
 21731  003A8E  0100               	movlb	0	; () banked
 21732  003A90  6F78               	movwf	(cleanBuffer@count+1)& (0+255),b
 21733  003A92  0E0A               	movlw	10
 21734  003A94  6F77               	movwf	cleanBuffer@count& (0+255),b
 21735  003A96  EC83  F038         	call	_cleanBuffer	;wreg free
 21736                           
 21737                           ;Bluetooth.c: 153: if(!EnterCommandMode())
 21738  003A9A  ECFD  F031         	call	_EnterCommandMode	;wreg free
 21739  003A9E  0900               	iorlw	0
 21740  003AA0  B4D8               	btfsc	status,2,c
 21741  003AA2  0012               	return	
 21742  003AA4  D001               	goto	l11024
 21743                           
 21744                           ;Bluetooth.c: 154: {
 21745                           ;Bluetooth.c: 155: return 0;
 21746                           ;	Return value of _BluetoothInitialSetup is never used
 21747  003AA6  0012               	return	
 21748  003AA8                     l11024:
 21749                           
 21750                           ;Bluetooth.c: 156: }
 21751                           ;Bluetooth.c: 157: sprintf(buf,(unsigned char *)"SN,Home Automation %ld\r",SN);
 21752  003AA8  0E0A               	movlw	low BluetoothInitialSetup@buf
 21753  003AAA  0100               	movlb	0	; () banked
 21754  003AAC  6F8B               	movwf	sprintf@sp& (0+255),b
 21755  003AAE  0E01               	movlw	high BluetoothInitialSetup@buf
 21756  003AB0  0100               	movlb	0	; () banked
 21757  003AB2  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
 21758  003AB4  0E1E               	movlw	low STR_6
 21759  003AB6  0100               	movlb	0	; () banked
 21760  003AB8  6F8D               	movwf	sprintf@f& (0+255),b
 21761  003ABA  0EFD               	movlw	high STR_6
 21762  003ABC  0100               	movlb	0	; () banked
 21763  003ABE  6F8E               	movwf	(sprintf@f+1)& (0+255),b
 21764  003AC0  C03B  F08F         	movff	_SN,?_sprintf+4
 21765  003AC4  C03C  F090         	movff	_SN+1,?_sprintf+5
 21766  003AC8  C03D  F091         	movff	_SN+2,?_sprintf+6
 21767  003ACC  C03E  F092         	movff	_SN+3,?_sprintf+7
 21768  003AD0  EC3D  F012         	call	_sprintf	;wreg free
 21769                           
 21770                           ;Bluetooth.c: 158: UARTstring(buf);
 21771  003AD4  0E0A               	movlw	low BluetoothInitialSetup@buf
 21772  003AD6  0100               	movlb	0	; () banked
 21773  003AD8  6F76               	movwf	UARTstring@data& (0+255),b
 21774  003ADA  0E01               	movlw	high BluetoothInitialSetup@buf
 21775  003ADC  0100               	movlb	0	; () banked
 21776  003ADE  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 21777  003AE0  ECB0  F038         	call	_UARTstring	;wreg free
 21778                           
 21779                           ;Bluetooth.c: 159: delayUS(50000);
 21780  003AE4  0E50               	movlw	80
 21781  003AE6  0100               	movlb	0	; () banked
 21782  003AE8  6F75               	movwf	delayUS@US& (0+255),b
 21783  003AEA  0EC3               	movlw	195
 21784  003AEC  6F76               	movwf	(delayUS@US+1)& (0+255),b
 21785  003AEE  0E00               	movlw	0
 21786  003AF0  6F77               	movwf	(delayUS@US+2)& (0+255),b
 21787  003AF2  0E00               	movlw	0
 21788  003AF4  6F78               	movwf	(delayUS@US+3)& (0+255),b
 21789  003AF6  EC34  F039         	call	_delayUS	;wreg free
 21790                           
 21791                           ;Bluetooth.c: 160: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 21792  003AFA  0E00               	movlw	low _CommandString
 21793  003AFC  0100               	movlb	0	; () banked
 21794  003AFE  6F75               	movwf	StringContains@This& (0+255),b
 21795  003B00  0E09               	movlw	high _CommandString
 21796  003B02  0100               	movlb	0	; () banked
 21797  003B04  6F76               	movwf	(StringContains@This+1)& (0+255),b
 21798  003B06  0EF4               	movlw	low STR_7
 21799  003B08  0100               	movlb	0	; () banked
 21800  003B0A  6F77               	movwf	StringContains@That& (0+255),b
 21801  003B0C  0EFF               	movlw	high STR_7
 21802  003B0E  0100               	movlb	0	; () banked
 21803  003B10  6F78               	movwf	(StringContains@That+1)& (0+255),b
 21804  003B12  EC7B  F033         	call	_StringContains	;wreg free
 21805  003B16  0900               	iorlw	0
 21806  003B18  A4D8               	btfss	status,2,c
 21807  003B1A  D004               	goto	l11034
 21808                           
 21809                           ;Bluetooth.c: 161: {
 21810                           ;Bluetooth.c: 162: ok = 0;
 21811  003B1C  0E00               	movlw	0
 21812  003B1E  0101               	movlb	1	; () banked
 21813  003B20  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 21814  003B22  D000               	goto	l11034
 21815  003B24                     l11034:
 21816                           
 21817                           ;Bluetooth.c: 163: }
 21818                           ;Bluetooth.c: 164: cleanBuffer(CommandString,CommandStringPos);
 21819  003B24  0E00               	movlw	low _CommandString
 21820  003B26  0100               	movlb	0	; () banked
 21821  003B28  6F75               	movwf	cleanBuffer@data& (0+255),b
 21822  003B2A  0E09               	movlw	high _CommandString
 21823  003B2C  0100               	movlb	0	; () banked
 21824  003B2E  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 21825  003B30  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 21826  003B34  0100               	movlb	0	; () banked
 21827  003B36  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 21828  003B38  EC83  F038         	call	_cleanBuffer	;wreg free
 21829                           
 21830                           ;Bluetooth.c: 165: CommandStringPos = 0;
 21831  003B3C  0E00               	movlw	0
 21832  003B3E  6E2D               	movwf	_CommandStringPos,c
 21833                           
 21834                           ;Bluetooth.c: 167: if(ok)
 21835  003B40  0101               	movlb	1	; () banked
 21836  003B42  513C               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 21837  003B44  0101               	movlb	1	; () banked
 21838  003B46  B4D8               	btfsc	status,2,c
 21839  003B48  D028               	goto	l1514
 21840                           
 21841                           ; BSR set to: 1
 21842                           ;Bluetooth.c: 168: {
 21843                           ;Bluetooth.c: 169: UARTstring((unsigned char *)"SU, 115K\r");
 21844  003B4A  0E8B               	movlw	low STR_8
 21845  003B4C  0100               	movlb	0	; () banked
 21846  003B4E  6F76               	movwf	UARTstring@data& (0+255),b
 21847  003B50  0EFF               	movlw	high STR_8
 21848  003B52  0100               	movlb	0	; () banked
 21849  003B54  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 21850  003B56  ECB0  F038         	call	_UARTstring	;wreg free
 21851                           
 21852                           ;Bluetooth.c: 170: delayUS(50000);
 21853  003B5A  0E50               	movlw	80
 21854  003B5C  0100               	movlb	0	; () banked
 21855  003B5E  6F75               	movwf	delayUS@US& (0+255),b
 21856  003B60  0EC3               	movlw	195
 21857  003B62  6F76               	movwf	(delayUS@US+1)& (0+255),b
 21858  003B64  0E00               	movlw	0
 21859  003B66  6F77               	movwf	(delayUS@US+2)& (0+255),b
 21860  003B68  0E00               	movlw	0
 21861  003B6A  6F78               	movwf	(delayUS@US+3)& (0+255),b
 21862  003B6C  EC34  F039         	call	_delayUS	;wreg free
 21863                           
 21864                           ;Bluetooth.c: 171: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 21865  003B70  0E00               	movlw	low _CommandString
 21866  003B72  0100               	movlb	0	; () banked
 21867  003B74  6F75               	movwf	StringContains@This& (0+255),b
 21868  003B76  0E09               	movlw	high _CommandString
 21869  003B78  0100               	movlb	0	; () banked
 21870  003B7A  6F76               	movwf	(StringContains@This+1)& (0+255),b
 21871  003B7C  0EF4               	movlw	low STR_7
 21872  003B7E  0100               	movlb	0	; () banked
 21873  003B80  6F77               	movwf	StringContains@That& (0+255),b
 21874  003B82  0EFF               	movlw	high STR_7
 21875  003B84  0100               	movlb	0	; () banked
 21876  003B86  6F78               	movwf	(StringContains@That+1)& (0+255),b
 21877  003B88  EC7B  F033         	call	_StringContains	;wreg free
 21878  003B8C  0900               	iorlw	0
 21879  003B8E  A4D8               	btfss	status,2,c
 21880  003B90  D004               	goto	l1514
 21881                           
 21882                           ;Bluetooth.c: 172: {
 21883                           ;Bluetooth.c: 173: ok = 0;
 21884  003B92  0E00               	movlw	0
 21885  003B94  0101               	movlb	1	; () banked
 21886  003B96  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 21887  003B98  D000               	goto	l1514
 21888  003B9A                     l1514:
 21889                           
 21890                           ;Bluetooth.c: 174: }
 21891                           ;Bluetooth.c: 175: }
 21892                           ;Bluetooth.c: 177: if(ok)
 21893  003B9A  0101               	movlb	1	; () banked
 21894  003B9C  513C               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 21895  003B9E  0101               	movlb	1	; () banked
 21896  003BA0  B4D8               	btfsc	status,2,c
 21897  003BA2  D028               	goto	l11056
 21898                           
 21899                           ; BSR set to: 1
 21900                           ;Bluetooth.c: 178: {
 21901                           ;Bluetooth.c: 179: UARTstring((unsigned char *)"SS, Home Automation\r");
 21902  003BA4  0EA8               	movlw	low STR_10
 21903  003BA6  0100               	movlb	0	; () banked
 21904  003BA8  6F76               	movwf	UARTstring@data& (0+255),b
 21905  003BAA  0EFD               	movlw	high STR_10
 21906  003BAC  0100               	movlb	0	; () banked
 21907  003BAE  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 21908  003BB0  ECB0  F038         	call	_UARTstring	;wreg free
 21909                           
 21910                           ;Bluetooth.c: 180: delayUS(50000);
 21911  003BB4  0E50               	movlw	80
 21912  003BB6  0100               	movlb	0	; () banked
 21913  003BB8  6F75               	movwf	delayUS@US& (0+255),b
 21914  003BBA  0EC3               	movlw	195
 21915  003BBC  6F76               	movwf	(delayUS@US+1)& (0+255),b
 21916  003BBE  0E00               	movlw	0
 21917  003BC0  6F77               	movwf	(delayUS@US+2)& (0+255),b
 21918  003BC2  0E00               	movlw	0
 21919  003BC4  6F78               	movwf	(delayUS@US+3)& (0+255),b
 21920  003BC6  EC34  F039         	call	_delayUS	;wreg free
 21921                           
 21922                           ;Bluetooth.c: 181: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 21923  003BCA  0E00               	movlw	low _CommandString
 21924  003BCC  0100               	movlb	0	; () banked
 21925  003BCE  6F75               	movwf	StringContains@This& (0+255),b
 21926  003BD0  0E09               	movlw	high _CommandString
 21927  003BD2  0100               	movlb	0	; () banked
 21928  003BD4  6F76               	movwf	(StringContains@This+1)& (0+255),b
 21929  003BD6  0EF4               	movlw	low STR_7
 21930  003BD8  0100               	movlb	0	; () banked
 21931  003BDA  6F77               	movwf	StringContains@That& (0+255),b
 21932  003BDC  0EFF               	movlw	high STR_7
 21933  003BDE  0100               	movlb	0	; () banked
 21934  003BE0  6F78               	movwf	(StringContains@That+1)& (0+255),b
 21935  003BE2  EC7B  F033         	call	_StringContains	;wreg free
 21936  003BE6  0900               	iorlw	0
 21937  003BE8  A4D8               	btfss	status,2,c
 21938  003BEA  D004               	goto	l11056
 21939                           
 21940                           ;Bluetooth.c: 182: {
 21941                           ;Bluetooth.c: 183: ok = 0;
 21942  003BEC  0E00               	movlw	0
 21943  003BEE  0101               	movlb	1	; () banked
 21944  003BF0  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 21945                           
 21946                           ; BSR set to: 1
 21947  003BF2  D000               	goto	l11056
 21948  003BF4                     l11056:
 21949                           
 21950                           ;Bluetooth.c: 184: }
 21951                           ;Bluetooth.c: 185: }
 21952                           ;Bluetooth.c: 186: cleanBuffer(CommandString,CommandStringPos);
 21953  003BF4  0E00               	movlw	low _CommandString
 21954  003BF6  0100               	movlb	0	; () banked
 21955  003BF8  6F75               	movwf	cleanBuffer@data& (0+255),b
 21956  003BFA  0E09               	movlw	high _CommandString
 21957  003BFC  0100               	movlb	0	; () banked
 21958  003BFE  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 21959  003C00  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 21960  003C04  0100               	movlb	0	; () banked
 21961  003C06  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 21962  003C08  EC83  F038         	call	_cleanBuffer	;wreg free
 21963                           
 21964                           ;Bluetooth.c: 187: CommandStringPos = 0;
 21965  003C0C  0E00               	movlw	0
 21966  003C0E  6E2D               	movwf	_CommandStringPos,c
 21967                           
 21968                           ;Bluetooth.c: 189: if(ok)
 21969  003C10  0101               	movlb	1	; () banked
 21970  003C12  513C               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 21971  003C14  0101               	movlb	1	; () banked
 21972  003C16  B4D8               	btfsc	status,2,c
 21973  003C18  D028               	goto	l11070
 21974                           
 21975                           ; BSR set to: 1
 21976                           ;Bluetooth.c: 190: {
 21977                           ;Bluetooth.c: 191: UARTstring((unsigned char *)"SY,0010\r");
 21978  003C1A  0E9F               	movlw	low STR_12
 21979  003C1C  0100               	movlb	0	; () banked
 21980  003C1E  6F76               	movwf	UARTstring@data& (0+255),b
 21981  003C20  0EFF               	movlw	high STR_12
 21982  003C22  0100               	movlb	0	; () banked
 21983  003C24  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 21984  003C26  ECB0  F038         	call	_UARTstring	;wreg free
 21985                           
 21986                           ;Bluetooth.c: 192: delayUS(50000);
 21987  003C2A  0E50               	movlw	80
 21988  003C2C  0100               	movlb	0	; () banked
 21989  003C2E  6F75               	movwf	delayUS@US& (0+255),b
 21990  003C30  0EC3               	movlw	195
 21991  003C32  6F76               	movwf	(delayUS@US+1)& (0+255),b
 21992  003C34  0E00               	movlw	0
 21993  003C36  6F77               	movwf	(delayUS@US+2)& (0+255),b
 21994  003C38  0E00               	movlw	0
 21995  003C3A  6F78               	movwf	(delayUS@US+3)& (0+255),b
 21996  003C3C  EC34  F039         	call	_delayUS	;wreg free
 21997                           
 21998                           ;Bluetooth.c: 193: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 21999  003C40  0E00               	movlw	low _CommandString
 22000  003C42  0100               	movlb	0	; () banked
 22001  003C44  6F75               	movwf	StringContains@This& (0+255),b
 22002  003C46  0E09               	movlw	high _CommandString
 22003  003C48  0100               	movlb	0	; () banked
 22004  003C4A  6F76               	movwf	(StringContains@This+1)& (0+255),b
 22005  003C4C  0EF4               	movlw	low STR_7
 22006  003C4E  0100               	movlb	0	; () banked
 22007  003C50  6F77               	movwf	StringContains@That& (0+255),b
 22008  003C52  0EFF               	movlw	high STR_7
 22009  003C54  0100               	movlb	0	; () banked
 22010  003C56  6F78               	movwf	(StringContains@That+1)& (0+255),b
 22011  003C58  EC7B  F033         	call	_StringContains	;wreg free
 22012  003C5C  0900               	iorlw	0
 22013  003C5E  A4D8               	btfss	status,2,c
 22014  003C60  D004               	goto	l11070
 22015                           
 22016                           ;Bluetooth.c: 194: {
 22017                           ;Bluetooth.c: 195: ok = 0;
 22018  003C62  0E00               	movlw	0
 22019  003C64  0101               	movlb	1	; () banked
 22020  003C66  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 22021                           
 22022                           ; BSR set to: 1
 22023  003C68  D000               	goto	l11070
 22024  003C6A                     l11070:
 22025                           
 22026                           ;Bluetooth.c: 196: }
 22027                           ;Bluetooth.c: 197: }
 22028                           ;Bluetooth.c: 198: cleanBuffer(CommandString,CommandStringPos);
 22029  003C6A  0E00               	movlw	low _CommandString
 22030  003C6C  0100               	movlb	0	; () banked
 22031  003C6E  6F75               	movwf	cleanBuffer@data& (0+255),b
 22032  003C70  0E09               	movlw	high _CommandString
 22033  003C72  0100               	movlb	0	; () banked
 22034  003C74  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 22035  003C76  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 22036  003C7A  0100               	movlb	0	; () banked
 22037  003C7C  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 22038  003C7E  EC83  F038         	call	_cleanBuffer	;wreg free
 22039                           
 22040                           ;Bluetooth.c: 199: CommandStringPos = 0;
 22041  003C82  0E00               	movlw	0
 22042  003C84  6E2D               	movwf	_CommandStringPos,c
 22043                           
 22044                           ;Bluetooth.c: 201: if(ok)
 22045  003C86  0101               	movlb	1	; () banked
 22046  003C88  513C               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 22047  003C8A  0101               	movlb	1	; () banked
 22048  003C8C  B4D8               	btfsc	status,2,c
 22049  003C8E  D028               	goto	l11084
 22050                           
 22051                           ; BSR set to: 1
 22052                           ;Bluetooth.c: 202: {
 22053                           ;Bluetooth.c: 203: UARTstring((unsigned char *)"S~,0\r");
 22054  003C90  0EBF               	movlw	low STR_14
 22055  003C92  0100               	movlb	0	; () banked
 22056  003C94  6F76               	movwf	UARTstring@data& (0+255),b
 22057  003C96  0EFF               	movlw	high STR_14
 22058  003C98  0100               	movlb	0	; () banked
 22059  003C9A  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 22060  003C9C  ECB0  F038         	call	_UARTstring	;wreg free
 22061                           
 22062                           ;Bluetooth.c: 204: delayUS(50000);
 22063  003CA0  0E50               	movlw	80
 22064  003CA2  0100               	movlb	0	; () banked
 22065  003CA4  6F75               	movwf	delayUS@US& (0+255),b
 22066  003CA6  0EC3               	movlw	195
 22067  003CA8  6F76               	movwf	(delayUS@US+1)& (0+255),b
 22068  003CAA  0E00               	movlw	0
 22069  003CAC  6F77               	movwf	(delayUS@US+2)& (0+255),b
 22070  003CAE  0E00               	movlw	0
 22071  003CB0  6F78               	movwf	(delayUS@US+3)& (0+255),b
 22072  003CB2  EC34  F039         	call	_delayUS	;wreg free
 22073                           
 22074                           ;Bluetooth.c: 205: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 22075  003CB6  0E00               	movlw	low _CommandString
 22076  003CB8  0100               	movlb	0	; () banked
 22077  003CBA  6F75               	movwf	StringContains@This& (0+255),b
 22078  003CBC  0E09               	movlw	high _CommandString
 22079  003CBE  0100               	movlb	0	; () banked
 22080  003CC0  6F76               	movwf	(StringContains@This+1)& (0+255),b
 22081  003CC2  0EF4               	movlw	low STR_7
 22082  003CC4  0100               	movlb	0	; () banked
 22083  003CC6  6F77               	movwf	StringContains@That& (0+255),b
 22084  003CC8  0EFF               	movlw	high STR_7
 22085  003CCA  0100               	movlb	0	; () banked
 22086  003CCC  6F78               	movwf	(StringContains@That+1)& (0+255),b
 22087  003CCE  EC7B  F033         	call	_StringContains	;wreg free
 22088  003CD2  0900               	iorlw	0
 22089  003CD4  A4D8               	btfss	status,2,c
 22090  003CD6  D004               	goto	l11084
 22091                           
 22092                           ;Bluetooth.c: 206: {
 22093                           ;Bluetooth.c: 207: ok = 0;
 22094  003CD8  0E00               	movlw	0
 22095  003CDA  0101               	movlb	1	; () banked
 22096  003CDC  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 22097                           
 22098                           ; BSR set to: 1
 22099  003CDE  D000               	goto	l11084
 22100  003CE0                     l11084:
 22101                           
 22102                           ;Bluetooth.c: 208: }
 22103                           ;Bluetooth.c: 209: }
 22104                           ;Bluetooth.c: 210: cleanBuffer(CommandString,CommandStringPos);
 22105  003CE0  0E00               	movlw	low _CommandString
 22106  003CE2  0100               	movlb	0	; () banked
 22107  003CE4  6F75               	movwf	cleanBuffer@data& (0+255),b
 22108  003CE6  0E09               	movlw	high _CommandString
 22109  003CE8  0100               	movlb	0	; () banked
 22110  003CEA  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 22111  003CEC  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 22112  003CF0  0100               	movlb	0	; () banked
 22113  003CF2  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 22114  003CF4  EC83  F038         	call	_cleanBuffer	;wreg free
 22115                           
 22116                           ;Bluetooth.c: 211: CommandStringPos = 0;
 22117  003CF8  0E00               	movlw	0
 22118  003CFA  6E2D               	movwf	_CommandStringPos,c
 22119                           
 22120                           ;Bluetooth.c: 213: if(ok)
 22121  003CFC  0101               	movlb	1	; () banked
 22122  003CFE  513C               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 22123  003D00  0101               	movlb	1	; () banked
 22124  003D02  B4D8               	btfsc	status,2,c
 22125  003D04  D028               	goto	l11098
 22126                           
 22127                           ; BSR set to: 1
 22128                           ;Bluetooth.c: 214: {
 22129                           ;Bluetooth.c: 215: UARTstring((unsigned char *)"S~,0\r");
 22130  003D06  0EBF               	movlw	low STR_14
 22131  003D08  0100               	movlb	0	; () banked
 22132  003D0A  6F76               	movwf	UARTstring@data& (0+255),b
 22133  003D0C  0EFF               	movlw	high STR_14
 22134  003D0E  0100               	movlb	0	; () banked
 22135  003D10  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 22136  003D12  ECB0  F038         	call	_UARTstring	;wreg free
 22137                           
 22138                           ;Bluetooth.c: 216: delayUS(50000);
 22139  003D16  0E50               	movlw	80
 22140  003D18  0100               	movlb	0	; () banked
 22141  003D1A  6F75               	movwf	delayUS@US& (0+255),b
 22142  003D1C  0EC3               	movlw	195
 22143  003D1E  6F76               	movwf	(delayUS@US+1)& (0+255),b
 22144  003D20  0E00               	movlw	0
 22145  003D22  6F77               	movwf	(delayUS@US+2)& (0+255),b
 22146  003D24  0E00               	movlw	0
 22147  003D26  6F78               	movwf	(delayUS@US+3)& (0+255),b
 22148  003D28  EC34  F039         	call	_delayUS	;wreg free
 22149                           
 22150                           ;Bluetooth.c: 217: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 22151  003D2C  0E00               	movlw	low _CommandString
 22152  003D2E  0100               	movlb	0	; () banked
 22153  003D30  6F75               	movwf	StringContains@This& (0+255),b
 22154  003D32  0E09               	movlw	high _CommandString
 22155  003D34  0100               	movlb	0	; () banked
 22156  003D36  6F76               	movwf	(StringContains@This+1)& (0+255),b
 22157  003D38  0EF4               	movlw	low STR_7
 22158  003D3A  0100               	movlb	0	; () banked
 22159  003D3C  6F77               	movwf	StringContains@That& (0+255),b
 22160  003D3E  0EFF               	movlw	high STR_7
 22161  003D40  0100               	movlb	0	; () banked
 22162  003D42  6F78               	movwf	(StringContains@That+1)& (0+255),b
 22163  003D44  EC7B  F033         	call	_StringContains	;wreg free
 22164  003D48  0900               	iorlw	0
 22165  003D4A  A4D8               	btfss	status,2,c
 22166  003D4C  D004               	goto	l11098
 22167                           
 22168                           ;Bluetooth.c: 218: {
 22169                           ;Bluetooth.c: 219: ok = 0;
 22170  003D4E  0E00               	movlw	0
 22171  003D50  0101               	movlb	1	; () banked
 22172  003D52  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 22173                           
 22174                           ; BSR set to: 1
 22175  003D54  D000               	goto	l11098
 22176  003D56                     l11098:
 22177                           
 22178                           ;Bluetooth.c: 220: }
 22179                           ;Bluetooth.c: 221: }
 22180                           ;Bluetooth.c: 222: cleanBuffer(CommandString,CommandStringPos);
 22181  003D56  0E00               	movlw	low _CommandString
 22182  003D58  0100               	movlb	0	; () banked
 22183  003D5A  6F75               	movwf	cleanBuffer@data& (0+255),b
 22184  003D5C  0E09               	movlw	high _CommandString
 22185  003D5E  0100               	movlb	0	; () banked
 22186  003D60  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 22187  003D62  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 22188  003D66  0100               	movlb	0	; () banked
 22189  003D68  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 22190  003D6A  EC83  F038         	call	_cleanBuffer	;wreg free
 22191                           
 22192                           ;Bluetooth.c: 223: CommandStringPos = 0;
 22193  003D6E  0E00               	movlw	0
 22194  003D70  6E2D               	movwf	_CommandStringPos,c
 22195                           
 22196                           ;Bluetooth.c: 225: if(ok)
 22197  003D72  0101               	movlb	1	; () banked
 22198  003D74  513C               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 22199  003D76  0101               	movlb	1	; () banked
 22200  003D78  B4D8               	btfsc	status,2,c
 22201  003D7A  D03E               	goto	l11114
 22202                           
 22203                           ; BSR set to: 1
 22204                           ;Bluetooth.c: 226: {
 22205                           ;Bluetooth.c: 227: UARTstring((unsigned char *)"D,0\r");
 22206  003D7C  0ED6               	movlw	low STR_18
 22207  003D7E  0100               	movlb	0	; () banked
 22208  003D80  6F76               	movwf	UARTstring@data& (0+255),b
 22209  003D82  0EFF               	movlw	high STR_18
 22210  003D84  0100               	movlb	0	; () banked
 22211  003D86  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 22212  003D88  ECB0  F038         	call	_UARTstring	;wreg free
 22213                           
 22214                           ;Bluetooth.c: 228: delayUS(50000);
 22215  003D8C  0E50               	movlw	80
 22216  003D8E  0100               	movlb	0	; () banked
 22217  003D90  6F75               	movwf	delayUS@US& (0+255),b
 22218  003D92  0EC3               	movlw	195
 22219  003D94  6F76               	movwf	(delayUS@US+1)& (0+255),b
 22220  003D96  0E00               	movlw	0
 22221  003D98  6F77               	movwf	(delayUS@US+2)& (0+255),b
 22222  003D9A  0E00               	movlw	0
 22223  003D9C  6F78               	movwf	(delayUS@US+3)& (0+255),b
 22224  003D9E  EC34  F039         	call	_delayUS	;wreg free
 22225                           
 22226                           ;Bluetooth.c: 229: sprintf(buf,(unsigned char *)"BTName=Home Automation %ld\r",SN);
 22227  003DA2  0E0A               	movlw	low BluetoothInitialSetup@buf
 22228  003DA4  0100               	movlb	0	; () banked
 22229  003DA6  6F8B               	movwf	sprintf@sp& (0+255),b
 22230  003DA8  0E01               	movlw	high BluetoothInitialSetup@buf
 22231  003DAA  0100               	movlb	0	; () banked
 22232  003DAC  6F8C               	movwf	(sprintf@sp+1)& (0+255),b
 22233  003DAE  0EB2               	movlw	low STR_19
 22234  003DB0  0100               	movlb	0	; () banked
 22235  003DB2  6F8D               	movwf	sprintf@f& (0+255),b
 22236  003DB4  0EFC               	movlw	high STR_19
 22237  003DB6  0100               	movlb	0	; () banked
 22238  003DB8  6F8E               	movwf	(sprintf@f+1)& (0+255),b
 22239  003DBA  C03B  F08F         	movff	_SN,?_sprintf+4
 22240  003DBE  C03C  F090         	movff	_SN+1,?_sprintf+5
 22241  003DC2  C03D  F091         	movff	_SN+2,?_sprintf+6
 22242  003DC6  C03E  F092         	movff	_SN+3,?_sprintf+7
 22243  003DCA  EC3D  F012         	call	_sprintf	;wreg free
 22244                           
 22245                           ;Bluetooth.c: 230: if(!StringContains(CommandString, buf))
 22246  003DCE  0E00               	movlw	low _CommandString
 22247  003DD0  0100               	movlb	0	; () banked
 22248  003DD2  6F75               	movwf	StringContains@This& (0+255),b
 22249  003DD4  0E09               	movlw	high _CommandString
 22250  003DD6  0100               	movlb	0	; () banked
 22251  003DD8  6F76               	movwf	(StringContains@This+1)& (0+255),b
 22252  003DDA  0E0A               	movlw	low BluetoothInitialSetup@buf
 22253  003DDC  0100               	movlb	0	; () banked
 22254  003DDE  6F77               	movwf	StringContains@That& (0+255),b
 22255  003DE0  0E01               	movlw	high BluetoothInitialSetup@buf
 22256  003DE2  0100               	movlb	0	; () banked
 22257  003DE4  6F78               	movwf	(StringContains@That+1)& (0+255),b
 22258  003DE6  EC7B  F033         	call	_StringContains	;wreg free
 22259  003DEA  0900               	iorlw	0
 22260  003DEC  A4D8               	btfss	status,2,c
 22261  003DEE  D004               	goto	l11114
 22262                           
 22263                           ;Bluetooth.c: 231: {
 22264                           ;Bluetooth.c: 232: ok = 0;
 22265  003DF0  0E00               	movlw	0
 22266  003DF2  0101               	movlb	1	; () banked
 22267  003DF4  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 22268                           
 22269                           ; BSR set to: 1
 22270  003DF6  D000               	goto	l11114
 22271  003DF8                     l11114:
 22272                           
 22273                           ;Bluetooth.c: 233: }
 22274                           ;Bluetooth.c: 234: }
 22275                           ;Bluetooth.c: 235: cleanBuffer(CommandString,CommandStringPos);
 22276  003DF8  0E00               	movlw	low _CommandString
 22277  003DFA  0100               	movlb	0	; () banked
 22278  003DFC  6F75               	movwf	cleanBuffer@data& (0+255),b
 22279  003DFE  0E09               	movlw	high _CommandString
 22280  003E00  0100               	movlb	0	; () banked
 22281  003E02  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 22282  003E04  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 22283  003E08  0100               	movlb	0	; () banked
 22284  003E0A  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 22285  003E0C  EC83  F038         	call	_cleanBuffer	;wreg free
 22286                           
 22287                           ;Bluetooth.c: 236: CommandStringPos = 0;
 22288  003E10  0E00               	movlw	0
 22289  003E12  6E2D               	movwf	_CommandStringPos,c
 22290                           
 22291                           ;Bluetooth.c: 238: UARTstring((unsigned char *)"---\r");
 22292  003E14  0ED1               	movlw	low STR_20
 22293  003E16  0100               	movlb	0	; () banked
 22294  003E18  6F76               	movwf	UARTstring@data& (0+255),b
 22295  003E1A  0EFF               	movlw	high STR_20
 22296  003E1C  0100               	movlb	0	; () banked
 22297  003E1E  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 22298  003E20  ECB0  F038         	call	_UARTstring	;wreg free
 22299                           
 22300                           ;Bluetooth.c: 239: delayUS(50000);
 22301  003E24  0E50               	movlw	80
 22302  003E26  0100               	movlb	0	; () banked
 22303  003E28  6F75               	movwf	delayUS@US& (0+255),b
 22304  003E2A  0EC3               	movlw	195
 22305  003E2C  6F76               	movwf	(delayUS@US+1)& (0+255),b
 22306  003E2E  0E00               	movlw	0
 22307  003E30  6F77               	movwf	(delayUS@US+2)& (0+255),b
 22308  003E32  0E00               	movlw	0
 22309  003E34  6F78               	movwf	(delayUS@US+3)& (0+255),b
 22310  003E36  EC34  F039         	call	_delayUS	;wreg free
 22311                           
 22312                           ;Bluetooth.c: 240: if(!StringContains(CommandString,(unsigned char *)"END"))
 22313  003E3A  0E00               	movlw	low _CommandString
 22314  003E3C  0100               	movlb	0	; () banked
 22315  003E3E  6F75               	movwf	StringContains@This& (0+255),b
 22316  003E40  0E09               	movlw	high _CommandString
 22317  003E42  0100               	movlb	0	; () banked
 22318  003E44  6F76               	movwf	(StringContains@This+1)& (0+255),b
 22319  003E46  0EF0               	movlw	low STR_21
 22320  003E48  0100               	movlb	0	; () banked
 22321  003E4A  6F77               	movwf	StringContains@That& (0+255),b
 22322  003E4C  0EFF               	movlw	high STR_21
 22323  003E4E  0100               	movlb	0	; () banked
 22324  003E50  6F78               	movwf	(StringContains@That+1)& (0+255),b
 22325  003E52  EC7B  F033         	call	_StringContains	;wreg free
 22326  003E56  0900               	iorlw	0
 22327  003E58  A4D8               	btfss	status,2,c
 22328  003E5A  D004               	goto	l11126
 22329                           
 22330                           ;Bluetooth.c: 241: {
 22331                           ;Bluetooth.c: 242: ok = 0;
 22332  003E5C  0E00               	movlw	0
 22333  003E5E  0101               	movlb	1	; () banked
 22334  003E60  6F3C               	movwf	BluetoothInitialSetup@ok& (0+255),b
 22335  003E62  D000               	goto	l11126
 22336  003E64                     l11126:
 22337                           
 22338                           ;Bluetooth.c: 243: }
 22339                           ;Bluetooth.c: 244: cleanBuffer(CommandString,CommandStringPos);
 22340  003E64  0E00               	movlw	low _CommandString
 22341  003E66  0100               	movlb	0	; () banked
 22342  003E68  6F75               	movwf	cleanBuffer@data& (0+255),b
 22343  003E6A  0E09               	movlw	high _CommandString
 22344  003E6C  0100               	movlb	0	; () banked
 22345  003E6E  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 22346  003E70  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 22347  003E74  0100               	movlb	0	; () banked
 22348  003E76  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 22349  003E78  EC83  F038         	call	_cleanBuffer	;wreg free
 22350                           
 22351                           ;Bluetooth.c: 245: CommandStringPos = 0;
 22352  003E7C  0E00               	movlw	0
 22353  003E7E  6E2D               	movwf	_CommandStringPos,c
 22354                           
 22355                           ;Bluetooth.c: 248: {
 22356                           ;Bluetooth.c: 249: return 1;
 22357                           ;	Return value of _BluetoothInitialSetup is never used
 22358  003E80  0012               	return	
 22359                           
 22360                           ;Bluetooth.c: 250: }
 22361                           ;Bluetooth.c: 251: return 0;
 22362                           ;	Return value of _BluetoothInitialSetup is never used
 22363  003E82  0012               	return		;funcret
 22364  003E84                     __end_of_BluetoothInitialSetup:
 22365                           	opt stack 0
 22366                           tblptru	equ	0xFF8
 22367                           tblptrh	equ	0xFF7
 22368                           tblptrl	equ	0xFF6
 22369                           tablat	equ	0xFF5
 22370                           prodh	equ	0xFF4
 22371                           prodl	equ	0xFF3
 22372                           intcon	equ	0xFF2
 22373                           intcon2	equ	0xFF1
 22374                           indf0	equ	0xFEF
 22375                           postinc0	equ	0xFEE
 22376                           plusw0	equ	0xFEB
 22377                           fsr0h	equ	0xFEA
 22378                           fsr0l	equ	0xFE9
 22379                           wreg	equ	0xFE8
 22380                           indf1	equ	0xFE7
 22381                           postdec1	equ	0xFE5
 22382                           fsr1h	equ	0xFE2
 22383                           fsr1l	equ	0xFE1
 22384                           indf2	equ	0xFDF
 22385                           postinc2	equ	0xFDE
 22386                           postdec2	equ	0xFDD
 22387                           plusw2	equ	0xFDB
 22388                           fsr2h	equ	0xFDA
 22389                           fsr2l	equ	0xFD9
 22390                           status	equ	0xFD8
 22391                           
 22392 ;; *************** function _sprintf *****************
 22393 ;; Defined at:
 22394 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 22395 ;; Parameters:    Size  Location     Type
 22396 ;;  sp              2   43[BANK0 ] PTR unsigned char 
 22397 ;;		 -> UseBluetooth@buf(50), BluetoothInitialSetup@buf(50), 
 22398 ;;  f               2   45[BANK0 ] PTR const unsigned char 
 22399 ;;		 -> STR_81(19), STR_78(15), STR_69(54), STR_68(63), 
 22400 ;;		 -> STR_50(44), STR_49(46), STR_47(44), STR_46(21), 
 22401 ;;		 -> STR_33(15), STR_32(15), STR_31(20), STR_29(23), 
 22402 ;;		 -> STR_28(19), STR_27(19), STR_19(28), STR_6(24), 
 22403 ;; Auto vars:     Size  Location     Type
 22404 ;;  idx             1   61[BANK0 ] unsigned char 
 22405 ;;  val             4   74[BANK0 ] unsigned long 
 22406 ;;  tmpval          4    0        struct .
 22407 ;;  flag            2   83[BANK0 ] unsigned short 
 22408 ;;  width           2   80[BANK0 ] int 
 22409 ;;  prec            2   78[BANK0 ] int 
 22410 ;;  ap              2   72[BANK0 ] PTR void [1]
 22411 ;;		 -> ?_sprintf(2), 
 22412 ;;  len             2   70[BANK0 ] unsigned int 
 22413 ;;  cp              2   62[BANK0 ] PTR const unsigned char 
 22414 ;;		 -> sprintf@c(1), 
 22415 ;;  c               1   82[BANK0 ] char 
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  2   43[BANK0 ] int 
 22418 ;; Registers used:
 22419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/0
 22422 ;;		On exit  : 0/0
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22425 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22426 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22428 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22429 ;;Total ram usage:       42 bytes
 22430 ;; Hardware stack levels used:    1
 22431 ;; Hardware stack levels required when called:    7
 22432 ;; This function calls:
 22433 ;;		___lldiv
 22434 ;;		___llmod
 22435 ;;		___wmul
 22436 ;;		_isdigit
 22437 ;; This function is called by:
 22438 ;;		_BluetoothInitialSetup
 22439 ;;		_UseBluetooth
 22440 ;; This function uses a non-reentrant model
 22441 ;;
 22442                           
 22443                           	psect	text63
 22444  00247A                     __ptext63:
 22445                           	opt stack 0
 22446  00247A                     _sprintf:
 22447                           	opt stack 22
 22448                           
 22449                           ;doprnt.c: 494: va_list ap;
 22450                           ;doprnt.c: 499: signed char c;
 22451                           ;doprnt.c: 501: int width;
 22452                           ;doprnt.c: 504: int prec;
 22453                           ;doprnt.c: 508: unsigned short flag;
 22454                           ;doprnt.c: 523: union {
 22455                           ;doprnt.c: 524: unsigned long vd;
 22456                           ;doprnt.c: 525: double integ;
 22457                           ;doprnt.c: 526: } tmpval;
 22458                           ;doprnt.c: 528: unsigned long val;
 22459                           ;doprnt.c: 529: unsigned len;
 22460                           ;doprnt.c: 530: const char * cp;
 22461                           ;doprnt.c: 533: *ap = __va_start();
 22462                           
 22463                           ;incstack = 0
 22464  00247A  0E8F               	movlw	low (?_sprintf+4)
 22465  00247C  0100               	movlb	0	; () banked
 22466  00247E  6FA8               	movwf	sprintf@ap& (0+255),b
 22467  002480  0E00               	movlw	high (?_sprintf+4)
 22468  002482  0100               	movlb	0	; () banked
 22469  002484  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
 22470                           
 22471                           ;doprnt.c: 536: while(c = *f++) {
 22472  002486  EF49  F018         	goto	l10968
 22473  00248A                     l10616:
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;doprnt.c: 538: if(c != '%')
 22477  00248A  0E25               	movlw	37
 22478  00248C  0100               	movlb	0	; () banked
 22479  00248E  19B2               	xorwf	sprintf@c& (0+255),w,b
 22480  002490  B4D8               	btfsc	status,2,c
 22481  002492  D00B               	goto	l10622
 22482                           
 22483                           ; BSR set to: 0
 22484                           ;doprnt.c: 540: {
 22485                           ;doprnt.c: 541: ((*sp++ = (c)));
 22486  002494  C08B  FFD9         	movff	sprintf@sp,fsr2l
 22487  002498  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 22488  00249C  C0B2  FFDF         	movff	sprintf@c,indf2
 22489                           
 22490                           ; BSR set to: 0
 22491  0024A0  0100               	movlb	0	; () banked
 22492  0024A2  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 22493  0024A4  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 22494                           
 22495                           ;doprnt.c: 542: continue;
 22496  0024A6  EF49  F018         	goto	l10968
 22497  0024AA                     l10622:
 22498                           
 22499                           ; BSR set to: 0
 22500                           ;doprnt.c: 543: }
 22501                           ;doprnt.c: 546: width = 0;
 22502  0024AA  0E00               	movlw	0
 22503  0024AC  0100               	movlb	0	; () banked
 22504  0024AE  6FB1               	movwf	(sprintf@width+1)& (0+255),b
 22505  0024B0  0E00               	movlw	0
 22506  0024B2  6FB0               	movwf	sprintf@width& (0+255),b
 22507                           
 22508                           ;doprnt.c: 548: flag = 0;
 22509  0024B4  0E00               	movlw	0
 22510  0024B6  0100               	movlb	0	; () banked
 22511  0024B8  6FB4               	movwf	(sprintf@flag+1)& (0+255),b
 22512  0024BA  0E00               	movlw	0
 22513  0024BC  6FB3               	movwf	sprintf@flag& (0+255),b
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;doprnt.c: 551: switch(*f) {
 22517                           
 22518                           ;doprnt.c: 550: for(;;) {
 22519  0024BE  D010               	goto	l10634
 22520  0024C0                     l10624:
 22521                           
 22522                           ;doprnt.c: 554: flag |= 0x08;
 22523  0024C0  0100               	movlb	0	; () banked
 22524  0024C2  87B3               	bsf	sprintf@flag& (0+255),3,b
 22525  0024C4  D008               	goto	L15
 22526  0024C6                     l10626:
 22527                           
 22528                           ;doprnt.c: 561: flag |= 0x01;
 22529  0024C6  0100               	movlb	0	; () banked
 22530  0024C8  81B3               	bsf	sprintf@flag& (0+255),0,b
 22531  0024CA  D005               	goto	L15
 22532  0024CC                     l10628:
 22533                           
 22534                           ;doprnt.c: 574: flag |= 0x800;
 22535  0024CC  0100               	movlb	0	; () banked
 22536  0024CE  87B4               	bsf	(sprintf@flag+1)& (0+255),3,b
 22537  0024D0  D002               	goto	L15
 22538  0024D2                     l10630:
 22539                           
 22540                           ;doprnt.c: 580: flag |= 0x04;
 22541  0024D2  0100               	movlb	0	; () banked
 22542  0024D4  85B3               	bsf	sprintf@flag& (0+255),2,b
 22543  0024D6                     L15:
 22544                           
 22545                           ;doprnt.c: 581: f++;
 22546  0024D6  0100               	movlb	0	; () banked
 22547  0024D8  4B8D               	infsnz	sprintf@f& (0+255),f,b
 22548  0024DA  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 22549                           
 22550                           ;doprnt.c: 582: continue;
 22551  0024DC  D001               	goto	l10634
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;doprnt.c: 584: }
 22555  0024DE  D014               	goto	l1822
 22556  0024E0                     l10634:
 22557  0024E0  C08D  FFF6         	movff	sprintf@f,tblptrl
 22558  0024E4  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22559  0024E8                     	if	0	;tblptru may be non-zero
 22560  0024E8                     	endif
 22561  0024E8                     	if	0	;tblptru may be non-zero
 22562  0024E8                     	endif
 22563  0024E8  0008               	tblrd		*
 22564  0024EA  50F5               	movf	tablat,w,c
 22565                           
 22566                           ; Switch size 1, requested type "space"
 22567                           ; Number of cases is 4, Range of values is 32 to 48
 22568                           ; switch strategies available:
 22569                           ; Name         Instructions Cycles
 22570                           ; simple_byte           13     7 (average)
 22571                           ;	Chosen strategy is simple_byte
 22572  0024EC  0A20               	xorlw	32	; case 32
 22573  0024EE  B4D8               	btfsc	status,2,c
 22574  0024F0  D7EA               	goto	l10626
 22575  0024F2  0A03               	xorlw	3	; case 35
 22576  0024F4  B4D8               	btfsc	status,2,c
 22577  0024F6  D7EA               	goto	l10628
 22578  0024F8  0A0E               	xorlw	14	; case 45
 22579  0024FA  B4D8               	btfsc	status,2,c
 22580  0024FC  D7E1               	goto	l10624
 22581  0024FE  0A1D               	xorlw	29	; case 48
 22582  002500  B4D8               	btfsc	status,2,c
 22583  002502  D7E7               	goto	l10630
 22584                           
 22585                           ;doprnt.c: 585: break;
 22586  002504  D001               	goto	l1822
 22587                           
 22588                           ;doprnt.c: 586: }
 22589  002506  D7EC               	goto	l10634
 22590  002508                     l1822:
 22591                           
 22592                           ;doprnt.c: 593: if(flag & 0x08)
 22593  002508  0100               	movlb	0	; () banked
 22594  00250A  A7B3               	btfss	sprintf@flag& (0+255),3,b
 22595  00250C  D003               	goto	l10638
 22596                           
 22597                           ; BSR set to: 0
 22598                           ;doprnt.c: 594: flag &= ~0x04;
 22599  00250E  0100               	movlb	0	; () banked
 22600  002510  95B3               	bcf	sprintf@flag& (0+255),2,b
 22601  002512  D000               	goto	l10638
 22602  002514                     l10638:
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 22606  002514  C08D  FFF6         	movff	sprintf@f,tblptrl
 22607  002518  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22608  00251C                     	if	0	;tblptru may be non-zero
 22609  00251C                     	endif
 22610  00251C                     	if	0	;tblptru may be non-zero
 22611  00251C                     	endif
 22612  00251C  0008               	tblrd		*
 22613  00251E  50F5               	movf	tablat,w,c
 22614  002520  ECF9  F03A         	call	_isdigit
 22615  002524  A0D8               	btfss	status,0,c
 22616  002526  D043               	goto	l10650
 22617                           
 22618                           ;doprnt.c: 598: width = 0;
 22619  002528  0E00               	movlw	0
 22620  00252A  0100               	movlb	0	; () banked
 22621  00252C  6FB1               	movwf	(sprintf@width+1)& (0+255),b
 22622  00252E  0E00               	movlw	0
 22623  002530  6FB0               	movwf	sprintf@width& (0+255),b
 22624  002532  D000               	goto	l10642
 22625  002534                     l10642:
 22626                           
 22627                           ;doprnt.c: 600: width *= 10;
 22628  002534  C0B0  F075         	movff	sprintf@width,___wmul@multiplier
 22629  002538  C0B1  F076         	movff	sprintf@width+1,___wmul@multiplier+1
 22630  00253C  0E00               	movlw	0
 22631  00253E  0100               	movlb	0	; () banked
 22632  002540  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22633  002542  0E0A               	movlw	10
 22634  002544  6F77               	movwf	___wmul@multiplicand& (0+255),b
 22635  002546  ECAB  F03A         	call	___wmul	;wreg free
 22636  00254A  C075  F0B0         	movff	?___wmul,sprintf@width
 22637  00254E  C076  F0B1         	movff	?___wmul+1,sprintf@width+1
 22638                           
 22639                           ;doprnt.c: 601: width += *f++ - '0';
 22640  002552  0ED0               	movlw	208
 22641  002554  0100               	movlb	0	; () banked
 22642  002556  6F99               	movwf	??_sprintf& (0+255),b
 22643  002558  0EFF               	movlw	255
 22644  00255A  0100               	movlb	0	; () banked
 22645  00255C  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 22646  00255E  C08D  FFF6         	movff	sprintf@f,tblptrl
 22647  002562  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22648  002566                     	if	0	;tblptru may be non-zero
 22649  002566                     	endif
 22650  002566                     	if	0	;tblptru may be non-zero
 22651  002566                     	endif
 22652  002566  0008               	tblrd		*
 22653  002568  50F5               	movf	tablat,w,c
 22654  00256A  0100               	movlb	0	; () banked
 22655  00256C  6F9B               	movwf	(??_sprintf+2)& (0+255),b
 22656  00256E  6B9C               	clrf	(??_sprintf+3)& (0+255),b
 22657  002570  0100               	movlb	0	; () banked
 22658  002572  5199               	movf	??_sprintf& (0+255),w,b
 22659  002574  0100               	movlb	0	; () banked
 22660  002576  279B               	addwf	(??_sprintf+2)& (0+255),f,b
 22661  002578  0100               	movlb	0	; () banked
 22662  00257A  519A               	movf	(??_sprintf+1)& (0+255),w,b
 22663  00257C  0100               	movlb	0	; () banked
 22664  00257E  239C               	addwfc	(??_sprintf+3)& (0+255),f,b
 22665  002580  0100               	movlb	0	; () banked
 22666  002582  519B               	movf	(??_sprintf+2)& (0+255),w,b
 22667  002584  0100               	movlb	0	; () banked
 22668  002586  27B0               	addwf	sprintf@width& (0+255),f,b
 22669  002588  0100               	movlb	0	; () banked
 22670  00258A  519C               	movf	(??_sprintf+3)& (0+255),w,b
 22671  00258C  0100               	movlb	0	; () banked
 22672  00258E  23B1               	addwfc	(sprintf@width+1)& (0+255),f,b
 22673                           
 22674                           ; BSR set to: 0
 22675  002590  0100               	movlb	0	; () banked
 22676  002592  4B8D               	infsnz	sprintf@f& (0+255),f,b
 22677  002594  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 22681  002596  C08D  FFF6         	movff	sprintf@f,tblptrl
 22682  00259A  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22683  00259E                     	if	0	;tblptru may be non-zero
 22684  00259E                     	endif
 22685  00259E                     	if	0	;tblptru may be non-zero
 22686  00259E                     	endif
 22687  00259E  0008               	tblrd		*
 22688  0025A0  50F5               	movf	tablat,w,c
 22689  0025A2  ECF9  F03A         	call	_isdigit
 22690  0025A6  A0D8               	btfss	status,0,c
 22691  0025A8  D01C               	goto	l10658
 22692  0025AA  D7C4               	goto	l10642
 22693                           
 22694                           ;doprnt.c: 604: } else if(*f == '*') {
 22695  0025AC  D01A               	goto	l10658
 22696  0025AE                     l10650:
 22697  0025AE  C08D  FFF6         	movff	sprintf@f,tblptrl
 22698  0025B2  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22699  0025B6                     	if	0	;tblptru may be non-zero
 22700  0025B6                     	endif
 22701  0025B6                     	if	0	;tblptru may be non-zero
 22702  0025B6                     	endif
 22703  0025B6  0008               	tblrd		*
 22704  0025B8  50F5               	movf	tablat,w,c
 22705  0025BA  0A2A               	xorlw	42
 22706  0025BC  A4D8               	btfss	status,2,c
 22707  0025BE  D011               	goto	l10658
 22708                           
 22709                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 22710  0025C0  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 22711  0025C4  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 22712  0025C8  CFDE F0B0          	movff	postinc2,sprintf@width
 22713  0025CC  CFDD F0B1          	movff	postdec2,sprintf@width+1
 22714  0025D0  0E02               	movlw	2
 22715  0025D2  0100               	movlb	0	; () banked
 22716  0025D4  27A8               	addwf	sprintf@ap& (0+255),f,b
 22717  0025D6  0E00               	movlw	0
 22718  0025D8  23A9               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;doprnt.c: 606: f++;
 22722  0025DA  0100               	movlb	0	; () banked
 22723  0025DC  4B8D               	infsnz	sprintf@f& (0+255),f,b
 22724  0025DE  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 22725                           
 22726                           ; BSR set to: 0
 22727  0025E0  D000               	goto	l10658
 22728  0025E2                     l10658:
 22729                           
 22730                           ;doprnt.c: 608: }
 22731                           ;doprnt.c: 611: if(*f == '.') {
 22732  0025E2  C08D  FFF6         	movff	sprintf@f,tblptrl
 22733  0025E6  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22734  0025EA                     	if	0	;tblptru may be non-zero
 22735  0025EA                     	endif
 22736  0025EA                     	if	0	;tblptru may be non-zero
 22737  0025EA                     	endif
 22738  0025EA  0008               	tblrd		*
 22739  0025EC  50F5               	movf	tablat,w,c
 22740  0025EE  0A2E               	xorlw	46
 22741  0025F0  A4D8               	btfss	status,2,c
 22742  0025F2  D055               	goto	l10678
 22743                           
 22744                           ;doprnt.c: 612: flag |= 0x4000;
 22745  0025F4  0100               	movlb	0	; () banked
 22746  0025F6  8DB4               	bsf	(sprintf@flag+1)& (0+255),6,b
 22747                           
 22748                           ;doprnt.c: 613: f++;
 22749  0025F8  0100               	movlb	0	; () banked
 22750  0025FA  4B8D               	infsnz	sprintf@f& (0+255),f,b
 22751  0025FC  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;doprnt.c: 615: if(*f == '*') {
 22755  0025FE  C08D  FFF6         	movff	sprintf@f,tblptrl
 22756  002602  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22757  002606                     	if	0	;tblptru may be non-zero
 22758  002606                     	endif
 22759  002606                     	if	0	;tblptru may be non-zero
 22760  002606                     	endif
 22761  002606  0008               	tblrd		*
 22762  002608  50F5               	movf	tablat,w,c
 22763  00260A  0A2A               	xorlw	42
 22764  00260C  A4D8               	btfss	status,2,c
 22765  00260E  D011               	goto	l10670
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 22769  002610  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 22770  002614  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 22771  002618  CFDE F0AE          	movff	postinc2,sprintf@prec
 22772  00261C  CFDD F0AF          	movff	postdec2,sprintf@prec+1
 22773                           
 22774                           ; BSR set to: 0
 22775  002620  0E02               	movlw	2
 22776  002622  0100               	movlb	0	; () banked
 22777  002624  27A8               	addwf	sprintf@ap& (0+255),f,b
 22778  002626  0E00               	movlw	0
 22779  002628  23A9               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22780                           
 22781                           ; BSR set to: 0
 22782                           ;doprnt.c: 617: f++;
 22783  00262A  0100               	movlb	0	; () banked
 22784  00262C  4B8D               	infsnz	sprintf@f& (0+255),f,b
 22785  00262E  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 22786                           
 22787                           ;doprnt.c: 618: } else
 22788  002630  D0EB               	goto	l10736
 22789  002632                     l10670:
 22790                           
 22791                           ; BSR set to: 0
 22792                           ;doprnt.c: 620: {
 22793                           ;doprnt.c: 621: prec = 0;
 22794  002632  0E00               	movlw	0
 22795  002634  0100               	movlb	0	; () banked
 22796  002636  6FAF               	movwf	(sprintf@prec+1)& (0+255),b
 22797  002638  0E00               	movlw	0
 22798  00263A  6FAE               	movwf	sprintf@prec& (0+255),b
 22799                           
 22800                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 22801  00263C  D024               	goto	l10676
 22802  00263E                     l10672:
 22803                           
 22804                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 22805  00263E  C0AE  F075         	movff	sprintf@prec,___wmul@multiplier
 22806  002642  C0AF  F076         	movff	sprintf@prec+1,___wmul@multiplier+1
 22807  002646  0E00               	movlw	0
 22808  002648  0100               	movlb	0	; () banked
 22809  00264A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22810  00264C  0E0A               	movlw	10
 22811  00264E  6F77               	movwf	___wmul@multiplicand& (0+255),b
 22812  002650  ECAB  F03A         	call	___wmul	;wreg free
 22813  002654  C08D  FFF6         	movff	sprintf@f,tblptrl
 22814  002658  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22815  00265C                     	if	0	;tblptru may be non-zero
 22816  00265C                     	endif
 22817  00265C                     	if	0	;tblptru may be non-zero
 22818  00265C                     	endif
 22819  00265C  0008               	tblrd		*
 22820  00265E  50F5               	movf	tablat,w,c
 22821  002660  0100               	movlb	0	; () banked
 22822  002662  2775               	addwf	?___wmul& (0+255),f,b
 22823  002664  0E00               	movlw	0
 22824  002666  0100               	movlb	0	; () banked
 22825  002668  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 22826  00266A  0ED0               	movlw	208
 22827  00266C  0100               	movlb	0	; () banked
 22828  00266E  2575               	addwf	?___wmul& (0+255),w,b
 22829  002670  0100               	movlb	0	; () banked
 22830  002672  6FAE               	movwf	sprintf@prec& (0+255),b
 22831  002674  0EFF               	movlw	255
 22832  002676  0100               	movlb	0	; () banked
 22833  002678  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 22834  00267A  0100               	movlb	0	; () banked
 22835  00267C  6FAF               	movwf	(sprintf@prec+1)& (0+255),b
 22836                           
 22837                           ; BSR set to: 0
 22838  00267E  0100               	movlb	0	; () banked
 22839  002680  4B8D               	infsnz	sprintf@f& (0+255),f,b
 22840  002682  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 22841  002684  D000               	goto	l10676
 22842  002686                     l10676:
 22843                           
 22844                           ; BSR set to: 0
 22845  002686  C08D  FFF6         	movff	sprintf@f,tblptrl
 22846  00268A  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 22847  00268E                     	if	0	;tblptru may be non-zero
 22848  00268E                     	endif
 22849  00268E                     	if	0	;tblptru may be non-zero
 22850  00268E                     	endif
 22851  00268E  0008               	tblrd		*
 22852  002690  50F5               	movf	tablat,w,c
 22853  002692  ECF9  F03A         	call	_isdigit
 22854  002696  A0D8               	btfss	status,0,c
 22855  002698  D0B7               	goto	l10736
 22856  00269A  D7D1               	goto	l10672
 22857                           
 22858                           ;doprnt.c: 624: }
 22859                           ;doprnt.c: 625: } else {
 22860  00269C  D0B5               	goto	l10736
 22861  00269E                     l10678:
 22862                           
 22863                           ;doprnt.c: 626: prec = 0;
 22864  00269E  0E00               	movlw	0
 22865  0026A0  0100               	movlb	0	; () banked
 22866  0026A2  6FAF               	movwf	(sprintf@prec+1)& (0+255),b
 22867  0026A4  0E00               	movlw	0
 22868  0026A6  6FAE               	movwf	sprintf@prec& (0+255),b
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;doprnt.c: 635: switch(c = *f++) {
 22872                           
 22873                           ;doprnt.c: 630: }
 22874                           ;doprnt.c: 633: loop:
 22875                           
 22876                           ; BSR set to: 0
 22877  0026A8  D0AF               	goto	l10736
 22878                           
 22879                           ; BSR set to: 0
 22880                           ;doprnt.c: 638: goto alldone;
 22881                           
 22882                           ;doprnt.c: 637: case 0:
 22883  0026AA  EF5A  F018         	goto	l10970
 22884  0026AE                     l10680:
 22885                           
 22886                           ; BSR set to: 0
 22887                           ;doprnt.c: 643: flag |= 0x10;
 22888  0026AE  0100               	movlb	0	; () banked
 22889  0026B0  89B3               	bsf	sprintf@flag& (0+255),4,b
 22890                           
 22891                           ;doprnt.c: 644: goto loop;
 22892  0026B2  D0AA               	goto	l10736
 22893  0026B4                     l10682:
 22894                           
 22895                           ; BSR set to: 0
 22896                           ;doprnt.c: 691: flag |= 0x40;
 22897  0026B4  0100               	movlb	0	; () banked
 22898  0026B6  8DB3               	bsf	sprintf@flag& (0+255),6,b
 22899                           
 22900                           ; BSR set to: 0
 22901                           ;doprnt.c: 698: case 'i':
 22902                           ;doprnt.c: 699: break;
 22903                           
 22904                           ; BSR set to: 0
 22905                           
 22906                           ;doprnt.c: 697: case 'd':
 22907                           
 22908                           ;doprnt.c: 693: break;
 22909  0026B8  D0D0               	goto	l10738
 22910  0026BA                     l10684:
 22911                           
 22912                           ; BSR set to: 0
 22913                           ;doprnt.c: 714: flag |= 0x20;
 22914  0026BA  0100               	movlb	0	; () banked
 22915  0026BC  8BB3               	bsf	sprintf@flag& (0+255),5,b
 22916  0026BE                     l1846:
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;doprnt.c: 721: flag |= 0x80;
 22920  0026BE  0100               	movlb	0	; () banked
 22921  0026C0  8FB3               	bsf	sprintf@flag& (0+255),7,b
 22922                           
 22923                           ;doprnt.c: 723: break;
 22924  0026C2  D0CB               	goto	l10738
 22925  0026C4                     l10686:
 22926                           
 22927                           ; BSR set to: 0
 22928                           ;doprnt.c: 753: if(prec && prec < len)
 22929  0026C4  0100               	movlb	0	; () banked
 22930  0026C6  51AE               	movf	sprintf@prec& (0+255),w,b
 22931  0026C8  0100               	movlb	0	; () banked
 22932  0026CA  11AF               	iorwf	(sprintf@prec+1)& (0+255),w,b
 22933  0026CC  B4D8               	btfsc	status,2,c
 22934  0026CE  D00F               	goto	l10692
 22935                           
 22936                           ; BSR set to: 0
 22937  0026D0  0100               	movlb	0	; () banked
 22938  0026D2  51A6               	movf	sprintf@len& (0+255),w,b
 22939  0026D4  0100               	movlb	0	; () banked
 22940  0026D6  5DAE               	subwf	sprintf@prec& (0+255),w,b
 22941  0026D8  0100               	movlb	0	; () banked
 22942  0026DA  51A7               	movf	(sprintf@len+1)& (0+255),w,b
 22943  0026DC  0100               	movlb	0	; () banked
 22944  0026DE  59AF               	subwfb	(sprintf@prec+1)& (0+255),w,b
 22945  0026E0  B0D8               	btfsc	status,0,c
 22946  0026E2  D005               	goto	l10692
 22947                           
 22948                           ; BSR set to: 0
 22949                           ;doprnt.c: 754: len = prec;
 22950  0026E4  C0AE  F0A6         	movff	sprintf@prec,sprintf@len
 22951  0026E8  C0AF  F0A7         	movff	sprintf@prec+1,sprintf@len+1
 22952  0026EC  D000               	goto	l10692
 22953  0026EE                     l10692:
 22954                           
 22955                           ; BSR set to: 0
 22956                           ;doprnt.c: 757: if(width > len)
 22957  0026EE  0100               	movlb	0	; () banked
 22958  0026F0  51B0               	movf	sprintf@width& (0+255),w,b
 22959  0026F2  0100               	movlb	0	; () banked
 22960  0026F4  5DA6               	subwf	sprintf@len& (0+255),w,b
 22961  0026F6  0100               	movlb	0	; () banked
 22962  0026F8  51B1               	movf	(sprintf@width+1)& (0+255),w,b
 22963  0026FA  0100               	movlb	0	; () banked
 22964  0026FC  59A7               	subwfb	(sprintf@len+1)& (0+255),w,b
 22965  0026FE  B0D8               	btfsc	status,0,c
 22966  002700  D009               	goto	l10696
 22967                           
 22968                           ; BSR set to: 0
 22969                           ;doprnt.c: 758: width -= len;
 22970  002702  0100               	movlb	0	; () banked
 22971  002704  51A6               	movf	sprintf@len& (0+255),w,b
 22972  002706  0100               	movlb	0	; () banked
 22973  002708  5FB0               	subwf	sprintf@width& (0+255),f,b
 22974  00270A  0100               	movlb	0	; () banked
 22975  00270C  51A7               	movf	(sprintf@len+1)& (0+255),w,b
 22976  00270E  0100               	movlb	0	; () banked
 22977  002710  5BB1               	subwfb	(sprintf@width+1)& (0+255),f,b
 22978  002712  D006               	goto	l10698
 22979  002714                     l10696:
 22980                           
 22981                           ; BSR set to: 0
 22982                           ;doprnt.c: 759: else
 22983                           ;doprnt.c: 760: width = 0;
 22984  002714  0E00               	movlw	0
 22985  002716  0100               	movlb	0	; () banked
 22986  002718  6FB1               	movwf	(sprintf@width+1)& (0+255),b
 22987  00271A  0E00               	movlw	0
 22988  00271C  6FB0               	movwf	sprintf@width& (0+255),b
 22989  00271E  D000               	goto	l10698
 22990  002720                     l10698:
 22991                           
 22992                           ; BSR set to: 0
 22993                           ;doprnt.c: 762: if(!(flag & 0x08))
 22994  002720  0100               	movlb	0	; () banked
 22995  002722  A7B3               	btfss	sprintf@flag& (0+255),3,b
 22996  002724  D00C               	goto	l10706
 22997  002726  D029               	goto	l10714
 22998                           
 22999                           ; BSR set to: 0
 23000                           ;doprnt.c: 764: while(width--)
 23001  002728  D00A               	goto	l10706
 23002  00272A                     l10702:
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;doprnt.c: 765: ((*sp++ = (' ')));
 23006  00272A  C08B  FFD9         	movff	sprintf@sp,fsr2l
 23007  00272E  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 23008  002732  0E20               	movlw	32
 23009  002734  6EDF               	movwf	indf2,c
 23010                           
 23011                           ; BSR set to: 0
 23012  002736  0100               	movlb	0	; () banked
 23013  002738  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 23014  00273A  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 23015  00273C  D000               	goto	l10706
 23016  00273E                     l10706:
 23017                           
 23018                           ; BSR set to: 0
 23019  00273E  0100               	movlb	0	; () banked
 23020  002740  07B0               	decf	sprintf@width& (0+255),f,b
 23021  002742  A0D8               	btfss	status,0,c
 23022  002744  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 23023  002746  0100               	movlb	0	; () banked
 23024  002748  29B0               	incf	sprintf@width& (0+255),w,b
 23025  00274A  E1EF               	bnz	l10702
 23026  00274C  0100               	movlb	0	; () banked
 23027  00274E  29B1               	incf	(sprintf@width+1)& (0+255),w,b
 23028  002750  B4D8               	btfsc	status,2,c
 23029  002752  D013               	goto	l10714
 23030  002754  D7EA               	goto	l10702
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;doprnt.c: 767: while(len--)
 23034                           
 23035                           ; BSR set to: 0
 23036  002756  D011               	goto	l10714
 23037  002758                     l10708:
 23038                           
 23039                           ; BSR set to: 0
 23040                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 23041  002758  C09E  FFD9         	movff	sprintf@cp,fsr2l
 23042  00275C  C09F  FFDA         	movff	sprintf@cp+1,fsr2h
 23043  002760  C08B  FFE1         	movff	sprintf@sp,fsr1l
 23044  002764  C08C  FFE2         	movff	sprintf@sp+1,fsr1h
 23045  002768  CFDF FFE7          	movff	indf2,indf1
 23046                           
 23047                           ; BSR set to: 0
 23048  00276C  0100               	movlb	0	; () banked
 23049  00276E  4B9E               	infsnz	sprintf@cp& (0+255),f,b
 23050  002770  2B9F               	incf	(sprintf@cp+1)& (0+255),f,b
 23051                           
 23052                           ; BSR set to: 0
 23053  002772  0100               	movlb	0	; () banked
 23054  002774  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 23055  002776  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 23056  002778  D000               	goto	l10714
 23057  00277A                     l10714:
 23058                           
 23059                           ; BSR set to: 0
 23060  00277A  0100               	movlb	0	; () banked
 23061  00277C  07A6               	decf	sprintf@len& (0+255),f,b
 23062  00277E  A0D8               	btfss	status,0,c
 23063  002780  07A7               	decf	(sprintf@len+1)& (0+255),f,b
 23064  002782  0100               	movlb	0	; () banked
 23065  002784  29A6               	incf	sprintf@len& (0+255),w,b
 23066  002786  E1E8               	bnz	l10708
 23067  002788  0100               	movlb	0	; () banked
 23068  00278A  29A7               	incf	(sprintf@len+1)& (0+255),w,b
 23069  00278C  A4D8               	btfss	status,2,c
 23070  00278E  D7E4               	goto	l10708
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;doprnt.c: 770: if(flag & 0x08)
 23074  002790  0100               	movlb	0	; () banked
 23075  002792  B7B3               	btfsc	sprintf@flag& (0+255),3,b
 23076  002794  D00D               	goto	l10722
 23077  002796  EF49  F018         	goto	l10968
 23078                           
 23079                           ; BSR set to: 0
 23080                           ;doprnt.c: 771: while(width--)
 23081  00279A  D00A               	goto	l10722
 23082  00279C                     l10718:
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;doprnt.c: 772: ((*sp++ = (' ')));
 23086  00279C  C08B  FFD9         	movff	sprintf@sp,fsr2l
 23087  0027A0  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 23088  0027A4  0E20               	movlw	32
 23089  0027A6  6EDF               	movwf	indf2,c
 23090                           
 23091                           ; BSR set to: 0
 23092  0027A8  0100               	movlb	0	; () banked
 23093  0027AA  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 23094  0027AC  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 23095  0027AE  D000               	goto	l10722
 23096  0027B0                     l10722:
 23097                           
 23098                           ; BSR set to: 0
 23099  0027B0  0100               	movlb	0	; () banked
 23100  0027B2  07B0               	decf	sprintf@width& (0+255),f,b
 23101  0027B4  A0D8               	btfss	status,0,c
 23102  0027B6  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 23103  0027B8  0100               	movlb	0	; () banked
 23104  0027BA  29B0               	incf	sprintf@width& (0+255),w,b
 23105  0027BC  E1EF               	bnz	l10718
 23106  0027BE  0100               	movlb	0	; () banked
 23107  0027C0  29B1               	incf	(sprintf@width+1)& (0+255),w,b
 23108  0027C2  B4D8               	btfsc	status,2,c
 23109  0027C4  EF49  F018         	goto	l10968
 23110  0027C8  D7E9               	goto	l10718
 23111                           
 23112                           ; BSR set to: 0
 23113                           ;doprnt.c: 774: continue;
 23114                           
 23115                           ; BSR set to: 0
 23116  0027CA  EF49  F018         	goto	l10968
 23117  0027CE                     l10724:
 23118                           
 23119                           ; BSR set to: 0
 23120                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23121  0027CE  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 23122  0027D2  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 23123  0027D6  50DF               	movf	indf2,w,c
 23124  0027D8  0100               	movlb	0	; () banked
 23125  0027DA  6FB2               	movwf	sprintf@c& (0+255),b
 23126                           
 23127                           ; BSR set to: 0
 23128  0027DC  0E02               	movlw	2
 23129  0027DE  0100               	movlb	0	; () banked
 23130  0027E0  27A8               	addwf	sprintf@ap& (0+255),f,b
 23131  0027E2  0E00               	movlw	0
 23132  0027E4  23A9               	addwfc	(sprintf@ap+1)& (0+255),f,b
 23133  0027E6  D000               	goto	l10728
 23134  0027E8                     l10728:
 23135                           
 23136                           ; BSR set to: 0
 23137                           ;doprnt.c: 805: cp = (char *)&c;
 23138  0027E8  0EB2               	movlw	low sprintf@c
 23139  0027EA  0100               	movlb	0	; () banked
 23140  0027EC  6F9E               	movwf	sprintf@cp& (0+255),b
 23141  0027EE  0E00               	movlw	high sprintf@c
 23142  0027F0  0100               	movlb	0	; () banked
 23143  0027F2  6F9F               	movwf	(sprintf@cp+1)& (0+255),b
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;doprnt.c: 806: len = 1;
 23147  0027F4  0E00               	movlw	0
 23148  0027F6  0100               	movlb	0	; () banked
 23149  0027F8  6FA7               	movwf	(sprintf@len+1)& (0+255),b
 23150  0027FA  0E01               	movlw	1
 23151  0027FC  6FA6               	movwf	sprintf@len& (0+255),b
 23152                           
 23153                           ;doprnt.c: 807: goto dostring;
 23154  0027FE  D762               	goto	l10686
 23155  002800                     l10732:
 23156                           
 23157                           ; BSR set to: 0
 23158                           ;doprnt.c: 818: flag |= 0xC0;
 23159  002800  0EC0               	movlw	192
 23160  002802  0100               	movlb	0	; () banked
 23161  002804  13B3               	iorwf	sprintf@flag& (0+255),f,b
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;doprnt.c: 822: }
 23165                           
 23166                           ;doprnt.c: 819: break;
 23167  002806  D029               	goto	l10738
 23168  002808                     l10736:
 23169  002808  C08D  FFF6         	movff	sprintf@f,tblptrl
 23170  00280C  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 23171  002810  0100               	movlb	0	; () banked
 23172  002812  4B8D               	infsnz	sprintf@f& (0+255),f,b
 23173  002814  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 23174  002816                     	if	0	;tblptru may be non-zero
 23175  002816                     	endif
 23176  002816                     	if	0	;tblptru may be non-zero
 23177  002816                     	endif
 23178  002816  0008               	tblrd		*
 23179  002818  CFF5 F0B2          	movff	tablat,sprintf@c
 23180  00281C  0100               	movlb	0	; () banked
 23181  00281E  51B2               	movf	sprintf@c& (0+255),w,b
 23182                           
 23183                           ; Switch size 1, requested type "space"
 23184                           ; Number of cases is 9, Range of values is 0 to 120
 23185                           ; switch strategies available:
 23186                           ; Name         Instructions Cycles
 23187                           ; simple_byte           28    15 (average)
 23188                           ;	Chosen strategy is simple_byte
 23189  002820  0A00               	xorlw	0	; case 0
 23190  002822  B4D8               	btfsc	status,2,c
 23191  002824  EF5A  F018         	goto	l10970
 23192  002828  0A58               	xorlw	88	; case 88
 23193  00282A  B4D8               	btfsc	status,2,c
 23194  00282C  D746               	goto	l10684
 23195  00282E  0A3B               	xorlw	59	; case 99
 23196  002830  B4D8               	btfsc	status,2,c
 23197  002832  D7CD               	goto	l10724
 23198  002834  0A07               	xorlw	7	; case 100
 23199  002836  B4D8               	btfsc	status,2,c
 23200  002838  D010               	goto	l10738
 23201  00283A  0A0D               	xorlw	13	; case 105
 23202  00283C  B4D8               	btfsc	status,2,c
 23203  00283E  D00D               	goto	l10738
 23204  002840  0A05               	xorlw	5	; case 108
 23205  002842  B4D8               	btfsc	status,2,c
 23206  002844  D734               	goto	l10680
 23207  002846  0A03               	xorlw	3	; case 111
 23208  002848  B4D8               	btfsc	status,2,c
 23209  00284A  D734               	goto	l10682
 23210  00284C  0A1A               	xorlw	26	; case 117
 23211  00284E  B4D8               	btfsc	status,2,c
 23212  002850  D7D7               	goto	l10732
 23213  002852  0A0D               	xorlw	13	; case 120
 23214  002854  B4D8               	btfsc	status,2,c
 23215  002856  D733               	goto	l1846
 23216  002858  D7C7               	goto	l10728
 23217  00285A                     l10738:
 23218                           
 23219                           ; BSR set to: 0
 23220                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 23221  00285A  0EC0               	movlw	192
 23222  00285C  0100               	movlb	0	; () banked
 23223  00285E  15B3               	andwf	sprintf@flag& (0+255),w,b
 23224  002860  0100               	movlb	0	; () banked
 23225  002862  6F99               	movwf	??_sprintf& (0+255),b
 23226  002864  0E00               	movlw	0
 23227  002866  0100               	movlb	0	; () banked
 23228  002868  15B4               	andwf	(sprintf@flag+1)& (0+255),w,b
 23229  00286A  0100               	movlb	0	; () banked
 23230  00286C  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 23231  00286E  0100               	movlb	0	; () banked
 23232  002870  5199               	movf	??_sprintf& (0+255),w,b
 23233  002872  0100               	movlb	0	; () banked
 23234  002874  119A               	iorwf	(??_sprintf+1)& (0+255),w,b
 23235  002876  A4D8               	btfss	status,2,c
 23236  002878  D035               	goto	l1865
 23237                           
 23238                           ; BSR set to: 0
 23239                           ;doprnt.c: 1253: {
 23240                           ;doprnt.c: 1255: if(flag & 0x10)
 23241  00287A  0100               	movlb	0	; () banked
 23242  00287C  A9B3               	btfss	sprintf@flag& (0+255),4,b
 23243  00287E  D00E               	goto	l10746
 23244                           
 23245                           ; BSR set to: 0
 23246                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 23247  002880  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 23248  002884  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 23249  002888  CFDE F0AA          	movff	postinc2,sprintf@val
 23250  00288C  CFDE F0AB          	movff	postinc2,sprintf@val+1
 23251  002890  CFDE F0AC          	movff	postinc2,sprintf@val+2
 23252  002894  CFDE F0AD          	movff	postinc2,sprintf@val+3
 23253                           
 23254                           ; BSR set to: 0
 23255  002898  0E04               	movlw	4
 23256  00289A  D00F               	goto	L16
 23257  00289C                     l10746:
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;doprnt.c: 1257: else
 23261                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 23262  00289C  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 23263  0028A0  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 23264  0028A4  CFDE F0AA          	movff	postinc2,sprintf@val
 23265  0028A8  CFDD F0AB          	movff	postdec2,sprintf@val+1
 23266  0028AC  0100               	movlb	0	; () banked
 23267  0028AE  0E00               	movlw	0
 23268  0028B0  BFAB               	btfsc	(sprintf@val+1)& (0+255),7,b
 23269  0028B2  0EFF               	movlw	-1
 23270  0028B4  6FAC               	movwf	(sprintf@val+2)& (0+255),b
 23271  0028B6  6FAD               	movwf	(sprintf@val+3)& (0+255),b
 23272                           
 23273                           ; BSR set to: 0
 23274  0028B8  0E02               	movlw	2
 23275  0028BA                     L16:
 23276  0028BA  0100               	movlb	0	; () banked
 23277  0028BC  27A8               	addwf	sprintf@ap& (0+255),f,b
 23278  0028BE  0E00               	movlw	0
 23279  0028C0  23A9               	addwfc	(sprintf@ap+1)& (0+255),f,b
 23280  0028C2  D000               	goto	l10750
 23281  0028C4                     l10750:
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;doprnt.c: 1261: if((long)val < 0) {
 23285  0028C4  0100               	movlb	0	; () banked
 23286  0028C6  AFAD               	btfss	(sprintf@val+3)& (0+255),7,b
 23287  0028C8  D033               	goto	l10764
 23288                           
 23289                           ; BSR set to: 0
 23290                           ;doprnt.c: 1262: flag |= 0x03;
 23291  0028CA  0E03               	movlw	3
 23292  0028CC  0100               	movlb	0	; () banked
 23293  0028CE  13B3               	iorwf	sprintf@flag& (0+255),f,b
 23294                           
 23295                           ; BSR set to: 0
 23296                           ;doprnt.c: 1263: val = -val;
 23297  0028D0  0100               	movlb	0	; () banked
 23298  0028D2  1FAD               	comf	(sprintf@val+3)& (0+255),f,b
 23299  0028D4  1FAC               	comf	(sprintf@val+2)& (0+255),f,b
 23300  0028D6  1FAB               	comf	(sprintf@val+1)& (0+255),f,b
 23301  0028D8  6DAA               	negf	sprintf@val& (0+255),b
 23302  0028DA  0E00               	movlw	0
 23303  0028DC  23AB               	addwfc	(sprintf@val+1)& (0+255),f,b
 23304  0028DE  23AC               	addwfc	(sprintf@val+2)& (0+255),f,b
 23305  0028E0  23AD               	addwfc	(sprintf@val+3)& (0+255),f,b
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;doprnt.c: 1264: }
 23309                           ;doprnt.c: 1266: }
 23310  0028E2  D026               	goto	l10764
 23311  0028E4                     l1865:
 23312                           
 23313                           ; BSR set to: 0
 23314                           ;doprnt.c: 1268: else
 23315                           ;doprnt.c: 1273: {
 23316                           ;doprnt.c: 1281: if(flag & 0x10)
 23317  0028E4  0100               	movlb	0	; () banked
 23318  0028E6  A9B3               	btfss	sprintf@flag& (0+255),4,b
 23319  0028E8  D00E               	goto	l10760
 23320                           
 23321                           ; BSR set to: 0
 23322                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 23323  0028EA  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 23324  0028EE  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 23325  0028F2  CFDE F0AA          	movff	postinc2,sprintf@val
 23326  0028F6  CFDE F0AB          	movff	postinc2,sprintf@val+1
 23327  0028FA  CFDE F0AC          	movff	postinc2,sprintf@val+2
 23328  0028FE  CFDE F0AD          	movff	postinc2,sprintf@val+3
 23329                           
 23330                           ; BSR set to: 0
 23331  002902  0E04               	movlw	4
 23332  002904  D010               	goto	L17
 23333  002906                     l10760:
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;doprnt.c: 1283: else
 23337                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 23338  002906  C0A8  FFD9         	movff	sprintf@ap,fsr2l
 23339  00290A  C0A9  FFDA         	movff	sprintf@ap+1,fsr2h
 23340  00290E  CFDE F099          	movff	postinc2,??_sprintf
 23341  002912  CFDD F09A          	movff	postdec2,??_sprintf+1
 23342  002916  C099  F0AA         	movff	??_sprintf,sprintf@val
 23343  00291A  C09A  F0AB         	movff	??_sprintf+1,sprintf@val+1
 23344  00291E  0100               	movlb	0	; () banked
 23345  002920  6BAC               	clrf	(sprintf@val+2)& (0+255),b
 23346  002922  6BAD               	clrf	(sprintf@val+3)& (0+255),b
 23347                           
 23348                           ; BSR set to: 0
 23349  002924  0E02               	movlw	2
 23350  002926                     L17:
 23351  002926  0100               	movlb	0	; () banked
 23352  002928  27A8               	addwf	sprintf@ap& (0+255),f,b
 23353  00292A  0E00               	movlw	0
 23354  00292C  23A9               	addwfc	(sprintf@ap+1)& (0+255),f,b
 23355                           
 23356                           ; BSR set to: 0
 23357  00292E  D000               	goto	l10764
 23358  002930                     l10764:
 23359                           
 23360                           ; BSR set to: 0
 23361                           ;doprnt.c: 1287: }
 23362                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 23363  002930  0100               	movlb	0	; () banked
 23364  002932  51AE               	movf	sprintf@prec& (0+255),w,b
 23365  002934  0100               	movlb	0	; () banked
 23366  002936  11AF               	iorwf	(sprintf@prec+1)& (0+255),w,b
 23367  002938  A4D8               	btfss	status,2,c
 23368  00293A  D090               	goto	l10814
 23369                           
 23370                           ; BSR set to: 0
 23371  00293C  0100               	movlb	0	; () banked
 23372  00293E  51AA               	movf	sprintf@val& (0+255),w,b
 23373  002940  0100               	movlb	0	; () banked
 23374  002942  11AB               	iorwf	(sprintf@val+1)& (0+255),w,b
 23375  002944  0100               	movlb	0	; () banked
 23376  002946  11AC               	iorwf	(sprintf@val+2)& (0+255),w,b
 23377  002948  0100               	movlb	0	; () banked
 23378  00294A  11AD               	iorwf	(sprintf@val+3)& (0+255),w,b
 23379  00294C  A4D8               	btfss	status,2,c
 23380  00294E  D086               	goto	l10814
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;doprnt.c: 1291: prec++;
 23384  002950  0100               	movlb	0	; () banked
 23385  002952  4BAE               	infsnz	sprintf@prec& (0+255),f,b
 23386  002954  2BAF               	incf	(sprintf@prec+1)& (0+255),f,b
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 23390  002956  D082               	goto	l10814
 23391                           
 23392                           ; BSR set to: 0
 23393                           
 23394                           ;doprnt.c: 1299: case 0x00:
 23395  002958  D000               	goto	l10770
 23396  00295A                     l10770:
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;doprnt.c: 1302: case 0xC0:
 23400                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 23401  00295A  0E01               	movlw	1
 23402  00295C  0100               	movlb	0	; () banked
 23403  00295E  6FB2               	movwf	sprintf@c& (0+255),b
 23404  002960                     l10772:
 23405                           
 23406                           ; BSR set to: 0
 23407  002960  0E0A               	movlw	10
 23408  002962  0100               	movlb	0	; () banked
 23409  002964  19B2               	xorwf	sprintf@c& (0+255),w,b
 23410  002966  B4D8               	btfsc	status,2,c
 23411  002968  D089               	goto	l10816
 23412  00296A  D001               	goto	l10776
 23413                           
 23414                           ; BSR set to: 0
 23415  00296C  D087               	goto	l10816
 23416  00296E                     l10776:
 23417                           
 23418                           ; BSR set to: 0
 23419                           ;doprnt.c: 1306: if(val < dpowers[c])
 23420  00296E  0100               	movlb	0	; () banked
 23421  002970  51B2               	movf	sprintf@c& (0+255),w,b
 23422  002972  0D04               	mullw	4
 23423  002974  0E1F               	movlw	low _dpowers
 23424  002976  24F3               	addwf	prodl,w,c
 23425  002978  6EF6               	movwf	tblptrl,c
 23426  00297A  0EF8               	movlw	high _dpowers
 23427  00297C  20F4               	addwfc	prodh,w,c
 23428  00297E  6EF7               	movwf	tblptrh,c
 23429  002980                     	if	0	;There are less than 3 active tblptr bytes
 23430  002980                     	endif
 23431  002980  0009               	tblrd		*+
 23432  002982  50F5               	movf	tablat,w,c
 23433  002984  0100               	movlb	0	; () banked
 23434  002986  5DAA               	subwf	sprintf@val& (0+255),w,b
 23435  002988  0009               	tblrd		*+
 23436  00298A  50F5               	movf	tablat,w,c
 23437  00298C  0100               	movlb	0	; () banked
 23438  00298E  59AB               	subwfb	(sprintf@val+1)& (0+255),w,b
 23439  002990  0009               	tblrd		*+
 23440  002992  50F5               	movf	tablat,w,c
 23441  002994  0100               	movlb	0	; () banked
 23442  002996  59AC               	subwfb	(sprintf@val+2)& (0+255),w,b
 23443  002998  0009               	tblrd		*+
 23444  00299A  50F5               	movf	tablat,w,c
 23445  00299C  0100               	movlb	0	; () banked
 23446  00299E  59AD               	subwfb	(sprintf@val+3)& (0+255),w,b
 23447  0029A0  A0D8               	btfss	status,0,c
 23448  0029A2  D06C               	goto	l10816
 23449  0029A4  D001               	goto	l10780
 23450                           
 23451                           ; BSR set to: 0
 23452                           ;doprnt.c: 1307: break;
 23453  0029A6  D06A               	goto	l10816
 23454  0029A8                     l10780:
 23455                           
 23456                           ; BSR set to: 0
 23457  0029A8  0100               	movlb	0	; () banked
 23458  0029AA  2BB2               	incf	sprintf@c& (0+255),f,b
 23459  0029AC  D7D9               	goto	l10772
 23460                           
 23461                           ; BSR set to: 0
 23462                           ;doprnt.c: 1309: break;
 23463                           
 23464                           ; BSR set to: 0
 23465  0029AE  D066               	goto	l10816
 23466  0029B0                     l10784:
 23467                           
 23468                           ; BSR set to: 0
 23469                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 23470  0029B0  0E01               	movlw	1
 23471  0029B2  0100               	movlb	0	; () banked
 23472  0029B4  6FB2               	movwf	sprintf@c& (0+255),b
 23473  0029B6                     l10786:
 23474                           
 23475                           ; BSR set to: 0
 23476  0029B6  0E08               	movlw	8
 23477  0029B8  0100               	movlb	0	; () banked
 23478  0029BA  19B2               	xorwf	sprintf@c& (0+255),w,b
 23479  0029BC  B4D8               	btfsc	status,2,c
 23480  0029BE  D05E               	goto	l10816
 23481  0029C0  D001               	goto	l10790
 23482                           
 23483                           ; BSR set to: 0
 23484  0029C2  D05C               	goto	l10816
 23485  0029C4                     l10790:
 23486                           
 23487                           ; BSR set to: 0
 23488                           ;doprnt.c: 1317: if(val < hexpowers[c])
 23489  0029C4  0100               	movlb	0	; () banked
 23490  0029C6  51B2               	movf	sprintf@c& (0+255),w,b
 23491  0029C8  0D04               	mullw	4
 23492  0029CA  0E47               	movlw	low _hexpowers
 23493  0029CC  24F3               	addwf	prodl,w,c
 23494  0029CE  6EF6               	movwf	tblptrl,c
 23495  0029D0  0EF8               	movlw	high _hexpowers
 23496  0029D2  20F4               	addwfc	prodh,w,c
 23497  0029D4  6EF7               	movwf	tblptrh,c
 23498  0029D6                     	if	0	;There are less than 3 active tblptr bytes
 23499  0029D6                     	endif
 23500  0029D6  0009               	tblrd		*+
 23501  0029D8  50F5               	movf	tablat,w,c
 23502  0029DA  0100               	movlb	0	; () banked
 23503  0029DC  5DAA               	subwf	sprintf@val& (0+255),w,b
 23504  0029DE  0009               	tblrd		*+
 23505  0029E0  50F5               	movf	tablat,w,c
 23506  0029E2  0100               	movlb	0	; () banked
 23507  0029E4  59AB               	subwfb	(sprintf@val+1)& (0+255),w,b
 23508  0029E6  0009               	tblrd		*+
 23509  0029E8  50F5               	movf	tablat,w,c
 23510  0029EA  0100               	movlb	0	; () banked
 23511  0029EC  59AC               	subwfb	(sprintf@val+2)& (0+255),w,b
 23512  0029EE  0009               	tblrd		*+
 23513  0029F0  50F5               	movf	tablat,w,c
 23514  0029F2  0100               	movlb	0	; () banked
 23515  0029F4  59AD               	subwfb	(sprintf@val+3)& (0+255),w,b
 23516  0029F6  A0D8               	btfss	status,0,c
 23517  0029F8  D041               	goto	l10816
 23518  0029FA  D001               	goto	l10794
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;doprnt.c: 1318: break;
 23522  0029FC  D03F               	goto	l10816
 23523  0029FE                     l10794:
 23524                           
 23525                           ; BSR set to: 0
 23526  0029FE  0100               	movlb	0	; () banked
 23527  002A00  2BB2               	incf	sprintf@c& (0+255),f,b
 23528  002A02  D7D9               	goto	l10786
 23529                           
 23530                           ; BSR set to: 0
 23531                           ;doprnt.c: 1320: break;
 23532                           
 23533                           ; BSR set to: 0
 23534  002A04  D03B               	goto	l10816
 23535  002A06                     l10798:
 23536                           
 23537                           ; BSR set to: 0
 23538                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 23539  002A06  0E01               	movlw	1
 23540  002A08  0100               	movlb	0	; () banked
 23541  002A0A  6FB2               	movwf	sprintf@c& (0+255),b
 23542  002A0C                     l10800:
 23543                           
 23544                           ; BSR set to: 0
 23545  002A0C  0E0C               	movlw	12
 23546  002A0E  0100               	movlb	0	; () banked
 23547  002A10  19B2               	xorwf	sprintf@c& (0+255),w,b
 23548  002A12  B4D8               	btfsc	status,2,c
 23549  002A14  D033               	goto	l10816
 23550  002A16  D001               	goto	l10804
 23551                           
 23552                           ; BSR set to: 0
 23553  002A18  D031               	goto	l10816
 23554  002A1A                     l10804:
 23555                           
 23556                           ; BSR set to: 0
 23557                           ;doprnt.c: 1329: if(val < octpowers[c])
 23558  002A1A  0100               	movlb	0	; () banked
 23559  002A1C  51B2               	movf	sprintf@c& (0+255),w,b
 23560  002A1E  0D04               	mullw	4
 23561  002A20  0EEF               	movlw	low _octpowers
 23562  002A22  24F3               	addwf	prodl,w,c
 23563  002A24  6EF6               	movwf	tblptrl,c
 23564  002A26  0EF7               	movlw	high _octpowers
 23565  002A28  20F4               	addwfc	prodh,w,c
 23566  002A2A  6EF7               	movwf	tblptrh,c
 23567  002A2C                     	if	0	;There are less than 3 active tblptr bytes
 23568  002A2C                     	endif
 23569  002A2C  0009               	tblrd		*+
 23570  002A2E  50F5               	movf	tablat,w,c
 23571  002A30  0100               	movlb	0	; () banked
 23572  002A32  5DAA               	subwf	sprintf@val& (0+255),w,b
 23573  002A34  0009               	tblrd		*+
 23574  002A36  50F5               	movf	tablat,w,c
 23575  002A38  0100               	movlb	0	; () banked
 23576  002A3A  59AB               	subwfb	(sprintf@val+1)& (0+255),w,b
 23577  002A3C  0009               	tblrd		*+
 23578  002A3E  50F5               	movf	tablat,w,c
 23579  002A40  0100               	movlb	0	; () banked
 23580  002A42  59AC               	subwfb	(sprintf@val+2)& (0+255),w,b
 23581  002A44  0009               	tblrd		*+
 23582  002A46  50F5               	movf	tablat,w,c
 23583  002A48  0100               	movlb	0	; () banked
 23584  002A4A  59AD               	subwfb	(sprintf@val+3)& (0+255),w,b
 23585  002A4C  A0D8               	btfss	status,0,c
 23586  002A4E  D016               	goto	l10816
 23587  002A50  D001               	goto	l10808
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;doprnt.c: 1330: break;
 23591  002A52  D014               	goto	l10816
 23592  002A54                     l10808:
 23593                           
 23594                           ; BSR set to: 0
 23595  002A54  0100               	movlb	0	; () banked
 23596  002A56  2BB2               	incf	sprintf@c& (0+255),f,b
 23597  002A58  D7D9               	goto	l10800
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;doprnt.c: 1336: }
 23601                           
 23602                           ; BSR set to: 0
 23603                           ;doprnt.c: 1332: break;
 23604                           
 23605                           ; BSR set to: 0
 23606  002A5A  D010               	goto	l10816
 23607  002A5C                     l10814:
 23608                           
 23609                           ; BSR set to: 0
 23610  002A5C  0100               	movlb	0	; () banked
 23611  002A5E  51B3               	movf	sprintf@flag& (0+255),w,b
 23612  002A60  0BC0               	andlw	192
 23613                           
 23614                           ; Switch size 1, requested type "space"
 23615                           ; Number of cases is 4, Range of values is 0 to 192
 23616                           ; switch strategies available:
 23617                           ; Name         Instructions Cycles
 23618                           ; simple_byte           13     7 (average)
 23619                           ;	Chosen strategy is simple_byte
 23620  002A62  0A00               	xorlw	0	; case 0
 23621  002A64  B4D8               	btfsc	status,2,c
 23622  002A66  D779               	goto	l10770
 23623  002A68  0A40               	xorlw	64	; case 64
 23624  002A6A  B4D8               	btfsc	status,2,c
 23625  002A6C  D7CC               	goto	l10798
 23626  002A6E  0AC0               	xorlw	192	; case 128
 23627  002A70  B4D8               	btfsc	status,2,c
 23628  002A72  D79E               	goto	l10784
 23629  002A74  0A40               	xorlw	64	; case 192
 23630  002A76  B4D8               	btfsc	status,2,c
 23631  002A78  D770               	goto	l10770
 23632  002A7A  D000               	goto	l10816
 23633  002A7C                     l10816:
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;doprnt.c: 1339: if(c < prec)
 23637  002A7C  0E80               	movlw	128
 23638  002A7E  0100               	movlb	0	; () banked
 23639  002A80  BFB2               	btfsc	sprintf@c& (0+255),7,b
 23640  002A82  0E7F               	movlw	127
 23641  002A84  0100               	movlb	0	; () banked
 23642  002A86  6F99               	movwf	??_sprintf& (0+255),b
 23643  002A88  0100               	movlb	0	; () banked
 23644  002A8A  51AE               	movf	sprintf@prec& (0+255),w,b
 23645  002A8C  0100               	movlb	0	; () banked
 23646  002A8E  5DB2               	subwf	sprintf@c& (0+255),w,b
 23647  002A90  0100               	movlb	0	; () banked
 23648  002A92  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
 23649  002A94  0A80               	xorlw	128
 23650  002A96  0100               	movlb	0	; () banked
 23651  002A98  5999               	subwfb	??_sprintf& (0+255),w,b
 23652  002A9A  B0D8               	btfsc	status,0,c
 23653  002A9C  D003               	goto	l10820
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;doprnt.c: 1340: c = prec;
 23657  002A9E  C0AE  F0B2         	movff	sprintf@prec,sprintf@c
 23658  002AA2  D019               	goto	l10824
 23659  002AA4                     l10820:
 23660                           
 23661                           ; BSR set to: 0
 23662                           ;doprnt.c: 1341: else if(prec < c)
 23663  002AA4  0100               	movlb	0	; () banked
 23664  002AA6  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
 23665  002AA8  0A80               	xorlw	128
 23666  002AAA  0100               	movlb	0	; () banked
 23667  002AAC  6F99               	movwf	??_sprintf& (0+255),b
 23668  002AAE  0100               	movlb	0	; () banked
 23669  002AB0  51B2               	movf	sprintf@c& (0+255),w,b
 23670  002AB2  0100               	movlb	0	; () banked
 23671  002AB4  5DAE               	subwf	sprintf@prec& (0+255),w,b
 23672  002AB6  0E80               	movlw	128
 23673  002AB8  0100               	movlb	0	; () banked
 23674  002ABA  BFB2               	btfsc	sprintf@c& (0+255),7,b
 23675  002ABC  0E7F               	movlw	127
 23676  002ABE  0100               	movlb	0	; () banked
 23677  002AC0  5999               	subwfb	??_sprintf& (0+255),w,b
 23678  002AC2  B0D8               	btfsc	status,0,c
 23679  002AC4  D008               	goto	l10824
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;doprnt.c: 1342: prec = c;
 23683  002AC6  0100               	movlb	0	; () banked
 23684  002AC8  51B2               	movf	sprintf@c& (0+255),w,b
 23685  002ACA  0100               	movlb	0	; () banked
 23686  002ACC  6FAE               	movwf	sprintf@prec& (0+255),b
 23687  002ACE  6BAF               	clrf	(sprintf@prec+1)& (0+255),b
 23688  002AD0  BFAE               	btfsc	sprintf@prec& (0+255),7,b
 23689  002AD2  07AF               	decf	(sprintf@prec+1)& (0+255),f,b
 23690                           
 23691                           ; BSR set to: 0
 23692  002AD4  D000               	goto	l10824
 23693  002AD6                     l10824:
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;doprnt.c: 1345: if(width && flag & 0x03)
 23697  002AD6  0100               	movlb	0	; () banked
 23698  002AD8  51B0               	movf	sprintf@width& (0+255),w,b
 23699  002ADA  0100               	movlb	0	; () banked
 23700  002ADC  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 23701  002ADE  B4D8               	btfsc	status,2,c
 23702  002AE0  D015               	goto	l10830
 23703                           
 23704                           ; BSR set to: 0
 23705  002AE2  0E03               	movlw	3
 23706  002AE4  0100               	movlb	0	; () banked
 23707  002AE6  15B3               	andwf	sprintf@flag& (0+255),w,b
 23708  002AE8  0100               	movlb	0	; () banked
 23709  002AEA  6F99               	movwf	??_sprintf& (0+255),b
 23710  002AEC  0E00               	movlw	0
 23711  002AEE  0100               	movlb	0	; () banked
 23712  002AF0  15B4               	andwf	(sprintf@flag+1)& (0+255),w,b
 23713  002AF2  0100               	movlb	0	; () banked
 23714  002AF4  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 23715  002AF6  0100               	movlb	0	; () banked
 23716  002AF8  5199               	movf	??_sprintf& (0+255),w,b
 23717  002AFA  0100               	movlb	0	; () banked
 23718  002AFC  119A               	iorwf	(??_sprintf+1)& (0+255),w,b
 23719  002AFE  B4D8               	btfsc	status,2,c
 23720  002B00  D005               	goto	l10830
 23721                           
 23722                           ; BSR set to: 0
 23723                           ;doprnt.c: 1346: width--;
 23724  002B02  0100               	movlb	0	; () banked
 23725  002B04  07B0               	decf	sprintf@width& (0+255),f,b
 23726  002B06  A0D8               	btfss	status,0,c
 23727  002B08  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 23728  002B0A  D000               	goto	l10830
 23729  002B0C                     l10830:
 23730                           
 23731                           ; BSR set to: 0
 23732                           ;doprnt.c: 1348: if(flag & 0x4000) {
 23733  002B0C  0100               	movlb	0	; () banked
 23734  002B0E  ADB4               	btfss	(sprintf@flag+1)& (0+255),6,b
 23735  002B10  D01F               	goto	l10838
 23736                           
 23737                           ; BSR set to: 0
 23738                           ;doprnt.c: 1349: if(width > prec)
 23739  002B12  0100               	movlb	0	; () banked
 23740  002B14  51B0               	movf	sprintf@width& (0+255),w,b
 23741  002B16  0100               	movlb	0	; () banked
 23742  002B18  5DAE               	subwf	sprintf@prec& (0+255),w,b
 23743  002B1A  0100               	movlb	0	; () banked
 23744  002B1C  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
 23745  002B1E  0A80               	xorlw	128
 23746  002B20  0100               	movlb	0	; () banked
 23747  002B22  6F99               	movwf	??_sprintf& (0+255),b
 23748  002B24  0100               	movlb	0	; () banked
 23749  002B26  51B1               	movf	(sprintf@width+1)& (0+255),w,b
 23750  002B28  0A80               	xorlw	128
 23751  002B2A  0100               	movlb	0	; () banked
 23752  002B2C  5999               	subwfb	??_sprintf& (0+255),w,b
 23753  002B2E  B0D8               	btfsc	status,0,c
 23754  002B30  D009               	goto	l10836
 23755                           
 23756                           ; BSR set to: 0
 23757                           ;doprnt.c: 1350: width -= prec;
 23758  002B32  0100               	movlb	0	; () banked
 23759  002B34  51AE               	movf	sprintf@prec& (0+255),w,b
 23760  002B36  0100               	movlb	0	; () banked
 23761  002B38  5FB0               	subwf	sprintf@width& (0+255),f,b
 23762  002B3A  0100               	movlb	0	; () banked
 23763  002B3C  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
 23764  002B3E  0100               	movlb	0	; () banked
 23765  002B40  5BB1               	subwfb	(sprintf@width+1)& (0+255),f,b
 23766  002B42  D006               	goto	l10838
 23767  002B44                     l10836:
 23768                           
 23769                           ; BSR set to: 0
 23770                           ;doprnt.c: 1351: else
 23771                           ;doprnt.c: 1352: width = 0;
 23772  002B44  0E00               	movlw	0
 23773  002B46  0100               	movlb	0	; () banked
 23774  002B48  6FB1               	movwf	(sprintf@width+1)& (0+255),b
 23775  002B4A  0E00               	movlw	0
 23776  002B4C  6FB0               	movwf	sprintf@width& (0+255),b
 23777                           
 23778                           ; BSR set to: 0
 23779  002B4E  D000               	goto	l10838
 23780  002B50                     l10838:
 23781                           
 23782                           ; BSR set to: 0
 23783                           ;doprnt.c: 1353: }
 23784                           ;doprnt.c: 1357: if((flag & (
 23785                           ;doprnt.c: 1359: 0x04|
 23786                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 23787  002B50  0EC4               	movlw	196
 23788  002B52  0100               	movlb	0	; () banked
 23789  002B54  6F99               	movwf	??_sprintf& (0+255),b
 23790  002B56  0E08               	movlw	8
 23791  002B58  0100               	movlb	0	; () banked
 23792  002B5A  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 23793  002B5C  C0B3  F09B         	movff	sprintf@flag,??_sprintf+2
 23794  002B60  C0B4  F09C         	movff	sprintf@flag+1,??_sprintf+3
 23795  002B64  0100               	movlb	0	; () banked
 23796  002B66  5199               	movf	??_sprintf& (0+255),w,b
 23797  002B68  0100               	movlb	0	; () banked
 23798  002B6A  179B               	andwf	(??_sprintf+2)& (0+255),f,b
 23799  002B6C  0100               	movlb	0	; () banked
 23800  002B6E  519A               	movf	(??_sprintf+1)& (0+255),w,b
 23801  002B70  0100               	movlb	0	; () banked
 23802  002B72  179C               	andwf	(??_sprintf+3)& (0+255),f,b
 23803  002B74  0E40               	movlw	64
 23804  002B76  0100               	movlb	0	; () banked
 23805  002B78  199B               	xorwf	(??_sprintf+2)& (0+255),w,b
 23806  002B7A  E110               	bnz	l10844
 23807  002B7C  0E08               	movlw	8
 23808  002B7E  0100               	movlb	0	; () banked
 23809  002B80  199C               	xorwf	(??_sprintf+3)& (0+255),w,b
 23810  002B82  A4D8               	btfss	status,2,c
 23811  002B84  D00B               	goto	l10844
 23812                           
 23813                           ; BSR set to: 0
 23814                           ;doprnt.c: 1362: if(width)
 23815  002B86  0100               	movlb	0	; () banked
 23816  002B88  51B0               	movf	sprintf@width& (0+255),w,b
 23817  002B8A  0100               	movlb	0	; () banked
 23818  002B8C  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 23819  002B8E  B4D8               	btfsc	status,2,c
 23820  002B90  D037               	goto	l10852
 23821                           
 23822                           ; BSR set to: 0
 23823                           ;doprnt.c: 1363: width--;
 23824  002B92  0100               	movlb	0	; () banked
 23825  002B94  07B0               	decf	sprintf@width& (0+255),f,b
 23826  002B96  A0D8               	btfss	status,0,c
 23827  002B98  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 23828                           
 23829                           ; BSR set to: 0
 23830                           ;doprnt.c: 1364: } else
 23831  002B9A  D032               	goto	l10852
 23832  002B9C                     l10844:
 23833                           
 23834                           ; BSR set to: 0
 23835                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 23836  002B9C  0EC0               	movlw	192
 23837  002B9E  0100               	movlb	0	; () banked
 23838  002BA0  6F99               	movwf	??_sprintf& (0+255),b
 23839  002BA2  0E08               	movlw	8
 23840  002BA4  0100               	movlb	0	; () banked
 23841  002BA6  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 23842  002BA8  C0B3  F09B         	movff	sprintf@flag,??_sprintf+2
 23843  002BAC  C0B4  F09C         	movff	sprintf@flag+1,??_sprintf+3
 23844  002BB0  0100               	movlb	0	; () banked
 23845  002BB2  5199               	movf	??_sprintf& (0+255),w,b
 23846  002BB4  0100               	movlb	0	; () banked
 23847  002BB6  179B               	andwf	(??_sprintf+2)& (0+255),f,b
 23848  002BB8  0100               	movlb	0	; () banked
 23849  002BBA  519A               	movf	(??_sprintf+1)& (0+255),w,b
 23850  002BBC  0100               	movlb	0	; () banked
 23851  002BBE  179C               	andwf	(??_sprintf+3)& (0+255),f,b
 23852  002BC0  0E80               	movlw	128
 23853  002BC2  0100               	movlb	0	; () banked
 23854  002BC4  199B               	xorwf	(??_sprintf+2)& (0+255),w,b
 23855  002BC6  E11C               	bnz	l10852
 23856  002BC8  0E08               	movlw	8
 23857  002BCA  0100               	movlb	0	; () banked
 23858  002BCC  199C               	xorwf	(??_sprintf+3)& (0+255),w,b
 23859  002BCE  A4D8               	btfss	status,2,c
 23860  002BD0  D017               	goto	l10852
 23861                           
 23862                           ; BSR set to: 0
 23863                           ;doprnt.c: 1372: if(width > 2)
 23864  002BD2  0100               	movlb	0	; () banked
 23865  002BD4  BFB1               	btfsc	(sprintf@width+1)& (0+255),7,b
 23866  002BD6  D00E               	goto	l10850
 23867  002BD8  0100               	movlb	0	; () banked
 23868  002BDA  51B1               	movf	(sprintf@width+1)& (0+255),w,b
 23869  002BDC  E105               	bnz	u12950
 23870  002BDE  0E03               	movlw	3
 23871  002BE0  0100               	movlb	0	; () banked
 23872  002BE2  5DB0               	subwf	sprintf@width& (0+255),w,b
 23873  002BE4  A0D8               	btfss	status,0,c
 23874  002BE6  D006               	goto	l10850
 23875  002BE8                     u12950:
 23876                           
 23877                           ; BSR set to: 0
 23878                           ;doprnt.c: 1373: width -= 2;
 23879  002BE8  0100               	movlb	0	; () banked
 23880  002BEA  0EFE               	movlw	254
 23881  002BEC  27B0               	addwf	sprintf@width& (0+255),f,b
 23882  002BEE  0EFF               	movlw	255
 23883  002BF0  23B1               	addwfc	(sprintf@width+1)& (0+255),f,b
 23884  002BF2  D006               	goto	l10852
 23885  002BF4                     l10850:
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;doprnt.c: 1374: else
 23889                           ;doprnt.c: 1375: width = 0;
 23890  002BF4  0E00               	movlw	0
 23891  002BF6  0100               	movlb	0	; () banked
 23892  002BF8  6FB1               	movwf	(sprintf@width+1)& (0+255),b
 23893  002BFA  0E00               	movlw	0
 23894  002BFC  6FB0               	movwf	sprintf@width& (0+255),b
 23895                           
 23896                           ; BSR set to: 0
 23897                           
 23898                           ; BSR set to: 0
 23899  002BFE  D000               	goto	l10852
 23900  002C00                     l10852:
 23901                           
 23902                           ; BSR set to: 0
 23903                           ;doprnt.c: 1376: }
 23904                           ;doprnt.c: 1381: if(width > c)
 23905  002C00  0E80               	movlw	128
 23906  002C02  0100               	movlb	0	; () banked
 23907  002C04  BFB2               	btfsc	sprintf@c& (0+255),7,b
 23908  002C06  0E7F               	movlw	127
 23909  002C08  0100               	movlb	0	; () banked
 23910  002C0A  6F99               	movwf	??_sprintf& (0+255),b
 23911  002C0C  0100               	movlb	0	; () banked
 23912  002C0E  51B0               	movf	sprintf@width& (0+255),w,b
 23913  002C10  0100               	movlb	0	; () banked
 23914  002C12  5DB2               	subwf	sprintf@c& (0+255),w,b
 23915  002C14  0100               	movlb	0	; () banked
 23916  002C16  51B1               	movf	(sprintf@width+1)& (0+255),w,b
 23917  002C18  0A80               	xorlw	128
 23918  002C1A  0100               	movlb	0	; () banked
 23919  002C1C  5999               	subwfb	??_sprintf& (0+255),w,b
 23920  002C1E  B0D8               	btfsc	status,0,c
 23921  002C20  D00B               	goto	l10856
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;doprnt.c: 1382: width -= c;
 23925  002C22  0100               	movlb	0	; () banked
 23926  002C24  51B2               	movf	sprintf@c& (0+255),w,b
 23927  002C26  0100               	movlb	0	; () banked
 23928  002C28  5FB0               	subwf	sprintf@width& (0+255),f,b
 23929  002C2A  0E00               	movlw	0
 23930  002C2C  0100               	movlb	0	; () banked
 23931  002C2E  BFB2               	btfsc	sprintf@c& (0+255),7,b
 23932  002C30  0EFF               	movlw	255
 23933  002C32  0100               	movlb	0	; () banked
 23934  002C34  5BB1               	subwfb	(sprintf@width+1)& (0+255),f,b
 23935  002C36  D006               	goto	l10858
 23936  002C38                     l10856:
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;doprnt.c: 1383: else
 23940                           ;doprnt.c: 1384: width = 0;
 23941  002C38  0E00               	movlw	0
 23942  002C3A  0100               	movlb	0	; () banked
 23943  002C3C  6FB1               	movwf	(sprintf@width+1)& (0+255),b
 23944  002C3E  0E00               	movlw	0
 23945  002C40  6FB0               	movwf	sprintf@width& (0+255),b
 23946  002C42  D000               	goto	l10858
 23947  002C44                     l10858:
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;doprnt.c: 1387: if(flag & 0x04) {
 23951  002C44  0100               	movlb	0	; () banked
 23952  002C46  A5B3               	btfss	sprintf@flag& (0+255),2,b
 23953  002C48  D079               	goto	l10894
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;doprnt.c: 1392: if(flag & 0x03)
 23957  002C4A  0E03               	movlw	3
 23958  002C4C  0100               	movlb	0	; () banked
 23959  002C4E  15B3               	andwf	sprintf@flag& (0+255),w,b
 23960  002C50  0100               	movlb	0	; () banked
 23961  002C52  6F99               	movwf	??_sprintf& (0+255),b
 23962  002C54  0E00               	movlw	0
 23963  002C56  0100               	movlb	0	; () banked
 23964  002C58  15B4               	andwf	(sprintf@flag+1)& (0+255),w,b
 23965  002C5A  0100               	movlb	0	; () banked
 23966  002C5C  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 23967  002C5E  0100               	movlb	0	; () banked
 23968  002C60  5199               	movf	??_sprintf& (0+255),w,b
 23969  002C62  0100               	movlb	0	; () banked
 23970  002C64  119A               	iorwf	(??_sprintf+1)& (0+255),w,b
 23971  002C66  B4D8               	btfsc	status,2,c
 23972  002C68  D00A               	goto	l1904
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 23976  002C6A  C08B  FFD9         	movff	sprintf@sp,fsr2l
 23977  002C6E  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 23978  002C72  0E2D               	movlw	45
 23979  002C74  D00C               	goto	L18
 23980  002C76                     l10864:
 23981                           
 23982                           ; BSR set to: 0
 23983  002C76  0100               	movlb	0	; () banked
 23984  002C78  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 23985  002C7A  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 23986  002C7C  D044               	goto	l10886
 23987  002C7E                     l1904:
 23988                           
 23989                           ; BSR set to: 0
 23990                           ;doprnt.c: 1396: else
 23991                           ;doprnt.c: 1399: if(flag & 0x01)
 23992  002C7E  0100               	movlb	0	; () banked
 23993  002C80  A1B3               	btfss	sprintf@flag& (0+255),0,b
 23994  002C82  D007               	goto	l10870
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 23998  002C84  C08B  FFD9         	movff	sprintf@sp,fsr2l
 23999  002C88  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24000  002C8C  0E20               	movlw	32
 24001  002C8E                     L18:
 24002  002C8E  6EDF               	movwf	indf2,c
 24003  002C90  D7F2               	goto	l10864
 24004  002C92                     l10870:
 24005                           
 24006                           ; BSR set to: 0
 24007                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24008  002C92  0EC0               	movlw	192
 24009  002C94  0100               	movlb	0	; () banked
 24010  002C96  6F99               	movwf	??_sprintf& (0+255),b
 24011  002C98  0E08               	movlw	8
 24012  002C9A  0100               	movlb	0	; () banked
 24013  002C9C  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 24014  002C9E  C0B3  F09B         	movff	sprintf@flag,??_sprintf+2
 24015  002CA2  C0B4  F09C         	movff	sprintf@flag+1,??_sprintf+3
 24016  002CA6  0100               	movlb	0	; () banked
 24017  002CA8  5199               	movf	??_sprintf& (0+255),w,b
 24018  002CAA  0100               	movlb	0	; () banked
 24019  002CAC  179B               	andwf	(??_sprintf+2)& (0+255),f,b
 24020  002CAE  0100               	movlb	0	; () banked
 24021  002CB0  519A               	movf	(??_sprintf+1)& (0+255),w,b
 24022  002CB2  0100               	movlb	0	; () banked
 24023  002CB4  179C               	andwf	(??_sprintf+3)& (0+255),f,b
 24024  002CB6  0E80               	movlw	128
 24025  002CB8  0100               	movlb	0	; () banked
 24026  002CBA  199B               	xorwf	(??_sprintf+2)& (0+255),w,b
 24027  002CBC  E124               	bnz	l10886
 24028  002CBE  0E08               	movlw	8
 24029  002CC0  0100               	movlb	0	; () banked
 24030  002CC2  199C               	xorwf	(??_sprintf+3)& (0+255),w,b
 24031  002CC4  A4D8               	btfss	status,2,c
 24032  002CC6  D01F               	goto	l10886
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 24036  002CC8  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24037  002CCC  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24038  002CD0  0E30               	movlw	48
 24039  002CD2  6EDF               	movwf	indf2,c
 24040                           
 24041                           ; BSR set to: 0
 24042  002CD4  0100               	movlb	0	; () banked
 24043  002CD6  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24044  002CD8  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24045                           
 24046                           ; BSR set to: 0
 24047                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 24048  002CDA  0100               	movlb	0	; () banked
 24049  002CDC  BBB3               	btfsc	sprintf@flag& (0+255),5,b
 24050  002CDE  D005               	goto	l10880
 24051                           
 24052                           ; BSR set to: 0
 24053  002CE0  0E00               	movlw	0
 24054  002CE2  0100               	movlb	0	; () banked
 24055  002CE4  6FA1               	movwf	(_sprintf$2904+1)& (0+255),b
 24056  002CE6  0E78               	movlw	120
 24057  002CE8  D004               	goto	L19
 24058  002CEA                     l10880:
 24059                           
 24060                           ; BSR set to: 0
 24061  002CEA  0E00               	movlw	0
 24062  002CEC  0100               	movlb	0	; () banked
 24063  002CEE  6FA1               	movwf	(_sprintf$2904+1)& (0+255),b
 24064  002CF0  0E58               	movlw	88
 24065  002CF2                     L19:
 24066  002CF2  6FA0               	movwf	_sprintf$2904& (0+255),b
 24067  002CF4  D000               	goto	l10882
 24068  002CF6                     l10882:
 24069                           
 24070                           ; BSR set to: 0
 24071  002CF6  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24072  002CFA  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24073  002CFE  C0A0  FFDF         	movff	_sprintf$2904,indf2
 24074  002D02  D7B9               	goto	l10864
 24075                           
 24076                           ; BSR set to: 0
 24077                           
 24078                           ; BSR set to: 0
 24079                           
 24080                           ; BSR set to: 0
 24081  002D04  D000               	goto	l10886
 24082  002D06                     l10886:
 24083                           
 24084                           ; BSR set to: 0
 24085                           ;doprnt.c: 1412: }
 24086                           ;doprnt.c: 1415: if(width)
 24087  002D06  0100               	movlb	0	; () banked
 24088  002D08  51B0               	movf	sprintf@width& (0+255),w,b
 24089  002D0A  0100               	movlb	0	; () banked
 24090  002D0C  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 24091  002D0E  B4D8               	btfsc	status,2,c
 24092  002D10  D191               	goto	l10958
 24093  002D12                     l10888:
 24094                           
 24095                           ; BSR set to: 0
 24096                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 24097  002D12  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24098  002D16  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24099  002D1A  0E30               	movlw	48
 24100  002D1C  6EDF               	movwf	indf2,c
 24101                           
 24102                           ; BSR set to: 0
 24103  002D1E  0100               	movlb	0	; () banked
 24104  002D20  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24105  002D22  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;doprnt.c: 1418: while(--width);
 24109  002D24  0100               	movlb	0	; () banked
 24110  002D26  07B0               	decf	sprintf@width& (0+255),f,b
 24111  002D28  A0D8               	btfss	status,0,c
 24112  002D2A  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 24113  002D2C  0100               	movlb	0	; () banked
 24114  002D2E  51B0               	movf	sprintf@width& (0+255),w,b
 24115  002D30  0100               	movlb	0	; () banked
 24116  002D32  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 24117  002D34  B4D8               	btfsc	status,2,c
 24118  002D36  D17E               	goto	l10958
 24119  002D38  D7EC               	goto	l10888
 24120                           
 24121                           ; BSR set to: 0
 24122                           ;doprnt.c: 1420: } else
 24123                           
 24124                           ; BSR set to: 0
 24125  002D3A  D17C               	goto	l10958
 24126  002D3C                     l10894:
 24127                           
 24128                           ; BSR set to: 0
 24129                           ;doprnt.c: 1422: {
 24130                           ;doprnt.c: 1424: if(width
 24131                           ;doprnt.c: 1426: && !(flag & 0x08)
 24132                           ;doprnt.c: 1428: )
 24133  002D3C  0100               	movlb	0	; () banked
 24134  002D3E  51B0               	movf	sprintf@width& (0+255),w,b
 24135  002D40  0100               	movlb	0	; () banked
 24136  002D42  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 24137  002D44  B4D8               	btfsc	status,2,c
 24138  002D46  D018               	goto	l10904
 24139                           
 24140                           ; BSR set to: 0
 24141  002D48  0100               	movlb	0	; () banked
 24142  002D4A  B7B3               	btfsc	sprintf@flag& (0+255),3,b
 24143  002D4C  D015               	goto	l10904
 24144  002D4E                     l10898:
 24145                           
 24146                           ; BSR set to: 0
 24147                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 24148  002D4E  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24149  002D52  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24150  002D56  0E20               	movlw	32
 24151  002D58  6EDF               	movwf	indf2,c
 24152                           
 24153                           ; BSR set to: 0
 24154  002D5A  0100               	movlb	0	; () banked
 24155  002D5C  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24156  002D5E  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24157                           
 24158                           ; BSR set to: 0
 24159                           ;doprnt.c: 1431: while(--width);
 24160  002D60  0100               	movlb	0	; () banked
 24161  002D62  07B0               	decf	sprintf@width& (0+255),f,b
 24162  002D64  A0D8               	btfss	status,0,c
 24163  002D66  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 24164  002D68  0100               	movlb	0	; () banked
 24165  002D6A  51B0               	movf	sprintf@width& (0+255),w,b
 24166  002D6C  0100               	movlb	0	; () banked
 24167  002D6E  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 24168  002D70  B4D8               	btfsc	status,2,c
 24169  002D72  D002               	goto	l10904
 24170  002D74  D7EC               	goto	l10898
 24171                           
 24172                           ; BSR set to: 0
 24173  002D76  D000               	goto	l10904
 24174  002D78                     l10904:
 24175                           
 24176                           ; BSR set to: 0
 24177                           ;doprnt.c: 1438: if(flag & 0x03)
 24178  002D78  0E03               	movlw	3
 24179  002D7A  0100               	movlb	0	; () banked
 24180  002D7C  15B3               	andwf	sprintf@flag& (0+255),w,b
 24181  002D7E  0100               	movlb	0	; () banked
 24182  002D80  6F99               	movwf	??_sprintf& (0+255),b
 24183  002D82  0E00               	movlw	0
 24184  002D84  0100               	movlb	0	; () banked
 24185  002D86  15B4               	andwf	(sprintf@flag+1)& (0+255),w,b
 24186  002D88  0100               	movlb	0	; () banked
 24187  002D8A  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 24188  002D8C  0100               	movlb	0	; () banked
 24189  002D8E  5199               	movf	??_sprintf& (0+255),w,b
 24190  002D90  0100               	movlb	0	; () banked
 24191  002D92  119A               	iorwf	(??_sprintf+1)& (0+255),w,b
 24192  002D94  B4D8               	btfsc	status,2,c
 24193  002D96  D00A               	goto	l1920
 24194                           
 24195                           ; BSR set to: 0
 24196                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 24197  002D98  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24198  002D9C  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24199  002DA0  0E2D               	movlw	45
 24200  002DA2  D00C               	goto	L20
 24201  002DA4                     l10908:
 24202                           
 24203                           ; BSR set to: 0
 24204  002DA4  0100               	movlb	0	; () banked
 24205  002DA6  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24206  002DA8  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24207  002DAA  D00B               	goto	l10914
 24208  002DAC                     l1920:
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;doprnt.c: 1443: else if(flag & 0x01)
 24212  002DAC  0100               	movlb	0	; () banked
 24213  002DAE  A1B3               	btfss	sprintf@flag& (0+255),0,b
 24214  002DB0  D008               	goto	l10914
 24215                           
 24216                           ; BSR set to: 0
 24217                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 24218  002DB2  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24219  002DB6  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24220  002DBA  0E20               	movlw	32
 24221  002DBC                     L20:
 24222  002DBC  6EDF               	movwf	indf2,c
 24223  002DBE  D7F2               	goto	l10908
 24224                           
 24225                           ; BSR set to: 0
 24226                           
 24227                           ; BSR set to: 0
 24228  002DC0  D000               	goto	l10914
 24229  002DC2                     l10914:
 24230                           
 24231                           ; BSR set to: 0
 24232                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 24233  002DC2  0EC0               	movlw	192
 24234  002DC4  0100               	movlb	0	; () banked
 24235  002DC6  6F99               	movwf	??_sprintf& (0+255),b
 24236  002DC8  0E08               	movlw	8
 24237  002DCA  0100               	movlb	0	; () banked
 24238  002DCC  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 24239  002DCE  C0B3  F09B         	movff	sprintf@flag,??_sprintf+2
 24240  002DD2  C0B4  F09C         	movff	sprintf@flag+1,??_sprintf+3
 24241  002DD6  0100               	movlb	0	; () banked
 24242  002DD8  5199               	movf	??_sprintf& (0+255),w,b
 24243  002DDA  0100               	movlb	0	; () banked
 24244  002DDC  179B               	andwf	(??_sprintf+2)& (0+255),f,b
 24245  002DDE  0100               	movlb	0	; () banked
 24246  002DE0  519A               	movf	(??_sprintf+1)& (0+255),w,b
 24247  002DE2  0100               	movlb	0	; () banked
 24248  002DE4  179C               	andwf	(??_sprintf+3)& (0+255),f,b
 24249  002DE6  0E40               	movlw	64
 24250  002DE8  0100               	movlb	0	; () banked
 24251  002DEA  199B               	xorwf	(??_sprintf+2)& (0+255),w,b
 24252  002DEC  E10C               	bnz	l10920
 24253  002DEE  0E08               	movlw	8
 24254  002DF0  0100               	movlb	0	; () banked
 24255  002DF2  199C               	xorwf	(??_sprintf+3)& (0+255),w,b
 24256  002DF4  A4D8               	btfss	status,2,c
 24257  002DF6  D007               	goto	l10920
 24258                           
 24259                           ; BSR set to: 0
 24260                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 24261  002DF8  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24262  002DFC  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24263  002E00  0E30               	movlw	48
 24264  002E02  6EDF               	movwf	indf2,c
 24265  002E04  D113               	goto	l10956
 24266  002E06                     l10920:
 24267                           
 24268                           ; BSR set to: 0
 24269                           ;doprnt.c: 1450: else
 24270                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24271  002E06  0EC0               	movlw	192
 24272  002E08  0100               	movlb	0	; () banked
 24273  002E0A  6F99               	movwf	??_sprintf& (0+255),b
 24274  002E0C  0E08               	movlw	8
 24275  002E0E  0100               	movlb	0	; () banked
 24276  002E10  6F9A               	movwf	(??_sprintf+1)& (0+255),b
 24277  002E12  C0B3  F09B         	movff	sprintf@flag,??_sprintf+2
 24278  002E16  C0B4  F09C         	movff	sprintf@flag+1,??_sprintf+3
 24279  002E1A  0100               	movlb	0	; () banked
 24280  002E1C  5199               	movf	??_sprintf& (0+255),w,b
 24281  002E1E  0100               	movlb	0	; () banked
 24282  002E20  179B               	andwf	(??_sprintf+2)& (0+255),f,b
 24283  002E22  0100               	movlb	0	; () banked
 24284  002E24  519A               	movf	(??_sprintf+1)& (0+255),w,b
 24285  002E26  0100               	movlb	0	; () banked
 24286  002E28  179C               	andwf	(??_sprintf+3)& (0+255),f,b
 24287  002E2A  0E80               	movlw	128
 24288  002E2C  0100               	movlb	0	; () banked
 24289  002E2E  199B               	xorwf	(??_sprintf+2)& (0+255),w,b
 24290  002E30  E104               	bnz	u13101
 24291  002E32  0E08               	movlw	8
 24292  002E34  0100               	movlb	0	; () banked
 24293  002E36  199C               	xorwf	(??_sprintf+3)& (0+255),w,b
 24294  002E38  A4D8               	btfss	status,2,c
 24295  002E3A                     u13101:
 24296  002E3A  D0FC               	goto	l10958
 24297                           
 24298                           ; BSR set to: 0
 24299                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 24300  002E3C  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24301  002E40  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24302  002E44  0E30               	movlw	48
 24303  002E46  6EDF               	movwf	indf2,c
 24304                           
 24305                           ; BSR set to: 0
 24306  002E48  0100               	movlb	0	; () banked
 24307  002E4A  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24308  002E4C  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24309                           
 24310                           ; BSR set to: 0
 24311                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 24312  002E4E  0100               	movlb	0	; () banked
 24313  002E50  BBB3               	btfsc	sprintf@flag& (0+255),5,b
 24314  002E52  D005               	goto	l10930
 24315                           
 24316                           ; BSR set to: 0
 24317  002E54  0E00               	movlw	0
 24318  002E56  0100               	movlb	0	; () banked
 24319  002E58  6FA3               	movwf	(_sprintf$2905+1)& (0+255),b
 24320  002E5A  0E78               	movlw	120
 24321  002E5C  D004               	goto	L21
 24322  002E5E                     l10930:
 24323                           
 24324                           ; BSR set to: 0
 24325  002E5E  0E00               	movlw	0
 24326  002E60  0100               	movlb	0	; () banked
 24327  002E62  6FA3               	movwf	(_sprintf$2905+1)& (0+255),b
 24328  002E64  0E58               	movlw	88
 24329  002E66                     L21:
 24330  002E66  6FA2               	movwf	_sprintf$2905& (0+255),b
 24331  002E68  D000               	goto	l10932
 24332  002E6A                     l10932:
 24333                           
 24334                           ; BSR set to: 0
 24335  002E6A  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24336  002E6E  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24337  002E72  C0A2  FFDF         	movff	_sprintf$2905,indf2
 24338  002E76  D0DA               	goto	l10956
 24339                           
 24340                           ; BSR set to: 0
 24341                           ;doprnt.c: 1466: }
 24342                           ;doprnt.c: 1469: }
 24343                           ;doprnt.c: 1474: while(prec--) {
 24344                           
 24345                           ; BSR set to: 0
 24346                           
 24347                           ; BSR set to: 0
 24348                           
 24349                           ; BSR set to: 0
 24350  002E78  D0DD               	goto	l10958
 24351                           
 24352                           ; BSR set to: 0
 24353                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 24354  002E7A  D0C2               	goto	l10952
 24355                           
 24356                           ; BSR set to: 0
 24357                           
 24358                           ;doprnt.c: 1478: {
 24359                           ;doprnt.c: 1483: case 0x00:
 24360  002E7C  D000               	goto	l10936
 24361  002E7E                     l10936:
 24362                           
 24363                           ; BSR set to: 0
 24364                           ;doprnt.c: 1486: case 0xC0:
 24365                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 24366  002E7E  C0AE  F099         	movff	sprintf@prec,??_sprintf
 24367  002E82  C0AF  F09A         	movff	sprintf@prec+1,??_sprintf+1
 24368  002E86  0100               	movlb	0	; () banked
 24369  002E88  90D8               	bcf	status,0,c
 24370  002E8A  3799               	rlcf	??_sprintf& (0+255),f,b
 24371  002E8C  379A               	rlcf	(??_sprintf+1)& (0+255),f,b
 24372  002E8E  0100               	movlb	0	; () banked
 24373  002E90  90D8               	bcf	status,0,c
 24374  002E92  3799               	rlcf	??_sprintf& (0+255),f,b
 24375  002E94  379A               	rlcf	(??_sprintf+1)& (0+255),f,b
 24376  002E96  0E1F               	movlw	low _dpowers
 24377  002E98  0100               	movlb	0	; () banked
 24378  002E9A  2599               	addwf	??_sprintf& (0+255),w,b
 24379  002E9C  6EF6               	movwf	tblptrl,c
 24380  002E9E  0EF8               	movlw	high _dpowers
 24381  002EA0  219A               	addwfc	(??_sprintf+1)& (0+255),w,b
 24382  002EA2  6EF7               	movwf	tblptrh,c
 24383  002EA4                     	if	0	;There are less than 3 active tblptr bytes
 24384  002EA4                     	endif
 24385  002EA4  0009               	tblrd		*+
 24386  002EA6  CFF5 F079          	movff	tablat,___lldiv@divisor
 24387  002EAA  0009               	tblrd		*+
 24388  002EAC  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
 24389  002EB0  0009               	tblrd		*+
 24390  002EB2  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
 24391  002EB6  000A               	tblrd		*-
 24392  002EB8  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
 24393  002EBC  C0AA  F075         	movff	sprintf@val,___lldiv@dividend
 24394  002EC0  C0AB  F076         	movff	sprintf@val+1,___lldiv@dividend+1
 24395  002EC4  C0AC  F077         	movff	sprintf@val+2,___lldiv@dividend+2
 24396  002EC8  C0AD  F078         	movff	sprintf@val+3,___lldiv@dividend+3
 24397  002ECC  EC61  F032         	call	___lldiv	;wreg free
 24398  002ED0  C075  F082         	movff	?___lldiv,___llmod@dividend
 24399  002ED4  C076  F083         	movff	?___lldiv+1,___llmod@dividend+1
 24400  002ED8  C077  F084         	movff	?___lldiv+2,___llmod@dividend+2
 24401  002EDC  C078  F085         	movff	?___lldiv+3,___llmod@dividend+3
 24402  002EE0  0E0A               	movlw	10
 24403  002EE2  0100               	movlb	0	; () banked
 24404  002EE4  6F86               	movwf	___llmod@divisor& (0+255),b
 24405  002EE6  0E00               	movlw	0
 24406  002EE8  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
 24407  002EEA  0E00               	movlw	0
 24408  002EEC  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
 24409  002EEE  0E00               	movlw	0
 24410  002EF0  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
 24411  002EF2  EC2B  F034         	call	___llmod	;wreg free
 24412  002EF6  0100               	movlb	0	; () banked
 24413  002EF8  5182               	movf	?___llmod& (0+255),w,b
 24414  002EFA  D07E               	goto	L22
 24415  002EFC                     l10938:
 24416                           
 24417                           ; BSR set to: 0
 24418                           ;doprnt.c: 1499: {
 24419                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 24420  002EFC  C0AA  F075         	movff	sprintf@val,___lldiv@dividend
 24421  002F00  C0AB  F076         	movff	sprintf@val+1,___lldiv@dividend+1
 24422  002F04  C0AC  F077         	movff	sprintf@val+2,___lldiv@dividend+2
 24423  002F08  C0AD  F078         	movff	sprintf@val+3,___lldiv@dividend+3
 24424  002F0C  C0AE  F099         	movff	sprintf@prec,??_sprintf
 24425  002F10  C0AF  F09A         	movff	sprintf@prec+1,??_sprintf+1
 24426  002F14  0100               	movlb	0	; () banked
 24427  002F16  90D8               	bcf	status,0,c
 24428  002F18  3799               	rlcf	??_sprintf& (0+255),f,b
 24429  002F1A  379A               	rlcf	(??_sprintf+1)& (0+255),f,b
 24430  002F1C  0100               	movlb	0	; () banked
 24431  002F1E  90D8               	bcf	status,0,c
 24432  002F20  3799               	rlcf	??_sprintf& (0+255),f,b
 24433  002F22  379A               	rlcf	(??_sprintf+1)& (0+255),f,b
 24434  002F24  0E47               	movlw	low _hexpowers
 24435  002F26  0100               	movlb	0	; () banked
 24436  002F28  2599               	addwf	??_sprintf& (0+255),w,b
 24437  002F2A  6EF6               	movwf	tblptrl,c
 24438  002F2C  0EF8               	movlw	high _hexpowers
 24439  002F2E  219A               	addwfc	(??_sprintf+1)& (0+255),w,b
 24440  002F30  6EF7               	movwf	tblptrh,c
 24441  002F32                     	if	0	;There are less than 3 active tblptr bytes
 24442  002F32                     	endif
 24443  002F32  0009               	tblrd		*+
 24444  002F34  CFF5 F079          	movff	tablat,___lldiv@divisor
 24445  002F38  0009               	tblrd		*+
 24446  002F3A  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
 24447  002F3E  0009               	tblrd		*+
 24448  002F40  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
 24449  002F44  000A               	tblrd		*-
 24450  002F46  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
 24451  002F4A  EC61  F032         	call	___lldiv	;wreg free
 24452  002F4E  0100               	movlb	0	; () banked
 24453  002F50  5175               	movf	?___lldiv& (0+255),w,b
 24454  002F52  0B0F               	andlw	15
 24455  002F54  0100               	movlb	0	; () banked
 24456  002F56  6F9D               	movwf	sprintf@idx& (0+255),b
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 24460  002F58  0100               	movlb	0	; () banked
 24461  002F5A  BBB3               	btfsc	sprintf@flag& (0+255),5,b
 24462  002F5C  D005               	goto	l10944
 24463                           
 24464                           ; BSR set to: 0
 24465  002F5E  0EDC               	movlw	low STR_103
 24466  002F60  0100               	movlb	0	; () banked
 24467  002F62  6FA4               	movwf	_sprintf$2911& (0+255),b
 24468  002F64  0EFE               	movlw	high STR_103
 24469  002F66  D004               	goto	L23
 24470  002F68                     l10944:
 24471                           
 24472                           ; BSR set to: 0
 24473  002F68  0ECB               	movlw	low STR_102
 24474  002F6A  0100               	movlb	0	; () banked
 24475  002F6C  6FA4               	movwf	_sprintf$2911& (0+255),b
 24476  002F6E  0EFE               	movlw	high STR_102
 24477  002F70                     L23:
 24478  002F70  0100               	movlb	0	; () banked
 24479  002F72  6FA5               	movwf	(_sprintf$2911+1)& (0+255),b
 24480  002F74  D000               	goto	l10946
 24481  002F76                     l10946:
 24482                           
 24483                           ; BSR set to: 0
 24484  002F76  0100               	movlb	0	; () banked
 24485  002F78  519D               	movf	sprintf@idx& (0+255),w,b
 24486  002F7A  0D01               	mullw	1
 24487  002F7C  C0A4  F099         	movff	_sprintf$2911,??_sprintf
 24488  002F80  C0A5  F09A         	movff	_sprintf$2911+1,??_sprintf+1
 24489  002F84  50F3               	movf	prodl,w,c
 24490  002F86  0100               	movlb	0	; () banked
 24491  002F88  2799               	addwf	??_sprintf& (0+255),f,b
 24492  002F8A  50F4               	movf	prodh,w,c
 24493  002F8C  0100               	movlb	0	; () banked
 24494  002F8E  239A               	addwfc	(??_sprintf+1)& (0+255),f,b
 24495  002F90  C099  FFF6         	movff	??_sprintf,tblptrl
 24496  002F94  C09A  FFF7         	movff	??_sprintf+1,tblptrh
 24497  002F98                     	if	0	;tblptru may be non-zero
 24498  002F98                     	endif
 24499  002F98                     	if	0	;tblptru may be non-zero
 24500  002F98                     	endif
 24501  002F98  0008               	tblrd		*
 24502  002F9A  CFF5 F0B2          	movff	tablat,sprintf@c
 24503                           
 24504                           ;doprnt.c: 1508: }
 24505                           ;doprnt.c: 1510: break;
 24506  002F9E  D040               	goto	l10954
 24507  002FA0                     l10948:
 24508                           
 24509                           ; BSR set to: 0
 24510                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 24511  002FA0  C0AA  F075         	movff	sprintf@val,___lldiv@dividend
 24512  002FA4  C0AB  F076         	movff	sprintf@val+1,___lldiv@dividend+1
 24513  002FA8  C0AC  F077         	movff	sprintf@val+2,___lldiv@dividend+2
 24514  002FAC  C0AD  F078         	movff	sprintf@val+3,___lldiv@dividend+3
 24515  002FB0  C0AE  F099         	movff	sprintf@prec,??_sprintf
 24516  002FB4  C0AF  F09A         	movff	sprintf@prec+1,??_sprintf+1
 24517  002FB8  0100               	movlb	0	; () banked
 24518  002FBA  90D8               	bcf	status,0,c
 24519  002FBC  3799               	rlcf	??_sprintf& (0+255),f,b
 24520  002FBE  379A               	rlcf	(??_sprintf+1)& (0+255),f,b
 24521  002FC0  0100               	movlb	0	; () banked
 24522  002FC2  90D8               	bcf	status,0,c
 24523  002FC4  3799               	rlcf	??_sprintf& (0+255),f,b
 24524  002FC6  379A               	rlcf	(??_sprintf+1)& (0+255),f,b
 24525  002FC8  0EEF               	movlw	low _octpowers
 24526  002FCA  0100               	movlb	0	; () banked
 24527  002FCC  2599               	addwf	??_sprintf& (0+255),w,b
 24528  002FCE  6EF6               	movwf	tblptrl,c
 24529  002FD0  0EF7               	movlw	high _octpowers
 24530  002FD2  219A               	addwfc	(??_sprintf+1)& (0+255),w,b
 24531  002FD4  6EF7               	movwf	tblptrh,c
 24532  002FD6                     	if	0	;There are less than 3 active tblptr bytes
 24533  002FD6                     	endif
 24534  002FD6  0009               	tblrd		*+
 24535  002FD8  CFF5 F079          	movff	tablat,___lldiv@divisor
 24536  002FDC  0009               	tblrd		*+
 24537  002FDE  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
 24538  002FE2  0009               	tblrd		*+
 24539  002FE4  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
 24540  002FE8  000A               	tblrd		*-
 24541  002FEA  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
 24542  002FEE  EC61  F032         	call	___lldiv	;wreg free
 24543  002FF2  0100               	movlb	0	; () banked
 24544  002FF4  5175               	movf	?___lldiv& (0+255),w,b
 24545  002FF6  0B07               	andlw	7
 24546  002FF8                     L22:
 24547  002FF8  0F30               	addlw	48
 24548  002FFA  0100               	movlb	0	; () banked
 24549  002FFC  6FB2               	movwf	sprintf@c& (0+255),b
 24550                           
 24551                           ; BSR set to: 0
 24552                           ;doprnt.c: 1523: }
 24553                           
 24554                           ;doprnt.c: 1520: break;
 24555  002FFE  D010               	goto	l10954
 24556  003000                     l10952:
 24557                           
 24558                           ; BSR set to: 0
 24559  003000  0100               	movlb	0	; () banked
 24560  003002  51B3               	movf	sprintf@flag& (0+255),w,b
 24561  003004  0BC0               	andlw	192
 24562                           
 24563                           ; Switch size 1, requested type "space"
 24564                           ; Number of cases is 4, Range of values is 0 to 192
 24565                           ; switch strategies available:
 24566                           ; Name         Instructions Cycles
 24567                           ; simple_byte           13     7 (average)
 24568                           ;	Chosen strategy is simple_byte
 24569  003006  0A00               	xorlw	0	; case 0
 24570  003008  B4D8               	btfsc	status,2,c
 24571  00300A  D739               	goto	l10936
 24572  00300C  0A40               	xorlw	64	; case 64
 24573  00300E  B4D8               	btfsc	status,2,c
 24574  003010  D7C7               	goto	l10948
 24575  003012  0AC0               	xorlw	192	; case 128
 24576  003014  B4D8               	btfsc	status,2,c
 24577  003016  D772               	goto	l10938
 24578  003018  0A40               	xorlw	64	; case 192
 24579  00301A  B4D8               	btfsc	status,2,c
 24580  00301C  D730               	goto	l10936
 24581  00301E  D000               	goto	l10954
 24582  003020                     l10954:
 24583                           
 24584                           ; BSR set to: 0
 24585                           ;doprnt.c: 1524: ((*sp++ = (c)));
 24586  003020  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24587  003024  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24588  003028  C0B2  FFDF         	movff	sprintf@c,indf2
 24589  00302C                     l10956:
 24590                           
 24591                           ; BSR set to: 0
 24592  00302C  0100               	movlb	0	; () banked
 24593  00302E  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24594  003030  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24595  003032  D000               	goto	l10958
 24596  003034                     l10958:
 24597                           
 24598                           ; BSR set to: 0
 24599  003034  0100               	movlb	0	; () banked
 24600  003036  07AE               	decf	sprintf@prec& (0+255),f,b
 24601  003038  A0D8               	btfss	status,0,c
 24602  00303A  07AF               	decf	(sprintf@prec+1)& (0+255),f,b
 24603  00303C  0100               	movlb	0	; () banked
 24604  00303E  29AE               	incf	sprintf@prec& (0+255),w,b
 24605  003040  E1DF               	bnz	l10952
 24606  003042  0100               	movlb	0	; () banked
 24607  003044  29AF               	incf	(sprintf@prec+1)& (0+255),w,b
 24608  003046  A4D8               	btfss	status,2,c
 24609  003048  D7DB               	goto	l10952
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;doprnt.c: 1525: }
 24613                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 24614  00304A  0100               	movlb	0	; () banked
 24615  00304C  A7B3               	btfss	sprintf@flag& (0+255),3,b
 24616  00304E  D021               	goto	l10968
 24617                           
 24618                           ; BSR set to: 0
 24619  003050  0100               	movlb	0	; () banked
 24620  003052  BFB1               	btfsc	(sprintf@width+1)& (0+255),7,b
 24621  003054  D01E               	goto	l10968
 24622  003056  0100               	movlb	0	; () banked
 24623  003058  51B1               	movf	(sprintf@width+1)& (0+255),w,b
 24624  00305A  E106               	bnz	l10962
 24625  00305C  0100               	movlb	0	; () banked
 24626  00305E  05B0               	decf	sprintf@width& (0+255),w,b
 24627  003060  B0D8               	btfsc	status,0,c
 24628  003062  D002               	goto	l10962
 24629  003064  D016               	goto	l10968
 24630  003066  D000               	goto	l10962
 24631  003068                     l10962:
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 24635  003068  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24636  00306C  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24637  003070  0E20               	movlw	32
 24638  003072  6EDF               	movwf	indf2,c
 24639                           
 24640                           ; BSR set to: 0
 24641  003074  0100               	movlb	0	; () banked
 24642  003076  4B8B               	infsnz	sprintf@sp& (0+255),f,b
 24643  003078  2B8C               	incf	(sprintf@sp+1)& (0+255),f,b
 24644                           
 24645                           ; BSR set to: 0
 24646                           ;doprnt.c: 1531: while(--width);
 24647  00307A  0100               	movlb	0	; () banked
 24648  00307C  07B0               	decf	sprintf@width& (0+255),f,b
 24649  00307E  A0D8               	btfss	status,0,c
 24650  003080  07B1               	decf	(sprintf@width+1)& (0+255),f,b
 24651  003082  0100               	movlb	0	; () banked
 24652  003084  51B0               	movf	sprintf@width& (0+255),w,b
 24653  003086  0100               	movlb	0	; () banked
 24654  003088  11B1               	iorwf	(sprintf@width+1)& (0+255),w,b
 24655  00308A  B4D8               	btfsc	status,2,c
 24656  00308C  D002               	goto	l10968
 24657  00308E  D7EC               	goto	l10962
 24658                           
 24659                           ; BSR set to: 0
 24660                           
 24661                           ; BSR set to: 0
 24662  003090  D000               	goto	l10968
 24663  003092                     l10968:
 24664                           
 24665                           ; BSR set to: 0
 24666  003092  C08D  FFF6         	movff	sprintf@f,tblptrl
 24667  003096  C08E  FFF7         	movff	sprintf@f+1,tblptrh
 24668  00309A  0100               	movlb	0	; () banked
 24669  00309C  4B8D               	infsnz	sprintf@f& (0+255),f,b
 24670  00309E  2B8E               	incf	(sprintf@f+1)& (0+255),f,b
 24671  0030A0                     	if	0	;tblptru may be non-zero
 24672  0030A0                     	endif
 24673  0030A0                     	if	0	;tblptru may be non-zero
 24674  0030A0                     	endif
 24675  0030A0  0008               	tblrd		*
 24676  0030A2  CFF5 F0B2          	movff	tablat,sprintf@c
 24677  0030A6  0100               	movlb	0	; () banked
 24678  0030A8  51B2               	movf	sprintf@c& (0+255),w,b
 24679  0030AA  B4D8               	btfsc	status,2,c
 24680  0030AC  D003               	goto	l10970
 24681  0030AE  EF45  F012         	goto	l10616
 24682                           
 24683                           ; BSR set to: 0
 24684  0030B2  D000               	goto	l10970
 24685  0030B4                     l10970:
 24686                           
 24687                           ; BSR set to: 0
 24688                           ;doprnt.c: 1538: *sp = 0;
 24689  0030B4  C08B  FFD9         	movff	sprintf@sp,fsr2l
 24690  0030B8  C08C  FFDA         	movff	sprintf@sp+1,fsr2h
 24691  0030BC  0E00               	movlw	0
 24692  0030BE  6EDF               	movwf	indf2,c
 24693  0030C0  0012               	return	
 24694                           
 24695                           ; BSR set to: 0
 24696                           
 24697                           ; BSR set to: 0
 24698                           ;doprnt.c: 1540: return 0;
 24699                           ;	Return value of _sprintf is never used
 24700  0030C2  0012               	return		;funcret
 24701  0030C4                     __end_of_sprintf:
 24702                           	opt stack 0
 24703                           tblptru	equ	0xFF8
 24704                           tblptrh	equ	0xFF7
 24705                           tblptrl	equ	0xFF6
 24706                           tablat	equ	0xFF5
 24707                           prodh	equ	0xFF4
 24708                           prodl	equ	0xFF3
 24709                           intcon	equ	0xFF2
 24710                           intcon2	equ	0xFF1
 24711                           indf0	equ	0xFEF
 24712                           postinc0	equ	0xFEE
 24713                           plusw0	equ	0xFEB
 24714                           fsr0h	equ	0xFEA
 24715                           fsr0l	equ	0xFE9
 24716                           wreg	equ	0xFE8
 24717                           indf1	equ	0xFE7
 24718                           postdec1	equ	0xFE5
 24719                           fsr1h	equ	0xFE2
 24720                           fsr1l	equ	0xFE1
 24721                           indf2	equ	0xFDF
 24722                           postinc2	equ	0xFDE
 24723                           postdec2	equ	0xFDD
 24724                           plusw2	equ	0xFDB
 24725                           fsr2h	equ	0xFDA
 24726                           fsr2l	equ	0xFD9
 24727                           status	equ	0xFD8
 24728                           
 24729 ;; *************** function _isdigit *****************
 24730 ;; Defined at:
 24731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 24732 ;; Parameters:    Size  Location     Type
 24733 ;;  c               1    wreg     unsigned char 
 24734 ;; Auto vars:     Size  Location     Type
 24735 ;;  c               1   23[BANK0 ] unsigned char 
 24736 ;; Return value:  Size  Location     Type
 24737 ;;		None               void
 24738 ;; Registers used:
 24739 ;;		wreg, status,2, status,0
 24740 ;; Tracked objects:
 24741 ;;		On entry : 0/0
 24742 ;;		On exit  : 0/0
 24743 ;;		Unchanged: 0/0
 24744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24746 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24748 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24749 ;;Total ram usage:        3 bytes
 24750 ;; Hardware stack levels used:    1
 24751 ;; Hardware stack levels required when called:    6
 24752 ;; This function calls:
 24753 ;;		Nothing
 24754 ;; This function is called by:
 24755 ;;		_sprintf
 24756 ;; This function uses a non-reentrant model
 24757 ;;
 24758                           
 24759                           	psect	text64
 24760  0075F2                     __ptext64:
 24761                           	opt stack 0
 24762  0075F2                     _isdigit:
 24763                           	opt stack 22
 24764                           
 24765                           ; BSR set to: 0
 24766                           ;incstack = 0
 24767                           ;isdigit@c stored from wreg
 24768  0075F2  0100               	movlb	0	; () banked
 24769  0075F4  6F77               	movwf	isdigit@c& (0+255),b
 24770                           
 24771                           ; BSR set to: 0
 24772  0075F6  0E00               	movlw	0
 24773  0075F8  0100               	movlb	0	; () banked
 24774  0075FA  6F76               	movwf	_isdigit$3180& (0+255),b
 24775                           
 24776                           ; BSR set to: 0
 24777  0075FC  0E3A               	movlw	58
 24778  0075FE  0100               	movlb	0	; () banked
 24779  007600  6177               	cpfslt	isdigit@c& (0+255),b
 24780  007602  D008               	goto	l10528
 24781                           
 24782                           ; BSR set to: 0
 24783  007604  0E2F               	movlw	47
 24784  007606  0100               	movlb	0	; () banked
 24785  007608  6577               	cpfsgt	isdigit@c& (0+255),b
 24786  00760A  D004               	goto	l10528
 24787                           
 24788                           ; BSR set to: 0
 24789  00760C  0E01               	movlw	1
 24790  00760E  0100               	movlb	0	; () banked
 24791  007610  6F76               	movwf	_isdigit$3180& (0+255),b
 24792  007612  D000               	goto	l10528
 24793  007614                     l10528:
 24794                           
 24795                           ; BSR set to: 0
 24796  007614  C076  F075         	movff	_isdigit$3180,??_isdigit
 24797  007618  0100               	movlb	0	; () banked
 24798  00761A  3175               	rrcf	??_isdigit& (0+255),w,b
 24799  00761C  0012               	return	
 24800                           
 24801                           ; BSR set to: 0
 24802                           
 24803                           ; BSR set to: 0
 24804  00761E  0012               	return		;funcret
 24805  007620                     __end_of_isdigit:
 24806                           	opt stack 0
 24807                           tblptru	equ	0xFF8
 24808                           tblptrh	equ	0xFF7
 24809                           tblptrl	equ	0xFF6
 24810                           tablat	equ	0xFF5
 24811                           prodh	equ	0xFF4
 24812                           prodl	equ	0xFF3
 24813                           intcon	equ	0xFF2
 24814                           intcon2	equ	0xFF1
 24815                           indf0	equ	0xFEF
 24816                           postinc0	equ	0xFEE
 24817                           plusw0	equ	0xFEB
 24818                           fsr0h	equ	0xFEA
 24819                           fsr0l	equ	0xFE9
 24820                           wreg	equ	0xFE8
 24821                           indf1	equ	0xFE7
 24822                           postdec1	equ	0xFE5
 24823                           fsr1h	equ	0xFE2
 24824                           fsr1l	equ	0xFE1
 24825                           indf2	equ	0xFDF
 24826                           postinc2	equ	0xFDE
 24827                           postdec2	equ	0xFDD
 24828                           plusw2	equ	0xFDB
 24829                           fsr2h	equ	0xFDA
 24830                           fsr2l	equ	0xFD9
 24831                           status	equ	0xFD8
 24832                           
 24833 ;; *************** function ___wmul *****************
 24834 ;; Defined at:
 24835 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 24836 ;; Parameters:    Size  Location     Type
 24837 ;;  multiplier      2   21[BANK0 ] unsigned int 
 24838 ;;  multiplicand    2   23[BANK0 ] unsigned int 
 24839 ;; Auto vars:     Size  Location     Type
 24840 ;;  product         2   25[BANK0 ] unsigned int 
 24841 ;; Return value:  Size  Location     Type
 24842 ;;                  2   21[BANK0 ] unsigned int 
 24843 ;; Registers used:
 24844 ;;		wreg, status,2, status,0, prodl, prodh
 24845 ;; Tracked objects:
 24846 ;;		On entry : 0/0
 24847 ;;		On exit  : 0/0
 24848 ;;		Unchanged: 0/0
 24849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24853 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24854 ;;Total ram usage:        6 bytes
 24855 ;; Hardware stack levels used:    1
 24856 ;; Hardware stack levels required when called:    6
 24857 ;; This function calls:
 24858 ;;		Nothing
 24859 ;; This function is called by:
 24860 ;;		_sprintf
 24861 ;; This function uses a non-reentrant model
 24862 ;;
 24863                           
 24864                           	psect	text65
 24865  007556                     __ptext65:
 24866                           	opt stack 0
 24867  007556                     ___wmul:
 24868                           	opt stack 22
 24869                           
 24870                           ; BSR set to: 0
 24871                           ;incstack = 0
 24872  007556  0100               	movlb	0	; () banked
 24873  007558  5175               	movf	___wmul@multiplier& (0+255),w,b
 24874  00755A  0100               	movlb	0	; () banked
 24875  00755C  0377               	mulwf	___wmul@multiplicand& (0+255),b
 24876  00755E  CFF3 F079          	movff	prodl,___wmul@product
 24877  007562  CFF4 F07A          	movff	prodh,___wmul@product+1
 24878  007566  0100               	movlb	0	; () banked
 24879  007568  5175               	movf	___wmul@multiplier& (0+255),w,b
 24880  00756A  0100               	movlb	0	; () banked
 24881  00756C  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 24882  00756E  50F3               	movf	prodl,w,c
 24883  007570  0100               	movlb	0	; () banked
 24884  007572  277A               	addwf	(___wmul@product+1)& (0+255),f,b
 24885  007574  0100               	movlb	0	; () banked
 24886  007576  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
 24887  007578  0100               	movlb	0	; () banked
 24888  00757A  0377               	mulwf	___wmul@multiplicand& (0+255),b
 24889  00757C  50F3               	movf	prodl,w,c
 24890  00757E  0100               	movlb	0	; () banked
 24891  007580  277A               	addwf	(___wmul@product+1)& (0+255),f,b
 24892                           
 24893                           ; BSR set to: 0
 24894  007582  C079  F075         	movff	___wmul@product,?___wmul
 24895  007586  C07A  F076         	movff	___wmul@product+1,?___wmul+1
 24896  00758A  0012               	return	
 24897                           
 24898                           ; BSR set to: 0
 24899                           
 24900                           ; BSR set to: 0
 24901  00758C  0012               	return		;funcret
 24902  00758E                     __end_of___wmul:
 24903                           	opt stack 0
 24904                           tblptru	equ	0xFF8
 24905                           tblptrh	equ	0xFF7
 24906                           tblptrl	equ	0xFF6
 24907                           tablat	equ	0xFF5
 24908                           prodh	equ	0xFF4
 24909                           prodl	equ	0xFF3
 24910                           intcon	equ	0xFF2
 24911                           intcon2	equ	0xFF1
 24912                           indf0	equ	0xFEF
 24913                           postinc0	equ	0xFEE
 24914                           plusw0	equ	0xFEB
 24915                           fsr0h	equ	0xFEA
 24916                           fsr0l	equ	0xFE9
 24917                           wreg	equ	0xFE8
 24918                           indf1	equ	0xFE7
 24919                           postdec1	equ	0xFE5
 24920                           fsr1h	equ	0xFE2
 24921                           fsr1l	equ	0xFE1
 24922                           indf2	equ	0xFDF
 24923                           postinc2	equ	0xFDE
 24924                           postdec2	equ	0xFDD
 24925                           plusw2	equ	0xFDB
 24926                           fsr2h	equ	0xFDA
 24927                           fsr2l	equ	0xFD9
 24928                           status	equ	0xFD8
 24929                           
 24930 ;; *************** function ___llmod *****************
 24931 ;; Defined at:
 24932 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 24933 ;; Parameters:    Size  Location     Type
 24934 ;;  dividend        4   34[BANK0 ] unsigned long 
 24935 ;;  divisor         4   38[BANK0 ] unsigned long 
 24936 ;; Auto vars:     Size  Location     Type
 24937 ;;  counter         1   42[BANK0 ] unsigned char 
 24938 ;; Return value:  Size  Location     Type
 24939 ;;                  4   34[BANK0 ] unsigned long 
 24940 ;; Registers used:
 24941 ;;		wreg, status,2, status,0
 24942 ;; Tracked objects:
 24943 ;;		On entry : 0/0
 24944 ;;		On exit  : 0/0
 24945 ;;		Unchanged: 0/0
 24946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24947 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24950 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24951 ;;Total ram usage:        9 bytes
 24952 ;; Hardware stack levels used:    1
 24953 ;; Hardware stack levels required when called:    6
 24954 ;; This function calls:
 24955 ;;		Nothing
 24956 ;; This function is called by:
 24957 ;;		_sprintf
 24958 ;; This function uses a non-reentrant model
 24959 ;;
 24960                           
 24961                           	psect	text66
 24962  006856                     __ptext66:
 24963                           	opt stack 0
 24964  006856                     ___llmod:
 24965                           	opt stack 22
 24966                           
 24967                           ; BSR set to: 0
 24968                           ;incstack = 0
 24969  006856  0100               	movlb	0	; () banked
 24970  006858  5186               	movf	___llmod@divisor& (0+255),w,b
 24971  00685A  0100               	movlb	0	; () banked
 24972  00685C  1187               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 24973  00685E  0100               	movlb	0	; () banked
 24974  006860  1188               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 24975  006862  0100               	movlb	0	; () banked
 24976  006864  1189               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 24977  006866  B4D8               	btfsc	status,2,c
 24978  006868  D03F               	goto	l2420
 24979                           
 24980                           ; BSR set to: 0
 24981  00686A  0E01               	movlw	1
 24982  00686C  0100               	movlb	0	; () banked
 24983  00686E  6F8A               	movwf	___llmod@counter& (0+255),b
 24984  006870  D009               	goto	l10566
 24985  006872                     l10564:
 24986                           
 24987                           ; BSR set to: 0
 24988  006872  0100               	movlb	0	; () banked
 24989  006874  90D8               	bcf	status,0,c
 24990  006876  3786               	rlcf	___llmod@divisor& (0+255),f,b
 24991  006878  3787               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 24992  00687A  3788               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 24993  00687C  3789               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 24994  00687E  0100               	movlb	0	; () banked
 24995  006880  2B8A               	incf	___llmod@counter& (0+255),f,b
 24996  006882  D000               	goto	l10566
 24997  006884                     l10566:
 24998                           
 24999                           ; BSR set to: 0
 25000  006884  0100               	movlb	0	; () banked
 25001  006886  BF89               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 25002  006888  D002               	goto	l10568
 25003  00688A  D7F3               	goto	l10564
 25004                           
 25005                           ; BSR set to: 0
 25006  00688C  D000               	goto	l10568
 25007  00688E                     l10568:
 25008                           
 25009                           ; BSR set to: 0
 25010  00688E  0100               	movlb	0	; () banked
 25011  006890  5186               	movf	___llmod@divisor& (0+255),w,b
 25012  006892  0100               	movlb	0	; () banked
 25013  006894  5D82               	subwf	___llmod@dividend& (0+255),w,b
 25014  006896  0100               	movlb	0	; () banked
 25015  006898  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
 25016  00689A  0100               	movlb	0	; () banked
 25017  00689C  5983               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25018  00689E  0100               	movlb	0	; () banked
 25019  0068A0  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
 25020  0068A2  0100               	movlb	0	; () banked
 25021  0068A4  5984               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25022  0068A6  0100               	movlb	0	; () banked
 25023  0068A8  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
 25024  0068AA  0100               	movlb	0	; () banked
 25025  0068AC  5985               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25026  0068AE  A0D8               	btfss	status,0,c
 25027  0068B0  D011               	goto	l10572
 25028                           
 25029                           ; BSR set to: 0
 25030  0068B2  0100               	movlb	0	; () banked
 25031  0068B4  5186               	movf	___llmod@divisor& (0+255),w,b
 25032  0068B6  0100               	movlb	0	; () banked
 25033  0068B8  5F82               	subwf	___llmod@dividend& (0+255),f,b
 25034  0068BA  0100               	movlb	0	; () banked
 25035  0068BC  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
 25036  0068BE  0100               	movlb	0	; () banked
 25037  0068C0  5B83               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25038  0068C2  0100               	movlb	0	; () banked
 25039  0068C4  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
 25040  0068C6  0100               	movlb	0	; () banked
 25041  0068C8  5B84               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25042  0068CA  0100               	movlb	0	; () banked
 25043  0068CC  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
 25044  0068CE  0100               	movlb	0	; () banked
 25045  0068D0  5B85               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25046  0068D2  D000               	goto	l10572
 25047  0068D4                     l10572:
 25048                           
 25049                           ; BSR set to: 0
 25050  0068D4  0100               	movlb	0	; () banked
 25051  0068D6  90D8               	bcf	status,0,c
 25052  0068D8  3389               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25053  0068DA  3388               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25054  0068DC  3387               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25055  0068DE  3386               	rrcf	___llmod@divisor& (0+255),f,b
 25056                           
 25057                           ; BSR set to: 0
 25058  0068E0  0100               	movlb	0	; () banked
 25059  0068E2  2F8A               	decfsz	___llmod@counter& (0+255),f,b
 25060  0068E4  D7D4               	goto	l10568
 25061  0068E6  D000               	goto	l2420
 25062  0068E8                     l2420:
 25063                           
 25064                           ; BSR set to: 0
 25065  0068E8  C082  F082         	movff	___llmod@dividend,?___llmod
 25066  0068EC  C083  F083         	movff	___llmod@dividend+1,?___llmod+1
 25067  0068F0  C084  F084         	movff	___llmod@dividend+2,?___llmod+2
 25068  0068F4  C085  F085         	movff	___llmod@dividend+3,?___llmod+3
 25069                           
 25070                           ; BSR set to: 0
 25071  0068F8  0012               	return		;funcret
 25072  0068FA                     __end_of___llmod:
 25073                           	opt stack 0
 25074                           tblptru	equ	0xFF8
 25075                           tblptrh	equ	0xFF7
 25076                           tblptrl	equ	0xFF6
 25077                           tablat	equ	0xFF5
 25078                           prodh	equ	0xFF4
 25079                           prodl	equ	0xFF3
 25080                           intcon	equ	0xFF2
 25081                           intcon2	equ	0xFF1
 25082                           indf0	equ	0xFEF
 25083                           postinc0	equ	0xFEE
 25084                           plusw0	equ	0xFEB
 25085                           fsr0h	equ	0xFEA
 25086                           fsr0l	equ	0xFE9
 25087                           wreg	equ	0xFE8
 25088                           indf1	equ	0xFE7
 25089                           postdec1	equ	0xFE5
 25090                           fsr1h	equ	0xFE2
 25091                           fsr1l	equ	0xFE1
 25092                           indf2	equ	0xFDF
 25093                           postinc2	equ	0xFDE
 25094                           postdec2	equ	0xFDD
 25095                           plusw2	equ	0xFDB
 25096                           fsr2h	equ	0xFDA
 25097                           fsr2l	equ	0xFD9
 25098                           status	equ	0xFD8
 25099                           
 25100 ;; *************** function ___lldiv *****************
 25101 ;; Defined at:
 25102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 25103 ;; Parameters:    Size  Location     Type
 25104 ;;  dividend        4   21[BANK0 ] unsigned long 
 25105 ;;  divisor         4   25[BANK0 ] unsigned long 
 25106 ;; Auto vars:     Size  Location     Type
 25107 ;;  quotient        4   29[BANK0 ] unsigned long 
 25108 ;;  counter         1   33[BANK0 ] unsigned char 
 25109 ;; Return value:  Size  Location     Type
 25110 ;;                  4   21[BANK0 ] unsigned long 
 25111 ;; Registers used:
 25112 ;;		wreg, status,2, status,0
 25113 ;; Tracked objects:
 25114 ;;		On entry : 0/0
 25115 ;;		On exit  : 0/0
 25116 ;;		Unchanged: 0/0
 25117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25119 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25121 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25122 ;;Total ram usage:       13 bytes
 25123 ;; Hardware stack levels used:    1
 25124 ;; Hardware stack levels required when called:    6
 25125 ;; This function calls:
 25126 ;;		Nothing
 25127 ;; This function is called by:
 25128 ;;		_InitUART
 25129 ;;		_sprintf
 25130 ;; This function uses a non-reentrant model
 25131 ;;
 25132                           
 25133                           	psect	text67
 25134  0064C2                     __ptext67:
 25135                           	opt stack 0
 25136  0064C2                     ___lldiv:
 25137                           	opt stack 22
 25138                           
 25139                           ; BSR set to: 0
 25140                           ;incstack = 0
 25141  0064C2  0E00               	movlw	0
 25142  0064C4  0100               	movlb	0	; () banked
 25143  0064C6  6F7D               	movwf	___lldiv@quotient& (0+255),b
 25144  0064C8  0E00               	movlw	0
 25145  0064CA  6F7E               	movwf	(___lldiv@quotient+1)& (0+255),b
 25146  0064CC  0E00               	movlw	0
 25147  0064CE  6F7F               	movwf	(___lldiv@quotient+2)& (0+255),b
 25148  0064D0  0E00               	movlw	0
 25149  0064D2  6F80               	movwf	(___lldiv@quotient+3)& (0+255),b
 25150                           
 25151                           ; BSR set to: 0
 25152  0064D4  0100               	movlb	0	; () banked
 25153  0064D6  5179               	movf	___lldiv@divisor& (0+255),w,b
 25154  0064D8  0100               	movlb	0	; () banked
 25155  0064DA  117A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 25156  0064DC  0100               	movlb	0	; () banked
 25157  0064DE  117B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 25158  0064E0  0100               	movlb	0	; () banked
 25159  0064E2  117C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 25160  0064E4  B4D8               	btfsc	status,2,c
 25161  0064E6  D047               	goto	l2410
 25162                           
 25163                           ; BSR set to: 0
 25164  0064E8  0E01               	movlw	1
 25165  0064EA  0100               	movlb	0	; () banked
 25166  0064EC  6F81               	movwf	___lldiv@counter& (0+255),b
 25167  0064EE  D009               	goto	l10546
 25168  0064F0                     l10544:
 25169                           
 25170                           ; BSR set to: 0
 25171  0064F0  0100               	movlb	0	; () banked
 25172  0064F2  90D8               	bcf	status,0,c
 25173  0064F4  3779               	rlcf	___lldiv@divisor& (0+255),f,b
 25174  0064F6  377A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 25175  0064F8  377B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 25176  0064FA  377C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 25177  0064FC  0100               	movlb	0	; () banked
 25178  0064FE  2B81               	incf	___lldiv@counter& (0+255),f,b
 25179  006500  D000               	goto	l10546
 25180  006502                     l10546:
 25181                           
 25182                           ; BSR set to: 0
 25183  006502  0100               	movlb	0	; () banked
 25184  006504  BF7C               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 25185  006506  D002               	goto	l10548
 25186  006508  D7F3               	goto	l10544
 25187                           
 25188                           ; BSR set to: 0
 25189  00650A  D000               	goto	l10548
 25190  00650C                     l10548:
 25191                           
 25192                           ; BSR set to: 0
 25193  00650C  0100               	movlb	0	; () banked
 25194  00650E  90D8               	bcf	status,0,c
 25195  006510  377D               	rlcf	___lldiv@quotient& (0+255),f,b
 25196  006512  377E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25197  006514  377F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25198  006516  3780               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25199                           
 25200                           ; BSR set to: 0
 25201  006518  0100               	movlb	0	; () banked
 25202  00651A  5179               	movf	___lldiv@divisor& (0+255),w,b
 25203  00651C  0100               	movlb	0	; () banked
 25204  00651E  5D75               	subwf	___lldiv@dividend& (0+255),w,b
 25205  006520  0100               	movlb	0	; () banked
 25206  006522  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25207  006524  0100               	movlb	0	; () banked
 25208  006526  5976               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 25209  006528  0100               	movlb	0	; () banked
 25210  00652A  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25211  00652C  0100               	movlb	0	; () banked
 25212  00652E  5977               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 25213  006530  0100               	movlb	0	; () banked
 25214  006532  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25215  006534  0100               	movlb	0	; () banked
 25216  006536  5978               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 25217  006538  A0D8               	btfss	status,0,c
 25218  00653A  D013               	goto	l10556
 25219                           
 25220                           ; BSR set to: 0
 25221  00653C  0100               	movlb	0	; () banked
 25222  00653E  5179               	movf	___lldiv@divisor& (0+255),w,b
 25223  006540  0100               	movlb	0	; () banked
 25224  006542  5F75               	subwf	___lldiv@dividend& (0+255),f,b
 25225  006544  0100               	movlb	0	; () banked
 25226  006546  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25227  006548  0100               	movlb	0	; () banked
 25228  00654A  5B76               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 25229  00654C  0100               	movlb	0	; () banked
 25230  00654E  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25231  006550  0100               	movlb	0	; () banked
 25232  006552  5B77               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 25233  006554  0100               	movlb	0	; () banked
 25234  006556  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25235  006558  0100               	movlb	0	; () banked
 25236  00655A  5B78               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 25237                           
 25238                           ; BSR set to: 0
 25239  00655C  0100               	movlb	0	; () banked
 25240  00655E  817D               	bsf	___lldiv@quotient& (0+255),0,b
 25241  006560  D000               	goto	l10556
 25242  006562                     l10556:
 25243                           
 25244                           ; BSR set to: 0
 25245  006562  0100               	movlb	0	; () banked
 25246  006564  90D8               	bcf	status,0,c
 25247  006566  337C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 25248  006568  337B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 25249  00656A  337A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 25250  00656C  3379               	rrcf	___lldiv@divisor& (0+255),f,b
 25251                           
 25252                           ; BSR set to: 0
 25253  00656E  0100               	movlb	0	; () banked
 25254  006570  2F81               	decfsz	___lldiv@counter& (0+255),f,b
 25255  006572  D7CC               	goto	l10548
 25256  006574  D000               	goto	l2410
 25257  006576                     l2410:
 25258                           
 25259                           ; BSR set to: 0
 25260  006576  C07D  F075         	movff	___lldiv@quotient,?___lldiv
 25261  00657A  C07E  F076         	movff	___lldiv@quotient+1,?___lldiv+1
 25262  00657E  C07F  F077         	movff	___lldiv@quotient+2,?___lldiv+2
 25263  006582  C080  F078         	movff	___lldiv@quotient+3,?___lldiv+3
 25264                           
 25265                           ; BSR set to: 0
 25266  006586  0012               	return		;funcret
 25267  006588                     __end_of___lldiv:
 25268                           	opt stack 0
 25269                           tblptru	equ	0xFF8
 25270                           tblptrh	equ	0xFF7
 25271                           tblptrl	equ	0xFF6
 25272                           tablat	equ	0xFF5
 25273                           prodh	equ	0xFF4
 25274                           prodl	equ	0xFF3
 25275                           intcon	equ	0xFF2
 25276                           intcon2	equ	0xFF1
 25277                           indf0	equ	0xFEF
 25278                           postinc0	equ	0xFEE
 25279                           plusw0	equ	0xFEB
 25280                           fsr0h	equ	0xFEA
 25281                           fsr0l	equ	0xFE9
 25282                           wreg	equ	0xFE8
 25283                           indf1	equ	0xFE7
 25284                           postdec1	equ	0xFE5
 25285                           fsr1h	equ	0xFE2
 25286                           fsr1l	equ	0xFE1
 25287                           indf2	equ	0xFDF
 25288                           postinc2	equ	0xFDE
 25289                           postdec2	equ	0xFDD
 25290                           plusw2	equ	0xFDB
 25291                           fsr2h	equ	0xFDA
 25292                           fsr2l	equ	0xFD9
 25293                           status	equ	0xFD8
 25294                           
 25295 ;; *************** function _EnterCommandMode *****************
 25296 ;; Defined at:
 25297 ;;		line 111 in file "Bluetooth.c"
 25298 ;; Parameters:    Size  Location     Type
 25299 ;;		None
 25300 ;; Auto vars:     Size  Location     Type
 25301 ;;  count           1   30[BANK0 ] unsigned char 
 25302 ;; Return value:  Size  Location     Type
 25303 ;;                  1    wreg      unsigned char 
 25304 ;; Registers used:
 25305 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25306 ;; Tracked objects:
 25307 ;;		On entry : 0/0
 25308 ;;		On exit  : 0/0
 25309 ;;		Unchanged: 0/0
 25310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25315 ;;Total ram usage:        1 bytes
 25316 ;; Hardware stack levels used:    1
 25317 ;; Hardware stack levels required when called:    8
 25318 ;; This function calls:
 25319 ;;		_BlueConnected
 25320 ;;		_ResetBlue
 25321 ;;		_StringContains
 25322 ;;		_UARTstring
 25323 ;;		_cleanBuffer
 25324 ;;		_delayUS
 25325 ;; This function is called by:
 25326 ;;		_BluetoothInitialSetup
 25327 ;; This function uses a non-reentrant model
 25328 ;;
 25329                           
 25330                           	psect	text68
 25331  0063FA                     __ptext68:
 25332                           	opt stack 0
 25333  0063FA                     _EnterCommandMode:
 25334                           	opt stack 19
 25335                           
 25336                           ;Bluetooth.c: 113: unsigned char count = 0;
 25337                           
 25338                           ; BSR set to: 0
 25339                           ;incstack = 0
 25340  0063FA  0E00               	movlw	0
 25341  0063FC  0100               	movlb	0	; () banked
 25342  0063FE  6F7E               	movwf	EnterCommandMode@count& (0+255),b
 25343                           
 25344                           ;Bluetooth.c: 114: while(BlueConnected())
 25345  006400  D00B               	goto	l10588
 25346  006402                     l10578:
 25347                           
 25348                           ;Bluetooth.c: 115: {
 25349                           ;Bluetooth.c: 116: ResetBlue();
 25350  006402  ECE0  F03A         	call	_ResetBlue	;wreg free
 25351                           
 25352                           ;Bluetooth.c: 117: count++;
 25353  006406  0100               	movlb	0	; () banked
 25354  006408  2B7E               	incf	EnterCommandMode@count& (0+255),f,b
 25355                           
 25356                           ; BSR set to: 0
 25357                           ;Bluetooth.c: 118: if(count > 4)
 25358  00640A  0E04               	movlw	4
 25359  00640C  0100               	movlb	0	; () banked
 25360  00640E  657E               	cpfsgt	EnterCommandMode@count& (0+255),b
 25361  006410  D003               	goto	l10588
 25362                           
 25363                           ; BSR set to: 0
 25364                           ;Bluetooth.c: 119: {
 25365                           ;Bluetooth.c: 121: return 0;
 25366  006412  0E00               	movlw	0
 25367                           
 25368                           ; BSR set to: 0
 25369  006414  0012               	return	
 25370                           
 25371                           ; BSR set to: 0
 25372  006416  D000               	goto	l10588
 25373  006418                     l10588:
 25374                           
 25375                           ; BSR set to: 0
 25376  006418  EC14  F03C         	call	_BlueConnected	;wreg free
 25377  00641C  0900               	iorlw	0
 25378  00641E  A4D8               	btfss	status,2,c
 25379  006420  D7F0               	goto	l10578
 25380                           
 25381                           ;Bluetooth.c: 122: }
 25382                           ;Bluetooth.c: 123: }
 25383                           ;Bluetooth.c: 125: delayUS(50000);
 25384  006422  0E50               	movlw	80
 25385  006424  0100               	movlb	0	; () banked
 25386  006426  6F75               	movwf	delayUS@US& (0+255),b
 25387  006428  0EC3               	movlw	195
 25388  00642A  6F76               	movwf	(delayUS@US+1)& (0+255),b
 25389  00642C  0E00               	movlw	0
 25390  00642E  6F77               	movwf	(delayUS@US+2)& (0+255),b
 25391  006430  0E00               	movlw	0
 25392  006432  6F78               	movwf	(delayUS@US+3)& (0+255),b
 25393  006434  EC34  F039         	call	_delayUS	;wreg free
 25394                           
 25395                           ;Bluetooth.c: 126: UARTstring((unsigned char *)"$$$");
 25396  006438  0EE0               	movlw	low STR_4
 25397  00643A  0100               	movlb	0	; () banked
 25398  00643C  6F76               	movwf	UARTstring@data& (0+255),b
 25399  00643E  0EFF               	movlw	high STR_4
 25400  006440  0100               	movlb	0	; () banked
 25401  006442  6F77               	movwf	(UARTstring@data+1)& (0+255),b
 25402  006444  ECB0  F038         	call	_UARTstring	;wreg free
 25403                           
 25404                           ;Bluetooth.c: 127: delayUS(50000);
 25405  006448  0E50               	movlw	80
 25406  00644A  0100               	movlb	0	; () banked
 25407  00644C  6F75               	movwf	delayUS@US& (0+255),b
 25408  00644E  0EC3               	movlw	195
 25409  006450  6F76               	movwf	(delayUS@US+1)& (0+255),b
 25410  006452  0E00               	movlw	0
 25411  006454  6F77               	movwf	(delayUS@US+2)& (0+255),b
 25412  006456  0E00               	movlw	0
 25413  006458  6F78               	movwf	(delayUS@US+3)& (0+255),b
 25414  00645A  EC34  F039         	call	_delayUS	;wreg free
 25415                           
 25416                           ;Bluetooth.c: 128: if(StringContains(CommandString,(unsigned char *)"CMD"))
 25417  00645E  0E00               	movlw	low _CommandString
 25418  006460  0100               	movlb	0	; () banked
 25419  006462  6F75               	movwf	StringContains@This& (0+255),b
 25420  006464  0E09               	movlw	high _CommandString
 25421  006466  0100               	movlb	0	; () banked
 25422  006468  6F76               	movwf	(StringContains@This+1)& (0+255),b
 25423  00646A  0EEC               	movlw	low STR_5
 25424  00646C  0100               	movlb	0	; () banked
 25425  00646E  6F77               	movwf	StringContains@That& (0+255),b
 25426  006470  0EFF               	movlw	high STR_5
 25427  006472  0100               	movlb	0	; () banked
 25428  006474  6F78               	movwf	(StringContains@That+1)& (0+255),b
 25429  006476  EC7B  F033         	call	_StringContains	;wreg free
 25430  00647A  0900               	iorlw	0
 25431  00647C  B4D8               	btfsc	status,2,c
 25432  00647E  D010               	goto	l10606
 25433                           
 25434                           ;Bluetooth.c: 129: {
 25435                           ;Bluetooth.c: 130: cleanBuffer(CommandString,CommandStringPos);
 25436  006480  0E00               	movlw	low _CommandString
 25437  006482  0100               	movlb	0	; () banked
 25438  006484  6F75               	movwf	cleanBuffer@data& (0+255),b
 25439  006486  0E09               	movlw	high _CommandString
 25440  006488  0100               	movlb	0	; () banked
 25441  00648A  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 25442  00648C  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 25443  006490  0100               	movlb	0	; () banked
 25444  006492  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 25445  006494  EC83  F038         	call	_cleanBuffer	;wreg free
 25446                           
 25447                           ;Bluetooth.c: 131: CommandStringPos = 0;
 25448  006498  0E00               	movlw	0
 25449  00649A  6E2D               	movwf	_CommandStringPos,c
 25450                           
 25451                           ;Bluetooth.c: 132: return 1;
 25452  00649C  0E01               	movlw	1
 25453  00649E  0012               	return	
 25454  0064A0                     l10606:
 25455                           
 25456                           ;Bluetooth.c: 133: }
 25457                           ;Bluetooth.c: 134: cleanBuffer(CommandString,CommandStringPos);
 25458  0064A0  0E00               	movlw	low _CommandString
 25459  0064A2  0100               	movlb	0	; () banked
 25460  0064A4  6F75               	movwf	cleanBuffer@data& (0+255),b
 25461  0064A6  0E09               	movlw	high _CommandString
 25462  0064A8  0100               	movlb	0	; () banked
 25463  0064AA  6F76               	movwf	(cleanBuffer@data+1)& (0+255),b
 25464  0064AC  C02D  F077         	movff	_CommandStringPos,cleanBuffer@count
 25465  0064B0  0100               	movlb	0	; () banked
 25466  0064B2  6B78               	clrf	(cleanBuffer@count+1)& (0+255),b
 25467  0064B4  EC83  F038         	call	_cleanBuffer	;wreg free
 25468                           
 25469                           ;Bluetooth.c: 135: CommandStringPos = 0;
 25470  0064B8  0E00               	movlw	0
 25471  0064BA  6E2D               	movwf	_CommandStringPos,c
 25472                           
 25473                           ;Bluetooth.c: 136: return 0;
 25474  0064BC  0E00               	movlw	0
 25475  0064BE  0012               	return	
 25476  0064C0  0012               	return		;funcret
 25477  0064C2                     __end_of_EnterCommandMode:
 25478                           	opt stack 0
 25479                           tblptru	equ	0xFF8
 25480                           tblptrh	equ	0xFF7
 25481                           tblptrl	equ	0xFF6
 25482                           tablat	equ	0xFF5
 25483                           prodh	equ	0xFF4
 25484                           prodl	equ	0xFF3
 25485                           intcon	equ	0xFF2
 25486                           intcon2	equ	0xFF1
 25487                           indf0	equ	0xFEF
 25488                           postinc0	equ	0xFEE
 25489                           plusw0	equ	0xFEB
 25490                           fsr0h	equ	0xFEA
 25491                           fsr0l	equ	0xFE9
 25492                           wreg	equ	0xFE8
 25493                           indf1	equ	0xFE7
 25494                           postdec1	equ	0xFE5
 25495                           fsr1h	equ	0xFE2
 25496                           fsr1l	equ	0xFE1
 25497                           indf2	equ	0xFDF
 25498                           postinc2	equ	0xFDE
 25499                           postdec2	equ	0xFDD
 25500                           plusw2	equ	0xFDB
 25501                           fsr2h	equ	0xFDA
 25502                           fsr2l	equ	0xFD9
 25503                           status	equ	0xFD8
 25504                           
 25505 ;; *************** function _cleanBuffer *****************
 25506 ;; Defined at:
 25507 ;;		line 125 in file "MISC.c"
 25508 ;; Parameters:    Size  Location     Type
 25509 ;;  data            2   21[BANK0 ] PTR unsigned char 
 25510 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(50), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup@
      +buf(50), 
 25511 ;;		 -> CommandString(255), StringAddEqual@temp(100), ReceivedString(255), 
 25512 ;;  count           2   23[BANK0 ] int 
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;  i               1   28[BANK0 ] unsigned char 
 25515 ;; Return value:  Size  Location     Type
 25516 ;;		None               void
 25517 ;; Registers used:
 25518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25519 ;; Tracked objects:
 25520 ;;		On entry : 0/0
 25521 ;;		On exit  : 0/0
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25526 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25527 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25528 ;;Total ram usage:        8 bytes
 25529 ;; Hardware stack levels used:    1
 25530 ;; Hardware stack levels required when called:    6
 25531 ;; This function calls:
 25532 ;;		Nothing
 25533 ;; This function is called by:
 25534 ;;		_main
 25535 ;;		_Init_System
 25536 ;;		_BufferCopy
 25537 ;;		_StringAddEqual
 25538 ;;		_InitBluetooth
 25539 ;;		_EnterCommandMode
 25540 ;;		_BluetoothInitialSetup
 25541 ;;		_UseBluetooth
 25542 ;; This function uses a non-reentrant model
 25543 ;;
 25544                           
 25545                           	psect	text69
 25546  007106                     __ptext69:
 25547                           	opt stack 0
 25548  007106                     _cleanBuffer:
 25549                           	opt stack 24
 25550                           
 25551                           ;MISC.c: 127: unsigned char i=0;
 25552                           
 25553                           ;incstack = 0
 25554  007106  0E00               	movlw	0
 25555  007108  0100               	movlb	0	; () banked
 25556  00710A  6F7C               	movwf	cleanBuffer@i& (0+255),b
 25557                           
 25558                           ;MISC.c: 128: for(i=0; i<count;i++)
 25559  00710C  0E00               	movlw	0
 25560  00710E  0100               	movlb	0	; () banked
 25561  007110  6F7C               	movwf	cleanBuffer@i& (0+255),b
 25562  007112  D010               	goto	l10460
 25563  007114                     l10456:
 25564                           
 25565                           ; BSR set to: 0
 25566                           ;MISC.c: 129: {
 25567                           ;MISC.c: 130: data[i]= 0;
 25568  007114  0100               	movlb	0	; () banked
 25569  007116  517C               	movf	cleanBuffer@i& (0+255),w,b
 25570  007118  0D01               	mullw	1
 25571  00711A  50F3               	movf	prodl,w,c
 25572  00711C  0100               	movlb	0	; () banked
 25573  00711E  2575               	addwf	cleanBuffer@data& (0+255),w,b
 25574  007120  6ED9               	movwf	fsr2l,c
 25575  007122  50F4               	movf	prodh,w,c
 25576  007124  0100               	movlb	0	; () banked
 25577  007126  2176               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 25578  007128  6EDA               	movwf	fsr2h,c
 25579  00712A  0E00               	movlw	0
 25580  00712C  6EDF               	movwf	indf2,c
 25581                           
 25582                           ; BSR set to: 0
 25583  00712E  0100               	movlb	0	; () banked
 25584  007130  2B7C               	incf	cleanBuffer@i& (0+255),f,b
 25585  007132  D000               	goto	l10460
 25586  007134                     l10460:
 25587                           
 25588                           ; BSR set to: 0
 25589  007134  0100               	movlb	0	; () banked
 25590  007136  517C               	movf	cleanBuffer@i& (0+255),w,b
 25591  007138  0100               	movlb	0	; () banked
 25592  00713A  6F79               	movwf	??_cleanBuffer& (0+255),b
 25593  00713C  6B7A               	clrf	(??_cleanBuffer+1)& (0+255),b
 25594  00713E  0100               	movlb	0	; () banked
 25595  007140  5177               	movf	cleanBuffer@count& (0+255),w,b
 25596  007142  0100               	movlb	0	; () banked
 25597  007144  5D79               	subwf	??_cleanBuffer& (0+255),w,b
 25598  007146  0100               	movlb	0	; () banked
 25599  007148  517A               	movf	(??_cleanBuffer+1)& (0+255),w,b
 25600  00714A  0A80               	xorlw	128
 25601  00714C  0100               	movlb	0	; () banked
 25602  00714E  6F7B               	movwf	(??_cleanBuffer+2)& (0+255),b
 25603  007150  0100               	movlb	0	; () banked
 25604  007152  5178               	movf	(cleanBuffer@count+1)& (0+255),w,b
 25605  007154  0A80               	xorlw	128
 25606  007156  0100               	movlb	0	; () banked
 25607  007158  597B               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 25608  00715A  A0D8               	btfss	status,0,c
 25609  00715C  D7DB               	goto	l10456
 25610                           
 25611                           ; BSR set to: 0
 25612                           
 25613                           ; BSR set to: 0
 25614  00715E  0012               	return		;funcret
 25615  007160                     __end_of_cleanBuffer:
 25616                           	opt stack 0
 25617                           tblptru	equ	0xFF8
 25618                           tblptrh	equ	0xFF7
 25619                           tblptrl	equ	0xFF6
 25620                           tablat	equ	0xFF5
 25621                           prodh	equ	0xFF4
 25622                           prodl	equ	0xFF3
 25623                           intcon	equ	0xFF2
 25624                           intcon2	equ	0xFF1
 25625                           indf0	equ	0xFEF
 25626                           postinc0	equ	0xFEE
 25627                           plusw0	equ	0xFEB
 25628                           fsr0h	equ	0xFEA
 25629                           fsr0l	equ	0xFE9
 25630                           wreg	equ	0xFE8
 25631                           indf1	equ	0xFE7
 25632                           postdec1	equ	0xFE5
 25633                           fsr1h	equ	0xFE2
 25634                           fsr1l	equ	0xFE1
 25635                           indf2	equ	0xFDF
 25636                           postinc2	equ	0xFDE
 25637                           postdec2	equ	0xFDD
 25638                           plusw2	equ	0xFDB
 25639                           fsr2h	equ	0xFDA
 25640                           fsr2l	equ	0xFD9
 25641                           status	equ	0xFD8
 25642                           
 25643 ;; *************** function _UARTstring *****************
 25644 ;; Defined at:
 25645 ;;		line 199 in file "UART.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;  data            2   22[BANK0 ] PTR unsigned char 
 25648 ;;		 -> STR_100(28), STR_65(14), SYNTAX_ERR(29), STR_20(5), 
 25649 ;;		 -> STR_18(5), STR_16(6), STR_14(6), STR_12(9), 
 25650 ;;		 -> STR_10(21), STR_8(10), BluetoothInitialSetup@buf(50), STR_4(4), 
 25651 ;;		 -> STR_2(3), STR_1(3), CRLN(3), ReceivedString(255), 
 25652 ;; Auto vars:     Size  Location     Type
 25653 ;;		None
 25654 ;; Return value:  Size  Location     Type
 25655 ;;		None               void
 25656 ;; Registers used:
 25657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25658 ;; Tracked objects:
 25659 ;;		On entry : 0/0
 25660 ;;		On exit  : 0/0
 25661 ;;		Unchanged: 0/0
 25662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;Total ram usage:        2 bytes
 25668 ;; Hardware stack levels used:    1
 25669 ;; Hardware stack levels required when called:    7
 25670 ;; This function calls:
 25671 ;;		_UARTchar
 25672 ;; This function is called by:
 25673 ;;		_main
 25674 ;;		_Init_System
 25675 ;;		_UARTstringCRLN
 25676 ;;		_UARTcommandMenu
 25677 ;;		_EnterCommandMode
 25678 ;;		_BluetoothInitialSetup
 25679 ;;		_UseBluetooth
 25680 ;;		_WaitForIRsignal
 25681 ;; This function uses a non-reentrant model
 25682 ;;
 25683                           
 25684                           	psect	text70
 25685  007160                     __ptext70:
 25686                           	opt stack 0
 25687  007160                     _UARTstring:
 25688                           	opt stack 20
 25689                           
 25690                           ;UART.c: 201: while(*data != 0)
 25691                           
 25692                           ; BSR set to: 0
 25693                           ;incstack = 0
 25694  007160  D017               	goto	l10468
 25695  007162                     l10464:
 25696                           
 25697                           ;UART.c: 202: {
 25698                           ;UART.c: 203: UARTchar(*data);
 25699  007162  C076  FFF6         	movff	UARTstring@data,tblptrl
 25700  007166  C077  FFF7         	movff	UARTstring@data+1,tblptrh
 25701  00716A  0E00               	movlw	low (__mediumconst shr (0+16))
 25702  00716C  6EF8               	movwf	tblptru,c
 25703  00716E  0E0F               	movlw	(high __ramtop+-1)
 25704  007170  64F7               	cpfsgt	tblptrh,c
 25705  007172  D003               	bra	u12337
 25706  007174  0008               	tblrd		*
 25707  007176  50F5               	movf	tablat,w,c
 25708  007178  D005               	bra	u12330
 25709  00717A                     u12337:
 25710  00717A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25711  00717E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25712  007182  50EF               	movf	indf0,w,c
 25713  007184                     u12330:
 25714  007184  EC74  F03B         	call	_UARTchar
 25715                           
 25716                           ;UART.c: 204: *data++;
 25717  007188  0100               	movlb	0	; () banked
 25718  00718A  4B76               	infsnz	UARTstring@data& (0+255),f,b
 25719  00718C  2B77               	incf	(UARTstring@data+1)& (0+255),f,b
 25720  00718E  D000               	goto	l10468
 25721  007190                     l10468:
 25722  007190  C076  FFF6         	movff	UARTstring@data,tblptrl
 25723  007194  C077  FFF7         	movff	UARTstring@data+1,tblptrh
 25724  007198  0E00               	movlw	low (__mediumconst shr (0+16))
 25725  00719A  6EF8               	movwf	tblptru,c
 25726  00719C  0E0F               	movlw	(high __ramtop+-1)
 25727  00719E  64F7               	cpfsgt	tblptrh,c
 25728  0071A0  D003               	bra	u12347
 25729  0071A2  0008               	tblrd		*
 25730  0071A4  50F5               	movf	tablat,w,c
 25731  0071A6  D005               	bra	u12340
 25732  0071A8                     u12347:
 25733  0071A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25734  0071AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25735  0071B0  50EF               	movf	indf0,w,c
 25736  0071B2                     u12340:
 25737  0071B2  0900               	iorlw	0
 25738  0071B4  A4D8               	btfss	status,2,c
 25739  0071B6  D7D5               	goto	l10464
 25740  0071B8  0012               	return		;funcret
 25741  0071BA                     __end_of_UARTstring:
 25742                           	opt stack 0
 25743                           tblptru	equ	0xFF8
 25744                           tblptrh	equ	0xFF7
 25745                           tblptrl	equ	0xFF6
 25746                           tablat	equ	0xFF5
 25747                           prodh	equ	0xFF4
 25748                           prodl	equ	0xFF3
 25749                           intcon	equ	0xFF2
 25750                           intcon2	equ	0xFF1
 25751                           indf0	equ	0xFEF
 25752                           postinc0	equ	0xFEE
 25753                           plusw0	equ	0xFEB
 25754                           fsr0h	equ	0xFEA
 25755                           fsr0l	equ	0xFE9
 25756                           wreg	equ	0xFE8
 25757                           indf1	equ	0xFE7
 25758                           postdec1	equ	0xFE5
 25759                           fsr1h	equ	0xFE2
 25760                           fsr1l	equ	0xFE1
 25761                           indf2	equ	0xFDF
 25762                           postinc2	equ	0xFDE
 25763                           postdec2	equ	0xFDD
 25764                           plusw2	equ	0xFDB
 25765                           fsr2h	equ	0xFDA
 25766                           fsr2l	equ	0xFD9
 25767                           status	equ	0xFD8
 25768                           
 25769 ;; *************** function _UARTchar *****************
 25770 ;; Defined at:
 25771 ;;		line 185 in file "UART.c"
 25772 ;; Parameters:    Size  Location     Type
 25773 ;;  data            1    wreg     unsigned char 
 25774 ;; Auto vars:     Size  Location     Type
 25775 ;;  data            1   21[BANK0 ] unsigned char 
 25776 ;; Return value:  Size  Location     Type
 25777 ;;		None               void
 25778 ;; Registers used:
 25779 ;;		wreg, status,2
 25780 ;; Tracked objects:
 25781 ;;		On entry : 0/0
 25782 ;;		On exit  : 0/0
 25783 ;;		Unchanged: 0/0
 25784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25789 ;;Total ram usage:        1 bytes
 25790 ;; Hardware stack levels used:    1
 25791 ;; Hardware stack levels required when called:    6
 25792 ;; This function calls:
 25793 ;;		Nothing
 25794 ;; This function is called by:
 25795 ;;		_main
 25796 ;;		_Init_System
 25797 ;;		_UARTstring
 25798 ;;		_UARTstringCRLN
 25799 ;;		_UARTcommandMenu
 25800 ;;		_UseBluetooth
 25801 ;;		_WaitForIRsignal
 25802 ;; This function uses a non-reentrant model
 25803 ;;
 25804                           
 25805                           	psect	text71
 25806  0076E8                     __ptext71:
 25807                           	opt stack 0
 25808  0076E8                     _UARTchar:
 25809                           	opt stack 20
 25810                           
 25811                           ;incstack = 0
 25812                           ;UARTchar@data stored from wreg
 25813  0076E8  0100               	movlb	0	; () banked
 25814  0076EA  6F75               	movwf	UARTchar@data& (0+255),b
 25815                           
 25816                           ; BSR set to: 0
 25817                           ;UART.c: 187: if(data != 0)
 25818  0076EC  0100               	movlb	0	; () banked
 25819  0076EE  5175               	movf	UARTchar@data& (0+255),w,b
 25820  0076F0  0100               	movlb	0	; () banked
 25821  0076F2  B4D8               	btfsc	status,2,c
 25822  0076F4  0012               	return	
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;UART.c: 188: {
 25826                           ;UART.c: 189: TXREG = data;
 25827  0076F6  C075  FFAD         	movff	UARTchar@data,4013	;volatile
 25828                           
 25829                           ;UART.c: 190: while(!TXSTAbits.TRMT);
 25830  0076FA  D000               	goto	l441
 25831  0076FC                     l441:
 25832                           
 25833                           ; BSR set to: 0
 25834  0076FC  B2AC               	btfsc	4012,1,c	;volatile
 25835  0076FE  0012               	return	
 25836  007700  D7FD               	goto	l441
 25837                           
 25838                           ; BSR set to: 0
 25839  007702  0012               	return	
 25840                           
 25841                           ; BSR set to: 0
 25842                           
 25843                           ; BSR set to: 0
 25844  007704  0012               	return		;funcret
 25845  007706                     __end_of_UARTchar:
 25846                           	opt stack 0
 25847                           tblptru	equ	0xFF8
 25848                           tblptrh	equ	0xFF7
 25849                           tblptrl	equ	0xFF6
 25850                           tablat	equ	0xFF5
 25851                           prodh	equ	0xFF4
 25852                           prodl	equ	0xFF3
 25853                           intcon	equ	0xFF2
 25854                           intcon2	equ	0xFF1
 25855                           indf0	equ	0xFEF
 25856                           postinc0	equ	0xFEE
 25857                           plusw0	equ	0xFEB
 25858                           fsr0h	equ	0xFEA
 25859                           fsr0l	equ	0xFE9
 25860                           wreg	equ	0xFE8
 25861                           indf1	equ	0xFE7
 25862                           postdec1	equ	0xFE5
 25863                           fsr1h	equ	0xFE2
 25864                           fsr1l	equ	0xFE1
 25865                           indf2	equ	0xFDF
 25866                           postinc2	equ	0xFDE
 25867                           postdec2	equ	0xFDD
 25868                           plusw2	equ	0xFDB
 25869                           fsr2h	equ	0xFDA
 25870                           fsr2l	equ	0xFD9
 25871                           status	equ	0xFD8
 25872                           
 25873 ;; *************** function _StringContains *****************
 25874 ;; Defined at:
 25875 ;;		line 250 in file "MISC.c"
 25876 ;; Parameters:    Size  Location     Type
 25877 ;;  This            2   21[BANK0 ] PTR unsigned char 
 25878 ;;		 -> CommandString(255), 
 25879 ;;  That            2   23[BANK0 ] PTR const unsigned char 
 25880 ;;		 -> STR_21(4), STR_17(4), STR_15(4), STR_13(4), 
 25881 ;;		 -> STR_11(4), STR_9(4), STR_7(4), BluetoothInitialSetup@buf(50), 
 25882 ;;		 -> STR_5(4), 
 25883 ;; Auto vars:     Size  Location     Type
 25884 ;;  begin           1   26[BANK0 ] unsigned char 
 25885 ;; Return value:  Size  Location     Type
 25886 ;;                  1    wreg      unsigned char 
 25887 ;; Registers used:
 25888 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25889 ;; Tracked objects:
 25890 ;;		On entry : 0/0
 25891 ;;		On exit  : 0/0
 25892 ;;		Unchanged: 0/0
 25893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25897 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25898 ;;Total ram usage:        6 bytes
 25899 ;; Hardware stack levels used:    1
 25900 ;; Hardware stack levels required when called:    6
 25901 ;; This function calls:
 25902 ;;		Nothing
 25903 ;; This function is called by:
 25904 ;;		_EnterCommandMode
 25905 ;;		_BluetoothInitialSetup
 25906 ;; This function uses a non-reentrant model
 25907 ;;
 25908                           
 25909                           	psect	text72
 25910  0066F6                     __ptext72:
 25911                           	opt stack 0
 25912  0066F6                     _StringContains:
 25913                           	opt stack 21
 25914                           
 25915                           ;MISC.c: 252: unsigned char begin = 0;
 25916                           
 25917                           ; BSR set to: 0
 25918                           ;incstack = 0
 25919  0066F6  0E00               	movlw	0
 25920  0066F8  0100               	movlb	0	; () banked
 25921  0066FA  6F7A               	movwf	StringContains@begin& (0+255),b
 25922                           
 25923                           ;MISC.c: 254: while(*This != 0)
 25924  0066FC  D04B               	goto	l10498
 25925  0066FE                     l10472:
 25926                           
 25927                           ; BSR set to: 0
 25928                           ;MISC.c: 255: {
 25929                           ;MISC.c: 256: if(*This == *That)
 25930  0066FE  C075  FFD9         	movff	StringContains@This,fsr2l
 25931  006702  C076  FFDA         	movff	StringContains@This+1,fsr2h
 25932  006706  50DF               	movf	indf2,w,c
 25933  006708  0100               	movlb	0	; () banked
 25934  00670A  6F79               	movwf	??_StringContains& (0+255),b
 25935  00670C  C077  FFF6         	movff	StringContains@That,tblptrl
 25936  006710  C078  FFF7         	movff	StringContains@That+1,tblptrh
 25937  006714  0E00               	movlw	low (__mediumconst shr (0+16))
 25938  006716  6EF8               	movwf	tblptru,c
 25939  006718  0E0F               	movlw	(high __ramtop+-1)
 25940  00671A  64F7               	cpfsgt	tblptrh,c
 25941  00671C  D003               	bra	u12367
 25942  00671E  0008               	tblrd		*
 25943  006720  50F5               	movf	tablat,w,c
 25944  006722  D005               	bra	u12360
 25945  006724                     u12367:
 25946  006724  CFF6 FFE9          	movff	tblptrl,fsr0l
 25947  006728  CFF7 FFEA          	movff	tblptrh,fsr0h
 25948  00672C  50EF               	movf	indf0,w,c
 25949  00672E                     u12360:
 25950  00672E  0100               	movlb	0	; () banked
 25951  006730  1979               	xorwf	??_StringContains& (0+255),w,b
 25952  006732  A4D8               	btfss	status,2,c
 25953  006734  D026               	goto	l10490
 25954                           
 25955                           ; BSR set to: 0
 25956                           ;MISC.c: 257: {
 25957                           ;MISC.c: 258: begin = 1;
 25958  006736  0E01               	movlw	1
 25959  006738  0100               	movlb	0	; () banked
 25960  00673A  6F7A               	movwf	StringContains@begin& (0+255),b
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;MISC.c: 259: That++;
 25964  00673C  0100               	movlb	0	; () banked
 25965  00673E  4B77               	infsnz	StringContains@That& (0+255),f,b
 25966  006740  2B78               	incf	(StringContains@That+1)& (0+255),f,b
 25967                           
 25968                           ; BSR set to: 0
 25969                           ;MISC.c: 260: if(*That == 0)
 25970  006742  C077  FFF6         	movff	StringContains@That,tblptrl
 25971  006746  C078  FFF7         	movff	StringContains@That+1,tblptrh
 25972  00674A  0E00               	movlw	low (__mediumconst shr (0+16))
 25973  00674C  6EF8               	movwf	tblptru,c
 25974  00674E  0E0F               	movlw	(high __ramtop+-1)
 25975  006750  64F7               	cpfsgt	tblptrh,c
 25976  006752  D003               	bra	u12387
 25977  006754  0008               	tblrd		*
 25978  006756  50F5               	movf	tablat,w,c
 25979  006758  D005               	bra	u12380
 25980  00675A                     u12387:
 25981  00675A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25982  00675E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25983  006762  50EF               	movf	indf0,w,c
 25984  006764                     u12380:
 25985  006764  0900               	iorlw	0
 25986  006766  A4D8               	btfss	status,2,c
 25987  006768  D002               	goto	l10484
 25988                           
 25989                           ;MISC.c: 261: {
 25990                           ;MISC.c: 262: return 1;
 25991  00676A  0E01               	movlw	1
 25992  00676C  0012               	return	
 25993  00676E                     l10484:
 25994                           
 25995                           ;MISC.c: 263: }
 25996                           ;MISC.c: 264: if(*This == 0)
 25997  00676E  C075  FFD9         	movff	StringContains@This,fsr2l
 25998  006772  C076  FFDA         	movff	StringContains@This+1,fsr2h
 25999  006776  50DF               	movf	indf2,w,c
 26000  006778  A4D8               	btfss	status,2,c
 26001  00677A  D008               	goto	l10496
 26002                           
 26003                           ;MISC.c: 265: {
 26004                           ;MISC.c: 266: return 0;
 26005  00677C  0E00               	movlw	0
 26006  00677E  0012               	return	
 26007                           
 26008                           ;MISC.c: 267: }
 26009                           ;MISC.c: 268: }
 26010  006780  D005               	goto	l10496
 26011  006782                     l10490:
 26012                           
 26013                           ;MISC.c: 269: else
 26014                           ;MISC.c: 270: {
 26015                           ;MISC.c: 271: if(begin == 1)
 26016  006782  0100               	movlb	0	; () banked
 26017  006784  057A               	decf	StringContains@begin& (0+255),w,b
 26018  006786  D7F8               	goto	L24
 26019                           
 26020                           ; BSR set to: 0
 26021                           
 26022                           ; BSR set to: 0
 26023                           ;MISC.c: 272: {
 26024                           ;MISC.c: 273: return 0;
 26025  006788  0012               	return	
 26026                           
 26027                           ; BSR set to: 0
 26028  00678A  D000               	goto	l10496
 26029  00678C                     l10496:
 26030                           
 26031                           ;MISC.c: 274: }
 26032                           ;MISC.c: 275: }
 26033                           ;MISC.c: 276: This++;
 26034  00678C  0100               	movlb	0	; () banked
 26035  00678E  4B75               	infsnz	StringContains@This& (0+255),f,b
 26036  006790  2B76               	incf	(StringContains@This+1)& (0+255),f,b
 26037  006792  D000               	goto	l10498
 26038  006794                     l10498:
 26039                           
 26040                           ; BSR set to: 0
 26041  006794  C075  FFD9         	movff	StringContains@This,fsr2l
 26042  006798  C076  FFDA         	movff	StringContains@This+1,fsr2h
 26043  00679C  50DF               	movf	indf2,w,c
 26044  00679E  A4D8               	btfss	status,2,c
 26045  0067A0  D7AE               	goto	l10472
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;MISC.c: 277: }
 26049                           ;MISC.c: 278: return 0;
 26050                           
 26051                           ; BSR set to: 0
 26052  0067A2  0E00               	movlw	0
 26053  0067A4  0012               	return	
 26054                           
 26055                           ; BSR set to: 0
 26056  0067A6  0012               	return		;funcret
 26057  0067A8                     __end_of_StringContains:
 26058                           	opt stack 0
 26059                           tblptru	equ	0xFF8
 26060                           tblptrh	equ	0xFF7
 26061                           tblptrl	equ	0xFF6
 26062                           tablat	equ	0xFF5
 26063                           prodh	equ	0xFF4
 26064                           prodl	equ	0xFF3
 26065                           intcon	equ	0xFF2
 26066                           intcon2	equ	0xFF1
 26067                           indf0	equ	0xFEF
 26068                           postinc0	equ	0xFEE
 26069                           plusw0	equ	0xFEB
 26070                           fsr0h	equ	0xFEA
 26071                           fsr0l	equ	0xFE9
 26072                           wreg	equ	0xFE8
 26073                           indf1	equ	0xFE7
 26074                           postdec1	equ	0xFE5
 26075                           fsr1h	equ	0xFE2
 26076                           fsr1l	equ	0xFE1
 26077                           indf2	equ	0xFDF
 26078                           postinc2	equ	0xFDE
 26079                           postdec2	equ	0xFDD
 26080                           plusw2	equ	0xFDB
 26081                           fsr2h	equ	0xFDA
 26082                           fsr2l	equ	0xFD9
 26083                           status	equ	0xFD8
 26084                           
 26085 ;; *************** function _ResetBlue *****************
 26086 ;; Defined at:
 26087 ;;		line 98 in file "Bluetooth.c"
 26088 ;; Parameters:    Size  Location     Type
 26089 ;;		None
 26090 ;; Auto vars:     Size  Location     Type
 26091 ;;		None
 26092 ;; Return value:  Size  Location     Type
 26093 ;;		None               void
 26094 ;; Registers used:
 26095 ;;		wreg, status,2, status,0, cstack
 26096 ;; Tracked objects:
 26097 ;;		On entry : 0/0
 26098 ;;		On exit  : 0/0
 26099 ;;		Unchanged: 0/0
 26100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26105 ;;Total ram usage:        0 bytes
 26106 ;; Hardware stack levels used:    1
 26107 ;; Hardware stack levels required when called:    7
 26108 ;; This function calls:
 26109 ;;		_delayUS
 26110 ;; This function is called by:
 26111 ;;		_InitBluetooth
 26112 ;;		_EnterCommandMode
 26113 ;; This function uses a non-reentrant model
 26114 ;;
 26115                           
 26116                           	psect	text73
 26117  0075C0                     __ptext73:
 26118                           	opt stack 0
 26119  0075C0                     _ResetBlue:
 26120                           	opt stack 21
 26121                           
 26122                           ;Bluetooth.c: 100: LATA &= ~0x04;
 26123                           
 26124                           ;incstack = 0
 26125  0075C0  9489               	bcf	3977,2,c	;volatile
 26126                           
 26127                           ;Bluetooth.c: 101: delayUS(50000);
 26128  0075C2  0E50               	movlw	80
 26129  0075C4  0100               	movlb	0	; () banked
 26130  0075C6  6F75               	movwf	delayUS@US& (0+255),b
 26131  0075C8  0EC3               	movlw	195
 26132  0075CA  6F76               	movwf	(delayUS@US+1)& (0+255),b
 26133  0075CC  0E00               	movlw	0
 26134  0075CE  6F77               	movwf	(delayUS@US+2)& (0+255),b
 26135  0075D0  0E00               	movlw	0
 26136  0075D2  6F78               	movwf	(delayUS@US+3)& (0+255),b
 26137  0075D4  EC34  F039         	call	_delayUS	;wreg free
 26138                           
 26139                           ;Bluetooth.c: 102: LATA |= 0x04;
 26140  0075D8  8489               	bsf	3977,2,c	;volatile
 26141                           
 26142                           ;Bluetooth.c: 103: delayUS(50000);
 26143  0075DA  0E50               	movlw	80
 26144  0075DC  0100               	movlb	0	; () banked
 26145  0075DE  6F75               	movwf	delayUS@US& (0+255),b
 26146  0075E0  0EC3               	movlw	195
 26147  0075E2  6F76               	movwf	(delayUS@US+1)& (0+255),b
 26148  0075E4  0E00               	movlw	0
 26149  0075E6  6F77               	movwf	(delayUS@US+2)& (0+255),b
 26150  0075E8  0E00               	movlw	0
 26151  0075EA  6F78               	movwf	(delayUS@US+3)& (0+255),b
 26152  0075EC  EC34  F039         	call	_delayUS	;wreg free
 26153  0075F0  0012               	return		;funcret
 26154  0075F2                     __end_of_ResetBlue:
 26155                           	opt stack 0
 26156                           tblptru	equ	0xFF8
 26157                           tblptrh	equ	0xFF7
 26158                           tblptrl	equ	0xFF6
 26159                           tablat	equ	0xFF5
 26160                           prodh	equ	0xFF4
 26161                           prodl	equ	0xFF3
 26162                           intcon	equ	0xFF2
 26163                           intcon2	equ	0xFF1
 26164                           indf0	equ	0xFEF
 26165                           postinc0	equ	0xFEE
 26166                           plusw0	equ	0xFEB
 26167                           fsr0h	equ	0xFEA
 26168                           fsr0l	equ	0xFE9
 26169                           wreg	equ	0xFE8
 26170                           indf1	equ	0xFE7
 26171                           postdec1	equ	0xFE5
 26172                           fsr1h	equ	0xFE2
 26173                           fsr1l	equ	0xFE1
 26174                           indf2	equ	0xFDF
 26175                           postinc2	equ	0xFDE
 26176                           postdec2	equ	0xFDD
 26177                           plusw2	equ	0xFDB
 26178                           fsr2h	equ	0xFDA
 26179                           fsr2l	equ	0xFD9
 26180                           status	equ	0xFD8
 26181                           
 26182 ;; *************** function _delayUS *****************
 26183 ;; Defined at:
 26184 ;;		line 49 in file "MISC.c"
 26185 ;; Parameters:    Size  Location     Type
 26186 ;;  US              4   21[BANK0 ] long 
 26187 ;; Auto vars:     Size  Location     Type
 26188 ;;  i               4   26[BANK0 ] long 
 26189 ;; Return value:  Size  Location     Type
 26190 ;;		None               void
 26191 ;; Registers used:
 26192 ;;		wreg, status,2, status,0
 26193 ;; Tracked objects:
 26194 ;;		On entry : 0/0
 26195 ;;		On exit  : 0/0
 26196 ;;		Unchanged: 0/0
 26197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26199 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26201 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26202 ;;Total ram usage:        9 bytes
 26203 ;; Hardware stack levels used:    1
 26204 ;; Hardware stack levels required when called:    6
 26205 ;; This function calls:
 26206 ;;		Nothing
 26207 ;; This function is called by:
 26208 ;;		_main
 26209 ;;		_ReadVoltage
 26210 ;;		_InternalADC_Read
 26211 ;;		_UseIRCode
 26212 ;;		_SendNEC_wait
 26213 ;;		_ReadCodeButtons
 26214 ;;		_ResetBlue
 26215 ;;		_EnterCommandMode
 26216 ;;		_BluetoothInitialSetup
 26217 ;;		_UseBluetooth
 26218 ;;		_WaitForIRsignal
 26219 ;;		_CalibrateDelay
 26220 ;; This function uses a non-reentrant model
 26221 ;;
 26222                           
 26223                           	psect	text74
 26224  007268                     __ptext74:
 26225                           	opt stack 0
 26226  007268                     _delayUS:
 26227                           	opt stack 24
 26228                           
 26229                           ;MISC.c: 51: long i;
 26230                           ;MISC.c: 52: for(i=0; i<US; i += 2)
 26231                           
 26232                           ;incstack = 0
 26233  007268  0E00               	movlw	0
 26234  00726A  0100               	movlb	0	; () banked
 26235  00726C  6F7A               	movwf	delayUS@i& (0+255),b
 26236  00726E  0E00               	movlw	0
 26237  007270  6F7B               	movwf	(delayUS@i+1)& (0+255),b
 26238  007272  0E00               	movlw	0
 26239  007274  6F7C               	movwf	(delayUS@i+2)& (0+255),b
 26240  007276  0E00               	movlw	0
 26241  007278  6F7D               	movwf	(delayUS@i+3)& (0+255),b
 26242  00727A  D008               	goto	l160
 26243  00727C                     l161:
 26244                           
 26245                           ; BSR set to: 0
 26246                           ;MISC.c: 53: {
 26247                           ;MISC.c: 54: __nop();
 26248  00727C  F000               	nop	
 26249  00727E  0E02               	movlw	2
 26250  007280  0100               	movlb	0	; () banked
 26251  007282  277A               	addwf	delayUS@i& (0+255),f,b
 26252  007284  0E00               	movlw	0
 26253  007286  237B               	addwfc	(delayUS@i+1)& (0+255),f,b
 26254  007288  237C               	addwfc	(delayUS@i+2)& (0+255),f,b
 26255  00728A  237D               	addwfc	(delayUS@i+3)& (0+255),f,b
 26256  00728C                     l160:
 26257                           
 26258                           ; BSR set to: 0
 26259  00728C  0100               	movlb	0	; () banked
 26260  00728E  5175               	movf	delayUS@US& (0+255),w,b
 26261  007290  0100               	movlb	0	; () banked
 26262  007292  5D7A               	subwf	delayUS@i& (0+255),w,b
 26263  007294  0100               	movlb	0	; () banked
 26264  007296  5176               	movf	(delayUS@US+1)& (0+255),w,b
 26265  007298  0100               	movlb	0	; () banked
 26266  00729A  597B               	subwfb	(delayUS@i+1)& (0+255),w,b
 26267  00729C  0100               	movlb	0	; () banked
 26268  00729E  5177               	movf	(delayUS@US+2)& (0+255),w,b
 26269  0072A0  0100               	movlb	0	; () banked
 26270  0072A2  597C               	subwfb	(delayUS@i+2)& (0+255),w,b
 26271  0072A4  0100               	movlb	0	; () banked
 26272  0072A6  517D               	movf	(delayUS@i+3)& (0+255),w,b
 26273  0072A8  0A80               	xorlw	128
 26274  0072AA  0100               	movlb	0	; () banked
 26275  0072AC  6F79               	movwf	??_delayUS& (0+255),b
 26276  0072AE  0100               	movlb	0	; () banked
 26277  0072B0  5178               	movf	(delayUS@US+3)& (0+255),w,b
 26278  0072B2  0A80               	xorlw	128
 26279  0072B4  0100               	movlb	0	; () banked
 26280  0072B6  5979               	subwfb	??_delayUS& (0+255),w,b
 26281  0072B8  A0D8               	btfss	status,0,c
 26282  0072BA  D7E0               	goto	l161
 26283                           
 26284                           ; BSR set to: 0
 26285                           
 26286                           ; BSR set to: 0
 26287  0072BC  0012               	return		;funcret
 26288  0072BE                     __end_of_delayUS:
 26289                           	opt stack 0
 26290                           tblptru	equ	0xFF8
 26291                           tblptrh	equ	0xFF7
 26292                           tblptrl	equ	0xFF6
 26293                           tablat	equ	0xFF5
 26294                           prodh	equ	0xFF4
 26295                           prodl	equ	0xFF3
 26296                           intcon	equ	0xFF2
 26297                           intcon2	equ	0xFF1
 26298                           indf0	equ	0xFEF
 26299                           postinc0	equ	0xFEE
 26300                           plusw0	equ	0xFEB
 26301                           fsr0h	equ	0xFEA
 26302                           fsr0l	equ	0xFE9
 26303                           wreg	equ	0xFE8
 26304                           indf1	equ	0xFE7
 26305                           postdec1	equ	0xFE5
 26306                           fsr1h	equ	0xFE2
 26307                           fsr1l	equ	0xFE1
 26308                           indf2	equ	0xFDF
 26309                           postinc2	equ	0xFDE
 26310                           postdec2	equ	0xFDD
 26311                           plusw2	equ	0xFDB
 26312                           fsr2h	equ	0xFDA
 26313                           fsr2l	equ	0xFD9
 26314                           status	equ	0xFD8
 26315                           
 26316 ;; *************** function _BlueConnected *****************
 26317 ;; Defined at:
 26318 ;;		line 83 in file "Bluetooth.c"
 26319 ;; Parameters:    Size  Location     Type
 26320 ;;		None
 26321 ;; Auto vars:     Size  Location     Type
 26322 ;;		None
 26323 ;; Return value:  Size  Location     Type
 26324 ;;                  1    wreg      unsigned char 
 26325 ;; Registers used:
 26326 ;;		wreg
 26327 ;; Tracked objects:
 26328 ;;		On entry : 0/0
 26329 ;;		On exit  : 0/0
 26330 ;;		Unchanged: 0/0
 26331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26336 ;;Total ram usage:        0 bytes
 26337 ;; Hardware stack levels used:    1
 26338 ;; Hardware stack levels required when called:    6
 26339 ;; This function calls:
 26340 ;;		Nothing
 26341 ;; This function is called by:
 26342 ;;		_EnterCommandMode
 26343 ;; This function uses a non-reentrant model
 26344 ;;
 26345                           
 26346                           	psect	text75
 26347  007828                     __ptext75:
 26348                           	opt stack 0
 26349  007828                     _BlueConnected:
 26350                           	opt stack 20
 26351                           
 26352                           ;Bluetooth.c: 86: if((PORTA & 0x02) == 0x02)
 26353                           
 26354                           ; BSR set to: 0
 26355                           ;incstack = 0
 26356  007828  A280               	btfss	3968,1,c	;volatile
 26357  00782A  D002               	goto	l10510
 26358                           
 26359                           ;Bluetooth.c: 87: {
 26360                           ;Bluetooth.c: 88: return 1;
 26361  00782C  0E01               	movlw	1
 26362  00782E  0012               	return	
 26363  007830                     l10510:
 26364                           
 26365                           ;Bluetooth.c: 89: }
 26366                           ;Bluetooth.c: 90: return 0;
 26367  007830  0E00               	movlw	0
 26368  007832  0012               	return	
 26369  007834  0012               	return		;funcret
 26370  007836                     __end_of_BlueConnected:
 26371                           	opt stack 0
 26372                           tblptru	equ	0xFF8
 26373                           tblptrh	equ	0xFF7
 26374                           tblptrl	equ	0xFF6
 26375                           tablat	equ	0xFF5
 26376                           prodh	equ	0xFF4
 26377                           prodl	equ	0xFF3
 26378                           intcon	equ	0xFF2
 26379                           intcon2	equ	0xFF1
 26380                           indf0	equ	0xFEF
 26381                           postinc0	equ	0xFEE
 26382                           plusw0	equ	0xFEB
 26383                           fsr0h	equ	0xFEA
 26384                           fsr0l	equ	0xFE9
 26385                           wreg	equ	0xFE8
 26386                           indf1	equ	0xFE7
 26387                           postdec1	equ	0xFE5
 26388                           fsr1h	equ	0xFE2
 26389                           fsr1l	equ	0xFE1
 26390                           indf2	equ	0xFDF
 26391                           postinc2	equ	0xFDE
 26392                           postdec2	equ	0xFDD
 26393                           plusw2	equ	0xFDB
 26394                           fsr2h	equ	0xFDA
 26395                           fsr2l	equ	0xFD9
 26396                           status	equ	0xFD8
 26397                           
 26398 ;; *************** function _BluetoothConfigured *****************
 26399 ;; Defined at:
 26400 ;;		line 259 in file "Bluetooth.c"
 26401 ;; Parameters:    Size  Location     Type
 26402 ;;		None
 26403 ;; Auto vars:     Size  Location     Type
 26404 ;;		None
 26405 ;; Return value:  Size  Location     Type
 26406 ;;                  1    wreg      unsigned char 
 26407 ;; Registers used:
 26408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26409 ;; Tracked objects:
 26410 ;;		On entry : 0/0
 26411 ;;		On exit  : 0/0
 26412 ;;		Unchanged: 0/0
 26413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26418 ;;Total ram usage:        0 bytes
 26419 ;; Hardware stack levels used:    1
 26420 ;; Hardware stack levels required when called:   11
 26421 ;; This function calls:
 26422 ;;		_SyncGlobalToEEPROM
 26423 ;; This function is called by:
 26424 ;;		_InitBluetooth
 26425 ;; This function uses a non-reentrant model
 26426 ;;
 26427                           
 26428                           	psect	text76
 26429  007706                     __ptext76:
 26430                           	opt stack 0
 26431  007706                     _BluetoothConfigured:
 26432                           	opt stack 17
 26433                           
 26434                           ;Bluetooth.c: 261: if(Global.BlueToothFlag != 1)
 26435                           
 26436                           ;incstack = 0
 26437  007706  0107               	movlb	7	; () banked
 26438  007708  0500               	decf	_Global& (0+255),w,b
 26439  00770A  B4D8               	btfsc	status,2,c
 26440  00770C  D007               	goto	l7858
 26441                           
 26442                           ; BSR set to: 7
 26443                           ;Bluetooth.c: 262: {
 26444                           ;Bluetooth.c: 263: Global.BlueToothFlag = 1;
 26445  00770E  0E01               	movlw	1
 26446  007710  0107               	movlb	7	; () banked
 26447  007712  6F00               	movwf	_Global& (0+255),b
 26448                           
 26449                           ; BSR set to: 7
 26450                           ;Bluetooth.c: 264: SyncGlobalToEEPROM();
 26451  007714  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
 26452                           
 26453                           ;Bluetooth.c: 265: return 0;
 26454  007718  0E00               	movlw	0
 26455  00771A  0012               	return	
 26456  00771C                     l7858:
 26457                           
 26458                           ;Bluetooth.c: 266: }
 26459                           ;Bluetooth.c: 267: return 1;
 26460  00771C  0E01               	movlw	1
 26461  00771E  0012               	return	
 26462  007720  0012               	return		;funcret
 26463  007722                     __end_of_BluetoothConfigured:
 26464                           	opt stack 0
 26465                           tblptru	equ	0xFF8
 26466                           tblptrh	equ	0xFF7
 26467                           tblptrl	equ	0xFF6
 26468                           tablat	equ	0xFF5
 26469                           prodh	equ	0xFF4
 26470                           prodl	equ	0xFF3
 26471                           intcon	equ	0xFF2
 26472                           intcon2	equ	0xFF1
 26473                           indf0	equ	0xFEF
 26474                           postinc0	equ	0xFEE
 26475                           plusw0	equ	0xFEB
 26476                           fsr0h	equ	0xFEA
 26477                           fsr0l	equ	0xFE9
 26478                           wreg	equ	0xFE8
 26479                           indf1	equ	0xFE7
 26480                           postdec1	equ	0xFE5
 26481                           fsr1h	equ	0xFE2
 26482                           fsr1l	equ	0xFE1
 26483                           indf2	equ	0xFDF
 26484                           postinc2	equ	0xFDE
 26485                           postdec2	equ	0xFDD
 26486                           plusw2	equ	0xFDB
 26487                           fsr2h	equ	0xFDA
 26488                           fsr2l	equ	0xFD9
 26489                           status	equ	0xFD8
 26490                           
 26491 ;; *************** function _InitADC *****************
 26492 ;; Defined at:
 26493 ;;		line 133 in file "ADC.c"
 26494 ;; Parameters:    Size  Location     Type
 26495 ;;		None
 26496 ;; Auto vars:     Size  Location     Type
 26497 ;;		None
 26498 ;; Return value:  Size  Location     Type
 26499 ;;		None               void
 26500 ;; Registers used:
 26501 ;;		wreg, status,2, cstack
 26502 ;; Tracked objects:
 26503 ;;		On entry : 0/0
 26504 ;;		On exit  : 0/0
 26505 ;;		Unchanged: 0/0
 26506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26511 ;;Total ram usage:        0 bytes
 26512 ;; Hardware stack levels used:    1
 26513 ;; Hardware stack levels required when called:    7
 26514 ;; This function calls:
 26515 ;;		_ResetADC
 26516 ;; This function is called by:
 26517 ;;		_Init_System
 26518 ;; This function uses a non-reentrant model
 26519 ;;
 26520                           
 26521                           	psect	text77
 26522  00776A                     __ptext77:
 26523                           	opt stack 0
 26524  00776A                     _InitADC:
 26525                           	opt stack 22
 26526                           
 26527                           ;ADC.c: 135: ResetADC();
 26528                           
 26529                           ;incstack = 0
 26530  00776A  EC1B  F03C         	call	_ResetADC	;wreg free
 26531                           
 26532                           ;ADC.c: 136: ADCON2bits.ADFM = 1;
 26533  00776E  8EC0               	bsf	4032,7,c	;volatile
 26534                           
 26535                           ;ADC.c: 137: ADCON2bits.ACQT = 0x7;
 26536  007770  86C0               	bsf	4032,3,c	;volatile
 26537  007772  88C0               	bsf	4032,4,c	;volatile
 26538  007774  8AC0               	bsf	4032,5,c	;volatile
 26539                           
 26540                           ;ADC.c: 138: ADCON2bits.ADCS = 0x4;
 26541  007776  50C0               	movf	4032,w,c	;volatile
 26542  007778  0BF8               	andlw	-8
 26543  00777A  0904               	iorlw	4
 26544  00777C  6EC0               	movwf	4032,c	;volatile
 26545  00777E  0012               	return		;funcret
 26546  007780                     __end_of_InitADC:
 26547                           	opt stack 0
 26548                           tblptru	equ	0xFF8
 26549                           tblptrh	equ	0xFF7
 26550                           tblptrl	equ	0xFF6
 26551                           tablat	equ	0xFF5
 26552                           prodh	equ	0xFF4
 26553                           prodl	equ	0xFF3
 26554                           intcon	equ	0xFF2
 26555                           intcon2	equ	0xFF1
 26556                           indf0	equ	0xFEF
 26557                           postinc0	equ	0xFEE
 26558                           plusw0	equ	0xFEB
 26559                           fsr0h	equ	0xFEA
 26560                           fsr0l	equ	0xFE9
 26561                           wreg	equ	0xFE8
 26562                           indf1	equ	0xFE7
 26563                           postdec1	equ	0xFE5
 26564                           fsr1h	equ	0xFE2
 26565                           fsr1l	equ	0xFE1
 26566                           indf2	equ	0xFDF
 26567                           postinc2	equ	0xFDE
 26568                           postdec2	equ	0xFDD
 26569                           plusw2	equ	0xFDB
 26570                           fsr2h	equ	0xFDA
 26571                           fsr2l	equ	0xFD9
 26572                           status	equ	0xFD8
 26573                           
 26574 ;; *************** function _ResetADC *****************
 26575 ;; Defined at:
 26576 ;;		line 121 in file "ADC.c"
 26577 ;; Parameters:    Size  Location     Type
 26578 ;;		None
 26579 ;; Auto vars:     Size  Location     Type
 26580 ;;		None
 26581 ;; Return value:  Size  Location     Type
 26582 ;;		None               void
 26583 ;; Registers used:
 26584 ;;		wreg, status,2
 26585 ;; Tracked objects:
 26586 ;;		On entry : 0/0
 26587 ;;		On exit  : 0/0
 26588 ;;		Unchanged: 0/0
 26589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26594 ;;Total ram usage:        0 bytes
 26595 ;; Hardware stack levels used:    1
 26596 ;; Hardware stack levels required when called:    6
 26597 ;; This function calls:
 26598 ;;		Nothing
 26599 ;; This function is called by:
 26600 ;;		_InitADC
 26601 ;; This function uses a non-reentrant model
 26602 ;;
 26603                           
 26604                           	psect	text78
 26605  007836                     __ptext78:
 26606                           	opt stack 0
 26607  007836                     _ResetADC:
 26608                           	opt stack 22
 26609                           
 26610                           ;ADC.c: 123: ADCON0 =0;
 26611                           
 26612                           ;incstack = 0
 26613  007836  0E00               	movlw	0
 26614  007838  6EC2               	movwf	4034,c	;volatile
 26615                           
 26616                           ;ADC.c: 124: ADCON1 =0;
 26617  00783A  0E00               	movlw	0
 26618  00783C  6EC1               	movwf	4033,c	;volatile
 26619                           
 26620                           ;ADC.c: 125: ADCON2 =0;
 26621  00783E  0E00               	movlw	0
 26622  007840  6EC0               	movwf	4032,c	;volatile
 26623  007842  0012               	return		;funcret
 26624  007844                     __end_of_ResetADC:
 26625                           	opt stack 0
 26626                           tblptru	equ	0xFF8
 26627                           tblptrh	equ	0xFF7
 26628                           tblptrl	equ	0xFF6
 26629                           tablat	equ	0xFF5
 26630                           prodh	equ	0xFF4
 26631                           prodl	equ	0xFF3
 26632                           intcon	equ	0xFF2
 26633                           intcon2	equ	0xFF1
 26634                           indf0	equ	0xFEF
 26635                           postinc0	equ	0xFEE
 26636                           plusw0	equ	0xFEB
 26637                           fsr0h	equ	0xFEA
 26638                           fsr0l	equ	0xFE9
 26639                           wreg	equ	0xFE8
 26640                           indf1	equ	0xFE7
 26641                           postdec1	equ	0xFE5
 26642                           fsr1h	equ	0xFE2
 26643                           fsr1l	equ	0xFE1
 26644                           indf2	equ	0xFDF
 26645                           postinc2	equ	0xFDE
 26646                           postdec2	equ	0xFDD
 26647                           plusw2	equ	0xFDB
 26648                           fsr2h	equ	0xFDA
 26649                           fsr2l	equ	0xFD9
 26650                           status	equ	0xFD8
 26651                           
 26652 ;; *************** function _EEPROMinitialized *****************
 26653 ;; Defined at:
 26654 ;;		line 266 in file "EEPROM.c"
 26655 ;; Parameters:    Size  Location     Type
 26656 ;;		None
 26657 ;; Auto vars:     Size  Location     Type
 26658 ;;		None
 26659 ;; Return value:  Size  Location     Type
 26660 ;;                  1    wreg      unsigned char 
 26661 ;; Registers used:
 26662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26663 ;; Tracked objects:
 26664 ;;		On entry : 0/0
 26665 ;;		On exit  : 0/0
 26666 ;;		Unchanged: 0/0
 26667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26672 ;;Total ram usage:        0 bytes
 26673 ;; Hardware stack levels used:    1
 26674 ;; Hardware stack levels required when called:   11
 26675 ;; This function calls:
 26676 ;;		_SyncGlobalToEEPROM
 26677 ;; This function is called by:
 26678 ;;		_Init_System
 26679 ;; This function uses a non-reentrant model
 26680 ;;
 26681                           
 26682                           	psect	text79
 26683  007722                     __ptext79:
 26684                           	opt stack 0
 26685  007722                     _EEPROMinitialized:
 26686                           	opt stack 18
 26687                           
 26688                           ;EEPROM.c: 268: SyncGlobalToEEPROM();
 26689                           
 26690                           ;incstack = 0
 26691  007722  ECAD  F039         	call	_SyncGlobalToEEPROM	;wreg free
 26692                           
 26693                           ;EEPROM.c: 269: if(Global.EEPROMinitFlag == 59)
 26694  007726  0E3B               	movlw	59
 26695  007728  0107               	movlb	7	; () banked
 26696  00772A  192D               	xorwf	(_Global+45)& (0+255),w,b
 26697  00772C  A4D8               	btfss	status,2,c
 26698  00772E  D002               	goto	l8080
 26699                           
 26700                           ; BSR set to: 7
 26701                           ;EEPROM.c: 270: {
 26702                           ;EEPROM.c: 271: return 1;
 26703  007730  0E01               	movlw	1
 26704                           
 26705                           ; BSR set to: 7
 26706  007732  0012               	return	
 26707  007734                     l8080:
 26708                           
 26709                           ; BSR set to: 7
 26710                           ;EEPROM.c: 272: }
 26711                           ;EEPROM.c: 273: return 0;
 26712  007734  0E00               	movlw	0
 26713  007736  0012               	return	
 26714                           
 26715                           ; BSR set to: 7
 26716                           
 26717                           ; BSR set to: 7
 26718  007738  0012               	return		;funcret
 26719  00773A                     __end_of_EEPROMinitialized:
 26720                           	opt stack 0
 26721                           tblptru	equ	0xFF8
 26722                           tblptrh	equ	0xFF7
 26723                           tblptrl	equ	0xFF6
 26724                           tablat	equ	0xFF5
 26725                           prodh	equ	0xFF4
 26726                           prodl	equ	0xFF3
 26727                           intcon	equ	0xFF2
 26728                           intcon2	equ	0xFF1
 26729                           indf0	equ	0xFEF
 26730                           postinc0	equ	0xFEE
 26731                           plusw0	equ	0xFEB
 26732                           fsr0h	equ	0xFEA
 26733                           fsr0l	equ	0xFE9
 26734                           wreg	equ	0xFE8
 26735                           indf1	equ	0xFE7
 26736                           postdec1	equ	0xFE5
 26737                           fsr1h	equ	0xFE2
 26738                           fsr1l	equ	0xFE1
 26739                           indf2	equ	0xFDF
 26740                           postinc2	equ	0xFDE
 26741                           postdec2	equ	0xFDD
 26742                           plusw2	equ	0xFDB
 26743                           fsr2h	equ	0xFDA
 26744                           fsr2l	equ	0xFD9
 26745                           status	equ	0xFD8
 26746                           
 26747 ;; *************** function _SyncGlobalToEEPROM *****************
 26748 ;; Defined at:
 26749 ;;		line 220 in file "EEPROM.c"
 26750 ;; Parameters:    Size  Location     Type
 26751 ;;		None
 26752 ;; Auto vars:     Size  Location     Type
 26753 ;;		None
 26754 ;; Return value:  Size  Location     Type
 26755 ;;                  1    wreg      unsigned char 
 26756 ;; Registers used:
 26757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26758 ;; Tracked objects:
 26759 ;;		On entry : 0/0
 26760 ;;		On exit  : 0/0
 26761 ;;		Unchanged: 0/0
 26762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26767 ;;Total ram usage:        0 bytes
 26768 ;; Hardware stack levels used:    1
 26769 ;; Hardware stack levels required when called:   10
 26770 ;; This function calls:
 26771 ;;		_SetEEPROM
 26772 ;; This function is called by:
 26773 ;;		_Init_System
 26774 ;;		_SetEEPROMdefault
 26775 ;;		_EEPROMinitialized
 26776 ;;		_UseIRCode
 26777 ;;		_BluetoothConfigured
 26778 ;;		_UseBluetooth
 26779 ;; This function uses a non-reentrant model
 26780 ;;
 26781                           
 26782                           	psect	text80
 26783  00735A                     __ptext80:
 26784                           	opt stack 0
 26785  00735A                     _SyncGlobalToEEPROM:
 26786                           	opt stack 19
 26787                           
 26788                           ;EEPROM.c: 223: if(!SetEEPROM(Global,0xFFFFFFFF))
 26789                           
 26790                           ; BSR set to: 7
 26791                           ;incstack = 0
 26792  00735A  EE27  F000         	lfsr	2,_Global
 26793  00735E  EE01  F000         	lfsr	0,SetEEPROM@Temp
 26794  007362  0EF5               	movlw	245
 26795  007364                     u6811:
 26796  007364  CFDB FFEB          	movff	plusw2,plusw0
 26797  007368  06E8               	decf	wreg,f,c
 26798  00736A  E2FC               	bc	u6811
 26799  00736C  0EFF               	movlw	255
 26800  00736E  0101               	movlb	1	; () banked
 26801  007370  6FF6               	movwf	SetEEPROM@burn& (0+255),b
 26802  007372  0EFF               	movlw	255
 26803  007374  6FF7               	movwf	(SetEEPROM@burn+1)& (0+255),b
 26804  007376  0EFF               	movlw	255
 26805  007378  6FF8               	movwf	(SetEEPROM@burn+2)& (0+255),b
 26806  00737A  0EFF               	movlw	255
 26807  00737C  6FF9               	movwf	(SetEEPROM@burn+3)& (0+255),b
 26808  00737E  EC9D  F024         	call	_SetEEPROM	;wreg free
 26809  007382  0101               	movlb	1	; () banked
 26810  007384  5100               	movf	?_SetEEPROM& (0+255),w,b
 26811  007386  0101               	movlb	1	; () banked
 26812  007388  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 26813  00738A  0101               	movlb	1	; () banked
 26814  00738C  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 26815  00738E  0101               	movlb	1	; () banked
 26816  007390  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 26817  007392  A4D8               	btfss	status,2,c
 26818  007394  D002               	goto	l6950
 26819                           
 26820                           ; BSR set to: 1
 26821                           ;EEPROM.c: 224: {
 26822                           ;EEPROM.c: 225: return 1;
 26823  007396  0E01               	movlw	1
 26824                           
 26825                           ; BSR set to: 1
 26826  007398  0012               	return	
 26827  00739A                     l6950:
 26828                           
 26829                           ; BSR set to: 1
 26830                           ;EEPROM.c: 226: }
 26831                           ;EEPROM.c: 227: return 0;
 26832  00739A  0E00               	movlw	0
 26833  00739C  0012               	return	
 26834                           
 26835                           ; BSR set to: 1
 26836                           
 26837                           ; BSR set to: 1
 26838  00739E  0012               	return		;funcret
 26839  0073A0                     __end_of_SyncGlobalToEEPROM:
 26840                           	opt stack 0
 26841                           tblptru	equ	0xFF8
 26842                           tblptrh	equ	0xFF7
 26843                           tblptrl	equ	0xFF6
 26844                           tablat	equ	0xFF5
 26845                           prodh	equ	0xFF4
 26846                           prodl	equ	0xFF3
 26847                           intcon	equ	0xFF2
 26848                           intcon2	equ	0xFF1
 26849                           indf0	equ	0xFEF
 26850                           postinc0	equ	0xFEE
 26851                           plusw0	equ	0xFEB
 26852                           fsr0h	equ	0xFEA
 26853                           fsr0l	equ	0xFE9
 26854                           wreg	equ	0xFE8
 26855                           indf1	equ	0xFE7
 26856                           postdec1	equ	0xFE5
 26857                           fsr1h	equ	0xFE2
 26858                           fsr1l	equ	0xFE1
 26859                           indf2	equ	0xFDF
 26860                           postinc2	equ	0xFDE
 26861                           postdec2	equ	0xFDD
 26862                           plusw2	equ	0xFDB
 26863                           fsr2h	equ	0xFDA
 26864                           fsr2l	equ	0xFD9
 26865                           status	equ	0xFD8
 26866                           
 26867 ;; *************** function _SetEEPROM *****************
 26868 ;; Defined at:
 26869 ;;		line 151 in file "EEPROM.c"
 26870 ;; Parameters:    Size  Location     Type
 26871 ;;  Temp          246    0[BANK1 ] struct EEdata
 26872 ;;  burn            4  246[BANK1 ] unsigned long 
 26873 ;; Auto vars:     Size  Location     Type
 26874 ;;  fail            4   76[BANK0 ] unsigned long 
 26875 ;;  j               1   83[BANK0 ] unsigned char 
 26876 ;;  i               1   82[BANK0 ] unsigned char 
 26877 ;;  Arrayspot       1   81[BANK0 ] unsigned char 
 26878 ;;  temp            1   80[BANK0 ] unsigned char 
 26879 ;; Return value:  Size  Location     Type
 26880 ;;                  4    0[BANK1 ] unsigned long 
 26881 ;; Registers used:
 26882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26883 ;; Tracked objects:
 26884 ;;		On entry : 0/0
 26885 ;;		On exit  : 0/0
 26886 ;;		Unchanged: 0/0
 26887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26888 ;;      Params:         0       0     250       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26889 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26891 ;;      Totals:         0      10     250       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26892 ;;Total ram usage:      260 bytes
 26893 ;; Hardware stack levels used:    1
 26894 ;; Hardware stack levels required when called:    9
 26895 ;; This function calls:
 26896 ;;		_SetMemoryChar
 26897 ;;		_SetMemoryLong
 26898 ;; This function is called by:
 26899 ;;		_SyncGlobalToEEPROM
 26900 ;; This function uses a non-reentrant model
 26901 ;;
 26902                           
 26903                           	psect	text81
 26904  00493A                     __ptext81:
 26905                           	opt stack 0
 26906  00493A                     _SetEEPROM:
 26907                           	opt stack 19
 26908                           
 26909                           ;EEPROM.c: 153: unsigned long fail = 0;
 26910                           
 26911                           ; BSR set to: 1
 26912                           ;incstack = 0
 26913  00493A  0E00               	movlw	0
 26914  00493C  0100               	movlb	0	; () banked
 26915  00493E  6FAC               	movwf	SetEEPROM@fail& (0+255),b
 26916  004940  0E00               	movlw	0
 26917  004942  6FAD               	movwf	(SetEEPROM@fail+1)& (0+255),b
 26918  004944  0E00               	movlw	0
 26919  004946  6FAE               	movwf	(SetEEPROM@fail+2)& (0+255),b
 26920  004948  0E00               	movlw	0
 26921  00494A  6FAF               	movwf	(SetEEPROM@fail+3)& (0+255),b
 26922                           
 26923                           ;EEPROM.c: 154: unsigned char i,j,temp;
 26924                           ;EEPROM.c: 155: unsigned char Arrayspot=5;
 26925  00494C  0E05               	movlw	5
 26926  00494E  0100               	movlb	0	; () banked
 26927  004950  6FB1               	movwf	SetEEPROM@Arrayspot& (0+255),b
 26928                           
 26929                           ; BSR set to: 0
 26930                           ;EEPROM.c: 157: if(burn & 0x00000001)
 26931  004952  0101               	movlb	1	; () banked
 26932  004954  A1F6               	btfss	SetEEPROM@burn& (0+255),0,b
 26933  004956  D00D               	goto	l6762
 26934                           
 26935                           ; BSR set to: 1
 26936                           ;EEPROM.c: 158: {
 26937                           ;EEPROM.c: 159: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 26938  004958  0E00               	movlw	0
 26939  00495A  0100               	movlb	0	; () banked
 26940  00495C  6F7E               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 26941  00495E  0101               	movlb	1	; () banked
 26942  004960  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 26943  004962  EC72  F03A         	call	_SetMemoryChar
 26944  004966  0900               	iorlw	0
 26945  004968  A4D8               	btfss	status,2,c
 26946  00496A  D003               	goto	l6762
 26947                           
 26948                           ;EEPROM.c: 160: {
 26949                           ;EEPROM.c: 162: fail |= 0x00000001;
 26950  00496C  0100               	movlb	0	; () banked
 26951  00496E  81AC               	bsf	SetEEPROM@fail& (0+255),0,b
 26952                           
 26953                           ; BSR set to: 0
 26954  004970  D000               	goto	l6762
 26955  004972                     l6762:
 26956                           
 26957                           ;EEPROM.c: 163: }
 26958                           ;EEPROM.c: 164: }
 26959                           ;EEPROM.c: 165: if(burn & 0x00000002)
 26960  004972  0101               	movlb	1	; () banked
 26961  004974  A3F6               	btfss	SetEEPROM@burn& (0+255),1,b
 26962  004976  D013               	goto	l6768
 26963                           
 26964                           ; BSR set to: 1
 26965                           ;EEPROM.c: 166: {
 26966                           ;EEPROM.c: 167: if(!SetMemoryLong(Temp.SWNECcode,1))
 26967  004978  C101  F099         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 26968  00497C  C102  F09A         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 26969  004980  C103  F09B         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 26970  004984  C104  F09C         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 26971  004988  0E01               	movlw	1
 26972  00498A  0100               	movlb	0	; () banked
 26973  00498C  6F9D               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 26974  00498E  EC52  F02F         	call	_SetMemoryLong	;wreg free
 26975  004992  0900               	iorlw	0
 26976  004994  A4D8               	btfss	status,2,c
 26977  004996  D003               	goto	l6768
 26978                           
 26979                           ;EEPROM.c: 168: {
 26980                           ;EEPROM.c: 170: fail |= 0x00000002;
 26981  004998  0100               	movlb	0	; () banked
 26982  00499A  83AC               	bsf	SetEEPROM@fail& (0+255),1,b
 26983                           
 26984                           ; BSR set to: 0
 26985  00499C  D000               	goto	l6768
 26986  00499E                     l6768:
 26987                           
 26988                           ;EEPROM.c: 171: }
 26989                           ;EEPROM.c: 172: }
 26990                           ;EEPROM.c: 173: if(burn & 0x00000004)
 26991  00499E  0101               	movlb	1	; () banked
 26992  0049A0  A5F6               	btfss	SetEEPROM@burn& (0+255),2,b
 26993  0049A2  D047               	goto	l680
 26994                           
 26995                           ; BSR set to: 1
 26996                           ;EEPROM.c: 174: {
 26997                           ;EEPROM.c: 175: for(i=0; i< 20; i++)
 26998  0049A4  0E00               	movlw	0
 26999  0049A6  0100               	movlb	0	; () banked
 27000  0049A8  6FB2               	movwf	SetEEPROM@i& (0+255),b
 27001  0049AA                     l6772:
 27002                           
 27003                           ; BSR set to: 0
 27004  0049AA  0E13               	movlw	19
 27005  0049AC  0100               	movlb	0	; () banked
 27006  0049AE  65B2               	cpfsgt	SetEEPROM@i& (0+255),b
 27007  0049B0  D001               	goto	l6776
 27008                           
 27009                           ; BSR set to: 0
 27010  0049B2  D03F               	goto	l680
 27011  0049B4                     l6776:
 27012                           
 27013                           ; BSR set to: 0
 27014                           ;EEPROM.c: 176: {
 27015                           ;EEPROM.c: 177: for(j=0; j < 2; j++)
 27016  0049B4  0E00               	movlw	0
 27017  0049B6  0100               	movlb	0	; () banked
 27018  0049B8  6FB3               	movwf	SetEEPROM@j& (0+255),b
 27019  0049BA                     l6778:
 27020                           
 27021                           ; BSR set to: 0
 27022  0049BA  0E01               	movlw	1
 27023  0049BC  0100               	movlb	0	; () banked
 27024  0049BE  65B3               	cpfsgt	SetEEPROM@j& (0+255),b
 27025  0049C0  D001               	goto	l6782
 27026                           
 27027                           ; BSR set to: 0
 27028  0049C2  D034               	goto	l6790
 27029  0049C4                     l6782:
 27030                           
 27031                           ; BSR set to: 0
 27032                           ;EEPROM.c: 178: {
 27033                           ;EEPROM.c: 179: temp = Temp.RemoteButtonNEC[i][j];
 27034  0049C4  0100               	movlb	0	; () banked
 27035  0049C6  51B2               	movf	SetEEPROM@i& (0+255),w,b
 27036  0049C8  0D02               	mullw	2
 27037  0049CA  0E00               	movlw	low SetEEPROM@Temp
 27038  0049CC  0100               	movlb	0	; () banked
 27039  0049CE  6FAA               	movwf	??_SetEEPROM& (0+255),b
 27040  0049D0  0E01               	movlw	high SetEEPROM@Temp
 27041  0049D2  0100               	movlb	0	; () banked
 27042  0049D4  6FAB               	movwf	(??_SetEEPROM+1)& (0+255),b
 27043  0049D6  50F3               	movf	prodl,w,c
 27044  0049D8  0100               	movlb	0	; () banked
 27045  0049DA  27AA               	addwf	??_SetEEPROM& (0+255),f,b
 27046  0049DC  50F4               	movf	prodh,w,c
 27047  0049DE  0100               	movlb	0	; () banked
 27048  0049E0  23AB               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 27049  0049E2  0100               	movlb	0	; () banked
 27050  0049E4  51B3               	movf	SetEEPROM@j& (0+255),w,b
 27051  0049E6  0D01               	mullw	1
 27052  0049E8  50F3               	movf	prodl,w,c
 27053  0049EA  0100               	movlb	0	; () banked
 27054  0049EC  27AA               	addwf	??_SetEEPROM& (0+255),f,b
 27055  0049EE  50F4               	movf	prodh,w,c
 27056  0049F0  0100               	movlb	0	; () banked
 27057  0049F2  23AB               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 27058  0049F4  0E05               	movlw	5
 27059  0049F6  0100               	movlb	0	; () banked
 27060  0049F8  25AA               	addwf	??_SetEEPROM& (0+255),w,b
 27061  0049FA  6ED9               	movwf	fsr2l,c
 27062  0049FC  0E00               	movlw	0
 27063  0049FE  0100               	movlb	0	; () banked
 27064  004A00  21AB               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 27065  004A02  6EDA               	movwf	fsr2h,c
 27066  004A04  50DF               	movf	indf2,w,c
 27067  004A06  0100               	movlb	0	; () banked
 27068  004A08  6FB0               	movwf	SetEEPROM@temp& (0+255),b
 27069                           
 27070                           ; BSR set to: 0
 27071                           ;EEPROM.c: 180: if(!SetMemoryChar(temp,Arrayspot++))
 27072  004A0A  0100               	movlb	0	; () banked
 27073  004A0C  2BB1               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 27074  004A0E  05B1               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 27075  004A10  0100               	movlb	0	; () banked
 27076  004A12  6F7E               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 27077  004A14  0100               	movlb	0	; () banked
 27078  004A16  51B0               	movf	SetEEPROM@temp& (0+255),w,b
 27079  004A18  EC72  F03A         	call	_SetMemoryChar
 27080  004A1C  0900               	iorlw	0
 27081  004A1E  A4D8               	btfss	status,2,c
 27082  004A20  D002               	goto	l685
 27083                           
 27084                           ;EEPROM.c: 181: {
 27085                           ;EEPROM.c: 183: fail |= 0x00000004;
 27086  004A22  0100               	movlb	0	; () banked
 27087  004A24  85AC               	bsf	SetEEPROM@fail& (0+255),2,b
 27088  004A26                     l685:
 27089  004A26  0100               	movlb	0	; () banked
 27090  004A28  2BB3               	incf	SetEEPROM@j& (0+255),f,b
 27091  004A2A  D7C7               	goto	l6778
 27092  004A2C                     l6790:
 27093                           
 27094                           ; BSR set to: 0
 27095  004A2C  0100               	movlb	0	; () banked
 27096  004A2E  2BB2               	incf	SetEEPROM@i& (0+255),f,b
 27097  004A30  D7BC               	goto	l6772
 27098  004A32                     l680:
 27099                           
 27100                           ;EEPROM.c: 184: }
 27101                           ;EEPROM.c: 185: }
 27102                           ;EEPROM.c: 186: }
 27103                           ;EEPROM.c: 187: }
 27104                           ;EEPROM.c: 188: if(burn & 0x00000008)
 27105  004A32  0101               	movlb	1	; () banked
 27106  004A34  A7F6               	btfss	SetEEPROM@burn& (0+255),3,b
 27107  004A36  D00D               	goto	l6798
 27108                           
 27109                           ; BSR set to: 1
 27110                           ;EEPROM.c: 189: {
 27111                           ;EEPROM.c: 190: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*20 + 5)))
 27112  004A38  0E2D               	movlw	45
 27113  004A3A  0100               	movlb	0	; () banked
 27114  004A3C  6F7E               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 27115  004A3E  0101               	movlb	1	; () banked
 27116  004A40  512D               	movf	(SetEEPROM@Temp+45)& (0+255),w,b
 27117  004A42  EC72  F03A         	call	_SetMemoryChar
 27118  004A46  0900               	iorlw	0
 27119  004A48  A4D8               	btfss	status,2,c
 27120  004A4A  D003               	goto	l6798
 27121                           
 27122                           ;EEPROM.c: 191: {
 27123                           ;EEPROM.c: 193: fail |= 0x00000008;
 27124  004A4C  0100               	movlb	0	; () banked
 27125  004A4E  87AC               	bsf	SetEEPROM@fail& (0+255),3,b
 27126                           
 27127                           ; BSR set to: 0
 27128  004A50  D000               	goto	l6798
 27129  004A52                     l6798:
 27130                           
 27131                           ;EEPROM.c: 194: }
 27132                           ;EEPROM.c: 195: }
 27133                           ;EEPROM.c: 196: if(burn & 0x00000010)
 27134  004A52  0101               	movlb	1	; () banked
 27135  004A54  A9F6               	btfss	SetEEPROM@burn& (0+255),4,b
 27136  004A56  D04A               	goto	l688
 27137                           
 27138                           ; BSR set to: 1
 27139                           ;EEPROM.c: 197: {
 27140                           ;EEPROM.c: 198: Arrayspot=(2*20 + 7);
 27141  004A58  0E2F               	movlw	47
 27142  004A5A  0100               	movlb	0	; () banked
 27143  004A5C  6FB1               	movwf	SetEEPROM@Arrayspot& (0+255),b
 27144                           
 27145                           ;EEPROM.c: 199: for(i=0; i< 20; i++)
 27146  004A5E  0E00               	movlw	0
 27147  004A60  0100               	movlb	0	; () banked
 27148  004A62  6FB2               	movwf	SetEEPROM@i& (0+255),b
 27149  004A64                     l6802:
 27150                           
 27151                           ; BSR set to: 0
 27152  004A64  0E13               	movlw	19
 27153  004A66  0100               	movlb	0	; () banked
 27154  004A68  65B2               	cpfsgt	SetEEPROM@i& (0+255),b
 27155  004A6A  D001               	goto	l6806
 27156                           
 27157                           ; BSR set to: 0
 27158  004A6C  D03F               	goto	l688
 27159  004A6E                     l6806:
 27160                           
 27161                           ; BSR set to: 0
 27162                           ;EEPROM.c: 200: {
 27163                           ;EEPROM.c: 201: for(j=0; j < 2; j++)
 27164  004A6E  0E00               	movlw	0
 27165  004A70  0100               	movlb	0	; () banked
 27166  004A72  6FB3               	movwf	SetEEPROM@j& (0+255),b
 27167  004A74                     l6808:
 27168                           
 27169                           ; BSR set to: 0
 27170  004A74  0E01               	movlw	1
 27171  004A76  0100               	movlb	0	; () banked
 27172  004A78  65B3               	cpfsgt	SetEEPROM@j& (0+255),b
 27173  004A7A  D001               	goto	l6812
 27174                           
 27175                           ; BSR set to: 0
 27176  004A7C  D034               	goto	l6820
 27177  004A7E                     l6812:
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;EEPROM.c: 202: {
 27181                           ;EEPROM.c: 203: temp = Temp.RemoteButton1RF[i][j];
 27182  004A7E  0100               	movlb	0	; () banked
 27183  004A80  51B2               	movf	SetEEPROM@i& (0+255),w,b
 27184  004A82  0D02               	mullw	2
 27185  004A84  0E00               	movlw	low SetEEPROM@Temp
 27186  004A86  0100               	movlb	0	; () banked
 27187  004A88  6FAA               	movwf	??_SetEEPROM& (0+255),b
 27188  004A8A  0E01               	movlw	high SetEEPROM@Temp
 27189  004A8C  0100               	movlb	0	; () banked
 27190  004A8E  6FAB               	movwf	(??_SetEEPROM+1)& (0+255),b
 27191  004A90  50F3               	movf	prodl,w,c
 27192  004A92  0100               	movlb	0	; () banked
 27193  004A94  27AA               	addwf	??_SetEEPROM& (0+255),f,b
 27194  004A96  50F4               	movf	prodh,w,c
 27195  004A98  0100               	movlb	0	; () banked
 27196  004A9A  23AB               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 27197  004A9C  0100               	movlb	0	; () banked
 27198  004A9E  51B3               	movf	SetEEPROM@j& (0+255),w,b
 27199  004AA0  0D01               	mullw	1
 27200  004AA2  50F3               	movf	prodl,w,c
 27201  004AA4  0100               	movlb	0	; () banked
 27202  004AA6  27AA               	addwf	??_SetEEPROM& (0+255),f,b
 27203  004AA8  50F4               	movf	prodh,w,c
 27204  004AAA  0100               	movlb	0	; () banked
 27205  004AAC  23AB               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 27206  004AAE  0E2E               	movlw	46
 27207  004AB0  0100               	movlb	0	; () banked
 27208  004AB2  25AA               	addwf	??_SetEEPROM& (0+255),w,b
 27209  004AB4  6ED9               	movwf	fsr2l,c
 27210  004AB6  0E00               	movlw	0
 27211  004AB8  0100               	movlb	0	; () banked
 27212  004ABA  21AB               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 27213  004ABC  6EDA               	movwf	fsr2h,c
 27214  004ABE  50DF               	movf	indf2,w,c
 27215  004AC0  0100               	movlb	0	; () banked
 27216  004AC2  6FB0               	movwf	SetEEPROM@temp& (0+255),b
 27217                           
 27218                           ; BSR set to: 0
 27219                           ;EEPROM.c: 204: if(!SetMemoryChar(temp,Arrayspot++))
 27220  004AC4  0100               	movlb	0	; () banked
 27221  004AC6  2BB1               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 27222  004AC8  05B1               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 27223  004ACA  0100               	movlb	0	; () banked
 27224  004ACC  6F7E               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 27225  004ACE  0100               	movlb	0	; () banked
 27226  004AD0  51B0               	movf	SetEEPROM@temp& (0+255),w,b
 27227  004AD2  EC72  F03A         	call	_SetMemoryChar
 27228  004AD6  0900               	iorlw	0
 27229  004AD8  A4D8               	btfss	status,2,c
 27230  004ADA  D002               	goto	l693
 27231                           
 27232                           ;EEPROM.c: 205: {
 27233                           ;EEPROM.c: 207: fail |= 0x00000010;
 27234  004ADC  0100               	movlb	0	; () banked
 27235  004ADE  89AC               	bsf	SetEEPROM@fail& (0+255),4,b
 27236  004AE0                     l693:
 27237  004AE0  0100               	movlb	0	; () banked
 27238  004AE2  2BB3               	incf	SetEEPROM@j& (0+255),f,b
 27239  004AE4  D7C7               	goto	l6808
 27240  004AE6                     l6820:
 27241                           
 27242                           ; BSR set to: 0
 27243  004AE6  0100               	movlb	0	; () banked
 27244  004AE8  2BB2               	incf	SetEEPROM@i& (0+255),f,b
 27245  004AEA  D7BC               	goto	l6802
 27246  004AEC                     l688:
 27247                           
 27248                           ;EEPROM.c: 208: }
 27249                           ;EEPROM.c: 209: }
 27250                           ;EEPROM.c: 210: }
 27251                           ;EEPROM.c: 211: }
 27252                           ;EEPROM.c: 212: return fail;
 27253  004AEC  C0AC  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 27254  004AF0  C0AD  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 27255  004AF4  C0AE  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 27256  004AF8  C0AF  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 27257  004AFC  0012               	return		;funcret
 27258  004AFE                     __end_of_SetEEPROM:
 27259                           	opt stack 0
 27260                           tblptru	equ	0xFF8
 27261                           tblptrh	equ	0xFF7
 27262                           tblptrl	equ	0xFF6
 27263                           tablat	equ	0xFF5
 27264                           prodh	equ	0xFF4
 27265                           prodl	equ	0xFF3
 27266                           intcon	equ	0xFF2
 27267                           intcon2	equ	0xFF1
 27268                           indf0	equ	0xFEF
 27269                           postinc0	equ	0xFEE
 27270                           plusw0	equ	0xFEB
 27271                           fsr0h	equ	0xFEA
 27272                           fsr0l	equ	0xFE9
 27273                           wreg	equ	0xFE8
 27274                           indf1	equ	0xFE7
 27275                           postdec1	equ	0xFE5
 27276                           fsr1h	equ	0xFE2
 27277                           fsr1l	equ	0xFE1
 27278                           indf2	equ	0xFDF
 27279                           postinc2	equ	0xFDE
 27280                           postdec2	equ	0xFDD
 27281                           plusw2	equ	0xFDB
 27282                           fsr2h	equ	0xFDA
 27283                           fsr2l	equ	0xFD9
 27284                           status	equ	0xFD8
 27285                           
 27286 ;; *************** function _SetMemoryLong *****************
 27287 ;; Defined at:
 27288 ;;		line 336 in file "EEPROM.c"
 27289 ;; Parameters:    Size  Location     Type
 27290 ;;  Data            4   57[BANK0 ] unsigned long 
 27291 ;;  AddressFirst    1   61[BANK0 ] unsigned char 
 27292 ;; Auto vars:     Size  Location     Type
 27293 ;;  Test            4   66[BANK0 ] unsigned long 
 27294 ;;  L               1   73[BANK0 ] unsigned char 
 27295 ;;  ML              1   72[BANK0 ] unsigned char 
 27296 ;;  MH              1   71[BANK0 ] unsigned char 
 27297 ;;  H               1   70[BANK0 ] unsigned char 
 27298 ;; Return value:  Size  Location     Type
 27299 ;;                  1    wreg      unsigned char 
 27300 ;; Registers used:
 27301 ;;		wreg, status,2, status,0, cstack
 27302 ;; Tracked objects:
 27303 ;;		On entry : 0/0
 27304 ;;		On exit  : 0/0
 27305 ;;		Unchanged: 0/0
 27306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27307 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27308 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27309 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27310 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27311 ;;Total ram usage:       17 bytes
 27312 ;; Hardware stack levels used:    1
 27313 ;; Hardware stack levels required when called:    8
 27314 ;; This function calls:
 27315 ;;		_GetMemoryLong
 27316 ;;		_WriteEEPROM_1Byte
 27317 ;; This function is called by:
 27318 ;;		_SetEEPROM
 27319 ;; This function uses a non-reentrant model
 27320 ;;
 27321                           
 27322                           	psect	text82
 27323  005EA4                     __ptext82:
 27324                           	opt stack 0
 27325  005EA4                     _SetMemoryLong:
 27326                           	opt stack 19
 27327                           
 27328                           ;EEPROM.c: 338: unsigned char H;
 27329                           ;EEPROM.c: 339: unsigned char MH;
 27330                           ;EEPROM.c: 340: unsigned char ML;
 27331                           ;EEPROM.c: 341: unsigned char L;
 27332                           ;EEPROM.c: 342: unsigned long Test;
 27333                           ;EEPROM.c: 344: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 27334                           
 27335                           ;incstack = 0
 27336  005EA4  0E00               	movlw	0
 27337  005EA6  0100               	movlb	0	; () banked
 27338  005EA8  1599               	andwf	SetMemoryLong@Data& (0+255),w,b
 27339  005EAA  0100               	movlb	0	; () banked
 27340  005EAC  6F9E               	movwf	??_SetMemoryLong& (0+255),b
 27341  005EAE  0E00               	movlw	0
 27342  005EB0  0100               	movlb	0	; () banked
 27343  005EB2  159A               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 27344  005EB4  0100               	movlb	0	; () banked
 27345  005EB6  6F9F               	movwf	(??_SetMemoryLong+1)& (0+255),b
 27346  005EB8  0E00               	movlw	0
 27347  005EBA  0100               	movlb	0	; () banked
 27348  005EBC  159B               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 27349  005EBE  0100               	movlb	0	; () banked
 27350  005EC0  6FA0               	movwf	(??_SetMemoryLong+2)& (0+255),b
 27351  005EC2  0EFF               	movlw	255
 27352  005EC4  0100               	movlb	0	; () banked
 27353  005EC6  159C               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 27354  005EC8  0100               	movlb	0	; () banked
 27355  005ECA  6FA1               	movwf	(??_SetMemoryLong+3)& (0+255),b
 27356  005ECC  0E19               	movlw	25
 27357  005ECE  D006               	goto	u6320
 27358  005ED0                     u6325:
 27359  005ED0  0100               	movlb	0	; () banked
 27360  005ED2  90D8               	bcf	status,0,c
 27361  005ED4  33A1               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 27362  005ED6  33A0               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 27363  005ED8  339F               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 27364  005EDA  339E               	rrcf	??_SetMemoryLong& (0+255),f,b
 27365  005EDC                     u6320:
 27366  005EDC  2EE8               	decfsz	wreg,f,c
 27367  005EDE  D7F8               	goto	u6325
 27368  005EE0  0100               	movlb	0	; () banked
 27369  005EE2  519E               	movf	??_SetMemoryLong& (0+255),w,b
 27370  005EE4  0100               	movlb	0	; () banked
 27371  005EE6  6FA6               	movwf	SetMemoryLong@H& (0+255),b
 27372                           
 27373                           ; BSR set to: 0
 27374                           ;EEPROM.c: 345: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 27375  005EE8  C09B  F0A7         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 27376                           
 27377                           ; BSR set to: 0
 27378                           ;EEPROM.c: 346: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 27379  005EEC  C09A  F0A8         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 27380                           
 27381                           ; BSR set to: 0
 27382                           ;EEPROM.c: 347: L = (unsigned char) (Data & 0X000000FF);
 27383  005EF0  C099  F0A9         	movff	SetMemoryLong@Data,SetMemoryLong@L
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;EEPROM.c: 350: WriteEEPROM_1Byte(AddressFirst, H);
 27387  005EF4  C09D  F075         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 27388  005EF8  0100               	movlb	0	; () banked
 27389  005EFA  6B76               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 27390  005EFC  C0A6  F077         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 27391  005F00  EC15  F03A         	call	_WriteEEPROM_1Byte	;wreg free
 27392                           
 27393                           ;EEPROM.c: 351: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 27394  005F04  0E01               	movlw	1
 27395  005F06  0100               	movlb	0	; () banked
 27396  005F08  259D               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 27397  005F0A  0100               	movlb	0	; () banked
 27398  005F0C  6F75               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 27399  005F0E  0100               	movlb	0	; () banked
 27400  005F10  6B76               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 27401  005F12  0E00               	movlw	0
 27402  005F14  2376               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 27403  005F16  C0A7  F077         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 27404  005F1A  EC15  F03A         	call	_WriteEEPROM_1Byte	;wreg free
 27405                           
 27406                           ;EEPROM.c: 352: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 27407  005F1E  0E02               	movlw	2
 27408  005F20  0100               	movlb	0	; () banked
 27409  005F22  259D               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 27410  005F24  0100               	movlb	0	; () banked
 27411  005F26  6F75               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 27412  005F28  0100               	movlb	0	; () banked
 27413  005F2A  6B76               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 27414  005F2C  0E00               	movlw	0
 27415  005F2E  2376               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 27416  005F30  C0A8  F077         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 27417  005F34  EC15  F03A         	call	_WriteEEPROM_1Byte	;wreg free
 27418                           
 27419                           ;EEPROM.c: 353: WriteEEPROM_1Byte((AddressFirst + 3), L);
 27420  005F38  0E03               	movlw	3
 27421  005F3A  0100               	movlb	0	; () banked
 27422  005F3C  259D               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 27423  005F3E  0100               	movlb	0	; () banked
 27424  005F40  6F75               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 27425  005F42  0100               	movlb	0	; () banked
 27426  005F44  6B76               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 27427  005F46  0E00               	movlw	0
 27428  005F48  2376               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 27429  005F4A  C0A9  F077         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 27430  005F4E  EC15  F03A         	call	_WriteEEPROM_1Byte	;wreg free
 27431                           
 27432                           ;EEPROM.c: 356: Test = GetMemoryLong(AddressFirst);
 27433  005F52  0100               	movlb	0	; () banked
 27434  005F54  519D               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 27435  005F56  ECE3  F027         	call	_GetMemoryLong
 27436  005F5A  C078  F0A2         	movff	?_GetMemoryLong,SetMemoryLong@Test
 27437  005F5E  C079  F0A3         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 27438  005F62  C07A  F0A4         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 27439  005F66  C07B  F0A5         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 27440                           
 27441                           ;EEPROM.c: 358: if(Test == Data)
 27442  005F6A  0100               	movlb	0	; () banked
 27443  005F6C  5199               	movf	SetMemoryLong@Data& (0+255),w,b
 27444  005F6E  0100               	movlb	0	; () banked
 27445  005F70  19A2               	xorwf	SetMemoryLong@Test& (0+255),w,b
 27446  005F72  E112               	bnz	l6700
 27447  005F74  0100               	movlb	0	; () banked
 27448  005F76  519A               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 27449  005F78  0100               	movlb	0	; () banked
 27450  005F7A  19A3               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 27451  005F7C  E10D               	bnz	l6700
 27452  005F7E  0100               	movlb	0	; () banked
 27453  005F80  519B               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 27454  005F82  0100               	movlb	0	; () banked
 27455  005F84  19A4               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 27456  005F86  E108               	bnz	l6700
 27457  005F88  0100               	movlb	0	; () banked
 27458  005F8A  519C               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 27459  005F8C  0100               	movlb	0	; () banked
 27460  005F8E  19A5               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 27461  005F90  A4D8               	btfss	status,2,c
 27462  005F92  D002               	goto	l6700
 27463                           
 27464                           ; BSR set to: 0
 27465                           ;EEPROM.c: 359: {
 27466                           ;EEPROM.c: 360: return 1;
 27467  005F94  0E01               	movlw	1
 27468                           
 27469                           ; BSR set to: 0
 27470  005F96  0012               	return	
 27471  005F98                     l6700:
 27472                           
 27473                           ; BSR set to: 0
 27474                           ;EEPROM.c: 361: }
 27475                           ;EEPROM.c: 362: return 0;
 27476  005F98  0E00               	movlw	0
 27477  005F9A  0012               	return	
 27478                           
 27479                           ; BSR set to: 0
 27480                           
 27481                           ; BSR set to: 0
 27482  005F9C  0012               	return		;funcret
 27483  005F9E                     __end_of_SetMemoryLong:
 27484                           	opt stack 0
 27485                           tblptru	equ	0xFF8
 27486                           tblptrh	equ	0xFF7
 27487                           tblptrl	equ	0xFF6
 27488                           tablat	equ	0xFF5
 27489                           prodh	equ	0xFF4
 27490                           prodl	equ	0xFF3
 27491                           intcon	equ	0xFF2
 27492                           intcon2	equ	0xFF1
 27493                           indf0	equ	0xFEF
 27494                           postinc0	equ	0xFEE
 27495                           plusw0	equ	0xFEB
 27496                           fsr0h	equ	0xFEA
 27497                           fsr0l	equ	0xFE9
 27498                           wreg	equ	0xFE8
 27499                           indf1	equ	0xFE7
 27500                           postdec1	equ	0xFE5
 27501                           fsr1h	equ	0xFE2
 27502                           fsr1l	equ	0xFE1
 27503                           indf2	equ	0xFDF
 27504                           postinc2	equ	0xFDE
 27505                           postdec2	equ	0xFDD
 27506                           plusw2	equ	0xFDB
 27507                           fsr2h	equ	0xFDA
 27508                           fsr2l	equ	0xFD9
 27509                           status	equ	0xFD8
 27510                           
 27511 ;; *************** function _GetMemoryLong *****************
 27512 ;; Defined at:
 27513 ;;		line 313 in file "EEPROM.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;  AddressFirst    1    wreg     unsigned char 
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;  AddressFirst    1   56[BANK0 ] unsigned char 
 27518 ;;  temp            4   48[BANK0 ] unsigned long 
 27519 ;;  L               1   55[BANK0 ] unsigned char 
 27520 ;;  ML              1   54[BANK0 ] unsigned char 
 27521 ;;  MH              1   53[BANK0 ] unsigned char 
 27522 ;;  H               1   52[BANK0 ] unsigned char 
 27523 ;; Return value:  Size  Location     Type
 27524 ;;                  4   24[BANK0 ] unsigned long 
 27525 ;; Registers used:
 27526 ;;		wreg, status,2, status,0, cstack
 27527 ;; Tracked objects:
 27528 ;;		On entry : 0/0
 27529 ;;		On exit  : 0/0
 27530 ;;		Unchanged: 0/0
 27531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27532 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27533 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27534 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27535 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27536 ;;Total ram usage:       33 bytes
 27537 ;; Hardware stack levels used:    1
 27538 ;; Hardware stack levels required when called:    7
 27539 ;; This function calls:
 27540 ;;		_ReadEEPROM_1Byte
 27541 ;; This function is called by:
 27542 ;;		_GetEEPROM
 27543 ;;		_SetMemoryLong
 27544 ;; This function uses a non-reentrant model
 27545 ;;
 27546                           
 27547                           	psect	text83
 27548  004FC6                     __ptext83:
 27549                           	opt stack 0
 27550  004FC6                     _GetMemoryLong:
 27551                           	opt stack 19
 27552                           
 27553                           ; BSR set to: 0
 27554                           ;incstack = 0
 27555                           ;GetMemoryLong@AddressFirst stored from wreg
 27556  004FC6  0100               	movlb	0	; () banked
 27557  004FC8  6F98               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 27558                           
 27559                           ; BSR set to: 0
 27560                           ;EEPROM.c: 315: unsigned char H;
 27561                           ;EEPROM.c: 316: unsigned char MH;
 27562                           ;EEPROM.c: 317: unsigned char ML;
 27563                           ;EEPROM.c: 318: unsigned char L;
 27564                           ;EEPROM.c: 319: unsigned long temp =0;
 27565  004FCA  0E00               	movlw	0
 27566  004FCC  0100               	movlb	0	; () banked
 27567  004FCE  6F90               	movwf	GetMemoryLong@temp& (0+255),b
 27568  004FD0  0E00               	movlw	0
 27569  004FD2  6F91               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 27570  004FD4  0E00               	movlw	0
 27571  004FD6  6F92               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 27572  004FD8  0E00               	movlw	0
 27573  004FDA  6F93               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 27574                           
 27575                           ; BSR set to: 0
 27576                           ;EEPROM.c: 321: H = ReadEEPROM_1Byte(AddressFirst);
 27577  004FDC  C098  F075         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 27578  004FE0  0100               	movlb	0	; () banked
 27579  004FE2  6B76               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27580  004FE4  EC54  F03A         	call	_ReadEEPROM_1Byte	;wreg free
 27581  004FE8  0100               	movlb	0	; () banked
 27582  004FEA  5175               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27583  004FEC  0100               	movlb	0	; () banked
 27584  004FEE  6F94               	movwf	GetMemoryLong@H& (0+255),b
 27585                           
 27586                           ; BSR set to: 0
 27587                           ;EEPROM.c: 322: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 27588  004FF0  0E01               	movlw	1
 27589  004FF2  0100               	movlb	0	; () banked
 27590  004FF4  2598               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 27591  004FF6  0100               	movlb	0	; () banked
 27592  004FF8  6F75               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 27593  004FFA  0100               	movlb	0	; () banked
 27594  004FFC  6B76               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27595  004FFE  0E00               	movlw	0
 27596  005000  2376               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 27597  005002  EC54  F03A         	call	_ReadEEPROM_1Byte	;wreg free
 27598  005006  0100               	movlb	0	; () banked
 27599  005008  5175               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27600  00500A  0100               	movlb	0	; () banked
 27601  00500C  6F95               	movwf	GetMemoryLong@MH& (0+255),b
 27602                           
 27603                           ; BSR set to: 0
 27604                           ;EEPROM.c: 323: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 27605  00500E  0E02               	movlw	2
 27606  005010  0100               	movlb	0	; () banked
 27607  005012  2598               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 27608  005014  0100               	movlb	0	; () banked
 27609  005016  6F75               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 27610  005018  0100               	movlb	0	; () banked
 27611  00501A  6B76               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27612  00501C  0E00               	movlw	0
 27613  00501E  2376               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 27614  005020  EC54  F03A         	call	_ReadEEPROM_1Byte	;wreg free
 27615  005024  0100               	movlb	0	; () banked
 27616  005026  5175               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27617  005028  0100               	movlb	0	; () banked
 27618  00502A  6F96               	movwf	GetMemoryLong@ML& (0+255),b
 27619                           
 27620                           ; BSR set to: 0
 27621                           ;EEPROM.c: 324: L = ReadEEPROM_1Byte(AddressFirst + 3);
 27622  00502C  0E03               	movlw	3
 27623  00502E  0100               	movlb	0	; () banked
 27624  005030  2598               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 27625  005032  0100               	movlb	0	; () banked
 27626  005034  6F75               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 27627  005036  0100               	movlb	0	; () banked
 27628  005038  6B76               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27629  00503A  0E00               	movlw	0
 27630  00503C  2376               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 27631  00503E  EC54  F03A         	call	_ReadEEPROM_1Byte	;wreg free
 27632  005042  0100               	movlb	0	; () banked
 27633  005044  5175               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27634  005046  0100               	movlb	0	; () banked
 27635  005048  6F97               	movwf	GetMemoryLong@L& (0+255),b
 27636                           
 27637                           ; BSR set to: 0
 27638                           ;EEPROM.c: 326: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 27639                           ;EEPROM.c: 327: + ((unsigned long)ML << 8) + (unsigned long)L);
 27640  00504A  C096  F07C         	movff	GetMemoryLong@ML,??_GetMemoryLong
 27641  00504E  0100               	movlb	0	; () banked
 27642  005050  6B7D               	clrf	(??_GetMemoryLong+1)& (0+255),b
 27643  005052  6B7E               	clrf	(??_GetMemoryLong+2)& (0+255),b
 27644  005054  6B7F               	clrf	(??_GetMemoryLong+3)& (0+255),b
 27645  005056  C07E  F07F         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 27646  00505A  C07D  F07E         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 27647  00505E  C07C  F07D         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 27648  005062  0100               	movlb	0	; () banked
 27649  005064  6B7C               	clrf	??_GetMemoryLong& (0+255),b
 27650  005066  C095  F080         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 27651  00506A  0100               	movlb	0	; () banked
 27652  00506C  6B81               	clrf	(??_GetMemoryLong+5)& (0+255),b
 27653  00506E  6B82               	clrf	(??_GetMemoryLong+6)& (0+255),b
 27654  005070  6B83               	clrf	(??_GetMemoryLong+7)& (0+255),b
 27655  005072  C081  F083         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 27656  005076  C080  F082         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 27657  00507A  0100               	movlb	0	; () banked
 27658  00507C  6B81               	clrf	(??_GetMemoryLong+5)& (0+255),b
 27659  00507E  6B80               	clrf	(??_GetMemoryLong+4)& (0+255),b
 27660  005080  C094  F084         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 27661  005084  0100               	movlb	0	; () banked
 27662  005086  6B85               	clrf	(??_GetMemoryLong+9)& (0+255),b
 27663  005088  6B86               	clrf	(??_GetMemoryLong+10)& (0+255),b
 27664  00508A  6B87               	clrf	(??_GetMemoryLong+11)& (0+255),b
 27665  00508C  C084  F087         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 27666  005090  0100               	movlb	0	; () banked
 27667  005092  6B86               	clrf	(??_GetMemoryLong+10)& (0+255),b
 27668  005094  6B85               	clrf	(??_GetMemoryLong+9)& (0+255),b
 27669  005096  6B84               	clrf	(??_GetMemoryLong+8)& (0+255),b
 27670  005098  0100               	movlb	0	; () banked
 27671  00509A  5180               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 27672  00509C  0100               	movlb	0	; () banked
 27673  00509E  2584               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 27674  0050A0  0100               	movlb	0	; () banked
 27675  0050A2  6F88               	movwf	(??_GetMemoryLong+12)& (0+255),b
 27676  0050A4  0100               	movlb	0	; () banked
 27677  0050A6  5181               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 27678  0050A8  0100               	movlb	0	; () banked
 27679  0050AA  2185               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 27680  0050AC  0100               	movlb	0	; () banked
 27681  0050AE  6F89               	movwf	(??_GetMemoryLong+13)& (0+255),b
 27682  0050B0  0100               	movlb	0	; () banked
 27683  0050B2  5182               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 27684  0050B4  0100               	movlb	0	; () banked
 27685  0050B6  2186               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 27686  0050B8  0100               	movlb	0	; () banked
 27687  0050BA  6F8A               	movwf	(??_GetMemoryLong+14)& (0+255),b
 27688  0050BC  0100               	movlb	0	; () banked
 27689  0050BE  5183               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 27690  0050C0  0100               	movlb	0	; () banked
 27691  0050C2  2187               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 27692  0050C4  0100               	movlb	0	; () banked
 27693  0050C6  6F8B               	movwf	(??_GetMemoryLong+15)& (0+255),b
 27694  0050C8  0100               	movlb	0	; () banked
 27695  0050CA  517C               	movf	??_GetMemoryLong& (0+255),w,b
 27696  0050CC  0100               	movlb	0	; () banked
 27697  0050CE  2588               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 27698  0050D0  0100               	movlb	0	; () banked
 27699  0050D2  6F8C               	movwf	(??_GetMemoryLong+16)& (0+255),b
 27700  0050D4  0100               	movlb	0	; () banked
 27701  0050D6  517D               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 27702  0050D8  0100               	movlb	0	; () banked
 27703  0050DA  2189               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 27704  0050DC  0100               	movlb	0	; () banked
 27705  0050DE  6F8D               	movwf	(??_GetMemoryLong+17)& (0+255),b
 27706  0050E0  0100               	movlb	0	; () banked
 27707  0050E2  517E               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 27708  0050E4  0100               	movlb	0	; () banked
 27709  0050E6  218A               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 27710  0050E8  0100               	movlb	0	; () banked
 27711  0050EA  6F8E               	movwf	(??_GetMemoryLong+18)& (0+255),b
 27712  0050EC  0100               	movlb	0	; () banked
 27713  0050EE  517F               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 27714  0050F0  0100               	movlb	0	; () banked
 27715  0050F2  218B               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 27716  0050F4  0100               	movlb	0	; () banked
 27717  0050F6  6F8F               	movwf	(??_GetMemoryLong+19)& (0+255),b
 27718  0050F8  0100               	movlb	0	; () banked
 27719  0050FA  5197               	movf	GetMemoryLong@L& (0+255),w,b
 27720  0050FC  0100               	movlb	0	; () banked
 27721  0050FE  258C               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 27722  005100  0100               	movlb	0	; () banked
 27723  005102  6F90               	movwf	GetMemoryLong@temp& (0+255),b
 27724  005104  0E00               	movlw	0
 27725  005106  0100               	movlb	0	; () banked
 27726  005108  218D               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 27727  00510A  0100               	movlb	0	; () banked
 27728  00510C  6F91               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 27729  00510E  0E00               	movlw	0
 27730  005110  0100               	movlb	0	; () banked
 27731  005112  218E               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 27732  005114  0100               	movlb	0	; () banked
 27733  005116  6F92               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 27734  005118  0E00               	movlw	0
 27735  00511A  0100               	movlb	0	; () banked
 27736  00511C  218F               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 27737  00511E  0100               	movlb	0	; () banked
 27738  005120  6F93               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 27739                           
 27740                           ; BSR set to: 0
 27741                           ;EEPROM.c: 328: return temp;
 27742  005122  C090  F078         	movff	GetMemoryLong@temp,?_GetMemoryLong
 27743  005126  C091  F079         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 27744  00512A  C092  F07A         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 27745  00512E  C093  F07B         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 27746  005132  0012               	return	
 27747                           
 27748                           ; BSR set to: 0
 27749                           
 27750                           ; BSR set to: 0
 27751  005134  0012               	return		;funcret
 27752  005136                     __end_of_GetMemoryLong:
 27753                           	opt stack 0
 27754                           tblptru	equ	0xFF8
 27755                           tblptrh	equ	0xFF7
 27756                           tblptrl	equ	0xFF6
 27757                           tablat	equ	0xFF5
 27758                           prodh	equ	0xFF4
 27759                           prodl	equ	0xFF3
 27760                           intcon	equ	0xFF2
 27761                           intcon2	equ	0xFF1
 27762                           indf0	equ	0xFEF
 27763                           postinc0	equ	0xFEE
 27764                           plusw0	equ	0xFEB
 27765                           fsr0h	equ	0xFEA
 27766                           fsr0l	equ	0xFE9
 27767                           wreg	equ	0xFE8
 27768                           indf1	equ	0xFE7
 27769                           postdec1	equ	0xFE5
 27770                           fsr1h	equ	0xFE2
 27771                           fsr1l	equ	0xFE1
 27772                           indf2	equ	0xFDF
 27773                           postinc2	equ	0xFDE
 27774                           postdec2	equ	0xFDD
 27775                           plusw2	equ	0xFDB
 27776                           fsr2h	equ	0xFDA
 27777                           fsr2l	equ	0xFD9
 27778                           status	equ	0xFD8
 27779                           
 27780 ;; *************** function _SetMemoryChar *****************
 27781 ;; Defined at:
 27782 ;;		line 430 in file "EEPROM.c"
 27783 ;; Parameters:    Size  Location     Type
 27784 ;;  Data            1    wreg     unsigned char 
 27785 ;;  AddressFirst    1   30[BANK0 ] unsigned char 
 27786 ;; Auto vars:     Size  Location     Type
 27787 ;;  Data            1   32[BANK0 ] unsigned char 
 27788 ;;  Test            1   31[BANK0 ] unsigned char 
 27789 ;; Return value:  Size  Location     Type
 27790 ;;                  1    wreg      unsigned char 
 27791 ;; Registers used:
 27792 ;;		wreg, status,2, status,0, cstack
 27793 ;; Tracked objects:
 27794 ;;		On entry : 0/0
 27795 ;;		On exit  : 0/0
 27796 ;;		Unchanged: 0/0
 27797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27798 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27799 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27801 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27802 ;;Total ram usage:        3 bytes
 27803 ;; Hardware stack levels used:    1
 27804 ;; Hardware stack levels required when called:    8
 27805 ;; This function calls:
 27806 ;;		_GetMemoryChar
 27807 ;;		_WriteEEPROM_1Byte
 27808 ;; This function is called by:
 27809 ;;		_SetEEPROM
 27810 ;; This function uses a non-reentrant model
 27811 ;;
 27812                           
 27813                           	psect	text84
 27814  0074E4                     __ptext84:
 27815                           	opt stack 0
 27816  0074E4                     _SetMemoryChar:
 27817                           	opt stack 19
 27818                           
 27819                           ; BSR set to: 0
 27820                           ;incstack = 0
 27821                           ;SetMemoryChar@Data stored from wreg
 27822  0074E4  0100               	movlb	0	; () banked
 27823  0074E6  6F80               	movwf	SetMemoryChar@Data& (0+255),b
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;EEPROM.c: 432: unsigned char Test;
 27827                           ;EEPROM.c: 434: WriteEEPROM_1Byte(AddressFirst, Data);
 27828  0074E8  C07E  F075         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 27829  0074EC  0100               	movlb	0	; () banked
 27830  0074EE  6B76               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 27831  0074F0  C080  F077         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 27832  0074F4  EC15  F03A         	call	_WriteEEPROM_1Byte	;wreg free
 27833                           
 27834                           ;EEPROM.c: 437: Test = GetMemoryChar(AddressFirst);
 27835  0074F8  0100               	movlb	0	; () banked
 27836  0074FA  517E               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 27837  0074FC  EC3C  F03B         	call	_GetMemoryChar
 27838  007500  0100               	movlb	0	; () banked
 27839  007502  5178               	movf	?_GetMemoryChar& (0+255),w,b
 27840  007504  0100               	movlb	0	; () banked
 27841  007506  6F7F               	movwf	SetMemoryChar@Test& (0+255),b
 27842                           
 27843                           ; BSR set to: 0
 27844                           ;EEPROM.c: 439: if(Test == Data)
 27845  007508  0100               	movlb	0	; () banked
 27846  00750A  5180               	movf	SetMemoryChar@Data& (0+255),w,b
 27847  00750C  0100               	movlb	0	; () banked
 27848  00750E  197F               	xorwf	SetMemoryChar@Test& (0+255),w,b
 27849  007510  A4D8               	btfss	status,2,c
 27850  007512  D002               	goto	l6672
 27851                           
 27852                           ; BSR set to: 0
 27853                           ;EEPROM.c: 440: {
 27854                           ;EEPROM.c: 441: return 1;
 27855  007514  0E01               	movlw	1
 27856                           
 27857                           ; BSR set to: 0
 27858  007516  0012               	return	
 27859  007518                     l6672:
 27860                           
 27861                           ; BSR set to: 0
 27862                           ;EEPROM.c: 442: }
 27863                           ;EEPROM.c: 443: return 0;
 27864  007518  0E00               	movlw	0
 27865  00751A  0012               	return	
 27866                           
 27867                           ; BSR set to: 0
 27868                           
 27869                           ; BSR set to: 0
 27870  00751C  0012               	return		;funcret
 27871  00751E                     __end_of_SetMemoryChar:
 27872                           	opt stack 0
 27873                           tblptru	equ	0xFF8
 27874                           tblptrh	equ	0xFF7
 27875                           tblptrl	equ	0xFF6
 27876                           tablat	equ	0xFF5
 27877                           prodh	equ	0xFF4
 27878                           prodl	equ	0xFF3
 27879                           intcon	equ	0xFF2
 27880                           intcon2	equ	0xFF1
 27881                           indf0	equ	0xFEF
 27882                           postinc0	equ	0xFEE
 27883                           plusw0	equ	0xFEB
 27884                           fsr0h	equ	0xFEA
 27885                           fsr0l	equ	0xFE9
 27886                           wreg	equ	0xFE8
 27887                           indf1	equ	0xFE7
 27888                           postdec1	equ	0xFE5
 27889                           fsr1h	equ	0xFE2
 27890                           fsr1l	equ	0xFE1
 27891                           indf2	equ	0xFDF
 27892                           postinc2	equ	0xFDE
 27893                           postdec2	equ	0xFDD
 27894                           plusw2	equ	0xFDB
 27895                           fsr2h	equ	0xFDA
 27896                           fsr2l	equ	0xFD9
 27897                           status	equ	0xFD8
 27898                           
 27899 ;; *************** function _WriteEEPROM_1Byte *****************
 27900 ;; Defined at:
 27901 ;;		line 93 in file "EEPROM.c"
 27902 ;; Parameters:    Size  Location     Type
 27903 ;;  address         2   21[BANK0 ] unsigned int 
 27904 ;;  data            1   23[BANK0 ] unsigned char 
 27905 ;; Auto vars:     Size  Location     Type
 27906 ;;  GIEstatus       1   24[BANK0 ] unsigned char 
 27907 ;; Return value:  Size  Location     Type
 27908 ;;		None               void
 27909 ;; Registers used:
 27910 ;;		wreg, status,2, status,0, cstack
 27911 ;; Tracked objects:
 27912 ;;		On entry : 0/0
 27913 ;;		On exit  : 0/0
 27914 ;;		Unchanged: 0/0
 27915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27916 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27920 ;;Total ram usage:        4 bytes
 27921 ;; Hardware stack levels used:    1
 27922 ;; Hardware stack levels required when called:    7
 27923 ;; This function calls:
 27924 ;;		_EEPROM_UNLOCK
 27925 ;; This function is called by:
 27926 ;;		_SetMemoryLong
 27927 ;;		_SetMemoryChar
 27928 ;;		_SetMemoryInt
 27929 ;; This function uses a non-reentrant model
 27930 ;;
 27931                           
 27932                           	psect	text85
 27933  00742A                     __ptext85:
 27934                           	opt stack 0
 27935  00742A                     _WriteEEPROM_1Byte:
 27936                           	opt stack 19
 27937                           
 27938                           ;EEPROM.c: 95: unsigned char GIEstatus = INTCONbits.GIE;
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;incstack = 0
 27942  00742A  0E00               	movlw	0
 27943  00742C  BEF2               	btfsc	intcon,7,c	;volatile
 27944  00742E  0E01               	movlw	1
 27945  007430  0100               	movlb	0	; () banked
 27946  007432  6F78               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 27947                           
 27948                           ; BSR set to: 0
 27949                           ;EEPROM.c: 96: EEADRH = (unsigned char)((address & 0x300) >> 8);
 27950  007434  0100               	movlb	0	; () banked
 27951  007436  5176               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 27952  007438  0B03               	andlw	3
 27953  00743A  6EAA               	movwf	4010,c	;volatile
 27954                           
 27955                           ; BSR set to: 0
 27956                           ;EEPROM.c: 97: EEADR = (unsigned char)(address & 0xFF);
 27957  00743C  C075  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 27958                           
 27959                           ; BSR set to: 0
 27960                           ;EEPROM.c: 98: EEDATA = data;
 27961  007440  C077  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 27962                           
 27963                           ; BSR set to: 0
 27964                           ;EEPROM.c: 99: EECON1bits.EEPGD = 0;
 27965  007444  9EA6               	bcf	4006,7,c	;volatile
 27966                           
 27967                           ; BSR set to: 0
 27968                           ;EEPROM.c: 100: EECON1bits.CFGS = 0;
 27969  007446  9CA6               	bcf	4006,6,c	;volatile
 27970                           
 27971                           ; BSR set to: 0
 27972                           ;EEPROM.c: 101: EECON1bits.WREN =1;
 27973  007448  84A6               	bsf	4006,2,c	;volatile
 27974                           
 27975                           ; BSR set to: 0
 27976                           ;EEPROM.c: 102: INTCONbits.GIE =0;
 27977  00744A  9EF2               	bcf	intcon,7,c	;volatile
 27978                           
 27979                           ; BSR set to: 0
 27980                           ;EEPROM.c: 103: EEPROM_UNLOCK();
 27981  00744C  ECC0  F03B         	call	_EEPROM_UNLOCK	;wreg free
 27982                           
 27983                           ;EEPROM.c: 104: EECON1bits.WR =1;
 27984  007450  82A6               	bsf	4006,1,c	;volatile
 27985                           
 27986                           ;EEPROM.c: 105: while(EECON1bits.WR);
 27987  007452  D000               	goto	l658
 27988  007454                     l658:
 27989  007454  B2A6               	btfsc	4006,1,c	;volatile
 27990  007456  D7FE               	goto	l658
 27991                           
 27992                           ;EEPROM.c: 106: EECON1bits.WREN =0;
 27993  007458  94A6               	bcf	4006,2,c	;volatile
 27994                           
 27995                           ;EEPROM.c: 107: if(GIEstatus)
 27996  00745A  0100               	movlb	0	; () banked
 27997  00745C  5178               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 27998  00745E  0100               	movlb	0	; () banked
 27999  007460  B4D8               	btfsc	status,2,c
 28000  007462  0012               	return	
 28001                           
 28002                           ; BSR set to: 0
 28003                           ;EEPROM.c: 108: {
 28004                           ;EEPROM.c: 109: INTCONbits.GIE =1;
 28005  007464  8EF2               	bsf	intcon,7,c	;volatile
 28006  007466  0012               	return	
 28007                           
 28008                           ; BSR set to: 0
 28009                           
 28010                           ; BSR set to: 0
 28011  007468  0012               	return		;funcret
 28012  00746A                     __end_of_WriteEEPROM_1Byte:
 28013                           	opt stack 0
 28014                           tblptru	equ	0xFF8
 28015                           tblptrh	equ	0xFF7
 28016                           tblptrl	equ	0xFF6
 28017                           tablat	equ	0xFF5
 28018                           prodh	equ	0xFF4
 28019                           prodl	equ	0xFF3
 28020                           intcon	equ	0xFF2
 28021                           intcon2	equ	0xFF1
 28022                           indf0	equ	0xFEF
 28023                           postinc0	equ	0xFEE
 28024                           plusw0	equ	0xFEB
 28025                           fsr0h	equ	0xFEA
 28026                           fsr0l	equ	0xFE9
 28027                           wreg	equ	0xFE8
 28028                           indf1	equ	0xFE7
 28029                           postdec1	equ	0xFE5
 28030                           fsr1h	equ	0xFE2
 28031                           fsr1l	equ	0xFE1
 28032                           indf2	equ	0xFDF
 28033                           postinc2	equ	0xFDE
 28034                           postdec2	equ	0xFDD
 28035                           plusw2	equ	0xFDB
 28036                           fsr2h	equ	0xFDA
 28037                           fsr2l	equ	0xFD9
 28038                           status	equ	0xFD8
 28039                           
 28040 ;; *************** function _EEPROM_UNLOCK *****************
 28041 ;; Defined at:
 28042 ;;		line 78 in file "EEPROM.c"
 28043 ;; Parameters:    Size  Location     Type
 28044 ;;		None
 28045 ;; Auto vars:     Size  Location     Type
 28046 ;;		None
 28047 ;; Return value:  Size  Location     Type
 28048 ;;		None               void
 28049 ;; Registers used:
 28050 ;;		wreg, status,2
 28051 ;; Tracked objects:
 28052 ;;		On entry : 0/0
 28053 ;;		On exit  : 0/0
 28054 ;;		Unchanged: 0/0
 28055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28060 ;;Total ram usage:        0 bytes
 28061 ;; Hardware stack levels used:    1
 28062 ;; Hardware stack levels required when called:    6
 28063 ;; This function calls:
 28064 ;;		Nothing
 28065 ;; This function is called by:
 28066 ;;		_WriteEEPROM_1Byte
 28067 ;; This function uses a non-reentrant model
 28068 ;;
 28069                           
 28070                           	psect	text86
 28071  007780                     __ptext86:
 28072                           	opt stack 0
 28073  007780                     _EEPROM_UNLOCK:
 28074                           	opt stack 19
 28075                           
 28076                           ;EEPROM.c: 80: EECON2 = 0x55;
 28077                           
 28078                           ; BSR set to: 0
 28079                           ;incstack = 0
 28080  007780  0E55               	movlw	85
 28081  007782  6EA7               	movwf	4007,c	;volatile
 28082                           
 28083                           ;EEPROM.c: 81: EECON2 = 0xAA;
 28084  007784  0EAA               	movlw	170
 28085  007786  6EA7               	movwf	4007,c	;volatile
 28086                           
 28087                           ;EEPROM.c: 82: EECON1bits.WR =1;
 28088  007788  82A6               	bsf	4006,1,c	;volatile
 28089                           
 28090                           ;EEPROM.c: 83: while(EECON1bits.WR);
 28091  00778A  D000               	goto	l652
 28092  00778C                     l652:
 28093  00778C  B2A6               	btfsc	4006,1,c	;volatile
 28094  00778E  D7FE               	goto	l652
 28095                           
 28096                           ;EEPROM.c: 84: __nop();
 28097  007790  F000               	nop	
 28098                           
 28099                           ;EEPROM.c: 85: __nop();
 28100  007792  F000               	nop	
 28101  007794  0012               	return		;funcret
 28102  007796                     __end_of_EEPROM_UNLOCK:
 28103                           	opt stack 0
 28104                           tblptru	equ	0xFF8
 28105                           tblptrh	equ	0xFF7
 28106                           tblptrl	equ	0xFF6
 28107                           tablat	equ	0xFF5
 28108                           prodh	equ	0xFF4
 28109                           prodl	equ	0xFF3
 28110                           intcon	equ	0xFF2
 28111                           intcon2	equ	0xFF1
 28112                           indf0	equ	0xFEF
 28113                           postinc0	equ	0xFEE
 28114                           plusw0	equ	0xFEB
 28115                           fsr0h	equ	0xFEA
 28116                           fsr0l	equ	0xFE9
 28117                           wreg	equ	0xFE8
 28118                           indf1	equ	0xFE7
 28119                           postdec1	equ	0xFE5
 28120                           fsr1h	equ	0xFE2
 28121                           fsr1l	equ	0xFE1
 28122                           indf2	equ	0xFDF
 28123                           postinc2	equ	0xFDE
 28124                           postdec2	equ	0xFDD
 28125                           plusw2	equ	0xFDB
 28126                           fsr2h	equ	0xFDA
 28127                           fsr2l	equ	0xFD9
 28128                           status	equ	0xFD8
 28129                           
 28130 ;; *************** function _GetMemoryChar *****************
 28131 ;; Defined at:
 28132 ;;		line 416 in file "EEPROM.c"
 28133 ;; Parameters:    Size  Location     Type
 28134 ;;  AddressFirst    1    wreg     unsigned char 
 28135 ;; Auto vars:     Size  Location     Type
 28136 ;;  AddressFirst    1   28[BANK0 ] unsigned char 
 28137 ;;  H               1   29[BANK0 ] unsigned char 
 28138 ;; Return value:  Size  Location     Type
 28139 ;;                  4   24[BANK0 ] unsigned long 
 28140 ;; Registers used:
 28141 ;;		wreg, status,2, status,0, cstack
 28142 ;; Tracked objects:
 28143 ;;		On entry : 0/0
 28144 ;;		On exit  : 0/0
 28145 ;;		Unchanged: 0/0
 28146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28151 ;;Total ram usage:        6 bytes
 28152 ;; Hardware stack levels used:    1
 28153 ;; Hardware stack levels required when called:    7
 28154 ;; This function calls:
 28155 ;;		_ReadEEPROM_1Byte
 28156 ;; This function is called by:
 28157 ;;		_GetEEPROM
 28158 ;;		_SetMemoryChar
 28159 ;; This function uses a non-reentrant model
 28160 ;;
 28161                           
 28162                           	psect	text87
 28163  007678                     __ptext87:
 28164                           	opt stack 0
 28165  007678                     _GetMemoryChar:
 28166                           	opt stack 19
 28167                           
 28168                           ;incstack = 0
 28169                           ;GetMemoryChar@AddressFirst stored from wreg
 28170  007678  0100               	movlb	0	; () banked
 28171  00767A  6F7C               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 28172                           
 28173                           ; BSR set to: 0
 28174                           ;EEPROM.c: 418: unsigned char H;
 28175                           ;EEPROM.c: 420: H = ReadEEPROM_1Byte(AddressFirst);
 28176  00767C  C07C  F075         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 28177  007680  0100               	movlb	0	; () banked
 28178  007682  6B76               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 28179  007684  EC54  F03A         	call	_ReadEEPROM_1Byte	;wreg free
 28180  007688  0100               	movlb	0	; () banked
 28181  00768A  5175               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 28182  00768C  0100               	movlb	0	; () banked
 28183  00768E  6F7D               	movwf	GetMemoryChar@H& (0+255),b
 28184                           
 28185                           ; BSR set to: 0
 28186                           ;EEPROM.c: 422: return H;
 28187  007690  0100               	movlb	0	; () banked
 28188  007692  517D               	movf	GetMemoryChar@H& (0+255),w,b
 28189  007694  0100               	movlb	0	; () banked
 28190  007696  6F78               	movwf	?_GetMemoryChar& (0+255),b
 28191  007698  6B79               	clrf	(?_GetMemoryChar+1)& (0+255),b
 28192  00769A  6B7A               	clrf	(?_GetMemoryChar+2)& (0+255),b
 28193  00769C  6B7B               	clrf	(?_GetMemoryChar+3)& (0+255),b
 28194  00769E  0012               	return	
 28195                           
 28196                           ; BSR set to: 0
 28197                           
 28198                           ; BSR set to: 0
 28199  0076A0  0012               	return		;funcret
 28200  0076A2                     __end_of_GetMemoryChar:
 28201                           	opt stack 0
 28202                           tblptru	equ	0xFF8
 28203                           tblptrh	equ	0xFF7
 28204                           tblptrl	equ	0xFF6
 28205                           tablat	equ	0xFF5
 28206                           prodh	equ	0xFF4
 28207                           prodl	equ	0xFF3
 28208                           intcon	equ	0xFF2
 28209                           intcon2	equ	0xFF1
 28210                           indf0	equ	0xFEF
 28211                           postinc0	equ	0xFEE
 28212                           plusw0	equ	0xFEB
 28213                           fsr0h	equ	0xFEA
 28214                           fsr0l	equ	0xFE9
 28215                           wreg	equ	0xFE8
 28216                           indf1	equ	0xFE7
 28217                           postdec1	equ	0xFE5
 28218                           fsr1h	equ	0xFE2
 28219                           fsr1l	equ	0xFE1
 28220                           indf2	equ	0xFDF
 28221                           postinc2	equ	0xFDE
 28222                           postdec2	equ	0xFDD
 28223                           plusw2	equ	0xFDB
 28224                           fsr2h	equ	0xFDA
 28225                           fsr2l	equ	0xFD9
 28226                           status	equ	0xFD8
 28227                           
 28228 ;; *************** function _ReadEEPROM_1Byte *****************
 28229 ;; Defined at:
 28230 ;;		line 53 in file "EEPROM.c"
 28231 ;; Parameters:    Size  Location     Type
 28232 ;;  address         2   21[BANK0 ] unsigned int 
 28233 ;; Auto vars:     Size  Location     Type
 28234 ;;  GIEstatus       1   23[BANK0 ] unsigned char 
 28235 ;; Return value:  Size  Location     Type
 28236 ;;                  2   21[BANK0 ] unsigned int 
 28237 ;; Registers used:
 28238 ;;		wreg, status,2, status,0
 28239 ;; Tracked objects:
 28240 ;;		On entry : 0/0
 28241 ;;		On exit  : 0/0
 28242 ;;		Unchanged: 0/0
 28243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28248 ;;Total ram usage:        3 bytes
 28249 ;; Hardware stack levels used:    1
 28250 ;; Hardware stack levels required when called:    6
 28251 ;; This function calls:
 28252 ;;		Nothing
 28253 ;; This function is called by:
 28254 ;;		_GetMemoryLong
 28255 ;;		_GetMemoryChar
 28256 ;;		_GetMemoryInt
 28257 ;; This function uses a non-reentrant model
 28258 ;;
 28259                           
 28260                           	psect	text88
 28261  0074A8                     __ptext88:
 28262                           	opt stack 0
 28263  0074A8                     _ReadEEPROM_1Byte:
 28264                           	opt stack 19
 28265                           
 28266                           ;EEPROM.c: 55: unsigned char GIEstatus = INTCONbits.GIE;
 28267                           
 28268                           ; BSR set to: 0
 28269                           ;incstack = 0
 28270  0074A8  0E00               	movlw	0
 28271  0074AA  BEF2               	btfsc	intcon,7,c	;volatile
 28272  0074AC  0E01               	movlw	1
 28273  0074AE  0100               	movlb	0	; () banked
 28274  0074B0  6F77               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 28275                           
 28276                           ; BSR set to: 0
 28277                           ;EEPROM.c: 56: EECON1bits.EEPGD = 0;
 28278  0074B2  9EA6               	bcf	4006,7,c	;volatile
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;EEPROM.c: 57: EECON1bits.CFGS = 0;
 28282  0074B4  9CA6               	bcf	4006,6,c	;volatile
 28283                           
 28284                           ; BSR set to: 0
 28285                           ;EEPROM.c: 58: EEADRH = (unsigned char)((address & 0x300) >> 8);
 28286  0074B6  0100               	movlb	0	; () banked
 28287  0074B8  5176               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 28288  0074BA  0B03               	andlw	3
 28289  0074BC  6EAA               	movwf	4010,c	;volatile
 28290                           
 28291                           ; BSR set to: 0
 28292                           ;EEPROM.c: 59: EEADR = (unsigned char)(address & 0xFF);
 28293  0074BE  C075  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 28294                           
 28295                           ; BSR set to: 0
 28296                           ;EEPROM.c: 60: INTCONbits.GIE =0;
 28297  0074C2  9EF2               	bcf	intcon,7,c	;volatile
 28298                           
 28299                           ; BSR set to: 0
 28300                           ;EEPROM.c: 61: EECON1bits.RD = 1;
 28301  0074C4  80A6               	bsf	4006,0,c	;volatile
 28302                           
 28303                           ;EEPROM.c: 62: while(EECON1bits.RD);
 28304  0074C6  D000               	goto	l645
 28305  0074C8                     l645:
 28306  0074C8  B0A6               	btfsc	4006,0,c	;volatile
 28307  0074CA  D7FE               	goto	l645
 28308                           
 28309                           ;EEPROM.c: 63: __nop();
 28310  0074CC  F000               	nop	
 28311                           
 28312                           ;EEPROM.c: 64: __nop();
 28313  0074CE  F000               	nop	
 28314                           
 28315                           ;EEPROM.c: 65: if(GIEstatus)
 28316  0074D0  0100               	movlb	0	; () banked
 28317  0074D2  5177               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 28318  0074D4  0100               	movlb	0	; () banked
 28319  0074D6  A4D8               	btfss	status,2,c
 28320                           
 28321                           ; BSR set to: 0
 28322                           ;EEPROM.c: 66: {
 28323                           ;EEPROM.c: 67: INTCONbits.GIE =1;
 28324  0074D8  8EF2               	bsf	intcon,7,c	;volatile
 28325                           
 28326                           ; BSR set to: 0
 28327                           ;EEPROM.c: 68: }
 28328                           ;EEPROM.c: 69: return (EEDATA);
 28329  0074DA  CFA8 F075          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 28330  0074DE  0100               	movlb	0	; () banked
 28331  0074E0  6B76               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 28332                           
 28333                           ; BSR set to: 0
 28334  0074E2  0012               	return		;funcret
 28335  0074E4                     __end_of_ReadEEPROM_1Byte:
 28336                           	opt stack 0
 28337                           tblptru	equ	0xFF8
 28338                           tblptrh	equ	0xFF7
 28339                           tblptrl	equ	0xFF6
 28340                           tablat	equ	0xFF5
 28341                           prodh	equ	0xFF4
 28342                           prodl	equ	0xFF3
 28343                           intcon	equ	0xFF2
 28344                           intcon2	equ	0xFF1
 28345                           indf0	equ	0xFEF
 28346                           postinc0	equ	0xFEE
 28347                           plusw0	equ	0xFEB
 28348                           fsr0h	equ	0xFEA
 28349                           fsr0l	equ	0xFE9
 28350                           wreg	equ	0xFE8
 28351                           indf1	equ	0xFE7
 28352                           postdec1	equ	0xFE5
 28353                           fsr1h	equ	0xFE2
 28354                           fsr1l	equ	0xFE1
 28355                           indf2	equ	0xFDF
 28356                           postinc2	equ	0xFDE
 28357                           postdec2	equ	0xFDD
 28358                           plusw2	equ	0xFDB
 28359                           fsr2h	equ	0xFDA
 28360                           fsr2l	equ	0xFD9
 28361                           status	equ	0xFD8
 28362                           
 28363 ;; *************** function _InitApp *****************
 28364 ;; Defined at:
 28365 ;;		line 60 in file "user.c"
 28366 ;; Parameters:    Size  Location     Type
 28367 ;;		None
 28368 ;; Auto vars:     Size  Location     Type
 28369 ;;		None
 28370 ;; Return value:  Size  Location     Type
 28371 ;;		None               void
 28372 ;; Registers used:
 28373 ;;		wreg, status,2, status,0
 28374 ;; Tracked objects:
 28375 ;;		On entry : 0/0
 28376 ;;		On exit  : 0/0
 28377 ;;		Unchanged: 0/0
 28378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28383 ;;Total ram usage:        0 bytes
 28384 ;; Hardware stack levels used:    1
 28385 ;; Hardware stack levels required when called:    6
 28386 ;; This function calls:
 28387 ;;		Nothing
 28388 ;; This function is called by:
 28389 ;;		_main
 28390 ;; This function uses a non-reentrant model
 28391 ;;
 28392                           
 28393                           	psect	text89
 28394  0073A0                     __ptext89:
 28395                           	opt stack 0
 28396  0073A0                     _InitApp:
 28397                           	opt stack 24
 28398                           
 28399                           ;user.c: 62: LATA = 0;
 28400                           
 28401                           ; BSR set to: 0
 28402                           ;incstack = 0
 28403  0073A0  0E00               	movlw	0
 28404  0073A2  6E89               	movwf	3977,c	;volatile
 28405                           
 28406                           ;user.c: 63: LATB = 0;
 28407  0073A4  0E00               	movlw	0
 28408  0073A6  6E8A               	movwf	3978,c	;volatile
 28409                           
 28410                           ;user.c: 64: LATC = 0;
 28411  0073A8  0E00               	movlw	0
 28412  0073AA  6E8B               	movwf	3979,c	;volatile
 28413                           
 28414                           ;user.c: 65: LATA |= 0x04;
 28415  0073AC  8489               	bsf	3977,2,c	;volatile
 28416                           
 28417                           ;user.c: 67: TRISAbits.TRISA0 = 1;
 28418  0073AE  8092               	bsf	3986,0,c	;volatile
 28419                           
 28420                           ;user.c: 68: TRISAbits.TRISA1 = 1;
 28421  0073B0  8292               	bsf	3986,1,c	;volatile
 28422                           
 28423                           ;user.c: 69: TRISAbits.TRISA2 = 0;
 28424  0073B2  9492               	bcf	3986,2,c	;volatile
 28425                           
 28426                           ;user.c: 70: TRISAbits.TRISA3 = 0;
 28427  0073B4  9692               	bcf	3986,3,c	;volatile
 28428                           
 28429                           ;user.c: 71: TRISAbits.TRISA4 = 0;
 28430  0073B6  9892               	bcf	3986,4,c	;volatile
 28431                           
 28432                           ;user.c: 72: TRISAbits.TRISA5 = 0;
 28433  0073B8  9A92               	bcf	3986,5,c	;volatile
 28434                           
 28435                           ;user.c: 73: TRISCbits.TRISC0 = 1;
 28436  0073BA  8094               	bsf	3988,0,c	;volatile
 28437                           
 28438                           ;user.c: 74: TRISCbits.TRISC1 = 0;
 28439  0073BC  9294               	bcf	3988,1,c	;volatile
 28440                           
 28441                           ;user.c: 75: TRISCbits.TRISC2 = 0;
 28442  0073BE  9494               	bcf	3988,2,c	;volatile
 28443                           
 28444                           ;user.c: 76: TRISCbits.TRISC3 = 0;
 28445  0073C0  9694               	bcf	3988,3,c	;volatile
 28446                           
 28447                           ;user.c: 77: TRISCbits.TRISC4 = 0;
 28448  0073C2  9894               	bcf	3988,4,c	;volatile
 28449                           
 28450                           ;user.c: 78: TRISCbits.TRISC5 = 0;
 28451  0073C4  9A94               	bcf	3988,5,c	;volatile
 28452                           
 28453                           ;user.c: 79: TRISCbits.TRISC6 = 0;
 28454  0073C6  9C94               	bcf	3988,6,c	;volatile
 28455                           
 28456                           ;user.c: 80: TRISCbits.TRISC7 = 1;
 28457  0073C8  8E94               	bsf	3988,7,c	;volatile
 28458                           
 28459                           ;user.c: 81: TRISBbits.TRISB0 = 1;
 28460  0073CA  8093               	bsf	3987,0,c	;volatile
 28461                           
 28462                           ;user.c: 82: TRISBbits.TRISB1 = 1;
 28463  0073CC  8293               	bsf	3987,1,c	;volatile
 28464                           
 28465                           ;user.c: 83: TRISBbits.TRISB2 = 1;
 28466  0073CE  8493               	bsf	3987,2,c	;volatile
 28467                           
 28468                           ;user.c: 84: TRISBbits.TRISB3 = 1;
 28469  0073D0  8693               	bsf	3987,3,c	;volatile
 28470                           
 28471                           ;user.c: 85: TRISBbits.TRISB4 = 1;
 28472  0073D2  8893               	bsf	3987,4,c	;volatile
 28473                           
 28474                           ;user.c: 86: TRISBbits.TRISB5 = 1;
 28475  0073D4  8A93               	bsf	3987,5,c	;volatile
 28476                           
 28477                           ;user.c: 89: ANSEL = 0x01;
 28478  0073D6  0E01               	movlw	1
 28479  0073D8  6E7E               	movwf	3966,c	;volatile
 28480                           
 28481                           ;user.c: 90: ANSELH = 0x00;
 28482  0073DA  0E00               	movlw	0
 28483  0073DC  6E7F               	movwf	3967,c	;volatile
 28484                           
 28485                           ;user.c: 93: INTCON2bits.RBPU = 0;
 28486  0073DE  9EF1               	bcf	intcon2,7,c	;volatile
 28487                           
 28488                           ;user.c: 95: WPUB = 0x0F;
 28489  0073E0  0E0F               	movlw	15
 28490  0073E2  6E7C               	movwf	3964,c	;volatile
 28491  0073E4  0012               	return		;funcret
 28492  0073E6                     __end_of_InitApp:
 28493                           	opt stack 0
 28494                           tblptru	equ	0xFF8
 28495                           tblptrh	equ	0xFF7
 28496                           tblptrl	equ	0xFF6
 28497                           tablat	equ	0xFF5
 28498                           prodh	equ	0xFF4
 28499                           prodl	equ	0xFF3
 28500                           intcon	equ	0xFF2
 28501                           intcon2	equ	0xFF1
 28502                           indf0	equ	0xFEF
 28503                           postinc0	equ	0xFEE
 28504                           plusw0	equ	0xFEB
 28505                           fsr0h	equ	0xFEA
 28506                           fsr0l	equ	0xFE9
 28507                           wreg	equ	0xFE8
 28508                           indf1	equ	0xFE7
 28509                           postdec1	equ	0xFE5
 28510                           fsr1h	equ	0xFE2
 28511                           fsr1l	equ	0xFE1
 28512                           indf2	equ	0xFDF
 28513                           postinc2	equ	0xFDE
 28514                           postdec2	equ	0xFDD
 28515                           plusw2	equ	0xFDB
 28516                           fsr2h	equ	0xFDA
 28517                           fsr2l	equ	0xFD9
 28518                           status	equ	0xFD8
 28519                           
 28520 ;; *************** function _ConfigureOscillator *****************
 28521 ;; Defined at:
 28522 ;;		line 41 in file "system.c"
 28523 ;; Parameters:    Size  Location     Type
 28524 ;;		None
 28525 ;; Auto vars:     Size  Location     Type
 28526 ;;		None
 28527 ;; Return value:  Size  Location     Type
 28528 ;;		None               void
 28529 ;; Registers used:
 28530 ;;		None
 28531 ;; Tracked objects:
 28532 ;;		On entry : 0/0
 28533 ;;		On exit  : 0/0
 28534 ;;		Unchanged: 0/0
 28535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28540 ;;Total ram usage:        0 bytes
 28541 ;; Hardware stack levels used:    1
 28542 ;; Hardware stack levels required when called:    6
 28543 ;; This function calls:
 28544 ;;		Nothing
 28545 ;; This function is called by:
 28546 ;;		_main
 28547 ;; This function uses a non-reentrant model
 28548 ;;
 28549                           
 28550                           	psect	text90
 28551  0078BE                     __ptext90:
 28552                           	opt stack 0
 28553  0078BE                     _ConfigureOscillator:
 28554                           	opt stack 24
 28555                           
 28556                           ;incstack = 0
 28557  0078BE  0012               	return		;funcret
 28558  0078C0                     __end_of_ConfigureOscillator:
 28559                           	opt stack 0
 28560                           tblptru	equ	0xFF8
 28561                           tblptrh	equ	0xFF7
 28562                           tblptrl	equ	0xFF6
 28563                           tablat	equ	0xFF5
 28564                           prodh	equ	0xFF4
 28565                           prodl	equ	0xFF3
 28566                           intcon	equ	0xFF2
 28567                           intcon2	equ	0xFF1
 28568                           indf0	equ	0xFEF
 28569                           postinc0	equ	0xFEE
 28570                           plusw0	equ	0xFEB
 28571                           fsr0h	equ	0xFEA
 28572                           fsr0l	equ	0xFE9
 28573                           wreg	equ	0xFE8
 28574                           indf1	equ	0xFE7
 28575                           postdec1	equ	0xFE5
 28576                           fsr1h	equ	0xFE2
 28577                           fsr1l	equ	0xFE1
 28578                           indf2	equ	0xFDF
 28579                           postinc2	equ	0xFDE
 28580                           postdec2	equ	0xFDD
 28581                           plusw2	equ	0xFDB
 28582                           fsr2h	equ	0xFDA
 28583                           fsr2l	equ	0xFD9
 28584                           status	equ	0xFD8
 28585                           
 28586 ;; *************** function _low_isr *****************
 28587 ;; Defined at:
 28588 ;;		line 587 in file "interrupts.c"
 28589 ;; Parameters:    Size  Location     Type
 28590 ;;		None
 28591 ;; Auto vars:     Size  Location     Type
 28592 ;;  data            1   25[COMRAM] unsigned char 
 28593 ;; Return value:  Size  Location     Type
 28594 ;;		None               void
 28595 ;; Registers used:
 28596 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28597 ;; Tracked objects:
 28598 ;;		On entry : 0/0
 28599 ;;		On exit  : 0/0
 28600 ;;		Unchanged: 0/0
 28601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28604 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28605 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28606 ;;Total ram usage:       18 bytes
 28607 ;; Hardware stack levels used:    1
 28608 ;; Hardware stack levels required when called:    5
 28609 ;; This function calls:
 28610 ;;		_EraseScreen
 28611 ;;		_IsCharacter
 28612 ;;		_ReadUSART
 28613 ;;		i1_BlueConnected
 28614 ;;		i1_UARTchar
 28615 ;;		i1_UARTstring
 28616 ;;		i1_UARTstringCRLN
 28617 ;;		i1_cleanBuffer
 28618 ;; This function is called by:
 28619 ;;		Interrupt level 1
 28620 ;; This function uses a non-reentrant model
 28621 ;;
 28622                           
 28623                           	psect	intcodelo
 28624  000018                     __pintcodelo:
 28625                           	opt stack 0
 28626  000018                     _low_isr:
 28627                           	opt stack 17
 28628                           
 28629                           ;incstack = 0
 28630  000018  CFD8 F009          	movff	status,??_low_isr
 28631  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 28632  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 28633  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 28634  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 28635  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 28636  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 28637  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 28638  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 28639  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 28640  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 28641  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 28642  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 28643  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 28644  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 28645  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 28646  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 28647                           
 28648                           ;interrupts.c: 596: char data = 0;
 28649  00005C  0E00               	movlw	0
 28650  00005E  6E1A               	movwf	low_isr@data,c
 28651                           
 28652                           ;interrupts.c: 598: INTCONbits.PEIE = 0;
 28653  000060  9CF2               	bcf	intcon,6,c	;volatile
 28654                           
 28655                           ;interrupts.c: 600: if(PIR1bits.RCIF)
 28656  000062  AA9E               	btfss	3998,5,c	;volatile
 28657  000064  D08E               	goto	i1l1051
 28658                           
 28659                           ;interrupts.c: 601: {
 28660                           ;interrupts.c: 603: data = ReadUSART();
 28661  000066  ECCB  F03B         	call	_ReadUSART	;wreg free
 28662  00006A  6E1A               	movwf	low_isr@data,c
 28663                           
 28664                           ;interrupts.c: 605: if(!BlueConnected())
 28665  00006C  EC22  F03C         	call	i1_BlueConnected	;wreg free
 28666  000070  0900               	iorlw	0
 28667  000072  A4D8               	btfss	status,2,c
 28668  000074  D00F               	goto	i1l12688
 28669                           
 28670                           ;interrupts.c: 606: {
 28671                           ;interrupts.c: 607: if(CommandStringPos < 255)
 28672  000076  282D               	incf	_CommandStringPos,w,c
 28673  000078  B4D8               	btfsc	status,2,c
 28674  00007A  D081               	goto	i1l12734
 28675                           
 28676                           ;interrupts.c: 608: {
 28677                           ;interrupts.c: 609: CommandString[CommandStringPos] = data;
 28678  00007C  502D               	movf	_CommandStringPos,w,c
 28679  00007E  0D01               	mullw	1
 28680  000080  0E00               	movlw	low _CommandString
 28681  000082  24F3               	addwf	prodl,w,c
 28682  000084  6ED9               	movwf	fsr2l,c
 28683  000086  0E09               	movlw	high _CommandString
 28684  000088  20F4               	addwfc	prodh,w,c
 28685  00008A  6EDA               	movwf	fsr2h,c
 28686  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 28687                           
 28688                           ;interrupts.c: 610: CommandStringPos++;
 28689  000090  2A2D               	incf	_CommandStringPos,f,c
 28690                           
 28691                           ;interrupts.c: 611: }
 28692                           ;interrupts.c: 612: }
 28693  000092  D075               	goto	i1l12734
 28694  000094                     i1l12688:
 28695                           
 28696                           ;interrupts.c: 613: else
 28697                           ;interrupts.c: 614: {
 28698                           ;interrupts.c: 615: if(data != '\r' && data != '\n')
 28699  000094  0E0D               	movlw	13
 28700  000096  181A               	xorwf	low_isr@data,w,c
 28701  000098  B4D8               	btfsc	status,2,c
 28702  00009A  D063               	goto	i1l12728
 28703  00009C  0E0A               	movlw	10
 28704  00009E  181A               	xorwf	low_isr@data,w,c
 28705  0000A0  B4D8               	btfsc	status,2,c
 28706  0000A2  D05F               	goto	i1l12728
 28707                           
 28708                           ;interrupts.c: 616: {
 28709                           ;interrupts.c: 617: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 28710  0000A4  0E7F               	movlw	127
 28711  0000A6  181A               	xorwf	low_isr@data,w,c
 28712  0000A8  B4D8               	btfsc	status,2,c
 28713  0000AA  D004               	goto	i1l12696
 28714  0000AC  0E08               	movlw	8
 28715  0000AE  181A               	xorwf	low_isr@data,w,c
 28716  0000B0  A4D8               	btfss	status,2,c
 28717  0000B2  D01F               	goto	i1l12708
 28718  0000B4                     i1l12696:
 28719  0000B4  0100               	movlb	0	; () banked
 28720  0000B6  51CD               	movf	_ReceivedStringPos& (0+255),w,b
 28721  0000B8  B4D8               	btfsc	status,2,c
 28722  0000BA  D01B               	goto	i1l12708
 28723                           
 28724                           ; BSR set to: 0
 28725                           ;interrupts.c: 618: {
 28726                           ;interrupts.c: 620: EraseScreen(ReceivedStringPos + 1);
 28727  0000BC  0100               	movlb	0	; () banked
 28728  0000BE  29CD               	incf	_ReceivedStringPos& (0+255),w,b
 28729  0000C0  EC51  F03B         	call	_EraseScreen
 28730                           
 28731                           ;interrupts.c: 621: ReceivedStringPos--;
 28732  0000C4  0100               	movlb	0	; () banked
 28733  0000C6  07CD               	decf	_ReceivedStringPos& (0+255),f,b
 28734                           
 28735                           ; BSR set to: 0
 28736                           ;interrupts.c: 622: ReceivedString[ReceivedStringPos] = '\0';
 28737  0000C8  0100               	movlb	0	; () banked
 28738  0000CA  51CD               	movf	_ReceivedStringPos& (0+255),w,b
 28739  0000CC  0D01               	mullw	1
 28740  0000CE  0E00               	movlw	low _ReceivedString
 28741  0000D0  24F3               	addwf	prodl,w,c
 28742  0000D2  6ED9               	movwf	fsr2l,c
 28743  0000D4  0E06               	movlw	high _ReceivedString
 28744  0000D6  20F4               	addwfc	prodh,w,c
 28745  0000D8  6EDA               	movwf	fsr2h,c
 28746  0000DA  0E00               	movlw	0
 28747  0000DC  6EDF               	movwf	indf2,c
 28748                           
 28749                           ; BSR set to: 0
 28750                           ;interrupts.c: 623: UARTchar('>');
 28751  0000DE  0E3E               	movlw	62
 28752  0000E0  ECA9  F03B         	call	i1_UARTchar
 28753                           
 28754                           ;interrupts.c: 624: UARTstring(ReceivedString);
 28755  0000E4  0E00               	movlw	low _ReceivedString
 28756  0000E6  6E02               	movwf	i1UARTstring@data,c
 28757  0000E8  0E06               	movlw	high _ReceivedString
 28758  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 28759  0000EC  ECDD  F038         	call	i1_UARTstring	;wreg free
 28760                           
 28761                           ;interrupts.c: 625: }
 28762  0000F0  D046               	goto	i1l12734
 28763  0000F2                     i1l12708:
 28764                           
 28765                           ;interrupts.c: 626: else if(ReceivedStringPos < 255)
 28766  0000F2  0100               	movlb	0	; () banked
 28767  0000F4  29CD               	incf	_ReceivedStringPos& (0+255),w,b
 28768  0000F6  B4D8               	btfsc	status,2,c
 28769  0000F8  D01B               	goto	i1l12720
 28770                           
 28771                           ; BSR set to: 0
 28772                           ;interrupts.c: 627: {
 28773                           ;interrupts.c: 628: if(NewReceivedString == 0)
 28774  0000FA  0100               	movlb	0	; () banked
 28775  0000FC  51CC               	movf	_NewReceivedString& (0+255),w,b	;volatile
 28776  0000FE  A4D8               	btfss	status,2,c
 28777  000100  D03E               	goto	i1l12734
 28778                           
 28779                           ; BSR set to: 0
 28780                           ;interrupts.c: 629: {
 28781                           ;interrupts.c: 630: if(IsCharacter(data))
 28782  000102  501A               	movf	low_isr@data,w,c
 28783  000104  EC9D  F03B         	call	_IsCharacter
 28784  000108  0900               	iorlw	0
 28785  00010A  B4D8               	btfsc	status,2,c
 28786  00010C  D038               	goto	i1l12734
 28787                           
 28788                           ;interrupts.c: 631: {
 28789                           ;interrupts.c: 632: UARTchar(data);
 28790  00010E  501A               	movf	low_isr@data,w,c
 28791  000110  ECA9  F03B         	call	i1_UARTchar
 28792                           
 28793                           ;interrupts.c: 633: ReceivedString[ReceivedStringPos] = data;
 28794  000114  0100               	movlb	0	; () banked
 28795  000116  51CD               	movf	_ReceivedStringPos& (0+255),w,b
 28796  000118  0D01               	mullw	1
 28797  00011A  0E00               	movlw	low _ReceivedString
 28798  00011C  24F3               	addwf	prodl,w,c
 28799  00011E  6ED9               	movwf	fsr2l,c
 28800  000120  0E06               	movlw	high _ReceivedString
 28801  000122  20F4               	addwfc	prodh,w,c
 28802  000124  6EDA               	movwf	fsr2h,c
 28803  000126  C01A  FFDF         	movff	low_isr@data,indf2
 28804                           
 28805                           ; BSR set to: 0
 28806                           ;interrupts.c: 634: ReceivedStringPos++;
 28807  00012A  0100               	movlb	0	; () banked
 28808  00012C  2BCD               	incf	_ReceivedStringPos& (0+255),f,b
 28809                           
 28810                           ; BSR set to: 0
 28811                           ;interrupts.c: 635: }
 28812                           ;interrupts.c: 636: }
 28813                           ;interrupts.c: 637: }
 28814                           
 28815                           ; BSR set to: 0
 28816  00012E  D027               	goto	i1l12734
 28817  000130                     i1l12720:
 28818                           
 28819                           ; BSR set to: 0
 28820                           ;interrupts.c: 638: else
 28821                           ;interrupts.c: 639: {
 28822                           ;interrupts.c: 640: cleanBuffer(ReceivedString,255);
 28823  000130  0E00               	movlw	low _ReceivedString
 28824  000132  6E01               	movwf	i1cleanBuffer@data,c
 28825  000134  0E06               	movlw	high _ReceivedString
 28826  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 28827  000138  0E00               	movlw	0
 28828  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 28829  00013C  6803               	setf	i1cleanBuffer@count,c
 28830  00013E  EC35  F03A         	call	i1_cleanBuffer	;wreg free
 28831                           
 28832                           ;interrupts.c: 641: ReceivedStringPos = 0;
 28833  000142  0E00               	movlw	0
 28834  000144  0100               	movlb	0	; () banked
 28835  000146  6FCD               	movwf	_ReceivedStringPos& (0+255),b
 28836                           
 28837                           ; BSR set to: 0
 28838                           ;interrupts.c: 642: UARTstring(CRLN);
 28839  000148  0ED6               	movlw	low _CRLN
 28840  00014A  6E02               	movwf	i1UARTstring@data,c
 28841  00014C  0E00               	movlw	high _CRLN
 28842  00014E  6E03               	movwf	i1UARTstring@data+1,c
 28843  000150  ECDD  F038         	call	i1_UARTstring	;wreg free
 28844                           
 28845                           ;interrupts.c: 643: UARTstringCRLN((unsigned char *)"Buffer Overflow");
 28846  000154  0E1E               	movlw	low STR_3
 28847  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 28848  000158  0EFF               	movlw	high STR_3
 28849  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 28850  00015C  EC22  F038         	call	i1_UARTstringCRLN	;wreg free
 28851                           
 28852                           ;interrupts.c: 645: }
 28853                           ;interrupts.c: 646: }
 28854  000160  D00E               	goto	i1l12734
 28855  000162                     i1l12728:
 28856                           
 28857                           ;interrupts.c: 647: else if(ReceivedStringPos > 0)
 28858  000162  0100               	movlb	0	; () banked
 28859  000164  51CD               	movf	_ReceivedStringPos& (0+255),w,b
 28860  000166  B4D8               	btfsc	status,2,c
 28861  000168  D00A               	goto	i1l12734
 28862                           
 28863                           ; BSR set to: 0
 28864                           ;interrupts.c: 648: {
 28865                           ;interrupts.c: 649: UARTstring(CRLN);
 28866  00016A  0ED6               	movlw	low _CRLN
 28867  00016C  6E02               	movwf	i1UARTstring@data,c
 28868  00016E  0E00               	movlw	high _CRLN
 28869  000170  6E03               	movwf	i1UARTstring@data+1,c
 28870  000172  ECDD  F038         	call	i1_UARTstring	;wreg free
 28871                           
 28872                           ;interrupts.c: 650: NewReceivedString = 1;
 28873  000176  0E01               	movlw	1
 28874  000178  0100               	movlb	0	; () banked
 28875  00017A  6FCC               	movwf	_NewReceivedString& (0+255),b	;volatile
 28876                           
 28877                           ; BSR set to: 0
 28878                           
 28879                           ; BSR set to: 0
 28880  00017C  D000               	goto	i1l12734
 28881  00017E                     i1l12734:
 28882                           
 28883                           ;interrupts.c: 651: }
 28884                           ;interrupts.c: 652: }
 28885                           ;interrupts.c: 653: PIR1bits.RCIF = 0;
 28886  00017E  9A9E               	bcf	3998,5,c	;volatile
 28887                           
 28888                           ;interrupts.c: 654: }
 28889  000180  D00F               	goto	i1l1066
 28890  000182                     i1l1051:
 28891                           
 28892                           ;interrupts.c: 655: else if(PIR1bits.TMR1IF)
 28893  000182  A09E               	btfss	3998,0,c	;volatile
 28894  000184  D00B               	goto	i1l1067
 28895                           
 28896                           ;interrupts.c: 656: {
 28897                           ;interrupts.c: 657: Timer1_Postscaler++;
 28898  000186  2A38               	incf	_Timer1_Postscaler,f,c
 28899                           
 28900                           ;interrupts.c: 658: if(Timer1_Postscaler == 3)
 28901  000188  0E03               	movlw	3
 28902  00018A  1838               	xorwf	_Timer1_Postscaler,w,c
 28903  00018C  A4D8               	btfss	status,2,c
 28904  00018E  D004               	goto	i1l12744
 28905                           
 28906                           ;interrupts.c: 659: {
 28907                           ;interrupts.c: 660: (LATC &= ~0x04);
 28908  000190  948B               	bcf	3979,2,c	;volatile
 28909                           
 28910                           ;interrupts.c: 661: (LATC &= ~0x02);
 28911  000192  928B               	bcf	3979,1,c	;volatile
 28912                           
 28913                           ;interrupts.c: 662: (T1CONbits.TMR1ON = 0);
 28914  000194  90CD               	bcf	4045,0,c	;volatile
 28915  000196  D000               	goto	i1l12744
 28916  000198                     i1l12744:
 28917                           
 28918                           ;interrupts.c: 663: }
 28919                           ;interrupts.c: 664: PIR1bits.TMR1IF = 0;
 28920  000198  909E               	bcf	3998,0,c	;volatile
 28921                           
 28922                           ;interrupts.c: 665: }
 28923  00019A  D002               	goto	i1l1066
 28924  00019C                     i1l1067:
 28925                           
 28926                           ;interrupts.c: 666: else
 28927                           ;interrupts.c: 667: {
 28928                           ;interrupts.c: 669: __nop();
 28929  00019C  F000               	nop	
 28930  00019E  D000               	goto	i1l1066
 28931  0001A0                     i1l1066:
 28932                           
 28933                           ;interrupts.c: 670: }
 28934                           ;interrupts.c: 671: INTCONbits.PEIE = 1;
 28935  0001A0  8CF2               	bsf	intcon,6,c	;volatile
 28936  0001A2  C019  FFF5         	movff	??_low_isr+16,tablat
 28937  0001A6  C018  FFF8         	movff	??_low_isr+15,tblptru
 28938  0001AA  C017  FFF7         	movff	??_low_isr+14,tblptrh
 28939  0001AE  C016  FFF6         	movff	??_low_isr+13,tblptrl
 28940  0001B2  C015  FFF4         	movff	??_low_isr+12,prodh
 28941  0001B6  C014  FFF3         	movff	??_low_isr+11,prodl
 28942  0001BA  C013  FFDA         	movff	??_low_isr+10,fsr2h
 28943  0001BE  C012  FFD9         	movff	??_low_isr+9,fsr2l
 28944  0001C2  C011  FFE2         	movff	??_low_isr+8,fsr1h
 28945  0001C6  C010  FFE1         	movff	??_low_isr+7,fsr1l
 28946  0001CA  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 28947  0001CE  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 28948  0001D2  C00D  FFFB         	movff	??_low_isr+4,pclatu
 28949  0001D6  C00C  FFFA         	movff	??_low_isr+3,pclath
 28950  0001DA  C00B  FFE0         	movff	??_low_isr+2,bsr
 28951  0001DE  C00A  FFE8         	movff	??_low_isr+1,wreg
 28952  0001E2  C009  FFD8         	movff	??_low_isr,status
 28953  0001E6  0010               	retfie	
 28954  0001E8                     __end_of_low_isr:
 28955                           	opt stack 0
 28956                           pclatu	equ	0xFFB
 28957                           pclath	equ	0xFFA
 28958                           tblptru	equ	0xFF8
 28959                           tblptrh	equ	0xFF7
 28960                           tblptrl	equ	0xFF6
 28961                           tablat	equ	0xFF5
 28962                           prodh	equ	0xFF4
 28963                           prodl	equ	0xFF3
 28964                           intcon	equ	0xFF2
 28965                           intcon2	equ	0xFF1
 28966                           indf0	equ	0xFEF
 28967                           postinc0	equ	0xFEE
 28968                           plusw0	equ	0xFEB
 28969                           fsr0h	equ	0xFEA
 28970                           fsr0l	equ	0xFE9
 28971                           wreg	equ	0xFE8
 28972                           indf1	equ	0xFE7
 28973                           postdec1	equ	0xFE5
 28974                           fsr1h	equ	0xFE2
 28975                           fsr1l	equ	0xFE1
 28976                           bsr	equ	0xFE0
 28977                           indf2	equ	0xFDF
 28978                           postinc2	equ	0xFDE
 28979                           postdec2	equ	0xFDD
 28980                           plusw2	equ	0xFDB
 28981                           fsr2h	equ	0xFDA
 28982                           fsr2l	equ	0xFD9
 28983                           status	equ	0xFD8
 28984                           
 28985 ;; *************** function i1_cleanBuffer *****************
 28986 ;; Defined at:
 28987 ;;		line 125 in file "MISC.c"
 28988 ;; Parameters:    Size  Location     Type
 28989 ;;  data            2    0[COMRAM] PTR unsigned char 
 28990 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(50), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup@
      +buf(50), 
 28991 ;;		 -> CommandString(255), StringAddEqual@temp(100), ReceivedString(255), 
 28992 ;;  count           2    2[COMRAM] int 
 28993 ;; Auto vars:     Size  Location     Type
 28994 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 28995 ;; Return value:  Size  Location     Type
 28996 ;;		None               void
 28997 ;; Registers used:
 28998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28999 ;; Tracked objects:
 29000 ;;		On entry : 0/0
 29001 ;;		On exit  : 0/0
 29002 ;;		Unchanged: 0/0
 29003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29007 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29008 ;;Total ram usage:        8 bytes
 29009 ;; Hardware stack levels used:    1
 29010 ;; Hardware stack levels required when called:    2
 29011 ;; This function calls:
 29012 ;;		Nothing
 29013 ;; This function is called by:
 29014 ;;		_low_isr
 29015 ;; This function uses a non-reentrant model
 29016 ;;
 29017                           
 29018                           	psect	text92
 29019  00746A                     __ptext92:
 29020                           	opt stack 0
 29021  00746A                     i1_cleanBuffer:
 29022                           	opt stack 19
 29023                           
 29024                           ;MISC.c: 127: unsigned char i=0;
 29025                           
 29026                           ;incstack = 0
 29027  00746A  0E00               	movlw	0
 29028  00746C  6E08               	movwf	i1cleanBuffer@i,c
 29029                           
 29030                           ;MISC.c: 128: for(i=0; i<count;i++)
 29031  00746E  0E00               	movlw	0
 29032  007470  6E08               	movwf	i1cleanBuffer@i,c
 29033  007472  D00C               	goto	i1l12140
 29034  007474                     i1l12136:
 29035                           
 29036                           ;MISC.c: 129: {
 29037                           ;MISC.c: 130: data[i]= 0;
 29038  007474  5008               	movf	i1cleanBuffer@i,w,c
 29039  007476  0D01               	mullw	1
 29040  007478  50F3               	movf	prodl,w,c
 29041  00747A  2401               	addwf	i1cleanBuffer@data,w,c
 29042  00747C  6ED9               	movwf	fsr2l,c
 29043  00747E  50F4               	movf	prodh,w,c
 29044  007480  2002               	addwfc	i1cleanBuffer@data+1,w,c
 29045  007482  6EDA               	movwf	fsr2h,c
 29046  007484  0E00               	movlw	0
 29047  007486  6EDF               	movwf	indf2,c
 29048  007488  2A08               	incf	i1cleanBuffer@i,f,c
 29049  00748A  D000               	goto	i1l12140
 29050  00748C                     i1l12140:
 29051  00748C  5008               	movf	i1cleanBuffer@i,w,c
 29052  00748E  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 29053  007490  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 29054  007492  5003               	movf	i1cleanBuffer@count,w,c
 29055  007494  5C05               	subwf	??i1_cleanBuffer,w,c
 29056  007496  5006               	movf	??i1_cleanBuffer+1,w,c
 29057  007498  0A80               	xorlw	128
 29058  00749A  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 29059  00749C  5004               	movf	i1cleanBuffer@count+1,w,c
 29060  00749E  0A80               	xorlw	128
 29061  0074A0  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 29062  0074A2  A0D8               	btfss	status,0,c
 29063  0074A4  D7E7               	goto	i1l12136
 29064  0074A6  0012               	return		;funcret
 29065  0074A8                     __end_ofi1_cleanBuffer:
 29066                           	opt stack 0
 29067                           pclatu	equ	0xFFB
 29068                           pclath	equ	0xFFA
 29069                           tblptru	equ	0xFF8
 29070                           tblptrh	equ	0xFF7
 29071                           tblptrl	equ	0xFF6
 29072                           tablat	equ	0xFF5
 29073                           prodh	equ	0xFF4
 29074                           prodl	equ	0xFF3
 29075                           intcon	equ	0xFF2
 29076                           intcon2	equ	0xFF1
 29077                           indf0	equ	0xFEF
 29078                           postinc0	equ	0xFEE
 29079                           plusw0	equ	0xFEB
 29080                           fsr0h	equ	0xFEA
 29081                           fsr0l	equ	0xFE9
 29082                           wreg	equ	0xFE8
 29083                           indf1	equ	0xFE7
 29084                           postdec1	equ	0xFE5
 29085                           fsr1h	equ	0xFE2
 29086                           fsr1l	equ	0xFE1
 29087                           bsr	equ	0xFE0
 29088                           indf2	equ	0xFDF
 29089                           postinc2	equ	0xFDE
 29090                           postdec2	equ	0xFDD
 29091                           plusw2	equ	0xFDB
 29092                           fsr2h	equ	0xFDA
 29093                           fsr2l	equ	0xFD9
 29094                           status	equ	0xFD8
 29095                           
 29096 ;; *************** function i1_UARTstringCRLN *****************
 29097 ;; Defined at:
 29098 ;;		line 248 in file "UART.c"
 29099 ;; Parameters:    Size  Location     Type
 29100 ;;  data            2    3[COMRAM] PTR unsigned char 
 29101 ;;		 -> STR_101(36), STR_86(13), STR_77(13), STR_74(17), 
 29102 ;;		 -> STR_73(64), STR_71(27), STR_70(44), STR_67(50), 
 29103 ;;		 -> STR_66(50), STR_64(31), STR_63(31), STR_62(37), 
 29104 ;;		 -> STR_61(37), STR_60(37), STR_58(18), STR_57(14), 
 29105 ;;		 -> STR_56(9), STR_55(20), STR_54(16), STR_53(7), 
 29106 ;;		 -> STR_52(35), STR_51(37), STR_48(47), STR_43(16), 
 29107 ;;		 -> STR_42(9), STR_41(18), STR_40(9), STR_39(22), 
 29108 ;;		 -> STR_38(11), STR_37(20), STR_36(7), STR_35(31), 
 29109 ;;		 -> STR_34(33), STR_30(32), STR_25(29), STR_23(29), 
 29110 ;;		 -> SYNTAX_ERR(29), UseBluetooth@buf(50), STR_3(16), 
 29111 ;; Auto vars:     Size  Location     Type
 29112 ;;		None
 29113 ;; Return value:  Size  Location     Type
 29114 ;;		None               void
 29115 ;; Registers used:
 29116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29117 ;; Tracked objects:
 29118 ;;		On entry : 0/0
 29119 ;;		On exit  : 0/0
 29120 ;;		Unchanged: 0/0
 29121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29126 ;;Total ram usage:        2 bytes
 29127 ;; Hardware stack levels used:    1
 29128 ;; Hardware stack levels required when called:    4
 29129 ;; This function calls:
 29130 ;;		i1_UARTchar
 29131 ;;		i1_UARTstring
 29132 ;; This function is called by:
 29133 ;;		_low_isr
 29134 ;; This function uses a non-reentrant model
 29135 ;;
 29136                           
 29137                           	psect	text93
 29138  007044                     __ptext93:
 29139                           	opt stack 0
 29140  007044                     i1_UARTstringCRLN:
 29141                           	opt stack 17
 29142                           
 29143                           ;UART.c: 250: while(*data != 0)
 29144                           
 29145                           ;incstack = 0
 29146  007044  D016               	goto	i1l12148
 29147  007046                     i1l12144:
 29148                           
 29149                           ;UART.c: 251: {
 29150                           ;UART.c: 252: UARTchar(*data);
 29151  007046  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 29152  00704A  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 29153  00704E  0E00               	movlw	low (__mediumconst shr (0+16))
 29154  007050  6EF8               	movwf	tblptru,c
 29155  007052  0E0F               	movlw	(high __ramtop+-1)
 29156  007054  64F7               	cpfsgt	tblptrh,c
 29157  007056  D003               	bra	i1u1494_27
 29158  007058  0008               	tblrd		*
 29159  00705A  50F5               	movf	tablat,w,c
 29160  00705C  D005               	bra	i1u1494_20
 29161  00705E                     i1u1494_27:
 29162  00705E  CFF6 FFE9          	movff	tblptrl,fsr0l
 29163  007062  CFF7 FFEA          	movff	tblptrh,fsr0h
 29164  007066  50EF               	movf	indf0,w,c
 29165  007068                     i1u1494_20:
 29166  007068  ECA9  F03B         	call	i1_UARTchar
 29167                           
 29168                           ;UART.c: 253: *data++;
 29169  00706C  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 29170  00706E  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 29171  007070  D000               	goto	i1l12148
 29172  007072                     i1l12148:
 29173  007072  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 29174  007076  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 29175  00707A  0E00               	movlw	low (__mediumconst shr (0+16))
 29176  00707C  6EF8               	movwf	tblptru,c
 29177  00707E  0E0F               	movlw	(high __ramtop+-1)
 29178  007080  64F7               	cpfsgt	tblptrh,c
 29179  007082  D003               	bra	i1u1495_27
 29180  007084  0008               	tblrd		*
 29181  007086  50F5               	movf	tablat,w,c
 29182  007088  D005               	bra	i1u1495_20
 29183  00708A                     i1u1495_27:
 29184  00708A  CFF6 FFE9          	movff	tblptrl,fsr0l
 29185  00708E  CFF7 FFEA          	movff	tblptrh,fsr0h
 29186  007092  50EF               	movf	indf0,w,c
 29187  007094                     i1u1495_20:
 29188  007094  0900               	iorlw	0
 29189  007096  A4D8               	btfss	status,2,c
 29190  007098  D7D6               	goto	i1l12144
 29191                           
 29192                           ;UART.c: 254: }
 29193                           ;UART.c: 255: UARTstring((unsigned char*)"\r\n");
 29194  00709A  0EFC               	movlw	low STR_1
 29195  00709C  6E02               	movwf	i1UARTstring@data,c
 29196  00709E  0EFF               	movlw	high STR_1
 29197  0070A0  6E03               	movwf	i1UARTstring@data+1,c
 29198  0070A2  ECDD  F038         	call	i1_UARTstring	;wreg free
 29199  0070A6  0012               	return		;funcret
 29200  0070A8                     __end_ofi1_UARTstringCRLN:
 29201                           	opt stack 0
 29202                           pclatu	equ	0xFFB
 29203                           pclath	equ	0xFFA
 29204                           tblptru	equ	0xFF8
 29205                           tblptrh	equ	0xFF7
 29206                           tblptrl	equ	0xFF6
 29207                           tablat	equ	0xFF5
 29208                           prodh	equ	0xFF4
 29209                           prodl	equ	0xFF3
 29210                           intcon	equ	0xFF2
 29211                           intcon2	equ	0xFF1
 29212                           indf0	equ	0xFEF
 29213                           postinc0	equ	0xFEE
 29214                           plusw0	equ	0xFEB
 29215                           fsr0h	equ	0xFEA
 29216                           fsr0l	equ	0xFE9
 29217                           wreg	equ	0xFE8
 29218                           indf1	equ	0xFE7
 29219                           postdec1	equ	0xFE5
 29220                           fsr1h	equ	0xFE2
 29221                           fsr1l	equ	0xFE1
 29222                           bsr	equ	0xFE0
 29223                           indf2	equ	0xFDF
 29224                           postinc2	equ	0xFDE
 29225                           postdec2	equ	0xFDD
 29226                           plusw2	equ	0xFDB
 29227                           fsr2h	equ	0xFDA
 29228                           fsr2l	equ	0xFD9
 29229                           status	equ	0xFD8
 29230                           
 29231 ;; *************** function i1_UARTstring *****************
 29232 ;; Defined at:
 29233 ;;		line 199 in file "UART.c"
 29234 ;; Parameters:    Size  Location     Type
 29235 ;;  data            2    1[COMRAM] PTR unsigned char 
 29236 ;;		 -> STR_100(28), STR_65(14), SYNTAX_ERR(29), STR_20(5), 
 29237 ;;		 -> STR_18(5), STR_16(6), STR_14(6), STR_12(9), 
 29238 ;;		 -> STR_10(21), STR_8(10), BluetoothInitialSetup@buf(50), STR_4(4), 
 29239 ;;		 -> STR_2(3), STR_1(3), CRLN(3), ReceivedString(255), 
 29240 ;; Auto vars:     Size  Location     Type
 29241 ;;		None
 29242 ;; Return value:  Size  Location     Type
 29243 ;;		None               void
 29244 ;; Registers used:
 29245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29246 ;; Tracked objects:
 29247 ;;		On entry : 0/0
 29248 ;;		On exit  : 0/0
 29249 ;;		Unchanged: 0/0
 29250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29255 ;;Total ram usage:        2 bytes
 29256 ;; Hardware stack levels used:    1
 29257 ;; Hardware stack levels required when called:    3
 29258 ;; This function calls:
 29259 ;;		i1_UARTchar
 29260 ;; This function is called by:
 29261 ;;		_low_isr
 29262 ;;		i1_UARTstringCRLN
 29263 ;; This function uses a non-reentrant model
 29264 ;;
 29265                           
 29266                           	psect	text94
 29267  0071BA                     __ptext94:
 29268                           	opt stack 0
 29269  0071BA                     i1_UARTstring:
 29270                           	opt stack 17
 29271                           
 29272                           ;UART.c: 201: while(*data != 0)
 29273                           
 29274                           ;incstack = 0
 29275  0071BA  D016               	goto	i1l11404
 29276  0071BC                     i1l11400:
 29277                           
 29278                           ;UART.c: 202: {
 29279                           ;UART.c: 203: UARTchar(*data);
 29280  0071BC  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 29281  0071C0  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 29282  0071C4  0E00               	movlw	low (__mediumconst shr (0+16))
 29283  0071C6  6EF8               	movwf	tblptru,c
 29284  0071C8  0E0F               	movlw	(high __ramtop+-1)
 29285  0071CA  64F7               	cpfsgt	tblptrh,c
 29286  0071CC  D003               	bra	i1u1376_27
 29287  0071CE  0008               	tblrd		*
 29288  0071D0  50F5               	movf	tablat,w,c
 29289  0071D2  D005               	bra	i1u1376_20
 29290  0071D4                     i1u1376_27:
 29291  0071D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 29292  0071D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 29293  0071DC  50EF               	movf	indf0,w,c
 29294  0071DE                     i1u1376_20:
 29295  0071DE  ECA9  F03B         	call	i1_UARTchar
 29296                           
 29297                           ;UART.c: 204: *data++;
 29298  0071E2  4A02               	infsnz	i1UARTstring@data,f,c
 29299  0071E4  2A03               	incf	i1UARTstring@data+1,f,c
 29300  0071E6  D000               	goto	i1l11404
 29301  0071E8                     i1l11404:
 29302  0071E8  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 29303  0071EC  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 29304  0071F0  0E00               	movlw	low (__mediumconst shr (0+16))
 29305  0071F2  6EF8               	movwf	tblptru,c
 29306  0071F4  0E0F               	movlw	(high __ramtop+-1)
 29307  0071F6  64F7               	cpfsgt	tblptrh,c
 29308  0071F8  D003               	bra	i1u1377_27
 29309  0071FA  0008               	tblrd		*
 29310  0071FC  50F5               	movf	tablat,w,c
 29311  0071FE  D005               	bra	i1u1377_20
 29312  007200                     i1u1377_27:
 29313  007200  CFF6 FFE9          	movff	tblptrl,fsr0l
 29314  007204  CFF7 FFEA          	movff	tblptrh,fsr0h
 29315  007208  50EF               	movf	indf0,w,c
 29316  00720A                     i1u1377_20:
 29317  00720A  0900               	iorlw	0
 29318  00720C  A4D8               	btfss	status,2,c
 29319  00720E  D7D6               	goto	i1l11400
 29320  007210  0012               	return		;funcret
 29321  007212                     __end_ofi1_UARTstring:
 29322                           	opt stack 0
 29323                           pclatu	equ	0xFFB
 29324                           pclath	equ	0xFFA
 29325                           tblptru	equ	0xFF8
 29326                           tblptrh	equ	0xFF7
 29327                           tblptrl	equ	0xFF6
 29328                           tablat	equ	0xFF5
 29329                           prodh	equ	0xFF4
 29330                           prodl	equ	0xFF3
 29331                           intcon	equ	0xFF2
 29332                           intcon2	equ	0xFF1
 29333                           indf0	equ	0xFEF
 29334                           postinc0	equ	0xFEE
 29335                           plusw0	equ	0xFEB
 29336                           fsr0h	equ	0xFEA
 29337                           fsr0l	equ	0xFE9
 29338                           wreg	equ	0xFE8
 29339                           indf1	equ	0xFE7
 29340                           postdec1	equ	0xFE5
 29341                           fsr1h	equ	0xFE2
 29342                           fsr1l	equ	0xFE1
 29343                           bsr	equ	0xFE0
 29344                           indf2	equ	0xFDF
 29345                           postinc2	equ	0xFDE
 29346                           postdec2	equ	0xFDD
 29347                           plusw2	equ	0xFDB
 29348                           fsr2h	equ	0xFDA
 29349                           fsr2l	equ	0xFD9
 29350                           status	equ	0xFD8
 29351                           
 29352 ;; *************** function i1_BlueConnected *****************
 29353 ;; Defined at:
 29354 ;;		line 83 in file "Bluetooth.c"
 29355 ;; Parameters:    Size  Location     Type
 29356 ;;		None
 29357 ;; Auto vars:     Size  Location     Type
 29358 ;;		None
 29359 ;; Return value:  Size  Location     Type
 29360 ;;                  1    wreg      unsigned char 
 29361 ;; Registers used:
 29362 ;;		wreg
 29363 ;; Tracked objects:
 29364 ;;		On entry : 0/0
 29365 ;;		On exit  : 0/0
 29366 ;;		Unchanged: 0/0
 29367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29372 ;;Total ram usage:        0 bytes
 29373 ;; Hardware stack levels used:    1
 29374 ;; Hardware stack levels required when called:    2
 29375 ;; This function calls:
 29376 ;;		Nothing
 29377 ;; This function is called by:
 29378 ;;		_low_isr
 29379 ;; This function uses a non-reentrant model
 29380 ;;
 29381                           
 29382                           	psect	text95
 29383  007844                     __ptext95:
 29384                           	opt stack 0
 29385  007844                     i1_BlueConnected:
 29386                           	opt stack 19
 29387                           
 29388                           ;Bluetooth.c: 86: if((PORTA & 0x02) == 0x02)
 29389                           
 29390                           ;incstack = 0
 29391  007844  A280               	btfss	3968,1,c	;volatile
 29392  007846  D002               	goto	i1l9848
 29393                           
 29394                           ;Bluetooth.c: 87: {
 29395                           ;Bluetooth.c: 88: return 1;
 29396  007848  0E01               	movlw	1
 29397  00784A  0012               	return	
 29398  00784C                     i1l9848:
 29399                           
 29400                           ;Bluetooth.c: 89: }
 29401                           ;Bluetooth.c: 90: return 0;
 29402  00784C  0E00               	movlw	0
 29403  00784E  0012               	return	
 29404  007850  0012               	return		;funcret
 29405  007852                     __end_ofi1_BlueConnected:
 29406                           	opt stack 0
 29407                           pclatu	equ	0xFFB
 29408                           pclath	equ	0xFFA
 29409                           tblptru	equ	0xFF8
 29410                           tblptrh	equ	0xFF7
 29411                           tblptrl	equ	0xFF6
 29412                           tablat	equ	0xFF5
 29413                           prodh	equ	0xFF4
 29414                           prodl	equ	0xFF3
 29415                           intcon	equ	0xFF2
 29416                           intcon2	equ	0xFF1
 29417                           indf0	equ	0xFEF
 29418                           postinc0	equ	0xFEE
 29419                           plusw0	equ	0xFEB
 29420                           fsr0h	equ	0xFEA
 29421                           fsr0l	equ	0xFE9
 29422                           wreg	equ	0xFE8
 29423                           indf1	equ	0xFE7
 29424                           postdec1	equ	0xFE5
 29425                           fsr1h	equ	0xFE2
 29426                           fsr1l	equ	0xFE1
 29427                           bsr	equ	0xFE0
 29428                           indf2	equ	0xFDF
 29429                           postinc2	equ	0xFDE
 29430                           postdec2	equ	0xFDD
 29431                           plusw2	equ	0xFDB
 29432                           fsr2h	equ	0xFDA
 29433                           fsr2l	equ	0xFD9
 29434                           status	equ	0xFD8
 29435                           
 29436 ;; *************** function _ReadUSART *****************
 29437 ;; Defined at:
 29438 ;;		line 213 in file "UART.c"
 29439 ;; Parameters:    Size  Location     Type
 29440 ;;		None
 29441 ;; Auto vars:     Size  Location     Type
 29442 ;;  data            1    0[COMRAM] unsigned char 
 29443 ;; Return value:  Size  Location     Type
 29444 ;;                  1    wreg      unsigned char 
 29445 ;; Registers used:
 29446 ;;		wreg, status,2
 29447 ;; Tracked objects:
 29448 ;;		On entry : 0/0
 29449 ;;		On exit  : 0/0
 29450 ;;		Unchanged: 0/0
 29451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29456 ;;Total ram usage:        1 bytes
 29457 ;; Hardware stack levels used:    1
 29458 ;; Hardware stack levels required when called:    2
 29459 ;; This function calls:
 29460 ;;		Nothing
 29461 ;; This function is called by:
 29462 ;;		_low_isr
 29463 ;; This function uses a non-reentrant model
 29464 ;;
 29465                           
 29466                           	psect	text96
 29467  007796                     __ptext96:
 29468                           	opt stack 0
 29469  007796                     _ReadUSART:
 29470                           	opt stack 19
 29471                           
 29472                           ;UART.c: 215: unsigned char data;
 29473                           ;UART.c: 217: if(RCSTAbits.OERR)
 29474                           
 29475                           ;incstack = 0
 29476  007796  A2AB               	btfss	4011,1,c	;volatile
 29477  007798  D004               	goto	i1l453
 29478                           
 29479                           ;UART.c: 218: {
 29480                           ;UART.c: 220: RCSTAbits.CREN = 0;
 29481  00779A  98AB               	bcf	4011,4,c	;volatile
 29482                           
 29483                           ;UART.c: 221: RCSTAbits.CREN = 1;
 29484  00779C  88AB               	bsf	4011,4,c	;volatile
 29485                           
 29486                           ;UART.c: 222: return 0;
 29487  00779E  0E00               	movlw	0
 29488  0077A0  0012               	return	
 29489  0077A2                     i1l453:
 29490                           
 29491                           ;UART.c: 223: }
 29492                           ;UART.c: 225: data = RCREG;
 29493  0077A2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 29494                           
 29495                           ;UART.c: 226: return (data);
 29496  0077A6  5001               	movf	ReadUSART@data,w,c
 29497  0077A8  0012               	return	
 29498  0077AA  0012               	return		;funcret
 29499  0077AC                     __end_of_ReadUSART:
 29500                           	opt stack 0
 29501                           pclatu	equ	0xFFB
 29502                           pclath	equ	0xFFA
 29503                           tblptru	equ	0xFF8
 29504                           tblptrh	equ	0xFF7
 29505                           tblptrl	equ	0xFF6
 29506                           tablat	equ	0xFF5
 29507                           prodh	equ	0xFF4
 29508                           prodl	equ	0xFF3
 29509                           intcon	equ	0xFF2
 29510                           intcon2	equ	0xFF1
 29511                           indf0	equ	0xFEF
 29512                           postinc0	equ	0xFEE
 29513                           plusw0	equ	0xFEB
 29514                           fsr0h	equ	0xFEA
 29515                           fsr0l	equ	0xFE9
 29516                           wreg	equ	0xFE8
 29517                           indf1	equ	0xFE7
 29518                           postdec1	equ	0xFE5
 29519                           fsr1h	equ	0xFE2
 29520                           fsr1l	equ	0xFE1
 29521                           bsr	equ	0xFE0
 29522                           indf2	equ	0xFDF
 29523                           postinc2	equ	0xFDE
 29524                           postdec2	equ	0xFDD
 29525                           plusw2	equ	0xFDB
 29526                           fsr2h	equ	0xFDA
 29527                           fsr2l	equ	0xFD9
 29528                           status	equ	0xFD8
 29529                           
 29530 ;; *************** function _IsCharacter *****************
 29531 ;; Defined at:
 29532 ;;		line 111 in file "MISC.c"
 29533 ;; Parameters:    Size  Location     Type
 29534 ;;  data            1    wreg     unsigned char 
 29535 ;; Auto vars:     Size  Location     Type
 29536 ;;  data            1    0[COMRAM] unsigned char 
 29537 ;; Return value:  Size  Location     Type
 29538 ;;                  1    wreg      unsigned char 
 29539 ;; Registers used:
 29540 ;;		wreg, status,2, status,0
 29541 ;; Tracked objects:
 29542 ;;		On entry : 0/0
 29543 ;;		On exit  : 0/0
 29544 ;;		Unchanged: 0/0
 29545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29550 ;;Total ram usage:        1 bytes
 29551 ;; Hardware stack levels used:    1
 29552 ;; Hardware stack levels required when called:    2
 29553 ;; This function calls:
 29554 ;;		Nothing
 29555 ;; This function is called by:
 29556 ;;		_low_isr
 29557 ;; This function uses a non-reentrant model
 29558 ;;
 29559                           
 29560                           	psect	text97
 29561  00773A                     __ptext97:
 29562                           	opt stack 0
 29563  00773A                     _IsCharacter:
 29564                           	opt stack 19
 29565                           
 29566                           ;incstack = 0
 29567                           ;IsCharacter@data stored from wreg
 29568  00773A  6E01               	movwf	IsCharacter@data,c
 29569                           
 29570                           ;MISC.c: 113: if(data >= 32 && data <= 126)
 29571  00773C  0E1F               	movlw	31
 29572  00773E  6401               	cpfsgt	IsCharacter@data,c
 29573  007740  D005               	goto	i1l9600
 29574  007742  0E7F               	movlw	127
 29575  007744  6001               	cpfslt	IsCharacter@data,c
 29576  007746  D002               	goto	i1l9600
 29577                           
 29578                           ;MISC.c: 114: {
 29579                           ;MISC.c: 115: return 1;
 29580  007748  0E01               	movlw	1
 29581  00774A  0012               	return	
 29582  00774C                     i1l9600:
 29583                           
 29584                           ;MISC.c: 116: }
 29585                           ;MISC.c: 117: return 0;
 29586  00774C  0E00               	movlw	0
 29587  00774E  0012               	return	
 29588  007750  0012               	return		;funcret
 29589  007752                     __end_of_IsCharacter:
 29590                           	opt stack 0
 29591                           pclatu	equ	0xFFB
 29592                           pclath	equ	0xFFA
 29593                           tblptru	equ	0xFF8
 29594                           tblptrh	equ	0xFF7
 29595                           tblptrl	equ	0xFF6
 29596                           tablat	equ	0xFF5
 29597                           prodh	equ	0xFF4
 29598                           prodl	equ	0xFF3
 29599                           intcon	equ	0xFF2
 29600                           intcon2	equ	0xFF1
 29601                           indf0	equ	0xFEF
 29602                           postinc0	equ	0xFEE
 29603                           plusw0	equ	0xFEB
 29604                           fsr0h	equ	0xFEA
 29605                           fsr0l	equ	0xFE9
 29606                           wreg	equ	0xFE8
 29607                           indf1	equ	0xFE7
 29608                           postdec1	equ	0xFE5
 29609                           fsr1h	equ	0xFE2
 29610                           fsr1l	equ	0xFE1
 29611                           bsr	equ	0xFE0
 29612                           indf2	equ	0xFDF
 29613                           postinc2	equ	0xFDE
 29614                           postdec2	equ	0xFDD
 29615                           plusw2	equ	0xFDB
 29616                           fsr2h	equ	0xFDA
 29617                           fsr2l	equ	0xFD9
 29618                           status	equ	0xFD8
 29619                           
 29620 ;; *************** function _EraseScreen *****************
 29621 ;; Defined at:
 29622 ;;		line 294 in file "UART.c"
 29623 ;; Parameters:    Size  Location     Type
 29624 ;;  characters      1    wreg     unsigned char 
 29625 ;; Auto vars:     Size  Location     Type
 29626 ;;  characters      1    1[COMRAM] unsigned char 
 29627 ;;  i               1    2[COMRAM] unsigned char 
 29628 ;; Return value:  Size  Location     Type
 29629 ;;		None               void
 29630 ;; Registers used:
 29631 ;;		wreg, status,2, status,0, cstack
 29632 ;; Tracked objects:
 29633 ;;		On entry : 0/0
 29634 ;;		On exit  : 0/0
 29635 ;;		Unchanged: 0/0
 29636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29641 ;;Total ram usage:        2 bytes
 29642 ;; Hardware stack levels used:    1
 29643 ;; Hardware stack levels required when called:    3
 29644 ;; This function calls:
 29645 ;;		i1_UARTchar
 29646 ;; This function is called by:
 29647 ;;		_low_isr
 29648 ;; This function uses a non-reentrant model
 29649 ;;
 29650                           
 29651                           	psect	text98
 29652  0076A2                     __ptext98:
 29653                           	opt stack 0
 29654  0076A2                     _EraseScreen:
 29655                           	opt stack 18
 29656                           
 29657                           ;incstack = 0
 29658                           ;EraseScreen@characters stored from wreg
 29659  0076A2  6E02               	movwf	EraseScreen@characters,c
 29660                           
 29661                           ;UART.c: 296: unsigned char i;
 29662                           ;UART.c: 298: UARTchar('\r');
 29663  0076A4  0E0D               	movlw	13
 29664  0076A6  ECA9  F03B         	call	i1_UARTchar
 29665                           
 29666                           ;UART.c: 299: for (i = 0; i < characters; i++)
 29667  0076AA  0E00               	movlw	0
 29668  0076AC  6E03               	movwf	EraseScreen@i,c
 29669  0076AE  D005               	goto	i1l11978
 29670  0076B0                     i1l11974:
 29671                           
 29672                           ;UART.c: 300: {
 29673                           ;UART.c: 301: UARTchar(' ');
 29674  0076B0  0E20               	movlw	32
 29675  0076B2  ECA9  F03B         	call	i1_UARTchar
 29676  0076B6  2A03               	incf	EraseScreen@i,f,c
 29677  0076B8  D000               	goto	i1l11978
 29678  0076BA                     i1l11978:
 29679  0076BA  5002               	movf	EraseScreen@characters,w,c
 29680  0076BC  5C03               	subwf	EraseScreen@i,w,c
 29681  0076BE  A0D8               	btfss	status,0,c
 29682  0076C0  D7F7               	goto	i1l11974
 29683                           
 29684                           ;UART.c: 302: }
 29685                           ;UART.c: 303: UARTchar('\r');
 29686  0076C2  0E0D               	movlw	13
 29687  0076C4  ECA9  F03B         	call	i1_UARTchar
 29688  0076C8  0012               	return		;funcret
 29689  0076CA                     __end_of_EraseScreen:
 29690                           	opt stack 0
 29691                           pclatu	equ	0xFFB
 29692                           pclath	equ	0xFFA
 29693                           tblptru	equ	0xFF8
 29694                           tblptrh	equ	0xFF7
 29695                           tblptrl	equ	0xFF6
 29696                           tablat	equ	0xFF5
 29697                           prodh	equ	0xFF4
 29698                           prodl	equ	0xFF3
 29699                           intcon	equ	0xFF2
 29700                           intcon2	equ	0xFF1
 29701                           indf0	equ	0xFEF
 29702                           postinc0	equ	0xFEE
 29703                           plusw0	equ	0xFEB
 29704                           fsr0h	equ	0xFEA
 29705                           fsr0l	equ	0xFE9
 29706                           wreg	equ	0xFE8
 29707                           indf1	equ	0xFE7
 29708                           postdec1	equ	0xFE5
 29709                           fsr1h	equ	0xFE2
 29710                           fsr1l	equ	0xFE1
 29711                           bsr	equ	0xFE0
 29712                           indf2	equ	0xFDF
 29713                           postinc2	equ	0xFDE
 29714                           postdec2	equ	0xFDD
 29715                           plusw2	equ	0xFDB
 29716                           fsr2h	equ	0xFDA
 29717                           fsr2l	equ	0xFD9
 29718                           status	equ	0xFD8
 29719                           
 29720 ;; *************** function i1_UARTchar *****************
 29721 ;; Defined at:
 29722 ;;		line 185 in file "UART.c"
 29723 ;; Parameters:    Size  Location     Type
 29724 ;;  data            1    wreg     unsigned char 
 29725 ;; Auto vars:     Size  Location     Type
 29726 ;;  data            1    0[COMRAM] unsigned char 
 29727 ;; Return value:  Size  Location     Type
 29728 ;;		None               void
 29729 ;; Registers used:
 29730 ;;		wreg, status,2
 29731 ;; Tracked objects:
 29732 ;;		On entry : 0/0
 29733 ;;		On exit  : 0/0
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29740 ;;Total ram usage:        1 bytes
 29741 ;; Hardware stack levels used:    1
 29742 ;; Hardware stack levels required when called:    2
 29743 ;; This function calls:
 29744 ;;		Nothing
 29745 ;; This function is called by:
 29746 ;;		_EraseScreen
 29747 ;;		_low_isr
 29748 ;;		i1_UARTstring
 29749 ;;		i1_UARTstringCRLN
 29750 ;; This function uses a non-reentrant model
 29751 ;;
 29752                           
 29753                           	psect	text99
 29754  007752                     __ptext99:
 29755                           	opt stack 0
 29756  007752                     i1_UARTchar:
 29757                           	opt stack 17
 29758                           
 29759                           ;incstack = 0
 29760                           ;i1UARTchar@data stored from wreg
 29761  007752  6E01               	movwf	i1UARTchar@data,c
 29762                           
 29763                           ;UART.c: 187: if(data != 0)
 29764  007754  5001               	movf	i1UARTchar@data,w,c
 29765  007756  B4D8               	btfsc	status,2,c
 29766  007758  0012               	return	
 29767                           
 29768                           ;UART.c: 188: {
 29769                           ;UART.c: 189: TXREG = data;
 29770  00775A  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 29771                           
 29772                           ;UART.c: 190: while(!TXSTAbits.TRMT);
 29773  00775E  D000               	goto	i1l441
 29774  007760                     i1l441:
 29775  007760  B2AC               	btfsc	4012,1,c	;volatile
 29776  007762  0012               	return	
 29777  007764  D7FD               	goto	i1l441
 29778  007766  0012               	return	
 29779  007768  0012               	return		;funcret
 29780  00776A                     __end_ofi1_UARTchar:
 29781                           	opt stack 0
 29782                           pclatu	equ	0xFFB
 29783                           pclath	equ	0xFFA
 29784                           tblptru	equ	0xFF8
 29785                           tblptrh	equ	0xFF7
 29786                           tblptrl	equ	0xFF6
 29787                           tablat	equ	0xFF5
 29788                           prodh	equ	0xFF4
 29789                           prodl	equ	0xFF3
 29790                           intcon	equ	0xFF2
 29791                           intcon2	equ	0xFF1
 29792                           indf0	equ	0xFEF
 29793                           postinc0	equ	0xFEE
 29794                           plusw0	equ	0xFEB
 29795                           fsr0h	equ	0xFEA
 29796                           fsr0l	equ	0xFE9
 29797                           wreg	equ	0xFE8
 29798                           indf1	equ	0xFE7
 29799                           postdec1	equ	0xFE5
 29800                           fsr1h	equ	0xFE2
 29801                           fsr1l	equ	0xFE1
 29802                           bsr	equ	0xFE0
 29803                           indf2	equ	0xFDF
 29804                           postinc2	equ	0xFDE
 29805                           postdec2	equ	0xFDD
 29806                           plusw2	equ	0xFDB
 29807                           fsr2h	equ	0xFDA
 29808                           fsr2l	equ	0xFD9
 29809                           status	equ	0xFD8
 29810                           
 29811 ;; *************** function _high_isr *****************
 29812 ;; Defined at:
 29813 ;;		line 57 in file "interrupts.c"
 29814 ;; Parameters:    Size  Location     Type
 29815 ;;		None
 29816 ;; Auto vars:     Size  Location     Type
 29817 ;;  Time0           2   19[BANK0 ] unsigned int 
 29818 ;;  IRpin           1   18[BANK0 ] unsigned char 
 29819 ;; Return value:  Size  Location     Type
 29820 ;;		None               void
 29821 ;; Registers used:
 29822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29823 ;; Tracked objects:
 29824 ;;		On entry : 0/0
 29825 ;;		On exit  : 0/0
 29826 ;;		Unchanged: 0/0
 29827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29829 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29830 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29831 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29832 ;;Total ram usage:       21 bytes
 29833 ;; Hardware stack levels used:    1
 29834 ;; Hardware stack levels required when called:    1
 29835 ;; This function calls:
 29836 ;;		_IRrawToNEC
 29837 ;;		_ResetTimer3
 29838 ;;		i2_ReadIRpin
 29839 ;;		i2_ResetTimer0
 29840 ;; This function is called by:
 29841 ;;		Interrupt level 2
 29842 ;; This function uses a non-reentrant model
 29843 ;;
 29844                           
 29845                           	psect	intcode
 29846  000008                     __pintcode:
 29847                           	opt stack 0
 29848  000008                     _high_isr:
 29849                           	opt stack 17
 29850                           
 29851                           ;incstack = 0
 29852  000008  CFFA F064          	movff	pclath,??_high_isr+4
 29853  00000C  CFFB F065          	movff	pclatu,??_high_isr+5
 29854  000010  CFE9 F066          	movff	fsr0l,??_high_isr+6
 29855  000014  EF62  F018         	goto	int_func
 29856                           pclatu	equ	0xFFB
 29857                           pclath	equ	0xFFA
 29858                           tblptru	equ	0xFF8
 29859                           tblptrh	equ	0xFF7
 29860                           tblptrl	equ	0xFF6
 29861                           tablat	equ	0xFF5
 29862                           prodh	equ	0xFF4
 29863                           prodl	equ	0xFF3
 29864                           intcon	equ	0xFF2
 29865                           intcon2	equ	0xFF1
 29866                           indf0	equ	0xFEF
 29867                           postinc0	equ	0xFEE
 29868                           plusw0	equ	0xFEB
 29869                           fsr0h	equ	0xFEA
 29870                           fsr0l	equ	0xFE9
 29871                           wreg	equ	0xFE8
 29872                           indf1	equ	0xFE7
 29873                           postdec1	equ	0xFE5
 29874                           fsr1h	equ	0xFE2
 29875                           fsr1l	equ	0xFE1
 29876                           bsr	equ	0xFE0
 29877                           indf2	equ	0xFDF
 29878                           postinc2	equ	0xFDE
 29879                           postdec2	equ	0xFDD
 29880                           plusw2	equ	0xFDB
 29881                           fsr2h	equ	0xFDA
 29882                           fsr2l	equ	0xFD9
 29883                           status	equ	0xFD8
 29884                           
 29885                           	psect	intcode_body
 29886  0030C4                     __pintcode_body:
 29887                           	opt stack 17
 29888  0030C4                     int_func:
 29889                           	opt stack 17
 29890  0030C4  CFEA F067          	movff	fsr0h,??_high_isr+7
 29891  0030C8  CFE1 F068          	movff	fsr1l,??_high_isr+8
 29892  0030CC  CFE2 F069          	movff	fsr1h,??_high_isr+9
 29893  0030D0  CFD9 F06A          	movff	fsr2l,??_high_isr+10
 29894  0030D4  CFDA F06B          	movff	fsr2h,??_high_isr+11
 29895  0030D8  CFF3 F06C          	movff	prodl,??_high_isr+12
 29896  0030DC  CFF4 F06D          	movff	prodh,??_high_isr+13
 29897  0030E0  CFF6 F06E          	movff	tblptrl,??_high_isr+14
 29898  0030E4  CFF7 F06F          	movff	tblptrh,??_high_isr+15
 29899  0030E8  CFF8 F070          	movff	tblptru,??_high_isr+16
 29900  0030EC  CFF5 F071          	movff	tablat,??_high_isr+17
 29901                           
 29902                           ;interrupts.c: 66: unsigned char IRpin;
 29903                           ;interrupts.c: 67: unsigned int Time0;
 29904                           ;interrupts.c: 69: INTCONbits.GIE = 0;
 29905  0030F0  9EF2               	bcf	intcon,7,c	;volatile
 29906                           
 29907                           ;interrupts.c: 71: if(INTCONbits.RBIF)
 29908  0030F2  A0F2               	btfss	intcon,0,c	;volatile
 29909  0030F4  D073               	goto	i2l924
 29910                           
 29911                           ;interrupts.c: 72: {
 29912                           ;interrupts.c: 73: IRpin = ReadIRpin();
 29913  0030F6  EC29  F03C         	call	i2_ReadIRpin	;wreg free
 29914  0030FA  0100               	movlb	0	; () banked
 29915  0030FC  6F72               	movwf	high_isr@IRpin& (0+255),b
 29916                           
 29917                           ; BSR set to: 0
 29918                           ;interrupts.c: 74: if(IRpin != IRpinOLD)
 29919  0030FE  502F               	movf	_IRpinOLD,w,c
 29920  003100  0100               	movlb	0	; () banked
 29921  003102  1972               	xorwf	high_isr@IRpin& (0+255),w,b
 29922  003104  B4D8               	btfsc	status,2,c
 29923  003106  D067               	goto	i2l925
 29924                           
 29925                           ; BSR set to: 0
 29926                           ;interrupts.c: 75: {
 29927                           ;interrupts.c: 76: (T0CONbits.TMR0ON = 1);
 29928  003108  8ED5               	bsf	4053,7,c	;volatile
 29929                           
 29930                           ;interrupts.c: 77: (INTCONbits.TMR0IE = 1);
 29931  00310A  8AF2               	bsf	intcon,5,c	;volatile
 29932                           
 29933                           ; BSR set to: 0
 29934                           ;interrupts.c: 78: ReceivingIR = 19;
 29935  00310C  0E13               	movlw	19
 29936  00310E  6E43               	movwf	_ReceivingIR,c	;volatile
 29937                           
 29938                           ;interrupts.c: 79: IR_New_Code = 0;
 29939  003110  0E00               	movlw	0
 29940  003112  0100               	movlb	0	; () banked
 29941  003114  6FD2               	movwf	_IR_New_Code& (0+255),b
 29942                           
 29943                           ; BSR set to: 0
 29944                           ;interrupts.c: 80: Time0 = TMR0L;
 29945  003116  CFD6 F073          	movff	4054,high_isr@Time0	;volatile
 29946  00311A  0100               	movlb	0	; () banked
 29947  00311C  6B74               	clrf	(high_isr@Time0+1)& (0+255),b
 29948                           
 29949                           ;interrupts.c: 81: Time0 += (TMR0H << 8);
 29950  00311E  50D7               	movf	4055,w,c	;volatile
 29951  003120  0100               	movlb	0	; () banked
 29952  003122  2774               	addwf	(high_isr@Time0+1)& (0+255),f,b
 29953                           
 29954                           ; BSR set to: 0
 29955                           ;interrupts.c: 82: if(IRrawCodeNum < 72)
 29956  003124  0E48               	movlw	72
 29957  003126  6030               	cpfslt	_IRrawCodeNum,c
 29958  003128  D051               	goto	i2l926
 29959                           
 29960                           ; BSR set to: 0
 29961                           ;interrupts.c: 83: {
 29962                           ;interrupts.c: 84: if(IRrawCodeNum > 0)
 29963  00312A  5030               	movf	_IRrawCodeNum,w,c
 29964  00312C  B4D8               	btfsc	status,2,c
 29965  00312E  D049               	goto	i2l12276
 29966                           
 29967                           ; BSR set to: 0
 29968                           ;interrupts.c: 85: {
 29969                           ;interrupts.c: 86: IRRawCode[IRrawCodeNum - 1] = Time0;
 29970  003130  0EFE               	movlw	254
 29971  003132  0100               	movlb	0	; () banked
 29972  003134  6F60               	movwf	??_high_isr& (0+255),b
 29973  003136  0EFF               	movlw	255
 29974  003138  0100               	movlb	0	; () banked
 29975  00313A  6F61               	movwf	(??_high_isr+1)& (0+255),b
 29976  00313C  5030               	movf	_IRrawCodeNum,w,c
 29977  00313E  0100               	movlb	0	; () banked
 29978  003140  6F62               	movwf	(??_high_isr+2)& (0+255),b
 29979  003142  6B63               	clrf	(??_high_isr+3)& (0+255),b
 29980  003144  90D8               	bcf	status,0,c
 29981  003146  0100               	movlb	0	; () banked
 29982  003148  3762               	rlcf	(??_high_isr+2)& (0+255),f,b
 29983  00314A  3763               	rlcf	(??_high_isr+3)& (0+255),f,b
 29984  00314C  0100               	movlb	0	; () banked
 29985  00314E  5160               	movf	??_high_isr& (0+255),w,b
 29986  003150  0100               	movlb	0	; () banked
 29987  003152  2762               	addwf	(??_high_isr+2)& (0+255),f,b
 29988  003154  0100               	movlb	0	; () banked
 29989  003156  5161               	movf	(??_high_isr+1)& (0+255),w,b
 29990  003158  0100               	movlb	0	; () banked
 29991  00315A  2363               	addwfc	(??_high_isr+3)& (0+255),f,b
 29992  00315C  0E00               	movlw	low _IRRawCode
 29993  00315E  0100               	movlb	0	; () banked
 29994  003160  2562               	addwf	(??_high_isr+2)& (0+255),w,b
 29995  003162  6ED9               	movwf	fsr2l,c
 29996  003164  0E08               	movlw	high _IRRawCode
 29997  003166  0100               	movlb	0	; () banked
 29998  003168  2163               	addwfc	(??_high_isr+3)& (0+255),w,b
 29999  00316A  6EDA               	movwf	fsr2h,c
 30000  00316C  C073  FFDE         	movff	high_isr@Time0,postinc2
 30001  003170  C074  FFDD         	movff	high_isr@Time0+1,postdec2
 30002                           
 30003                           ; BSR set to: 0
 30004                           ;interrupts.c: 87: if((Time0 <= 21000 && Time0 >= 19000) ||
 30005                           ;interrupts.c: 88: (Time0 <= 50000 && Time0 >= 45000))
 30006  003174  0E09               	movlw	9
 30007  003176  0100               	movlb	0	; () banked
 30008  003178  5D73               	subwf	high_isr@Time0& (0+255),w,b
 30009  00317A  0E52               	movlw	82
 30010  00317C  0100               	movlb	0	; () banked
 30011  00317E  5974               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 30012  003180  B0D8               	btfsc	status,0,c
 30013  003182  D008               	goto	i2l12270
 30014                           
 30015                           ; BSR set to: 0
 30016  003184  0E38               	movlw	56
 30017  003186  0100               	movlb	0	; () banked
 30018  003188  5D73               	subwf	high_isr@Time0& (0+255),w,b
 30019  00318A  0E4A               	movlw	74
 30020  00318C  0100               	movlb	0	; () banked
 30021  00318E  5974               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 30022  003190  B0D8               	btfsc	status,0,c
 30023  003192  D010               	goto	i2l930
 30024  003194                     i2l12270:
 30025                           
 30026                           ; BSR set to: 0
 30027  003194  0E51               	movlw	81
 30028  003196  0100               	movlb	0	; () banked
 30029  003198  5D73               	subwf	high_isr@Time0& (0+255),w,b
 30030  00319A  0EC3               	movlw	195
 30031  00319C  0100               	movlb	0	; () banked
 30032  00319E  5974               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 30033  0031A0  B0D8               	btfsc	status,0,c
 30034  0031A2  D00C               	goto	i2l12274
 30035                           
 30036                           ; BSR set to: 0
 30037  0031A4  0EC8               	movlw	200
 30038  0031A6  0100               	movlb	0	; () banked
 30039  0031A8  5D73               	subwf	high_isr@Time0& (0+255),w,b
 30040  0031AA  0EAF               	movlw	175
 30041  0031AC  0100               	movlb	0	; () banked
 30042  0031AE  5974               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 30043  0031B0  A0D8               	btfss	status,0,c
 30044  0031B2  D004               	goto	i2l12274
 30045  0031B4                     i2l930:
 30046                           
 30047                           ; BSR set to: 0
 30048                           ;interrupts.c: 89: {
 30049                           ;interrupts.c: 91: (IOCBbits.IOCB4 = 0);
 30050  0031B4  987D               	bcf	3965,4,c	;volatile
 30051                           
 30052                           ;interrupts.c: 92: INTCONbits.RBIE = 0;
 30053  0031B6  96F2               	bcf	intcon,3,c	;volatile
 30054                           
 30055                           ;interrupts.c: 94: INTCONbits.TMR0IF = 1;
 30056  0031B8  84F2               	bsf	intcon,2,c	;volatile
 30057                           
 30058                           ;interrupts.c: 95: }
 30059  0031BA  D006               	goto	i2l12278
 30060  0031BC                     i2l12274:
 30061                           
 30062                           ; BSR set to: 0
 30063                           ;interrupts.c: 96: else
 30064                           ;interrupts.c: 97: {
 30065                           ;interrupts.c: 98: ResetTimer0();
 30066  0031BC  EC45  F03C         	call	i2_ResetTimer0	;wreg free
 30067                           
 30068                           ;interrupts.c: 99: }
 30069                           ;interrupts.c: 100: }
 30070  0031C0  D003               	goto	i2l12278
 30071  0031C2                     i2l12276:
 30072                           
 30073                           ;interrupts.c: 101: else
 30074                           ;interrupts.c: 102: {
 30075                           ;interrupts.c: 103: ResetTimer0();
 30076  0031C2  EC45  F03C         	call	i2_ResetTimer0	;wreg free
 30077  0031C6  D000               	goto	i2l12278
 30078  0031C8                     i2l12278:
 30079                           
 30080                           ;interrupts.c: 104: }
 30081                           ;interrupts.c: 105: IRrawCodeNum++;
 30082  0031C8  2A30               	incf	_IRrawCodeNum,f,c
 30083                           
 30084                           ;interrupts.c: 106: }
 30085  0031CA  D002               	goto	i2l935
 30086  0031CC                     i2l926:
 30087                           
 30088                           ; BSR set to: 0
 30089                           ;interrupts.c: 107: else
 30090                           ;interrupts.c: 108: {
 30091                           ;interrupts.c: 109: (IOCBbits.IOCB4 = 0);
 30092  0031CC  987D               	bcf	3965,4,c	;volatile
 30093                           
 30094                           ;interrupts.c: 110: INTCONbits.RBIE = 0;
 30095  0031CE  96F2               	bcf	intcon,3,c	;volatile
 30096  0031D0                     i2l935:
 30097                           
 30098                           ;interrupts.c: 111: }
 30099                           ;interrupts.c: 112: IRpinOLD = IRpin;
 30100  0031D0  C072  F02F         	movff	high_isr@IRpin,_IRpinOLD
 30101                           
 30102                           ;interrupts.c: 113: }
 30103  0031D4  D001               	goto	i2l936
 30104  0031D6                     i2l925:
 30105                           
 30106                           ; BSR set to: 0
 30107                           ;interrupts.c: 114: else
 30108                           ;interrupts.c: 115: {
 30109                           ;interrupts.c: 117: __nop();
 30110  0031D6  F000               	nop	
 30111  0031D8                     i2l936:
 30112                           
 30113                           ;interrupts.c: 118: }
 30114                           ;interrupts.c: 120: INTCONbits.RBIF = 0;
 30115  0031D8  90F2               	bcf	intcon,0,c	;volatile
 30116                           
 30117                           ;interrupts.c: 121: }
 30118  0031DA  D209               	goto	i2l937
 30119  0031DC                     i2l924:
 30120                           
 30121                           ;interrupts.c: 122: else if(INTCONbits.TMR0IF)
 30122  0031DC  A4F2               	btfss	intcon,2,c	;volatile
 30123  0031DE  D021               	goto	i2l938
 30124                           
 30125                           ;interrupts.c: 123: {
 30126                           ;interrupts.c: 125: (INTCONbits.TMR0IE = 0);
 30127  0031E0  9AF2               	bcf	intcon,5,c	;volatile
 30128                           
 30129                           ;interrupts.c: 126: (T0CONbits.TMR0ON = 0);
 30130  0031E2  9ED5               	bcf	4053,7,c	;volatile
 30131                           
 30132                           ;interrupts.c: 127: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 30133  0031E4  0E00               	movlw	low _IRRawCode
 30134  0031E6  6E1B               	movwf	IRrawToNEC@Raw,c
 30135  0031E8  0E08               	movlw	high _IRRawCode
 30136  0031EA  6E1C               	movwf	IRrawToNEC@Raw+1,c
 30137  0031EC  0ECE               	movlw	low _IR_NEC
 30138  0031EE  6E1D               	movwf	IRrawToNEC@NEC,c
 30139  0031F0  0E00               	movlw	high _IR_NEC
 30140  0031F2  6E1E               	movwf	IRrawToNEC@NEC+1,c
 30141  0031F4  0E01               	movlw	1
 30142  0031F6  6E1F               	movwf	IRrawToNEC@Invert,c
 30143  0031F8  EC42  F01F         	call	_IRrawToNEC	;wreg free
 30144  0031FC  0100               	movlb	0	; () banked
 30145  0031FE  6FD2               	movwf	_IR_New_Code& (0+255),b
 30146                           
 30147                           ; BSR set to: 0
 30148                           ;interrupts.c: 128: if(!IR_New_Code)
 30149  003200  0100               	movlb	0	; () banked
 30150  003202  51D2               	movf	_IR_New_Code& (0+255),w,b
 30151  003204  A4D8               	btfss	status,2,c
 30152  003206  D007               	goto	i2l12294
 30153                           
 30154                           ; BSR set to: 0
 30155                           ;interrupts.c: 129: {
 30156                           ;interrupts.c: 130: IRpinOLD = ReadIRpin();
 30157  003208  EC29  F03C         	call	i2_ReadIRpin	;wreg free
 30158  00320C  6E2F               	movwf	_IRpinOLD,c
 30159                           
 30160                           ;interrupts.c: 131: INTCONbits.RBIF = 0;
 30161  00320E  90F2               	bcf	intcon,0,c	;volatile
 30162                           
 30163                           ;interrupts.c: 132: (IOCBbits.IOCB4 = 1);
 30164  003210  887D               	bsf	3965,4,c	;volatile
 30165                           
 30166                           ;interrupts.c: 133: INTCONbits.RBIE = 1;
 30167  003212  86F2               	bsf	intcon,3,c	;volatile
 30168  003214  D000               	goto	i2l12294
 30169  003216                     i2l12294:
 30170                           
 30171                           ;interrupts.c: 134: }
 30172                           ;interrupts.c: 135: IRrawCodeNum = 0;
 30173  003216  0E00               	movlw	0
 30174  003218  6E30               	movwf	_IRrawCodeNum,c
 30175                           
 30176                           ;interrupts.c: 136: ReceivingIR = 13;
 30177  00321A  0E0D               	movlw	13
 30178  00321C  6E43               	movwf	_ReceivingIR,c	;volatile
 30179                           
 30180                           ;interrupts.c: 137: INTCONbits.TMR0IF = 0;
 30181  00321E  94F2               	bcf	intcon,2,c	;volatile
 30182                           
 30183                           ;interrupts.c: 138: }
 30184  003220  D1E6               	goto	i2l937
 30185  003222                     i2l938:
 30186                           
 30187                           ;interrupts.c: 139: else if(PIR1bits.TMR2IF)
 30188  003222  A29E               	btfss	3998,1,c	;volatile
 30189  003224  D1D1               	goto	i2l941
 30190                           
 30191                           ;interrupts.c: 140: {
 30192                           ;interrupts.c: 143: Timer2_Postscaler++;
 30193  003226  2A39               	incf	_Timer2_Postscaler,f,c
 30194                           
 30195                           ;interrupts.c: 144: if(RF_IR == 55)
 30196  003228  0E37               	movlw	55
 30197  00322A  1841               	xorwf	_RF_IR,w,c
 30198  00322C  A4D8               	btfss	status,2,c
 30199  00322E  D10C               	goto	i2l12534
 30200                           
 30201                           ;interrupts.c: 145: {
 30202                           ;interrupts.c: 147: if(Timer2_Postscaler >= RF_IR_Postscaler)
 30203  003230  5042               	movf	_RF_IR_Postscaler,w,c	;volatile
 30204  003232  5C39               	subwf	_Timer2_Postscaler,w,c
 30205  003234  A0D8               	btfss	status,0,c
 30206  003236  D103               	goto	i2l12530
 30207                           
 30208                           ;interrupts.c: 148: {
 30209                           ;interrupts.c: 149: Timer2_Postscaler = 0;
 30210  003238  0E00               	movlw	0
 30211  00323A  6E39               	movwf	_Timer2_Postscaler,c
 30212                           
 30213                           ;interrupts.c: 150: if(RFsendCode[RFcodeBit] != 99)
 30214  00323C  5034               	movf	_RFcodeBit,w,c
 30215  00323E  0D01               	mullw	1
 30216  003240  0EE1               	movlw	low _RFsendCode
 30217  003242  24F3               	addwf	prodl,w,c
 30218  003244  6ED9               	movwf	fsr2l,c
 30219  003246  0E04               	movlw	high _RFsendCode
 30220  003248  20F4               	addwfc	prodh,w,c
 30221  00324A  6EDA               	movwf	fsr2h,c
 30222  00324C  0E63               	movlw	99
 30223  00324E  18DE               	xorwf	postinc2,w,c
 30224  003250  B4D8               	btfsc	status,2,c
 30225  003252  D0B3               	goto	i2l12480
 30226                           
 30227                           ;interrupts.c: 151: {
 30228                           ;interrupts.c: 153: if(RFsendFlag)
 30229  003254  5036               	movf	_RFsendFlag,w,c	;volatile
 30230  003256  B4D8               	btfsc	status,2,c
 30231  003258  D0F2               	goto	i2l12530
 30232                           
 30233                           ;interrupts.c: 154: {
 30234                           ;interrupts.c: 155: if(RFsendCode[RFcodeBit] == 0)
 30235  00325A  5034               	movf	_RFcodeBit,w,c
 30236  00325C  0D01               	mullw	1
 30237  00325E  0EE1               	movlw	low _RFsendCode
 30238  003260  24F3               	addwf	prodl,w,c
 30239  003262  6ED9               	movwf	fsr2l,c
 30240  003264  0E04               	movlw	high _RFsendCode
 30241  003266  20F4               	addwfc	prodh,w,c
 30242  003268  6EDA               	movwf	fsr2h,c
 30243  00326A  50DF               	movf	indf2,w,c
 30244  00326C  A4D8               	btfss	status,2,c
 30245  00326E  D03F               	goto	i2l12372
 30246                           
 30247                           ;interrupts.c: 156: {
 30248                           ;interrupts.c: 158: if(RFConfig == 1)
 30249  003270  0433               	decf	_RFConfig,w,c
 30250  003272  A4D8               	btfss	status,2,c
 30251  003274  D025               	goto	i2l12350
 30252                           
 30253                           ;interrupts.c: 159: {
 30254                           ;interrupts.c: 160: if(RFcodePlace == 1)
 30255  003276  0435               	decf	_RFcodePlace,w,c
 30256  003278  A4D8               	btfss	status,2,c
 30257  00327A  D007               	goto	i2l12324
 30258  00327C  D077               	goto	i2l12438
 30259  00327E                     i2l12320:
 30260                           
 30261                           ;interrupts.c: 163: (PR2 = 8);
 30262  00327E  0E08               	movlw	8
 30263  003280                     L26:
 30264  003280  6ECB               	movwf	4043,c	;volatile
 30265  003282  D076               	goto	i2l12442
 30266  003284                     L28:
 30267                           
 30268                           ;interrupts.c: 165: (TMR2 = 0);
 30269  003284  0E00               	movlw	0
 30270  003286  6ECC               	movwf	4044,c	;volatile
 30271                           
 30272                           ;interrupts.c: 166: }
 30273  003288  D0DA               	goto	i2l12530
 30274  00328A                     i2l12324:
 30275                           
 30276                           ;interrupts.c: 167: else if(RFcodePlace == 2)
 30277  00328A  0E02               	movlw	2
 30278  00328C  1835               	xorwf	_RFcodePlace,w,c
 30279  00328E  A4D8               	btfss	status,2,c
 30280  003290  D004               	goto	i2l12332
 30281  003292  D074               	goto	L42
 30282                           
 30283                           ;interrupts.c: 168: {
 30284                           ;interrupts.c: 169: (LATC &= ~0x20);
 30285  003294  D03E               	goto	i2l12380
 30286  003296                     i2l12330:
 30287                           
 30288                           ;interrupts.c: 171: RFcodePlace++;
 30289  003296  2A35               	incf	_RFcodePlace,f,c
 30290                           
 30291                           ;interrupts.c: 172: }
 30292  003298  D0D2               	goto	i2l12530
 30293  00329A                     i2l12332:
 30294                           
 30295                           ;interrupts.c: 173: else if(RFcodePlace == 3)
 30296  00329A  0E03               	movlw	3
 30297  00329C  1835               	xorwf	_RFcodePlace,w,c
 30298  00329E  A4D8               	btfss	status,2,c
 30299  0032A0  D002               	goto	i2l12340
 30300  0032A2  D064               	goto	i2l12438
 30301                           
 30302                           ;interrupts.c: 174: {
 30303                           ;interrupts.c: 175: (LATC |= 0x20);
 30304  0032A4  D7EC               	goto	i2l12320
 30305  0032A6                     i2l12340:
 30306                           
 30307                           ;interrupts.c: 180: else if(RFcodePlace == 4)
 30308  0032A6  0E04               	movlw	4
 30309  0032A8  1835               	xorwf	_RFcodePlace,w,c
 30310  0032AA  A4D8               	btfss	status,2,c
 30311  0032AC  D004               	goto	i2l954
 30312                           
 30313                           ;interrupts.c: 181: {
 30314                           ;interrupts.c: 182: (LATC &= ~0x20);
 30315  0032AE  9A8B               	bcf	3979,5,c	;volatile
 30316                           
 30317                           ;interrupts.c: 183: (PR2 = 24);
 30318  0032B0  0E18               	movlw	24
 30319  0032B2  D051               	goto	L27
 30320  0032B4  D016               	goto	i2l12366
 30321  0032B6                     i2l954:
 30322                           
 30323                           ;interrupts.c: 187: else
 30324                           ;interrupts.c: 188: {
 30325                           ;interrupts.c: 190: (T2CONbits.TMR2ON = 0);
 30326  0032B6  94CA               	bcf	4042,2,c	;volatile
 30327  0032B8  D07B               	goto	i2l12478
 30328  0032BA                     L31:
 30329                           
 30330                           ;interrupts.c: 192: RFsendFlag = 0;
 30331  0032BA  0E00               	movlw	0
 30332  0032BC  6E36               	movwf	_RFsendFlag,c	;volatile
 30333                           
 30334                           ; BSR set to: 0
 30335                           ;interrupts.c: 193: }
 30336                           ;interrupts.c: 194: }
 30337                           
 30338                           ; BSR set to: 0
 30339                           
 30340                           ; BSR set to: 0
 30341                           
 30342                           ; BSR set to: 0
 30343  0032BE  D0BF               	goto	i2l12530
 30344  0032C0                     i2l12350:
 30345                           
 30346                           ;interrupts.c: 195: else if(RFConfig == 2)
 30347  0032C0  0E02               	movlw	2
 30348  0032C2  1833               	xorwf	_RFConfig,w,c
 30349  0032C4  A4D8               	btfss	status,2,c
 30350  0032C6  D7F7               	goto	i2l954
 30351                           
 30352                           ;interrupts.c: 196: {
 30353                           ;interrupts.c: 198: if(RFcodePlace == 1)
 30354  0032C8  0435               	decf	_RFcodePlace,w,c
 30355  0032CA  A4D8               	btfss	status,2,c
 30356  0032CC  D003               	goto	i2l12360
 30357                           
 30358                           ;interrupts.c: 199: {
 30359                           ;interrupts.c: 200: (LATC |= 0x20);
 30360  0032CE  8A8B               	bsf	3979,5,c	;volatile
 30361                           
 30362                           ;interrupts.c: 201: (PR2 = 11);
 30363  0032D0  0E0B               	movlw	11
 30364  0032D2  D7D6               	goto	L26
 30365  0032D4                     i2l12360:
 30366                           
 30367                           ;interrupts.c: 205: else if(RFcodePlace == 2)
 30368  0032D4  0E02               	movlw	2
 30369  0032D6  1835               	xorwf	_RFcodePlace,w,c
 30370  0032D8  A4D8               	btfss	status,2,c
 30371  0032DA  D7ED               	goto	i2l954
 30372                           
 30373                           ;interrupts.c: 206: {
 30374                           ;interrupts.c: 207: (LATC &= ~0x20);
 30375  0032DC  9A8B               	bcf	3979,5,c	;volatile
 30376                           
 30377                           ;interrupts.c: 208: (PR2 = 29);
 30378  0032DE  0E1D               	movlw	29
 30379  0032E0  D03A               	goto	L27
 30380  0032E2                     i2l12366:
 30381                           
 30382                           ;interrupts.c: 209: RFcodePlace = 1;
 30383  0032E2  0E01               	movlw	1
 30384  0032E4  6E35               	movwf	_RFcodePlace,c
 30385                           
 30386                           ;interrupts.c: 210: RFcodeBit++;
 30387  0032E6  2A34               	incf	_RFcodeBit,f,c
 30388                           
 30389                           ; BSR set to: 0
 30390                           ;interrupts.c: 218: }
 30391                           ;interrupts.c: 219: }
 30392                           
 30393                           ; BSR set to: 0
 30394                           
 30395                           ;interrupts.c: 217: RFsendFlag = 0;
 30396                           
 30397                           ;interrupts.c: 216: Sent = 1;
 30398                           
 30399                           ;interrupts.c: 212: else
 30400                           ;interrupts.c: 213: {
 30401                           ;interrupts.c: 215: (T2CONbits.TMR2ON = 0);
 30402                           
 30403                           ;interrupts.c: 211: }
 30404  0032E8  D0AA               	goto	i2l12530
 30405                           
 30406                           ;interrupts.c: 220: else
 30407                           ;interrupts.c: 221: {
 30408                           ;interrupts.c: 223: (T2CONbits.TMR2ON = 0);
 30409  0032EA  D062               	goto	i2l12478
 30410                           
 30411                           ; BSR set to: 0
 30412                           ;interrupts.c: 226: }
 30413                           ;interrupts.c: 227: }
 30414                           
 30415                           ; BSR set to: 0
 30416                           
 30417                           ;interrupts.c: 225: RFsendFlag = 0;
 30418                           
 30419                           ;interrupts.c: 224: Sent = 1;
 30420  0032EC  D0A8               	goto	i2l12530
 30421  0032EE                     i2l12372:
 30422                           
 30423                           ;interrupts.c: 228: else if(RFsendCode[RFcodeBit] == 1)
 30424  0032EE  5034               	movf	_RFcodeBit,w,c
 30425  0032F0  0D01               	mullw	1
 30426  0032F2  0EE1               	movlw	low _RFsendCode
 30427  0032F4  24F3               	addwf	prodl,w,c
 30428  0032F6  6ED9               	movwf	fsr2l,c
 30429  0032F8  0E04               	movlw	high _RFsendCode
 30430  0032FA  20F4               	addwfc	prodh,w,c
 30431  0032FC  6EDA               	movwf	fsr2h,c
 30432  0032FE  04DE               	decf	postinc2,w,c
 30433  003300  A4D8               	btfss	status,2,c
 30434  003302  D02E               	goto	i2l12434
 30435                           
 30436                           ;interrupts.c: 229: {
 30437                           ;interrupts.c: 230: if(RFConfig == 1)
 30438  003304  0433               	decf	_RFConfig,w,c
 30439  003306  A4D8               	btfss	status,2,c
 30440  003308  D016               	goto	i2l12412
 30441                           
 30442                           ;interrupts.c: 231: {
 30443                           ;interrupts.c: 232: if(RFcodePlace == 1)
 30444  00330A  0435               	decf	_RFcodePlace,w,c
 30445  00330C  A4D8               	btfss	status,2,c
 30446  00330E  D004               	goto	i2l12384
 30447  003310  D03C               	goto	L43
 30448  003312                     i2l12380:
 30449                           
 30450                           ;interrupts.c: 235: (PR2 = 24);
 30451  003312  0E18               	movlw	24
 30452  003314  6ECB               	movwf	4043,c	;volatile
 30453  003316  D7BF               	goto	i2l12330
 30454  003318                     i2l12384:
 30455                           
 30456                           ;interrupts.c: 238: else if(RFcodePlace == 2)
 30457  003318  0E02               	movlw	2
 30458  00331A  1835               	xorwf	_RFcodePlace,w,c
 30459  00331C  A4D8               	btfss	status,2,c
 30460  00331E  D031               	goto	i2l12452
 30461                           
 30462                           ;interrupts.c: 239: {
 30463                           ;interrupts.c: 240: (LATC &= ~0x20);
 30464  003320  9A8B               	bcf	3979,5,c	;volatile
 30465  003322  D7AD               	goto	i2l12320
 30466                           
 30467                           ;interrupts.c: 244: }
 30468                           
 30469                           ;interrupts.c: 243: (TMR2 = 0);
 30470                           
 30471                           ;interrupts.c: 242: RFcodePlace++;
 30472                           
 30473                           ;interrupts.c: 241: (PR2 = 8);
 30474  003324  D02E               	goto	i2l12452
 30475                           
 30476                           ;interrupts.c: 246: {
 30477                           ;interrupts.c: 247: (LATC |= 0x20);
 30478                           
 30479                           ;interrupts.c: 245: else if(RFcodePlace == 3)
 30480  003326  D7F5               	goto	i2l12380
 30481                           
 30482                           ;interrupts.c: 248: (PR2 = 24);
 30483  003328  D7B6               	goto	i2l12330
 30484                           
 30485                           ;interrupts.c: 250: }
 30486                           
 30487                           ;interrupts.c: 249: RFcodePlace++;
 30488  00332A  D032               	goto	i2l12460
 30489  00332C                     i2l12404:
 30490                           
 30491                           ;interrupts.c: 254: (PR2 = 8);
 30492  00332C  0E08               	movlw	8
 30493  00332E  6ECB               	movwf	4043,c	;volatile
 30494  003330  D035               	goto	i2l12466
 30495                           
 30496                           ;interrupts.c: 256: RFcodeBit++;
 30497                           
 30498                           ;interrupts.c: 255: RFcodePlace = 1;
 30499  003332  D7A8               	goto	L28
 30500                           
 30501                           ; BSR set to: 0
 30502                           ;interrupts.c: 265: }
 30503                           ;interrupts.c: 266: }
 30504                           
 30505                           ; BSR set to: 0
 30506                           
 30507                           ; BSR set to: 0
 30508                           
 30509                           ; BSR set to: 0
 30510                           
 30511                           ;interrupts.c: 264: RFsendFlag = 0;
 30512                           
 30513                           ;interrupts.c: 263: Sent = 1;
 30514                           
 30515                           ;interrupts.c: 259: else
 30516                           ;interrupts.c: 260: {
 30517                           ;interrupts.c: 262: (T2CONbits.TMR2ON = 0);
 30518                           
 30519                           ;interrupts.c: 258: }
 30520                           
 30521                           ;interrupts.c: 257: (TMR2 = 0);
 30522  003334  D084               	goto	i2l12530
 30523  003336                     i2l12412:
 30524                           
 30525                           ;interrupts.c: 267: else if(RFConfig == 2)
 30526  003336  0E02               	movlw	2
 30527  003338  1833               	xorwf	_RFConfig,w,c
 30528  00333A  A4D8               	btfss	status,2,c
 30529  00333C  D7BC               	goto	i2l954
 30530                           
 30531                           ;interrupts.c: 268: {
 30532                           ;interrupts.c: 270: if(RFcodePlace == 1)
 30533  00333E  0435               	decf	_RFcodePlace,w,c
 30534  003340  A4D8               	btfss	status,2,c
 30535  003342  D003               	goto	i2l12422
 30536                           
 30537                           ;interrupts.c: 271: {
 30538                           ;interrupts.c: 272: (LATC |= 0x20);
 30539  003344  8A8B               	bsf	3979,5,c	;volatile
 30540                           
 30541                           ;interrupts.c: 273: (PR2 = 29);
 30542  003346  0E1D               	movlw	29
 30543  003348  D79B               	goto	L26
 30544  00334A                     i2l12422:
 30545                           
 30546                           ;interrupts.c: 277: else if(RFcodePlace == 2)
 30547  00334A  0E02               	movlw	2
 30548  00334C  1835               	xorwf	_RFcodePlace,w,c
 30549  00334E  A4D8               	btfss	status,2,c
 30550  003350  D004               	goto	i2l978
 30551                           
 30552                           ;interrupts.c: 278: {
 30553                           ;interrupts.c: 279: (LATC &= ~0x20);
 30554  003352  9A8B               	bcf	3979,5,c	;volatile
 30555                           
 30556                           ;interrupts.c: 280: (PR2 = 11);
 30557  003354  0E0B               	movlw	11
 30558  003356                     L27:
 30559  003356  6ECB               	movwf	4043,c	;volatile
 30560  003358  D7C4               	goto	i2l12366
 30561  00335A                     i2l978:
 30562                           
 30563                           ;interrupts.c: 284: else
 30564                           ;interrupts.c: 285: {
 30565                           ;interrupts.c: 287: (T2CONbits.TMR2ON = 0);
 30566  00335A  94CA               	bcf	4042,2,c	;volatile
 30567  00335C  D029               	goto	i2l12478
 30568                           
 30569                           ; BSR set to: 0
 30570                           ;interrupts.c: 298: }
 30571                           ;interrupts.c: 299: }
 30572                           
 30573                           ; BSR set to: 0
 30574                           
 30575                           ;interrupts.c: 297: RFsendFlag = 0;
 30576                           
 30577                           ;interrupts.c: 296: Sent = 1;
 30578                           
 30579                           ;interrupts.c: 292: else
 30580                           ;interrupts.c: 293: {
 30581                           ;interrupts.c: 295: (T2CONbits.TMR2ON = 0);
 30582                           
 30583                           ; BSR set to: 0
 30584                           ;interrupts.c: 290: }
 30585                           ;interrupts.c: 291: }
 30586                           
 30587                           ; BSR set to: 0
 30588                           
 30589                           ;interrupts.c: 289: RFsendFlag = 0;
 30590                           
 30591                           ;interrupts.c: 288: Sent = 1;
 30592  00335E  D06F               	goto	i2l12530
 30593  003360                     i2l12434:
 30594                           
 30595                           ;interrupts.c: 300: else
 30596                           ;interrupts.c: 301: {
 30597                           ;interrupts.c: 302: if(RFConfig == 1)
 30598  003360  0433               	decf	_RFConfig,w,c
 30599  003362  A4D8               	btfss	status,2,c
 30600  003364  D020               	goto	i2l12472
 30601                           
 30602                           ;interrupts.c: 303: {
 30603                           ;interrupts.c: 305: if(RFcodePlace == 1)
 30604  003366  0435               	decf	_RFcodePlace,w,c
 30605  003368  A4D8               	btfss	status,2,c
 30606  00336A  D004               	goto	i2l12444
 30607  00336C                     i2l12438:
 30608                           
 30609                           ;interrupts.c: 306: {
 30610                           ;interrupts.c: 307: (LATC |= 0x20);
 30611  00336C  8A8B               	bsf	3979,5,c	;volatile
 30612  00336E  D787               	goto	i2l12320
 30613  003370                     i2l12442:
 30614                           
 30615                           ;interrupts.c: 309: RFcodePlace++;
 30616  003370  2A35               	incf	_RFcodePlace,f,c
 30617  003372  D788               	goto	L28
 30618  003374                     i2l12444:
 30619                           
 30620                           ;interrupts.c: 312: else if(RFcodePlace == 2)
 30621  003374  0E02               	movlw	2
 30622  003376  1835               	xorwf	_RFcodePlace,w,c
 30623  003378  A4D8               	btfss	status,2,c
 30624  00337A  D003               	goto	i2l12452
 30625  00337C                     L42:
 30626                           
 30627                           ;interrupts.c: 313: {
 30628                           ;interrupts.c: 314: (LATC &= ~0x20);
 30629  00337C  9A8B               	bcf	3979,5,c	;volatile
 30630  00337E  D7C9               	goto	i2l12380
 30631                           
 30632                           ;interrupts.c: 315: (PR2 = 24);
 30633  003380  D78A               	goto	i2l12330
 30634  003382                     i2l12452:
 30635                           
 30636                           ;interrupts.c: 318: else if(RFcodePlace == 3)
 30637  003382  0E03               	movlw	3
 30638  003384  1835               	xorwf	_RFcodePlace,w,c
 30639  003386  A4D8               	btfss	status,2,c
 30640  003388  D003               	goto	i2l12460
 30641  00338A                     L43:
 30642                           
 30643                           ;interrupts.c: 319: {
 30644                           ;interrupts.c: 320: (LATC |= 0x20);
 30645  00338A  8A8B               	bsf	3979,5,c	;volatile
 30646  00338C  D7C2               	goto	i2l12380
 30647                           
 30648                           ;interrupts.c: 321: (PR2 = 24);
 30649  00338E  D783               	goto	i2l12330
 30650  003390                     i2l12460:
 30651                           
 30652                           ;interrupts.c: 324: else if(RFcodePlace == 4)
 30653  003390  0E04               	movlw	4
 30654  003392  1835               	xorwf	_RFcodePlace,w,c
 30655  003394  A4D8               	btfss	status,2,c
 30656  003396  D78F               	goto	i2l954
 30657                           
 30658                           ;interrupts.c: 325: {
 30659                           ;interrupts.c: 326: (LATC &= ~0x20);
 30660  003398  9A8B               	bcf	3979,5,c	;volatile
 30661  00339A  D7C8               	goto	i2l12404
 30662  00339C                     i2l12466:
 30663                           
 30664                           ;interrupts.c: 328: RFcodePlace = 1;
 30665  00339C  0E01               	movlw	1
 30666  00339E  6E35               	movwf	_RFcodePlace,c
 30667                           
 30668                           ;interrupts.c: 329: RFcodeBit++;
 30669  0033A0  2A34               	incf	_RFcodeBit,f,c
 30670  0033A2  D770               	goto	L28
 30671                           
 30672                           ; BSR set to: 0
 30673                           ;interrupts.c: 338: }
 30674                           ;interrupts.c: 339: }
 30675                           
 30676                           ; BSR set to: 0
 30677                           
 30678                           ; BSR set to: 0
 30679                           
 30680                           ; BSR set to: 0
 30681                           
 30682                           ;interrupts.c: 337: RFsendFlag = 0;
 30683                           
 30684                           ;interrupts.c: 336: Sent = 1;
 30685                           
 30686                           ;interrupts.c: 332: else
 30687                           ;interrupts.c: 333: {
 30688                           ;interrupts.c: 335: (T2CONbits.TMR2ON = 0);
 30689                           
 30690                           ;interrupts.c: 331: }
 30691                           
 30692                           ;interrupts.c: 330: (TMR2 = 0);
 30693  0033A4  D04C               	goto	i2l12530
 30694  0033A6                     i2l12472:
 30695                           
 30696                           ;interrupts.c: 340: else if(RFConfig == 2)
 30697  0033A6  0E02               	movlw	2
 30698  0033A8  1833               	xorwf	_RFConfig,w,c
 30699  0033AA  A4D8               	btfss	status,2,c
 30700  0033AC  D784               	goto	i2l954
 30701  0033AE  D783               	goto	i2l954
 30702  0033B0                     i2l12478:
 30703                           
 30704                           ;interrupts.c: 351: Sent = 1;
 30705  0033B0  0E01               	movlw	1
 30706  0033B2  0100               	movlb	0	; () banked
 30707  0033B4  6FD5               	movwf	_Sent& (0+255),b	;volatile
 30708  0033B6  D781               	goto	L31
 30709                           
 30710                           ; BSR set to: 0
 30711                           ;interrupts.c: 353: }
 30712                           ;interrupts.c: 354: }
 30713                           ;interrupts.c: 355: }
 30714                           ;interrupts.c: 356: }
 30715                           
 30716                           ; BSR set to: 0
 30717                           
 30718                           ; BSR set to: 0
 30719                           
 30720                           ; BSR set to: 0
 30721                           
 30722                           ; BSR set to: 0
 30723                           
 30724                           ;interrupts.c: 352: RFsendFlag = 0;
 30725  0033B8  D042               	goto	i2l12530
 30726  0033BA                     i2l12480:
 30727                           
 30728                           ;interrupts.c: 357: else
 30729                           ;interrupts.c: 358: {
 30730                           ;interrupts.c: 360: if(RFcodePlace == 1)
 30731  0033BA  0435               	decf	_RFcodePlace,w,c
 30732  0033BC  A4D8               	btfss	status,2,c
 30733  0033BE  D016               	goto	i2l12498
 30734                           
 30735                           ;interrupts.c: 361: {
 30736                           ;interrupts.c: 362: if(RFConfig == 1)
 30737  0033C0  0433               	decf	_RFConfig,w,c
 30738  0033C2  A4D8               	btfss	status,2,c
 30739  0033C4  D003               	goto	i2l12488
 30740                           
 30741                           ;interrupts.c: 363: {
 30742                           ;interrupts.c: 364: (LATC |= 0x20);
 30743  0033C6  8A8B               	bsf	3979,5,c	;volatile
 30744                           
 30745                           ;interrupts.c: 365: (PR2 = 8);
 30746  0033C8  0E08               	movlw	8
 30747  0033CA  D006               	goto	L29
 30748  0033CC                     i2l12488:
 30749                           
 30750                           ;interrupts.c: 367: else if(RFConfig == 2)
 30751  0033CC  0E02               	movlw	2
 30752  0033CE  1833               	xorwf	_RFConfig,w,c
 30753  0033D0  A4D8               	btfss	status,2,c
 30754  0033D2  D004               	goto	i2l998
 30755                           
 30756                           ;interrupts.c: 368: {
 30757                           ;interrupts.c: 369: (LATC &= ~0x20);
 30758  0033D4  9A8B               	bcf	3979,5,c	;volatile
 30759                           
 30760                           ;interrupts.c: 370: (PR2 = 11);
 30761  0033D6  0E0B               	movlw	11
 30762  0033D8                     L29:
 30763  0033D8  6ECB               	movwf	4043,c	;volatile
 30764                           
 30765                           ;interrupts.c: 371: }
 30766  0033DA  D005               	goto	i2l997
 30767  0033DC                     i2l998:
 30768                           
 30769                           ;interrupts.c: 372: else
 30770                           ;interrupts.c: 373: {
 30771                           ;interrupts.c: 375: (T2CONbits.TMR2ON = 0);
 30772  0033DC  94CA               	bcf	4042,2,c	;volatile
 30773                           
 30774                           ;interrupts.c: 376: Sent = 1;
 30775  0033DE  0E01               	movlw	1
 30776  0033E0  0100               	movlb	0	; () banked
 30777  0033E2  6FD5               	movwf	_Sent& (0+255),b	;volatile
 30778  0033E4  D000               	goto	i2l997
 30779  0033E6                     i2l997:
 30780                           
 30781                           ;interrupts.c: 377: }
 30782                           ;interrupts.c: 378: (TMR2 = 0);
 30783  0033E6  0E00               	movlw	0
 30784  0033E8  6ECC               	movwf	4044,c	;volatile
 30785  0033EA  D755               	goto	i2l12330
 30786  0033EC                     i2l12498:
 30787                           
 30788                           ;interrupts.c: 381: else if( RFcodePlace == 2)
 30789  0033EC  0E02               	movlw	2
 30790  0033EE  1835               	xorwf	_RFcodePlace,w,c
 30791  0033F0  A4D8               	btfss	status,2,c
 30792  0033F2  D01C               	goto	i2l12518
 30793                           
 30794                           ;interrupts.c: 382: {
 30795                           ;interrupts.c: 383: if(RFConfig == 1)
 30796  0033F4  0433               	decf	_RFConfig,w,c
 30797  0033F6  A4D8               	btfss	status,2,c
 30798  0033F8  D003               	goto	i2l12506
 30799                           
 30800                           ;interrupts.c: 384: {
 30801                           ;interrupts.c: 385: (LATC &= ~0x20);
 30802  0033FA  9A8B               	bcf	3979,5,c	;volatile
 30803                           
 30804                           ;interrupts.c: 386: (PR2 = 250);
 30805  0033FC  0EFA               	movlw	250
 30806  0033FE  D005               	goto	L30
 30807  003400                     i2l12506:
 30808                           
 30809                           ;interrupts.c: 388: else if(RFConfig == 2)
 30810  003400  0E02               	movlw	2
 30811  003402  1833               	xorwf	_RFConfig,w,c
 30812  003404  A4D8               	btfss	status,2,c
 30813  003406  D003               	goto	i2l1004
 30814                           
 30815                           ;interrupts.c: 389: {
 30816                           ;interrupts.c: 390: (PR2 = 187);
 30817  003408  0EBB               	movlw	187
 30818  00340A                     L30:
 30819  00340A  6ECB               	movwf	4043,c	;volatile
 30820                           
 30821                           ;interrupts.c: 391: }
 30822  00340C  D005               	goto	i2l12512
 30823  00340E                     i2l1004:
 30824                           
 30825                           ;interrupts.c: 392: else
 30826                           ;interrupts.c: 393: {
 30827                           ;interrupts.c: 395: (T2CONbits.TMR2ON = 0);
 30828  00340E  94CA               	bcf	4042,2,c	;volatile
 30829                           
 30830                           ;interrupts.c: 396: Sent = 1;
 30831  003410  0E01               	movlw	1
 30832  003412  0100               	movlb	0	; () banked
 30833  003414  6FD5               	movwf	_Sent& (0+255),b	;volatile
 30834                           
 30835                           ; BSR set to: 0
 30836  003416  D000               	goto	i2l12512
 30837  003418                     i2l12512:
 30838                           
 30839                           ;interrupts.c: 397: }
 30840                           ;interrupts.c: 398: RFcodePlace++;
 30841  003418  2A35               	incf	_RFcodePlace,f,c
 30842                           
 30843                           ;interrupts.c: 399: Sendcount--;
 30844  00341A  0637               	decf	_Sendcount,f,c	;volatile
 30845                           
 30846                           ;interrupts.c: 400: if(Sendcount)
 30847  00341C  5037               	movf	_Sendcount,w,c	;volatile
 30848  00341E  B4D8               	btfsc	status,2,c
 30849  003420  D00E               	goto	i2l12530
 30850                           
 30851                           ;interrupts.c: 401: {
 30852                           ;interrupts.c: 403: RFcodePlace = 1;
 30853  003422  0E01               	movlw	1
 30854  003424  6E35               	movwf	_RFcodePlace,c
 30855                           
 30856                           ;interrupts.c: 404: RFcodeBit = 0;
 30857  003426  0E00               	movlw	0
 30858  003428  6E34               	movwf	_RFcodeBit,c
 30859                           
 30860                           ;interrupts.c: 405: }
 30861                           ;interrupts.c: 406: }
 30862  00342A  D009               	goto	i2l12530
 30863  00342C                     i2l12518:
 30864                           
 30865                           ;interrupts.c: 407: else
 30866                           ;interrupts.c: 408: {
 30867                           ;interrupts.c: 410: ResetTimer3();
 30868  00342C  EC4A  F03C         	call	_ResetTimer3	;wreg free
 30869                           
 30870                           ;interrupts.c: 411: PIR2bits.TMR3IF = 0;
 30871  003430  92A1               	bcf	4001,1,c	;volatile
 30872                           
 30873                           ;interrupts.c: 412: Timer3_Postscaler = 0;
 30874  003432  0E00               	movlw	0
 30875  003434  6E3A               	movwf	_Timer3_Postscaler,c
 30876                           
 30877                           ;interrupts.c: 413: (T3CONbits.TMR3ON = 1);
 30878  003436  80B1               	bsf	4017,0,c	;volatile
 30879                           
 30880                           ;interrupts.c: 414: (T2CONbits.TMR2ON = 0);
 30881  003438  94CA               	bcf	4042,2,c	;volatile
 30882  00343A  D73F               	goto	L31
 30883                           
 30884                           ;interrupts.c: 415: RFsendFlag = 0;
 30885  00343C  D000               	goto	i2l12530
 30886  00343E                     i2l12530:
 30887                           
 30888                           ;interrupts.c: 416: }
 30889                           ;interrupts.c: 417: }
 30890                           ;interrupts.c: 418: }
 30891                           ;interrupts.c: 419: if(RFsendFlag)
 30892  00343E  5036               	movf	_RFsendFlag,w,c	;volatile
 30893  003440  B4D8               	btfsc	status,2,c
 30894  003442  D0C0               	goto	i2l12658
 30895                           
 30896                           ;interrupts.c: 420: {
 30897                           ;interrupts.c: 422: (T2CONbits.TMR2ON = 1);
 30898  003444  84CA               	bsf	4042,2,c	;volatile
 30899                           
 30900                           ;interrupts.c: 423: }
 30901                           ;interrupts.c: 424: }
 30902  003446  D0BE               	goto	i2l12658
 30903  003448                     i2l12534:
 30904                           
 30905                           ;interrupts.c: 425: else
 30906                           ;interrupts.c: 426: {
 30907                           ;interrupts.c: 428: if(Timer2_Postscaler >= RF_IR_Postscaler)
 30908  003448  5042               	movf	_RF_IR_Postscaler,w,c	;volatile
 30909  00344A  5C39               	subwf	_Timer2_Postscaler,w,c
 30910  00344C  A0D8               	btfss	status,0,c
 30911  00344E  D0BA               	goto	i2l12658
 30912                           
 30913                           ;interrupts.c: 429: {
 30914                           ;interrupts.c: 430: Timer2_Postscaler = 0;
 30915  003450  0E00               	movlw	0
 30916  003452  6E39               	movwf	_Timer2_Postscaler,c
 30917                           
 30918                           ;interrupts.c: 431: if(IRcodePlace == 7)
 30919  003454  0E07               	movlw	7
 30920  003456  1840               	xorwf	_IRcodePlace,w,c
 30921  003458  A4D8               	btfss	status,2,c
 30922  00345A  D00D               	goto	i2l12550
 30923                           
 30924                           ;interrupts.c: 432: {
 30925                           ;interrupts.c: 433: IRbitPosition = 32;
 30926  00345C  0E20               	movlw	32
 30927  00345E  6E3F               	movwf	_IRbitPosition,c	;volatile
 30928                           
 30929                           ;interrupts.c: 434: (IRmod = 0);
 30930  003460  0E00               	movlw	0
 30931  003462  0100               	movlb	0	; () banked
 30932  003464  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 30933                           
 30934                           ; BSR set to: 0
 30935                           ;interrupts.c: 435: (LATC &= ~0x08);
 30936  003466  968B               	bcf	3979,3,c	;volatile
 30937                           
 30938                           ; BSR set to: 0
 30939                           ;interrupts.c: 436: IRcodePlace = 8;
 30940  003468  0E08               	movlw	8
 30941  00346A  6E40               	movwf	_IRcodePlace,c
 30942                           
 30943                           ; BSR set to: 0
 30944                           ;interrupts.c: 437: RF_IR_Postscaler = 4;
 30945  00346C  0E04               	movlw	4
 30946  00346E  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 30947                           
 30948                           ; BSR set to: 0
 30949                           ;interrupts.c: 438: (PR2 = 75);
 30950  003470  0E4B               	movlw	75
 30951  003472  6ECB               	movwf	4043,c	;volatile
 30952                           
 30953                           ;interrupts.c: 439: }
 30954  003474  D0A7               	goto	i2l12658
 30955  003476                     i2l12550:
 30956                           
 30957                           ;interrupts.c: 440: else if(IRcodePlace == 8 || IRcodePlace == 10)
 30958  003476  0E08               	movlw	8
 30959  003478  1840               	xorwf	_IRcodePlace,w,c
 30960  00347A  B4D8               	btfsc	status,2,c
 30961  00347C  D004               	goto	i2l12554
 30962  00347E  0E0A               	movlw	10
 30963  003480  1840               	xorwf	_IRcodePlace,w,c
 30964  003482  A4D8               	btfss	status,2,c
 30965  003484  D011               	goto	i2l12564
 30966  003486                     i2l12554:
 30967                           
 30968                           ;interrupts.c: 441: {
 30969                           ;interrupts.c: 442: (IRmod = 1);
 30970  003486  0E01               	movlw	1
 30971  003488  0100               	movlb	0	; () banked
 30972  00348A  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 30973                           
 30974                           ;interrupts.c: 443: RF_IR_Postscaler = 1;
 30975  00348C  0E01               	movlw	1
 30976  00348E  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 30977                           
 30978                           ; BSR set to: 0
 30979                           ;interrupts.c: 444: IRbit = (unsigned char) (IRsendCode & 0x01);
 30980  003490  5029               	movf	_IRsendCode,w,c
 30981  003492  0B01               	andlw	1
 30982  003494  6E2E               	movwf	_IRbit,c
 30983                           
 30984                           ; BSR set to: 0
 30985                           ;interrupts.c: 445: IRsendCode >>= 1;
 30986  003496  90D8               	bcf	status,0,c
 30987  003498  322C               	rrcf	_IRsendCode+3,f,c
 30988  00349A  322B               	rrcf	_IRsendCode+2,f,c
 30989  00349C  322A               	rrcf	_IRsendCode+1,f,c
 30990  00349E  3229               	rrcf	_IRsendCode,f,c
 30991                           
 30992                           ; BSR set to: 0
 30993                           ;interrupts.c: 446: (PR2 = 38);
 30994  0034A0  0E26               	movlw	38
 30995  0034A2  6ECB               	movwf	4043,c	;volatile
 30996                           
 30997                           ; BSR set to: 0
 30998                           ;interrupts.c: 447: IRcodePlace = 9;
 30999  0034A4  0E09               	movlw	9
 31000  0034A6  D07A               	goto	L41
 31001  0034A8                     i2l12564:
 31002                           
 31003                           ;interrupts.c: 449: else if(IRcodePlace == 9)
 31004  0034A8  0E09               	movlw	9
 31005  0034AA  1840               	xorwf	_IRcodePlace,w,c
 31006  0034AC  A4D8               	btfss	status,2,c
 31007  0034AE  D017               	goto	i2l12586
 31008                           
 31009                           ;interrupts.c: 450: {
 31010                           ;interrupts.c: 451: (IRmod = 0);
 31011  0034B0  0E00               	movlw	0
 31012  0034B2  0100               	movlb	0	; () banked
 31013  0034B4  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31014                           
 31015                           ; BSR set to: 0
 31016                           ;interrupts.c: 452: (LATC &= ~0x08);
 31017  0034B6  968B               	bcf	3979,3,c	;volatile
 31018                           
 31019                           ; BSR set to: 0
 31020                           ;interrupts.c: 453: RF_IR_Postscaler = 1;
 31021  0034B8  0E01               	movlw	1
 31022  0034BA  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 31023                           
 31024                           ; BSR set to: 0
 31025                           ;interrupts.c: 454: if(IRbit)
 31026  0034BC  502E               	movf	_IRbit,w,c
 31027  0034BE  B4D8               	btfsc	status,2,c
 31028  0034C0  D002               	goto	i2l12576
 31029                           
 31030                           ; BSR set to: 0
 31031                           ;interrupts.c: 455: {
 31032                           ;interrupts.c: 457: (PR2 = 113);
 31033  0034C2  0E71               	movlw	113
 31034  0034C4  D001               	goto	L33
 31035  0034C6                     i2l12576:
 31036                           
 31037                           ; BSR set to: 0
 31038                           ;interrupts.c: 459: else
 31039                           ;interrupts.c: 460: {
 31040                           ;interrupts.c: 462: (PR2 = 38);
 31041  0034C6  0E26               	movlw	38
 31042  0034C8                     L33:
 31043  0034C8  6ECB               	movwf	4043,c	;volatile
 31044  0034CA  D000               	goto	i2l12578
 31045  0034CC                     i2l12578:
 31046                           
 31047                           ; BSR set to: 0
 31048                           ;interrupts.c: 463: }
 31049                           ;interrupts.c: 464: IRbitPosition--;
 31050  0034CC  063F               	decf	_IRbitPosition,f,c	;volatile
 31051                           
 31052                           ; BSR set to: 0
 31053                           ;interrupts.c: 465: if(IRbitPosition == 0)
 31054  0034CE  503F               	movf	_IRbitPosition,w,c	;volatile
 31055  0034D0  A4D8               	btfss	status,2,c
 31056  0034D2  D002               	goto	i2l12584
 31057                           
 31058                           ; BSR set to: 0
 31059                           ;interrupts.c: 466: {
 31060                           ;interrupts.c: 467: IRcodePlace = 11;
 31061  0034D4  0E0B               	movlw	11
 31062  0034D6  D062               	goto	L41
 31063  0034D8                     i2l12584:
 31064                           
 31065                           ; BSR set to: 0
 31066                           ;interrupts.c: 469: else
 31067                           ;interrupts.c: 470: {
 31068                           ;interrupts.c: 471: IRcodePlace = 10;
 31069  0034D8  0E0A               	movlw	10
 31070  0034DA  D060               	goto	L41
 31071                           
 31072                           ; BSR set to: 0
 31073                           ;interrupts.c: 472: }
 31074                           ;interrupts.c: 473: }
 31075  0034DC  D073               	goto	i2l12658
 31076  0034DE                     i2l12586:
 31077                           
 31078                           ;interrupts.c: 474: else if(IRcodePlace == 11)
 31079  0034DE  0E0B               	movlw	11
 31080  0034E0  1840               	xorwf	_IRcodePlace,w,c
 31081  0034E2  A4D8               	btfss	status,2,c
 31082  0034E4  D007               	goto	i2l12590
 31083                           
 31084                           ;interrupts.c: 475: {
 31085                           ;interrupts.c: 476: (IRmod = 1);
 31086  0034E6  0E01               	movlw	1
 31087  0034E8  0100               	movlb	0	; () banked
 31088  0034EA  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31089                           
 31090                           ;interrupts.c: 477: (PR2 = 38);
 31091  0034EC  0E26               	movlw	38
 31092  0034EE  6ECB               	movwf	4043,c	;volatile
 31093                           
 31094                           ;interrupts.c: 478: IRcodePlace = 12;
 31095  0034F0  0E0C               	movlw	12
 31096  0034F2  D054               	goto	L41
 31097  0034F4                     i2l12590:
 31098                           
 31099                           ;interrupts.c: 480: else if(IRcodePlace == 12)
 31100  0034F4  0E0C               	movlw	12
 31101  0034F6  1840               	xorwf	_IRcodePlace,w,c
 31102  0034F8  A4D8               	btfss	status,2,c
 31103  0034FA  D011               	goto	i2l12604
 31104                           
 31105                           ;interrupts.c: 481: {
 31106                           ;interrupts.c: 482: (IRmod = 0);
 31107  0034FC  0E00               	movlw	0
 31108  0034FE  0100               	movlb	0	; () banked
 31109  003500  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;interrupts.c: 483: (LATC &= ~0x08);
 31113  003502  968B               	bcf	3979,3,c	;volatile
 31114                           
 31115                           ; BSR set to: 0
 31116                           ;interrupts.c: 484: if(!IRrepeatflag)
 31117  003504  5032               	movf	_IRrepeatflag,w,c
 31118  003506  A4D8               	btfss	status,2,c
 31119  003508  D003               	goto	i2l12602
 31120                           
 31121                           ; BSR set to: 0
 31122                           ;interrupts.c: 485: {
 31123                           ;interrupts.c: 487: IRcodePlace = 13;
 31124  00350A  0E0D               	movlw	13
 31125  00350C  6E40               	movwf	_IRcodePlace,c
 31126  00350E  D057               	goto	i2l12654
 31127  003510                     i2l12602:
 31128                           
 31129                           ; BSR set to: 0
 31130                           ;interrupts.c: 491: else
 31131                           ;interrupts.c: 492: {
 31132                           ;interrupts.c: 493: RF_IR_Postscaler = 11;
 31133  003510  0E0B               	movlw	11
 31134  003512  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 31135                           
 31136                           ;interrupts.c: 494: (PR2 = 242);
 31137  003514  0EF2               	movlw	242
 31138  003516  6ECB               	movwf	4043,c	;volatile
 31139                           
 31140                           ;interrupts.c: 495: IRcodePlace = 14;
 31141  003518  0E0E               	movlw	14
 31142  00351A  D040               	goto	L41
 31143                           
 31144                           ; BSR set to: 0
 31145                           ;interrupts.c: 496: }
 31146                           ;interrupts.c: 497: }
 31147  00351C  D053               	goto	i2l12658
 31148  00351E                     i2l12604:
 31149                           
 31150                           ;interrupts.c: 498: else if(IRcodePlace == 14 || IRcodePlace == 18)
 31151  00351E  0E0E               	movlw	14
 31152  003520  1840               	xorwf	_IRcodePlace,w,c
 31153  003522  B4D8               	btfsc	status,2,c
 31154  003524  D004               	goto	i2l12608
 31155  003526  0E12               	movlw	18
 31156  003528  1840               	xorwf	_IRcodePlace,w,c
 31157  00352A  A4D8               	btfss	status,2,c
 31158  00352C  D009               	goto	i2l12610
 31159  00352E                     i2l12608:
 31160                           
 31161                           ;interrupts.c: 499: {
 31162                           ;interrupts.c: 500: (IRmod = 1);
 31163  00352E  0E01               	movlw	1
 31164  003530  0100               	movlb	0	; () banked
 31165  003532  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31166                           
 31167                           ;interrupts.c: 501: RF_IR_Postscaler = 4;
 31168  003534  0E04               	movlw	4
 31169  003536  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 31170                           
 31171                           ;interrupts.c: 502: (PR2 = 150);
 31172  003538  0E96               	movlw	150
 31173  00353A  6ECB               	movwf	4043,c	;volatile
 31174                           
 31175                           ;interrupts.c: 503: IRcodePlace = 15;
 31176  00353C  0E0F               	movlw	15
 31177  00353E  D02E               	goto	L41
 31178  003540                     i2l12610:
 31179                           
 31180                           ;interrupts.c: 505: else if(IRcodePlace == 15)
 31181  003540  0E0F               	movlw	15
 31182  003542  1840               	xorwf	_IRcodePlace,w,c
 31183  003544  A4D8               	btfss	status,2,c
 31184  003546  D00A               	goto	i2l12622
 31185                           
 31186                           ;interrupts.c: 506: {
 31187                           ;interrupts.c: 507: (IRmod = 0);
 31188  003548  0E00               	movlw	0
 31189  00354A  0100               	movlb	0	; () banked
 31190  00354C  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31191                           
 31192                           ; BSR set to: 0
 31193                           ;interrupts.c: 508: (LATC &= ~0x08);
 31194  00354E  968B               	bcf	3979,3,c	;volatile
 31195                           
 31196                           ; BSR set to: 0
 31197                           ;interrupts.c: 509: RF_IR_Postscaler = 1;
 31198  003550  0E01               	movlw	1
 31199  003552  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 31200                           
 31201                           ; BSR set to: 0
 31202                           ;interrupts.c: 510: (PR2 = 149);
 31203  003554  0E95               	movlw	149
 31204  003556  6ECB               	movwf	4043,c	;volatile
 31205                           
 31206                           ; BSR set to: 0
 31207                           ;interrupts.c: 511: IRcodePlace = 16;
 31208  003558  0E10               	movlw	16
 31209  00355A  D020               	goto	L41
 31210  00355C                     i2l12622:
 31211                           
 31212                           ;interrupts.c: 513: else if(IRcodePlace == 16)
 31213  00355C  0E10               	movlw	16
 31214  00355E  1840               	xorwf	_IRcodePlace,w,c
 31215  003560  A4D8               	btfss	status,2,c
 31216  003562  D009               	goto	i2l12626
 31217                           
 31218                           ;interrupts.c: 514: {
 31219                           ;interrupts.c: 515: (IRmod = 1);
 31220  003564  0E01               	movlw	1
 31221  003566  0100               	movlb	0	; () banked
 31222  003568  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31223                           
 31224                           ;interrupts.c: 516: RF_IR_Postscaler = 1;
 31225  00356A  0E01               	movlw	1
 31226  00356C  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 31227                           
 31228                           ;interrupts.c: 517: (PR2 = 38);
 31229  00356E  0E26               	movlw	38
 31230  003570  6ECB               	movwf	4043,c	;volatile
 31231                           
 31232                           ;interrupts.c: 518: IRcodePlace = 17;
 31233  003572  0E11               	movlw	17
 31234  003574  D013               	goto	L41
 31235  003576                     i2l12626:
 31236                           
 31237                           ;interrupts.c: 520: else if(IRcodePlace == 17)
 31238  003576  0E11               	movlw	17
 31239  003578  1840               	xorwf	_IRcodePlace,w,c
 31240  00357A  A4D8               	btfss	status,2,c
 31241  00357C  D011               	goto	i2l12642
 31242                           
 31243                           ;interrupts.c: 521: {
 31244                           ;interrupts.c: 522: (IRmod = 0);
 31245  00357E  0E00               	movlw	0
 31246  003580  0100               	movlb	0	; () banked
 31247  003582  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31248                           
 31249                           ; BSR set to: 0
 31250                           ;interrupts.c: 523: (LATC &= ~0x08);
 31251  003584  968B               	bcf	3979,3,c	;volatile
 31252                           
 31253                           ; BSR set to: 0
 31254                           ;interrupts.c: 524: RF_IR_Postscaler = 26;
 31255  003586  0E1A               	movlw	26
 31256  003588  6E42               	movwf	_RF_IR_Postscaler,c	;volatile
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;interrupts.c: 525: (PR2 = 246);
 31260  00358A  0EF6               	movlw	246
 31261  00358C  6ECB               	movwf	4043,c	;volatile
 31262                           
 31263                           ; BSR set to: 0
 31264                           ;interrupts.c: 526: IRrepeatAmount--;
 31265  00358E  0631               	decf	_IRrepeatAmount,f,c
 31266                           
 31267                           ;interrupts.c: 527: if(IRrepeatAmount)
 31268  003590  5031               	movf	_IRrepeatAmount,w,c
 31269  003592  B4D8               	btfsc	status,2,c
 31270  003594  D002               	goto	i2l12640
 31271                           
 31272                           ; BSR set to: 0
 31273                           ;interrupts.c: 528: {
 31274                           ;interrupts.c: 529: IRcodePlace = 18;
 31275  003596  0E12               	movlw	18
 31276  003598  D001               	goto	L41
 31277  00359A                     i2l12640:
 31278                           
 31279                           ; BSR set to: 0
 31280                           ;interrupts.c: 531: else
 31281                           ;interrupts.c: 532: {
 31282                           ;interrupts.c: 533: IRcodePlace = 13;
 31283  00359A  0E0D               	movlw	13
 31284  00359C                     L41:
 31285  00359C  6E40               	movwf	_IRcodePlace,c
 31286                           
 31287                           ; BSR set to: 0
 31288                           ;interrupts.c: 534: }
 31289                           ;interrupts.c: 535: }
 31290  00359E  D012               	goto	i2l12658
 31291  0035A0                     i2l12642:
 31292                           
 31293                           ;interrupts.c: 536: else if(IRcodePlace == 13)
 31294  0035A0  0E0D               	movlw	13
 31295  0035A2  1840               	xorwf	_IRcodePlace,w,c
 31296  0035A4  A4D8               	btfss	status,2,c
 31297  0035A6  D005               	goto	i2l12648
 31298  0035A8  D00A               	goto	i2l12654
 31299  0035AA                     i2l12646:
 31300                           
 31301                           ;interrupts.c: 540: Sent = 1;
 31302  0035AA  0E01               	movlw	1
 31303  0035AC  0100               	movlb	0	; () banked
 31304  0035AE  6FD5               	movwf	_Sent& (0+255),b	;volatile
 31305                           
 31306                           ;interrupts.c: 541: }
 31307  0035B0  D009               	goto	i2l12658
 31308  0035B2                     i2l12648:
 31309                           
 31310                           ;interrupts.c: 542: else
 31311                           ;interrupts.c: 543: {
 31312                           ;interrupts.c: 545: (IRmod = 0);
 31313  0035B2  0E00               	movlw	0
 31314  0035B4  0100               	movlb	0	; () banked
 31315  0035B6  6FCA               	movwf	_IRmod& (0+255),b	;volatile
 31316                           
 31317                           ; BSR set to: 0
 31318                           ;interrupts.c: 546: (LATC &= ~0x08);
 31319  0035B8  968B               	bcf	3979,3,c	;volatile
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;interrupts.c: 547: IRcodePlace = 0;
 31323  0035BA  0E00               	movlw	0
 31324  0035BC  6E40               	movwf	_IRcodePlace,c
 31325  0035BE                     i2l12654:
 31326                           
 31327                           ; BSR set to: 0
 31328                           ;interrupts.c: 548: (T2CONbits.TMR2ON = 0);
 31329  0035BE  94CA               	bcf	4042,2,c	;volatile
 31330  0035C0  D7F4               	goto	i2l12646
 31331                           
 31332                           ; BSR set to: 0
 31333                           
 31334                           ; BSR set to: 0
 31335                           
 31336                           ; BSR set to: 0
 31337                           
 31338                           ; BSR set to: 0
 31339                           
 31340                           ; BSR set to: 0
 31341                           
 31342                           ; BSR set to: 0
 31343                           
 31344                           ; BSR set to: 0
 31345                           
 31346                           ; BSR set to: 0
 31347                           
 31348                           ; BSR set to: 0
 31349                           
 31350                           ; BSR set to: 0
 31351                           
 31352                           ; BSR set to: 0
 31353                           
 31354                           ; BSR set to: 0
 31355                           ;interrupts.c: 549: Sent = 1;
 31356  0035C2  D000               	goto	i2l12658
 31357  0035C4                     i2l12658:
 31358                           
 31359                           ;interrupts.c: 550: }
 31360                           ;interrupts.c: 551: }
 31361                           ;interrupts.c: 552: }
 31362                           ;interrupts.c: 553: PIR1bits.TMR2IF = 0;
 31363  0035C4  929E               	bcf	3998,1,c	;volatile
 31364                           
 31365                           ;interrupts.c: 554: }
 31366  0035C6  D013               	goto	i2l937
 31367  0035C8                     i2l941:
 31368                           
 31369                           ;interrupts.c: 555: else if(PIR2bits.TMR3IF)
 31370  0035C8  A2A1               	btfss	4001,1,c	;volatile
 31371  0035CA  D00F               	goto	i2l1044
 31372                           
 31373                           ;interrupts.c: 556: {
 31374                           ;interrupts.c: 557: (T3CONbits.TMR3ON = 0);
 31375  0035CC  90B1               	bcf	4017,0,c	;volatile
 31376                           
 31377                           ;interrupts.c: 558: if(Timer3_Postscaler < 6)
 31378  0035CE  0E06               	movlw	6
 31379  0035D0  603A               	cpfslt	_Timer3_Postscaler,c
 31380  0035D2  D005               	goto	i2l12670
 31381                           
 31382                           ;interrupts.c: 559: {
 31383                           ;interrupts.c: 560: ResetTimer3();
 31384  0035D4  EC4A  F03C         	call	_ResetTimer3	;wreg free
 31385                           
 31386                           ;interrupts.c: 561: (T3CONbits.TMR3ON = 1);
 31387  0035D8  80B1               	bsf	4017,0,c	;volatile
 31388                           
 31389                           ;interrupts.c: 562: Timer3_Postscaler++;
 31390  0035DA  2A3A               	incf	_Timer3_Postscaler,f,c
 31391                           
 31392                           ;interrupts.c: 563: }
 31393  0035DC  D004               	goto	i2l12672
 31394  0035DE                     i2l12670:
 31395                           
 31396                           ;interrupts.c: 564: else
 31397                           ;interrupts.c: 565: {
 31398                           ;interrupts.c: 570: Sent = 1;
 31399  0035DE  0E01               	movlw	1
 31400  0035E0  0100               	movlb	0	; () banked
 31401  0035E2  6FD5               	movwf	_Sent& (0+255),b	;volatile
 31402  0035E4  D000               	goto	i2l12672
 31403  0035E6                     i2l12672:
 31404                           
 31405                           ;interrupts.c: 571: }
 31406                           ;interrupts.c: 572: PIR2bits.TMR3IF = 0;
 31407  0035E6  92A1               	bcf	4001,1,c	;volatile
 31408                           
 31409                           ;interrupts.c: 573: }
 31410  0035E8  D002               	goto	i2l937
 31411  0035EA                     i2l1044:
 31412                           
 31413                           ;interrupts.c: 574: else
 31414                           ;interrupts.c: 575: {
 31415                           ;interrupts.c: 577: __nop();
 31416  0035EA  F000               	nop	
 31417  0035EC  D000               	goto	i2l937
 31418  0035EE                     i2l937:
 31419                           
 31420                           ;interrupts.c: 578: }
 31421                           ;interrupts.c: 580: INTCONbits.GIE = 1;
 31422  0035EE  8EF2               	bsf	intcon,7,c	;volatile
 31423  0035F0  C071  FFF5         	movff	??_high_isr+17,tablat
 31424  0035F4  C070  FFF8         	movff	??_high_isr+16,tblptru
 31425  0035F8  C06F  FFF7         	movff	??_high_isr+15,tblptrh
 31426  0035FC  C06E  FFF6         	movff	??_high_isr+14,tblptrl
 31427  003600  C06D  FFF4         	movff	??_high_isr+13,prodh
 31428  003604  C06C  FFF3         	movff	??_high_isr+12,prodl
 31429  003608  C06B  FFDA         	movff	??_high_isr+11,fsr2h
 31430  00360C  C06A  FFD9         	movff	??_high_isr+10,fsr2l
 31431  003610  C069  FFE2         	movff	??_high_isr+9,fsr1h
 31432  003614  C068  FFE1         	movff	??_high_isr+8,fsr1l
 31433  003618  C067  FFEA         	movff	??_high_isr+7,fsr0h
 31434  00361C  C066  FFE9         	movff	??_high_isr+6,fsr0l
 31435  003620  C065  FFFB         	movff	??_high_isr+5,pclatu
 31436  003624  C064  FFFA         	movff	??_high_isr+4,pclath
 31437  003628  0011               	retfie		f
 31438  00362A                     __end_of_high_isr:
 31439                           	opt stack 0
 31440                           pclatu	equ	0xFFB
 31441                           pclath	equ	0xFFA
 31442                           tblptru	equ	0xFF8
 31443                           tblptrh	equ	0xFF7
 31444                           tblptrl	equ	0xFF6
 31445                           tablat	equ	0xFF5
 31446                           prodh	equ	0xFF4
 31447                           prodl	equ	0xFF3
 31448                           intcon	equ	0xFF2
 31449                           intcon2	equ	0xFF1
 31450                           indf0	equ	0xFEF
 31451                           postinc0	equ	0xFEE
 31452                           plusw0	equ	0xFEB
 31453                           fsr0h	equ	0xFEA
 31454                           fsr0l	equ	0xFE9
 31455                           wreg	equ	0xFE8
 31456                           indf1	equ	0xFE7
 31457                           postdec1	equ	0xFE5
 31458                           fsr1h	equ	0xFE2
 31459                           fsr1l	equ	0xFE1
 31460                           bsr	equ	0xFE0
 31461                           indf2	equ	0xFDF
 31462                           postinc2	equ	0xFDE
 31463                           postdec2	equ	0xFDD
 31464                           plusw2	equ	0xFDB
 31465                           fsr2h	equ	0xFDA
 31466                           fsr2l	equ	0xFD9
 31467                           status	equ	0xFD8
 31468                           
 31469 ;; *************** function i2_ResetTimer0 *****************
 31470 ;; Defined at:
 31471 ;;		line 77 in file "Timer.c"
 31472 ;; Parameters:    Size  Location     Type
 31473 ;;		None
 31474 ;; Auto vars:     Size  Location     Type
 31475 ;;		None
 31476 ;; Return value:  Size  Location     Type
 31477 ;;		None               void
 31478 ;; Registers used:
 31479 ;;		wreg, status,2
 31480 ;; Tracked objects:
 31481 ;;		On entry : 0/0
 31482 ;;		On exit  : 0/0
 31483 ;;		Unchanged: 0/0
 31484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31489 ;;Total ram usage:        0 bytes
 31490 ;; Hardware stack levels used:    1
 31491 ;; This function calls:
 31492 ;;		Nothing
 31493 ;; This function is called by:
 31494 ;;		_high_isr
 31495 ;; This function uses a non-reentrant model
 31496 ;;
 31497                           
 31498                           	psect	text101
 31499  00788A                     __ptext101:
 31500                           	opt stack 0
 31501  00788A                     i2_ResetTimer0:
 31502                           	opt stack 17
 31503                           
 31504                           ;Timer.c: 83: TMR0H = 0;
 31505                           
 31506                           ;incstack = 0
 31507  00788A  0E00               	movlw	0
 31508  00788C  6ED7               	movwf	4055,c	;volatile
 31509                           
 31510                           ;Timer.c: 84: TMR0L = 2;
 31511  00788E  0E02               	movlw	2
 31512  007890  6ED6               	movwf	4054,c	;volatile
 31513  007892  0012               	return		;funcret
 31514  007894                     __end_ofi2_ResetTimer0:
 31515                           	opt stack 0
 31516                           pclatu	equ	0xFFB
 31517                           pclath	equ	0xFFA
 31518                           tblptru	equ	0xFF8
 31519                           tblptrh	equ	0xFF7
 31520                           tblptrl	equ	0xFF6
 31521                           tablat	equ	0xFF5
 31522                           prodh	equ	0xFF4
 31523                           prodl	equ	0xFF3
 31524                           intcon	equ	0xFF2
 31525                           intcon2	equ	0xFF1
 31526                           indf0	equ	0xFEF
 31527                           postinc0	equ	0xFEE
 31528                           plusw0	equ	0xFEB
 31529                           fsr0h	equ	0xFEA
 31530                           fsr0l	equ	0xFE9
 31531                           wreg	equ	0xFE8
 31532                           indf1	equ	0xFE7
 31533                           postdec1	equ	0xFE5
 31534                           fsr1h	equ	0xFE2
 31535                           fsr1l	equ	0xFE1
 31536                           bsr	equ	0xFE0
 31537                           indf2	equ	0xFDF
 31538                           postinc2	equ	0xFDE
 31539                           postdec2	equ	0xFDD
 31540                           plusw2	equ	0xFDB
 31541                           fsr2h	equ	0xFDA
 31542                           fsr2l	equ	0xFD9
 31543                           status	equ	0xFD8
 31544                           
 31545 ;; *************** function i2_ReadIRpin *****************
 31546 ;; Defined at:
 31547 ;;		line 104 in file "IR.c"
 31548 ;; Parameters:    Size  Location     Type
 31549 ;;		None
 31550 ;; Auto vars:     Size  Location     Type
 31551 ;;		None
 31552 ;; Return value:  Size  Location     Type
 31553 ;;                  1    wreg      unsigned char 
 31554 ;; Registers used:
 31555 ;;		wreg
 31556 ;; Tracked objects:
 31557 ;;		On entry : 0/0
 31558 ;;		On exit  : 0/0
 31559 ;;		Unchanged: 0/0
 31560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31565 ;;Total ram usage:        0 bytes
 31566 ;; Hardware stack levels used:    1
 31567 ;; This function calls:
 31568 ;;		Nothing
 31569 ;; This function is called by:
 31570 ;;		_high_isr
 31571 ;; This function uses a non-reentrant model
 31572 ;;
 31573                           
 31574                           	psect	text102
 31575  007852                     __ptext102:
 31576                           	opt stack 0
 31577  007852                     i2_ReadIRpin:
 31578                           	opt stack 17
 31579                           
 31580                           ;IR.c: 107: if((PORTB & 0x10) == 0x10)
 31581                           
 31582                           ;incstack = 0
 31583  007852  A881               	btfss	3969,4,c	;volatile
 31584  007854  D002               	goto	i2l12162
 31585                           
 31586                           ;IR.c: 108: {
 31587                           ;IR.c: 109: return (1);
 31588  007856  0E01               	movlw	1
 31589                           
 31590                           ;IR.c: 110: }
 31591  007858  0012               	return	
 31592  00785A                     i2l12162:
 31593                           
 31594                           ;IR.c: 111: else
 31595                           ;IR.c: 112: {
 31596                           ;IR.c: 113: return 0;
 31597  00785A  0E00               	movlw	0
 31598  00785C  0012               	return	
 31599  00785E  0012               	return		;funcret
 31600  007860                     __end_ofi2_ReadIRpin:
 31601                           	opt stack 0
 31602                           pclatu	equ	0xFFB
 31603                           pclath	equ	0xFFA
 31604                           tblptru	equ	0xFF8
 31605                           tblptrh	equ	0xFF7
 31606                           tblptrl	equ	0xFF6
 31607                           tablat	equ	0xFF5
 31608                           prodh	equ	0xFF4
 31609                           prodl	equ	0xFF3
 31610                           intcon	equ	0xFF2
 31611                           intcon2	equ	0xFF1
 31612                           indf0	equ	0xFEF
 31613                           postinc0	equ	0xFEE
 31614                           plusw0	equ	0xFEB
 31615                           fsr0h	equ	0xFEA
 31616                           fsr0l	equ	0xFE9
 31617                           wreg	equ	0xFE8
 31618                           indf1	equ	0xFE7
 31619                           postdec1	equ	0xFE5
 31620                           fsr1h	equ	0xFE2
 31621                           fsr1l	equ	0xFE1
 31622                           bsr	equ	0xFE0
 31623                           indf2	equ	0xFDF
 31624                           postinc2	equ	0xFDE
 31625                           postdec2	equ	0xFDD
 31626                           plusw2	equ	0xFDB
 31627                           fsr2h	equ	0xFDA
 31628                           fsr2l	equ	0xFD9
 31629                           status	equ	0xFD8
 31630                           
 31631 ;; *************** function _ResetTimer3 *****************
 31632 ;; Defined at:
 31633 ;;		line 156 in file "Timer.c"
 31634 ;; Parameters:    Size  Location     Type
 31635 ;;		None
 31636 ;; Auto vars:     Size  Location     Type
 31637 ;;		None
 31638 ;; Return value:  Size  Location     Type
 31639 ;;		None               void
 31640 ;; Registers used:
 31641 ;;		wreg, status,2
 31642 ;; Tracked objects:
 31643 ;;		On entry : 0/0
 31644 ;;		On exit  : 0/0
 31645 ;;		Unchanged: 0/0
 31646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31651 ;;Total ram usage:        0 bytes
 31652 ;; Hardware stack levels used:    1
 31653 ;; This function calls:
 31654 ;;		Nothing
 31655 ;; This function is called by:
 31656 ;;		_high_isr
 31657 ;; This function uses a non-reentrant model
 31658 ;;
 31659                           
 31660                           	psect	text103
 31661  007894                     __ptext103:
 31662                           	opt stack 0
 31663  007894                     _ResetTimer3:
 31664                           	opt stack 17
 31665                           
 31666                           ;Timer.c: 162: TMR3H = 0;
 31667                           
 31668                           ;incstack = 0
 31669  007894  0E00               	movlw	0
 31670  007896  6EB3               	movwf	4019,c	;volatile
 31671                           
 31672                           ;Timer.c: 163: TMR3L = 2;
 31673  007898  0E02               	movlw	2
 31674  00789A  6EB2               	movwf	4018,c	;volatile
 31675  00789C  0012               	return		;funcret
 31676  00789E                     __end_of_ResetTimer3:
 31677                           	opt stack 0
 31678                           pclatu	equ	0xFFB
 31679                           pclath	equ	0xFFA
 31680                           tblptru	equ	0xFF8
 31681                           tblptrh	equ	0xFF7
 31682                           tblptrl	equ	0xFF6
 31683                           tablat	equ	0xFF5
 31684                           prodh	equ	0xFF4
 31685                           prodl	equ	0xFF3
 31686                           intcon	equ	0xFF2
 31687                           intcon2	equ	0xFF1
 31688                           indf0	equ	0xFEF
 31689                           postinc0	equ	0xFEE
 31690                           plusw0	equ	0xFEB
 31691                           fsr0h	equ	0xFEA
 31692                           fsr0l	equ	0xFE9
 31693                           wreg	equ	0xFE8
 31694                           indf1	equ	0xFE7
 31695                           postdec1	equ	0xFE5
 31696                           fsr1h	equ	0xFE2
 31697                           fsr1l	equ	0xFE1
 31698                           bsr	equ	0xFE0
 31699                           indf2	equ	0xFDF
 31700                           postinc2	equ	0xFDE
 31701                           postdec2	equ	0xFDD
 31702                           plusw2	equ	0xFDB
 31703                           fsr2h	equ	0xFDA
 31704                           fsr2l	equ	0xFD9
 31705                           status	equ	0xFD8
 31706                           
 31707 ;; *************** function _IRrawToNEC *****************
 31708 ;; Defined at:
 31709 ;;		line 122 in file "IR.c"
 31710 ;; Parameters:    Size  Location     Type
 31711 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 31712 ;;		 -> IRRawCode(144), 
 31713 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 31714 ;;		 -> IR_NEC(4), 
 31715 ;;  Invert          1   30[COMRAM] unsigned char 
 31716 ;; Auto vars:     Size  Location     Type
 31717 ;;  NECtemp         4   33[COMRAM] unsigned long 
 31718 ;;  StartBit        1   39[COMRAM] unsigned char 
 31719 ;;  i               1   38[COMRAM] unsigned char 
 31720 ;;  first           1   37[COMRAM] unsigned char 
 31721 ;; Return value:  Size  Location     Type
 31722 ;;                  1    wreg      unsigned char 
 31723 ;; Registers used:
 31724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31725 ;; Tracked objects:
 31726 ;;		On entry : 0/0
 31727 ;;		On exit  : 0/0
 31728 ;;		Unchanged: 0/0
 31729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31730 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31731 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31733 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31734 ;;Total ram usage:       14 bytes
 31735 ;; Hardware stack levels used:    1
 31736 ;; This function calls:
 31737 ;;		Nothing
 31738 ;; This function is called by:
 31739 ;;		_high_isr
 31740 ;; This function uses a non-reentrant model
 31741 ;;
 31742                           
 31743                           	psect	text104
 31744  003E84                     __ptext104:
 31745                           	opt stack 0
 31746  003E84                     _IRrawToNEC:
 31747                           	opt stack 17
 31748                           
 31749                           ;IR.c: 150: unsigned char i;
 31750                           ;IR.c: 151: unsigned char first =0;
 31751                           
 31752                           ;incstack = 0
 31753  003E84  0E00               	movlw	0
 31754  003E86  6E26               	movwf	IRrawToNEC@first,c
 31755                           
 31756                           ;IR.c: 152: unsigned char StartBit=72;
 31757  003E88  0E48               	movlw	72
 31758  003E8A  6E28               	movwf	IRrawToNEC@StartBit,c
 31759                           
 31760                           ;IR.c: 153: unsigned long NECtemp = 0;
 31761  003E8C  0E00               	movlw	0
 31762  003E8E  6E22               	movwf	IRrawToNEC@NECtemp,c
 31763  003E90  0E00               	movlw	0
 31764  003E92  6E23               	movwf	IRrawToNEC@NECtemp+1,c
 31765  003E94  0E00               	movlw	0
 31766  003E96  6E24               	movwf	IRrawToNEC@NECtemp+2,c
 31767  003E98  0E00               	movlw	0
 31768  003E9A  6E25               	movwf	IRrawToNEC@NECtemp+3,c
 31769                           
 31770                           ;IR.c: 156: for (i =0; i < 72; i++)
 31771  003E9C  0E00               	movlw	0
 31772  003E9E  6E27               	movwf	IRrawToNEC@i,c
 31773  003EA0                     i2l11986:
 31774  003EA0  0E47               	movlw	71
 31775  003EA2  6427               	cpfsgt	IRrawToNEC@i,c
 31776  003EA4  D001               	goto	i2l11990
 31777  003EA6  D041               	goto	i2l12010
 31778  003EA8                     i2l11990:
 31779                           
 31780                           ;IR.c: 157: {
 31781                           ;IR.c: 158: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 31782  003EA8  5027               	movf	IRrawToNEC@i,w,c
 31783  003EAA  0D02               	mullw	2
 31784  003EAC  50F3               	movf	prodl,w,c
 31785  003EAE  241B               	addwf	IRrawToNEC@Raw,w,c
 31786  003EB0  6ED9               	movwf	fsr2l,c
 31787  003EB2  50F4               	movf	prodh,w,c
 31788  003EB4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31789  003EB6  6EDA               	movwf	fsr2h,c
 31790  003EB8  0EC8               	movlw	200
 31791  003EBA  5CDE               	subwf	postinc2,w,c
 31792  003EBC  0EAF               	movlw	175
 31793  003EBE  58DE               	subwfb	postinc2,w,c
 31794  003EC0  A0D8               	btfss	status,0,c
 31795  003EC2  D011               	goto	i2l12000
 31796  003EC4  5027               	movf	IRrawToNEC@i,w,c
 31797  003EC6  0D02               	mullw	2
 31798  003EC8  50F3               	movf	prodl,w,c
 31799  003ECA  241B               	addwf	IRrawToNEC@Raw,w,c
 31800  003ECC  6ED9               	movwf	fsr2l,c
 31801  003ECE  50F4               	movf	prodh,w,c
 31802  003ED0  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31803  003ED2  6EDA               	movwf	fsr2h,c
 31804  003ED4  0E51               	movlw	81
 31805  003ED6  5CDE               	subwf	postinc2,w,c
 31806  003ED8  0EC3               	movlw	195
 31807  003EDA  58DE               	subwfb	postinc2,w,c
 31808  003EDC  B0D8               	btfsc	status,0,c
 31809  003EDE  D003               	goto	i2l12000
 31810                           
 31811                           ;IR.c: 159: {
 31812                           ;IR.c: 161: return 2;
 31813  003EE0  0E02               	movlw	2
 31814  003EE2  0012               	return	
 31815                           
 31816                           ;IR.c: 162: }
 31817  003EE4  D020               	goto	i2l12006
 31818  003EE6                     i2l12000:
 31819                           
 31820                           ;IR.c: 163: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 31821  003EE6  5027               	movf	IRrawToNEC@i,w,c
 31822  003EE8  0D02               	mullw	2
 31823  003EEA  50F3               	movf	prodl,w,c
 31824  003EEC  241B               	addwf	IRrawToNEC@Raw,w,c
 31825  003EEE  6ED9               	movwf	fsr2l,c
 31826  003EF0  50F4               	movf	prodh,w,c
 31827  003EF2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31828  003EF4  6EDA               	movwf	fsr2h,c
 31829  003EF6  0EA0               	movlw	160
 31830  003EF8  5CDE               	subwf	postinc2,w,c
 31831  003EFA  0E0F               	movlw	15
 31832  003EFC  58DE               	subwfb	postinc2,w,c
 31833  003EFE  A0D8               	btfss	status,0,c
 31834  003F00  D012               	goto	i2l12006
 31835  003F02  5027               	movf	IRrawToNEC@i,w,c
 31836  003F04  0D02               	mullw	2
 31837  003F06  50F3               	movf	prodl,w,c
 31838  003F08  241B               	addwf	IRrawToNEC@Raw,w,c
 31839  003F0A  6ED9               	movwf	fsr2l,c
 31840  003F0C  50F4               	movf	prodh,w,c
 31841  003F0E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31842  003F10  6EDA               	movwf	fsr2h,c
 31843  003F12  0E89               	movlw	137
 31844  003F14  5CDE               	subwf	postinc2,w,c
 31845  003F16  0E13               	movlw	19
 31846  003F18  58DE               	subwfb	postinc2,w,c
 31847  003F1A  B0D8               	btfsc	status,0,c
 31848  003F1C  D004               	goto	i2l12006
 31849                           
 31850                           ;IR.c: 164: {
 31851                           ;IR.c: 166: StartBit = i;
 31852  003F1E  C027  F028         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 31853                           
 31854                           ;IR.c: 167: break;
 31855  003F22  D003               	goto	i2l12010
 31856  003F24  D000               	goto	i2l12006
 31857  003F26                     i2l12006:
 31858  003F26  2A27               	incf	IRrawToNEC@i,f,c
 31859  003F28  D7BB               	goto	i2l11986
 31860  003F2A                     i2l12010:
 31861                           
 31862                           ;IR.c: 168: }
 31863                           ;IR.c: 169: }
 31864                           ;IR.c: 170: if(72 - StartBit < 72)
 31865  003F2A  5028               	movf	IRrawToNEC@StartBit,w,c
 31866  003F2C  6E20               	movwf	??_IRrawToNEC& (0+255),c
 31867  003F2E  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 31868  003F30  1E20               	comf	??_IRrawToNEC,f,c
 31869  003F32  1E21               	comf	??_IRrawToNEC+1,f,c
 31870  003F34  4A20               	infsnz	??_IRrawToNEC,f,c
 31871  003F36  2A21               	incf	??_IRrawToNEC+1,f,c
 31872  003F38  0E48               	movlw	72
 31873  003F3A  2620               	addwf	??_IRrawToNEC,f,c
 31874  003F3C  0E00               	movlw	0
 31875  003F3E  2221               	addwfc	??_IRrawToNEC+1,f,c
 31876  003F40  BE21               	btfsc	??_IRrawToNEC+1,7,c
 31877  003F42  D006               	goto	i2l12012
 31878  003F44  5021               	movf	??_IRrawToNEC+1,w,c
 31879  003F46  E106               	bnz	i2l12016
 31880  003F48  0E48               	movlw	72
 31881  003F4A  5C20               	subwf	??_IRrawToNEC,w,c
 31882  003F4C  B0D8               	btfsc	status,0,c
 31883  003F4E  D002               	goto	i2l12016
 31884  003F50                     i2l12012:
 31885                           
 31886                           ;IR.c: 171: {
 31887                           ;IR.c: 173: return 0;
 31888  003F50  0E00               	movlw	0
 31889  003F52  0012               	return	
 31890  003F54                     i2l12016:
 31891                           
 31892                           ;IR.c: 174: }
 31893                           ;IR.c: 176: StartBit++;
 31894  003F54  2A28               	incf	IRrawToNEC@StartBit,f,c
 31895                           
 31896                           ;IR.c: 177: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 31897  003F56  5028               	movf	IRrawToNEC@StartBit,w,c
 31898  003F58  0D02               	mullw	2
 31899  003F5A  50F3               	movf	prodl,w,c
 31900  003F5C  241B               	addwf	IRrawToNEC@Raw,w,c
 31901  003F5E  6ED9               	movwf	fsr2l,c
 31902  003F60  50F4               	movf	prodh,w,c
 31903  003F62  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31904  003F64  6EDA               	movwf	fsr2h,c
 31905  003F66  0E9D               	movlw	157
 31906  003F68  5CDE               	subwf	postinc2,w,c
 31907  003F6A  0E03               	movlw	3
 31908  003F6C  58DE               	subwfb	postinc2,w,c
 31909  003F6E  A0D8               	btfss	status,0,c
 31910  003F70  D067               	goto	i2l12038
 31911  003F72  5028               	movf	IRrawToNEC@StartBit,w,c
 31912  003F74  0D02               	mullw	2
 31913  003F76  50F3               	movf	prodl,w,c
 31914  003F78  241B               	addwf	IRrawToNEC@Raw,w,c
 31915  003F7A  6ED9               	movwf	fsr2l,c
 31916  003F7C  50F4               	movf	prodh,w,c
 31917  003F7E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31918  003F80  6EDA               	movwf	fsr2h,c
 31919  003F82  0EE3               	movlw	227
 31920  003F84  5CDE               	subwf	postinc2,w,c
 31921  003F86  0E04               	movlw	4
 31922  003F88  58DE               	subwfb	postinc2,w,c
 31923  003F8A  B0D8               	btfsc	status,0,c
 31924  003F8C  D059               	goto	i2l12038
 31925                           
 31926                           ;IR.c: 178: {
 31927                           ;IR.c: 180: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 31928  003F8E  5028               	movf	IRrawToNEC@StartBit,w,c
 31929  003F90  0D02               	mullw	2
 31930  003F92  50F3               	movf	prodl,w,c
 31931  003F94  241B               	addwf	IRrawToNEC@Raw,w,c
 31932  003F96  6ED9               	movwf	fsr2l,c
 31933  003F98  50F4               	movf	prodh,w,c
 31934  003F9A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31935  003F9C  6EDA               	movwf	fsr2h,c
 31936  003F9E  0E01               	movlw	1
 31937  003FA0  50DB               	movf	plusw2,w,c
 31938  003FA2  E104               	bnz	i2u1469_40
 31939  003FA4  0E7D               	movlw	125
 31940  003FA6  5CDE               	subwf	postinc2,w,c
 31941  003FA8  A0D8               	btfss	status,0,c
 31942  003FAA  D069               	goto	i2l12046
 31943  003FAC                     i2u1469_40:
 31944  003FAC  5028               	movf	IRrawToNEC@StartBit,w,c
 31945  003FAE  0D02               	mullw	2
 31946  003FB0  50F3               	movf	prodl,w,c
 31947  003FB2  241B               	addwf	IRrawToNEC@Raw,w,c
 31948  003FB4  6ED9               	movwf	fsr2l,c
 31949  003FB6  50F4               	movf	prodh,w,c
 31950  003FB8  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31951  003FBA  6EDA               	movwf	fsr2h,c
 31952  003FBC  0E59               	movlw	89
 31953  003FBE  5CDE               	subwf	postinc2,w,c
 31954  003FC0  0E02               	movlw	2
 31955  003FC2  58DE               	subwfb	postinc2,w,c
 31956  003FC4  B0D8               	btfsc	status,0,c
 31957  003FC6  D05B               	goto	i2l12046
 31958                           
 31959                           ;IR.c: 181: {
 31960                           ;IR.c: 183: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 31961  003FC8  5028               	movf	IRrawToNEC@StartBit,w,c
 31962  003FCA  0D02               	mullw	2
 31963  003FCC  50F3               	movf	prodl,w,c
 31964  003FCE  241B               	addwf	IRrawToNEC@Raw,w,c
 31965  003FD0  6ED9               	movwf	fsr2l,c
 31966  003FD2  50F4               	movf	prodh,w,c
 31967  003FD4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31968  003FD6  6EDA               	movwf	fsr2h,c
 31969  003FD8  0E01               	movlw	1
 31970  003FDA  50DB               	movf	plusw2,w,c
 31971  003FDC  E104               	bnz	i2u1471_40
 31972  003FDE  0E7D               	movlw	125
 31973  003FE0  5CDE               	subwf	postinc2,w,c
 31974  003FE2  A0D8               	btfss	status,0,c
 31975  003FE4  D04C               	goto	i2l12046
 31976  003FE6                     i2u1471_40:
 31977  003FE6  5028               	movf	IRrawToNEC@StartBit,w,c
 31978  003FE8  0D02               	mullw	2
 31979  003FEA  50F3               	movf	prodl,w,c
 31980  003FEC  241B               	addwf	IRrawToNEC@Raw,w,c
 31981  003FEE  6ED9               	movwf	fsr2l,c
 31982  003FF0  50F4               	movf	prodh,w,c
 31983  003FF2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 31984  003FF4  6EDA               	movwf	fsr2h,c
 31985  003FF6  0E59               	movlw	89
 31986  003FF8  5CDE               	subwf	postinc2,w,c
 31987  003FFA  0E02               	movlw	2
 31988  003FFC  58DE               	subwfb	postinc2,w,c
 31989  003FFE  B0D8               	btfsc	status,0,c
 31990  004000  D03E               	goto	i2l12046
 31991                           
 31992                           ;IR.c: 184: {
 31993                           ;IR.c: 186: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 31994  004002  5028               	movf	IRrawToNEC@StartBit,w,c
 31995  004004  0D02               	mullw	2
 31996  004006  50F3               	movf	prodl,w,c
 31997  004008  241B               	addwf	IRrawToNEC@Raw,w,c
 31998  00400A  6ED9               	movwf	fsr2l,c
 31999  00400C  50F4               	movf	prodh,w,c
 32000  00400E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32001  004010  6EDA               	movwf	fsr2h,c
 32002  004012  0EC8               	movlw	200
 32003  004014  5CDE               	subwf	postinc2,w,c
 32004  004016  0EAF               	movlw	175
 32005  004018  58DE               	subwfb	postinc2,w,c
 32006  00401A  A0D8               	btfss	status,0,c
 32007  00401C  D030               	goto	i2l12046
 32008  00401E  5028               	movf	IRrawToNEC@StartBit,w,c
 32009  004020  0D02               	mullw	2
 32010  004022  50F3               	movf	prodl,w,c
 32011  004024  241B               	addwf	IRrawToNEC@Raw,w,c
 32012  004026  6ED9               	movwf	fsr2l,c
 32013  004028  50F4               	movf	prodh,w,c
 32014  00402A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32015  00402C  6EDA               	movwf	fsr2h,c
 32016  00402E  0E51               	movlw	81
 32017  004030  5CDE               	subwf	postinc2,w,c
 32018  004032  0EC3               	movlw	195
 32019  004034  58DE               	subwfb	postinc2,w,c
 32020  004036  B0D8               	btfsc	status,0,c
 32021  004038  D022               	goto	i2l12046
 32022                           
 32023                           ;IR.c: 187: {
 32024                           ;IR.c: 189: return 2;
 32025  00403A  0E02               	movlw	2
 32026  00403C  0012               	return	
 32027                           
 32028                           ;IR.c: 190: }
 32029                           ;IR.c: 191: }
 32030                           ;IR.c: 192: }
 32031                           ;IR.c: 194: }
 32032  00403E  D01F               	goto	i2l12046
 32033  004040                     i2l12038:
 32034                           
 32035                           ;IR.c: 195: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 32036  004040  5028               	movf	IRrawToNEC@StartBit,w,c
 32037  004042  0D02               	mullw	2
 32038  004044  50F3               	movf	prodl,w,c
 32039  004046  241B               	addwf	IRrawToNEC@Raw,w,c
 32040  004048  6ED9               	movwf	fsr2l,c
 32041  00404A  50F4               	movf	prodh,w,c
 32042  00404C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32043  00404E  6EDA               	movwf	fsr2h,c
 32044  004050  0ED6               	movlw	214
 32045  004052  5CDE               	subwf	postinc2,w,c
 32046  004054  0E06               	movlw	6
 32047  004056  58DE               	subwfb	postinc2,w,c
 32048  004058  A0D8               	btfss	status,0,c
 32049  00405A  D00E               	goto	i2l12042
 32050  00405C  5028               	movf	IRrawToNEC@StartBit,w,c
 32051  00405E  0D02               	mullw	2
 32052  004060  50F3               	movf	prodl,w,c
 32053  004062  241B               	addwf	IRrawToNEC@Raw,w,c
 32054  004064  6ED9               	movwf	fsr2l,c
 32055  004066  50F4               	movf	prodh,w,c
 32056  004068  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32057  00406A  6EDA               	movwf	fsr2h,c
 32058  00406C  0EBF               	movlw	191
 32059  00406E  5CDE               	subwf	postinc2,w,c
 32060  004070  0E0A               	movlw	10
 32061  004072  58DE               	subwfb	postinc2,w,c
 32062  004074  A0D8               	btfss	status,0,c
 32063  004076  D003               	goto	i2l12046
 32064  004078                     i2l12042:
 32065                           
 32066                           ;IR.c: 196: {
 32067                           ;IR.c: 198: return 0;
 32068  004078  0E00               	movlw	0
 32069  00407A  0012               	return	
 32070  00407C  D000               	goto	i2l12046
 32071  00407E                     i2l12046:
 32072                           
 32073                           ;IR.c: 199: }
 32074                           ;IR.c: 201: StartBit++;
 32075  00407E  2A28               	incf	IRrawToNEC@StartBit,f,c
 32076                           
 32077                           ;IR.c: 202: for(i = StartBit; i < 72;i++)
 32078  004080  C028  F027         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 32079  004084                     i2l12050:
 32080  004084  0E47               	movlw	71
 32081  004086  6427               	cpfsgt	IRrawToNEC@i,c
 32082  004088  D001               	goto	i2l12054
 32083  00408A  D0CA               	goto	i2l12130
 32084  00408C                     i2l12054:
 32085                           
 32086                           ;IR.c: 203: {
 32087                           ;IR.c: 204: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 32088  00408C  5028               	movf	IRrawToNEC@StartBit,w,c
 32089  00408E  0D02               	mullw	2
 32090  004090  50F3               	movf	prodl,w,c
 32091  004092  241B               	addwf	IRrawToNEC@Raw,w,c
 32092  004094  6ED9               	movwf	fsr2l,c
 32093  004096  50F4               	movf	prodh,w,c
 32094  004098  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32095  00409A  6EDA               	movwf	fsr2h,c
 32096  00409C  0E01               	movlw	1
 32097  00409E  50DB               	movf	plusw2,w,c
 32098  0040A0  E104               	bnz	i2u1478_40
 32099  0040A2  0E7D               	movlw	125
 32100  0040A4  5CDE               	subwf	postinc2,w,c
 32101  0040A6  A0D8               	btfss	status,0,c
 32102  0040A8  D024               	goto	i2l12070
 32103  0040AA                     i2u1478_40:
 32104  0040AA  5028               	movf	IRrawToNEC@StartBit,w,c
 32105  0040AC  0D02               	mullw	2
 32106  0040AE  50F3               	movf	prodl,w,c
 32107  0040B0  241B               	addwf	IRrawToNEC@Raw,w,c
 32108  0040B2  6ED9               	movwf	fsr2l,c
 32109  0040B4  50F4               	movf	prodh,w,c
 32110  0040B6  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32111  0040B8  6EDA               	movwf	fsr2h,c
 32112  0040BA  0E59               	movlw	89
 32113  0040BC  5CDE               	subwf	postinc2,w,c
 32114  0040BE  0E02               	movlw	2
 32115  0040C0  58DE               	subwfb	postinc2,w,c
 32116  0040C2  B0D8               	btfsc	status,0,c
 32117  0040C4  D016               	goto	i2l12070
 32118                           
 32119                           ;IR.c: 205: {
 32120                           ;IR.c: 206: if(!first)
 32121  0040C6  5026               	movf	IRrawToNEC@first,w,c
 32122  0040C8  A4D8               	btfss	status,2,c
 32123  0040CA  D002               	goto	i2l12062
 32124                           
 32125                           ;IR.c: 207: {
 32126                           ;IR.c: 209: first = 1;
 32127  0040CC  0E01               	movlw	1
 32128  0040CE  D040               	goto	L44
 32129  0040D0                     i2l12062:
 32130                           
 32131                           ;IR.c: 211: else
 32132                           ;IR.c: 212: {
 32133                           ;IR.c: 214: first = 0;
 32134  0040D0  0E00               	movlw	0
 32135  0040D2  6E26               	movwf	IRrawToNEC@first,c
 32136                           
 32137                           ;IR.c: 215: NECtemp <<= 1;
 32138  0040D4  90D8               	bcf	status,0,c
 32139  0040D6  3622               	rlcf	IRrawToNEC@NECtemp,f,c
 32140  0040D8  3623               	rlcf	IRrawToNEC@NECtemp+1,f,c
 32141  0040DA  3624               	rlcf	IRrawToNEC@NECtemp+2,f,c
 32142  0040DC  3625               	rlcf	IRrawToNEC@NECtemp+3,f,c
 32143                           
 32144                           ;IR.c: 216: if(!Invert)
 32145  0040DE  501F               	movf	IRrawToNEC@Invert,w,c
 32146  0040E0  A4D8               	btfss	status,2,c
 32147  0040E2  D09B               	goto	i2l12126
 32148                           
 32149                           ;IR.c: 217: {
 32150                           ;IR.c: 218: NECtemp++;
 32151  0040E4  0E01               	movlw	1
 32152  0040E6  2622               	addwf	IRrawToNEC@NECtemp,f,c
 32153  0040E8  0E00               	movlw	0
 32154  0040EA  2223               	addwfc	IRrawToNEC@NECtemp+1,f,c
 32155  0040EC  2224               	addwfc	IRrawToNEC@NECtemp+2,f,c
 32156  0040EE  2225               	addwfc	IRrawToNEC@NECtemp+3,f,c
 32157                           
 32158                           ;IR.c: 219: }
 32159                           ;IR.c: 220: }
 32160                           ;IR.c: 221: }
 32161  0040F0  D094               	goto	i2l12126
 32162  0040F2                     i2l12070:
 32163                           
 32164                           ;IR.c: 222: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 32165  0040F2  5028               	movf	IRrawToNEC@StartBit,w,c
 32166  0040F4  0D02               	mullw	2
 32167  0040F6  50F3               	movf	prodl,w,c
 32168  0040F8  241B               	addwf	IRrawToNEC@Raw,w,c
 32169  0040FA  6ED9               	movwf	fsr2l,c
 32170  0040FC  50F4               	movf	prodh,w,c
 32171  0040FE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32172  004100  6EDA               	movwf	fsr2h,c
 32173  004102  0EBC               	movlw	188
 32174  004104  5CDE               	subwf	postinc2,w,c
 32175  004106  0E02               	movlw	2
 32176  004108  58DE               	subwfb	postinc2,w,c
 32177  00410A  A0D8               	btfss	status,0,c
 32178  00410C  D026               	goto	i2l12088
 32179  00410E  5028               	movf	IRrawToNEC@StartBit,w,c
 32180  004110  0D02               	mullw	2
 32181  004112  50F3               	movf	prodl,w,c
 32182  004114  241B               	addwf	IRrawToNEC@Raw,w,c
 32183  004116  6ED9               	movwf	fsr2l,c
 32184  004118  50F4               	movf	prodh,w,c
 32185  00411A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32186  00411C  6EDA               	movwf	fsr2h,c
 32187  00411E  0EB7               	movlw	183
 32188  004120  5CDE               	subwf	postinc2,w,c
 32189  004122  0E03               	movlw	3
 32190  004124  58DE               	subwfb	postinc2,w,c
 32191  004126  B0D8               	btfsc	status,0,c
 32192  004128  D018               	goto	i2l12088
 32193                           
 32194                           ;IR.c: 223: {
 32195                           ;IR.c: 224: if(first)
 32196  00412A  5026               	movf	IRrawToNEC@first,w,c
 32197  00412C  B4D8               	btfsc	status,2,c
 32198  00412E  D012               	goto	i2l12084
 32199                           
 32200                           ;IR.c: 225: {
 32201                           ;IR.c: 227: NECtemp <<= 1;
 32202  004130  90D8               	bcf	status,0,c
 32203  004132  3622               	rlcf	IRrawToNEC@NECtemp,f,c
 32204  004134  3623               	rlcf	IRrawToNEC@NECtemp+1,f,c
 32205  004136  3624               	rlcf	IRrawToNEC@NECtemp+2,f,c
 32206  004138  3625               	rlcf	IRrawToNEC@NECtemp+3,f,c
 32207                           
 32208                           ;IR.c: 228: if(Invert)
 32209  00413A  501F               	movf	IRrawToNEC@Invert,w,c
 32210  00413C  B4D8               	btfsc	status,2,c
 32211  00413E  D007               	goto	i2l12082
 32212                           
 32213                           ;IR.c: 229: {
 32214                           ;IR.c: 230: NECtemp++;
 32215  004140  0E01               	movlw	1
 32216  004142  2622               	addwf	IRrawToNEC@NECtemp,f,c
 32217  004144  0E00               	movlw	0
 32218  004146  2223               	addwfc	IRrawToNEC@NECtemp+1,f,c
 32219  004148  2224               	addwfc	IRrawToNEC@NECtemp+2,f,c
 32220  00414A  2225               	addwfc	IRrawToNEC@NECtemp+3,f,c
 32221  00414C  D000               	goto	i2l12082
 32222  00414E                     i2l12082:
 32223                           
 32224                           ;IR.c: 231: }
 32225                           ;IR.c: 232: first = 0;
 32226  00414E  0E00               	movlw	0
 32227  004150                     L44:
 32228  004150  6E26               	movwf	IRrawToNEC@first,c
 32229                           
 32230                           ;IR.c: 233: }
 32231  004152  D063               	goto	i2l12126
 32232  004154                     i2l12084:
 32233                           
 32234                           ;IR.c: 234: else
 32235                           ;IR.c: 235: {
 32236                           ;IR.c: 237: return 0;
 32237  004154  0E00               	movlw	0
 32238  004156  0012               	return	
 32239                           
 32240                           ;IR.c: 238: }
 32241                           ;IR.c: 239: }
 32242  004158  D060               	goto	i2l12126
 32243  00415A                     i2l12088:
 32244                           
 32245                           ;IR.c: 240: else if(Raw[StartBit] == 0 && first == 1)
 32246  00415A  5028               	movf	IRrawToNEC@StartBit,w,c
 32247  00415C  0D02               	mullw	2
 32248  00415E  50F3               	movf	prodl,w,c
 32249  004160  241B               	addwf	IRrawToNEC@Raw,w,c
 32250  004162  6ED9               	movwf	fsr2l,c
 32251  004164  50F4               	movf	prodh,w,c
 32252  004166  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32253  004168  6EDA               	movwf	fsr2h,c
 32254  00416A  50DE               	movf	postinc2,w,c
 32255  00416C  10DE               	iorwf	postinc2,w,c
 32256  00416E  A4D8               	btfss	status,2,c
 32257  004170  D012               	goto	i2l12100
 32258  004172  0426               	decf	IRrawToNEC@first,w,c
 32259  004174  A4D8               	btfss	status,2,c
 32260  004176  D00F               	goto	i2l12100
 32261  004178                     i2l12092:
 32262                           
 32263                           ;IR.c: 241: {
 32264                           ;IR.c: 246: *NEC = NECtemp;
 32265  004178  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 32266  00417C  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 32267  004180  C022  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 32268  004184  C023  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 32269  004188  C024  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 32270  00418C  C025  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 32271  004190  D01F               	goto	i2l12106
 32272                           
 32273                           ;IR.c: 247: return 1;
 32274  004192  0012               	return	
 32275                           
 32276                           ;IR.c: 248: }
 32277  004194  D042               	goto	i2l12126
 32278  004196                     i2l12100:
 32279                           
 32280                           ;IR.c: 249: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 32281  004196  5028               	movf	IRrawToNEC@StartBit,w,c
 32282  004198  0D02               	mullw	2
 32283  00419A  50F3               	movf	prodl,w,c
 32284  00419C  241B               	addwf	IRrawToNEC@Raw,w,c
 32285  00419E  6ED9               	movwf	fsr2l,c
 32286  0041A0  50F4               	movf	prodh,w,c
 32287  0041A2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32288  0041A4  6EDA               	movwf	fsr2h,c
 32289  0041A6  0E38               	movlw	56
 32290  0041A8  5CDE               	subwf	postinc2,w,c
 32291  0041AA  0E4A               	movlw	74
 32292  0041AC  58DE               	subwfb	postinc2,w,c
 32293  0041AE  A0D8               	btfss	status,0,c
 32294  0041B0  D012               	goto	i2l12112
 32295  0041B2  5028               	movf	IRrawToNEC@StartBit,w,c
 32296  0041B4  0D02               	mullw	2
 32297  0041B6  50F3               	movf	prodl,w,c
 32298  0041B8  241B               	addwf	IRrawToNEC@Raw,w,c
 32299  0041BA  6ED9               	movwf	fsr2l,c
 32300  0041BC  50F4               	movf	prodh,w,c
 32301  0041BE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32302  0041C0  6EDA               	movwf	fsr2h,c
 32303  0041C2  0E09               	movlw	9
 32304  0041C4  5CDE               	subwf	postinc2,w,c
 32305  0041C6  0E52               	movlw	82
 32306  0041C8  58DE               	subwfb	postinc2,w,c
 32307  0041CA  B0D8               	btfsc	status,0,c
 32308  0041CC  D004               	goto	i2l12112
 32309  0041CE  D7D4               	goto	i2l12092
 32310  0041D0                     i2l12106:
 32311                           
 32312                           ;IR.c: 253: return 1;
 32313  0041D0  0E01               	movlw	1
 32314  0041D2  0012               	return	
 32315                           
 32316                           ;IR.c: 254: }
 32317  0041D4  D022               	goto	i2l12126
 32318  0041D6                     i2l12112:
 32319                           
 32320                           ;IR.c: 255: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 32321  0041D6  5028               	movf	IRrawToNEC@StartBit,w,c
 32322  0041D8  0D02               	mullw	2
 32323  0041DA  50F3               	movf	prodl,w,c
 32324  0041DC  241B               	addwf	IRrawToNEC@Raw,w,c
 32325  0041DE  6ED9               	movwf	fsr2l,c
 32326  0041E0  50F4               	movf	prodh,w,c
 32327  0041E2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32328  0041E4  6EDA               	movwf	fsr2h,c
 32329  0041E6  0EC8               	movlw	200
 32330  0041E8  5CDE               	subwf	postinc2,w,c
 32331  0041EA  0EAF               	movlw	175
 32332  0041EC  58DE               	subwfb	postinc2,w,c
 32333  0041EE  A0D8               	btfss	status,0,c
 32334  0041F0  D011               	goto	i2l12122
 32335  0041F2  5028               	movf	IRrawToNEC@StartBit,w,c
 32336  0041F4  0D02               	mullw	2
 32337  0041F6  50F3               	movf	prodl,w,c
 32338  0041F8  241B               	addwf	IRrawToNEC@Raw,w,c
 32339  0041FA  6ED9               	movwf	fsr2l,c
 32340  0041FC  50F4               	movf	prodh,w,c
 32341  0041FE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 32342  004200  6EDA               	movwf	fsr2h,c
 32343  004202  0E51               	movlw	81
 32344  004204  5CDE               	subwf	postinc2,w,c
 32345  004206  0EC3               	movlw	195
 32346  004208  58DE               	subwfb	postinc2,w,c
 32347  00420A  B0D8               	btfsc	status,0,c
 32348  00420C  D003               	goto	i2l12122
 32349                           
 32350                           ;IR.c: 256: {
 32351                           ;IR.c: 258: return 2;
 32352  00420E  0E02               	movlw	2
 32353  004210  0012               	return	
 32354                           
 32355                           ;IR.c: 259: }
 32356  004212  D003               	goto	i2l12126
 32357  004214                     i2l12122:
 32358                           
 32359                           ;IR.c: 260: else
 32360                           ;IR.c: 261: {
 32361                           ;IR.c: 262: return 0;
 32362  004214  0E00               	movlw	0
 32363  004216  0012               	return	
 32364  004218  D000               	goto	i2l12126
 32365  00421A                     i2l12126:
 32366                           
 32367                           ;IR.c: 263: }
 32368                           ;IR.c: 264: StartBit++;
 32369  00421A  2A28               	incf	IRrawToNEC@StartBit,f,c
 32370  00421C  2A27               	incf	IRrawToNEC@i,f,c
 32371  00421E  D732               	goto	i2l12050
 32372  004220                     i2l12130:
 32373                           
 32374                           ;IR.c: 265: }
 32375                           ;IR.c: 267: return 0;
 32376  004220  0E00               	movlw	0
 32377  004222  0012               	return	
 32378  004224  0012               	return		;funcret
 32379  004226                     __end_of_IRrawToNEC:
 32380                           	opt stack 0
 32381                           pclatu	equ	0xFFB
 32382                           pclath	equ	0xFFA
 32383                           tblptru	equ	0xFF8
 32384                           tblptrh	equ	0xFF7
 32385                           tblptrl	equ	0xFF6
 32386                           tablat	equ	0xFF5
 32387                           prodh	equ	0xFF4
 32388                           prodl	equ	0xFF3
 32389                           intcon	equ	0xFF2
 32390                           intcon2	equ	0xFF1
 32391                           indf0	equ	0xFEF
 32392                           postinc0	equ	0xFEE
 32393                           plusw0	equ	0xFEB
 32394                           fsr0h	equ	0xFEA
 32395                           fsr0l	equ	0xFE9
 32396                           wreg	equ	0xFE8
 32397                           indf1	equ	0xFE7
 32398                           postdec1	equ	0xFE5
 32399                           fsr1h	equ	0xFE2
 32400                           fsr1l	equ	0xFE1
 32401                           bsr	equ	0xFE0
 32402                           indf2	equ	0xFDF
 32403                           postinc2	equ	0xFDE
 32404                           postdec2	equ	0xFDD
 32405                           plusw2	equ	0xFDB
 32406                           fsr2h	equ	0xFDA
 32407                           fsr2l	equ	0xFD9
 32408                           status	equ	0xFD8
 32409                           pclatu	equ	0xFFB
 32410                           pclath	equ	0xFFA
 32411                           tblptru	equ	0xFF8
 32412                           tblptrh	equ	0xFF7
 32413                           tblptrl	equ	0xFF6
 32414                           tablat	equ	0xFF5
 32415                           prodh	equ	0xFF4
 32416                           prodl	equ	0xFF3
 32417                           intcon	equ	0xFF2
 32418                           intcon2	equ	0xFF1
 32419                           indf0	equ	0xFEF
 32420                           postinc0	equ	0xFEE
 32421                           plusw0	equ	0xFEB
 32422                           fsr0h	equ	0xFEA
 32423                           fsr0l	equ	0xFE9
 32424                           wreg	equ	0xFE8
 32425                           indf1	equ	0xFE7
 32426                           postdec1	equ	0xFE5
 32427                           fsr1h	equ	0xFE2
 32428                           fsr1l	equ	0xFE1
 32429                           bsr	equ	0xFE0
 32430                           indf2	equ	0xFDF
 32431                           postinc2	equ	0xFDE
 32432                           postdec2	equ	0xFDD
 32433                           plusw2	equ	0xFDB
 32434                           fsr2h	equ	0xFDA
 32435                           fsr2l	equ	0xFD9
 32436                           status	equ	0xFD8
 32437                           
 32438                           	psect	rparam
 32439  0000                     pclatu	equ	0xFFB
 32440                           pclath	equ	0xFFA
 32441                           tblptru	equ	0xFF8
 32442                           tblptrh	equ	0xFF7
 32443                           tblptrl	equ	0xFF6
 32444                           tablat	equ	0xFF5
 32445                           prodh	equ	0xFF4
 32446                           prodl	equ	0xFF3
 32447                           intcon	equ	0xFF2
 32448                           intcon2	equ	0xFF1
 32449                           indf0	equ	0xFEF
 32450                           postinc0	equ	0xFEE
 32451                           plusw0	equ	0xFEB
 32452                           fsr0h	equ	0xFEA
 32453                           fsr0l	equ	0xFE9
 32454                           wreg	equ	0xFE8
 32455                           indf1	equ	0xFE7
 32456                           postdec1	equ	0xFE5
 32457                           fsr1h	equ	0xFE2
 32458                           fsr1l	equ	0xFE1
 32459                           bsr	equ	0xFE0
 32460                           indf2	equ	0xFDF
 32461                           postinc2	equ	0xFDE
 32462                           postdec2	equ	0xFDD
 32463                           plusw2	equ	0xFDB
 32464                           fsr2h	equ	0xFDA
 32465                           fsr2l	equ	0xFD9
 32466                           status	equ	0xFD8


Data Sizes:
    Strings     1935
    Constant    129
    Data        538
    BSS         958
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      67
    BANK0           160    100     121
    BANK1           256    250     254
    BANK2           256    249     256
    BANK3           256    248     248
    BANK4           256      0     245
    BANK5           256      0     242
    BANK6           256      0     255
    BANK7           256      0     246
    BANK8           256      0     194
    BANK9           256      0     255
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf$2911	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_103(CODE[17]), STR_102(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_81(CODE[19]), STR_78(CODE[15]), STR_69(CODE[54]), STR_68(CODE[63]), 
		 -> STR_50(CODE[44]), STR_49(CODE[46]), STR_47(CODE[44]), STR_46(CODE[21]), 
		 -> STR_33(CODE[15]), STR_32(CODE[15]), STR_31(CODE[20]), STR_29(CODE[23]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_19(CODE[28]), STR_6(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> UseBluetooth@buf(BANK2[50]), BluetoothInitialSetup@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(BANK5[16]), Conf2_ChannelH_3_ON(BANK4[16]), Conf2_ChannelH_2_OFF(BANK4[16]), Conf2_ChannelH_2_ON(BANK4[16]), 
		 -> Conf2_ChannelH_1_OFF(BANK4[16]), Conf2_ChannelH_1_ON(BANK4[16]), Conf2_ChannelD_OFF(BANK4[16]), Conf2_ChannelD_ON(BANK4[16]), 
		 -> Conf2_ChannelB_OFF(BANK4[16]), Conf2_ChannelB_ON(BANK4[16]), Conf1_ChannelF(BANK4[12]), Conf1_ChannelE(BANK4[12]), 
		 -> Conf1_ChannelD(BANK4[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(BANK5[16]), Conf2_ChannelH_3_ON(BANK4[16]), Conf2_ChannelH_2_OFF(BANK4[16]), Conf2_ChannelH_2_ON(BANK4[16]), 
		 -> Conf2_ChannelH_1_OFF(BANK4[16]), Conf2_ChannelH_1_ON(BANK4[16]), Conf2_ChannelD_OFF(BANK4[16]), Conf2_ChannelD_ON(BANK4[16]), 
		 -> Conf2_ChannelB_OFF(BANK4[16]), Conf2_ChannelB_ON(BANK4[16]), Conf1_ChannelF(BANK4[12]), Conf1_ChannelE(BANK4[12]), 
		 -> Conf1_ChannelD(BANK4[12]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK0[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(BANK0[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK8[144]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 41
		 -> STR_99(CODE[32]), STR_98(CODE[31]), STR_97(CODE[32]), STR_96(CODE[31]), 
		 -> STR_95(CODE[32]), STR_94(CODE[31]), STR_93(CODE[20]), STR_92(CODE[19]), 
		 -> STR_91(CODE[23]), STR_90(CODE[22]), STR_89(CODE[19]), STR_88(CODE[19]), 
		 -> STR_87(CODE[19]), STR_85(CODE[41]), STR_83(CODE[24]), STR_80(CODE[25]), 
		 -> STR_76(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 21
		 -> STR_84(CODE[5]), STR_82(CODE[4]), STR_79(CODE[4]), STR_75(CODE[4]), 
		 -> Conf2_ChannelH_3_OFF_STR(BANK5[21]), Conf2_ChannelH_3_ON_STR(BANK5[20]), Conf2_ChannelH_2_OFF_STR(BANK5[21]), Conf2_ChannelH_2_ON_STR(BANK5[20]), 
		 -> Conf2_ChannelH_1_OFF_STR(BANK5[21]), Conf2_ChannelH_1_ON_STR(BANK5[20]), Conf2_ChannelD_OFF_STR(BANK5[19]), Conf2_ChannelD_ON_STR(BANK5[18]), 
		 -> Conf2_ChannelB_OFF_STR(BANK5[19]), Conf2_ChannelB_ON_STR(BANK5[18]), Conf1_ChannelF_STR(BANK4[15]), Conf1_ChannelE_STR(BANK4[15]), 
		 -> Conf1_ChannelD_STR(BANK4[15]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 64
		 -> STR_101(CODE[36]), STR_86(CODE[13]), STR_77(CODE[13]), STR_74(CODE[17]), 
		 -> STR_73(CODE[64]), STR_71(CODE[27]), STR_70(CODE[44]), STR_67(CODE[50]), 
		 -> STR_66(CODE[50]), STR_64(CODE[31]), STR_63(CODE[31]), STR_62(CODE[37]), 
		 -> STR_61(CODE[37]), STR_60(CODE[37]), STR_58(CODE[18]), STR_57(CODE[14]), 
		 -> STR_56(CODE[9]), STR_55(CODE[20]), STR_54(CODE[16]), STR_53(CODE[7]), 
		 -> STR_52(CODE[35]), STR_51(CODE[37]), STR_48(CODE[47]), STR_43(CODE[16]), 
		 -> STR_42(CODE[9]), STR_41(CODE[18]), STR_40(CODE[9]), STR_39(CODE[22]), 
		 -> STR_38(CODE[11]), STR_37(CODE[20]), STR_36(CODE[7]), STR_35(CODE[31]), 
		 -> STR_34(CODE[33]), STR_30(CODE[32]), STR_25(CODE[29]), STR_23(CODE[29]), 
		 -> SYNTAX_ERR(BANK5[29]), UseBluetooth@buf(BANK2[50]), STR_3(CODE[16]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> STR_100(CODE[28]), STR_65(CODE[14]), SYNTAX_ERR(BANK5[29]), STR_20(CODE[5]), 
		 -> STR_18(CODE[5]), STR_16(CODE[6]), STR_14(CODE[6]), STR_12(CODE[9]), 
		 -> STR_10(CODE[21]), STR_8(CODE[10]), BluetoothInitialSetup@buf(BANK1[50]), STR_4(CODE[4]), 
		 -> STR_2(CODE[3]), STR_1(CODE[3]), CRLN(BANK0[3]), ReceivedString(BANK6[255]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK6[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK6[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK6[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_59(CODE[7]), STR_45(CODE[4]), STR_44(CODE[13]), STR_26(CODE[4]), 
		 -> STR_24(CODE[6]), STR_22(CODE[6]), UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> Conf2_Channels(BANK1[4]), Conf1_Channels(BANK2[4]), ReceivedString(BANK6[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_21(CODE[4]), STR_17(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> STR_5(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK9[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> Conf2_ChannelH_3_OFF_STR(BANK5[21]), Conf2_ChannelH_3_ON_STR(BANK5[20]), Conf2_ChannelH_2_OFF_STR(BANK5[21]), Conf2_ChannelH_2_ON_STR(BANK5[20]), 
		 -> Conf2_ChannelH_1_OFF_STR(BANK5[21]), Conf2_ChannelH_1_ON_STR(BANK5[20]), Conf2_ChannelD_OFF_STR(BANK5[19]), Conf2_ChannelD_ON_STR(BANK5[18]), 
		 -> Conf2_ChannelB_OFF_STR(BANK5[19]), Conf2_ChannelB_ON_STR(BANK5[18]), Conf1_ChannelF_STR(BANK4[15]), Conf1_ChannelE_STR(BANK4[15]), 
		 -> Conf1_ChannelD_STR(BANK4[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK6[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_72(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK6[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> StringAddEqual@temp(BANK1[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> ReceivedString(BANK6[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK8[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[50]), BluetoothInitialSetup@RFchannel(BANK1[10]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> CommandString(BANK9[255]), StringAddEqual@temp(BANK1[100]), ReceivedString(BANK6[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _main->_UseBluetooth
    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _Init_System->_SetEEPROMdefault
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    ___lltoft->___ftpack
    _Round->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _SyncEEPROMToGlobal->_GetEEPROM
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _SyncEEPROMToGlobal->_GetEEPROM

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    _Init_System->_SyncEEPROMToGlobal

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  209444
                                             97 BANK0      3     3      0
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                       _UseBluetooth
                          _UseIRCode
                             ___ftge
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     392
                                             21 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           11     5      6   18323
                                             84 BANK0     11     5      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    7332
                                             32 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    2116
                                             30 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (3) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                        92    92      0   87439
                                             85 BANK0     12    12      0
                                              0 BANK2     80    80      0
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                _GetStringAfterComma
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncGlobalToEEPROM
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     153
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   15013
                                             30 BANK0      1     1      0
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN                                       2     0      2    8353
                                             24 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4    7440
                                             24 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    2260
                                             24 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     240
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    1644
                                             24 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2    8996
                                             36 BANK0      4     2      2
                                              0 BANK1    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    4244
                                             29 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    7310
                                             27 BANK0      5     0      5
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               6     1      5     566
                                             21 BANK0      6     1      5
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    3707
                                             42 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1039
                                             37 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4     823
                                             21 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     532
                                             21 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    2738
                                             33 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     386
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     322
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      44
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     515
                                             25 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1243
                                             25 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     207
                                             21 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          8     5      3   12116
                                             62 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2234
                                             29 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2704
                                             47 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2658
                                             32 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     6     4      2    2339
                                             30 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0   80804
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                         _UARTstring
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 252   252      0    2216
                                             59 BANK0      4     4      0
                                              0 BANK3    248   248      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                          497   251    246    1718
                                             57 BANK0      2     2      0
                                              0 BANK1    246     0    246
                                              0 BANK2    249   249      0
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     4     4      0    5095
                                             84 BANK0      4     4      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   10248
                                             63 BANK0     18    14      4
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2281
                                             29 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    6159
                                             56 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             41 BANK0     15    11      4
                            ___ftadd (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3320
                                             29 BANK0     12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2350
                                             29 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2148
                                             21 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     284
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     219
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     219
                                             21 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0   45225
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               61    61      0   34727
                                              0 BANK1     61    61      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             46    32     14    8546
                                             43 BANK0     42    28     14
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     540
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             34 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     857
                                             21 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0   13854
                                             30 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    3605
                                             21 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2    4488
                                             22 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _StringContains                                       6     2      4    1584
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    2070
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    2070
                                             21 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    4823
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0    4823
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    4823
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                          260    10    250    4823
                                             74 BANK0     10    10      0
                                              0 BANK1    250     0    250
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2167
                                             57 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     719
                                             24 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    1912
                                             30 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    4     1      3     985
                                             21 BANK0      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     560
                                             24 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     3     1      2     515
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1412
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                          _ReadUSART
                    i1_BlueConnected
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     203
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     429
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     267
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0     130
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    2433
                                              0 BANK0     21    21      0
                         _IRrawToNEC
                        _ResetTimer3
                        i2_ReadIRpin
                      i2_ResetTimer0
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    2207
                                             26 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _Init_System
     _EEPROMinitialized
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           _isdigit
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTstring
       _UARTchar
     _cleanBuffer
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UseBluetooth
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _WaitForIRsignal
       _UARTchar
       _UARTstring
         _UARTchar
       _UARTstringCRLN
         _UARTchar
         _UARTstring
           _UARTchar
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftge
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   _ReadUSART
   i1_BlueConnected
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   i2_ReadIRpin
   i2_ResetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0      FF      23       99.6%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0      C2      21       75.8%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      F6      19       96.1%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      F2      15       94.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F5      13       95.7%
BITBANK3           100      0       0      10        0.0%
BANK3              100     F8      F8      11       96.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     F9     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FA      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      79       5       75.6%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      43       1       70.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     94F      32        0.0%
DATA                 0      0     94F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 09 14:10:04 2015

                       BufferCopy@shift 0082                      UARTstringCRLN@data 0078  
                          ___altoft@exp 0085                 __size_of_StringContains 00B2  
                         ??_EraseScreen 0002                             _IRcodePlace 0040  
                         ___altoft@sign 0086                    ?_BluetoothConfigured 0001  
                                    l62 4F16                                      _SN 003B  
                   ?_SyncGlobalToEEPROM 0001                                      bsr 000FE0  
                   ___wmul@multiplicand 0077                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 0088  
                          ___ftadd@exp2 0087                             ?_LEDTimerON 0001  
                    lowercaseChar@Input 0075                            ___ftadd@sign 0086  
                            _SYNTAX_ERR 0500                                     l160 728C  
                                   l161 727C                                     l336 4B84  
                                   l441 76FC                                     l433 6E66  
                                   l435 6E76                                     l436 6E78  
                                   l429 6E42                                     l533 6966  
 StringContainsCaseInsensitive@tempThat 007E                                     l652 778C  
                                   l645 74C8                                     l717 4D8A  
                                   l680 4A32                                     l658 7454  
                                   l693 4AE0                                     l685 4A26  
                                   l688 4AEC   StringContainsCaseInsensitive@tempThis 007D  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000                    lowercaseString@Input 0075  
                            _IRrawToNEC 3E84                           _IRbitPosition 003F  
                   __end_of_IsCharacter 7752                            __CFG_BORV$27 000000  
                                   prod 000FF3                                     wreg 000FE8  
                            _IRsendCode 0029                              _IRsendFlag 00CB  
                         _InitBluetooth 7212                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0089                            ___ftdiv@sign 008E  
                                  l2302 4548                                    l2304 4572  
                                  l2313 4656                                    l1601 1198  
                                  l2410 6576                                    l1514 3B9A  
                                  l2322 4680                                    l1354 7308  
                                  l2420 68E8                                    l2333 5510  
                                  l2269 5A20                                    l1822 2508  
                                  l1574 0978                                    l1920 2DAC  
                                  l1904 2C7E                                    l2298 450E  
                                  l1749 6194                                    l1846 26BE  
                                  l1865 28E4                                    l8010 6DA6  
                                  l8002 6EC4                                    l8102 5E2A  
                                  l8008 6D94                                    l8112 5E40  
                                  l8040 4CF6                                    l8114 5E46  
                                  l8106 5E30                                    l8034 4CE6  
                                  l6700 5F98                                    l8124 5E98  
                                  l8108 5E36                                    l8036 4CEC  
                                  l7502 4568                                    l8118 5E50  
                                  l8062 4DB0                                    l8046 4D7E  
                                  l8222 6F3C                                    l8214 6F04  
                                  l8080 7734                                    l7520 45EA  
                                  l7512 45AA                                    l8128 5E9E  
                                  l8056 4DA0                                    l8048 4D82  
                                  l7432 61A4                                    l8304 6310  
                                  l8224 6F4A                                    l8240 6ADE  
                                  l8320 7412                                    l6802 4A64  
                                  l7530 4636                                    l7522 45FA  
                                  l8090 5DD2                                    l8058 4DA6  
                                  l8402 37C8                                    l7450 6214  
                                  l8306 6318                                    l8234 6F6E  
                                  l8218 6F38                                    l8250 6B30  
                                  l8314 73E8                                    l8322 741A  
                                  l6820 4AE6                                    l6812 4A7E  
                                  l7612 70B6                                    l7700 6E46  
                                  l7532 4646                                    l7524 4606  
                                  l8092 5DD8                                    l8068 4E38  
                                  l8420 3888                                    l8340 36AA  
                                  l7460 6246                                    l7444 61DA  
                                  l7436 61B8                                    l6806 4A6E  
                                  l7518 45DA                                    l8086 5DC8  
                                  l7606 76E2                                    l8422 3890  
                                  l8414 387A                                    l8334 3696  
                                  l8326 365C                                    l7462 624C  
                                  l7446 61E2                                    l8254 6B34  
                                  l6672 7518                                    l6808 4A74  
                                  l7616 70DA                                    l7712 6E6A  
                                  l7704 6E50                                    l8096 5DE2  
                                  l8424 3898                                    l8360 3714  
                                  l8352 3700                                    l8336 369E  
                                  l8272 625A                                    l8256 6B42  
                                  l6762 4972                                    l7474 69C8  
                                  l7538 46AC                                    l7490 451C  
                                  l7810 57D0                                    l7802 5778  
                                  l8442 391C                                    l8434 38E0  
                                  l8346 36CE                                    l8266 6B62  
                                  l6772 49AA                                    l6940 7822  
                                  l7708 6E5A                                    l7476 69DA  
                                  l7548 46FC                                    l7580 562C  
                                  l8452 399C                                    l8428 38BC  
                                  l8364 3734                                    l8292 62F2  
                                  l6790 4A2C                                    l6782 49C4  
                                  l6950 739A                                    l6870 59AC  
                                  l6862 5954                                    l7590 566A  
                                  l7558 5584                                    l7814 57D6  
                                  l8454 39F0                                    l8438 38FE  
                                  l8462 39FA                                    l8390 379C  
                                  l8374 3760                                    l8534 5A6A  
                                  l6776 49B4                                    l6768 499E  
                                  l7496 4556                                    l7576 5618  
                                  l8472 3A42                                    l8384 3796  
                                  l8464 3A02                                    l8368 374E  
                                  l8552 5ACA                                    l7832 6CEA  
                                  l7824 6C9C                                    l6778 49BA  
                                  l6890 5A4A                                    l6874 59CE  
                                  l6866 596A                                    l7594 5688  
                                  l7586 564A                                    l7770 56DC  
                                  l8546 5AA0                                    l8538 5A8C  
                                  l8298 6306                                    l8706 77EA  
                                  l7692 6E2E                                    l6884 5A2C  
                                  l6876 5A00                                    l6868 597A  
                                  l7588 565C                                    l7764 56CC  
                                  l8468 3A24                                    l8396 37B4  
                                  l8572 5B10                                    l8564 5AFA  
                                  l7844 77CC                                    l8740 4250  
                                  l6798 4A52                                    l6878 5A10  
                                  l7782 573E                                    l7774 56E6  
                                  l8902 54CE                                    l8558 5ADC  
                                  l8750 42CC                                    l8742 4274  
                                  l7696 6E38                                    l7688 6E22  
                                  l7792 575E                                    l7768 56D6  
                                  l8912 5522                                    l8592 5B72  
                                  l8760 432A                                    l8744 4298  
                                  l9800 63B0                                    l7858 771C  
                                  l7786 5744                                    l8922 5170  
                                  l8578 5B24                                    l8586 5B4A  
                                  l8770 4388                                    l8754 42F6  
                                  l8738 422C                                    l7796 5768  
                                  l8780 43E6                                    l8764 4354  
                                  l7798 576E                                    l8950 5236  
                                  l8942 51FA                                    l8694 6838  
                                  l8686 67D2                                    l8790 4444  
                                  l8774 43B2                                    l9806 63F4  
                                  l8960 527A                                    l8952 523E  
                                  l8928 51AA                                    l8784 4410  
                                  l8882 546C                                    l8946 521A  
                                  l7986 753E                                    l8876 5432  
                                  l8956 525E                                    l8796 446E  
                                  l7998 6E9C                                    STR_1 FFFC  
                                  STR_2 FFFC                                    STR_3 FF1E  
                                  STR_4 FFE0                                    STR_5 FFEC  
                                  l9796 636E                                    STR_6 FD1E  
                                  STR_7 FFF4                                    STR_8 FF8B  
                                  STR_9 FFF4                    ??_SyncGlobalToEEPROM 00B4  
                                  _CRLN 00D6                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  u7000 1F1A                                    u7010 1F86  
                                  u7100 2352                                    u7020 1FF2  
                                  u7005 1F0E                                    u7110 23BE  
                                  u7030 205E                                    u7015 1F7A  
                                  u6320 5EDC                                    u7120 2442  
                                  u7040 20CA                                    u7105 2346  
                                  u7025 1FE6                                    u7050 2136  
                                  u7115 23B2                                    u7035 2052  
                                  u7060 21A2                                    u6325 5ED0  
                                  u8101 5560                                    u7125 2436  
                                  u7045 20BE                                    u7070 220E  
                                  u7055 212A                                    u8120 55AA  
                                  u7080 227A                                    u7065 2196  
                                  u7090 22E6                                    u7075 2202  
                                  u9020 628A                                    u8125 55A0  
                                  u7085 226E                                    u7095 22DA  
                                  u9040 62E8                                    u6811 7364  
                                  u9027 6280                                    u9047 62DE  
                                  u6905 1AAE                                    u8275 6674  
                                  u6915 1B08                                    u6835 1838  
                                  u7901 44DA                                    u6925 1B62  
                                  u6845 1892                                    u8471 57E0  
                                  u9415 3920                                    u6935 1BBC  
                                  u6855 18EC                                    u6945 1C16  
                                  u6865 1946                                    u6955 1C70  
                                  u6875 19A0                                    u6980 1E42  
                                  u8741 4CBC                                    u6965 1CCA  
                                  u6885 19FA                                    u6990 1EAE  
                                  u6975 1D24                                    u6895 1A54  
                                  u9800 6818                                    u6985 1E36  
                                  u7891 44BC                                    u6995 1EA2  
                                  u9805 680C                                    _TMR2 000FCC  
                                  _WPUB 000F7C                          ?i2_ResetTimer0 0001  
                                  _Sent 00D5              WriteEEPROM_1Byte@GIEstatus 0078  
             SetMemoryChar@AddressFirst 007E                                    _main 4E48  
                          ___ftpack@arg 0075                            ___ftpack@exp 0078  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                            SetEEPROM@i 00B2                                    fsr1l 000FE1  
                                  indf2 000FDF                              SetEEPROM@j 00B3  
                                  fsr2l 000FD9                              _RFsendCode 04E1  
                            _RFsendFlag 0036                                    pclat 000FFA  
                      i1_UARTstringCRLN 7044                             _RFcodePlace 0035  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 01E8                           __CFG_IESO$OFF 000000  
                      Reverse_Byte@This 0078                            _sprintf$2911 00A4  
                          _sprintf$2904 00A0                            _sprintf$2905 00A2  
                      Reverse_Byte@temp 0077                           __CFG_MCLRE$ON 000000  
                          ___ftmul@cntr 009C                          UARTstring@data 0076  
                           ?i1_UARTchar 0001                            ___param_bank 000010  
                          ___ftmul@sign 009D                         __end_of_InitADC 7780  
                       __end_of_InitApp 73E6   __end_of_StringContainsCaseInsensitive 632C  
__size_of_StringContainsCaseInsensitive 00DA           _StringContainsCaseInsensitive 6252  
               __size_of_ReadPushButton 000E                   ??_BluetoothConfigured 00B4  
                          ___fttol@exp1 0097                           ??_Init_System 00B8  
                          ___fttol@lval 0093                    _Conf2_ChannelH_1_OFF 0440  
                     IRrawToNEC@NECtemp 0022                    _Conf2_ChannelH_2_OFF 0460  
                  _Conf2_ChannelH_3_OFF 05E2                                   l11000 6C5E  
                                 l11010 6FA4                                   l11006 6F76  
                                 l11024 3AA8                                   l11114 3DF8  
                                 l11034 3B24                                   l11210 4BF4  
                                 l11220 4C24                                   l11204 4BBA  
                                 l10510 7830                                   l11126 3E64  
                                 l11070 3C6A                                   l11230 4C88  
                                 l11206 4BC2                                   l11056 3BF4  
                                 l11216 4C1A                                   l11320 72F4  
                                 l11226 4C82                                   l11250 5BEC  
                                 l12202 4F12                                   l10460 7134  
                                 l11084 3CE0                                   l11244 5BB2  
                                 l11324 7300                                   l11316 72E8  
                                 l10606 64A0                                   l10702 272A  
                                 l10630 24D2                                   l10622 24AA  
                                 l11350 6A98                                   l11334 6A46  
                                 l11254 5BF8                                   l11238 5B80  
                                 l11502 47F0                                   l10472 66FE  
                                 l10464 7162                                   l10456 7114  
                                 l10544 64F0                                   l10528 7614  
                                 l10800 2A0C                                   l10624 24C0  
                                 l10616 248A                                   l11280 6920  
                                 l11344 6A84                                   l11352 6A9E  
                                 l11192 4B66                                   l11264 5C64  
                                 l11248 5BE4                                   l11600 045C  
                                 l11512 4828                                   l12232 4FB4  
                                 l12208 4F4A                                   l10490 6782  
                                 l10546 6502                                   l10722 27B0  
                                 l10706 273E                                   l10714 277A  
                                 l10642 2534                                   l10650 25AE  
                                 l10626 24C6                                   l10634 24E0  
                                 l11098 3D56                                   l11338 6A70  
                                 l11194 4B8A                                   l11258 5C48  
                                 l11522 4874                                   l12218 4F68  
                                 l10484 676E                                   l10468 7190  
                                 l10556 6562                                   l10548 650C  
                                 l10572 68D4                                   l10564 6872  
                                 l10820 2AA4                                   l10804 2A1A  
                                 l10732 2800                                   l10724 27CE  
                                 l10708 2758                                   l10628 24CC  
                                 l11436 6D4E                                   l11284 692A  
                                 l11460 662C                                   l11348 6A90  
                                 l11356 6AA8                                   l11188 4B2C  
                                 l11196 4B90                                   l11268 5C80  
                                 l11620 05BA                                   l11612 052E  
                                 l11604 04A2                                   l11540 4904  
                                 l11524 487A                                   l12228 4FA4  
                                 l12180 4E76                                   l10566 6884  
                                 l10830 2B0C                                   l10814 2A5C  
                                 l10750 28C4                                   l10718 279C  
                                 l10670 2632                                   l10638 2514  
                                 l11198 4BAC                                   l11550 4920  
                                 l10496 678C                                   l10568 688E  
                                 l10920 2E06                                   l10904 2D78  
                                 l10824 2AD6                                   l10808 2A54  
                                 l10816 2A7C                                   l10760 2906  
                                 l10728 27E8                                   l10680 26AE  
                                 l10672 263E                                   l10736 2808  
                                 l11288 693C                                   l11392 6BE4  
                                 l11632 068C                                   l11624 0600  
                                 l11616 0574                                   l11608 04E8  
                                 l11528 4884                                   l11544 490C  
                                 l11472 4748                                   l12192 4EB0  
                                 l12176 4E6C                                   l10498 6794  
                                 l10578 6402                                   l10930 2E5E  
                                 l10914 2DC2                                   l10850 2BF4  
                                 l10770 295A                                   l10746 289C  
                                 l10738 285A                                   l10682 26B4  
                                 l10658 25E2                                   l11458 6618  
                                 l11378 6B96                                   l11642 06D2  
                                 l11482 479E                                   l10588 6418  
                                 l10932 2E6A                                   l10908 2DA4  
                                 l10852 2C00                                   l10844 2B9C  
                                 l10836 2B44                                   l10780 29A8  
                                 l10772 2960                                   l10764 2930  
                                 l10692 26EE                                   l10684 26BA  
                                 l10676 2686                                   l11820 116E  
                                 l11812 1136                                   l11628 0646  
                                 l11636 06B0                                   l11580 0368  
                                 l11572 02DC                                   l11548 491A  
                                 l10870 2C92                                   l10838 2B50  
                                 l10790 29C4                                   l10686 26C4  
                                 l10678 269E                                   l11830 11C4  
                                 l11806 1114                                   l11734 0D5C  
                                 l11670 084E                                   l11590 03AE  
                                 l11486 47A8                                   l10944 2F68  
                                 l10936 2E7E                                   l10952 3000  
                                 l10880 2CEA                                   l10864 2C76  
                                 l10856 2C38                                   l10784 29B0  
                                 l10776 296E                                   l10696 2714  
                                 l11912 1408                                   l11840 11E8  
                                 l11728 0D38                                   l11760 0EEC  
                                 l11576 0322                                   l11584 038C  
                                 l11496 47E0                                   l10962 3068  
                                 l10946 2F76                                   l10938 2EFC  
                                 l10954 3020                                   l10882 2CF6  
                                 l10858 2C44                                   l10794 29FE  
                                 l10786 29B6                                   l10698 2720  
                                 l10970 30B4                                   l11914 1446  
                                 l11834 11D2                                   l11922 146A  
                                 l11738 0D6A                                   l11770 0FD4  
                                 l11930 14C2                                   l11498 47E6  
                                 l10956 302C                                   l10948 2FA0  
                                 l10980 6C10                                   l11940 1570  
                                 l11844 11F6                                   l11764 0F20  
                                 l11692 098E                                   l11668 083A  
                                 l11596 0416                                   l10958 3034  
                                 l10886 2D06                                   l10894 2D3C  
                                 l10798 2A06                                   l11950 15D0  
                                 l11854 1220                                   l11790 1092  
                                 l11926 148E                                   l11686 0968  
                                 l10888 2D12                                   l10968 3092  
                                 l10992 6C38                                   l10984 6C1E  
                                 l11952 15D6                                   l11936 1566  
                                 l11848 1208                                   l11696 0A64  
                                 l10898 2D4E                                   l11858 122E  
                                 l11794 10A6                                   l11786 1070  
                                 l11778 102E                                   l11956 15E0  
                                 l11892 12FA                                   l11876 129A  
                                 l11966 1640                                   l11894 130C  
                                 l11886 12E0                                   l11798 10C8  
                                 l11898 1326                         __end_of_Version F870  
                         ??_ReadVoltage 00A1                                   ?_main 0001  
                __size_ofi1_cleanBuffer 003E                                   _EEADR 000FA9  
                       __end_of___ftadd 4724                                   STR_10 FDA8  
                                 STR_11 FFF4                                   STR_20 FFD1  
                                 STR_12 FF9F                                   STR_13 FFF4  
                                 STR_21 FFF0                                   STR_22 FFC5  
                                 STR_14 FFBF                                   STR_30 FB9E  
                                 STR_15 FFF4                                   STR_31 FDFA  
                                 STR_23 FC78                                   STR_16 FFBF  
                                 STR_32 FE39                                   STR_24 FFCB  
                                 STR_40 FFA8                                   STR_33 FE26  
                                 STR_17 FFF4                                   STR_41 FEA7  
                                 STR_25 FC95                                   STR_50 F9E6  
                                 STR_42 FF82                                   STR_26 FFE8  
                                 STR_18 FFD6                                   STR_34 FB1D  
                                 STR_43 FF0E                                   STR_27 FE35  
                                 STR_19 FCB2                                   STR_35 FC59  
                                 STR_51 FAB1                                   STR_36 FFB1  
                                 STR_44 FF73                                   STR_28 FE22  
                                 STR_52 FAFA                                   STR_60 FA67  
                                 STR_53 FFB1                                   STR_61 FA67  
                                 STR_45 FE1E                                   STR_37 FDD2  
                                 STR_29 FD4E                                   STR_38 FF80  
                                 STR_54 FEFE                                   STR_46 FDBD  
                                 STR_62 FA8C                                   STR_70 FA12  
                                 STR_55 FE0E                                   STR_39 FD92  
                                 STR_71 FCEA                                   STR_63 FC1B  
                                 STR_47 F9E6                                   STR_56 FFA8  
                                 STR_72 FFE4                                   STR_80 FD05  
                                 STR_64 FC3A                                   STR_48 F989  
                                 STR_65 FF4B                                   STR_57 FF3D  
                                 STR_81 FE94                                   STR_49 F9B8  
                                 STR_73 F870                                   STR_82 FFF8  
                                 STR_74 FEED                                   STR_58 FEB9  
                                 STR_90 FD7C                                   STR_66 F925  
                                 STR_75 FFE4                                   STR_59 FFB8  
                                 STR_91 FD65                                   STR_83 FD36  
                                 STR_67 F957                                   STR_84 FFDB  
                                 STR_76 FF95                                   STR_92 FE81  
                                 STR_68 F8B0                                   STR_77 FF66  
                                 STR_93 FDE6                                   STR_85 FA3E  
                                 STR_69 F8EF                                   STR_86 FF59  
                                 STR_78 FF2E                                   STR_94 FBBE  
                                 STR_79 FFF8                                   STR_87 FE48  
                                 STR_95 FB3E                                   STR_88 FE5B  
                                 STR_96 FBDD                                   STR_89 FE6E  
                                 STR_97 FB5E                                   STR_98 FBFC  
                                 STR_99 FB7E                         __end_of___ftdiv 554A  
                                 u10001 540E                                   _ANSEL 000F7E  
                       __end_of___lldiv 6588                                   u10021 5448  
                                 u10051 514C                                   u10071 5186  
                       __end_of___ftmul 52A2                                   u13101 2E3A  
                       __end_of___llmod 68FA                                   u12330 7184  
                                 u12340 71B2                                   u13220 6F98  
                       __end_of___fttol 569C                                   u13230 6FC6  
                                 u12360 672E                                   u12337 717A  
                                 u12347 71A8                                   u13227 6F8E  
                                 u12380 6764                                   u13420 5D16  
                                 u13237 6FBC                                   u14221 0ADE  
               ReadEEPROM_1Byte@address 0075                                   u12367 6724  
                                 u13425 5D0A                                   u13530 5BA2  
                                 u14250 0BE6                                   u12387 675A  
                                 u13540 5BD4                                   u13537 5B98  
                                 u13547 5BCA                                   u12950 2BE8  
                                 i1l441 7760                                   i1l453 77A2  
                   __end_of_EraseScreen 76CA                                   i2l930 31B4  
                                 i2l924 31DC                                   i2l941 35C8  
                                 i2l925 31D6                                   i2l926 31CC  
                                 i2l935 31D0                                   i2l936 31D8  
                                 i2l937 35EE                                   i2l954 32B6  
                                 i2l938 3222                                   i2l978 335A  
                                 i2l997 33E6                                   i2l998 33DC  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                                 _TMR0H 000FD7                                   _TMR1H 000FCF  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR1L 000FCE                                   _TMR3L 000FB2  
                                 _SPBRG 000FAF                              _BufferCopy 6BF2  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _RF_IR 0041  
                          InitUART@Baud 009F                                   _IRbit 002E  
                                 _IRmod 00CA                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                     _ConfigureOscillator 78BE  
                       __end_of_delayUS 72BE                           __CFG_PWRT$OFF 000000  
                      _InternalADC_Read 68FA                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                   ___lmul@multiplicand 0079                           __CFG_WRT3$OFF 000000  
                     _NewReceivedString 00CC                            ___lltoft@exp 0085  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        ?_InitBluetooth 0001                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                            SendRF@Code 0075                            InitUART@temp 00AD  
                          _IRrawCodeNum 0030                                   _Round 6FDE  
                         __CFG_WRTB$OFF 000000                   _BluetoothInitialSetup 3A60  
              __end_of_Local_CloseUSART 77FE                           __CFG_WRTC$OFF 000000  
                 __end_of_BlueConnected 7836                           __CFG_WRTD$OFF 000000  
                      ?_lowercaseString 0075                        __end_of_UARTchar 7706  
                        __CFG_EBTRB$OFF 000000                         __end_of_dpowers F847  
                            SendRF@size 0078                         __end_of_isdigit 7620  
                         ___ftpack@sign 0079                                   main@i 00C3  
                       __end_of_low_isr 01E8                                   tablat 000FF5  
                      _RF_IR_Postscaler 0042                                   plusw0 000FEB  
                                 plusw2 000FDB                             ?_UARTstring 0076  
               InternalADC_Read@channel 0083                                   status 000FD8  
                       __end_of_sprintf 30C4                          __CFG_HFOFST$ON 000000  
                  __size_of_cleanBuffer 005A                     __size_of_LEDTimerON 000C  
                 __end_of_GetMemoryChar 76A2                    ?_ConfigureOscillator 0001  
                 __end_of_GetMemoryLong 5136                           ??_SendRF_wait 0080  
                    StringContains@That 0077                      StringContains@This 0075  
                         high_isr@IRpin 0072                         __initialization 52A2  
                    StringAddEqual@temp 0100                   __end_of_EEPROM_UNLOCK 7796  
                      __end_of_IsLetter 76E8                              _InitTimer0 77D2  
                            _InitTimer1 780C                      _Conf1_ChannelD_STR 0490  
                            _InitTimer2 77FE                              _InitTimer3 7876  
                    __size_of_GetEEPROM 0150                           high_isr@Time0 0073  
                    _Conf1_ChannelE_STR 049F                      _Conf1_ChannelF_STR 04AE  
                            _InitTimers 77AC                            _IRrepeatflag 0032  
                    __size_of_DecodeNEC 00AE                            __end_of_main 4FC6  
                 __end_of_Reverse_4Byte 247A                        ??_UARTstringCRLN 007A  
                      __end_of_InitUART 5DA4                  WaitForIRsignal@timeout 007E  
          __size_of_GetStringAfterComma 011E                          GetNumber@count 008E  
                           _IsCharacter 773A                                  ??_main 00C1  
                         ___fttol@sign1 0092                        __end_of_ResetADC 7844  
                     GetNumber@negative 008D                           __activetblptr 000002  
                    SendRF@RepeatAmount 0079                             ?_IRrawToNEC 001B  
                    __size_of_GetNumber 0436                         _WaitForIRsignal 6B68  
                    __size_of_EncodeNEC 014E                     __end_of_Init_System 6D8C  
                     SetEEPROMdefault@i 00B6                       SetEEPROMdefault@j 00B7  
                 _Conf2_ChannelB_ON_STR 05BE                           ?_SendNEC_wait 008A  
                 _Conf2_ChannelD_ON_STR 05D0                  __size_of_SendNEC_bytes 008A  
                                ?_Round 0098                     __end_of_ReadVoltage 6640  
                     GetNumber@tempThis 0090                              UseIRCode@i 00BE  
                        _StringAddEqual 4AFE                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                   __size_ofi1_UARTchar 0018                        __end_of___altoft 6A3E  
                      ___llmod@dividend 0082                                  STR_100 FCCE  
                                STR_101 FAD6                                  STR_102 FECB  
                                STR_103 FEDC                                  _ADRESH 000FC4  
                                _EEADRH 000FAA                                  _ADRESL 000FC3  
                                _EEDATA 000FA8                                  _EECON2 000FA7  
                       ??i2_ResetTimer0 001B                        __end_of___ftpack 5A5A  
                                _ANSELH 000F7F                       ?_VoltageDividerON 0001  
                 _Conf2_ChannelB_Status 00C4                           ??_ResetTimer0 0075  
                         ??_ResetTimer1 0075                           ??_ResetTimer3 001B  
                      __end_of___lltoft 6E0C                                  i1l1051 0182  
                                i1l1066 01A0                                  i1l1067 019C  
                                i2l1004 340E                                  i2l1044 35EA  
                        __CFG_WDTEN$OFF 000000                                  i1l9600 774C  
                                i1l9848 784C                        __end_of___lwtoft 7678  
                    __size_of_ReadUSART 0016                   _Conf2_ChannelD_Status 00C5  
                                _IR_NEC 00CE                      __size_of_ReadIRpin 000E  
                                _SPBRGH 000FB0                      ??_VoltageDividerON 0075  
                         i1_cleanBuffer 746A                          SetMemoryLong@H 00A6  
                        SetMemoryLong@L 00A9                      __size_of_SetEEPROM 01C4  
                             ??_InitADC 0075                               ??_InitApp 0075  
                 ??_ConfigureOscillator 0075                                  _Global 0700  
                                _InitIR 7312                                  _SendRF 6172  
                        __CFG_XINST$OFF 000000                         _UARTcommandMenu 5B78  
              GetStringAfterComma@count 007C                           InitUART@spbrg 00AA  
                      __end_of_high_isr 362A                         _ReadCodeButtons 72BE  
                    __size_of_OpenUSART 007C                          _StringContains 66F6  
                                ___ftge 632C                                  ___lmul 6E88  
              SendNEC_wait@RepeatAmount 008E                                  ___wmul 7556  
            __end_of_SyncEEPROMToGlobal 4E48                               ??___ftadd 0083  
                        __CFG_STVREN$ON 000000                               ??___ftdiv 0086  
           ?_StringMatchCaseInsensitive 0078                               ??___lldiv 007D  
                             ??___ftmul 0095                             _EraseScreen 76A2  
                             ??___llmod 008A                               ??___fttol 008D  
                     cleanBuffer16bit@i 007C                      __size_of_ResetBlue 0032  
                   __end_of_SendRF_wait 7556                       ?_SetEEPROMdefault 0001  
                                clear_0 52AA                                  clear_1 52BC  
                                clear_2 52C8                                  clear_3 52D6  
                                clear_4 52E8                                  clear_5 52FC  
                                clear_6 5308                               ??_delayUS 0079  
                    __size_of_UseIRCode 0216                      ??_SetEEPROMdefault 00B4  
                 ___ftmul@f3_as_product 0099                     __size_of_UARTstring 005A  
                       ??_InitBluetooth 00B5                             ?_BufferCopy 007D  
                     ?_cleanBuffer16bit 0075                            __pdataCOMRAM 003B  
                             ??_isdigit 0075                          ??_SendNEC_wait 008F  
                ?_BluetoothInitialSetup 0001                  __end_of_StringAddEqual 4CB2  
                          __mediumconst F7EE                          EncodeNEC@temp1 0091  
                        EncodeNEC@temp2 0095                          EncodeNEC@temp3 0099  
                        EncodeNEC@temp4 009D                            ?i2_ReadIRpin 0001  
                             ??_low_isr 0009                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                    ??_cleanBuffer16bit 0079                      IRrawToNEC@StartBit 0028  
                SyncEEPROMToGlobal@Temp 0300                        _CommandStringPos 002D  
                     __end_of_GetEEPROM 57EC                   __end_of_lowercaseChar 764C  
                     __end_of_DecodeNEC 6856                               ??_sprintf 0099  
                       __CFG_FOSC$HSPLL 000000                          ?i1_cleanBuffer 0001  
                  UARTcommandMenu@place 0082                              __accesstop 0060  
               __end_of__initialization 53EE                              ___altoft@c 007D  
                            Round@input 0098                         __CFG_PBADEN$OFF 000000  
                            ___ftadd@f1 007D                              ___ftadd@f2 0080  
                            ___ftge@ff1 0075                              ___ftge@ff2 0078  
                    UseBluetooth@device 0241                           ___rparam_used 000001  
                   StringAddEqual@Input 0084                              ___ftdiv@f1 0080  
                            ___ftdiv@f2 0083                              ___ftdiv@f3 008A  
                   StringContains@begin 007A                       __end_of_GetNumber 3A60  
                __end_of_StringContains 67A8                      UseBluetooth@rfconf 0249  
                     __end_of_EncodeNEC 593A               __size_of_ReadEEPROM_1Byte 003C  
                   __end_of_ResetTimer0 788A                     __end_of_ResetTimer1 7876  
                   __end_of_ResetTimer3 789E                     __size_of_IRrawToNEC 03A2  
                            ___ftmul@f1 008F                              ___ftmul@f2 0092  
                         _SendNEC_bytes 6C7C                              ___fttol@f1 0089  
                        __pcstackCOMRAM 0001                             ?_InitTimer0 0001  
                           ?_InitTimer1 0001                             ?_InitTimer2 0001  
                           ?_InitTimer3 0001                             ?_InitTimers 0001  
                    _Conf2_ChannelB_OFF 0400                      _Conf2_ChannelD_OFF 0420  
                         __end_of_Round 7044                          _ReadPushButton 77E2  
                          __pidataBANK0 78AE                            __pidataBANK1 78B2  
                          __pidataBANK2 78B6                            __pidataBANK4 6090  
                          __pidataBANK5 5F9E                            __pidataBANK8 758E  
             __size_of_EnterCommandMode 00C8                              ___lltoft@c 007D  
                             ?_UARTchar 0001                 __end_of_WaitForIRsignal 6BF2  
                           _Init_System 6D06                     SyncEEPROMToGlobal@i 03F6  
                   SyncEEPROMToGlobal@j 03F7                _Conf2_ChannelH_1_OFF_STR 051D  
                     __end_of_ReadUSART 77AC                       __end_of_ReadIRpin 7828  
                         ?i1_UARTstring 0002                            ??_LEDTimerON 0075  
                            ___lwtoft@c 007D               __size_of_CheckReceivingIR 0012  
                           _ReadVoltage 6588                _Conf2_ChannelH_2_OFF_STR 0532  
                     __end_of_SetEEPROM 4AFE                         ReadVoltage@temp 00A4  
              __end_ofi1_UARTstringCRLN 70A8                _Conf2_ChannelH_3_OFF_STR 0547  
                       GetNumber@result 0084                         ?_StringAddEqual 0084  
                               ??_Round 009B                           ReadUSART@data 0001  
                     __end_of_OpenUSART 6E88                               ?_IsLetter 0001  
                          sprintf@width 00B0                  __size_of_SetMemoryChar 003A  
                            __pbssBANK0 00C4                              __pbssBANK2 02FD  
                            __pbssBANK4 04E1                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              __pbssBANK8 0800  
                            __pbssBANK9 0900                  __size_of_SetMemoryLong 00FA  
                     _EEPROMinitialized 7722                               ?_InitUART 009F  
                     __end_of_ResetBlue 75F2                 __end_of_UARTcommandMenu 5C92  
                _Conf2_ChannelB_OFF_STR 0598                       __end_of_UseIRCode 493A  
                    ReadVoltage@voltage 00A1                 __end_of_ReadCodeButtons 7312  
                           _ReceivingIR 0043                      ?_EEPROMinitialized 0001  
                         ??_StringMatch 0079                  _Conf2_ChannelD_OFF_STR 05AB  
              __size_ofi1_BlueConnected 000E                   WriteEEPROM_1Byte@data 0077  
                             ?_ResetADC 0001                      __end_of_LEDTimerON 786C  
                               ?_InitIR 0001                         ?_StringContains 0075  
                        ?_SendNEC_bytes 0085                  __end_of_ReadPushButton 77F0  
              __end_of_InternalADC_Read 699C                     __size_of_BufferCopy 008A  
                               ?_SendRF 0075                             _SendRF_wait 751E  
                          ??i1_UARTchar 0001                                 ?___ftge 0075  
                   ??_EEPROMinitialized 00B4                                 ?___lmul 0075  
                               ?___wmul 0075                           ?_Reverse_Byte 0001  
                            ??_UARTchar 0075                       _VoltageDividerOFF 78BA  
                             ?___altoft 007D                          ___lmul@product 007D  
                        ??i1_UARTstring 0004                               ?___ftpack 0075  
                 EnterCommandMode@count 007E                   cleanBuffer16bit@count 0077  
                             ?___lltoft 007D                      ?_VoltageDividerOFF 0001  
             SendNEC_bytes@RepeatAmount 0089                               ?___lwtoft 007D  
                               i1l11400 71BC                                 i1l11404 71E8  
                               i1l12140 748C                                 i1l12144 7046  
                               i1l12136 7474                                 i1l12148 7072  
                               i1l12720 0130                                 i1l12708 00F2  
                               i1l12734 017E                                 i1l12744 0198  
                               i1l12728 0162                                 i1l11974 76B0  
                               i1l12696 00B4                                 i1l12688 0094  
                               i1l11978 76BA                                 i2l12000 3EE6  
                               i2l12010 3F2A                                 i2l12100 4196  
                               i2l12012 3F50                                 i2l12006 3F26  
                               i2l12112 41D6                                 i2l12016 3F54  
                               i2l12122 4214                                 i2l12106 41D0  
                               i2l12130 4220                                 i2l12050 4084  
                               i2l12042 4078                                 i2l12126 421A  
                               i2l12062 40D0                                 i2l12070 40F2  
                               i2l12054 408C                                 i2l12046 407E  
                               i2l12038 4040                                 i2l12320 327E  
                               i2l12082 414E                                 i2l12162 785A  
                               i2l12330 3296                                 i2l12092 4178  
                               i2l12084 4154                                 i2l12404 332C  
                               i2l12412 3336                                 i2l12340 32A6  
                               i2l12332 329A                                 i2l12324 328A  
                               i2l12422 334A                                 i2l12350 32C0  
                               i2l12270 3194                                 i2l12088 415A  
                               i2l12512 3418                                 i2l12360 32D4  
                               i2l12610 3540                                 i2l12602 3510  
                               i2l12506 3400                                 i2l12442 3370  
                               i2l12434 3360                                 i2l12530 343E  
                               i2l12274 31BC                                 i2l12604 351E  
                               i2l12460 3390                                 i2l12452 3382  
                               i2l12444 3374                                 i2l12380 3312  
                               i2l12372 32EE                                 i2l12276 31C2  
                               i2l12622 355C                                 i2l12550 3476  
                               i2l12518 342C                                 i2l12438 336C  
                               i2l12366 32E2                                 i2l12534 3448  
                               i2l12294 3216                                 i2l12278 31C8  
                               i2l12640 359A                                 i2l12608 352E  
                               i2l12472 33A6                                 i2l12384 3318  
                               i2l12480 33BA                                 i2l12642 35A0  
                               i2l12626 3576                                 i2l12554 3486  
                               i2l12466 339C                                 i2l12564 34A8  
                               i2l12670 35DE                                 i2l12654 35BE  
                               i2l12646 35AA                                 i2l12590 34F4  
                               i2l12478 33B0                                 i2l12672 35E6  
                               i2l12648 35B2                                 i2l12584 34D8  
                               i2l12576 34C6                                 i2l12488 33CC  
                               i2l12578 34CC                                 i2l12586 34DE  
                               i2l12658 35C4                                 i2l12498 33EC  
                               i2l11990 3EA8                                 i2l11986 3EA0  
                      i1UARTstring@data 0002                           UseIRCode@Code 00B4  
                     _ReceivedStringPos 00CD                     ??_VoltageDividerOFF 0075  
                       SetMemoryLong@MH 00A7                         SetMemoryLong@ML 00A8  
                     ?_Local_CloseUSART 0001               __end_of_EEPROMinitialized 773A  
               BluetoothInitialSetup@ok 013C                     __size_of_InitTimer0 0010  
                   __size_of_InitTimer1 000E                     __size_of_InitTimer2 000E  
                   __size_of_InitTimer3 000A                         ??i1_cleanBuffer 0005  
                            ??_IsLetter 0075                     __size_of_InitTimers 0014  
                             ?_high_isr 0001                      __end_ofi1_UARTchar 776A  
                   _GetStringAfterComma 5A5A                      ??_Local_CloseUSART 0075  
           __size_of_SyncGlobalToEEPROM 0046                              ??_InitUART 00A3  
                           _ResetTimer0 7880                             _ResetTimer1 786C  
                           _ResetTimer3 7894     __size_of_StringMatchCaseInsensitive 008C  
                          ??_UARTstring 0078                                 SendRF@i 007A  
                         ?_UseBluetooth 0001                                 _InitADC 776A  
                               _InitApp 73A0                          UseBluetooth@ok 0243  
                           low_isr@data 001A             __end_of_BluetoothConfigured 7722  
               UseBluetooth@tempRFArray 0242                              ??_ResetADC 0075  
                        InitUART@config 00AC                                 __Hparam 0000  
                       ?_ReadPushButton 0001                         __size_of_InitIR 0048  
                               __Lparam 0000                    __end_of_SendNEC_wait 6ADC  
               __size_of_SendRF_Channel 0280                         __size_of_SendRF 00E0  
                          SendRF@Config 0077               __end_of_VoltageDividerOFF 78BE  
                     i1cleanBuffer@data 0001                          ??_Reverse_Byte 0075  
                               _Version F867                         __size_of___ftge 00CE  
                       __size_of___lmul 007A                                 ___ftadd 44A6  
                               ___ftdiv 53F8                                 ___lldiv 64C2  
                   __end_of_StringMatch 6F74                    ?_GetStringAfterComma 0075  
                       __size_of___wmul 0038                                 ___ftmul 5136  
                               ___llmod 6856                                 ___fttol 554A  
                         _SetMemoryChar 74E4                            ?_IsCharacter 0001  
                         _SetMemoryLong 5EA4                        ?_WaitForIRsignal 0001  
                            ??___altoft 0081                                 __pcinit 52A2  
                               _delayUS 7268                              ??___ftpack 007A  
                               __ramtop 1000                              ??___lltoft 0081  
                               __ptext0 4E48                                 __ptext1 632C  
                               __ptext2 4724                                 __ptext3 4226  
                               __ptext4 77E2                                 __ptext5 72BE  
                               __ptext6 7860                                 __ptext7 786C  
                               __ptext8 01EC                                 __ptext9 73E6  
                            ??___lwtoft 0080                               _T0CONbits 000FD5  
                     __end_of_hexpowers F867                               _T1CONbits 000FCD  
                     SetMemoryChar@Data 0080                                 _dpowers F81F  
                          ??_IRrawToNEC 0020                               _T2CONbits 000FCA  
                    __end_of_UARTstring 71BA                       SetMemoryChar@Test 007F  
                               _isdigit 75F2                               _T3CONbits 000FB1  
             GetMemoryLong@AddressFirst 0098                                 _low_isr 0018  
                          DecodeNEC@Nec 0079                           SetEEPROM@Temp 0100  
                         SetEEPROM@fail 00AC                           SetEEPROM@burn 01F6  
                         SetEEPROM@temp 00B0                                 _sprintf 247A  
                  __size_ofi2_ReadIRpin 000E                              ??_high_isr 0060  
                        __pintcode_body 30C4                    end_of_initialization 53EE  
                      SendNEC_wait@code 008A                       __end_of_octpowers F81F  
                         ??_cleanBuffer 0079                             _ProductName 0890  
                      ?_UARTcommandMenu 0078                          ??_UseBluetooth 00B5  
                         __Lmediumconst F7EE                                 int_func 30C4  
                             i1u1376_20 71DE                        ?_ReadCodeButtons 0001  
                             i1u1376_27 71D4                               i1u1377_20 720A  
                             i1u1377_27 7200                               i1u1494_20 7068  
                       ??_SendNEC_bytes 008A                               i1u1494_27 705E  
                             i1u1495_20 7094                               i1u1495_27 708A  
              __size_of_lowercaseString 0044                               i2u1471_40 3FE6  
                             i2u1469_40 3FAC                               i2u1478_40 40AA  
                       ___lldiv@divisor 0079                   EraseScreen@characters 0002  
                      _ReadEEPROM_1Byte 74A8                         ___lldiv@counter 0081  
                    __end_of_IRrawToNEC 4226                               _RCSTAbits 000FAB  
                               postdec1 000FE5                                 postdec2 000FDD  
                 ??_GetStringAfterComma 007A                        _EnterCommandMode 63FA  
                               postinc0 000FEE                                 postinc2 000FDE  
                        ?_SetMemoryChar 007E               __size_of_VoltageDividerON 0006  
                __size_of_BlueConnected 000E                            ?_EraseScreen 0001  
                        ?_SetMemoryLong 0099                       ??i1_BlueConnected 0001  
                             _IRRawCode 0800                 ??_BluetoothInitialSetup 00B5  
                     SetMemoryLong@Data 0099                        _CheckReceivingIR 77C0  
                     SetMemoryLong@Test 00A2                       GetMemoryLong@temp 0090  
                          ??_BufferCopy 0083                               _IRaddress 00D3  
                __size_of_GetMemoryChar 002A                               _TRISAbits 000F92  
                             _TRISBbits 000F93                      _SyncEEPROMToGlobal 4CB2  
                             _TRISCbits 000F94                          BufferCopy@from 007D  
                            main@IRtask 00C1                  __size_of_GetMemoryLong 0170  
                             _IRcodeBit 00C9              __size_of_EEPROMinitialized 0018  
                __size_of_EEPROM_UNLOCK 0016       StringContainsCaseInsensitive@That 007A  
     StringContainsCaseInsensitive@This 0078                               _IRcommand 00D4  
           __end_of_ConfigureOscillator 78C0                  __size_of_Reverse_4Byte 0C7E  
             __size_of_SetEEPROMdefault 0100                               _RFcodeBit 0034  
                   ?_SyncEEPROMToGlobal 0001                   __end_ofi2_ResetTimer0 7894  
                             _GetEEPROM 569C                       main@Bluetoothtask 00C2  
                  __end_ofi1_UARTstring 7212                               _DecodeNEC 67A8  
                           ___ftdiv@exp 008D                               _TXSTAbits 000FAC  
             __size_of_cleanBuffer16bit 005E                     UseBluetooth@tempNec 023D  
                           _StringMatch 6F02                     UseBluetooth@timeout 023C  
    __end_of_StringMatchCaseInsensitive 6B68              _StringMatchCaseInsensitive 6ADC  
                   __end_of_cleanBuffer 7160                       _Timer1_Postscaler 0038  
                        _IRrepeatAmount 0031                      __end_of_BufferCopy 6C7C  
                           ___ftmul@exp 0098                            ??_InitTimer0 0075  
                          ??_InitTimer1 0075                            ??_InitTimer2 0075  
                          ??_InitTimer3 0075                          __end_of_InitIR 735A  
                          ??_InitTimers 0075              __size_of_VoltageDividerOFF 0004  
                        __end_of_SendRF 6252                     _Conf2_ChannelH_1_ON 0450  
                   _Conf2_ChannelH_2_ON 0470                     _Conf2_ChannelH_3_ON 0480  
                             _GetNumber 362A                               _EncodeNEC 57EC  
        GetStringAfterComma@CommaNumber 0077                          __end_of___ftge 63FA  
                          ?_Init_System 0001                          __end_of___lmul 6F02  
                        _ReceivedString 0600                          __end_of___wmul 758E  
                  ??_SyncEEPROMToGlobal 009B                             _BAUDCONbits 000FB8  
                         __pidataCOMRAM 789E                        ??_StringAddEqual 0086  
                     __size_of_UARTchar 001E                            ?_ReadVoltage 009E  
                      IRrawToNEC@Invert 001F                       ?i1_UARTstringCRLN 0004  
                   start_initialization 52A2                               _ReadUSART 7796  
               __size_of_UARTstringCRLN 006A                       _Timer2_Postscaler 0039  
                             _ReadIRpin 781A                   __end_of_InitBluetooth 7268  
                      UseBluetooth@temp 024C                               _SetEEPROM 493A  
                         GetNumber@This 0081                      ??i1_UARTstringCRLN 0006  
                         _BlueConnected 7828                           GetNumber@temp 0091  
                  __end_of_Reverse_Byte 66F6                      __end_of_InitTimer0 77E2  
                    __end_of_InitTimer1 781A                      __end_of_InitTimer2 780C  
                    __end_of_InitTimer3 7880                      __end_of_InitTimers 77C0  
                      ??_StringContains 0079                              ?_GetEEPROM 0100  
                             _OpenUSART 6E0C                       __size_of_IsLetter 001E  
                 __size_of_SendNEC_wait 009E                              ?_DecodeNEC 0079  
                       ___llmod@divisor 0086                       __size_of_InitUART 0112  
                       ___llmod@counter 008A                               _ResetBlue 75C0  
                             _Sendcount 0037                                ??_InitIR 007D  
                        _SendRF_Channel 4226                 GetStringAfterComma@This 0075  
                          ?_SendRF_wait 007B                               _UseIRCode 4724  
                         _GetMemoryChar 7678                                ??_SendRF 007A  
                     _Timer3_Postscaler 003A               StringAddEqual@firstnumber 0164  
                       ??_SetMemoryChar 007F                           _GetMemoryLong 4FC6  
                     ?_InternalADC_Read 007E                         ??_SetMemoryLong 009E  
                              ??___ftge 007B                       __size_of_ResetADC 000E  
                              ??___lmul 007D                           _EEPROM_UNLOCK 7780  
                              ??___wmul 0079      StringContainsCaseInsensitive@begin 007C  
                     ??_lowercaseString 0077                              ?_GetNumber 0081  
                    ??_InternalADC_Read 0080                              ?_EncodeNEC 0079  
                         _Reverse_4Byte 17FC      StringMatchCaseInsensitive@tempThat 007D  
    StringMatchCaseInsensitive@tempThis 007C                  __size_of_lowercaseChar 002C  
                           __pdataBANK0 00D5                             __pdataBANK1 01FA  
                           __pdataBANK2 02F9                             __pdataBANK4 0400  
                           __pdataBANK5 0500                             __pdataBANK8 0890  
                      __CFG_LPT1OSC$OFF 000000                     UARTcommandMenu@Desc 007A  
                  GetNumber@CommaNumber 0083                WriteEEPROM_1Byte@address 0075  
                  __size_of_IsCharacter 0018                    __end_of_UseBluetooth 17FC  
                     __size_of___altoft 00A2                       __size_of___ftpack 0120  
             SetMemoryLong@AddressFirst 009D                               Round@temp 009B  
                      cleanBuffer@count 0077                       __size_of___lltoft 0080  
                           __pbssCOMRAM 0029                              ?_ReadUSART 0001  
        ?_StringContainsCaseInsensitive 0078                       __size_of___lwtoft 002C  
                            ?_ReadIRpin 0001                           __pcstackBANK0 0060  
                         __pcstackBANK1 0100                           __pcstackBANK2 0200  
                         __pcstackBANK3 0300                            _SendNEC_wait 6A3E  
                            ?_SetEEPROM 0100                       _Conf2_ChannelB_ON 0410  
                     _Conf2_ChannelD_ON 0430                          ?_BlueConnected 0001  
                          _isdigit$3180 0076          StringMatchCaseInsensitive@That 007A  
        StringMatchCaseInsensitive@This 0078                GetNumber@tempCommaNumber 008B  
               _Conf2_ChannelH_1_ON_STR 055C                            ?_ResetTimer0 0001  
                          ?_ResetTimer1 0001                            ?_ResetTimer3 0001  
                           _cleanBuffer 7106                 _Conf2_ChannelH_2_ON_STR 0570  
                      ??_ReadPushButton 0075                              ?_OpenUSART 0075  
               _Conf2_ChannelH_3_ON_STR 0584                       __size_of_high_isr 3622  
                           sprintf@flag 00B3                             sprintf@prec 00AE  
                __end_of_SendRF_Channel 44A6                                ?_InitADC 0001  
                              ?_InitApp 0001                              ?_ResetBlue 0001  
                        ?_GetMemoryChar 0078                          ?_GetMemoryLong 0078  
               _Conf2_ChannelH_1_Status 00C6                              ?_UseIRCode 00B4  
               _Conf2_ChannelH_2_Status 00C7                       __CFG_CCP2MX$PORTC 000000  
               _Conf2_ChannelH_3_Status 00C8                          ?_EEPROM_UNLOCK 0001  
                       SendRF_wait@Code 007B               __size_of_Local_CloseUSART 000E  
                             __pintcode 0008                           __pmediumconst F7EE  
                        ?_Reverse_4Byte 0075                        _VoltageDividerON 78A8  
                             __ptext101 788A                               __ptext102 7852  
                             __ptext103 7894                               __ptext104 3E84  
                              ?___ftadd 007D                       SendRF_wait@Config 007D  
                           IRrawToNEC@i 0027                                ?___ftdiv 0080  
                  cleanBuffer16bit@data 0075                         SendRF_wait@size 007E  
                              ?___lldiv 0075                                ?___ftmul 008F  
                              ?___llmod 0082                                ?___fttol 0089  
                          UseIRCode@NEC 00B6                             __pintcodelo 0018  
                              ?_delayUS 0075                    __size_of_EraseScreen 0028  
                     SendRF_wait@amount 007F                           IRrawToNEC@NEC 001D  
                     _WriteEEPROM_1Byte 742A                                ?_isdigit 0001  
                         IRrawToNEC@Raw 001B                           UseBluetooth@i 0248  
              __end_of_ReadEEPROM_1Byte 74E4                                ?_low_isr 0001  
                    ?_WriteEEPROM_1Byte 0075                          __size_of_Round 0066  
                             _hexpowers F847              __end_of_SyncGlobalToEEPROM 73A0  
                 __size_ofi1_UARTstring 0058                __end_of_EnterCommandMode 64C2  
                              ?_sprintf 008B                           _lowercaseChar 7620  
              UseBluetooth@rfchannelSTR 0232                        _SetEEPROMdefault 5DA4  
                             delayUS@US 0075                   __end_ofi1_cleanBuffer 74A8  
                       IsCharacter@data 0001                             ??_GetEEPROM 0099  
                   ??_WriteEEPROM_1Byte 0078                             ??_DecodeNEC 0081  
                        ___wmul@product 0079                                _IOCBbits 000F7D  
                       i1_BlueConnected 7844                __end_of_CheckReceivingIR 77D2  
                      _cleanBuffer16bit 70A8                         ?_SendRF_Channel 0001  
                             _octpowers F7EF                                _IPR1bits 000F9F  
                              _IPR2bits 000FA2                                _PIE1bits 000F9D  
                              _PIE2bits 000FA0                            cleanBuffer@i 007C  
                              _PIR1bits 000F9E                                _PIR2bits 000FA1  
                              _RCONbits 000FD0                    i1UARTstringCRLN@data 0004  
                      __CFG_WDTPS$32768 000000                          UseIRCode@found 00BD  
                           ??_GetNumber 0086                             ??_EncodeNEC 007D  
                        DecodeNEC@temp1 0087                          DecodeNEC@temp2 0085  
                        DecodeNEC@temp3 0086                                _RFConfig 0033  
                              _UARTchar 76E8            ??_StringMatchCaseInsensitive 007C  
          __size_of_BluetoothConfigured 001C                BluetoothInitialSetup@buf 010A  
             ReadEEPROM_1Byte@GIEstatus 0077               __end_of_WriteEEPROM_1Byte 746A  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0075  
                          i1_UARTstring 71BA                    __size_of_Init_System 0086  
                              _IRpinOLD 002F          __size_of_BluetoothInitialSetup 0424  
                   ReadCodeButtons@temp 007E           __end_of_BluetoothInitialSetup 3E84  
                 __size_of_Reverse_Byte 00B6                          _UARTstringCRLN 6F74  
                       ??_BlueConnected 0075                             ??_ReadUSART 0001  
                         ??i2_ReadIRpin 001B                    __size_of_ReadVoltage 00B8  
                           ??_ReadIRpin 0075                __size_of_WaitForIRsignal 008A  
                       StringAddEqual@i 0165                         StringAddEqual@j 0166  
                           ??_SetEEPROM 00AA                          ?_lowercaseChar 0075  
                     ___lmul@multiplier 0075                             _INTCON2bits 000FF1  
                              _IsLetter 76CA                               copy_data0 5322  
                             copy_data1 5342                               copy_data2 5362  
                             copy_data3 5382                               copy_data4 53A2  
                             copy_data5 53C2                               copy_data6 53E2  
                         _CommandString 0900                                _InitUART 5C92  
                       UseBluetooth@buf 0200                             ??_OpenUSART 0077  
                          GetNumber@Hex 008C                         IRrawToNEC@first 0026  
                       ??_GetMemoryChar 007C                         OpenUSART@config 0077  
                       ??_GetMemoryLong 007C                      SendNEC_wait@toggle 008F  
           __end_of_GetStringAfterComma 5B78                              _EECON1bits 000FA6  
                          ?_StringMatch 0075                             ??_ResetBlue 007E  
                      __size_of_InitADC 0016                         ??_EEPROM_UNLOCK 0075  
                              _ResetADC 7836                   __end_of_SendNEC_bytes 6D06  
                      __size_of_InitApp 0046                                __Hrparam 0000  
                           ??_UseIRCode 00BA                         ??_Reverse_4Byte 0079  
                              __Lrparam 0000                          i1cleanBuffer@i 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_UARTcommandMenu 011A  
                  __size_of_SendRF_wait 0038                   __size_of_UseBluetooth 1610  
              __size_of_ReadCodeButtons 0054                            _Reverse_Byte 6640  
             InternalADC_Read@ADCcounts 007E                      i1cleanBuffer@count 0003  
                     Reverse_4Byte@This 0075                           GetEEPROM@Temp 0201  
                      __size_of___ftadd 027E                        __size_of___ftdiv 0152  
                       cleanBuffer@data 0075                        __size_of___lldiv 00C6  
                              ___altoft 699C                        __size_of___ftmul 016C  
                      __size_of___llmod 00A4                        __size_of___fttol 0152  
                     Reverse_4Byte@temp 0081                                ___ftpack 593A  
            InternalADC_Read@AnaChanSel 0082                                ___lltoft 6D8C  
                __end_of_UARTstringCRLN 6FDE                        __size_of_delayUS 0056  
                              ___lwtoft 764C                              sprintf@idx 009D  
                            sprintf@len 00A6                              sprintf@val 00AA  
                UseBluetooth@NecAddress 024A                        __size_of_isdigit 002E  
                UseBluetooth@NecCommand 024B                        __size_of_low_isr 01D0  
                              __ptext10 6B68                                __ptext11 6F74  
                              __ptext20 6A3E                                __ptext12 5B78  
                              __ptext21 6C7C                                __ptext13 6ADC  
                              __ptext30 67A8                                __ptext22 17FC  
                              __ptext14 6F02                                __ptext31 6640  
                              __ptext23 77C0                                __ptext15 6252  
                              __ptext40 4CB2                                __ptext32 6588  
                              __ptext24 5A5A                                __ptext16 4AFE  
                              __ptext41 569C                                __ptext33 764C  
                              __ptext25 362A                                __ptext17 6BF2  
                              __ptext50 6E0C                                __ptext42 5DA4  
                              __ptext34 5136                                __ptext26 7620  
                              __ptext18 751E                                __ptext51 77F0  
                              __ptext43 5C92                                __ptext35 53F8  
                              __ptext27 6E88                                __ptext19 6172  
                              __ptext60 77D2                                __ptext52 77AC  
                              __ptext44 6D8C                                __ptext36 78A8  
                              __ptext28 76CA                                __ptext61 7212  
                              __ptext53 7876                                __ptext45 6FDE  
                              __ptext37 78BA                                __ptext29 57EC  
                              __ptext70 7160                                __ptext62 3A60  
                              __ptext54 77FE                                __ptext46 554A  
                              __ptext38 68FA                                __ptext71 76E8  
                              __ptext63 247A                                __ptext55 780C  
                              __ptext47 44A6                                __ptext39 6D06  
                              __ptext80 735A                                __ptext72 66F6  
                              __ptext64 75F2                                __ptext56 7312  
                              __ptext48 699C                                __ptext81 493A  
                              __ptext73 75C0                                __ptext65 7556  
                              __ptext57 70A8                                __ptext49 593A  
                              __ptext90 78BE                                __ptext82 5EA4  
                              __ptext74 7268                                __ptext66 6856  
                              __ptext58 7880                                __ptext83 4FC6  
                              __ptext75 7828                                __ptext67 64C2  
                              __ptext59 781A                                __ptext92 746A  
                              __ptext84 74E4                                __ptext76 7706  
                              __ptext68 63FA                                __ptext93 7044  
                              __ptext85 742A                                __ptext77 776A  
                              __ptext69 7106                       SendNEC_bytes@code 0085  
                              __ptext94 71BA                                __ptext86 7780  
                              __ptext78 7836                                __ptext95 7844  
                              __ptext87 7678                                __ptext79 7722  
                              __ptext96 7796                                __ptext88 74A8  
                              __ptext97 773A                                __ptext89 73A0  
                              __ptext98 76A2                 __end_ofi1_BlueConnected 7852  
                              __ptext99 7752                                _high_isr 0008  
                      __size_of_sprintf 0C4A                     __end_ofi2_ReadIRpin 7860  
                       _lowercaseString 73E6                              GetEEPROM@i 02F7  
                            GetEEPROM@j 02F8                           __size_of_main 017E  
                 SendRF_Channel@channel 0080                            _UseBluetooth 01EC  
                              delayUS@i 007A                    __size_of_ResetTimer0 000A  
                  __size_of_ResetTimer1 000A                    __size_of_ResetTimer3 000A  
             __size_ofi1_UARTstringCRLN 0064               GetMemoryChar@AddressFirst 007C  
          __size_of_ConfigureOscillator 0002                  UseBluetooth@EnteredNEC 0244  
                      _Local_CloseUSART 77F0                         GetMemoryLong@MH 0095  
                       GetMemoryLong@ML 0096                            BufferCopy@to 007F  
           __size_of_SyncEEPROMToGlobal 0196              __size_of_WriteEEPROM_1Byte 0040  
                            _LEDTimerON 7860                         ?_UARTstringCRLN 0078  
                __size_ofi2_ResetTimer0 000A                              _INTCONbits 000FF2  
             __size_of_InternalADC_Read 00A2                          OpenUSART@spbrg 0075  
                       ??_lowercaseChar 0077                            UARTchar@data 0075  
                       StringMatch@That 0077                         StringMatch@This 0075  
                              isdigit@c 0077                      GetEEPROM@Arrayspot 0200  
                    SetEEPROM@Arrayspot 00B1                        EncodeNEC@address 00A1  
              __end_of_VoltageDividerON 78AE                                intlevel1 0000  
                              intlevel2 0000                               sprintf@ap 00A8  
                             sprintf@cp 009E                               sprintf@sp 008B  
                          ?_cleanBuffer 0075      GetStringAfterComma@tempCommaNumber 007B  
                     ??_WaitForIRsignal 007E                        EncodeNEC@command 0079  
                      ___lldiv@dividend 0075                            IsLetter@data 0075  
       ??_StringContainsCaseInsensitive 007C                          _BatteryVoltage 02FD  
                        GetMemoryChar@H 007D                             _IR_New_Code 00D2  
                            i1_UARTchar 7752                          GetMemoryLong@H 0094  
                        GetMemoryLong@L 0097                  __size_of_InitBluetooth 0056  
                           BufferCopy@i 0083                   __end_of_SetMemoryChar 751E  
                 __end_of_SetMemoryLong 5F9E          BluetoothInitialSetup@RFchannel 0100  
                         ??_IsCharacter 0001                           _InitUART$3508 00A7  
              __end_of_SetEEPROMdefault 5EA4                          _Conf1_ChannelD 04BD  
                        _Conf1_ChannelE 04C9                          _Conf1_ChannelF 04D5  
                            GetNumber@i 008F                          _Conf1_Channels 02F9  
                      DecodeNEC@address 007D                        UARTcommandMenu@i 0081  
                UARTcommandMenu@Command 0078                       ??_UARTcommandMenu 007C  
                        _Conf2_Channels 01FA                                sprintf@c 00B2  
              __end_of_cleanBuffer16bit 7106                                sprintf@f 008D  
                      DecodeNEC@command 007F                       ??_ReadCodeButtons 007E  
                      ___lldiv@quotient 007D                             i2_ReadIRpin 7852  
                     ?_ReadEEPROM_1Byte 0075                            EraseScreen@i 0003  
               __end_of_lowercaseString 742A                        ?i1_BlueConnected 0001  
               __size_of_StringAddEqual 01B4                          i1UARTchar@data 0001  
                      ??_SendRF_Channel 0080                      ??_ReadEEPROM_1Byte 0077  
                     ?_EnterCommandMode 0001                     _BluetoothConfigured 7706  
                    ??_EnterCommandMode 007E                              _UARTstring 7160  
                         i2_ResetTimer0 788A                       ?_CheckReceivingIR 0001  
             GetStringAfterComma@result 0078                      _SyncGlobalToEEPROM 735A  
                    ??_CheckReceivingIR 0075                         BufferCopy@count 0081  
                  __size_of_StringMatch 0072  
