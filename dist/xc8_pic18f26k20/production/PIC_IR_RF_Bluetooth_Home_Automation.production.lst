

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 10 00:48:57 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   138                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1
   140                           	psect	text112,global,reloc=2,class=CODE,delta=1
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=2,class=CODE,delta=1
   143                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   144                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   145  0000                     
   146                           	psect	idataCOMRAM
   147  0093C4                     __pidataCOMRAM:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _IRbitPosition
   151  0093C4  20                 	db	32
   152                           
   153                           ;initializer for _IRcodePlace
   154  0093C5  01                 	db	1
   155                           
   156                           ;initializer for _RF_IR
   157  0093C6  37                 	db	55
   158                           
   159                           ;initializer for _RF_IR_Postscaler
   160  0093C7  02                 	db	2
   161                           
   162                           ;initializer for _ReceivingIR
   163  0093C8  0D                 	db	13
   164                           
   165                           	psect	idataBANK0
   166  0093D4                     __pidataBANK0:
   167                           	opt stack 0
   168                           
   169                           ;initializer for _Sent
   170  0093D4  01                 	db	1
   171                           
   172                           	psect	idataBANK1
   173  009052                     __pidataBANK1:
   174                           	opt stack 0
   175                           
   176                           ;initializer for _ProductName
   177  009052  48                 	db	72
   178  009053  6F                 	db	111
   179  009054  6D                 	db	109
   180  009055  65                 	db	101
   181  009056  20                 	db	32
   182  009057  41                 	db	65
   183  009058  75                 	db	117
   184  009059  74                 	db	116
   185  00905A  6F                 	db	111
   186  00905B  6D                 	db	109
   187  00905C  61                 	db	97
   188  00905D  74                 	db	116
   189  00905E  69                 	db	105
   190  00905F  6F                 	db	111
   191  009060  6E                 	db	110
   192  009061  00                 	db	0
   193  009062  00                 	db	0
   194  009063  00                 	db	0
   195  009064  00                 	db	0
   196  009065  00                 	db	0
   197  009066  00                 	db	0
   198  009067  00                 	db	0
   199  009068  00                 	db	0
   200  009069  00                 	db	0
   201  00906A  00                 	db	0
   202  00906B  00                 	db	0
   203  00906C  00                 	db	0
   204  00906D  00                 	db	0
   205  00906E  00                 	db	0
   206  00906F  00                 	db	0
   207  009070  00                 	db	0
   208  009071  00                 	db	0
   209  009072  00                 	db	0
   210  009073  00                 	db	0
   211  009074  00                 	db	0
   212  009075  00                 	db	0
   213  009076  00                 	db	0
   214  009077  00                 	db	0
   215  009078  00                 	db	0
   216  009079  00                 	db	0
   217  00907A  00                 	db	0
   218  00907B  00                 	db	0
   219  00907C  00                 	db	0
   220  00907D  00                 	db	0
   221  00907E  00                 	db	0
   222  00907F  00                 	db	0
   223  009080  00                 	db	0
   224  009081  00                 	db	0
   225  009082  00                 	db	0
   226  009083  00                 	db	0
   227                           
   228                           ;initializer for _SN
   229  009084  0001               	dw	1
   230  009086  0000               	dw	0
   231                           
   232                           	psect	idataBANK2
   233  0093C9                     __pidataBANK2:
   234                           	opt stack 0
   235                           
   236                           ;initializer for _IRtimeout
   237  0093C9  1389               	dw	5001
   238  0093CB  0000               	dw	0
   239                           
   240                           	psect	mediumconst
   241  00F192                     __pmediumconst:
   242                           	opt stack 0
   243  00F192  00                 	db	0
   244  00F193                     _dpowers:
   245                           	opt stack 0
   246  00F193  0001               	dw	1
   247  00F195  0000               	dw	0
   248  00F197  000A               	dw	10
   249  00F199  0000               	dw	0
   250  00F19B  0064               	dw	100
   251  00F19D  0000               	dw	0
   252  00F19F  03E8               	dw	1000
   253  00F1A1  0000               	dw	0
   254  00F1A3  2710               	dw	10000
   255  00F1A5  0000               	dw	0
   256  00F1A7  86A0               	dw	34464
   257  00F1A9  0001               	dw	1
   258  00F1AB  4240               	dw	16960
   259  00F1AD  000F               	dw	15
   260  00F1AF  9680               	dw	38528
   261  00F1B1  0098               	dw	152
   262  00F1B3  E100               	dw	57600
   263  00F1B5  05F5               	dw	1525
   264  00F1B7  CA00               	dw	51712
   265  00F1B9  3B9A               	dw	15258
   266  00F1BB                     __end_of_dpowers:
   267                           	opt stack 0
   268  00F1BB                     __npowers_:
   269                           	opt stack 0
   270  00F1BB  00                 	db	0
   271  00F1BC  80                 	db	128
   272  00F1BD  3F                 	db	63
   273  00F1BE  CD                 	db	205
   274  00F1BF  CC                 	db	204
   275  00F1C0  3D                 	db	61
   276  00F1C1  D7                 	db	215
   277  00F1C2  23                 	db	35
   278  00F1C3  3C                 	db	60
   279  00F1C4  12                 	db	18
   280  00F1C5  83                 	db	131
   281  00F1C6  3A                 	db	58
   282  00F1C7  B7                 	db	183
   283  00F1C8  D1                 	db	209
   284  00F1C9  38                 	db	56
   285  00F1CA  C6                 	db	198
   286  00F1CB  27                 	db	39
   287  00F1CC  37                 	db	55
   288  00F1CD  38                 	db	56
   289  00F1CE  86                 	db	134
   290  00F1CF  35                 	db	53
   291  00F1D0  C0                 	db	192
   292  00F1D1  D6                 	db	214
   293  00F1D2  33                 	db	51
   294  00F1D3  CC                 	db	204
   295  00F1D4  2B                 	db	43
   296  00F1D5  32                 	db	50
   297  00F1D6  70                 	db	112
   298  00F1D7  89                 	db	137
   299  00F1D8  30                 	db	48
   300  00F1D9  E7                 	db	231
   301  00F1DA  DB                 	db	219
   302  00F1DB  2E                 	db	46
   303  00F1DC  E5                 	db	229
   304  00F1DD  3C                 	db	60
   305  00F1DE  1E                 	db	30
   306  00F1DF  42                 	db	66
   307  00F1E0  A2                 	db	162
   308  00F1E1  0D                 	db	13
   309  00F1E2                     __end_of__npowers_:
   310                           	opt stack 0
   311  00F1E2                     __powers_:
   312                           	opt stack 0
   313  00F1E2  00                 	db	0
   314  00F1E3  80                 	db	128
   315  00F1E4  3F                 	db	63
   316  00F1E5  00                 	db	0
   317  00F1E6  20                 	db	32
   318  00F1E7  41                 	db	65
   319  00F1E8  00                 	db	0
   320  00F1E9  C8                 	db	200
   321  00F1EA  42                 	db	66
   322  00F1EB  00                 	db	0
   323  00F1EC  7A                 	db	122
   324  00F1ED  44                 	db	68
   325  00F1EE  40                 	db	64
   326  00F1EF  1C                 	db	28
   327  00F1F0  46                 	db	70
   328  00F1F1  50                 	db	80
   329  00F1F2  C3                 	db	195
   330  00F1F3  47                 	db	71
   331  00F1F4  24                 	db	36
   332  00F1F5  74                 	db	116
   333  00F1F6  49                 	db	73
   334  00F1F7  97                 	db	151
   335  00F1F8  18                 	db	24
   336  00F1F9  4B                 	db	75
   337  00F1FA  BC                 	db	188
   338  00F1FB  BE                 	db	190
   339  00F1FC  4C                 	db	76
   340  00F1FD  6B                 	db	107
   341  00F1FE  6E                 	db	110
   342  00F1FF  4E                 	db	78
   343  00F200  03                 	db	3
   344  00F201  15                 	db	21
   345  00F202  50                 	db	80
   346  00F203  79                 	db	121
   347  00F204  AD                 	db	173
   348  00F205  60                 	db	96
   349  00F206  F3                 	db	243
   350  00F207  49                 	db	73
   351  00F208  71                 	db	113
   352  00F209                     __end_of__powers_:
   353                           	opt stack 0
   354  00F209                     _hexpowers:
   355                           	opt stack 0
   356  00F209  0001               	dw	1
   357  00F20B  0000               	dw	0
   358  00F20D  0010               	dw	16
   359  00F20F  0000               	dw	0
   360  00F211  0100               	dw	256
   361  00F213  0000               	dw	0
   362  00F215  1000               	dw	4096
   363  00F217  0000               	dw	0
   364  00F219  0000               	dw	0
   365  00F21B  0001               	dw	1
   366  00F21D  0000               	dw	0
   367  00F21F  0010               	dw	16
   368  00F221  0000               	dw	0
   369  00F223  0100               	dw	256
   370  00F225  0000               	dw	0
   371  00F227  1000               	dw	4096
   372  00F229                     __end_of_hexpowers:
   373                           	opt stack 0
   374  00F229                     _Conf2_ChannelH_1_OFF_STR:
   375                           	opt stack 0
   376  00F229  43                 	db	67
   377  00F22A  6F                 	db	111
   378  00F22B  6E                 	db	110
   379  00F22C  66                 	db	102
   380  00F22D  32                 	db	50
   381  00F22E  5F                 	db	95
   382  00F22F  43                 	db	67
   383  00F230  68                 	db	104
   384  00F231  61                 	db	97
   385  00F232  6E                 	db	110
   386  00F233  6E                 	db	110
   387  00F234  65                 	db	101
   388  00F235  6C                 	db	108
   389  00F236  48                 	db	72
   390  00F237  5F                 	db	95
   391  00F238  31                 	db	49
   392  00F239  5F                 	db	95
   393  00F23A  4F                 	db	79
   394  00F23B  46                 	db	70
   395  00F23C  46                 	db	70
   396  00F23D  00                 	db	0
   397  00F23E                     __end_of_Conf2_ChannelH_1_OFF_STR:
   398                           	opt stack 0
   399  00F23E                     _Conf2_ChannelH_2_OFF_STR:
   400                           	opt stack 0
   401  00F23E  43                 	db	67
   402  00F23F  6F                 	db	111
   403  00F240  6E                 	db	110
   404  00F241  66                 	db	102
   405  00F242  32                 	db	50
   406  00F243  5F                 	db	95
   407  00F244  43                 	db	67
   408  00F245  68                 	db	104
   409  00F246  61                 	db	97
   410  00F247  6E                 	db	110
   411  00F248  6E                 	db	110
   412  00F249  65                 	db	101
   413  00F24A  6C                 	db	108
   414  00F24B  48                 	db	72
   415  00F24C  5F                 	db	95
   416  00F24D  32                 	db	50
   417  00F24E  5F                 	db	95
   418  00F24F  4F                 	db	79
   419  00F250  46                 	db	70
   420  00F251  46                 	db	70
   421  00F252  00                 	db	0
   422  00F253                     __end_of_Conf2_ChannelH_2_OFF_STR:
   423                           	opt stack 0
   424  00F253                     _Conf2_ChannelH_3_OFF_STR:
   425                           	opt stack 0
   426  00F253  43                 	db	67
   427  00F254  6F                 	db	111
   428  00F255  6E                 	db	110
   429  00F256  66                 	db	102
   430  00F257  32                 	db	50
   431  00F258  5F                 	db	95
   432  00F259  43                 	db	67
   433  00F25A  68                 	db	104
   434  00F25B  61                 	db	97
   435  00F25C  6E                 	db	110
   436  00F25D  6E                 	db	110
   437  00F25E  65                 	db	101
   438  00F25F  6C                 	db	108
   439  00F260  48                 	db	72
   440  00F261  5F                 	db	95
   441  00F262  33                 	db	51
   442  00F263  5F                 	db	95
   443  00F264  4F                 	db	79
   444  00F265  46                 	db	70
   445  00F266  46                 	db	70
   446  00F267  00                 	db	0
   447  00F268                     __end_of_Conf2_ChannelH_3_OFF_STR:
   448                           	opt stack 0
   449  00F268                     _Conf2_ChannelH_1_ON_STR:
   450                           	opt stack 0
   451  00F268  43                 	db	67
   452  00F269  6F                 	db	111
   453  00F26A  6E                 	db	110
   454  00F26B  66                 	db	102
   455  00F26C  32                 	db	50
   456  00F26D  5F                 	db	95
   457  00F26E  43                 	db	67
   458  00F26F  68                 	db	104
   459  00F270  61                 	db	97
   460  00F271  6E                 	db	110
   461  00F272  6E                 	db	110
   462  00F273  65                 	db	101
   463  00F274  6C                 	db	108
   464  00F275  48                 	db	72
   465  00F276  5F                 	db	95
   466  00F277  31                 	db	49
   467  00F278  5F                 	db	95
   468  00F279  4F                 	db	79
   469  00F27A  4E                 	db	78
   470  00F27B  00                 	db	0
   471  00F27C                     __end_of_Conf2_ChannelH_1_ON_STR:
   472                           	opt stack 0
   473  00F27C                     _Conf2_ChannelH_2_ON_STR:
   474                           	opt stack 0
   475  00F27C  43                 	db	67
   476  00F27D  6F                 	db	111
   477  00F27E  6E                 	db	110
   478  00F27F  66                 	db	102
   479  00F280  32                 	db	50
   480  00F281  5F                 	db	95
   481  00F282  43                 	db	67
   482  00F283  68                 	db	104
   483  00F284  61                 	db	97
   484  00F285  6E                 	db	110
   485  00F286  6E                 	db	110
   486  00F287  65                 	db	101
   487  00F288  6C                 	db	108
   488  00F289  48                 	db	72
   489  00F28A  5F                 	db	95
   490  00F28B  32                 	db	50
   491  00F28C  5F                 	db	95
   492  00F28D  4F                 	db	79
   493  00F28E  4E                 	db	78
   494  00F28F  00                 	db	0
   495  00F290                     __end_of_Conf2_ChannelH_2_ON_STR:
   496                           	opt stack 0
   497  00F290                     _Conf2_ChannelH_3_ON_STR:
   498                           	opt stack 0
   499  00F290  43                 	db	67
   500  00F291  6F                 	db	111
   501  00F292  6E                 	db	110
   502  00F293  66                 	db	102
   503  00F294  32                 	db	50
   504  00F295  5F                 	db	95
   505  00F296  43                 	db	67
   506  00F297  68                 	db	104
   507  00F298  61                 	db	97
   508  00F299  6E                 	db	110
   509  00F29A  6E                 	db	110
   510  00F29B  65                 	db	101
   511  00F29C  6C                 	db	108
   512  00F29D  48                 	db	72
   513  00F29E  5F                 	db	95
   514  00F29F  33                 	db	51
   515  00F2A0  5F                 	db	95
   516  00F2A1  4F                 	db	79
   517  00F2A2  4E                 	db	78
   518  00F2A3  00                 	db	0
   519  00F2A4                     __end_of_Conf2_ChannelH_3_ON_STR:
   520                           	opt stack 0
   521  00F2A4                     _Conf2_ChannelB_OFF_STR:
   522                           	opt stack 0
   523  00F2A4  43                 	db	67
   524  00F2A5  6F                 	db	111
   525  00F2A6  6E                 	db	110
   526  00F2A7  66                 	db	102
   527  00F2A8  32                 	db	50
   528  00F2A9  5F                 	db	95
   529  00F2AA  43                 	db	67
   530  00F2AB  68                 	db	104
   531  00F2AC  61                 	db	97
   532  00F2AD  6E                 	db	110
   533  00F2AE  6E                 	db	110
   534  00F2AF  65                 	db	101
   535  00F2B0  6C                 	db	108
   536  00F2B1  42                 	db	66
   537  00F2B2  5F                 	db	95
   538  00F2B3  4F                 	db	79
   539  00F2B4  46                 	db	70
   540  00F2B5  46                 	db	70
   541  00F2B6  00                 	db	0
   542  00F2B7                     __end_of_Conf2_ChannelB_OFF_STR:
   543                           	opt stack 0
   544  00F2B7                     _Conf2_ChannelD_OFF_STR:
   545                           	opt stack 0
   546  00F2B7  43                 	db	67
   547  00F2B8  6F                 	db	111
   548  00F2B9  6E                 	db	110
   549  00F2BA  66                 	db	102
   550  00F2BB  32                 	db	50
   551  00F2BC  5F                 	db	95
   552  00F2BD  43                 	db	67
   553  00F2BE  68                 	db	104
   554  00F2BF  61                 	db	97
   555  00F2C0  6E                 	db	110
   556  00F2C1  6E                 	db	110
   557  00F2C2  65                 	db	101
   558  00F2C3  6C                 	db	108
   559  00F2C4  44                 	db	68
   560  00F2C5  5F                 	db	95
   561  00F2C6  4F                 	db	79
   562  00F2C7  46                 	db	70
   563  00F2C8  46                 	db	70
   564  00F2C9  00                 	db	0
   565  00F2CA                     __end_of_Conf2_ChannelD_OFF_STR:
   566                           	opt stack 0
   567  00F2CA                     _Conf2_ChannelB_ON_STR:
   568                           	opt stack 0
   569  00F2CA  43                 	db	67
   570  00F2CB  6F                 	db	111
   571  00F2CC  6E                 	db	110
   572  00F2CD  66                 	db	102
   573  00F2CE  32                 	db	50
   574  00F2CF  5F                 	db	95
   575  00F2D0  43                 	db	67
   576  00F2D1  68                 	db	104
   577  00F2D2  61                 	db	97
   578  00F2D3  6E                 	db	110
   579  00F2D4  6E                 	db	110
   580  00F2D5  65                 	db	101
   581  00F2D6  6C                 	db	108
   582  00F2D7  42                 	db	66
   583  00F2D8  5F                 	db	95
   584  00F2D9  4F                 	db	79
   585  00F2DA  4E                 	db	78
   586  00F2DB  00                 	db	0
   587  00F2DC                     __end_of_Conf2_ChannelB_ON_STR:
   588                           	opt stack 0
   589  00F2DC                     _Conf2_ChannelD_ON_STR:
   590                           	opt stack 0
   591  00F2DC  43                 	db	67
   592  00F2DD  6F                 	db	111
   593  00F2DE  6E                 	db	110
   594  00F2DF  66                 	db	102
   595  00F2E0  32                 	db	50
   596  00F2E1  5F                 	db	95
   597  00F2E2  43                 	db	67
   598  00F2E3  68                 	db	104
   599  00F2E4  61                 	db	97
   600  00F2E5  6E                 	db	110
   601  00F2E6  6E                 	db	110
   602  00F2E7  65                 	db	101
   603  00F2E8  6C                 	db	108
   604  00F2E9  44                 	db	68
   605  00F2EA  5F                 	db	95
   606  00F2EB  4F                 	db	79
   607  00F2EC  4E                 	db	78
   608  00F2ED  00                 	db	0
   609  00F2EE                     __end_of_Conf2_ChannelD_ON_STR:
   610                           	opt stack 0
   611  00F2EE                     _Conf2_ChannelB_OFF:
   612                           	opt stack 0
   613  00F2EE  00                 	db	0
   614  00F2EF  01                 	db	1
   615  00F2F0  01                 	db	1
   616  00F2F1  00                 	db	0
   617  00F2F2  01                 	db	1
   618  00F2F3  00                 	db	0
   619  00F2F4  00                 	db	0
   620  00F2F5  00                 	db	0
   621  00F2F6  00                 	db	0
   622  00F2F7  00                 	db	0
   623  00F2F8  00                 	db	0
   624  00F2F9  01                 	db	1
   625  00F2FA  00                 	db	0
   626  00F2FB  01                 	db	1
   627  00F2FC  00                 	db	0
   628  00F2FD  00                 	db	0
   629  00F2FE                     __end_of_Conf2_ChannelB_OFF:
   630                           	opt stack 0
   631  00F2FE                     _Conf2_ChannelB_ON:
   632                           	opt stack 0
   633  00F2FE  00                 	db	0
   634  00F2FF  01                 	db	1
   635  00F300  01                 	db	1
   636  00F301  00                 	db	0
   637  00F302  01                 	db	1
   638  00F303  00                 	db	0
   639  00F304  00                 	db	0
   640  00F305  00                 	db	0
   641  00F306  00                 	db	0
   642  00F307  00                 	db	0
   643  00F308  01                 	db	1
   644  00F309  00                 	db	0
   645  00F30A  00                 	db	0
   646  00F30B  01                 	db	1
   647  00F30C  00                 	db	0
   648  00F30D  00                 	db	0
   649  00F30E                     __end_of_Conf2_ChannelB_ON:
   650                           	opt stack 0
   651  00F30E                     _Conf2_ChannelD_OFF:
   652                           	opt stack 0
   653  00F30E  00                 	db	0
   654  00F30F  01                 	db	1
   655  00F310  01                 	db	1
   656  00F311  00                 	db	0
   657  00F312  01                 	db	1
   658  00F313  00                 	db	0
   659  00F314  00                 	db	0
   660  00F315  00                 	db	0
   661  00F316  00                 	db	0
   662  00F317  00                 	db	0
   663  00F318  00                 	db	0
   664  00F319  01                 	db	1
   665  00F31A  00                 	db	0
   666  00F31B  00                 	db	0
   667  00F31C  00                 	db	0
   668  00F31D  01                 	db	1
   669  00F31E                     __end_of_Conf2_ChannelD_OFF:
   670                           	opt stack 0
   671  00F31E                     _Conf2_ChannelD_ON:
   672                           	opt stack 0
   673  00F31E  00                 	db	0
   674  00F31F  01                 	db	1
   675  00F320  01                 	db	1
   676  00F321  00                 	db	0
   677  00F322  01                 	db	1
   678  00F323  00                 	db	0
   679  00F324  00                 	db	0
   680  00F325  00                 	db	0
   681  00F326  00                 	db	0
   682  00F327  00                 	db	0
   683  00F328  01                 	db	1
   684  00F329  00                 	db	0
   685  00F32A  00                 	db	0
   686  00F32B  00                 	db	0
   687  00F32C  00                 	db	0
   688  00F32D  01                 	db	1
   689  00F32E                     __end_of_Conf2_ChannelD_ON:
   690                           	opt stack 0
   691  00F32E                     _Conf2_ChannelH_1_OFF:
   692                           	opt stack 0
   693  00F32E  00                 	db	0
   694  00F32F  01                 	db	1
   695  00F330  01                 	db	1
   696  00F331  00                 	db	0
   697  00F332  01                 	db	1
   698  00F333  00                 	db	0
   699  00F334  00                 	db	0
   700  00F335  00                 	db	0
   701  00F336  00                 	db	0
   702  00F337  01                 	db	1
   703  00F338  00                 	db	0
   704  00F339  00                 	db	0
   705  00F33A  00                 	db	0
   706  00F33B  00                 	db	0
   707  00F33C  00                 	db	0
   708  00F33D  00                 	db	0
   709  00F33E                     __end_of_Conf2_ChannelH_1_OFF:
   710                           	opt stack 0
   711  00F33E                     _Conf2_ChannelH_1_ON:
   712                           	opt stack 0
   713  00F33E  00                 	db	0
   714  00F33F  01                 	db	1
   715  00F340  01                 	db	1
   716  00F341  00                 	db	0
   717  00F342  01                 	db	1
   718  00F343  00                 	db	0
   719  00F344  00                 	db	0
   720  00F345  00                 	db	0
   721  00F346  01                 	db	1
   722  00F347  00                 	db	0
   723  00F348  00                 	db	0
   724  00F349  00                 	db	0
   725  00F34A  00                 	db	0
   726  00F34B  00                 	db	0
   727  00F34C  00                 	db	0
   728  00F34D  00                 	db	0
   729  00F34E                     __end_of_Conf2_ChannelH_1_ON:
   730                           	opt stack 0
   731  00F34E                     _Conf2_ChannelH_2_OFF:
   732                           	opt stack 0
   733  00F34E  00                 	db	0
   734  00F34F  01                 	db	1
   735  00F350  01                 	db	1
   736  00F351  00                 	db	0
   737  00F352  01                 	db	1
   738  00F353  00                 	db	0
   739  00F354  00                 	db	0
   740  00F355  00                 	db	0
   741  00F356  00                 	db	0
   742  00F357  00                 	db	0
   743  00F358  00                 	db	0
   744  00F359  01                 	db	1
   745  00F35A  00                 	db	0
   746  00F35B  00                 	db	0
   747  00F35C  00                 	db	0
   748  00F35D  00                 	db	0
   749  00F35E                     __end_of_Conf2_ChannelH_2_OFF:
   750                           	opt stack 0
   751  00F35E                     _Conf2_ChannelH_2_ON:
   752                           	opt stack 0
   753  00F35E  00                 	db	0
   754  00F35F  01                 	db	1
   755  00F360  01                 	db	1
   756  00F361  00                 	db	0
   757  00F362  01                 	db	1
   758  00F363  00                 	db	0
   759  00F364  00                 	db	0
   760  00F365  00                 	db	0
   761  00F366  00                 	db	0
   762  00F367  00                 	db	0
   763  00F368  01                 	db	1
   764  00F369  00                 	db	0
   765  00F36A  00                 	db	0
   766  00F36B  00                 	db	0
   767  00F36C  00                 	db	0
   768  00F36D  00                 	db	0
   769  00F36E                     __end_of_Conf2_ChannelH_2_ON:
   770                           	opt stack 0
   771  00F36E                     _Conf2_ChannelH_3_OFF:
   772                           	opt stack 0
   773  00F36E  00                 	db	0
   774  00F36F  01                 	db	1
   775  00F370  01                 	db	1
   776  00F371  00                 	db	0
   777  00F372  01                 	db	1
   778  00F373  00                 	db	0
   779  00F374  01                 	db	1
   780  00F375  00                 	db	0
   781  00F376  00                 	db	0
   782  00F377  00                 	db	0
   783  00F378  00                 	db	0
   784  00F379  00                 	db	0
   785  00F37A  00                 	db	0
   786  00F37B  00                 	db	0
   787  00F37C  00                 	db	0
   788  00F37D  00                 	db	0
   789  00F37E                     __end_of_Conf2_ChannelH_3_OFF:
   790                           	opt stack 0
   791  00F37E                     _Conf2_ChannelH_3_ON:
   792                           	opt stack 0
   793  00F37E  00                 	db	0
   794  00F37F  01                 	db	1
   795  00F380  01                 	db	1
   796  00F381  00                 	db	0
   797  00F382  01                 	db	1
   798  00F383  00                 	db	0
   799  00F384  00                 	db	0
   800  00F385  01                 	db	1
   801  00F386  00                 	db	0
   802  00F387  00                 	db	0
   803  00F388  00                 	db	0
   804  00F389  00                 	db	0
   805  00F38A  00                 	db	0
   806  00F38B  00                 	db	0
   807  00F38C  00                 	db	0
   808  00F38D  00                 	db	0
   809  00F38E                     __end_of_Conf2_ChannelH_3_ON:
   810                           	opt stack 0
   811  00F38E                     _Conf1_ChannelD_STR:
   812                           	opt stack 0
   813  00F38E  43                 	db	67
   814  00F38F  6F                 	db	111
   815  00F390  6E                 	db	110
   816  00F391  66                 	db	102
   817  00F392  31                 	db	49
   818  00F393  5F                 	db	95
   819  00F394  43                 	db	67
   820  00F395  68                 	db	104
   821  00F396  61                 	db	97
   822  00F397  6E                 	db	110
   823  00F398  6E                 	db	110
   824  00F399  65                 	db	101
   825  00F39A  6C                 	db	108
   826  00F39B  44                 	db	68
   827  00F39C  00                 	db	0
   828  00F39D                     __end_of_Conf1_ChannelD_STR:
   829                           	opt stack 0
   830  00F39D                     _Conf1_ChannelE_STR:
   831                           	opt stack 0
   832  00F39D  43                 	db	67
   833  00F39E  6F                 	db	111
   834  00F39F  6E                 	db	110
   835  00F3A0  66                 	db	102
   836  00F3A1  31                 	db	49
   837  00F3A2  5F                 	db	95
   838  00F3A3  43                 	db	67
   839  00F3A4  68                 	db	104
   840  00F3A5  61                 	db	97
   841  00F3A6  6E                 	db	110
   842  00F3A7  6E                 	db	110
   843  00F3A8  65                 	db	101
   844  00F3A9  6C                 	db	108
   845  00F3AA  45                 	db	69
   846  00F3AB  00                 	db	0
   847  00F3AC                     __end_of_Conf1_ChannelE_STR:
   848                           	opt stack 0
   849  00F3AC                     _Conf1_ChannelF_STR:
   850                           	opt stack 0
   851  00F3AC  43                 	db	67
   852  00F3AD  6F                 	db	111
   853  00F3AE  6E                 	db	110
   854  00F3AF  66                 	db	102
   855  00F3B0  31                 	db	49
   856  00F3B1  5F                 	db	95
   857  00F3B2  43                 	db	67
   858  00F3B3  68                 	db	104
   859  00F3B4  61                 	db	97
   860  00F3B5  6E                 	db	110
   861  00F3B6  6E                 	db	110
   862  00F3B7  65                 	db	101
   863  00F3B8  6C                 	db	108
   864  00F3B9  46                 	db	70
   865  00F3BA  00                 	db	0
   866  00F3BB                     __end_of_Conf1_ChannelF_STR:
   867                           	opt stack 0
   868  00F3BB                     _SYNTAX_ERR:
   869                           	opt stack 0
   870  00F3BB  45                 	db	69
   871  00F3BC  72                 	db	114
   872  00F3BD  72                 	db	114
   873  00F3BE  6F                 	db	111
   874  00F3BF  72                 	db	114
   875  00F3C0  3A                 	db	58
   876  00F3C1  20                 	db	32
   877  00F3C2  53                 	db	83
   878  00F3C3  79                 	db	121
   879  00F3C4  6E                 	db	110
   880  00F3C5  74                 	db	116
   881  00F3C6  61                 	db	97
   882  00F3C7  78                 	db	120
   883  00F3C8  00                 	db	0
   884  00F3C9                     __end_of_SYNTAX_ERR:
   885                           	opt stack 0
   886  00F3C9                     _Conf1_ChannelD:
   887                           	opt stack 0
   888  00F3C9  03                 	db	3
   889  00F3CA  03                 	db	3
   890  00F3CB  03                 	db	3
   891  00F3CC  03                 	db	3
   892  00F3CD  03                 	db	3
   893  00F3CE  03                 	db	3
   894  00F3CF  00                 	db	0
   895  00F3D0  00                 	db	0
   896  00F3D1  01                 	db	1
   897  00F3D2  00                 	db	0
   898  00F3D3  00                 	db	0
   899  00F3D4  00                 	db	0
   900  00F3D5                     __end_of_Conf1_ChannelD:
   901                           	opt stack 0
   902  00F3D5                     _Conf1_ChannelE:
   903                           	opt stack 0
   904  00F3D5  00                 	db	0
   905  00F3D6  03                 	db	3
   906  00F3D7  03                 	db	3
   907  00F3D8  03                 	db	3
   908  00F3D9  03                 	db	3
   909  00F3DA  03                 	db	3
   910  00F3DB  00                 	db	0
   911  00F3DC  00                 	db	0
   912  00F3DD  01                 	db	1
   913  00F3DE  00                 	db	0
   914  00F3DF  00                 	db	0
   915  00F3E0  00                 	db	0
   916  00F3E1                     __end_of_Conf1_ChannelE:
   917                           	opt stack 0
   918  00F3E1                     _Conf1_ChannelF:
   919                           	opt stack 0
   920  00F3E1  03                 	db	3
   921  00F3E2  00                 	db	0
   922  00F3E3  03                 	db	3
   923  00F3E4  03                 	db	3
   924  00F3E5  03                 	db	3
   925  00F3E6  03                 	db	3
   926  00F3E7  00                 	db	0
   927  00F3E8  00                 	db	0
   928  00F3E9  01                 	db	1
   929  00F3EA  00                 	db	0
   930  00F3EB  00                 	db	0
   931  00F3EC  00                 	db	0
   932  00F3ED                     __end_of_Conf1_ChannelF:
   933                           	opt stack 0
   934  00F3ED                     _Version:
   935                           	opt stack 0
   936  00F3ED  31                 	db	49
   937  00F3EE  2E                 	db	46
   938  00F3EF  30                 	db	48
   939  00F3F0  5F                 	db	95
   940  00F3F1  44                 	db	68
   941  00F3F2  57                 	db	87
   942  00F3F3  30                 	db	48
   943  00F3F4  62                 	db	98
   944  00F3F5  00                 	db	0
   945  00F3F6                     __end_of_Version:
   946                           	opt stack 0
   947  00F3F6                     _Conf1_Channels:
   948                           	opt stack 0
   949  00F3F6  44                 	db	68
   950  00F3F7  45                 	db	69
   951  00F3F8  46                 	db	70
   952  00F3F9  00                 	db	0
   953  00F3FA                     __end_of_Conf1_Channels:
   954                           	opt stack 0
   955  00F3FA                     _Conf2_Channels:
   956                           	opt stack 0
   957  00F3FA  42                 	db	66
   958  00F3FB  44                 	db	68
   959  00F3FC  48                 	db	72
   960  00F3FD  00                 	db	0
   961  00F3FE                     __end_of_Conf2_Channels:
   962                           	opt stack 0
   963  00F3FE                     _CRLN:
   964                           	opt stack 0
   965  00F3FE  0D                 	db	13
   966  00F3FF  0A                 	db	10
   967  00F400  00                 	db	0
   968  00F401                     __end_of_CRLN:
   969                           	opt stack 0
   970  0000                     _ADCON0	set	4034
   971  0000                     _ADCON0bits	set	4034
   972  0000                     _ADCON1	set	4033
   973  0000                     _ADCON1bits	set	4033
   974  0000                     _ADCON2	set	4032
   975  0000                     _ADCON2bits	set	4032
   976  0000                     _ADRESH	set	4036
   977  0000                     _ADRESL	set	4035
   978  0000                     _ANSEL	set	3966
   979  0000                     _ANSELH	set	3967
   980  0000                     _BAUDCONbits	set	4024
   981  0000                     _EEADR	set	4009
   982  0000                     _EEADRH	set	4010
   983  0000                     _EECON1bits	set	4006
   984  0000                     _EECON2	set	4007
   985  0000                     _EEDATA	set	4008
   986  0000                     _INTCON2bits	set	4081
   987  0000                     _INTCONbits	set	4082
   988  0000                     _IOCBbits	set	3965
   989  0000                     _IPR1bits	set	3999
   990  0000                     _IPR2bits	set	4002
   991  0000                     _LATA	set	3977
   992  0000                     _LATB	set	3978
   993  0000                     _LATC	set	3979
   994  0000                     _PIE1bits	set	3997
   995  0000                     _PIE2bits	set	4000
   996  0000                     _PIR1bits	set	3998
   997  0000                     _PIR2bits	set	4001
   998  0000                     _PORTA	set	3968
   999  0000                     _PORTB	set	3969
  1000  0000                     _PORTC	set	3970
  1001  0000                     _PR2	set	4043
  1002  0000                     _RCONbits	set	4048
  1003  0000                     _RCREG	set	4014
  1004  0000                     _RCSTA	set	4011
  1005  0000                     _RCSTAbits	set	4011
  1006  0000                     _SPBRG	set	4015
  1007  0000                     _SPBRGH	set	4016
  1008  0000                     _T0CONbits	set	4053
  1009  0000                     _T1CONbits	set	4045
  1010  0000                     _T2CONbits	set	4042
  1011  0000                     _T3CONbits	set	4017
  1012  0000                     _TMR0H	set	4055
  1013  0000                     _TMR0L	set	4054
  1014  0000                     _TMR1H	set	4047
  1015  0000                     _TMR1L	set	4046
  1016  0000                     _TMR2	set	4044
  1017  0000                     _TMR3H	set	4019
  1018  0000                     _TMR3L	set	4018
  1019  0000                     _TRISAbits	set	3986
  1020  0000                     _TRISBbits	set	3987
  1021  0000                     _TRISCbits	set	3988
  1022  0000                     _TXREG	set	4013
  1023  0000                     _TXSTA	set	4012
  1024  0000                     _TXSTAbits	set	4012
  1025  0000                     _WPUB	set	3964
  1026  00F401                     STR_72:
  1027  00F401  4E                 	db	78	;'N'
  1028  00F402  45                 	db	69	;'E'
  1029  00F403  43                 	db	67	;'C'
  1030  00F404  20                 	db	32
  1031  00F405  63                 	db	99	;'c'
  1032  00F406  6F                 	db	111	;'o'
  1033  00F407  64                 	db	100	;'d'
  1034  00F408  65                 	db	101	;'e'
  1035  00F409  20                 	db	32
  1036  00F40A  30                 	db	48	;'0'
  1037  00F40B  78                 	db	120	;'x'
  1038  00F40C  25                 	db	37
  1039  00F40D  6C                 	db	108	;'l'
  1040  00F40E  58                 	db	88	;'X'
  1041  00F40F  20                 	db	32
  1042  00F410  6E                 	db	110	;'n'
  1043  00F411  6F                 	db	111	;'o'
  1044  00F412  77                 	db	119	;'w'
  1045  00F413  20                 	db	32
  1046  00F414  74                 	db	116	;'t'
  1047  00F415  72                 	db	114	;'r'
  1048  00F416  61                 	db	97	;'a'
  1049  00F417  6E                 	db	110	;'n'
  1050  00F418  73                 	db	115	;'s'
  1051  00F419  6D                 	db	109	;'m'
  1052  00F41A  69                 	db	105	;'i'
  1053  00F41B  74                 	db	116	;'t'
  1054  00F41C  73                 	db	115	;'s'
  1055  00F41D  20                 	db	32
  1056  00F41E  52                 	db	82	;'R'
  1057  00F41F  46                 	db	70	;'F'
  1058  00F420  20                 	db	32
  1059  00F421  63                 	db	99	;'c'
  1060  00F422  6F                 	db	111	;'o'
  1061  00F423  6E                 	db	110	;'n'
  1062  00F424  66                 	db	102	;'f'
  1063  00F425  69                 	db	105	;'i'
  1064  00F426  67                 	db	103	;'g'
  1065  00F427  20                 	db	32
  1066  00F428  25                 	db	37
  1067  00F429  64                 	db	100	;'d'
  1068  00F42A  20                 	db	32
  1069  00F42B  63                 	db	99	;'c'
  1070  00F42C  68                 	db	104	;'h'
  1071  00F42D  61                 	db	97	;'a'
  1072  00F42E  6E                 	db	110	;'n'
  1073  00F42F  6E                 	db	110	;'n'
  1074  00F430  65                 	db	101	;'e'
  1075  00F431  6C                 	db	108	;'l'
  1076  00F432  20                 	db	32
  1077  00F433  25                 	db	37
  1078  00F434  63                 	db	99	;'c'
  1079  00F435  20                 	db	32
  1080  00F436  64                 	db	100	;'d'
  1081  00F437  65                 	db	101	;'e'
  1082  00F438  76                 	db	118	;'v'
  1083  00F439  69                 	db	105	;'i'
  1084  00F43A  63                 	db	99	;'c'
  1085  00F43B  65                 	db	101	;'e'
  1086  00F43C  20                 	db	32
  1087  00F43D  25                 	db	37
  1088  00F43E  64                 	db	100	;'d'
  1089  00F43F  00                 	db	0
  1090  00F440                     STR_73:
  1091  00F440  4E                 	db	78	;'N'
  1092  00F441  45                 	db	69	;'E'
  1093  00F442  43                 	db	67	;'C'
  1094  00F443  20                 	db	32
  1095  00F444  63                 	db	99	;'c'
  1096  00F445  6F                 	db	111	;'o'
  1097  00F446  64                 	db	100	;'d'
  1098  00F447  65                 	db	101	;'e'
  1099  00F448  20                 	db	32
  1100  00F449  30                 	db	48	;'0'
  1101  00F44A  78                 	db	120	;'x'
  1102  00F44B  25                 	db	37
  1103  00F44C  6C                 	db	108	;'l'
  1104  00F44D  58                 	db	88	;'X'
  1105  00F44E  20                 	db	32
  1106  00F44F  6E                 	db	110	;'n'
  1107  00F450  6F                 	db	111	;'o'
  1108  00F451  77                 	db	119	;'w'
  1109  00F452  20                 	db	32
  1110  00F453  74                 	db	116	;'t'
  1111  00F454  72                 	db	114	;'r'
  1112  00F455  61                 	db	97	;'a'
  1113  00F456  6E                 	db	110	;'n'
  1114  00F457  73                 	db	115	;'s'
  1115  00F458  6D                 	db	109	;'m'
  1116  00F459  69                 	db	105	;'i'
  1117  00F45A  74                 	db	116	;'t'
  1118  00F45B  73                 	db	115	;'s'
  1119  00F45C  20                 	db	32
  1120  00F45D  52                 	db	82	;'R'
  1121  00F45E  46                 	db	70	;'F'
  1122  00F45F  20                 	db	32
  1123  00F460  63                 	db	99	;'c'
  1124  00F461  6F                 	db	111	;'o'
  1125  00F462  6E                 	db	110	;'n'
  1126  00F463  66                 	db	102	;'f'
  1127  00F464  69                 	db	105	;'i'
  1128  00F465  67                 	db	103	;'g'
  1129  00F466  20                 	db	32
  1130  00F467  25                 	db	37
  1131  00F468  64                 	db	100	;'d'
  1132  00F469  20                 	db	32
  1133  00F46A  63                 	db	99	;'c'
  1134  00F46B  68                 	db	104	;'h'
  1135  00F46C  61                 	db	97	;'a'
  1136  00F46D  6E                 	db	110	;'n'
  1137  00F46E  6E                 	db	110	;'n'
  1138  00F46F  65                 	db	101	;'e'
  1139  00F470  6C                 	db	108	;'l'
  1140  00F471  20                 	db	32
  1141  00F472  25                 	db	37
  1142  00F473  63                 	db	99	;'c'
  1143  00F474  20                 	db	32
  1144  00F475  00                 	db	0
  1145  00F476                     STR_74:
  1146  00F476  52                 	db	82	;'R'
  1147  00F477  46                 	db	70	;'F'
  1148  00F478  20                 	db	32
  1149  00F479  63                 	db	99	;'c'
  1150  00F47A  6F                 	db	111	;'o'
  1151  00F47B  6E                 	db	110	;'n'
  1152  00F47C  66                 	db	102	;'f'
  1153  00F47D  69                 	db	105	;'i'
  1154  00F47E  67                 	db	103	;'g'
  1155  00F47F  20                 	db	32
  1156  00F480  25                 	db	37
  1157  00F481  64                 	db	100	;'d'
  1158  00F482  20                 	db	32
  1159  00F483  63                 	db	99	;'c'
  1160  00F484  68                 	db	104	;'h'
  1161  00F485  61                 	db	97	;'a'
  1162  00F486  6E                 	db	110	;'n'
  1163  00F487  6E                 	db	110	;'n'
  1164  00F488  65                 	db	101	;'e'
  1165  00F489  6C                 	db	108	;'l'
  1166  00F48A  20                 	db	32
  1167  00F48B  25                 	db	37
  1168  00F48C  63                 	db	99	;'c'
  1169  00F48D  20                 	db	32
  1170  00F48E  64                 	db	100	;'d'
  1171  00F48F  65                 	db	101	;'e'
  1172  00F490  76                 	db	118	;'v'
  1173  00F491  69                 	db	105	;'i'
  1174  00F492  63                 	db	99	;'c'
  1175  00F493  65                 	db	101	;'e'
  1176  00F494  20                 	db	32
  1177  00F495  25                 	db	37
  1178  00F496  64                 	db	100	;'d'
  1179  00F497  20                 	db	32
  1180  00F498  73                 	db	115	;'s'
  1181  00F499  75                 	db	117	;'u'
  1182  00F49A  63                 	db	99	;'c'
  1183  00F49B  63                 	db	99	;'c'
  1184  00F49C  65                 	db	101	;'e'
  1185  00F49D  73                 	db	115	;'s'
  1186  00F49E  73                 	db	115	;'s'
  1187  00F49F  66                 	db	102	;'f'
  1188  00F4A0  75                 	db	117	;'u'
  1189  00F4A1  6C                 	db	108	;'l'
  1190  00F4A2  6C                 	db	108	;'l'
  1191  00F4A3  79                 	db	121	;'y'
  1192  00F4A4  20                 	db	32
  1193  00F4A5  65                 	db	101	;'e'
  1194  00F4A6  72                 	db	114	;'r'
  1195  00F4A7  61                 	db	97	;'a'
  1196  00F4A8  73                 	db	115	;'s'
  1197  00F4A9  65                 	db	101	;'e'
  1198  00F4AA  64                 	db	100	;'d'
  1199  00F4AB  00                 	db	0
  1200  00F4AC                     STR_68:
  1201  00F4AC  45                 	db	69	;'E'
  1202  00F4AD  72                 	db	114	;'r'
  1203  00F4AE  72                 	db	114	;'r'
  1204  00F4AF  6F                 	db	111	;'o'
  1205  00F4B0  72                 	db	114	;'r'
  1206  00F4B1  3A                 	db	58	;':'
  1207  00F4B2  20                 	db	32
  1208  00F4B3  4E                 	db	78	;'N'
  1209  00F4B4  6F                 	db	111	;'o'
  1210  00F4B5  20                 	db	32
  1211  00F4B6  52                 	db	82	;'R'
  1212  00F4B7  46                 	db	70	;'F'
  1213  00F4B8  20                 	db	32
  1214  00F4B9  63                 	db	99	;'c'
  1215  00F4BA  6F                 	db	111	;'o'
  1216  00F4BB  6E                 	db	110	;'n'
  1217  00F4BC  66                 	db	102	;'f'
  1218  00F4BD  69                 	db	105	;'i'
  1219  00F4BE  67                 	db	103	;'g'
  1220  00F4BF  20                 	db	32
  1221  00F4C0  32                 	db	50	;'2'
  1222  00F4C1  2C                 	db	44
  1223  00F4C2  20                 	db	32
  1224  00F4C3  63                 	db	99	;'c'
  1225  00F4C4  68                 	db	104	;'h'
  1226  00F4C5  61                 	db	97	;'a'
  1227  00F4C6  6E                 	db	110	;'n'
  1228  00F4C7  6E                 	db	110	;'n'
  1229  00F4C8  65                 	db	101	;'e'
  1230  00F4C9  6C                 	db	108	;'l'
  1231  00F4CA  20                 	db	32
  1232  00F4CB  48                 	db	72	;'H'
  1233  00F4CC  20                 	db	32
  1234  00F4CD  64                 	db	100	;'d'
  1235  00F4CE  65                 	db	101	;'e'
  1236  00F4CF  76                 	db	118	;'v'
  1237  00F4D0  69                 	db	105	;'i'
  1238  00F4D1  63                 	db	99	;'c'
  1239  00F4D2  65                 	db	101	;'e'
  1240  00F4D3  20                 	db	32
  1241  00F4D4  73                 	db	115	;'s'
  1242  00F4D5  70                 	db	112	;'p'
  1243  00F4D6  65                 	db	101	;'e'
  1244  00F4D7  63                 	db	99	;'c'
  1245  00F4D8  69                 	db	105	;'i'
  1246  00F4D9  66                 	db	102	;'f'
  1247  00F4DA  69                 	db	105	;'i'
  1248  00F4DB  65                 	db	101	;'e'
  1249  00F4DC  64                 	db	100	;'d'
  1250  00F4DD  00                 	db	0
  1251  00F4DE                     STR_69:
  1252  00F4DE  45                 	db	69	;'E'
  1253  00F4DF  72                 	db	114	;'r'
  1254  00F4E0  72                 	db	114	;'r'
  1255  00F4E1  6F                 	db	111	;'o'
  1256  00F4E2  72                 	db	114	;'r'
  1257  00F4E3  3A                 	db	58	;':'
  1258  00F4E4  20                 	db	32
  1259  00F4E5  52                 	db	82	;'R'
  1260  00F4E6  46                 	db	70	;'F'
  1261  00F4E7  20                 	db	32
  1262  00F4E8  63                 	db	99	;'c'
  1263  00F4E9  6F                 	db	111	;'o'
  1264  00F4EA  6E                 	db	110	;'n'
  1265  00F4EB  66                 	db	102	;'f'
  1266  00F4EC  69                 	db	105	;'i'
  1267  00F4ED  67                 	db	103	;'g'
  1268  00F4EE  20                 	db	32
  1269  00F4EF  32                 	db	50	;'2'
  1270  00F4F0  2C                 	db	44
  1271  00F4F1  20                 	db	32
  1272  00F4F2  63                 	db	99	;'c'
  1273  00F4F3  68                 	db	104	;'h'
  1274  00F4F4  61                 	db	97	;'a'
  1275  00F4F5  6E                 	db	110	;'n'
  1276  00F4F6  6E                 	db	110	;'n'
  1277  00F4F7  65                 	db	101	;'e'
  1278  00F4F8  6C                 	db	108	;'l'
  1279  00F4F9  20                 	db	32
  1280  00F4FA  48                 	db	72	;'H'
  1281  00F4FB  20                 	db	32
  1282  00F4FC  64                 	db	100	;'d'
  1283  00F4FD  65                 	db	101	;'e'
  1284  00F4FE  76                 	db	118	;'v'
  1285  00F4FF  69                 	db	105	;'i'
  1286  00F500  63                 	db	99	;'c'
  1287  00F501  65                 	db	101	;'e'
  1288  00F502  20                 	db	32
  1289  00F503  6F                 	db	111	;'o'
  1290  00F504  75                 	db	117	;'u'
  1291  00F505  74                 	db	116	;'t'
  1292  00F506  20                 	db	32
  1293  00F507  6F                 	db	111	;'o'
  1294  00F508  66                 	db	102	;'f'
  1295  00F509  20                 	db	32
  1296  00F50A  72                 	db	114	;'r'
  1297  00F50B  61                 	db	97	;'a'
  1298  00F50C  6E                 	db	110	;'n'
  1299  00F50D  67                 	db	103	;'g'
  1300  00F50E  65                 	db	101	;'e'
  1301  00F50F  00                 	db	0
  1302  00F510                     STR_110:
  1303  00F510  53                 	db	83	;'S'
  1304  00F511  65                 	db	101	;'e'
  1305  00F512  74                 	db	116	;'t'
  1306  00F513  73                 	db	115	;'s'
  1307  00F514  20                 	db	32
  1308  00F515  52                 	db	82	;'R'
  1309  00F516  65                 	db	101	;'e'
  1310  00F517  6D                 	db	109	;'m'
  1311  00F518  6F                 	db	111	;'o'
  1312  00F519  74                 	db	116	;'t'
  1313  00F51A  65                 	db	101	;'e'
  1314  00F51B  20                 	db	32
  1315  00F51C  62                 	db	98	;'b'
  1316  00F51D  75                 	db	117	;'u'
  1317  00F51E  74                 	db	116	;'t'
  1318  00F51F  74                 	db	116	;'t'
  1319  00F520  6F                 	db	111	;'o'
  1320  00F521  6E                 	db	110	;'n'
  1321  00F522  20                 	db	32
  1322  00F523  74                 	db	116	;'t'
  1323  00F524  6F                 	db	111	;'o'
  1324  00F525  20                 	db	32
  1325  00F526  73                 	db	115	;'s'
  1326  00F527  65                 	db	101	;'e'
  1327  00F528  6E                 	db	110	;'n'
  1328  00F529  64                 	db	100	;'d'
  1329  00F52A  20                 	db	32
  1330  00F52B  52                 	db	82	;'R'
  1331  00F52C  46                 	db	70	;'F'
  1332  00F52D  20                 	db	32
  1333  00F52E  43                 	db	67	;'C'
  1334  00F52F  6F                 	db	111	;'o'
  1335  00F530  6E                 	db	110	;'n'
  1336  00F531  66                 	db	102	;'f'
  1337  00F532  69                 	db	105	;'i'
  1338  00F533  67                 	db	103	;'g'
  1339  00F534  20                 	db	32
  1340  00F535  32                 	db	50	;'2'
  1341  00F536  20                 	db	32
  1342  00F537  63                 	db	99	;'c'
  1343  00F538  68                 	db	104	;'h'
  1344  00F539  61                 	db	97	;'a'
  1345  00F53A  6E                 	db	110	;'n'
  1346  00F53B  6E                 	db	110	;'n'
  1347  00F53C  65                 	db	101	;'e'
  1348  00F53D  6C                 	db	108	;'l'
  1349  00F53E  20                 	db	32
  1350  00F53F  42                 	db	66	;'B'
  1351  00F540  00                 	db	0
  1352  00F541                     STR_104:
  1353  00F541  53                 	db	83	;'S'
  1354  00F542  65                 	db	101	;'e'
  1355  00F543  74                 	db	116	;'t'
  1356  00F544  73                 	db	115	;'s'
  1357  00F545  20                 	db	32
  1358  00F546  52                 	db	82	;'R'
  1359  00F547  65                 	db	101	;'e'
  1360  00F548  6D                 	db	109	;'m'
  1361  00F549  6F                 	db	111	;'o'
  1362  00F54A  74                 	db	116	;'t'
  1363  00F54B  65                 	db	101	;'e'
  1364  00F54C  20                 	db	32
  1365  00F54D  62                 	db	98	;'b'
  1366  00F54E  75                 	db	117	;'u'
  1367  00F54F  74                 	db	116	;'t'
  1368  00F550  74                 	db	116	;'t'
  1369  00F551  6F                 	db	111	;'o'
  1370  00F552  6E                 	db	110	;'n'
  1371  00F553  20                 	db	32
  1372  00F554  74                 	db	116	;'t'
  1373  00F555  6F                 	db	111	;'o'
  1374  00F556  20                 	db	32
  1375  00F557  73                 	db	115	;'s'
  1376  00F558  65                 	db	101	;'e'
  1377  00F559  6E                 	db	110	;'n'
  1378  00F55A  64                 	db	100	;'d'
  1379  00F55B  20                 	db	32
  1380  00F55C  52                 	db	82	;'R'
  1381  00F55D  46                 	db	70	;'F'
  1382  00F55E  20                 	db	32
  1383  00F55F  43                 	db	67	;'C'
  1384  00F560  6F                 	db	111	;'o'
  1385  00F561  6E                 	db	110	;'n'
  1386  00F562  66                 	db	102	;'f'
  1387  00F563  69                 	db	105	;'i'
  1388  00F564  67                 	db	103	;'g'
  1389  00F565  20                 	db	32
  1390  00F566  31                 	db	49	;'1'
  1391  00F567  20                 	db	32
  1392  00F568  63                 	db	99	;'c'
  1393  00F569  68                 	db	104	;'h'
  1394  00F56A  61                 	db	97	;'a'
  1395  00F56B  6E                 	db	110	;'n'
  1396  00F56C  6E                 	db	110	;'n'
  1397  00F56D  65                 	db	101	;'e'
  1398  00F56E  6C                 	db	108	;'l'
  1399  00F56F  20                 	db	32
  1400  00F570  44                 	db	68	;'D'
  1401  00F571  00                 	db	0
  1402  00F572                     STR_112:
  1403  00F572  53                 	db	83	;'S'
  1404  00F573  65                 	db	101	;'e'
  1405  00F574  74                 	db	116	;'t'
  1406  00F575  73                 	db	115	;'s'
  1407  00F576  20                 	db	32
  1408  00F577  52                 	db	82	;'R'
  1409  00F578  65                 	db	101	;'e'
  1410  00F579  6D                 	db	109	;'m'
  1411  00F57A  6F                 	db	111	;'o'
  1412  00F57B  74                 	db	116	;'t'
  1413  00F57C  65                 	db	101	;'e'
  1414  00F57D  20                 	db	32
  1415  00F57E  62                 	db	98	;'b'
  1416  00F57F  75                 	db	117	;'u'
  1417  00F580  74                 	db	116	;'t'
  1418  00F581  74                 	db	116	;'t'
  1419  00F582  6F                 	db	111	;'o'
  1420  00F583  6E                 	db	110	;'n'
  1421  00F584  20                 	db	32
  1422  00F585  74                 	db	116	;'t'
  1423  00F586  6F                 	db	111	;'o'
  1424  00F587  20                 	db	32
  1425  00F588  73                 	db	115	;'s'
  1426  00F589  65                 	db	101	;'e'
  1427  00F58A  6E                 	db	110	;'n'
  1428  00F58B  64                 	db	100	;'d'
  1429  00F58C  20                 	db	32
  1430  00F58D  52                 	db	82	;'R'
  1431  00F58E  46                 	db	70	;'F'
  1432  00F58F  20                 	db	32
  1433  00F590  43                 	db	67	;'C'
  1434  00F591  6F                 	db	111	;'o'
  1435  00F592  6E                 	db	110	;'n'
  1436  00F593  66                 	db	102	;'f'
  1437  00F594  69                 	db	105	;'i'
  1438  00F595  67                 	db	103	;'g'
  1439  00F596  20                 	db	32
  1440  00F597  32                 	db	50	;'2'
  1441  00F598  20                 	db	32
  1442  00F599  63                 	db	99	;'c'
  1443  00F59A  68                 	db	104	;'h'
  1444  00F59B  61                 	db	97	;'a'
  1445  00F59C  6E                 	db	110	;'n'
  1446  00F59D  6E                 	db	110	;'n'
  1447  00F59E  65                 	db	101	;'e'
  1448  00F59F  6C                 	db	108	;'l'
  1449  00F5A0  20                 	db	32
  1450  00F5A1  44                 	db	68	;'D'
  1451  00F5A2  00                 	db	0
  1452  00F5A3                     STR_106:
  1453  00F5A3  53                 	db	83	;'S'
  1454  00F5A4  65                 	db	101	;'e'
  1455  00F5A5  74                 	db	116	;'t'
  1456  00F5A6  73                 	db	115	;'s'
  1457  00F5A7  20                 	db	32
  1458  00F5A8  52                 	db	82	;'R'
  1459  00F5A9  65                 	db	101	;'e'
  1460  00F5AA  6D                 	db	109	;'m'
  1461  00F5AB  6F                 	db	111	;'o'
  1462  00F5AC  74                 	db	116	;'t'
  1463  00F5AD  65                 	db	101	;'e'
  1464  00F5AE  20                 	db	32
  1465  00F5AF  62                 	db	98	;'b'
  1466  00F5B0  75                 	db	117	;'u'
  1467  00F5B1  74                 	db	116	;'t'
  1468  00F5B2  74                 	db	116	;'t'
  1469  00F5B3  6F                 	db	111	;'o'
  1470  00F5B4  6E                 	db	110	;'n'
  1471  00F5B5  20                 	db	32
  1472  00F5B6  74                 	db	116	;'t'
  1473  00F5B7  6F                 	db	111	;'o'
  1474  00F5B8  20                 	db	32
  1475  00F5B9  73                 	db	115	;'s'
  1476  00F5BA  65                 	db	101	;'e'
  1477  00F5BB  6E                 	db	110	;'n'
  1478  00F5BC  64                 	db	100	;'d'
  1479  00F5BD  20                 	db	32
  1480  00F5BE  52                 	db	82	;'R'
  1481  00F5BF  46                 	db	70	;'F'
  1482  00F5C0  20                 	db	32
  1483  00F5C1  43                 	db	67	;'C'
  1484  00F5C2  6F                 	db	111	;'o'
  1485  00F5C3  6E                 	db	110	;'n'
  1486  00F5C4  66                 	db	102	;'f'
  1487  00F5C5  69                 	db	105	;'i'
  1488  00F5C6  67                 	db	103	;'g'
  1489  00F5C7  20                 	db	32
  1490  00F5C8  31                 	db	49	;'1'
  1491  00F5C9  20                 	db	32
  1492  00F5CA  63                 	db	99	;'c'
  1493  00F5CB  68                 	db	104	;'h'
  1494  00F5CC  61                 	db	97	;'a'
  1495  00F5CD  6E                 	db	110	;'n'
  1496  00F5CE  6E                 	db	110	;'n'
  1497  00F5CF  65                 	db	101	;'e'
  1498  00F5D0  6C                 	db	108	;'l'
  1499  00F5D1  20                 	db	32
  1500  00F5D2  45                 	db	69	;'E'
  1501  00F5D3  00                 	db	0
  1502  00F5D4                     STR_108:
  1503  00F5D4  53                 	db	83	;'S'
  1504  00F5D5  65                 	db	101	;'e'
  1505  00F5D6  74                 	db	116	;'t'
  1506  00F5D7  73                 	db	115	;'s'
  1507  00F5D8  20                 	db	32
  1508  00F5D9  52                 	db	82	;'R'
  1509  00F5DA  65                 	db	101	;'e'
  1510  00F5DB  6D                 	db	109	;'m'
  1511  00F5DC  6F                 	db	111	;'o'
  1512  00F5DD  74                 	db	116	;'t'
  1513  00F5DE  65                 	db	101	;'e'
  1514  00F5DF  20                 	db	32
  1515  00F5E0  62                 	db	98	;'b'
  1516  00F5E1  75                 	db	117	;'u'
  1517  00F5E2  74                 	db	116	;'t'
  1518  00F5E3  74                 	db	116	;'t'
  1519  00F5E4  6F                 	db	111	;'o'
  1520  00F5E5  6E                 	db	110	;'n'
  1521  00F5E6  20                 	db	32
  1522  00F5E7  74                 	db	116	;'t'
  1523  00F5E8  6F                 	db	111	;'o'
  1524  00F5E9  20                 	db	32
  1525  00F5EA  73                 	db	115	;'s'
  1526  00F5EB  65                 	db	101	;'e'
  1527  00F5EC  6E                 	db	110	;'n'
  1528  00F5ED  64                 	db	100	;'d'
  1529  00F5EE  20                 	db	32
  1530  00F5EF  52                 	db	82	;'R'
  1531  00F5F0  46                 	db	70	;'F'
  1532  00F5F1  20                 	db	32
  1533  00F5F2  43                 	db	67	;'C'
  1534  00F5F3  6F                 	db	111	;'o'
  1535  00F5F4  6E                 	db	110	;'n'
  1536  00F5F5  66                 	db	102	;'f'
  1537  00F5F6  69                 	db	105	;'i'
  1538  00F5F7  67                 	db	103	;'g'
  1539  00F5F8  20                 	db	32
  1540  00F5F9  31                 	db	49	;'1'
  1541  00F5FA  20                 	db	32
  1542  00F5FB  63                 	db	99	;'c'
  1543  00F5FC  68                 	db	104	;'h'
  1544  00F5FD  61                 	db	97	;'a'
  1545  00F5FE  6E                 	db	110	;'n'
  1546  00F5FF  6E                 	db	110	;'n'
  1547  00F600  65                 	db	101	;'e'
  1548  00F601  6C                 	db	108	;'l'
  1549  00F602  20                 	db	32
  1550  00F603  46                 	db	70	;'F'
  1551  00F604  00                 	db	0
  1552  00F605                     STR_114:
  1553  00F605  53                 	db	83	;'S'
  1554  00F606  65                 	db	101	;'e'
  1555  00F607  74                 	db	116	;'t'
  1556  00F608  73                 	db	115	;'s'
  1557  00F609  20                 	db	32
  1558  00F60A  52                 	db	82	;'R'
  1559  00F60B  65                 	db	101	;'e'
  1560  00F60C  6D                 	db	109	;'m'
  1561  00F60D  6F                 	db	111	;'o'
  1562  00F60E  74                 	db	116	;'t'
  1563  00F60F  65                 	db	101	;'e'
  1564  00F610  20                 	db	32
  1565  00F611  62                 	db	98	;'b'
  1566  00F612  75                 	db	117	;'u'
  1567  00F613  74                 	db	116	;'t'
  1568  00F614  74                 	db	116	;'t'
  1569  00F615  6F                 	db	111	;'o'
  1570  00F616  6E                 	db	110	;'n'
  1571  00F617  20                 	db	32
  1572  00F618  74                 	db	116	;'t'
  1573  00F619  6F                 	db	111	;'o'
  1574  00F61A  20                 	db	32
  1575  00F61B  73                 	db	115	;'s'
  1576  00F61C  65                 	db	101	;'e'
  1577  00F61D  6E                 	db	110	;'n'
  1578  00F61E  64                 	db	100	;'d'
  1579  00F61F  20                 	db	32
  1580  00F620  52                 	db	82	;'R'
  1581  00F621  46                 	db	70	;'F'
  1582  00F622  20                 	db	32
  1583  00F623  43                 	db	67	;'C'
  1584  00F624  6F                 	db	111	;'o'
  1585  00F625  6E                 	db	110	;'n'
  1586  00F626  66                 	db	102	;'f'
  1587  00F627  69                 	db	105	;'i'
  1588  00F628  67                 	db	103	;'g'
  1589  00F629  20                 	db	32
  1590  00F62A  32                 	db	50	;'2'
  1591  00F62B  20                 	db	32
  1592  00F62C  63                 	db	99	;'c'
  1593  00F62D  68                 	db	104	;'h'
  1594  00F62E  61                 	db	97	;'a'
  1595  00F62F  6E                 	db	110	;'n'
  1596  00F630  6E                 	db	110	;'n'
  1597  00F631  65                 	db	101	;'e'
  1598  00F632  6C                 	db	108	;'l'
  1599  00F633  20                 	db	32
  1600  00F634  48                 	db	72	;'H'
  1601  00F635  00                 	db	0
  1602  00F636                     STR_48:
  1603  00F636  45                 	db	69	;'E'
  1604  00F637  72                 	db	114	;'r'
  1605  00F638  72                 	db	114	;'r'
  1606  00F639  6F                 	db	111	;'o'
  1607  00F63A  72                 	db	114	;'r'
  1608  00F63B  3A                 	db	58	;':'
  1609  00F63C  20                 	db	32
  1610  00F63D  4E                 	db	78	;'N'
  1611  00F63E  6F                 	db	111	;'o'
  1612  00F63F  20                 	db	32
  1613  00F640  4E                 	db	78	;'N'
  1614  00F641  45                 	db	69	;'E'
  1615  00F642  43                 	db	67	;'C'
  1616  00F643  20                 	db	32
  1617  00F644  63                 	db	99	;'c'
  1618  00F645  6F                 	db	111	;'o'
  1619  00F646  64                 	db	100	;'d'
  1620  00F647  65                 	db	101	;'e'
  1621  00F648  20                 	db	32
  1622  00F649  73                 	db	115	;'s'
  1623  00F64A  61                 	db	97	;'a'
  1624  00F64B  76                 	db	118	;'v'
  1625  00F64C  65                 	db	101	;'e'
  1626  00F64D  64                 	db	100	;'d'
  1627  00F64E  20                 	db	32
  1628  00F64F  66                 	db	102	;'f'
  1629  00F650  6F                 	db	111	;'o'
  1630  00F651  72                 	db	114	;'r'
  1631  00F652  20                 	db	32
  1632  00F653  73                 	db	115	;'s'
  1633  00F654  70                 	db	112	;'p'
  1634  00F655  65                 	db	101	;'e'
  1635  00F656  63                 	db	99	;'c'
  1636  00F657  69                 	db	105	;'i'
  1637  00F658  66                 	db	102	;'f'
  1638  00F659  69                 	db	105	;'i'
  1639  00F65A  65                 	db	101	;'e'
  1640  00F65B  64                 	db	100	;'d'
  1641  00F65C  20                 	db	32
  1642  00F65D  63                 	db	99	;'c'
  1643  00F65E  6F                 	db	111	;'o'
  1644  00F65F  6D                 	db	109	;'m'
  1645  00F660  6D                 	db	109	;'m'
  1646  00F661  61                 	db	97	;'a'
  1647  00F662  6E                 	db	110	;'n'
  1648  00F663  64                 	db	100	;'d'
  1649  00F664  00                 	db	0
  1650  00F665                     STR_49:
  1651  00F665  52                 	db	82	;'R'
  1652  00F666  65                 	db	101	;'e'
  1653  00F667  6D                 	db	109	;'m'
  1654  00F668  6F                 	db	111	;'o'
  1655  00F669  74                 	db	116	;'t'
  1656  00F66A  65                 	db	101	;'e'
  1657  00F66B  42                 	db	66	;'B'
  1658  00F66C  75                 	db	117	;'u'
  1659  00F66D  74                 	db	116	;'t'
  1660  00F66E  74                 	db	116	;'t'
  1661  00F66F  6F                 	db	111	;'o'
  1662  00F670  6E                 	db	110	;'n'
  1663  00F671  25                 	db	37
  1664  00F672  6C                 	db	108	;'l'
  1665  00F673  64                 	db	100	;'d'
  1666  00F674  20                 	db	32
  1667  00F675  6E                 	db	110	;'n'
  1668  00F676  6F                 	db	111	;'o'
  1669  00F677  77                 	db	119	;'w'
  1670  00F678  20                 	db	32
  1671  00F679  74                 	db	116	;'t'
  1672  00F67A  72                 	db	114	;'r'
  1673  00F67B  61                 	db	97	;'a'
  1674  00F67C  6E                 	db	110	;'n'
  1675  00F67D  73                 	db	115	;'s'
  1676  00F67E  6D                 	db	109	;'m'
  1677  00F67F  69                 	db	105	;'i'
  1678  00F680  74                 	db	116	;'t'
  1679  00F681  73                 	db	115	;'s'
  1680  00F682  20                 	db	32
  1681  00F683  4E                 	db	78	;'N'
  1682  00F684  45                 	db	69	;'E'
  1683  00F685  43                 	db	67	;'C'
  1684  00F686  20                 	db	32
  1685  00F687  63                 	db	99	;'c'
  1686  00F688  6F                 	db	111	;'o'
  1687  00F689  64                 	db	100	;'d'
  1688  00F68A  65                 	db	101	;'e'
  1689  00F68B  20                 	db	32
  1690  00F68C  30                 	db	48	;'0'
  1691  00F68D  78                 	db	120	;'x'
  1692  00F68E  25                 	db	37
  1693  00F68F  6C                 	db	108	;'l'
  1694  00F690  58                 	db	88	;'X'
  1695  00F691  20                 	db	32
  1696  00F692  00                 	db	0
  1697  00F693                     STR_122:
  1698  00F693  43                 	db	67	;'C'
  1699  00F694  6C                 	db	108	;'l'
  1700  00F695  65                 	db	101	;'e'
  1701  00F696  61                 	db	97	;'a'
  1702  00F697  72                 	db	114	;'r'
  1703  00F698  73                 	db	115	;'s'
  1704  00F699  20                 	db	32
  1705  00F69A  73                 	db	115	;'s'
  1706  00F69B  61                 	db	97	;'a'
  1707  00F69C  76                 	db	118	;'v'
  1708  00F69D  65                 	db	101	;'e'
  1709  00F69E  64                 	db	100	;'d'
  1710  00F69F  20                 	db	32
  1711  00F6A0  42                 	db	66	;'B'
  1712  00F6A1  75                 	db	117	;'u'
  1713  00F6A2  74                 	db	116	;'t'
  1714  00F6A3  74                 	db	116	;'t'
  1715  00F6A4  6F                 	db	111	;'o'
  1716  00F6A5  6E                 	db	110	;'n'
  1717  00F6A6  20                 	db	32
  1718  00F6A7  66                 	db	102	;'f'
  1719  00F6A8  6F                 	db	111	;'o'
  1720  00F6A9  72                 	db	114	;'r'
  1721  00F6AA  20                 	db	32
  1722  00F6AB  52                 	db	82	;'R'
  1723  00F6AC  46                 	db	70	;'F'
  1724  00F6AD  20                 	db	32
  1725  00F6AE  43                 	db	67	;'C'
  1726  00F6AF  6F                 	db	111	;'o'
  1727  00F6B0  6E                 	db	110	;'n'
  1728  00F6B1  66                 	db	102	;'f'
  1729  00F6B2  69                 	db	105	;'i'
  1730  00F6B3  67                 	db	103	;'g'
  1731  00F6B4  20                 	db	32
  1732  00F6B5  32                 	db	50	;'2'
  1733  00F6B6  20                 	db	32
  1734  00F6B7  63                 	db	99	;'c'
  1735  00F6B8  68                 	db	104	;'h'
  1736  00F6B9  61                 	db	97	;'a'
  1737  00F6BA  6E                 	db	110	;'n'
  1738  00F6BB  6E                 	db	110	;'n'
  1739  00F6BC  65                 	db	101	;'e'
  1740  00F6BD  6C                 	db	108	;'l'
  1741  00F6BE  20                 	db	32
  1742  00F6BF  42                 	db	66	;'B'
  1743  00F6C0  00                 	db	0
  1744  00F6C1                     STR_116:
  1745  00F6C1  43                 	db	67	;'C'
  1746  00F6C2  6C                 	db	108	;'l'
  1747  00F6C3  65                 	db	101	;'e'
  1748  00F6C4  61                 	db	97	;'a'
  1749  00F6C5  72                 	db	114	;'r'
  1750  00F6C6  73                 	db	115	;'s'
  1751  00F6C7  20                 	db	32
  1752  00F6C8  73                 	db	115	;'s'
  1753  00F6C9  61                 	db	97	;'a'
  1754  00F6CA  76                 	db	118	;'v'
  1755  00F6CB  65                 	db	101	;'e'
  1756  00F6CC  64                 	db	100	;'d'
  1757  00F6CD  20                 	db	32
  1758  00F6CE  42                 	db	66	;'B'
  1759  00F6CF  75                 	db	117	;'u'
  1760  00F6D0  74                 	db	116	;'t'
  1761  00F6D1  74                 	db	116	;'t'
  1762  00F6D2  6F                 	db	111	;'o'
  1763  00F6D3  6E                 	db	110	;'n'
  1764  00F6D4  20                 	db	32
  1765  00F6D5  66                 	db	102	;'f'
  1766  00F6D6  6F                 	db	111	;'o'
  1767  00F6D7  72                 	db	114	;'r'
  1768  00F6D8  20                 	db	32
  1769  00F6D9  52                 	db	82	;'R'
  1770  00F6DA  46                 	db	70	;'F'
  1771  00F6DB  20                 	db	32
  1772  00F6DC  43                 	db	67	;'C'
  1773  00F6DD  6F                 	db	111	;'o'
  1774  00F6DE  6E                 	db	110	;'n'
  1775  00F6DF  66                 	db	102	;'f'
  1776  00F6E0  69                 	db	105	;'i'
  1777  00F6E1  67                 	db	103	;'g'
  1778  00F6E2  20                 	db	32
  1779  00F6E3  31                 	db	49	;'1'
  1780  00F6E4  20                 	db	32
  1781  00F6E5  63                 	db	99	;'c'
  1782  00F6E6  68                 	db	104	;'h'
  1783  00F6E7  61                 	db	97	;'a'
  1784  00F6E8  6E                 	db	110	;'n'
  1785  00F6E9  6E                 	db	110	;'n'
  1786  00F6EA  65                 	db	101	;'e'
  1787  00F6EB  6C                 	db	108	;'l'
  1788  00F6EC  20                 	db	32
  1789  00F6ED  44                 	db	68	;'D'
  1790  00F6EE  00                 	db	0
  1791  00F6EF                     STR_124:
  1792  00F6EF  43                 	db	67	;'C'
  1793  00F6F0  6C                 	db	108	;'l'
  1794  00F6F1  65                 	db	101	;'e'
  1795  00F6F2  61                 	db	97	;'a'
  1796  00F6F3  72                 	db	114	;'r'
  1797  00F6F4  73                 	db	115	;'s'
  1798  00F6F5  20                 	db	32
  1799  00F6F6  73                 	db	115	;'s'
  1800  00F6F7  61                 	db	97	;'a'
  1801  00F6F8  76                 	db	118	;'v'
  1802  00F6F9  65                 	db	101	;'e'
  1803  00F6FA  64                 	db	100	;'d'
  1804  00F6FB  20                 	db	32
  1805  00F6FC  42                 	db	66	;'B'
  1806  00F6FD  75                 	db	117	;'u'
  1807  00F6FE  74                 	db	116	;'t'
  1808  00F6FF  74                 	db	116	;'t'
  1809  00F700  6F                 	db	111	;'o'
  1810  00F701  6E                 	db	110	;'n'
  1811  00F702  20                 	db	32
  1812  00F703  66                 	db	102	;'f'
  1813  00F704  6F                 	db	111	;'o'
  1814  00F705  72                 	db	114	;'r'
  1815  00F706  20                 	db	32
  1816  00F707  52                 	db	82	;'R'
  1817  00F708  46                 	db	70	;'F'
  1818  00F709  20                 	db	32
  1819  00F70A  43                 	db	67	;'C'
  1820  00F70B  6F                 	db	111	;'o'
  1821  00F70C  6E                 	db	110	;'n'
  1822  00F70D  66                 	db	102	;'f'
  1823  00F70E  69                 	db	105	;'i'
  1824  00F70F  67                 	db	103	;'g'
  1825  00F710  20                 	db	32
  1826  00F711  32                 	db	50	;'2'
  1827  00F712  20                 	db	32
  1828  00F713  63                 	db	99	;'c'
  1829  00F714  68                 	db	104	;'h'
  1830  00F715  61                 	db	97	;'a'
  1831  00F716  6E                 	db	110	;'n'
  1832  00F717  6E                 	db	110	;'n'
  1833  00F718  65                 	db	101	;'e'
  1834  00F719  6C                 	db	108	;'l'
  1835  00F71A  20                 	db	32
  1836  00F71B  44                 	db	68	;'D'
  1837  00F71C  00                 	db	0
  1838  00F71D                     STR_118:
  1839  00F71D  43                 	db	67	;'C'
  1840  00F71E  6C                 	db	108	;'l'
  1841  00F71F  65                 	db	101	;'e'
  1842  00F720  61                 	db	97	;'a'
  1843  00F721  72                 	db	114	;'r'
  1844  00F722  73                 	db	115	;'s'
  1845  00F723  20                 	db	32
  1846  00F724  73                 	db	115	;'s'
  1847  00F725  61                 	db	97	;'a'
  1848  00F726  76                 	db	118	;'v'
  1849  00F727  65                 	db	101	;'e'
  1850  00F728  64                 	db	100	;'d'
  1851  00F729  20                 	db	32
  1852  00F72A  42                 	db	66	;'B'
  1853  00F72B  75                 	db	117	;'u'
  1854  00F72C  74                 	db	116	;'t'
  1855  00F72D  74                 	db	116	;'t'
  1856  00F72E  6F                 	db	111	;'o'
  1857  00F72F  6E                 	db	110	;'n'
  1858  00F730  20                 	db	32
  1859  00F731  66                 	db	102	;'f'
  1860  00F732  6F                 	db	111	;'o'
  1861  00F733  72                 	db	114	;'r'
  1862  00F734  20                 	db	32
  1863  00F735  52                 	db	82	;'R'
  1864  00F736  46                 	db	70	;'F'
  1865  00F737  20                 	db	32
  1866  00F738  43                 	db	67	;'C'
  1867  00F739  6F                 	db	111	;'o'
  1868  00F73A  6E                 	db	110	;'n'
  1869  00F73B  66                 	db	102	;'f'
  1870  00F73C  69                 	db	105	;'i'
  1871  00F73D  67                 	db	103	;'g'
  1872  00F73E  20                 	db	32
  1873  00F73F  31                 	db	49	;'1'
  1874  00F740  20                 	db	32
  1875  00F741  63                 	db	99	;'c'
  1876  00F742  68                 	db	104	;'h'
  1877  00F743  61                 	db	97	;'a'
  1878  00F744  6E                 	db	110	;'n'
  1879  00F745  6E                 	db	110	;'n'
  1880  00F746  65                 	db	101	;'e'
  1881  00F747  6C                 	db	108	;'l'
  1882  00F748  20                 	db	32
  1883  00F749  45                 	db	69	;'E'
  1884  00F74A  00                 	db	0
  1885  00F74B                     STR_120:
  1886  00F74B  43                 	db	67	;'C'
  1887  00F74C  6C                 	db	108	;'l'
  1888  00F74D  65                 	db	101	;'e'
  1889  00F74E  61                 	db	97	;'a'
  1890  00F74F  72                 	db	114	;'r'
  1891  00F750  73                 	db	115	;'s'
  1892  00F751  20                 	db	32
  1893  00F752  73                 	db	115	;'s'
  1894  00F753  61                 	db	97	;'a'
  1895  00F754  76                 	db	118	;'v'
  1896  00F755  65                 	db	101	;'e'
  1897  00F756  64                 	db	100	;'d'
  1898  00F757  20                 	db	32
  1899  00F758  42                 	db	66	;'B'
  1900  00F759  75                 	db	117	;'u'
  1901  00F75A  74                 	db	116	;'t'
  1902  00F75B  74                 	db	116	;'t'
  1903  00F75C  6F                 	db	111	;'o'
  1904  00F75D  6E                 	db	110	;'n'
  1905  00F75E  20                 	db	32
  1906  00F75F  66                 	db	102	;'f'
  1907  00F760  6F                 	db	111	;'o'
  1908  00F761  72                 	db	114	;'r'
  1909  00F762  20                 	db	32
  1910  00F763  52                 	db	82	;'R'
  1911  00F764  46                 	db	70	;'F'
  1912  00F765  20                 	db	32
  1913  00F766  43                 	db	67	;'C'
  1914  00F767  6F                 	db	111	;'o'
  1915  00F768  6E                 	db	110	;'n'
  1916  00F769  66                 	db	102	;'f'
  1917  00F76A  69                 	db	105	;'i'
  1918  00F76B  67                 	db	103	;'g'
  1919  00F76C  20                 	db	32
  1920  00F76D  31                 	db	49	;'1'
  1921  00F76E  20                 	db	32
  1922  00F76F  63                 	db	99	;'c'
  1923  00F770  68                 	db	104	;'h'
  1924  00F771  61                 	db	97	;'a'
  1925  00F772  6E                 	db	110	;'n'
  1926  00F773  6E                 	db	110	;'n'
  1927  00F774  65                 	db	101	;'e'
  1928  00F775  6C                 	db	108	;'l'
  1929  00F776  20                 	db	32
  1930  00F777  46                 	db	70	;'F'
  1931  00F778  00                 	db	0
  1932  00F779                     STR_126:
  1933  00F779  43                 	db	67	;'C'
  1934  00F77A  6C                 	db	108	;'l'
  1935  00F77B  65                 	db	101	;'e'
  1936  00F77C  61                 	db	97	;'a'
  1937  00F77D  72                 	db	114	;'r'
  1938  00F77E  73                 	db	115	;'s'
  1939  00F77F  20                 	db	32
  1940  00F780  73                 	db	115	;'s'
  1941  00F781  61                 	db	97	;'a'
  1942  00F782  76                 	db	118	;'v'
  1943  00F783  65                 	db	101	;'e'
  1944  00F784  64                 	db	100	;'d'
  1945  00F785  20                 	db	32
  1946  00F786  42                 	db	66	;'B'
  1947  00F787  75                 	db	117	;'u'
  1948  00F788  74                 	db	116	;'t'
  1949  00F789  74                 	db	116	;'t'
  1950  00F78A  6F                 	db	111	;'o'
  1951  00F78B  6E                 	db	110	;'n'
  1952  00F78C  20                 	db	32
  1953  00F78D  66                 	db	102	;'f'
  1954  00F78E  6F                 	db	111	;'o'
  1955  00F78F  72                 	db	114	;'r'
  1956  00F790  20                 	db	32
  1957  00F791  52                 	db	82	;'R'
  1958  00F792  46                 	db	70	;'F'
  1959  00F793  20                 	db	32
  1960  00F794  43                 	db	67	;'C'
  1961  00F795  6F                 	db	111	;'o'
  1962  00F796  6E                 	db	110	;'n'
  1963  00F797  66                 	db	102	;'f'
  1964  00F798  69                 	db	105	;'i'
  1965  00F799  67                 	db	103	;'g'
  1966  00F79A  20                 	db	32
  1967  00F79B  32                 	db	50	;'2'
  1968  00F79C  20                 	db	32
  1969  00F79D  63                 	db	99	;'c'
  1970  00F79E  68                 	db	104	;'h'
  1971  00F79F  61                 	db	97	;'a'
  1972  00F7A0  6E                 	db	110	;'n'
  1973  00F7A1  6E                 	db	110	;'n'
  1974  00F7A2  65                 	db	101	;'e'
  1975  00F7A3  6C                 	db	108	;'l'
  1976  00F7A4  20                 	db	32
  1977  00F7A5  48                 	db	72	;'H'
  1978  00F7A6  00                 	db	0
  1979  00F7A7                     STR_71:
  1980  00F7A7  45                 	db	69	;'E'
  1981  00F7A8  72                 	db	114	;'r'
  1982  00F7A9  72                 	db	114	;'r'
  1983  00F7AA  6F                 	db	111	;'o'
  1984  00F7AB  72                 	db	114	;'r'
  1985  00F7AC  3A                 	db	58	;':'
  1986  00F7AD  20                 	db	32
  1987  00F7AE  4E                 	db	78	;'N'
  1988  00F7AF  45                 	db	69	;'E'
  1989  00F7B0  43                 	db	67	;'C'
  1990  00F7B1  20                 	db	32
  1991  00F7B2  63                 	db	99	;'c'
  1992  00F7B3  6F                 	db	111	;'o'
  1993  00F7B4  64                 	db	100	;'d'
  1994  00F7B5  65                 	db	101	;'e'
  1995  00F7B6  20                 	db	32
  1996  00F7B7  61                 	db	97	;'a'
  1997  00F7B8  6C                 	db	108	;'l'
  1998  00F7B9  72                 	db	114	;'r'
  1999  00F7BA  65                 	db	101	;'e'
  2000  00F7BB  61                 	db	97	;'a'
  2001  00F7BC  64                 	db	100	;'d'
  2002  00F7BD  79                 	db	121	;'y'
  2003  00F7BE  20                 	db	32
  2004  00F7BF  73                 	db	115	;'s'
  2005  00F7C0  61                 	db	97	;'a'
  2006  00F7C1  76                 	db	118	;'v'
  2007  00F7C2  65                 	db	101	;'e'
  2008  00F7C3  64                 	db	100	;'d'
  2009  00F7C4  20                 	db	32
  2010  00F7C5  74                 	db	116	;'t'
  2011  00F7C6  6F                 	db	111	;'o'
  2012  00F7C7  20                 	db	32
  2013  00F7C8  74                 	db	116	;'t'
  2014  00F7C9  68                 	db	104	;'h'
  2015  00F7CA  69                 	db	105	;'i'
  2016  00F7CB  73                 	db	115	;'s'
  2017  00F7CC  20                 	db	32
  2018  00F7CD  52                 	db	82	;'R'
  2019  00F7CE  46                 	db	70	;'F'
  2020  00F7CF  20                 	db	32
  2021  00F7D0  63                 	db	99	;'c'
  2022  00F7D1  6F                 	db	111	;'o'
  2023  00F7D2  64                 	db	100	;'d'
  2024  00F7D3  65                 	db	101	;'e'
  2025  00F7D4  00                 	db	0
  2026  00F7D5                     STR_47:
  2027  00F7D5  4E                 	db	78	;'N'
  2028  00F7D6  45                 	db	69	;'E'
  2029  00F7D7  43                 	db	67	;'C'
  2030  00F7D8  20                 	db	32
  2031  00F7D9  43                 	db	67	;'C'
  2032  00F7DA  6F                 	db	111	;'o'
  2033  00F7DB  64                 	db	100	;'d'
  2034  00F7DC  65                 	db	101	;'e'
  2035  00F7DD  20                 	db	32
  2036  00F7DE  61                 	db	97	;'a'
  2037  00F7DF  64                 	db	100	;'d'
  2038  00F7E0  64                 	db	100	;'d'
  2039  00F7E1  72                 	db	114	;'r'
  2040  00F7E2  65                 	db	101	;'e'
  2041  00F7E3  73                 	db	115	;'s'
  2042  00F7E4  73                 	db	115	;'s'
  2043  00F7E5  3A                 	db	58	;':'
  2044  00F7E6  20                 	db	32
  2045  00F7E7  30                 	db	48	;'0'
  2046  00F7E8  78                 	db	120	;'x'
  2047  00F7E9  25                 	db	37
  2048  00F7EA  30                 	db	48	;'0'
  2049  00F7EB  32                 	db	50	;'2'
  2050  00F7EC  58                 	db	88	;'X'
  2051  00F7ED  20                 	db	32
  2052  00F7EE  2C                 	db	44
  2053  00F7EF  20                 	db	32
  2054  00F7F0  63                 	db	99	;'c'
  2055  00F7F1  6F                 	db	111	;'o'
  2056  00F7F2  6D                 	db	109	;'m'
  2057  00F7F3  6D                 	db	109	;'m'
  2058  00F7F4  61                 	db	97	;'a'
  2059  00F7F5  6E                 	db	110	;'n'
  2060  00F7F6  64                 	db	100	;'d'
  2061  00F7F7  3A                 	db	58	;':'
  2062  00F7F8  20                 	db	32
  2063  00F7F9  30                 	db	48	;'0'
  2064  00F7FA  78                 	db	120	;'x'
  2065  00F7FB  25                 	db	37
  2066  00F7FC  30                 	db	48	;'0'
  2067  00F7FD  32                 	db	50	;'2'
  2068  00F7FE  58                 	db	88	;'X'
  2069  00F7FF  20                 	db	32
  2070  00F800  00                 	db	0
  2071  00F801                     STR_75:
  2072  00F801  52                 	db	82	;'R'
  2073  00F802  46                 	db	70	;'F'
  2074  00F803  20                 	db	32
  2075  00F804  63                 	db	99	;'c'
  2076  00F805  6F                 	db	111	;'o'
  2077  00F806  6E                 	db	110	;'n'
  2078  00F807  66                 	db	102	;'f'
  2079  00F808  69                 	db	105	;'i'
  2080  00F809  67                 	db	103	;'g'
  2081  00F80A  20                 	db	32
  2082  00F80B  25                 	db	37
  2083  00F80C  64                 	db	100	;'d'
  2084  00F80D  20                 	db	32
  2085  00F80E  63                 	db	99	;'c'
  2086  00F80F  68                 	db	104	;'h'
  2087  00F810  61                 	db	97	;'a'
  2088  00F811  6E                 	db	110	;'n'
  2089  00F812  6E                 	db	110	;'n'
  2090  00F813  65                 	db	101	;'e'
  2091  00F814  6C                 	db	108	;'l'
  2092  00F815  20                 	db	32
  2093  00F816  25                 	db	37
  2094  00F817  63                 	db	99	;'c'
  2095  00F818  20                 	db	32
  2096  00F819  73                 	db	115	;'s'
  2097  00F81A  75                 	db	117	;'u'
  2098  00F81B  63                 	db	99	;'c'
  2099  00F81C  63                 	db	99	;'c'
  2100  00F81D  65                 	db	101	;'e'
  2101  00F81E  73                 	db	115	;'s'
  2102  00F81F  73                 	db	115	;'s'
  2103  00F820  66                 	db	102	;'f'
  2104  00F821  75                 	db	117	;'u'
  2105  00F822  6C                 	db	108	;'l'
  2106  00F823  6C                 	db	108	;'l'
  2107  00F824  79                 	db	121	;'y'
  2108  00F825  20                 	db	32
  2109  00F826  65                 	db	101	;'e'
  2110  00F827  72                 	db	114	;'r'
  2111  00F828  61                 	db	97	;'a'
  2112  00F829  73                 	db	115	;'s'
  2113  00F82A  65                 	db	101	;'e'
  2114  00F82B  64                 	db	100	;'d'
  2115  00F82C  00                 	db	0
  2116  00F82D                     STR_76:
  2117  00F82D  45                 	db	69	;'E'
  2118  00F82E  72                 	db	114	;'r'
  2119  00F82F  72                 	db	114	;'r'
  2120  00F830  6F                 	db	111	;'o'
  2121  00F831  72                 	db	114	;'r'
  2122  00F832  3A                 	db	58	;':'
  2123  00F833  20                 	db	32
  2124  00F834  52                 	db	82	;'R'
  2125  00F835  46                 	db	70	;'F'
  2126  00F836  20                 	db	32
  2127  00F837  63                 	db	99	;'c'
  2128  00F838  68                 	db	104	;'h'
  2129  00F839  61                 	db	97	;'a'
  2130  00F83A  6E                 	db	110	;'n'
  2131  00F83B  6E                 	db	110	;'n'
  2132  00F83C  65                 	db	101	;'e'
  2133  00F83D  6C                 	db	108	;'l'
  2134  00F83E  20                 	db	32
  2135  00F83F  6E                 	db	110	;'n'
  2136  00F840  65                 	db	101	;'e'
  2137  00F841  65                 	db	101	;'e'
  2138  00F842  64                 	db	100	;'d'
  2139  00F843  73                 	db	115	;'s'
  2140  00F844  20                 	db	32
  2141  00F845  74                 	db	116	;'t'
  2142  00F846  6F                 	db	111	;'o'
  2143  00F847  20                 	db	32
  2144  00F848  62                 	db	98	;'b'
  2145  00F849  65                 	db	101	;'e'
  2146  00F84A  20                 	db	32
  2147  00F84B  6F                 	db	111	;'o'
  2148  00F84C  6E                 	db	110	;'n'
  2149  00F84D  65                 	db	101	;'e'
  2150  00F84E  20                 	db	32
  2151  00F84F  63                 	db	99	;'c'
  2152  00F850  68                 	db	104	;'h'
  2153  00F851  61                 	db	97	;'a'
  2154  00F852  72                 	db	114	;'r'
  2155  00F853  61                 	db	97	;'a'
  2156  00F854  63                 	db	99	;'c'
  2157  00F855  74                 	db	116	;'t'
  2158  00F856  65                 	db	101	;'e'
  2159  00F857  72                 	db	114	;'r'
  2160  00F858  00                 	db	0
  2161  00F859                     STR_70:
  2162  00F859  45                 	db	69	;'E'
  2163  00F85A  72                 	db	114	;'r'
  2164  00F85B  72                 	db	114	;'r'
  2165  00F85C  6F                 	db	111	;'o'
  2166  00F85D  72                 	db	114	;'r'
  2167  00F85E  3A                 	db	58	;':'
  2168  00F85F  20                 	db	32
  2169  00F860  4E                 	db	78	;'N'
  2170  00F861  6F                 	db	111	;'o'
  2171  00F862  20                 	db	32
  2172  00F863  73                 	db	115	;'s'
  2173  00F864  70                 	db	112	;'p'
  2174  00F865  61                 	db	97	;'a'
  2175  00F866  63                 	db	99	;'c'
  2176  00F867  65                 	db	101	;'e'
  2177  00F868  20                 	db	32
  2178  00F869  61                 	db	97	;'a'
  2179  00F86A  76                 	db	118	;'v'
  2180  00F86B  61                 	db	97	;'a'
  2181  00F86C  69                 	db	105	;'i'
  2182  00F86D  6C                 	db	108	;'l'
  2183  00F86E  61                 	db	97	;'a'
  2184  00F86F  62                 	db	98	;'b'
  2185  00F870  6C                 	db	108	;'l'
  2186  00F871  65                 	db	101	;'e'
  2187  00F872  20                 	db	32
  2188  00F873  74                 	db	116	;'t'
  2189  00F874  6F                 	db	111	;'o'
  2190  00F875  20                 	db	32
  2191  00F876  74                 	db	116	;'t'
  2192  00F877  68                 	db	104	;'h'
  2193  00F878  69                 	db	105	;'i'
  2194  00F879  73                 	db	115	;'s'
  2195  00F87A  20                 	db	32
  2196  00F87B  52                 	db	82	;'R'
  2197  00F87C  46                 	db	70	;'F'
  2198  00F87D  20                 	db	32
  2199  00F87E  63                 	db	99	;'c'
  2200  00F87F  6F                 	db	111	;'o'
  2201  00F880  64                 	db	100	;'d'
  2202  00F881  65                 	db	101	;'e'
  2203  00F882  00                 	db	0
  2204  00F883                     STR_128:
  2205  00F883  4E                 	db	78	;'N'
  2206  00F884  45                 	db	69	;'E'
  2207  00F885  43                 	db	67	;'C'
  2208  00F886  20                 	db	32
  2209  00F887  64                 	db	100	;'d'
  2210  00F888  65                 	db	101	;'e'
  2211  00F889  73                 	db	115	;'s'
  2212  00F88A  63                 	db	99	;'c'
  2213  00F88B  72                 	db	114	;'r'
  2214  00F88C  69                 	db	105	;'i'
  2215  00F88D  70                 	db	112	;'p'
  2216  00F88E  74                 	db	116	;'t'
  2217  00F88F  69                 	db	105	;'i'
  2218  00F890  6F                 	db	111	;'o'
  2219  00F891  6E                 	db	110	;'n'
  2220  00F892  20                 	db	32
  2221  00F893  66                 	db	102	;'f'
  2222  00F894  6F                 	db	111	;'o'
  2223  00F895  72                 	db	114	;'r'
  2224  00F896  20                 	db	32
  2225  00F897  41                 	db	65	;'A'
  2226  00F898  72                 	db	114	;'r'
  2227  00F899  62                 	db	98	;'b'
  2228  00F89A  69                 	db	105	;'i'
  2229  00F89B  74                 	db	116	;'t'
  2230  00F89C  72                 	db	114	;'r'
  2231  00F89D  61                 	db	97	;'a'
  2232  00F89E  72                 	db	114	;'r'
  2233  00F89F  79                 	db	121	;'y'
  2234  00F8A0  20                 	db	32
  2235  00F8A1  63                 	db	99	;'c'
  2236  00F8A2  6F                 	db	111	;'o'
  2237  00F8A3  64                 	db	100	;'d'
  2238  00F8A4  65                 	db	101	;'e'
  2239  00F8A5  20                 	db	32
  2240  00F8A6  73                 	db	115	;'s'
  2241  00F8A7  65                 	db	101	;'e'
  2242  00F8A8  6E                 	db	110	;'n'
  2243  00F8A9  64                 	db	100	;'d'
  2244  00F8AA  00                 	db	0
  2245  00F8AB                     STR_62:
  2246  00F8AB  45                 	db	69	;'E'
  2247  00F8AC  72                 	db	114	;'r'
  2248  00F8AD  72                 	db	114	;'r'
  2249  00F8AE  6F                 	db	111	;'o'
  2250  00F8AF  72                 	db	114	;'r'
  2251  00F8B0  3A                 	db	58	;':'
  2252  00F8B1  20                 	db	32
  2253  00F8B2  4E                 	db	78	;'N'
  2254  00F8B3  6F                 	db	111	;'o'
  2255  00F8B4  20                 	db	32
  2256  00F8B5  52                 	db	82	;'R'
  2257  00F8B6  46                 	db	70	;'F'
  2258  00F8B7  20                 	db	32
  2259  00F8B8  63                 	db	99	;'c'
  2260  00F8B9  6F                 	db	111	;'o'
  2261  00F8BA  6E                 	db	110	;'n'
  2262  00F8BB  66                 	db	102	;'f'
  2263  00F8BC  69                 	db	105	;'i'
  2264  00F8BD  67                 	db	103	;'g'
  2265  00F8BE  75                 	db	117	;'u'
  2266  00F8BF  72                 	db	114	;'r'
  2267  00F8C0  61                 	db	97	;'a'
  2268  00F8C1  74                 	db	116	;'t'
  2269  00F8C2  69                 	db	105	;'i'
  2270  00F8C3  6F                 	db	111	;'o'
  2271  00F8C4  6E                 	db	110	;'n'
  2272  00F8C5  20                 	db	32
  2273  00F8C6  73                 	db	115	;'s'
  2274  00F8C7  70                 	db	112	;'p'
  2275  00F8C8  65                 	db	101	;'e'
  2276  00F8C9  63                 	db	99	;'c'
  2277  00F8CA  69                 	db	105	;'i'
  2278  00F8CB  66                 	db	102	;'f'
  2279  00F8CC  69                 	db	105	;'i'
  2280  00F8CD  65                 	db	101	;'e'
  2281  00F8CE  64                 	db	100	;'d'
  2282  00F8CF  00                 	db	0
  2283  00F8D0                     STR_64:
  2284  00F8D0  45                 	db	69	;'E'
  2285  00F8D1  72                 	db	114	;'r'
  2286  00F8D2  72                 	db	114	;'r'
  2287  00F8D3  6F                 	db	111	;'o'
  2288  00F8D4  72                 	db	114	;'r'
  2289  00F8D5  3A                 	db	58	;':'
  2290  00F8D6  20                 	db	32
  2291  00F8D7  52                 	db	82	;'R'
  2292  00F8D8  46                 	db	70	;'F'
  2293  00F8D9  20                 	db	32
  2294  00F8DA  63                 	db	99	;'c'
  2295  00F8DB  6F                 	db	111	;'o'
  2296  00F8DC  6E                 	db	110	;'n'
  2297  00F8DD  66                 	db	102	;'f'
  2298  00F8DE  69                 	db	105	;'i'
  2299  00F8DF  67                 	db	103	;'g'
  2300  00F8E0  75                 	db	117	;'u'
  2301  00F8E1  72                 	db	114	;'r'
  2302  00F8E2  61                 	db	97	;'a'
  2303  00F8E3  74                 	db	116	;'t'
  2304  00F8E4  69                 	db	105	;'i'
  2305  00F8E5  6F                 	db	111	;'o'
  2306  00F8E6  6E                 	db	110	;'n'
  2307  00F8E7  20                 	db	32
  2308  00F8E8  6F                 	db	111	;'o'
  2309  00F8E9  75                 	db	117	;'u'
  2310  00F8EA  74                 	db	116	;'t'
  2311  00F8EB  20                 	db	32
  2312  00F8EC  6F                 	db	111	;'o'
  2313  00F8ED  66                 	db	102	;'f'
  2314  00F8EE  20                 	db	32
  2315  00F8EF  72                 	db	114	;'r'
  2316  00F8F0  61                 	db	97	;'a'
  2317  00F8F1  6E                 	db	110	;'n'
  2318  00F8F2  67                 	db	103	;'g'
  2319  00F8F3  65                 	db	101	;'e'
  2320  00F8F4  00                 	db	0
  2321  00F8F5                     STR_51:
  2322  00F8F5  45                 	db	69	;'E'
  2323  00F8F6  72                 	db	114	;'r'
  2324  00F8F7  72                 	db	114	;'r'
  2325  00F8F8  6F                 	db	111	;'o'
  2326  00F8F9  72                 	db	114	;'r'
  2327  00F8FA  3A                 	db	58	;':'
  2328  00F8FB  20                 	db	32
  2329  00F8FC  52                 	db	82	;'R'
  2330  00F8FD  65                 	db	101	;'e'
  2331  00F8FE  6D                 	db	109	;'m'
  2332  00F8FF  6F                 	db	111	;'o'
  2333  00F900  74                 	db	116	;'t'
  2334  00F901  65                 	db	101	;'e'
  2335  00F902  20                 	db	32
  2336  00F903  62                 	db	98	;'b'
  2337  00F904  75                 	db	117	;'u'
  2338  00F905  74                 	db	116	;'t'
  2339  00F906  74                 	db	116	;'t'
  2340  00F907  6F                 	db	111	;'o'
  2341  00F908  6E                 	db	110	;'n'
  2342  00F909  20                 	db	32
  2343  00F90A  6E                 	db	110	;'n'
  2344  00F90B  75                 	db	117	;'u'
  2345  00F90C  6D                 	db	109	;'m'
  2346  00F90D  62                 	db	98	;'b'
  2347  00F90E  65                 	db	101	;'e'
  2348  00F90F  72                 	db	114	;'r'
  2349  00F910  20                 	db	32
  2350  00F911  74                 	db	116	;'t'
  2351  00F912  6F                 	db	111	;'o'
  2352  00F913  6F                 	db	111	;'o'
  2353  00F914  20                 	db	32
  2354  00F915  68                 	db	104	;'h'
  2355  00F916  69                 	db	105	;'i'
  2356  00F917  67                 	db	103	;'g'
  2357  00F918  68                 	db	104	;'h'
  2358  00F919  00                 	db	0
  2359  00F91A                     STR_145:
  2360  00F91A  45                 	db	69	;'E'
  2361  00F91B  72                 	db	114	;'r'
  2362  00F91C  72                 	db	114	;'r'
  2363  00F91D  6F                 	db	111	;'o'
  2364  00F91E  72                 	db	114	;'r'
  2365  00F91F  3A                 	db	58	;':'
  2366  00F920  20                 	db	32
  2367  00F921  4E                 	db	78	;'N'
  2368  00F922  6F                 	db	111	;'o'
  2369  00F923  20                 	db	32
  2370  00F924  72                 	db	114	;'r'
  2371  00F925  65                 	db	101	;'e'
  2372  00F926  6D                 	db	109	;'m'
  2373  00F927  6F                 	db	111	;'o'
  2374  00F928  74                 	db	116	;'t'
  2375  00F929  65                 	db	101	;'e'
  2376  00F92A  20                 	db	32
  2377  00F92B  62                 	db	98	;'b'
  2378  00F92C  75                 	db	117	;'u'
  2379  00F92D  74                 	db	116	;'t'
  2380  00F92E  74                 	db	116	;'t'
  2381  00F92F  6F                 	db	111	;'o'
  2382  00F930  6E                 	db	110	;'n'
  2383  00F931  20                 	db	32
  2384  00F932  77                 	db	119	;'w'
  2385  00F933  61                 	db	97	;'a'
  2386  00F934  73                 	db	115	;'s'
  2387  00F935  20                 	db	32
  2388  00F936  70                 	db	112	;'p'
  2389  00F937  72                 	db	114	;'r'
  2390  00F938  65                 	db	101	;'e'
  2391  00F939  73                 	db	115	;'s'
  2392  00F93A  73                 	db	115	;'s'
  2393  00F93B  65                 	db	101	;'e'
  2394  00F93C  64                 	db	100	;'d'
  2395  00F93D  00                 	db	0
  2396  00F93E                     STR_52:
  2397  00F93E  45                 	db	69	;'E'
  2398  00F93F  72                 	db	114	;'r'
  2399  00F940  72                 	db	114	;'r'
  2400  00F941  6F                 	db	111	;'o'
  2401  00F942  72                 	db	114	;'r'
  2402  00F943  3A                 	db	58	;':'
  2403  00F944  20                 	db	32
  2404  00F945  52                 	db	82	;'R'
  2405  00F946  65                 	db	101	;'e'
  2406  00F947  6D                 	db	109	;'m'
  2407  00F948  6F                 	db	111	;'o'
  2408  00F949  74                 	db	116	;'t'
  2409  00F94A  65                 	db	101	;'e'
  2410  00F94B  20                 	db	32
  2411  00F94C  62                 	db	98	;'b'
  2412  00F94D  75                 	db	117	;'u'
  2413  00F94E  74                 	db	116	;'t'
  2414  00F94F  74                 	db	116	;'t'
  2415  00F950  6F                 	db	111	;'o'
  2416  00F951  6E                 	db	110	;'n'
  2417  00F952  20                 	db	32
  2418  00F953  6E                 	db	110	;'n'
  2419  00F954  6F                 	db	111	;'o'
  2420  00F955  74                 	db	116	;'t'
  2421  00F956  20                 	db	32
  2422  00F957  73                 	db	115	;'s'
  2423  00F958  70                 	db	112	;'p'
  2424  00F959  65                 	db	101	;'e'
  2425  00F95A  63                 	db	99	;'c'
  2426  00F95B  69                 	db	105	;'i'
  2427  00F95C  66                 	db	102	;'f'
  2428  00F95D  69                 	db	105	;'i'
  2429  00F95E  65                 	db	101	;'e'
  2430  00F95F  64                 	db	100	;'d'
  2431  00F960  00                 	db	0
  2432  00F961                     STR_34:
  2433  00F961  45                 	db	69	;'E'
  2434  00F962  72                 	db	114	;'r'
  2435  00F963  72                 	db	114	;'r'
  2436  00F964  6F                 	db	111	;'o'
  2437  00F965  72                 	db	114	;'r'
  2438  00F966  3A                 	db	58	;':'
  2439  00F967  20                 	db	32
  2440  00F968  63                 	db	99	;'c'
  2441  00F969  6F                 	db	111	;'o'
  2442  00F96A  75                 	db	117	;'u'
  2443  00F96B  6C                 	db	108	;'l'
  2444  00F96C  64                 	db	100	;'d'
  2445  00F96D  20                 	db	32
  2446  00F96E  6E                 	db	110	;'n'
  2447  00F96F  6F                 	db	111	;'o'
  2448  00F970  74                 	db	116	;'t'
  2449  00F971  20                 	db	32
  2450  00F972  64                 	db	100	;'d'
  2451  00F973  65                 	db	101	;'e'
  2452  00F974  63                 	db	99	;'c'
  2453  00F975  6F                 	db	111	;'o'
  2454  00F976  64                 	db	100	;'d'
  2455  00F977  65                 	db	101	;'e'
  2456  00F978  20                 	db	32
  2457  00F979  4E                 	db	78	;'N'
  2458  00F97A  45                 	db	69	;'E'
  2459  00F97B  43                 	db	67	;'C'
  2460  00F97C  20                 	db	32
  2461  00F97D  63                 	db	99	;'c'
  2462  00F97E  6F                 	db	111	;'o'
  2463  00F97F  64                 	db	100	;'d'
  2464  00F980  65                 	db	101	;'e'
  2465  00F981  00                 	db	0
  2466  00F982                     STR_138:
  2467  00F982  52                 	db	82	;'R'
  2468  00F983  43                 	db	67	;'C'
  2469  00F984  2D                 	db	45
  2470  00F985  30                 	db	48	;'0'
  2471  00F986  31                 	db	49	;'1'
  2472  00F987  35                 	db	53	;'5'
  2473  00F988  2A                 	db	42
  2474  00F989  33                 	db	51	;'3'
  2475  00F98A  20                 	db	32
  2476  00F98B  43                 	db	67	;'C'
  2477  00F98C  68                 	db	104	;'h'
  2478  00F98D  61                 	db	97	;'a'
  2479  00F98E  6E                 	db	110	;'n'
  2480  00F98F  6E                 	db	110	;'n'
  2481  00F990  65                 	db	101	;'e'
  2482  00F991  6C                 	db	108	;'l'
  2483  00F992  20                 	db	32
  2484  00F993  48                 	db	72	;'H'
  2485  00F994  20                 	db	32
  2486  00F995  64                 	db	100	;'d'
  2487  00F996  65                 	db	101	;'e'
  2488  00F997  76                 	db	118	;'v'
  2489  00F998  69                 	db	105	;'i'
  2490  00F999  63                 	db	99	;'c'
  2491  00F99A  65                 	db	101	;'e'
  2492  00F99B  20                 	db	32
  2493  00F99C  31                 	db	49	;'1'
  2494  00F99D  20                 	db	32
  2495  00F99E  4F                 	db	79	;'O'
  2496  00F99F  46                 	db	70	;'F'
  2497  00F9A0  46                 	db	70	;'F'
  2498  00F9A1  00                 	db	0
  2499  00F9A2                     STR_140:
  2500  00F9A2  52                 	db	82	;'R'
  2501  00F9A3  43                 	db	67	;'C'
  2502  00F9A4  2D                 	db	45
  2503  00F9A5  30                 	db	48	;'0'
  2504  00F9A6  31                 	db	49	;'1'
  2505  00F9A7  35                 	db	53	;'5'
  2506  00F9A8  2A                 	db	42
  2507  00F9A9  33                 	db	51	;'3'
  2508  00F9AA  20                 	db	32
  2509  00F9AB  43                 	db	67	;'C'
  2510  00F9AC  68                 	db	104	;'h'
  2511  00F9AD  61                 	db	97	;'a'
  2512  00F9AE  6E                 	db	110	;'n'
  2513  00F9AF  6E                 	db	110	;'n'
  2514  00F9B0  65                 	db	101	;'e'
  2515  00F9B1  6C                 	db	108	;'l'
  2516  00F9B2  20                 	db	32
  2517  00F9B3  48                 	db	72	;'H'
  2518  00F9B4  20                 	db	32
  2519  00F9B5  64                 	db	100	;'d'
  2520  00F9B6  65                 	db	101	;'e'
  2521  00F9B7  76                 	db	118	;'v'
  2522  00F9B8  69                 	db	105	;'i'
  2523  00F9B9  63                 	db	99	;'c'
  2524  00F9BA  65                 	db	101	;'e'
  2525  00F9BB  20                 	db	32
  2526  00F9BC  32                 	db	50	;'2'
  2527  00F9BD  20                 	db	32
  2528  00F9BE  4F                 	db	79	;'O'
  2529  00F9BF  46                 	db	70	;'F'
  2530  00F9C0  46                 	db	70	;'F'
  2531  00F9C1  00                 	db	0
  2532  00F9C2                     STR_142:
  2533  00F9C2  52                 	db	82	;'R'
  2534  00F9C3  43                 	db	67	;'C'
  2535  00F9C4  2D                 	db	45
  2536  00F9C5  30                 	db	48	;'0'
  2537  00F9C6  31                 	db	49	;'1'
  2538  00F9C7  35                 	db	53	;'5'
  2539  00F9C8  2A                 	db	42
  2540  00F9C9  33                 	db	51	;'3'
  2541  00F9CA  20                 	db	32
  2542  00F9CB  43                 	db	67	;'C'
  2543  00F9CC  68                 	db	104	;'h'
  2544  00F9CD  61                 	db	97	;'a'
  2545  00F9CE  6E                 	db	110	;'n'
  2546  00F9CF  6E                 	db	110	;'n'
  2547  00F9D0  65                 	db	101	;'e'
  2548  00F9D1  6C                 	db	108	;'l'
  2549  00F9D2  20                 	db	32
  2550  00F9D3  48                 	db	72	;'H'
  2551  00F9D4  20                 	db	32
  2552  00F9D5  64                 	db	100	;'d'
  2553  00F9D6  65                 	db	101	;'e'
  2554  00F9D7  76                 	db	118	;'v'
  2555  00F9D8  69                 	db	105	;'i'
  2556  00F9D9  63                 	db	99	;'c'
  2557  00F9DA  65                 	db	101	;'e'
  2558  00F9DB  20                 	db	32
  2559  00F9DC  33                 	db	51	;'3'
  2560  00F9DD  20                 	db	32
  2561  00F9DE  4F                 	db	79	;'O'
  2562  00F9DF  46                 	db	70	;'F'
  2563  00F9E0  46                 	db	70	;'F'
  2564  00F9E1  00                 	db	0
  2565  00F9E2                     STR_92:
  2566  00F9E2  43                 	db	67	;'C'
  2567  00F9E3  6C                 	db	108	;'l'
  2568  00F9E4  65                 	db	101	;'e'
  2569  00F9E5  61                 	db	97	;'a'
  2570  00F9E6  72                 	db	114	;'r'
  2571  00F9E7  73                 	db	115	;'s'
  2572  00F9E8  20                 	db	32
  2573  00F9E9  6D                 	db	109	;'m'
  2574  00F9EA  65                 	db	101	;'e'
  2575  00F9EB  6D                 	db	109	;'m'
  2576  00F9EC  6F                 	db	111	;'o'
  2577  00F9ED  72                 	db	114	;'r'
  2578  00F9EE  79                 	db	121	;'y'
  2579  00F9EF  20                 	db	32
  2580  00F9F0  61                 	db	97	;'a'
  2581  00F9F1  6E                 	db	110	;'n'
  2582  00F9F2  64                 	db	100	;'d'
  2583  00F9F3  20                 	db	32
  2584  00F9F4  72                 	db	114	;'r'
  2585  00F9F5  65                 	db	101	;'e'
  2586  00F9F6  73                 	db	115	;'s'
  2587  00F9F7  65                 	db	101	;'e'
  2588  00F9F8  74                 	db	116	;'t'
  2589  00F9F9  73                 	db	115	;'s'
  2590  00F9FA  20                 	db	32
  2591  00F9FB  64                 	db	100	;'d'
  2592  00F9FC  65                 	db	101	;'e'
  2593  00F9FD  76                 	db	118	;'v'
  2594  00F9FE  69                 	db	105	;'i'
  2595  00F9FF  63                 	db	99	;'c'
  2596  00FA00  65                 	db	101	;'e'
  2597  00FA01  00                 	db	0
  2598  00FA02                     STR_78:
  2599  00FA02  45                 	db	69	;'E'
  2600  00FA03  6E                 	db	110	;'n'
  2601  00FA04  74                 	db	116	;'t'
  2602  00FA05  65                 	db	101	;'e'
  2603  00FA06  72                 	db	114	;'r'
  2604  00FA07  20                 	db	32
  2605  00FA08  59                 	db	89	;'Y'
  2606  00FA09  20                 	db	32
  2607  00FA0A  74                 	db	116	;'t'
  2608  00FA0B  6F                 	db	111	;'o'
  2609  00FA0C  20                 	db	32
  2610  00FA0D  72                 	db	114	;'r'
  2611  00FA0E  65                 	db	101	;'e'
  2612  00FA0F  73                 	db	115	;'s'
  2613  00FA10  65                 	db	101	;'e'
  2614  00FA11  74                 	db	116	;'t'
  2615  00FA12  20                 	db	32
  2616  00FA13  6F                 	db	111	;'o'
  2617  00FA14  72                 	db	114	;'r'
  2618  00FA15  20                 	db	32
  2619  00FA16  4E                 	db	78	;'N'
  2620  00FA17  20                 	db	32
  2621  00FA18  74                 	db	116	;'t'
  2622  00FA19  6F                 	db	111	;'o'
  2623  00FA1A  20                 	db	32
  2624  00FA1B  63                 	db	99	;'c'
  2625  00FA1C  61                 	db	97	;'a'
  2626  00FA1D  6E                 	db	110	;'n'
  2627  00FA1E  63                 	db	99	;'c'
  2628  00FA1F  65                 	db	101	;'e'
  2629  00FA20  6C                 	db	108	;'l'
  2630  00FA21  00                 	db	0
  2631  00FA22                     STR_30:
  2632  00FA22  45                 	db	69	;'E'
  2633  00FA23  72                 	db	114	;'r'
  2634  00FA24  72                 	db	114	;'r'
  2635  00FA25  6F                 	db	111	;'o'
  2636  00FA26  72                 	db	114	;'r'
  2637  00FA27  3A                 	db	58	;':'
  2638  00FA28  20                 	db	32
  2639  00FA29  63                 	db	99	;'c'
  2640  00FA2A  6F                 	db	111	;'o'
  2641  00FA2B  75                 	db	117	;'u'
  2642  00FA2C  6C                 	db	108	;'l'
  2643  00FA2D  64                 	db	100	;'d'
  2644  00FA2E  20                 	db	32
  2645  00FA2F  6E                 	db	110	;'n'
  2646  00FA30  6F                 	db	111	;'o'
  2647  00FA31  74                 	db	116	;'t'
  2648  00FA32  20                 	db	32
  2649  00FA33  64                 	db	100	;'d'
  2650  00FA34  65                 	db	101	;'e'
  2651  00FA35  63                 	db	99	;'c'
  2652  00FA36  6F                 	db	111	;'o'
  2653  00FA37  64                 	db	100	;'d'
  2654  00FA38  65                 	db	101	;'e'
  2655  00FA39  20                 	db	32
  2656  00FA3A  41                 	db	65	;'A'
  2657  00FA3B  64                 	db	100	;'d'
  2658  00FA3C  64                 	db	100	;'d'
  2659  00FA3D  72                 	db	114	;'r'
  2660  00FA3E  65                 	db	101	;'e'
  2661  00FA3F  73                 	db	115	;'s'
  2662  00FA40  73                 	db	115	;'s'
  2663  00FA41  00                 	db	0
  2664  00FA42                     STR_25:
  2665  00FA42  45                 	db	69	;'E'
  2666  00FA43  72                 	db	114	;'r'
  2667  00FA44  72                 	db	114	;'r'
  2668  00FA45  6F                 	db	111	;'o'
  2669  00FA46  72                 	db	114	;'r'
  2670  00FA47  3A                 	db	58	;':'
  2671  00FA48  20                 	db	32
  2672  00FA49  43                 	db	67	;'C'
  2673  00FA4A  6F                 	db	111	;'o'
  2674  00FA4B  6D                 	db	109	;'m'
  2675  00FA4C  6D                 	db	109	;'m'
  2676  00FA4D  61                 	db	97	;'a'
  2677  00FA4E  6E                 	db	110	;'n'
  2678  00FA4F  64                 	db	100	;'d'
  2679  00FA50  20                 	db	32
  2680  00FA51  6C                 	db	108	;'l'
  2681  00FA52  61                 	db	97	;'a'
  2682  00FA53  72                 	db	114	;'r'
  2683  00FA54  67                 	db	103	;'g'
  2684  00FA55  65                 	db	101	;'e'
  2685  00FA56  72                 	db	114	;'r'
  2686  00FA57  20                 	db	32
  2687  00FA58  74                 	db	116	;'t'
  2688  00FA59  68                 	db	104	;'h'
  2689  00FA5A  61                 	db	97	;'a'
  2690  00FA5B  74                 	db	116	;'t'
  2691  00FA5C  20                 	db	32
  2692  00FA5D  32                 	db	50	;'2'
  2693  00FA5E  35                 	db	53	;'5'
  2694  00FA5F  35                 	db	53	;'5'
  2695  00FA60  00                 	db	0
  2696  00FA61                     STR_26:
  2697  00FA61  45                 	db	69	;'E'
  2698  00FA62  72                 	db	114	;'r'
  2699  00FA63  72                 	db	114	;'r'
  2700  00FA64  6F                 	db	111	;'o'
  2701  00FA65  72                 	db	114	;'r'
  2702  00FA66  3A                 	db	58	;':'
  2703  00FA67  20                 	db	32
  2704  00FA68  41                 	db	65	;'A'
  2705  00FA69  64                 	db	100	;'d'
  2706  00FA6A  64                 	db	100	;'d'
  2707  00FA6B  72                 	db	114	;'r'
  2708  00FA6C  65                 	db	101	;'e'
  2709  00FA6D  73                 	db	115	;'s'
  2710  00FA6E  73                 	db	115	;'s'
  2711  00FA6F  20                 	db	32
  2712  00FA70  6C                 	db	108	;'l'
  2713  00FA71  61                 	db	97	;'a'
  2714  00FA72  72                 	db	114	;'r'
  2715  00FA73  67                 	db	103	;'g'
  2716  00FA74  65                 	db	101	;'e'
  2717  00FA75  72                 	db	114	;'r'
  2718  00FA76  20                 	db	32
  2719  00FA77  74                 	db	116	;'t'
  2720  00FA78  68                 	db	104	;'h'
  2721  00FA79  61                 	db	97	;'a'
  2722  00FA7A  74                 	db	116	;'t'
  2723  00FA7B  20                 	db	32
  2724  00FA7C  32                 	db	50	;'2'
  2725  00FA7D  35                 	db	53	;'5'
  2726  00FA7E  35                 	db	53	;'5'
  2727  00FA7F  00                 	db	0
  2728  00FA80                     STR_137:
  2729  00FA80  52                 	db	82	;'R'
  2730  00FA81  43                 	db	67	;'C'
  2731  00FA82  2D                 	db	45
  2732  00FA83  30                 	db	48	;'0'
  2733  00FA84  31                 	db	49	;'1'
  2734  00FA85  35                 	db	53	;'5'
  2735  00FA86  2A                 	db	42
  2736  00FA87  33                 	db	51	;'3'
  2737  00FA88  20                 	db	32
  2738  00FA89  43                 	db	67	;'C'
  2739  00FA8A  68                 	db	104	;'h'
  2740  00FA8B  61                 	db	97	;'a'
  2741  00FA8C  6E                 	db	110	;'n'
  2742  00FA8D  6E                 	db	110	;'n'
  2743  00FA8E  65                 	db	101	;'e'
  2744  00FA8F  6C                 	db	108	;'l'
  2745  00FA90  20                 	db	32
  2746  00FA91  48                 	db	72	;'H'
  2747  00FA92  20                 	db	32
  2748  00FA93  64                 	db	100	;'d'
  2749  00FA94  65                 	db	101	;'e'
  2750  00FA95  76                 	db	118	;'v'
  2751  00FA96  69                 	db	105	;'i'
  2752  00FA97  63                 	db	99	;'c'
  2753  00FA98  65                 	db	101	;'e'
  2754  00FA99  20                 	db	32
  2755  00FA9A  31                 	db	49	;'1'
  2756  00FA9B  20                 	db	32
  2757  00FA9C  4F                 	db	79	;'O'
  2758  00FA9D  4E                 	db	78	;'N'
  2759  00FA9E  00                 	db	0
  2760  00FA9F                     STR_139:
  2761  00FA9F  52                 	db	82	;'R'
  2762  00FAA0  43                 	db	67	;'C'
  2763  00FAA1  2D                 	db	45
  2764  00FAA2  30                 	db	48	;'0'
  2765  00FAA3  31                 	db	49	;'1'
  2766  00FAA4  35                 	db	53	;'5'
  2767  00FAA5  2A                 	db	42
  2768  00FAA6  33                 	db	51	;'3'
  2769  00FAA7  20                 	db	32
  2770  00FAA8  43                 	db	67	;'C'
  2771  00FAA9  68                 	db	104	;'h'
  2772  00FAAA  61                 	db	97	;'a'
  2773  00FAAB  6E                 	db	110	;'n'
  2774  00FAAC  6E                 	db	110	;'n'
  2775  00FAAD  65                 	db	101	;'e'
  2776  00FAAE  6C                 	db	108	;'l'
  2777  00FAAF  20                 	db	32
  2778  00FAB0  48                 	db	72	;'H'
  2779  00FAB1  20                 	db	32
  2780  00FAB2  64                 	db	100	;'d'
  2781  00FAB3  65                 	db	101	;'e'
  2782  00FAB4  76                 	db	118	;'v'
  2783  00FAB5  69                 	db	105	;'i'
  2784  00FAB6  63                 	db	99	;'c'
  2785  00FAB7  65                 	db	101	;'e'
  2786  00FAB8  20                 	db	32
  2787  00FAB9  32                 	db	50	;'2'
  2788  00FABA  20                 	db	32
  2789  00FABB  4F                 	db	79	;'O'
  2790  00FABC  4E                 	db	78	;'N'
  2791  00FABD  00                 	db	0
  2792  00FABE                     STR_141:
  2793  00FABE  52                 	db	82	;'R'
  2794  00FABF  43                 	db	67	;'C'
  2795  00FAC0  2D                 	db	45
  2796  00FAC1  30                 	db	48	;'0'
  2797  00FAC2  31                 	db	49	;'1'
  2798  00FAC3  35                 	db	53	;'5'
  2799  00FAC4  2A                 	db	42
  2800  00FAC5  33                 	db	51	;'3'
  2801  00FAC6  20                 	db	32
  2802  00FAC7  43                 	db	67	;'C'
  2803  00FAC8  68                 	db	104	;'h'
  2804  00FAC9  61                 	db	97	;'a'
  2805  00FACA  6E                 	db	110	;'n'
  2806  00FACB  6E                 	db	110	;'n'
  2807  00FACC  65                 	db	101	;'e'
  2808  00FACD  6C                 	db	108	;'l'
  2809  00FACE  20                 	db	32
  2810  00FACF  48                 	db	72	;'H'
  2811  00FAD0  20                 	db	32
  2812  00FAD1  64                 	db	100	;'d'
  2813  00FAD2  65                 	db	101	;'e'
  2814  00FAD3  76                 	db	118	;'v'
  2815  00FAD4  69                 	db	105	;'i'
  2816  00FAD5  63                 	db	99	;'c'
  2817  00FAD6  65                 	db	101	;'e'
  2818  00FAD7  20                 	db	32
  2819  00FAD8  33                 	db	51	;'3'
  2820  00FAD9  20                 	db	32
  2821  00FADA  4F                 	db	79	;'O'
  2822  00FADB  4E                 	db	78	;'N'
  2823  00FADC  00                 	db	0
  2824  00FADD                     STR_65:
  2825  00FADD  45                 	db	69	;'E'
  2826  00FADE  72                 	db	114	;'r'
  2827  00FADF  72                 	db	114	;'r'
  2828  00FAE0  6F                 	db	111	;'o'
  2829  00FAE1  72                 	db	114	;'r'
  2830  00FAE2  3A                 	db	58	;':'
  2831  00FAE3  20                 	db	32
  2832  00FAE4  4E                 	db	78	;'N'
  2833  00FAE5  6F                 	db	111	;'o'
  2834  00FAE6  20                 	db	32
  2835  00FAE7  52                 	db	82	;'R'
  2836  00FAE8  46                 	db	70	;'F'
  2837  00FAE9  20                 	db	32
  2838  00FAEA  63                 	db	99	;'c'
  2839  00FAEB  68                 	db	104	;'h'
  2840  00FAEC  61                 	db	97	;'a'
  2841  00FAED  6E                 	db	110	;'n'
  2842  00FAEE  6E                 	db	110	;'n'
  2843  00FAEF  65                 	db	101	;'e'
  2844  00FAF0  6C                 	db	108	;'l'
  2845  00FAF1  20                 	db	32
  2846  00FAF2  73                 	db	115	;'s'
  2847  00FAF3  70                 	db	112	;'p'
  2848  00FAF4  65                 	db	101	;'e'
  2849  00FAF5  63                 	db	99	;'c'
  2850  00FAF6  69                 	db	105	;'i'
  2851  00FAF7  66                 	db	102	;'f'
  2852  00FAF8  69                 	db	105	;'i'
  2853  00FAF9  65                 	db	101	;'e'
  2854  00FAFA  64                 	db	100	;'d'
  2855  00FAFB  00                 	db	0
  2856  00FAFC                     STR_66:
  2857  00FAFC  45                 	db	69	;'E'
  2858  00FAFD  72                 	db	114	;'r'
  2859  00FAFE  72                 	db	114	;'r'
  2860  00FAFF  6F                 	db	111	;'o'
  2861  00FB00  72                 	db	114	;'r'
  2862  00FB01  3A                 	db	58	;':'
  2863  00FB02  20                 	db	32
  2864  00FB03  52                 	db	82	;'R'
  2865  00FB04  46                 	db	70	;'F'
  2866  00FB05  20                 	db	32
  2867  00FB06  63                 	db	99	;'c'
  2868  00FB07  68                 	db	104	;'h'
  2869  00FB08  61                 	db	97	;'a'
  2870  00FB09  6E                 	db	110	;'n'
  2871  00FB0A  6E                 	db	110	;'n'
  2872  00FB0B  65                 	db	101	;'e'
  2873  00FB0C  6C                 	db	108	;'l'
  2874  00FB0D  20                 	db	32
  2875  00FB0E  6F                 	db	111	;'o'
  2876  00FB0F  75                 	db	117	;'u'
  2877  00FB10  74                 	db	116	;'t'
  2878  00FB11  20                 	db	32
  2879  00FB12  6F                 	db	111	;'o'
  2880  00FB13  66                 	db	102	;'f'
  2881  00FB14  20                 	db	32
  2882  00FB15  72                 	db	114	;'r'
  2883  00FB16  61                 	db	97	;'a'
  2884  00FB17  6E                 	db	110	;'n'
  2885  00FB18  67                 	db	103	;'g'
  2886  00FB19  65                 	db	101	;'e'
  2887  00FB1A  00                 	db	0
  2888  00FB1B                     STR_35:
  2889  00FB1B  4E                 	db	78	;'N'
  2890  00FB1C  45                 	db	69	;'E'
  2891  00FB1D  43                 	db	67	;'C'
  2892  00FB1E  20                 	db	32
  2893  00FB1F  63                 	db	99	;'c'
  2894  00FB20  6F                 	db	111	;'o'
  2895  00FB21  64                 	db	100	;'d'
  2896  00FB22  65                 	db	101	;'e'
  2897  00FB23  20                 	db	32
  2898  00FB24  6E                 	db	110	;'n'
  2899  00FB25  6F                 	db	111	;'o'
  2900  00FB26  74                 	db	116	;'t'
  2901  00FB27  20                 	db	32
  2902  00FB28  65                 	db	101	;'e'
  2903  00FB29  6E                 	db	110	;'n'
  2904  00FB2A  74                 	db	116	;'t'
  2905  00FB2B  65                 	db	101	;'e'
  2906  00FB2C  72                 	db	114	;'r'
  2907  00FB2D  65                 	db	101	;'e'
  2908  00FB2E  64                 	db	100	;'d'
  2909  00FB2F  20                 	db	32
  2910  00FB30  63                 	db	99	;'c'
  2911  00FB31  6F                 	db	111	;'o'
  2912  00FB32  72                 	db	114	;'r'
  2913  00FB33  72                 	db	114	;'r'
  2914  00FB34  65                 	db	101	;'e'
  2915  00FB35  63                 	db	99	;'c'
  2916  00FB36  74                 	db	116	;'t'
  2917  00FB37  6C                 	db	108	;'l'
  2918  00FB38  79                 	db	121	;'y'
  2919  00FB39  00                 	db	0
  2920  00FB3A                     STR_79:
  2921  00FB3A  44                 	db	68	;'D'
  2922  00FB3B  65                 	db	101	;'e'
  2923  00FB3C  76                 	db	118	;'v'
  2924  00FB3D  69                 	db	105	;'i'
  2925  00FB3E  63                 	db	99	;'c'
  2926  00FB3F  65                 	db	101	;'e'
  2927  00FB40  20                 	db	32
  2928  00FB41  72                 	db	114	;'r'
  2929  00FB42  65                 	db	101	;'e'
  2930  00FB43  73                 	db	115	;'s'
  2931  00FB44  75                 	db	117	;'u'
  2932  00FB45  6D                 	db	109	;'m'
  2933  00FB46  65                 	db	101	;'e'
  2934  00FB47  73                 	db	115	;'s'
  2935  00FB48  20                 	db	32
  2936  00FB49  77                 	db	119	;'w'
  2937  00FB4A  69                 	db	105	;'i'
  2938  00FB4B  74                 	db	116	;'t'
  2939  00FB4C  68                 	db	104	;'h'
  2940  00FB4D  6F                 	db	111	;'o'
  2941  00FB4E  75                 	db	117	;'u'
  2942  00FB4F  74                 	db	116	;'t'
  2943  00FB50  20                 	db	32
  2944  00FB51  72                 	db	114	;'r'
  2945  00FB52  65                 	db	101	;'e'
  2946  00FB53  73                 	db	115	;'s'
  2947  00FB54  65                 	db	101	;'e'
  2948  00FB55  74                 	db	116	;'t'
  2949  00FB56  00                 	db	0
  2950  00FB57                     STR_21:
  2951  00FB57  43                 	db	67	;'C'
  2952  00FB58  6F                 	db	111	;'o'
  2953  00FB59  6E                 	db	110	;'n'
  2954  00FB5A  66                 	db	102	;'f'
  2955  00FB5B  69                 	db	105	;'i'
  2956  00FB5C  67                 	db	103	;'g'
  2957  00FB5D  75                 	db	117	;'u'
  2958  00FB5E  72                 	db	114	;'r'
  2959  00FB5F  61                 	db	97	;'a'
  2960  00FB60  74                 	db	116	;'t'
  2961  00FB61  69                 	db	105	;'i'
  2962  00FB62  6F                 	db	111	;'o'
  2963  00FB63  6E                 	db	110	;'n'
  2964  00FB64  20                 	db	32
  2965  00FB65  31                 	db	49	;'1'
  2966  00FB66  20                 	db	32
  2967  00FB67  52                 	db	82	;'R'
  2968  00FB68  46                 	db	70	;'F'
  2969  00FB69  20                 	db	32
  2970  00FB6A  63                 	db	99	;'c'
  2971  00FB6B  6F                 	db	111	;'o'
  2972  00FB6C  64                 	db	100	;'d'
  2973  00FB6D  65                 	db	101	;'e'
  2974  00FB6E  20                 	db	32
  2975  00FB6F  73                 	db	115	;'s'
  2976  00FB70  65                 	db	101	;'e'
  2977  00FB71  6E                 	db	110	;'n'
  2978  00FB72  74                 	db	116	;'t'
  2979  00FB73  00                 	db	0
  2980  00FB74                     STR_23:
  2981  00FB74  43                 	db	67	;'C'
  2982  00FB75  6F                 	db	111	;'o'
  2983  00FB76  6E                 	db	110	;'n'
  2984  00FB77  66                 	db	102	;'f'
  2985  00FB78  69                 	db	105	;'i'
  2986  00FB79  67                 	db	103	;'g'
  2987  00FB7A  75                 	db	117	;'u'
  2988  00FB7B  72                 	db	114	;'r'
  2989  00FB7C  61                 	db	97	;'a'
  2990  00FB7D  74                 	db	116	;'t'
  2991  00FB7E  69                 	db	105	;'i'
  2992  00FB7F  6F                 	db	111	;'o'
  2993  00FB80  6E                 	db	110	;'n'
  2994  00FB81  20                 	db	32
  2995  00FB82  32                 	db	50	;'2'
  2996  00FB83  20                 	db	32
  2997  00FB84  52                 	db	82	;'R'
  2998  00FB85  46                 	db	70	;'F'
  2999  00FB86  20                 	db	32
  3000  00FB87  63                 	db	99	;'c'
  3001  00FB88  6F                 	db	111	;'o'
  3002  00FB89  64                 	db	100	;'d'
  3003  00FB8A  65                 	db	101	;'e'
  3004  00FB8B  20                 	db	32
  3005  00FB8C  73                 	db	115	;'s'
  3006  00FB8D  65                 	db	101	;'e'
  3007  00FB8E  6E                 	db	110	;'n'
  3008  00FB8F  74                 	db	116	;'t'
  3009  00FB90  00                 	db	0
  3010  00FB91                     STR_17:
  3011  00FB91  42                 	db	66	;'B'
  3012  00FB92  54                 	db	84	;'T'
  3013  00FB93  4E                 	db	78	;'N'
  3014  00FB94  61                 	db	97	;'a'
  3015  00FB95  6D                 	db	109	;'m'
  3016  00FB96  65                 	db	101	;'e'
  3017  00FB97  3D                 	db	61	;'='
  3018  00FB98  48                 	db	72	;'H'
  3019  00FB99  6F                 	db	111	;'o'
  3020  00FB9A  6D                 	db	109	;'m'
  3021  00FB9B  65                 	db	101	;'e'
  3022  00FB9C  20                 	db	32
  3023  00FB9D  41                 	db	65	;'A'
  3024  00FB9E  75                 	db	117	;'u'
  3025  00FB9F  74                 	db	116	;'t'
  3026  00FBA0  6F                 	db	111	;'o'
  3027  00FBA1  6D                 	db	109	;'m'
  3028  00FBA2  61                 	db	97	;'a'
  3029  00FBA3  74                 	db	116	;'t'
  3030  00FBA4  69                 	db	105	;'i'
  3031  00FBA5  6F                 	db	111	;'o'
  3032  00FBA6  6E                 	db	110	;'n'
  3033  00FBA7  20                 	db	32
  3034  00FBA8  25                 	db	37
  3035  00FBA9  6C                 	db	108	;'l'
  3036  00FBAA  64                 	db	100	;'d'
  3037  00FBAB  0D                 	db	13
  3038  00FBAC  00                 	db	0
  3039  00FBAD                     STR_97:
  3040  00FBAD  44                 	db	68	;'D'
  3041  00FBAE  69                 	db	105	;'i'
  3042  00FBAF  73                 	db	115	;'s'
  3043  00FBB0  70                 	db	112	;'p'
  3044  00FBB1  6C                 	db	108	;'l'
  3045  00FBB2  61                 	db	97	;'a'
  3046  00FBB3  79                 	db	121	;'y'
  3047  00FBB4  73                 	db	115	;'s'
  3048  00FBB5  20                 	db	32
  3049  00FBB6  74                 	db	116	;'t'
  3050  00FBB7  68                 	db	104	;'h'
  3051  00FBB8  65                 	db	101	;'e'
  3052  00FBB9  20                 	db	32
  3053  00FBBA  73                 	db	115	;'s'
  3054  00FBBB  75                 	db	117	;'u'
  3055  00FBBC  70                 	db	112	;'p'
  3056  00FBBD  70                 	db	112	;'p'
  3057  00FBBE  6C                 	db	108	;'l'
  3058  00FBBF  79                 	db	121	;'y'
  3059  00FBC0  20                 	db	32
  3060  00FBC1  76                 	db	118	;'v'
  3061  00FBC2  6F                 	db	111	;'o'
  3062  00FBC3  6C                 	db	108	;'l'
  3063  00FBC4  74                 	db	116	;'t'
  3064  00FBC5  61                 	db	97	;'a'
  3065  00FBC6  67                 	db	103	;'g'
  3066  00FBC7  65                 	db	101	;'e'
  3067  00FBC8  00                 	db	0
  3068  00FBC9                     STR_144:
  3069  00FBC9  50                 	db	80	;'P'
  3070  00FBCA  72                 	db	114	;'r'
  3071  00FBCB  65                 	db	101	;'e'
  3072  00FBCC  73                 	db	115	;'s'
  3073  00FBCD  73                 	db	115	;'s'
  3074  00FBCE  20                 	db	32
  3075  00FBCF  52                 	db	82	;'R'
  3076  00FBD0  65                 	db	101	;'e'
  3077  00FBD1  6D                 	db	109	;'m'
  3078  00FBD2  6F                 	db	111	;'o'
  3079  00FBD3  74                 	db	116	;'t'
  3080  00FBD4  65                 	db	101	;'e'
  3081  00FBD5  20                 	db	32
  3082  00FBD6  43                 	db	67	;'C'
  3083  00FBD7  6F                 	db	111	;'o'
  3084  00FBD8  6E                 	db	110	;'n'
  3085  00FBD9  74                 	db	116	;'t'
  3086  00FBDA  72                 	db	114	;'r'
  3087  00FBDB  6F                 	db	111	;'o'
  3088  00FBDC  6C                 	db	108	;'l'
  3089  00FBDD  20                 	db	32
  3090  00FBDE  62                 	db	98	;'b'
  3091  00FBDF  75                 	db	117	;'u'
  3092  00FBE0  74                 	db	116	;'t'
  3093  00FBE1  74                 	db	116	;'t'
  3094  00FBE2  6F                 	db	111	;'o'
  3095  00FBE3  6E                 	db	110	;'n'
  3096  00FBE4  00                 	db	0
  3097  00FBE5                     STR_143:
  3098  00FBE5  45                 	db	69	;'E'
  3099  00FBE6  6E                 	db	110	;'n'
  3100  00FBE7  74                 	db	116	;'t'
  3101  00FBE8  65                 	db	101	;'e'
  3102  00FBE9  72                 	db	114	;'r'
  3103  00FBEA  20                 	db	32
  3104  00FBEB  3F                 	db	63	;'?'
  3105  00FBEC  3F                 	db	63	;'?'
  3106  00FBED  3F                 	db	63	;'?'
  3107  00FBEE  20                 	db	32
  3108  00FBEF  66                 	db	102	;'f'
  3109  00FBF0  6F                 	db	111	;'o'
  3110  00FBF1  72                 	db	114	;'r'
  3111  00FBF2  20                 	db	32
  3112  00FBF3  43                 	db	67	;'C'
  3113  00FBF4  6F                 	db	111	;'o'
  3114  00FBF5  6D                 	db	109	;'m'
  3115  00FBF6  6D                 	db	109	;'m'
  3116  00FBF7  61                 	db	97	;'a'
  3117  00FBF8  6E                 	db	110	;'n'
  3118  00FBF9  64                 	db	100	;'d'
  3119  00FBFA  20                 	db	32
  3120  00FBFB  4D                 	db	77	;'M'
  3121  00FBFC  65                 	db	101	;'e'
  3122  00FBFD  6E                 	db	110	;'n'
  3123  00FBFE  75                 	db	117	;'u'
  3124  00FBFF  00                 	db	0
  3125  00FC00                     STR_94:
  3126  00FC00  44                 	db	68	;'D'
  3127  00FC01  69                 	db	105	;'i'
  3128  00FC02  73                 	db	115	;'s'
  3129  00FC03  70                 	db	112	;'p'
  3130  00FC04  6C                 	db	108	;'l'
  3131  00FC05  61                 	db	97	;'a'
  3132  00FC06  79                 	db	121	;'y'
  3133  00FC07  73                 	db	115	;'s'
  3134  00FC08  20                 	db	32
  3135  00FC09  46                 	db	70	;'F'
  3136  00FC0A  69                 	db	105	;'i'
  3137  00FC0B  72                 	db	114	;'r'
  3138  00FC0C  6D                 	db	109	;'m'
  3139  00FC0D  77                 	db	119	;'w'
  3140  00FC0E  61                 	db	97	;'a'
  3141  00FC0F  72                 	db	114	;'r'
  3142  00FC10  65                 	db	101	;'e'
  3143  00FC11  20                 	db	32
  3144  00FC12  56                 	db	86	;'V'
  3145  00FC13  65                 	db	101	;'e'
  3146  00FC14  72                 	db	114	;'r'
  3147  00FC15  73                 	db	115	;'s'
  3148  00FC16  69                 	db	105	;'i'
  3149  00FC17  6F                 	db	111	;'o'
  3150  00FC18  6E                 	db	110	;'n'
  3151  00FC19  00                 	db	0
  3152  00FC1A                     STR_100:
  3153  00FC1A  54                 	db	84	;'T'
  3154  00FC1B  72                 	db	114	;'r'
  3155  00FC1C  61                 	db	97	;'a'
  3156  00FC1D  6E                 	db	110	;'n'
  3157  00FC1E  73                 	db	115	;'s'
  3158  00FC1F  6D                 	db	109	;'m'
  3159  00FC20  69                 	db	105	;'i'
  3160  00FC21  74                 	db	116	;'t'
  3161  00FC22  73                 	db	115	;'s'
  3162  00FC23  20                 	db	32
  3163  00FC24  73                 	db	115	;'s'
  3164  00FC25  61                 	db	97	;'a'
  3165  00FC26  76                 	db	118	;'v'
  3166  00FC27  65                 	db	101	;'e'
  3167  00FC28  64                 	db	100	;'d'
  3168  00FC29  20                 	db	32
  3169  00FC2A  4E                 	db	78	;'N'
  3170  00FC2B  45                 	db	69	;'E'
  3171  00FC2C  43                 	db	67	;'C'
  3172  00FC2D  20                 	db	32
  3173  00FC2E  63                 	db	99	;'c'
  3174  00FC2F  6F                 	db	111	;'o'
  3175  00FC30  64                 	db	100	;'d'
  3176  00FC31  65                 	db	101	;'e'
  3177  00FC32  00                 	db	0
  3178  00FC33                     STR_4:
  3179  00FC33  53                 	db	83	;'S'
  3180  00FC34  4E                 	db	78	;'N'
  3181  00FC35  2C                 	db	44
  3182  00FC36  48                 	db	72	;'H'
  3183  00FC37  6F                 	db	111	;'o'
  3184  00FC38  6D                 	db	109	;'m'
  3185  00FC39  65                 	db	101	;'e'
  3186  00FC3A  20                 	db	32
  3187  00FC3B  41                 	db	65	;'A'
  3188  00FC3C  75                 	db	117	;'u'
  3189  00FC3D  74                 	db	116	;'t'
  3190  00FC3E  6F                 	db	111	;'o'
  3191  00FC3F  6D                 	db	109	;'m'
  3192  00FC40  61                 	db	97	;'a'
  3193  00FC41  74                 	db	116	;'t'
  3194  00FC42  69                 	db	105	;'i'
  3195  00FC43  6F                 	db	111	;'o'
  3196  00FC44  6E                 	db	110	;'n'
  3197  00FC45  20                 	db	32
  3198  00FC46  25                 	db	37
  3199  00FC47  6C                 	db	108	;'l'
  3200  00FC48  64                 	db	100	;'d'
  3201  00FC49  0D                 	db	13
  3202  00FC4A  00                 	db	0
  3203  00FC4B                     STR_102:
  3204  00FC4B  41                 	db	65	;'A'
  3205  00FC4C  6C                 	db	108	;'l'
  3206  00FC4D  6C                 	db	108	;'l'
  3207  00FC4E  6F                 	db	111	;'o'
  3208  00FC4F  77                 	db	119	;'w'
  3209  00FC50  73                 	db	115	;'s'
  3210  00FC51  20                 	db	32
  3211  00FC52  73                 	db	115	;'s'
  3212  00FC53  61                 	db	97	;'a'
  3213  00FC54  76                 	db	118	;'v'
  3214  00FC55  69                 	db	105	;'i'
  3215  00FC56  6E                 	db	110	;'n'
  3216  00FC57  67                 	db	103	;'g'
  3217  00FC58  20                 	db	32
  3218  00FC59  4E                 	db	78	;'N'
  3219  00FC5A  45                 	db	69	;'E'
  3220  00FC5B  43                 	db	67	;'C'
  3221  00FC5C  20                 	db	32
  3222  00FC5D  63                 	db	99	;'c'
  3223  00FC5E  6F                 	db	111	;'o'
  3224  00FC5F  64                 	db	100	;'d'
  3225  00FC60  65                 	db	101	;'e'
  3226  00FC61  73                 	db	115	;'s'
  3227  00FC62  00                 	db	0
  3228  00FC63                     STR_29:
  3229  00FC63  53                 	db	83	;'S'
  3230  00FC64  65                 	db	101	;'e'
  3231  00FC65  6E                 	db	110	;'n'
  3232  00FC66  74                 	db	116	;'t'
  3233  00FC67  20                 	db	32
  3234  00FC68  4E                 	db	78	;'N'
  3235  00FC69  45                 	db	69	;'E'
  3236  00FC6A  43                 	db	67	;'C'
  3237  00FC6B  20                 	db	32
  3238  00FC6C  63                 	db	99	;'c'
  3239  00FC6D  6F                 	db	111	;'o'
  3240  00FC6E  64                 	db	100	;'d'
  3241  00FC6F  65                 	db	101	;'e'
  3242  00FC70  20                 	db	32
  3243  00FC71  3D                 	db	61	;'='
  3244  00FC72  20                 	db	32
  3245  00FC73  30                 	db	48	;'0'
  3246  00FC74  78                 	db	120	;'x'
  3247  00FC75  25                 	db	37
  3248  00FC76  6C                 	db	108	;'l'
  3249  00FC77  58                 	db	88	;'X'
  3250  00FC78  20                 	db	32
  3251  00FC79  00                 	db	0
  3252  00FC7A                     STR_134:
  3253  00FC7A  52                 	db	82	;'R'
  3254  00FC7B  46                 	db	70	;'F'
  3255  00FC7C  4B                 	db	75	;'K'
  3256  00FC7D  33                 	db	51	;'3'
  3257  00FC7E  30                 	db	48	;'0'
  3258  00FC7F  36                 	db	54	;'6'
  3259  00FC80  4C                 	db	76	;'L'
  3260  00FC81  43                 	db	67	;'C'
  3261  00FC82  20                 	db	32
  3262  00FC83  43                 	db	67	;'C'
  3263  00FC84  68                 	db	104	;'h'
  3264  00FC85  61                 	db	97	;'a'
  3265  00FC86  6E                 	db	110	;'n'
  3266  00FC87  6E                 	db	110	;'n'
  3267  00FC88  65                 	db	101	;'e'
  3268  00FC89  6C                 	db	108	;'l'
  3269  00FC8A  20                 	db	32
  3270  00FC8B  42                 	db	66	;'B'
  3271  00FC8C  20                 	db	32
  3272  00FC8D  4F                 	db	79	;'O'
  3273  00FC8E  46                 	db	70	;'F'
  3274  00FC8F  46                 	db	70	;'F'
  3275  00FC90  00                 	db	0
  3276  00FC91                     STR_133:
  3277  00FC91  52                 	db	82	;'R'
  3278  00FC92  46                 	db	70	;'F'
  3279  00FC93  4B                 	db	75	;'K'
  3280  00FC94  33                 	db	51	;'3'
  3281  00FC95  30                 	db	48	;'0'
  3282  00FC96  36                 	db	54	;'6'
  3283  00FC97  4C                 	db	76	;'L'
  3284  00FC98  43                 	db	67	;'C'
  3285  00FC99  20                 	db	32
  3286  00FC9A  43                 	db	67	;'C'
  3287  00FC9B  68                 	db	104	;'h'
  3288  00FC9C  61                 	db	97	;'a'
  3289  00FC9D  6E                 	db	110	;'n'
  3290  00FC9E  6E                 	db	110	;'n'
  3291  00FC9F  65                 	db	101	;'e'
  3292  00FCA0  6C                 	db	108	;'l'
  3293  00FCA1  20                 	db	32
  3294  00FCA2  42                 	db	66	;'B'
  3295  00FCA3  20                 	db	32
  3296  00FCA4  4F                 	db	79	;'O'
  3297  00FCA5  4E                 	db	78	;'N'
  3298  00FCA6  00                 	db	0
  3299  00FCA7                     STR_39:
  3300  00FCA7  4E                 	db	78	;'N'
  3301  00FCA8  45                 	db	69	;'E'
  3302  00FCA9  43                 	db	67	;'C'
  3303  00FCAA  20                 	db	32
  3304  00FCAB  3D                 	db	61	;'='
  3305  00FCAC  20                 	db	32
  3306  00FCAD  61                 	db	97	;'a'
  3307  00FCAE  64                 	db	100	;'d'
  3308  00FCAF  64                 	db	100	;'d'
  3309  00FCB0  72                 	db	114	;'r'
  3310  00FCB1  65                 	db	101	;'e'
  3311  00FCB2  73                 	db	115	;'s'
  3312  00FCB3  73                 	db	115	;'s'
  3313  00FCB4  2C                 	db	44
  3314  00FCB5  63                 	db	99	;'c'
  3315  00FCB6  6F                 	db	111	;'o'
  3316  00FCB7  6D                 	db	109	;'m'
  3317  00FCB8  6D                 	db	109	;'m'
  3318  00FCB9  61                 	db	97	;'a'
  3319  00FCBA  6E                 	db	110	;'n'
  3320  00FCBB  64                 	db	100	;'d'
  3321  00FCBC  00                 	db	0
  3322  00FCBD                     STR_8:
  3323  00FCBD  53                 	db	83	;'S'
  3324  00FCBE  53                 	db	83	;'S'
  3325  00FCBF  2C                 	db	44
  3326  00FCC0  20                 	db	32
  3327  00FCC1  48                 	db	72	;'H'
  3328  00FCC2  6F                 	db	111	;'o'
  3329  00FCC3  6D                 	db	109	;'m'
  3330  00FCC4  65                 	db	101	;'e'
  3331  00FCC5  20                 	db	32
  3332  00FCC6  41                 	db	65	;'A'
  3333  00FCC7  75                 	db	117	;'u'
  3334  00FCC8  74                 	db	116	;'t'
  3335  00FCC9  6F                 	db	111	;'o'
  3336  00FCCA  6D                 	db	109	;'m'
  3337  00FCCB  61                 	db	97	;'a'
  3338  00FCCC  74                 	db	116	;'t'
  3339  00FCCD  69                 	db	105	;'i'
  3340  00FCCE  6F                 	db	111	;'o'
  3341  00FCCF  6E                 	db	110	;'n'
  3342  00FCD0  0D                 	db	13
  3343  00FCD1  00                 	db	0
  3344  00FCD2                     STR_28:
  3345  00FCD2  4E                 	db	78	;'N'
  3346  00FCD3  45                 	db	69	;'E'
  3347  00FCD4  43                 	db	67	;'C'
  3348  00FCD5  20                 	db	32
  3349  00FCD6  63                 	db	99	;'c'
  3350  00FCD7  6F                 	db	111	;'o'
  3351  00FCD8  6D                 	db	109	;'m'
  3352  00FCD9  6D                 	db	109	;'m'
  3353  00FCDA  61                 	db	97	;'a'
  3354  00FCDB  6E                 	db	110	;'n'
  3355  00FCDC  64                 	db	100	;'d'
  3356  00FCDD  3A                 	db	58	;':'
  3357  00FCDE  20                 	db	32
  3358  00FCDF  30                 	db	48	;'0'
  3359  00FCE0  78                 	db	120	;'x'
  3360  00FCE1  25                 	db	37
  3361  00FCE2  30                 	db	48	;'0'
  3362  00FCE3  32                 	db	50	;'2'
  3363  00FCE4  58                 	db	88	;'X'
  3364  00FCE5  20                 	db	32
  3365  00FCE6  00                 	db	0
  3366  00FCE7                     STR_27:
  3367  00FCE7  4E                 	db	78	;'N'
  3368  00FCE8  45                 	db	69	;'E'
  3369  00FCE9  43                 	db	67	;'C'
  3370  00FCEA  20                 	db	32
  3371  00FCEB  61                 	db	97	;'a'
  3372  00FCEC  64                 	db	100	;'d'
  3373  00FCED  64                 	db	100	;'d'
  3374  00FCEE  72                 	db	114	;'r'
  3375  00FCEF  65                 	db	101	;'e'
  3376  00FCF0  73                 	db	115	;'s'
  3377  00FCF1  73                 	db	115	;'s'
  3378  00FCF2  3A                 	db	58	;':'
  3379  00FCF3  20                 	db	32
  3380  00FCF4  30                 	db	48	;'0'
  3381  00FCF5  78                 	db	120	;'x'
  3382  00FCF6  25                 	db	37
  3383  00FCF7  30                 	db	48	;'0'
  3384  00FCF8  32                 	db	50	;'2'
  3385  00FCF9  58                 	db	88	;'X'
  3386  00FCFA  20                 	db	32
  3387  00FCFB  00                 	db	0
  3388  00FCFC                     STR_46:
  3389  00FCFC  53                 	db	83	;'S'
  3390  00FCFD  65                 	db	101	;'e'
  3391  00FCFE  6E                 	db	110	;'n'
  3392  00FCFF  74                 	db	116	;'t'
  3393  00FD00  20                 	db	32
  3394  00FD01  4E                 	db	78	;'N'
  3395  00FD02  45                 	db	69	;'E'
  3396  00FD03  43                 	db	67	;'C'
  3397  00FD04  20                 	db	32
  3398  00FD05  63                 	db	99	;'c'
  3399  00FD06  6F                 	db	111	;'o'
  3400  00FD07  64                 	db	100	;'d'
  3401  00FD08  65                 	db	101	;'e'
  3402  00FD09  20                 	db	32
  3403  00FD0A  30                 	db	48	;'0'
  3404  00FD0B  78                 	db	120	;'x'
  3405  00FD0C  25                 	db	37
  3406  00FD0D  6C                 	db	108	;'l'
  3407  00FD0E  58                 	db	88	;'X'
  3408  00FD0F  20                 	db	32
  3409  00FD10  00                 	db	0
  3410  00FD11                     STR_95:
  3411  00FD11  44                 	db	68	;'D'
  3412  00FD12  69                 	db	105	;'i'
  3413  00FD13  61                 	db	97	;'a'
  3414  00FD14  67                 	db	103	;'g'
  3415  00FD15  6E                 	db	110	;'n'
  3416  00FD16  6F                 	db	111	;'o'
  3417  00FD17  73                 	db	115	;'s'
  3418  00FD18  74                 	db	116	;'t'
  3419  00FD19  69                 	db	105	;'i'
  3420  00FD1A  63                 	db	99	;'c'
  3421  00FD1B  20                 	db	32
  3422  00FD1C  43                 	db	67	;'C'
  3423  00FD1D  6F                 	db	111	;'o'
  3424  00FD1E  6D                 	db	109	;'m'
  3425  00FD1F  6D                 	db	109	;'m'
  3426  00FD20  61                 	db	97	;'a'
  3427  00FD21  6E                 	db	110	;'n'
  3428  00FD22  64                 	db	100	;'d'
  3429  00FD23  73                 	db	115	;'s'
  3430  00FD24  3A                 	db	58	;':'
  3431  00FD25  00                 	db	0
  3432  00FD26                     STR_85:
  3433  00FD26  46                 	db	70	;'F'
  3434  00FD27  69                 	db	105	;'i'
  3435  00FD28  72                 	db	114	;'r'
  3436  00FD29  6D                 	db	109	;'m'
  3437  00FD2A  77                 	db	119	;'w'
  3438  00FD2B  61                 	db	97	;'a'
  3439  00FD2C  72                 	db	114	;'r'
  3440  00FD2D  65                 	db	101	;'e'
  3441  00FD2E  20                 	db	32
  3442  00FD2F  56                 	db	86	;'V'
  3443  00FD30  65                 	db	101	;'e'
  3444  00FD31  72                 	db	114	;'r'
  3445  00FD32  73                 	db	115	;'s'
  3446  00FD33  69                 	db	105	;'i'
  3447  00FD34  6F                 	db	111	;'o'
  3448  00FD35  6E                 	db	110	;'n'
  3449  00FD36  3A                 	db	58	;':'
  3450  00FD37  20                 	db	32
  3451  00FD38  25                 	db	37
  3452  00FD39  73                 	db	115	;'s'
  3453  00FD3A  00                 	db	0
  3454  00FD3B                     STR_37:
  3455  00FD3B  4E                 	db	78	;'N'
  3456  00FD3C  45                 	db	69	;'E'
  3457  00FD3D  43                 	db	67	;'C'
  3458  00FD3E  20                 	db	32
  3459  00FD3F  3D                 	db	61	;'='
  3460  00FD40  20                 	db	32
  3461  00FD41  28                 	db	40
  3462  00FD42  33                 	db	51	;'3'
  3463  00FD43  32                 	db	50	;'2'
  3464  00FD44  20                 	db	32
  3465  00FD45  62                 	db	98	;'b'
  3466  00FD46  69                 	db	105	;'i'
  3467  00FD47  74                 	db	116	;'t'
  3468  00FD48  20                 	db	32
  3469  00FD49  63                 	db	99	;'c'
  3470  00FD4A  6F                 	db	111	;'o'
  3471  00FD4B  64                 	db	100	;'d'
  3472  00FD4C  65                 	db	101	;'e'
  3473  00FD4D  29                 	db	41
  3474  00FD4E  00                 	db	0
  3475  00FD4F                     STR_136:
  3476  00FD4F  54                 	db	84	;'T'
  3477  00FD50  52                 	db	82	;'R'
  3478  00FD51  30                 	db	48	;'0'
  3479  00FD52  30                 	db	48	;'0'
  3480  00FD53  39                 	db	57	;'9'
  3481  00FD54  20                 	db	32
  3482  00FD55  43                 	db	67	;'C'
  3483  00FD56  68                 	db	104	;'h'
  3484  00FD57  61                 	db	97	;'a'
  3485  00FD58  6E                 	db	110	;'n'
  3486  00FD59  6E                 	db	110	;'n'
  3487  00FD5A  65                 	db	101	;'e'
  3488  00FD5B  6C                 	db	108	;'l'
  3489  00FD5C  20                 	db	32
  3490  00FD5D  44                 	db	68	;'D'
  3491  00FD5E  20                 	db	32
  3492  00FD5F  4F                 	db	79	;'O'
  3493  00FD60  46                 	db	70	;'F'
  3494  00FD61  46                 	db	70	;'F'
  3495  00FD62  00                 	db	0
  3496  00FD63                     STR_31:
  3497  00FD63  73                 	db	115	;'s'
  3498  00FD64  65                 	db	101	;'e'
  3499  00FD65  6E                 	db	110	;'n'
  3500  00FD66  74                 	db	116	;'t'
  3501  00FD67  20                 	db	32
  3502  00FD68  4E                 	db	78	;'N'
  3503  00FD69  45                 	db	69	;'E'
  3504  00FD6A  43                 	db	67	;'C'
  3505  00FD6B  20                 	db	32
  3506  00FD6C  63                 	db	99	;'c'
  3507  00FD6D  6F                 	db	111	;'o'
  3508  00FD6E  64                 	db	100	;'d'
  3509  00FD6F  65                 	db	101	;'e'
  3510  00FD70  20                 	db	32
  3511  00FD71  30                 	db	48	;'0'
  3512  00FD72  78                 	db	120	;'x'
  3513  00FD73  25                 	db	37
  3514  00FD74  6C                 	db	108	;'l'
  3515  00FD75  58                 	db	88	;'X'
  3516  00FD76  00                 	db	0
  3517  00FD77                     STR_83:
  3518  00FD77  53                 	db	83	;'S'
  3519  00FD78  75                 	db	117	;'u'
  3520  00FD79  70                 	db	112	;'p'
  3521  00FD7A  70                 	db	112	;'p'
  3522  00FD7B  6C                 	db	108	;'l'
  3523  00FD7C  79                 	db	121	;'y'
  3524  00FD7D  20                 	db	32
  3525  00FD7E  56                 	db	86	;'V'
  3526  00FD7F  6F                 	db	111	;'o'
  3527  00FD80  6C                 	db	108	;'l'
  3528  00FD81  74                 	db	116	;'t'
  3529  00FD82  61                 	db	97	;'a'
  3530  00FD83  67                 	db	103	;'g'
  3531  00FD84  65                 	db	101	;'e'
  3532  00FD85  20                 	db	32
  3533  00FD86  3D                 	db	61	;'='
  3534  00FD87  20                 	db	32
  3535  00FD88  25                 	db	37
  3536  00FD89  66                 	db	102	;'f'
  3537  00FD8A  00                 	db	0
  3538  00FD8B                     STR_55:
  3539  00FD8B  52                 	db	82	;'R'
  3540  00FD8C  65                 	db	101	;'e'
  3541  00FD8D  6D                 	db	109	;'m'
  3542  00FD8E  6F                 	db	111	;'o'
  3543  00FD8F  74                 	db	116	;'t'
  3544  00FD90  65                 	db	101	;'e'
  3545  00FD91  42                 	db	66	;'B'
  3546  00FD92  75                 	db	117	;'u'
  3547  00FD93  74                 	db	116	;'t'
  3548  00FD94  74                 	db	116	;'t'
  3549  00FD95  6F                 	db	111	;'o'
  3550  00FD96  6E                 	db	110	;'n'
  3551  00FD97  27                 	db	39
  3552  00FD98  78                 	db	120	;'x'
  3553  00FD99  27                 	db	39
  3554  00FD9A  20                 	db	32
  3555  00FD9B  73                 	db	115	;'s'
  3556  00FD9C  65                 	db	101	;'e'
  3557  00FD9D  74                 	db	116	;'t'
  3558  00FD9E  00                 	db	0
  3559  00FD9F                     STR_130:
  3560  00FD9F  52                 	db	82	;'R'
  3561  00FDA0  46                 	db	70	;'F'
  3562  00FDA1  4B                 	db	75	;'K'
  3563  00FDA2  31                 	db	49	;'1'
  3564  00FDA3  30                 	db	48	;'0'
  3565  00FDA4  30                 	db	48	;'0'
  3566  00FDA5  4C                 	db	76	;'L'
  3567  00FDA6  43                 	db	67	;'C'
  3568  00FDA7  20                 	db	32
  3569  00FDA8  43                 	db	67	;'C'
  3570  00FDA9  68                 	db	104	;'h'
  3571  00FDAA  61                 	db	97	;'a'
  3572  00FDAB  6E                 	db	110	;'n'
  3573  00FDAC  6E                 	db	110	;'n'
  3574  00FDAD  65                 	db	101	;'e'
  3575  00FDAE  6C                 	db	108	;'l'
  3576  00FDAF  20                 	db	32
  3577  00FDB0  44                 	db	68	;'D'
  3578  00FDB1  00                 	db	0
  3579  00FDB2                     STR_131:
  3580  00FDB2  52                 	db	82	;'R'
  3581  00FDB3  46                 	db	70	;'F'
  3582  00FDB4  4B                 	db	75	;'K'
  3583  00FDB5  31                 	db	49	;'1'
  3584  00FDB6  30                 	db	48	;'0'
  3585  00FDB7  30                 	db	48	;'0'
  3586  00FDB8  4C                 	db	76	;'L'
  3587  00FDB9  43                 	db	67	;'C'
  3588  00FDBA  20                 	db	32
  3589  00FDBB  43                 	db	67	;'C'
  3590  00FDBC  68                 	db	104	;'h'
  3591  00FDBD  61                 	db	97	;'a'
  3592  00FDBE  6E                 	db	110	;'n'
  3593  00FDBF  6E                 	db	110	;'n'
  3594  00FDC0  65                 	db	101	;'e'
  3595  00FDC1  6C                 	db	108	;'l'
  3596  00FDC2  20                 	db	32
  3597  00FDC3  45                 	db	69	;'E'
  3598  00FDC4  00                 	db	0
  3599  00FDC5                     STR_132:
  3600  00FDC5  52                 	db	82	;'R'
  3601  00FDC6  46                 	db	70	;'F'
  3602  00FDC7  4B                 	db	75	;'K'
  3603  00FDC8  31                 	db	49	;'1'
  3604  00FDC9  30                 	db	48	;'0'
  3605  00FDCA  30                 	db	48	;'0'
  3606  00FDCB  4C                 	db	76	;'L'
  3607  00FDCC  43                 	db	67	;'C'
  3608  00FDCD  20                 	db	32
  3609  00FDCE  43                 	db	67	;'C'
  3610  00FDCF  68                 	db	104	;'h'
  3611  00FDD0  61                 	db	97	;'a'
  3612  00FDD1  6E                 	db	110	;'n'
  3613  00FDD2  6E                 	db	110	;'n'
  3614  00FDD3  65                 	db	101	;'e'
  3615  00FDD4  6C                 	db	108	;'l'
  3616  00FDD5  20                 	db	32
  3617  00FDD6  46                 	db	70	;'F'
  3618  00FDD7  00                 	db	0
  3619  00FDD8                     STR_135:
  3620  00FDD8  54                 	db	84	;'T'
  3621  00FDD9  52                 	db	82	;'R'
  3622  00FDDA  30                 	db	48	;'0'
  3623  00FDDB  30                 	db	48	;'0'
  3624  00FDDC  39                 	db	57	;'9'
  3625  00FDDD  20                 	db	32
  3626  00FDDE  43                 	db	67	;'C'
  3627  00FDDF  68                 	db	104	;'h'
  3628  00FDE0  61                 	db	97	;'a'
  3629  00FDE1  6E                 	db	110	;'n'
  3630  00FDE2  6E                 	db	110	;'n'
  3631  00FDE3  65                 	db	101	;'e'
  3632  00FDE4  6C                 	db	108	;'l'
  3633  00FDE5  20                 	db	32
  3634  00FDE6  44                 	db	68	;'D'
  3635  00FDE7  20                 	db	32
  3636  00FDE8  4F                 	db	79	;'O'
  3637  00FDE9  4E                 	db	78	;'N'
  3638  00FDEA  00                 	db	0
  3639  00FDEB                     STR_101:
  3640  00FDEB  52                 	db	82	;'R'
  3641  00FDEC  65                 	db	101	;'e'
  3642  00FDED  6D                 	db	109	;'m'
  3643  00FDEE  6F                 	db	111	;'o'
  3644  00FDEF  74                 	db	116	;'t'
  3645  00FDF0  65                 	db	101	;'e'
  3646  00FDF1  42                 	db	66	;'B'
  3647  00FDF2  75                 	db	117	;'u'
  3648  00FDF3  74                 	db	116	;'t'
  3649  00FDF4  74                 	db	116	;'t'
  3650  00FDF5  6F                 	db	111	;'o'
  3651  00FDF6  6E                 	db	110	;'n'
  3652  00FDF7  25                 	db	37
  3653  00FDF8  64                 	db	100	;'d'
  3654  00FDF9  20                 	db	32
  3655  00FDFA  73                 	db	115	;'s'
  3656  00FDFB  65                 	db	101	;'e'
  3657  00FDFC  74                 	db	116	;'t'
  3658  00FDFD  00                 	db	0
  3659  00FDFE                     STR_41:
  3660  00FDFE  4E                 	db	78	;'N'
  3661  00FDFF  45                 	db	69	;'E'
  3662  00FE00  43                 	db	67	;'C'
  3663  00FE01  20                 	db	32
  3664  00FE02  3D                 	db	61	;'='
  3665  00FE03  20                 	db	32
  3666  00FE04  30                 	db	48	;'0'
  3667  00FE05  78                 	db	120	;'x'
  3668  00FE06  31                 	db	49	;'1'
  3669  00FE07  43                 	db	67	;'C'
  3670  00FE08  45                 	db	69	;'E'
  3671  00FE09  33                 	db	51	;'3'
  3672  00FE0A  35                 	db	53	;'5'
  3673  00FE0B  30                 	db	48	;'0'
  3674  00FE0C  61                 	db	97	;'a'
  3675  00FE0D  66                 	db	102	;'f'
  3676  00FE0E  20                 	db	32
  3677  00FE0F  00                 	db	0
  3678  00FE10                     STR_58:
  3679  00FE10  52                 	db	82	;'R'
  3680  00FE11  65                 	db	101	;'e'
  3681  00FE12  6D                 	db	109	;'m'
  3682  00FE13  6F                 	db	111	;'o'
  3683  00FE14  74                 	db	116	;'t'
  3684  00FE15  65                 	db	101	;'e'
  3685  00FE16  42                 	db	66	;'B'
  3686  00FE17  75                 	db	117	;'u'
  3687  00FE18  74                 	db	116	;'t'
  3688  00FE19  74                 	db	116	;'t'
  3689  00FE1A  6F                 	db	111	;'o'
  3690  00FE1B  6E                 	db	110	;'n'
  3691  00FE1C  31                 	db	49	;'1'
  3692  00FE1D  20                 	db	32
  3693  00FE1E  73                 	db	115	;'s'
  3694  00FE1F  65                 	db	101	;'e'
  3695  00FE20  74                 	db	116	;'t'
  3696  00FE21  00                 	db	0
  3697  00FE22                     STR_80:
  3698  00FE22  53                 	db	83	;'S'
  3699  00FE23  79                 	db	121	;'y'
  3700  00FE24  73                 	db	115	;'s'
  3701  00FE25  74                 	db	116	;'t'
  3702  00FE26  65                 	db	101	;'e'
  3703  00FE27  6D                 	db	109	;'m'
  3704  00FE28  20                 	db	32
  3705  00FE29  77                 	db	119	;'w'
  3706  00FE2A  69                 	db	105	;'i'
  3707  00FE2B  6C                 	db	108	;'l'
  3708  00FE2C  6C                 	db	108	;'l'
  3709  00FE2D  20                 	db	32
  3710  00FE2E  72                 	db	114	;'r'
  3711  00FE2F  65                 	db	101	;'e'
  3712  00FE30  73                 	db	115	;'s'
  3713  00FE31  65                 	db	101	;'e'
  3714  00FE32  74                 	db	116	;'t'
  3715  00FE33  00                 	db	0
  3716  00FE34                     STR_147:
  3717  00FE34  30                 	db	48	;'0'
  3718  00FE35  31                 	db	49	;'1'
  3719  00FE36  32                 	db	50	;'2'
  3720  00FE37  33                 	db	51	;'3'
  3721  00FE38  34                 	db	52	;'4'
  3722  00FE39  35                 	db	53	;'5'
  3723  00FE3A  36                 	db	54	;'6'
  3724  00FE3B  37                 	db	55	;'7'
  3725  00FE3C  38                 	db	56	;'8'
  3726  00FE3D  39                 	db	57	;'9'
  3727  00FE3E  41                 	db	65	;'A'
  3728  00FE3F  42                 	db	66	;'B'
  3729  00FE40  43                 	db	67	;'C'
  3730  00FE41  44                 	db	68	;'D'
  3731  00FE42  45                 	db	69	;'E'
  3732  00FE43  46                 	db	70	;'F'
  3733  00FE44  00                 	db	0
  3734  00FE45                     STR_88:
  3735  00FE45  53                 	db	83	;'S'
  3736  00FE46  79                 	db	121	;'y'
  3737  00FE47  73                 	db	115	;'s'
  3738  00FE48  74                 	db	116	;'t'
  3739  00FE49  65                 	db	101	;'e'
  3740  00FE4A  6D                 	db	109	;'m'
  3741  00FE4B  20                 	db	32
  3742  00FE4C  63                 	db	99	;'c'
  3743  00FE4D  6F                 	db	111	;'o'
  3744  00FE4E  6D                 	db	109	;'m'
  3745  00FE4F  6D                 	db	109	;'m'
  3746  00FE50  61                 	db	97	;'a'
  3747  00FE51  6E                 	db	110	;'n'
  3748  00FE52  64                 	db	100	;'d'
  3749  00FE53  73                 	db	115	;'s'
  3750  00FE54  3A                 	db	58	;':'
  3751  00FE55  00                 	db	0
  3752  00FE56                     STR_43:
  3753  00FE56  4E                 	db	78	;'N'
  3754  00FE57  45                 	db	69	;'E'
  3755  00FE58  43                 	db	67	;'C'
  3756  00FE59  20                 	db	32
  3757  00FE5A  3D                 	db	61	;'='
  3758  00FE5B  20                 	db	32
  3759  00FE5C  30                 	db	48	;'0'
  3760  00FE5D  78                 	db	120	;'x'
  3761  00FE5E  33                 	db	51	;'3'
  3762  00FE5F  38                 	db	56	;'8'
  3763  00FE60  2C                 	db	44
  3764  00FE61  20                 	db	32
  3765  00FE62  30                 	db	48	;'0'
  3766  00FE63  78                 	db	120	;'x'
  3767  00FE64  30                 	db	48	;'0'
  3768  00FE65  41                 	db	65	;'A'
  3769  00FE66  00                 	db	0
  3770  00FE67                     STR_54:
  3771  00FE67  52                 	db	82	;'R'
  3772  00FE68  65                 	db	101	;'e'
  3773  00FE69  6D                 	db	109	;'m'
  3774  00FE6A  6F                 	db	111	;'o'
  3775  00FE6B  74                 	db	116	;'t'
  3776  00FE6C  65                 	db	101	;'e'
  3777  00FE6D  42                 	db	66	;'B'
  3778  00FE6E  75                 	db	117	;'u'
  3779  00FE6F  74                 	db	116	;'t'
  3780  00FE70  74                 	db	116	;'t'
  3781  00FE71  6F                 	db	111	;'o'
  3782  00FE72  6E                 	db	110	;'n'
  3783  00FE73  27                 	db	39
  3784  00FE74  78                 	db	120	;'x'
  3785  00FE75  27                 	db	39
  3786  00FE76  00                 	db	0
  3787  00FE77                     STR_1:
  3788  00FE77  42                 	db	66	;'B'
  3789  00FE78  75                 	db	117	;'u'
  3790  00FE79  66                 	db	102	;'f'
  3791  00FE7A  66                 	db	102	;'f'
  3792  00FE7B  65                 	db	101	;'e'
  3793  00FE7C  72                 	db	114	;'r'
  3794  00FE7D  20                 	db	32
  3795  00FE7E  4F                 	db	79	;'O'
  3796  00FE7F  76                 	db	118	;'v'
  3797  00FE80  65                 	db	101	;'e'
  3798  00FE81  72                 	db	114	;'r'
  3799  00FE82  66                 	db	102	;'f'
  3800  00FE83  6C                 	db	108	;'l'
  3801  00FE84  6F                 	db	111	;'o'
  3802  00FE85  77                 	db	119	;'w'
  3803  00FE86  00                 	db	0
  3804  00FE87                     STR_99:
  3805  00FE87  52                 	db	82	;'R'
  3806  00FE88  65                 	db	101	;'e'
  3807  00FE89  6D                 	db	109	;'m'
  3808  00FE8A  6F                 	db	111	;'o'
  3809  00FE8B  74                 	db	116	;'t'
  3810  00FE8C  65                 	db	101	;'e'
  3811  00FE8D  42                 	db	66	;'B'
  3812  00FE8E  75                 	db	117	;'u'
  3813  00FE8F  74                 	db	116	;'t'
  3814  00FE90  74                 	db	116	;'t'
  3815  00FE91  6F                 	db	111	;'o'
  3816  00FE92  6E                 	db	110	;'n'
  3817  00FE93  25                 	db	37
  3818  00FE94  64                 	db	100	;'d'
  3819  00FE95  00                 	db	0
  3820  00FE96                     STR_57:
  3821  00FE96  52                 	db	82	;'R'
  3822  00FE97  65                 	db	101	;'e'
  3823  00FE98  6D                 	db	109	;'m'
  3824  00FE99  6F                 	db	111	;'o'
  3825  00FE9A  74                 	db	116	;'t'
  3826  00FE9B  65                 	db	101	;'e'
  3827  00FE9C  42                 	db	66	;'B'
  3828  00FE9D  75                 	db	117	;'u'
  3829  00FE9E  74                 	db	116	;'t'
  3830  00FE9F  74                 	db	116	;'t'
  3831  00FEA0  6F                 	db	111	;'o'
  3832  00FEA1  6E                 	db	110	;'n'
  3833  00FEA2  31                 	db	49	;'1'
  3834  00FEA3  00                 	db	0
  3835  00FEA4                     STR_67:
  3836  00FEA4  57                 	db	87	;'W'
  3837  00FEA5  68                 	db	104	;'h'
  3838  00FEA6  69                 	db	105	;'i'
  3839  00FEA7  63                 	db	99	;'c'
  3840  00FEA8  68                 	db	104	;'h'
  3841  00FEA9  20                 	db	32
  3842  00FEAA  64                 	db	100	;'d'
  3843  00FEAB  65                 	db	101	;'e'
  3844  00FEAC  76                 	db	118	;'v'
  3845  00FEAD  69                 	db	105	;'i'
  3846  00FEAE  63                 	db	99	;'c'
  3847  00FEAF  65                 	db	101	;'e'
  3848  00FEB0  3F                 	db	63	;'?'
  3849  00FEB1  00                 	db	0
  3850  00FEB2                     STR_129:
  3851  00FEB2  52                 	db	82	;'R'
  3852  00FEB3  46                 	db	70	;'F'
  3853  00FEB4  20                 	db	32
  3854  00FEB5  63                 	db	99	;'c'
  3855  00FEB6  6F                 	db	111	;'o'
  3856  00FEB7  6D                 	db	109	;'m'
  3857  00FEB8  6D                 	db	109	;'m'
  3858  00FEB9  61                 	db	97	;'a'
  3859  00FEBA  6E                 	db	110	;'n'
  3860  00FEBB  64                 	db	100	;'d'
  3861  00FEBC  73                 	db	115	;'s'
  3862  00FEBD  3A                 	db	58	;':'
  3863  00FEBE  00                 	db	0
  3864  00FEBF                     STR_98:
  3865  00FEBF  49                 	db	73	;'I'
  3866  00FEC0  52                 	db	82	;'R'
  3867  00FEC1  20                 	db	32
  3868  00FEC2  63                 	db	99	;'c'
  3869  00FEC3  6F                 	db	111	;'o'
  3870  00FEC4  6D                 	db	109	;'m'
  3871  00FEC5  6D                 	db	109	;'m'
  3872  00FEC6  61                 	db	97	;'a'
  3873  00FEC7  6E                 	db	110	;'n'
  3874  00FEC8  64                 	db	100	;'d'
  3875  00FEC9  73                 	db	115	;'s'
  3876  00FECA  3A                 	db	58	;':'
  3877  00FECB  00                 	db	0
  3878  00FECC                     STR_121:
  3879  00FECC  52                 	db	82	;'R'
  3880  00FECD  46                 	db	70	;'F'
  3881  00FECE  20                 	db	32
  3882  00FECF  63                 	db	99	;'c'
  3883  00FED0  6C                 	db	108	;'l'
  3884  00FED1  65                 	db	101	;'e'
  3885  00FED2  61                 	db	97	;'a'
  3886  00FED3  72                 	db	114	;'r'
  3887  00FED4  20                 	db	32
  3888  00FED5  32                 	db	50	;'2'
  3889  00FED6  2C                 	db	44
  3890  00FED7  42                 	db	66	;'B'
  3891  00FED8  00                 	db	0
  3892  00FED9                     STR_115:
  3893  00FED9  52                 	db	82	;'R'
  3894  00FEDA  46                 	db	70	;'F'
  3895  00FEDB  20                 	db	32
  3896  00FEDC  63                 	db	99	;'c'
  3897  00FEDD  6C                 	db	108	;'l'
  3898  00FEDE  65                 	db	101	;'e'
  3899  00FEDF  61                 	db	97	;'a'
  3900  00FEE0  72                 	db	114	;'r'
  3901  00FEE1  20                 	db	32
  3902  00FEE2  31                 	db	49	;'1'
  3903  00FEE3  2C                 	db	44
  3904  00FEE4  44                 	db	68	;'D'
  3905  00FEE5  00                 	db	0
  3906  00FEE6                     STR_123:
  3907  00FEE6  52                 	db	82	;'R'
  3908  00FEE7  46                 	db	70	;'F'
  3909  00FEE8  20                 	db	32
  3910  00FEE9  63                 	db	99	;'c'
  3911  00FEEA  6C                 	db	108	;'l'
  3912  00FEEB  65                 	db	101	;'e'
  3913  00FEEC  61                 	db	97	;'a'
  3914  00FEED  72                 	db	114	;'r'
  3915  00FEEE  20                 	db	32
  3916  00FEEF  32                 	db	50	;'2'
  3917  00FEF0  2C                 	db	44
  3918  00FEF1  44                 	db	68	;'D'
  3919  00FEF2  00                 	db	0
  3920  00FEF3                     STR_117:
  3921  00FEF3  52                 	db	82	;'R'
  3922  00FEF4  46                 	db	70	;'F'
  3923  00FEF5  20                 	db	32
  3924  00FEF6  63                 	db	99	;'c'
  3925  00FEF7  6C                 	db	108	;'l'
  3926  00FEF8  65                 	db	101	;'e'
  3927  00FEF9  61                 	db	97	;'a'
  3928  00FEFA  72                 	db	114	;'r'
  3929  00FEFB  20                 	db	32
  3930  00FEFC  31                 	db	49	;'1'
  3931  00FEFD  2C                 	db	44
  3932  00FEFE  45                 	db	69	;'E'
  3933  00FEFF  00                 	db	0
  3934  00FF00                     STR_119:
  3935  00FF00  52                 	db	82	;'R'
  3936  00FF01  46                 	db	70	;'F'
  3937  00FF02  20                 	db	32
  3938  00FF03  63                 	db	99	;'c'
  3939  00FF04  6C                 	db	108	;'l'
  3940  00FF05  65                 	db	101	;'e'
  3941  00FF06  61                 	db	97	;'a'
  3942  00FF07  72                 	db	114	;'r'
  3943  00FF08  20                 	db	32
  3944  00FF09  31                 	db	49	;'1'
  3945  00FF0A  2C                 	db	44
  3946  00FF0B  46                 	db	70	;'F'
  3947  00FF0C  00                 	db	0
  3948  00FF0D                     STR_125:
  3949  00FF0D  52                 	db	82	;'R'
  3950  00FF0E  46                 	db	70	;'F'
  3951  00FF0F  20                 	db	32
  3952  00FF10  63                 	db	99	;'c'
  3953  00FF11  6C                 	db	108	;'l'
  3954  00FF12  65                 	db	101	;'e'
  3955  00FF13  61                 	db	97	;'a'
  3956  00FF14  72                 	db	114	;'r'
  3957  00FF15  20                 	db	32
  3958  00FF16  32                 	db	50	;'2'
  3959  00FF17  2C                 	db	44
  3960  00FF18  48                 	db	72	;'H'
  3961  00FF19  00                 	db	0
  3962  00FF1A                     STR_44:
  3963  00FF1A  52                 	db	82	;'R'
  3964  00FF1B  65                 	db	101	;'e'
  3965  00FF1C  6D                 	db	109	;'m'
  3966  00FF1D  6F                 	db	111	;'o'
  3967  00FF1E  74                 	db	116	;'t'
  3968  00FF1F  65                 	db	101	;'e'
  3969  00FF20  42                 	db	66	;'B'
  3970  00FF21  75                 	db	117	;'u'
  3971  00FF22  74                 	db	116	;'t'
  3972  00FF23  74                 	db	116	;'t'
  3973  00FF24  6F                 	db	111	;'o'
  3974  00FF25  6E                 	db	110	;'n'
  3975  00FF26  00                 	db	0
  3976  00FF27                     STR_109:
  3977  00FF27  52                 	db	82	;'R'
  3978  00FF28  46                 	db	70	;'F'
  3979  00FF29  20                 	db	32
  3980  00FF2A  73                 	db	115	;'s'
  3981  00FF2B  65                 	db	101	;'e'
  3982  00FF2C  74                 	db	116	;'t'
  3983  00FF2D  20                 	db	32
  3984  00FF2E  32                 	db	50	;'2'
  3985  00FF2F  2C                 	db	44
  3986  00FF30  42                 	db	66	;'B'
  3987  00FF31  00                 	db	0
  3988  00FF32                     STR_103:
  3989  00FF32  52                 	db	82	;'R'
  3990  00FF33  46                 	db	70	;'F'
  3991  00FF34  20                 	db	32
  3992  00FF35  73                 	db	115	;'s'
  3993  00FF36  65                 	db	101	;'e'
  3994  00FF37  74                 	db	116	;'t'
  3995  00FF38  20                 	db	32
  3996  00FF39  31                 	db	49	;'1'
  3997  00FF3A  2C                 	db	44
  3998  00FF3B  44                 	db	68	;'D'
  3999  00FF3C  00                 	db	0
  4000  00FF3D                     STR_111:
  4001  00FF3D  52                 	db	82	;'R'
  4002  00FF3E  46                 	db	70	;'F'
  4003  00FF3F  20                 	db	32
  4004  00FF40  73                 	db	115	;'s'
  4005  00FF41  65                 	db	101	;'e'
  4006  00FF42  74                 	db	116	;'t'
  4007  00FF43  20                 	db	32
  4008  00FF44  32                 	db	50	;'2'
  4009  00FF45  2C                 	db	44
  4010  00FF46  44                 	db	68	;'D'
  4011  00FF47  00                 	db	0
  4012  00FF48                     STR_105:
  4013  00FF48  52                 	db	82	;'R'
  4014  00FF49  46                 	db	70	;'F'
  4015  00FF4A  20                 	db	32
  4016  00FF4B  73                 	db	115	;'s'
  4017  00FF4C  65                 	db	101	;'e'
  4018  00FF4D  74                 	db	116	;'t'
  4019  00FF4E  20                 	db	32
  4020  00FF4F  31                 	db	49	;'1'
  4021  00FF50  2C                 	db	44
  4022  00FF51  45                 	db	69	;'E'
  4023  00FF52  00                 	db	0
  4024  00FF53                     STR_107:
  4025  00FF53  52                 	db	82	;'R'
  4026  00FF54  46                 	db	70	;'F'
  4027  00FF55  20                 	db	32
  4028  00FF56  73                 	db	115	;'s'
  4029  00FF57  65                 	db	101	;'e'
  4030  00FF58  74                 	db	116	;'t'
  4031  00FF59  20                 	db	32
  4032  00FF5A  31                 	db	49	;'1'
  4033  00FF5B  2C                 	db	44
  4034  00FF5C  46                 	db	70	;'F'
  4035  00FF5D  00                 	db	0
  4036  00FF5E                     STR_113:
  4037  00FF5E  52                 	db	82	;'R'
  4038  00FF5F  46                 	db	70	;'F'
  4039  00FF60  20                 	db	32
  4040  00FF61  73                 	db	115	;'s'
  4041  00FF62  65                 	db	101	;'e'
  4042  00FF63  74                 	db	116	;'t'
  4043  00FF64  20                 	db	32
  4044  00FF65  32                 	db	50	;'2'
  4045  00FF66  2C                 	db	44
  4046  00FF67  48                 	db	72	;'H'
  4047  00FF68  00                 	db	0
  4048  00FF69                     STR_38:
  4049  00FF69  20                 	db	32
  4050  00FF6A  20                 	db	32
  4051  00FF6B  20                 	db	32
  4052  00FF6C  20                 	db	32
  4053  00FF6D  20                 	db	32
  4054  00FF6E  20                 	db	32
  4055  00FF6F  20                 	db	32
  4056  00FF70  20                 	db	32
  4057  00FF71  6F                 	db	111	;'o'
  4058  00FF72  72                 	db	114	;'r'
  4059  00FF73  00                 	db	0
  4060  00FF74                     STR_6:
  4061  00FF74  53                 	db	83	;'S'
  4062  00FF75  55                 	db	85	;'U'
  4063  00FF76  2C                 	db	44
  4064  00FF77  20                 	db	32
  4065  00FF78  31                 	db	49	;'1'
  4066  00FF79  31                 	db	49	;'1'
  4067  00FF7A  35                 	db	53	;'5'
  4068  00FF7B  4B                 	db	75	;'K'
  4069  00FF7C  0D                 	db	13
  4070  00FF7D  00                 	db	0
  4071  00FF7E                     STR_90:
  4072  00FF7E  48                 	db	72	;'H'
  4073  00FF7F  65                 	db	101	;'e'
  4074  00FF80  6C                 	db	108	;'l'
  4075  00FF81  70                 	db	112	;'p'
  4076  00FF82  20                 	db	32
  4077  00FF83  4D                 	db	77	;'M'
  4078  00FF84  65                 	db	101	;'e'
  4079  00FF85  6E                 	db	110	;'n'
  4080  00FF86  75                 	db	117	;'u'
  4081  00FF87  00                 	db	0
  4082  00FF88                     STR_10:
  4083  00FF88  53                 	db	83	;'S'
  4084  00FF89  59                 	db	89	;'Y'
  4085  00FF8A  2C                 	db	44
  4086  00FF8B  30                 	db	48	;'0'
  4087  00FF8C  30                 	db	48	;'0'
  4088  00FF8D  31                 	db	49	;'1'
  4089  00FF8E  30                 	db	48	;'0'
  4090  00FF8F  0D                 	db	13
  4091  00FF90  00                 	db	0
  4092  00FF91                     STR_40:
  4093  00FF91  45                 	db	69	;'E'
  4094  00FF92  78                 	db	120	;'x'
  4095  00FF93  61                 	db	97	;'a'
  4096  00FF94  6D                 	db	109	;'m'
  4097  00FF95  70                 	db	112	;'p'
  4098  00FF96  6C                 	db	108	;'l'
  4099  00FF97  65                 	db	101	;'e'
  4100  00FF98  3A                 	db	58	;':'
  4101  00FF99  00                 	db	0
  4102  00FF9A                     STR_60:
  4103  00FF9A  52                 	db	82	;'R'
  4104  00FF9B  46                 	db	70	;'F'
  4105  00FF9C  20                 	db	32
  4106  00FF9D  63                 	db	99	;'c'
  4107  00FF9E  6C                 	db	108	;'l'
  4108  00FF9F  65                 	db	101	;'e'
  4109  00FFA0  61                 	db	97	;'a'
  4110  00FFA1  72                 	db	114	;'r'
  4111  00FFA2  00                 	db	0
  4112  00FFA3                     STR_82:
  4113  00FFA3  56                 	db	86	;'V'
  4114  00FFA4  6F                 	db	111	;'o'
  4115  00FFA5  6C                 	db	108	;'l'
  4116  00FFA6  74                 	db	116	;'t'
  4117  00FFA7  61                 	db	97	;'a'
  4118  00FFA8  67                 	db	103	;'g'
  4119  00FFA9  65                 	db	101	;'e'
  4120  00FFAA  00                 	db	0
  4121  00FFAB                     STR_146:
  4122  00FFAB  28                 	db	40
  4123  00FFAC  6E                 	db	110	;'n'
  4124  00FFAD  75                 	db	117	;'u'
  4125  00FFAE  6C                 	db	108	;'l'
  4126  00FFAF  6C                 	db	108	;'l'
  4127  00FFB0  29                 	db	41
  4128  00FFB1  00                 	db	0
  4129  00FFB2                     STR_36:
  4130  00FFB2  55                 	db	85	;'U'
  4131  00FFB3  73                 	db	115	;'s'
  4132  00FFB4  61                 	db	97	;'a'
  4133  00FFB5  67                 	db	103	;'g'
  4134  00FFB6  65                 	db	101	;'e'
  4135  00FFB7  3A                 	db	58	;':'
  4136  00FFB8  00                 	db	0
  4137  00FFB9                     STR_59:
  4138  00FFB9  52                 	db	82	;'R'
  4139  00FFBA  46                 	db	70	;'F'
  4140  00FFBB  20                 	db	32
  4141  00FFBC  73                 	db	115	;'s'
  4142  00FFBD  65                 	db	101	;'e'
  4143  00FFBE  74                 	db	116	;'t'
  4144  00FFBF  00                 	db	0
  4145  00FFC0                     STR_12:
  4146  00FFC0  53                 	db	83	;'S'
  4147  00FFC1  7E                 	db	126
  4148  00FFC2  2C                 	db	44
  4149  00FFC3  30                 	db	48	;'0'
  4150  00FFC4  0D                 	db	13
  4151  00FFC5  00                 	db	0
  4152  00FFC6                     STR_20:
  4153  00FFC6  43                 	db	67	;'C'
  4154  00FFC7  6F                 	db	111	;'o'
  4155  00FFC8  6E                 	db	110	;'n'
  4156  00FFC9  66                 	db	102	;'f'
  4157  00FFCA  31                 	db	49	;'1'
  4158  00FFCB  00                 	db	0
  4159  00FFCC                     STR_22:
  4160  00FFCC  43                 	db	67	;'C'
  4161  00FFCD  6F                 	db	111	;'o'
  4162  00FFCE  6E                 	db	110	;'n'
  4163  00FFCF  66                 	db	102	;'f'
  4164  00FFD0  32                 	db	50	;'2'
  4165  00FFD1  00                 	db	0
  4166  00FFD2                     STR_77:
  4167  00FFD2  52                 	db	82	;'R'
  4168  00FFD3  65                 	db	101	;'e'
  4169  00FFD4  73                 	db	115	;'s'
  4170  00FFD5  65                 	db	101	;'e'
  4171  00FFD6  74                 	db	116	;'t'
  4172  00FFD7  00                 	db	0
  4173  00FFD8                     STR_18:
  4174  00FFD8  2D                 	db	45
  4175  00FFD9  2D                 	db	45
  4176  00FFDA  2D                 	db	45
  4177  00FFDB  0D                 	db	13
  4178  00FFDC  00                 	db	0
  4179  00FFDD                     STR_16:
  4180  00FFDD  44                 	db	68	;'D'
  4181  00FFDE  2C                 	db	44
  4182  00FFDF  30                 	db	48	;'0'
  4183  00FFE0  0D                 	db	13
  4184  00FFE1  00                 	db	0
  4185  00FFE2                     STR_127:
  4186  00FFE2  4E                 	db	78	;'N'
  4187  00FFE3  45                 	db	69	;'E'
  4188  00FFE4  43                 	db	67	;'C'
  4189  00FFE5  3F                 	db	63	;'?'
  4190  00FFE6  00                 	db	0
  4191  00FFE7                     STR_2:
  4192  00FFE7  24                 	db	36
  4193  00FFE8  24                 	db	36
  4194  00FFE9  24                 	db	36
  4195  00FFEA  00                 	db	0
  4196  00FFEB                     STR_86:
  4197  00FFEB  3F                 	db	63	;'?'
  4198  00FFEC  3F                 	db	63	;'?'
  4199  00FFED  3F                 	db	63	;'?'
  4200  00FFEE  00                 	db	0
  4201  00FFEF                     STR_24:
  4202  00FFEF  4E                 	db	78	;'N'
  4203  00FFF0  45                 	db	69	;'E'
  4204  00FFF1  43                 	db	67	;'C'
  4205  00FFF2  00                 	db	0
  4206  00FFF3                     STR_3:
  4207  00FFF3  43                 	db	67	;'C'
  4208  00FFF4  4D                 	db	77	;'M'
  4209  00FFF5  44                 	db	68	;'D'
  4210  00FFF6  00                 	db	0
  4211  00FFF7                     STR_19:
  4212  00FFF7  45                 	db	69	;'E'
  4213  00FFF8  4E                 	db	78	;'N'
  4214  00FFF9  44                 	db	68	;'D'
  4215  00FFFA  00                 	db	0
  4216  00FFFB                     STR_5:
  4217  00FFFB  41                 	db	65	;'A'
  4218  00FFFC  4F                 	db	79	;'O'
  4219  00FFFD  4B                 	db	75	;'K'
  4220  00FFFE  00                 	db	0
  4221  0000                     
  4222                           ; #config settings
  4223  00FFFF  00                 	db	0	; dummy byte at the end
  4224  0000                     
  4225                           	psect	cinit
  4226  007B2A                     __pcinit:
  4227                           	opt stack 0
  4228  007B2A                     start_initialization:
  4229                           	opt stack 0
  4230  007B2A                     __initialization:
  4231                           	opt stack 0
  4232                           
  4233                           ; Clear objects allocated to BANK7 (144 bytes)
  4234  007B2A  EE07  F000         	lfsr	0,__pbssBANK7
  4235  007B2E  0E90               	movlw	144
  4236  007B30                     clear_0:
  4237  007B30  6AEE               	clrf	postinc0,c
  4238  007B32  06E8               	decf	wreg,f,c
  4239  007B34  E1FD               	bnz	clear_0
  4240                           
  4241                           ; Clear objects allocated to BANK6 (255 bytes)
  4242  007B36  EE06  F000         	lfsr	0,__pbssBANK6
  4243  007B3A  EE10 F0FF          	lfsr	1,255
  4244  007B3E                     clear_1:
  4245  007B3E  6AEE               	clrf	postinc0,c
  4246  007B40  50E5               	movf	postdec1,w,c
  4247  007B42  50E1               	movf	fsr1l,w,c
  4248  007B44  E1FC               	bnz	clear_1
  4249  007B46  50E2               	movf	fsr1h,w,c
  4250  007B48  E1FA               	bnz	clear_1
  4251                           
  4252                           ; Clear objects allocated to BANK5 (255 bytes)
  4253  007B4A  EE05  F000         	lfsr	0,__pbssBANK5
  4254  007B4E  EE10 F0FF          	lfsr	1,255
  4255  007B52                     clear_2:
  4256  007B52  6AEE               	clrf	postinc0,c
  4257  007B54  50E5               	movf	postdec1,w,c
  4258  007B56  50E1               	movf	fsr1l,w,c
  4259  007B58  E1FC               	bnz	clear_2
  4260  007B5A  50E2               	movf	fsr1h,w,c
  4261  007B5C  E1FA               	bnz	clear_2
  4262                           
  4263                           ; Clear objects allocated to BANK4 (136 bytes)
  4264  007B5E  EE04  F000         	lfsr	0,__pbssBANK4
  4265  007B62  0E88               	movlw	136
  4266  007B64                     clear_3:
  4267  007B64  6AEE               	clrf	postinc0,c
  4268  007B66  06E8               	decf	wreg,f,c
  4269  007B68  E1FD               	bnz	clear_3
  4270                           
  4271                           ; Clear objects allocated to BANK1 (22 bytes)
  4272  007B6A  EE01  F0D6         	lfsr	0,__pbssBANK1
  4273  007B6E  0E16               	movlw	22
  4274  007B70                     clear_4:
  4275  007B70  6AEE               	clrf	postinc0,c
  4276  007B72  06E8               	decf	wreg,f,c
  4277  007B74  E1FD               	bnz	clear_4
  4278                           
  4279                           ; Clear objects allocated to BANK0 (11 bytes)
  4280  007B76  EE00  F0DB         	lfsr	0,__pbssBANK0
  4281  007B7A  0E0B               	movlw	11
  4282  007B7C                     clear_5:
  4283  007B7C  6AEE               	clrf	postinc0,c
  4284  007B7E  06E8               	decf	wreg,f,c
  4285  007B80  E1FD               	bnz	clear_5
  4286                           
  4287                           ; Clear objects allocated to COMRAM (25 bytes)
  4288  007B82  EE00  F025         	lfsr	0,__pbssCOMRAM
  4289  007B86  0E19               	movlw	25
  4290  007B88                     clear_6:
  4291  007B88  6AEE               	clrf	postinc0,c
  4292  007B8A  06E8               	decf	wreg,f,c
  4293  007B8C  E1FD               	bnz	clear_6
  4294                           
  4295                           ; Initialize objects allocated to BANK2 (4 bytes)
  4296                           ; load TBLPTR registers with __pidataBANK2
  4297  007B8E  0EC9               	movlw	low __pidataBANK2
  4298  007B90  6EF6               	movwf	tblptrl,c
  4299  007B92  0E93               	movlw	high __pidataBANK2
  4300  007B94  6EF7               	movwf	tblptrh,c
  4301  007B96  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4302  007B98  6EF8               	movwf	tblptru,c
  4303  007B9A  EE02  F084         	lfsr	0,__pdataBANK2
  4304  007B9E  EE10 F004          	lfsr	1,4
  4305  007BA2                     copy_data0:
  4306  007BA2  0009               	tblrd		*+
  4307  007BA4  CFF5 FFEE          	movff	tablat,postinc0
  4308  007BA8  50E5               	movf	postdec1,w,c
  4309  007BAA  50E1               	movf	fsr1l,w,c
  4310  007BAC  E1FA               	bnz	copy_data0
  4311                           
  4312                           ; Initialize objects allocated to BANK1 (54 bytes)
  4313                           ; load TBLPTR registers with __pidataBANK1
  4314  007BAE  0E52               	movlw	low __pidataBANK1
  4315  007BB0  6EF6               	movwf	tblptrl,c
  4316  007BB2  0E90               	movlw	high __pidataBANK1
  4317  007BB4  6EF7               	movwf	tblptrh,c
  4318  007BB6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4319  007BB8  6EF8               	movwf	tblptru,c
  4320  007BBA  EE01  F0A0         	lfsr	0,__pdataBANK1
  4321  007BBE  EE10 F036          	lfsr	1,54
  4322  007BC2                     copy_data1:
  4323  007BC2  0009               	tblrd		*+
  4324  007BC4  CFF5 FFEE          	movff	tablat,postinc0
  4325  007BC8  50E5               	movf	postdec1,w,c
  4326  007BCA  50E1               	movf	fsr1l,w,c
  4327  007BCC  E1FA               	bnz	copy_data1
  4328                           
  4329                           ; Initialize objects allocated to BANK0 (1 bytes)
  4330                           ; load TBLPTR registers with __pidataBANK0
  4331  007BCE  0ED4               	movlw	low __pidataBANK0
  4332  007BD0  6EF6               	movwf	tblptrl,c
  4333  007BD2  0E93               	movlw	high __pidataBANK0
  4334  007BD4  6EF7               	movwf	tblptrh,c
  4335  007BD6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4336  007BD8  6EF8               	movwf	tblptru,c
  4337  007BDA  0009               	tblrd		*+	;fetch initializer
  4338  007BDC  CFF5 F0E6          	movff	tablat,__pdataBANK0
  4339                           
  4340                           ; Initialize objects allocated to COMRAM (5 bytes)
  4341                           ; load TBLPTR registers with __pidataCOMRAM
  4342  007BE0  0EC4               	movlw	low __pidataCOMRAM
  4343  007BE2  6EF6               	movwf	tblptrl,c
  4344  007BE4  0E93               	movlw	high __pidataCOMRAM
  4345  007BE6  6EF7               	movwf	tblptrh,c
  4346  007BE8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4347  007BEA  6EF8               	movwf	tblptru,c
  4348  007BEC  EE00  F03E         	lfsr	0,__pdataCOMRAM
  4349  007BF0  EE10 F005          	lfsr	1,5
  4350  007BF4                     copy_data2:
  4351  007BF4  0009               	tblrd		*+
  4352  007BF6  CFF5 FFEE          	movff	tablat,postinc0
  4353  007BFA  50E5               	movf	postdec1,w,c
  4354  007BFC  50E1               	movf	fsr1l,w,c
  4355  007BFE  E1FA               	bnz	copy_data2
  4356  007C00                     end_of_initialization:
  4357                           	opt stack 0
  4358  007C00                     __end_of__initialization:
  4359                           	opt stack 0
  4360  007C00  0100               	movlb	0
  4361  007C02  EFE4  F029         	goto	_main	;jump to C main() function
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           postinc0	equ	0xFEE
  4367                           wreg	equ	0xFE8
  4368                           postdec1	equ	0xFE5
  4369                           fsr1h	equ	0xFE2
  4370                           fsr1l	equ	0xFE1
  4371                           
  4372                           	psect	bssCOMRAM
  4373  000025                     __pbssCOMRAM:
  4374                           	opt stack 0
  4375  000025                     _IRsendCode:
  4376                           	opt stack 0
  4377  000025                     	ds	4
  4378  000029                     _CommandStringPos:
  4379                           	opt stack 0
  4380  000029                     	ds	1
  4381  00002A                     _Conf2_ChannelB_Status:
  4382                           	opt stack 0
  4383  00002A                     	ds	1
  4384  00002B                     _Conf2_ChannelD_Status:
  4385                           	opt stack 0
  4386  00002B                     	ds	1
  4387  00002C                     _Conf2_ChannelH_1_Status:
  4388                           	opt stack 0
  4389  00002C                     	ds	1
  4390  00002D                     _Conf2_ChannelH_2_Status:
  4391                           	opt stack 0
  4392  00002D                     	ds	1
  4393  00002E                     _Conf2_ChannelH_3_Status:
  4394                           	opt stack 0
  4395  00002E                     	ds	1
  4396  00002F                     _IRbit:
  4397                           	opt stack 0
  4398  00002F                     	ds	1
  4399  000030                     _IRcodeBit:
  4400                           	opt stack 0
  4401  000030                     	ds	1
  4402  000031                     _IRpinOLD:
  4403                           	opt stack 0
  4404  000031                     	ds	1
  4405  000032                     _IRrawCodeNum:
  4406                           	opt stack 0
  4407  000032                     	ds	1
  4408  000033                     _IRrepeatAmount:
  4409                           	opt stack 0
  4410  000033                     	ds	1
  4411  000034                     _IRrepeatflag:
  4412                           	opt stack 0
  4413  000034                     	ds	1
  4414  000035                     _IRsendFlag:
  4415                           	opt stack 0
  4416  000035                     	ds	1
  4417  000036                     _RFConfig:
  4418                           	opt stack 0
  4419  000036                     	ds	1
  4420  000037                     _RFcodeBit:
  4421                           	opt stack 0
  4422  000037                     	ds	1
  4423  000038                     _RFcodePlace:
  4424                           	opt stack 0
  4425  000038                     	ds	1
  4426  000039                     _RFsendFlag:
  4427                           	opt stack 0
  4428  000039                     	ds	1
  4429  00003A                     _Sendcount:
  4430                           	opt stack 0
  4431  00003A                     	ds	1
  4432  00003B                     _Timer1_Postscaler:
  4433                           	opt stack 0
  4434  00003B                     	ds	1
  4435  00003C                     _Timer2_Postscaler:
  4436                           	opt stack 0
  4437  00003C                     	ds	1
  4438  00003D                     _Timer3_Postscaler:
  4439                           	opt stack 0
  4440  00003D                     	ds	1
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           postdec1	equ	0xFE5
  4448                           fsr1h	equ	0xFE2
  4449                           fsr1l	equ	0xFE1
  4450                           
  4451                           	psect	dataCOMRAM
  4452  00003E                     __pdataCOMRAM:
  4453                           	opt stack 0
  4454  00003E                     _IRbitPosition:
  4455                           	opt stack 0
  4456  00003E                     	ds	1
  4457  00003F                     _IRcodePlace:
  4458                           	opt stack 0
  4459  00003F                     	ds	1
  4460  000040                     _RF_IR:
  4461                           	opt stack 0
  4462  000040                     	ds	1
  4463  000041                     _RF_IR_Postscaler:
  4464                           	opt stack 0
  4465  000041                     	ds	1
  4466  000042                     _ReceivingIR:
  4467                           	opt stack 0
  4468  000042                     	ds	1
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           postdec1	equ	0xFE5
  4476                           fsr1h	equ	0xFE2
  4477                           fsr1l	equ	0xFE1
  4478                           
  4479                           	psect	bssBANK0
  4480  0000DB                     __pbssBANK0:
  4481                           	opt stack 0
  4482  0000DB                     _BatteryVoltage:
  4483                           	opt stack 0
  4484  0000DB                     	ds	3
  4485  0000DE                     _IRmod:
  4486                           	opt stack 0
  4487  0000DE                     	ds	1
  4488  0000DF                     _NewReceivedString:
  4489                           	opt stack 0
  4490  0000DF                     	ds	1
  4491  0000E0                     _ReceivedStringPos:
  4492                           	opt stack 0
  4493  0000E0                     	ds	1
  4494  0000E1                     _IR_NEC:
  4495                           	opt stack 0
  4496  0000E1                     	ds	4
  4497  0000E5                     _IR_New_Code:
  4498                           	opt stack 0
  4499  0000E5                     	ds	1
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           postinc0	equ	0xFEE
  4505                           wreg	equ	0xFE8
  4506                           postdec1	equ	0xFE5
  4507                           fsr1h	equ	0xFE2
  4508                           fsr1l	equ	0xFE1
  4509                           
  4510                           	psect	dataBANK0
  4511  0000E6                     __pdataBANK0:
  4512                           	opt stack 0
  4513  0000E6                     _Sent:
  4514                           	opt stack 0
  4515  0000E6                     	ds	1
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           postinc0	equ	0xFEE
  4521                           wreg	equ	0xFE8
  4522                           postdec1	equ	0xFE5
  4523                           fsr1h	equ	0xFE2
  4524                           fsr1l	equ	0xFE1
  4525                           
  4526                           	psect	bssBANK1
  4527  0001D6                     __pbssBANK1:
  4528                           	opt stack 0
  4529  0001D6                     _RFsendCode:
  4530                           	opt stack 0
  4531  0001D6                     	ds	20
  4532  0001EA                     _IRaddress:
  4533                           	opt stack 0
  4534  0001EA                     	ds	1
  4535  0001EB                     _IRcommand:
  4536                           	opt stack 0
  4537  0001EB                     	ds	1
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           postdec1	equ	0xFE5
  4545                           fsr1h	equ	0xFE2
  4546                           fsr1l	equ	0xFE1
  4547                           
  4548                           	psect	dataBANK1
  4549  0001A0                     __pdataBANK1:
  4550                           	opt stack 0
  4551  0001A0                     _ProductName:
  4552                           	opt stack 0
  4553  0001A0                     	ds	50
  4554  0001D2                     _SN:
  4555                           	opt stack 0
  4556  0001D2                     	ds	4
  4557                           tblptru	equ	0xFF8
  4558                           tblptrh	equ	0xFF7
  4559                           tblptrl	equ	0xFF6
  4560                           tablat	equ	0xFF5
  4561                           postinc0	equ	0xFEE
  4562                           wreg	equ	0xFE8
  4563                           postdec1	equ	0xFE5
  4564                           fsr1h	equ	0xFE2
  4565                           fsr1l	equ	0xFE1
  4566                           
  4567                           	psect	dataBANK2
  4568  000284                     __pdataBANK2:
  4569                           	opt stack 0
  4570  000284                     _IRtimeout:
  4571                           	opt stack 0
  4572  000284                     	ds	4
  4573                           tblptru	equ	0xFF8
  4574                           tblptrh	equ	0xFF7
  4575                           tblptrl	equ	0xFF6
  4576                           tablat	equ	0xFF5
  4577                           postinc0	equ	0xFEE
  4578                           wreg	equ	0xFE8
  4579                           postdec1	equ	0xFE5
  4580                           fsr1h	equ	0xFE2
  4581                           fsr1l	equ	0xFE1
  4582                           
  4583                           	psect	bssBANK4
  4584  000400                     __pbssBANK4:
  4585                           	opt stack 0
  4586  000400                     _Global:
  4587                           	opt stack 0
  4588  000400                     	ds	136
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           postdec1	equ	0xFE5
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           
  4599                           	psect	bssBANK5
  4600  000500                     __pbssBANK5:
  4601                           	opt stack 0
  4602  000500                     _CommandString:
  4603                           	opt stack 0
  4604  000500                     	ds	255
  4605                           tblptru	equ	0xFF8
  4606                           tblptrh	equ	0xFF7
  4607                           tblptrl	equ	0xFF6
  4608                           tablat	equ	0xFF5
  4609                           postinc0	equ	0xFEE
  4610                           wreg	equ	0xFE8
  4611                           postdec1	equ	0xFE5
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           
  4615                           	psect	bssBANK6
  4616  000600                     __pbssBANK6:
  4617                           	opt stack 0
  4618  000600                     _ReceivedString:
  4619                           	opt stack 0
  4620  000600                     	ds	255
  4621                           tblptru	equ	0xFF8
  4622                           tblptrh	equ	0xFF7
  4623                           tblptrl	equ	0xFF6
  4624                           tablat	equ	0xFF5
  4625                           postinc0	equ	0xFEE
  4626                           wreg	equ	0xFE8
  4627                           postdec1	equ	0xFE5
  4628                           fsr1h	equ	0xFE2
  4629                           fsr1l	equ	0xFE1
  4630                           
  4631                           	psect	bssBANK7
  4632  000700                     __pbssBANK7:
  4633                           	opt stack 0
  4634  000700                     _IRRawCode:
  4635                           	opt stack 0
  4636  000700                     	ds	144
  4637                           tblptru	equ	0xFF8
  4638                           tblptrh	equ	0xFF7
  4639                           tblptrl	equ	0xFF6
  4640                           tablat	equ	0xFF5
  4641                           postinc0	equ	0xFEE
  4642                           wreg	equ	0xFE8
  4643                           postdec1	equ	0xFE5
  4644                           fsr1h	equ	0xFE2
  4645                           fsr1l	equ	0xFE1
  4646                           
  4647                           	psect	cstackBANK3
  4648  000300                     __pcstackBANK3:
  4649                           	opt stack 0
  4650  000300                     main@BluetoothString:
  4651                           	opt stack 0
  4652                           
  4653                           ; 255 bytes @ 0x0
  4654  000300                     	ds	255
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postdec1	equ	0xFE5
  4662                           fsr1h	equ	0xFE2
  4663                           fsr1l	equ	0xFE1
  4664                           
  4665                           	psect	cstackBANK2
  4666  000200                     __pcstackBANK2:
  4667                           	opt stack 0
  4668  000200                     UseBluetooth@buf:
  4669                           	opt stack 0
  4670                           
  4671                           ; 100 bytes @ 0x0
  4672  000200                     	ds	100
  4673  000264                     UseBluetooth@rfchannelSTR:
  4674                           	opt stack 0
  4675                           
  4676                           ; 10 bytes @ 0x64
  4677  000264                     	ds	10
  4678  00026E                     UseBluetooth@set:
  4679                           	opt stack 0
  4680                           
  4681                           ; 1 bytes @ 0x6E
  4682  00026E                     	ds	1
  4683  00026F                     UseBluetooth@tempNec:
  4684                           	opt stack 0
  4685                           
  4686                           ; 4 bytes @ 0x6F
  4687  00026F                     	ds	4
  4688  000273                     UseBluetooth@timeout:
  4689                           	opt stack 0
  4690                           
  4691                           ; 1 bytes @ 0x73
  4692  000273                     	ds	1
  4693  000274                     UseBluetooth@EmptyPlace:
  4694                           	opt stack 0
  4695                           
  4696                           ; 1 bytes @ 0x74
  4697  000274                     	ds	1
  4698  000275                     UseBluetooth@device:
  4699                           	opt stack 0
  4700                           
  4701                           ; 1 bytes @ 0x75
  4702  000275                     	ds	1
  4703  000276                     UseBluetooth@EnteredNEC:
  4704                           	opt stack 0
  4705                           
  4706                           ; 4 bytes @ 0x76
  4707  000276                     	ds	4
  4708  00027A                     UseBluetooth@ok:
  4709                           	opt stack 0
  4710                           
  4711                           ; 1 bytes @ 0x7A
  4712  00027A                     	ds	1
  4713  00027B                     UseBluetooth@tempRFArray:
  4714                           	opt stack 0
  4715                           
  4716                           ; 1 bytes @ 0x7B
  4717  00027B                     	ds	1
  4718  00027C                     UseBluetooth@rfconf:
  4719                           	opt stack 0
  4720                           
  4721                           ; 1 bytes @ 0x7C
  4722  00027C                     	ds	1
  4723  00027D                     UseBluetooth@NecAddress:
  4724                           	opt stack 0
  4725                           
  4726                           ; 1 bytes @ 0x7D
  4727  00027D                     	ds	1
  4728  00027E                     UseBluetooth@NecCommand:
  4729                           	opt stack 0
  4730                           
  4731                           ; 1 bytes @ 0x7E
  4732  00027E                     	ds	1
  4733  00027F                     UseBluetooth@temp:
  4734                           	opt stack 0
  4735                           
  4736                           ; 4 bytes @ 0x7F
  4737  00027F                     	ds	4
  4738  000283                     UseBluetooth@i:
  4739                           	opt stack 0
  4740                           
  4741                           ; 1 bytes @ 0x83
  4742  000283                     	ds	1
  4743                           tblptru	equ	0xFF8
  4744                           tblptrh	equ	0xFF7
  4745                           tblptrl	equ	0xFF6
  4746                           tablat	equ	0xFF5
  4747                           postinc0	equ	0xFEE
  4748                           wreg	equ	0xFE8
  4749                           postdec1	equ	0xFE5
  4750                           fsr1h	equ	0xFE2
  4751                           fsr1l	equ	0xFE1
  4752                           
  4753                           	psect	cstackBANK1
  4754  000100                     __pcstackBANK1:
  4755                           	opt stack 0
  4756  000100                     ?_SetEEPROM:
  4757                           	opt stack 0
  4758  000100                     SyncEEPROMToGlobal@k:
  4759                           	opt stack 0
  4760  000100                     _InitUART$3783:
  4761                           	opt stack 0
  4762  000100                     _sprintf$3787:
  4763                           	opt stack 0
  4764  000100                     StringAddEqual@temp:
  4765                           	opt stack 0
  4766  000100                     SetEEPROM@Temp:
  4767                           	opt stack 0
  4768                           
  4769                           ; 136 bytes @ 0x0
  4770  000100                     	ds	1
  4771  000101                     SyncEEPROMToGlobal@i:
  4772                           	opt stack 0
  4773                           
  4774                           ; 1 bytes @ 0x1
  4775  000101                     	ds	1
  4776  000102                     SyncEEPROMToGlobal@j:
  4777                           	opt stack 0
  4778                           
  4779                           ; 1 bytes @ 0x2
  4780  000102                     	ds	1
  4781  000103                     sprintf@idx:
  4782                           	opt stack 0
  4783  000103                     InitUART@spbrg:
  4784                           	opt stack 0
  4785  000103                     SyncEEPROMToGlobal@Temp:
  4786                           	opt stack 0
  4787                           
  4788                           ; 136 bytes @ 0x3
  4789  000103                     	ds	1
  4790  000104                     sprintf@cp:
  4791                           	opt stack 0
  4792                           
  4793                           ; 2 bytes @ 0x4
  4794  000104                     	ds	1
  4795  000105                     InitUART@config:
  4796                           	opt stack 0
  4797                           
  4798                           ; 1 bytes @ 0x5
  4799  000105                     	ds	1
  4800  000106                     sprintf@len:
  4801                           	opt stack 0
  4802  000106                     InitUART@temp:
  4803                           	opt stack 0
  4804                           
  4805                           ; 4 bytes @ 0x6
  4806  000106                     	ds	2
  4807  000108                     sprintf@ap:
  4808                           	opt stack 0
  4809                           
  4810                           ; 2 bytes @ 0x8
  4811  000108                     	ds	2
  4812  00010A                     sprintf@prec:
  4813                           	opt stack 0
  4814                           
  4815                           ; 2 bytes @ 0xA
  4816  00010A                     	ds	2
  4817  00010C                     sprintf@tmpval:
  4818                           	opt stack 0
  4819                           
  4820                           ; 4 bytes @ 0xC
  4821  00010C                     	ds	4
  4822  000110                     sprintf@exp:
  4823                           	opt stack 0
  4824                           
  4825                           ; 2 bytes @ 0x10
  4826  000110                     	ds	2
  4827  000112                     sprintf@val:
  4828                           	opt stack 0
  4829                           
  4830                           ; 4 bytes @ 0x12
  4831  000112                     	ds	4
  4832  000116                     sprintf@fval:
  4833                           	opt stack 0
  4834                           
  4835                           ; 3 bytes @ 0x16
  4836  000116                     	ds	3
  4837  000119                     sprintf@width:
  4838                           	opt stack 0
  4839                           
  4840                           ; 2 bytes @ 0x19
  4841  000119                     	ds	2
  4842  00011B                     sprintf@flag:
  4843                           	opt stack 0
  4844                           
  4845                           ; 2 bytes @ 0x1B
  4846  00011B                     	ds	2
  4847  00011D                     sprintf@c:
  4848                           	opt stack 0
  4849                           
  4850                           ; 1 bytes @ 0x1D
  4851  00011D                     	ds	1
  4852  00011E                     BluetoothInitialSetup@RFchannel:
  4853                           	opt stack 0
  4854                           
  4855                           ; 10 bytes @ 0x1E
  4856  00011E                     	ds	10
  4857  000128                     BluetoothInitialSetup@buf:
  4858                           	opt stack 0
  4859                           
  4860                           ; 50 bytes @ 0x28
  4861  000128                     	ds	50
  4862  00015A                     BluetoothInitialSetup@ok:
  4863                           	opt stack 0
  4864                           
  4865                           ; 1 bytes @ 0x5A
  4866  00015A                     	ds	10
  4867  000164                     StringAddEqual@firstnumber:
  4868                           	opt stack 0
  4869                           
  4870                           ; 1 bytes @ 0x64
  4871  000164                     	ds	1
  4872  000165                     StringAddEqual@i:
  4873                           	opt stack 0
  4874                           
  4875                           ; 1 bytes @ 0x65
  4876  000165                     	ds	1
  4877  000166                     StringAddEqual@j:
  4878                           	opt stack 0
  4879                           
  4880                           ; 1 bytes @ 0x66
  4881  000166                     	ds	34
  4882  000188                     SetEEPROM@burn:
  4883                           	opt stack 0
  4884                           
  4885                           ; 4 bytes @ 0x88
  4886  000188                     	ds	4
  4887  00018C                     UseBluetooth@String:
  4888                           	opt stack 0
  4889                           
  4890                           ; 2 bytes @ 0x8C
  4891  00018C                     	ds	2
  4892  00018E                     UseBluetooth@StringPos:
  4893                           	opt stack 0
  4894                           
  4895                           ; 1 bytes @ 0x8E
  4896  00018E                     	ds	1
  4897  00018F                     ??_UseBluetooth:
  4898                           
  4899                           ; 0 bytes @ 0x8F
  4900  00018F                     	ds	12
  4901  00019B                     main@IRtask:
  4902                           	opt stack 0
  4903                           
  4904                           ; 1 bytes @ 0x9B
  4905  00019B                     	ds	1
  4906  00019C                     main@Bluetoothtask:
  4907                           	opt stack 0
  4908                           
  4909                           ; 1 bytes @ 0x9C
  4910  00019C                     	ds	1
  4911  00019D                     main@BluetoothStringPos:
  4912                           	opt stack 0
  4913                           
  4914                           ; 1 bytes @ 0x9D
  4915  00019D                     	ds	1
  4916  00019E                     main@VoltageStatus:
  4917                           	opt stack 0
  4918                           
  4919                           ; 1 bytes @ 0x9E
  4920  00019E                     	ds	1
  4921  00019F                     main@i:
  4922                           	opt stack 0
  4923                           
  4924                           ; 1 bytes @ 0x9F
  4925  00019F                     	ds	1
  4926                           tblptru	equ	0xFF8
  4927                           tblptrh	equ	0xFF7
  4928                           tblptrl	equ	0xFF6
  4929                           tablat	equ	0xFF5
  4930                           postinc0	equ	0xFEE
  4931                           wreg	equ	0xFE8
  4932                           postdec1	equ	0xFE5
  4933                           fsr1h	equ	0xFE2
  4934                           fsr1l	equ	0xFE1
  4935                           
  4936                           	psect	cstackBANK0
  4937  000060                     __pcstackBANK0:
  4938                           	opt stack 0
  4939  000060                     IRrawToNEC@NECtemp:
  4940                           	opt stack 0
  4941                           
  4942                           ; 4 bytes @ 0x0
  4943  000060                     	ds	4
  4944  000064                     IRrawToNEC@first:
  4945                           	opt stack 0
  4946                           
  4947                           ; 1 bytes @ 0x4
  4948  000064                     	ds	1
  4949  000065                     IRrawToNEC@i:
  4950                           	opt stack 0
  4951                           
  4952                           ; 1 bytes @ 0x5
  4953  000065                     	ds	1
  4954  000066                     IRrawToNEC@StartBit:
  4955                           	opt stack 0
  4956                           
  4957                           ; 1 bytes @ 0x6
  4958  000066                     	ds	1
  4959  000067                     ??_high_isr:
  4960                           
  4961                           ; 0 bytes @ 0x7
  4962  000067                     	ds	18
  4963  000079                     ??_isdigit:
  4964  000079                     ??_Reverse_Byte:
  4965  000079                     ?_ReadEEPROM_1Byte:
  4966                           	opt stack 0
  4967  000079                     ?___awmod:
  4968                           	opt stack 0
  4969  000079                     ?___ftpack:
  4970                           	opt stack 0
  4971  000079                     ?___ftneg:
  4972                           	opt stack 0
  4973  000079                     ?__tdiv_to_l_:
  4974                           	opt stack 0
  4975  000079                     ?__div_to_l_:
  4976                           	opt stack 0
  4977  000079                     ?_Reverse_4Byte:
  4978                           	opt stack 0
  4979  000079                     ?___lmul:
  4980                           	opt stack 0
  4981  000079                     ?___lldiv:
  4982                           	opt stack 0
  4983  000079                     IsLetter@data:
  4984                           	opt stack 0
  4985  000079                     UARTchar@data:
  4986                           	opt stack 0
  4987  000079                     ReadUSART@data:
  4988                           	opt stack 0
  4989  000079                     cleanBuffer@data:
  4990                           	opt stack 0
  4991  000079                     cleanBuffer16bit@data:
  4992                           	opt stack 0
  4993  000079                     StringMatch@This:
  4994                           	opt stack 0
  4995  000079                     StringContains@This:
  4996                           	opt stack 0
  4997  000079                     lowercaseString@Input:
  4998                           	opt stack 0
  4999  000079                     lowercaseChar@Input:
  5000                           	opt stack 0
  5001  000079                     GetStringAfterComma@This:
  5002                           	opt stack 0
  5003  000079                     OpenUSART@spbrg:
  5004                           	opt stack 0
  5005  000079                     ReadEEPROM_1Byte@address:
  5006                           	opt stack 0
  5007  000079                     WriteEEPROM_1Byte@address:
  5008                           	opt stack 0
  5009  000079                     SendRF@Code:
  5010                           	opt stack 0
  5011  000079                     ___awmod@dividend:
  5012                           	opt stack 0
  5013  000079                     __div_to_l_@f1:
  5014                           	opt stack 0
  5015  000079                     ___ftpack@arg:
  5016                           	opt stack 0
  5017  000079                     __tdiv_to_l_@f1:
  5018                           	opt stack 0
  5019  000079                     ___ftge@ff1:
  5020                           	opt stack 0
  5021  000079                     ___ftneg@f1:
  5022                           	opt stack 0
  5023  000079                     delayUS@US:
  5024                           	opt stack 0
  5025  000079                     Reverse_4Byte@This:
  5026                           	opt stack 0
  5027  000079                     ___lmul@multiplier:
  5028                           	opt stack 0
  5029  000079                     ___lldiv@dividend:
  5030                           	opt stack 0
  5031                           
  5032                           ; 4 bytes @ 0x19
  5033  000079                     	ds	1
  5034  00007A                     _isdigit$3462:
  5035                           	opt stack 0
  5036  00007A                     UARTstring@data:
  5037                           	opt stack 0
  5038                           
  5039                           ; 2 bytes @ 0x1A
  5040  00007A                     	ds	1
  5041  00007B                     Reverse_Byte@temp:
  5042                           	opt stack 0
  5043  00007B                     GetStringAfterComma@CommaNumber:
  5044                           	opt stack 0
  5045  00007B                     OpenUSART@config:
  5046                           	opt stack 0
  5047  00007B                     ReadEEPROM_1Byte@GIEstatus:
  5048                           	opt stack 0
  5049  00007B                     WriteEEPROM_1Byte@data:
  5050                           	opt stack 0
  5051  00007B                     SendRF@Config:
  5052                           	opt stack 0
  5053  00007B                     isdigit@c:
  5054                           	opt stack 0
  5055  00007B                     cleanBuffer@count:
  5056                           	opt stack 0
  5057  00007B                     cleanBuffer16bit@count:
  5058                           	opt stack 0
  5059  00007B                     StringMatch@That:
  5060                           	opt stack 0
  5061  00007B                     StringContains@That:
  5062                           	opt stack 0
  5063  00007B                     ___awmod@divisor:
  5064                           	opt stack 0
  5065                           
  5066                           ; 2 bytes @ 0x1B
  5067  00007B                     	ds	1
  5068  00007C                     ?_GetMemoryChar:
  5069                           	opt stack 0
  5070  00007C                     ?_GetMemoryLong:
  5071                           	opt stack 0
  5072  00007C                     Reverse_Byte@This:
  5073                           	opt stack 0
  5074  00007C                     WriteEEPROM_1Byte@GIEstatus:
  5075                           	opt stack 0
  5076  00007C                     SendRF@size:
  5077                           	opt stack 0
  5078  00007C                     ___ftpack@exp:
  5079                           	opt stack 0
  5080  00007C                     StringMatchCaseInsensitive@This:
  5081                           	opt stack 0
  5082  00007C                     StringContainsCaseInsensitive@This:
  5083                           	opt stack 0
  5084  00007C                     GetStringAfterComma@result:
  5085                           	opt stack 0
  5086  00007C                     UARTstringCRLN@data:
  5087                           	opt stack 0
  5088  00007C                     UARTcommandMenu@Command:
  5089                           	opt stack 0
  5090  00007C                     __div_to_l_@f2:
  5091                           	opt stack 0
  5092  00007C                     __tdiv_to_l_@f2:
  5093                           	opt stack 0
  5094  00007C                     ___ftge@ff2:
  5095                           	opt stack 0
  5096                           
  5097                           ; 3 bytes @ 0x1C
  5098  00007C                     	ds	1
  5099  00007D                     ??_delayUS:
  5100  00007D                     ??_cleanBuffer:
  5101  00007D                     ??_cleanBuffer16bit:
  5102  00007D                     ??_StringMatch:
  5103  00007D                     ??_StringContains:
  5104  00007D                     ??_Reverse_4Byte:
  5105  00007D                     ?_EncodeNEC:
  5106                           	opt stack 0
  5107  00007D                     EncodeNEC@command:
  5108                           	opt stack 0
  5109  00007D                     SendRF@RepeatAmount:
  5110                           	opt stack 0
  5111  00007D                     ___awmod@counter:
  5112                           	opt stack 0
  5113  00007D                     ___ftpack@sign:
  5114                           	opt stack 0
  5115  00007D                     DecodeNEC@Nec:
  5116                           	opt stack 0
  5117  00007D                     ___lmul@multiplicand:
  5118                           	opt stack 0
  5119  00007D                     ___lldiv@divisor:
  5120                           	opt stack 0
  5121                           
  5122                           ; 4 bytes @ 0x1D
  5123  00007D                     	ds	1
  5124  00007E                     ??___ftpack:
  5125  00007E                     ??_SendRF:
  5126  00007E                     StringContains@begin:
  5127                           	opt stack 0
  5128  00007E                     ___awmod@sign:
  5129                           	opt stack 0
  5130  00007E                     StringMatchCaseInsensitive@That:
  5131                           	opt stack 0
  5132  00007E                     StringContainsCaseInsensitive@That:
  5133                           	opt stack 0
  5134  00007E                     UARTcommandMenu@Desc:
  5135                           	opt stack 0
  5136  00007E                     delayUS@i:
  5137                           	opt stack 0
  5138                           
  5139                           ; 4 bytes @ 0x1E
  5140  00007E                     	ds	1
  5141  00007F                     ??__tdiv_to_l_:
  5142  00007F                     ??___ftge:
  5143  00007F                     ?___awdiv:
  5144                           	opt stack 0
  5145  00007F                     GetStringAfterComma@tempCommaNumber:
  5146                           	opt stack 0
  5147  00007F                     ___awdiv@dividend:
  5148                           	opt stack 0
  5149  00007F                     __div_to_l_@quot:
  5150                           	opt stack 0
  5151                           
  5152                           ; 4 bytes @ 0x1F
  5153  00007F                     	ds	1
  5154  000080                     ??_GetMemoryLong:
  5155  000080                     ??_UARTcommandMenu:
  5156  000080                     cleanBuffer@i:
  5157                           	opt stack 0
  5158  000080                     cleanBuffer16bit@i:
  5159                           	opt stack 0
  5160  000080                     StringMatchCaseInsensitive@tempThis:
  5161                           	opt stack 0
  5162  000080                     StringContainsCaseInsensitive@begin:
  5163                           	opt stack 0
  5164  000080                     GetStringAfterComma@count:
  5165                           	opt stack 0
  5166  000080                     GetMemoryChar@AddressFirst:
  5167                           	opt stack 0
  5168  000080                     SendRF@i:
  5169                           	opt stack 0
  5170                           
  5171                           ; 1 bytes @ 0x20
  5172  000080                     	ds	1
  5173  000081                     ??_EncodeNEC:
  5174  000081                     ?___altoft:
  5175                           	opt stack 0
  5176  000081                     ?___lltoft:
  5177                           	opt stack 0
  5178  000081                     ?___lwtoft:
  5179                           	opt stack 0
  5180  000081                     StringMatchCaseInsensitive@tempThat:
  5181                           	opt stack 0
  5182  000081                     StringContainsCaseInsensitive@tempThis:
  5183                           	opt stack 0
  5184  000081                     GetMemoryChar@H:
  5185                           	opt stack 0
  5186  000081                     BufferCopy@from:
  5187                           	opt stack 0
  5188  000081                     DecodeNEC@address:
  5189                           	opt stack 0
  5190  000081                     SendRF_wait@Code:
  5191                           	opt stack 0
  5192  000081                     ___awdiv@divisor:
  5193                           	opt stack 0
  5194  000081                     ___lwtoft@c:
  5195                           	opt stack 0
  5196  000081                     ___lmul@product:
  5197                           	opt stack 0
  5198  000081                     ___altoft@c:
  5199                           	opt stack 0
  5200  000081                     ___lldiv@quotient:
  5201                           	opt stack 0
  5202  000081                     ___lltoft@c:
  5203                           	opt stack 0
  5204                           
  5205                           ; 4 bytes @ 0x21
  5206  000081                     	ds	1
  5207  000082                     StringContainsCaseInsensitive@tempThat:
  5208                           	opt stack 0
  5209  000082                     SetMemoryChar@AddressFirst:
  5210                           	opt stack 0
  5211  000082                     ReadCodeButtons@temp:
  5212                           	opt stack 0
  5213  000082                     EnterCommandMode@count:
  5214                           	opt stack 0
  5215  000082                     WaitForIRsignal@timeout:
  5216                           	opt stack 0
  5217  000082                     InternalADC_Read@ADCcounts:
  5218                           	opt stack 0
  5219  000082                     __tdiv_to_l_@quot:
  5220                           	opt stack 0
  5221                           
  5222                           ; 4 bytes @ 0x22
  5223  000082                     	ds	1
  5224  000083                     SetMemoryChar@Test:
  5225                           	opt stack 0
  5226  000083                     SendRF_wait@Config:
  5227                           	opt stack 0
  5228  000083                     ___awdiv@counter:
  5229                           	opt stack 0
  5230  000083                     __div_to_l_@cntr:
  5231                           	opt stack 0
  5232  000083                     BufferCopy@to:
  5233                           	opt stack 0
  5234  000083                     DecodeNEC@command:
  5235                           	opt stack 0
  5236                           
  5237                           ; 2 bytes @ 0x23
  5238  000083                     	ds	1
  5239  000084                     ??_InternalADC_Read:
  5240  000084                     ?___ftdiv:
  5241                           	opt stack 0
  5242  000084                     SetMemoryChar@Data:
  5243                           	opt stack 0
  5244  000084                     SendRF_wait@size:
  5245                           	opt stack 0
  5246  000084                     ___awdiv@sign:
  5247                           	opt stack 0
  5248  000084                     __div_to_l_@exp1:
  5249                           	opt stack 0
  5250  000084                     ___ftdiv@f1:
  5251                           	opt stack 0
  5252                           
  5253                           ; 3 bytes @ 0x24
  5254  000084                     	ds	1
  5255  000085                     ??_DecodeNEC:
  5256  000085                     ??___altoft:
  5257  000085                     ??___lltoft:
  5258  000085                     BufferCopy@count:
  5259                           	opt stack 0
  5260  000085                     UARTcommandMenu@i:
  5261                           	opt stack 0
  5262  000085                     SendRF_wait@amount:
  5263                           	opt stack 0
  5264  000085                     ___lldiv@counter:
  5265                           	opt stack 0
  5266  000085                     GetNumber@This:
  5267                           	opt stack 0
  5268  000085                     ___awdiv@quotient:
  5269                           	opt stack 0
  5270  000085                     Reverse_4Byte@temp:
  5271                           	opt stack 0
  5272                           
  5273                           ; 4 bytes @ 0x25
  5274  000085                     	ds	1
  5275  000086                     ?___llmod:
  5276                           	opt stack 0
  5277  000086                     BufferCopy@shift:
  5278                           	opt stack 0
  5279  000086                     UARTcommandMenu@place:
  5280                           	opt stack 0
  5281  000086                     InternalADC_Read@AnaChanSel:
  5282                           	opt stack 0
  5283  000086                     SendRF_Channel@channel:
  5284                           	opt stack 0
  5285  000086                     __tdiv_to_l_@cntr:
  5286                           	opt stack 0
  5287  000086                     ___llmod@dividend:
  5288                           	opt stack 0
  5289                           
  5290                           ; 4 bytes @ 0x26
  5291  000086                     	ds	1
  5292  000087                     ?___wmul:
  5293                           	opt stack 0
  5294  000087                     BufferCopy@i:
  5295                           	opt stack 0
  5296  000087                     GetNumber@CommaNumber:
  5297                           	opt stack 0
  5298  000087                     InternalADC_Read@channel:
  5299                           	opt stack 0
  5300  000087                     __tdiv_to_l_@exp1:
  5301                           	opt stack 0
  5302  000087                     ___wmul@multiplier:
  5303                           	opt stack 0
  5304  000087                     ___ftdiv@f2:
  5305                           	opt stack 0
  5306                           
  5307                           ; 3 bytes @ 0x27
  5308  000087                     	ds	1
  5309  000088                     GetNumber@result:
  5310                           	opt stack 0
  5311  000088                     StringAddEqual@Input:
  5312                           	opt stack 0
  5313                           
  5314                           ; 2 bytes @ 0x28
  5315  000088                     	ds	1
  5316  000089                     DecodeNEC@temp2:
  5317                           	opt stack 0
  5318  000089                     ___altoft@exp:
  5319                           	opt stack 0
  5320  000089                     ___lltoft@exp:
  5321                           	opt stack 0
  5322  000089                     ___wmul@multiplicand:
  5323                           	opt stack 0
  5324  000089                     SendNEC_bytes@code:
  5325                           	opt stack 0
  5326                           
  5327                           ; 4 bytes @ 0x29
  5328  000089                     	ds	1
  5329  00008A                     ??___ftdiv:
  5330  00008A                     ??_GetNumber:
  5331  00008A                     ??_StringAddEqual:
  5332  00008A                     DecodeNEC@temp3:
  5333                           	opt stack 0
  5334  00008A                     ___altoft@sign:
  5335                           	opt stack 0
  5336  00008A                     ___llmod@divisor:
  5337                           	opt stack 0
  5338                           
  5339                           ; 4 bytes @ 0x2A
  5340  00008A                     	ds	1
  5341  00008B                     DecodeNEC@temp1:
  5342                           	opt stack 0
  5343  00008B                     ___wmul@product:
  5344                           	opt stack 0
  5345                           
  5346                           ; 2 bytes @ 0x2B
  5347  00008B                     	ds	2
  5348  00008D                     SendNEC_bytes@RepeatAmount:
  5349                           	opt stack 0
  5350  00008D                     ___ftdiv@cntr:
  5351                           	opt stack 0
  5352                           
  5353                           ; 1 bytes @ 0x2D
  5354  00008D                     	ds	1
  5355  00008E                     ___llmod@counter:
  5356                           	opt stack 0
  5357  00008E                     ___ftdiv@f3:
  5358                           	opt stack 0
  5359  00008E                     SendNEC_wait@code:
  5360                           	opt stack 0
  5361                           
  5362                           ; 4 bytes @ 0x2E
  5363  00008E                     	ds	1
  5364  00008F                     GetNumber@tempCommaNumber:
  5365                           	opt stack 0
  5366                           
  5367                           ; 1 bytes @ 0x2F
  5368  00008F                     	ds	1
  5369  000090                     GetNumber@negative:
  5370                           	opt stack 0
  5371                           
  5372                           ; 1 bytes @ 0x30
  5373  000090                     	ds	1
  5374  000091                     GetNumber@count:
  5375                           	opt stack 0
  5376  000091                     ___ftdiv@exp:
  5377                           	opt stack 0
  5378                           
  5379                           ; 1 bytes @ 0x31
  5380  000091                     	ds	1
  5381  000092                     GetNumber@Hex:
  5382                           	opt stack 0
  5383  000092                     SendNEC_wait@RepeatAmount:
  5384                           	opt stack 0
  5385  000092                     ___ftdiv@sign:
  5386                           	opt stack 0
  5387                           
  5388                           ; 1 bytes @ 0x32
  5389  000092                     	ds	1
  5390  000093                     ?___ftmul:
  5391                           	opt stack 0
  5392  000093                     GetNumber@i:
  5393                           	opt stack 0
  5394  000093                     SendNEC_wait@toggle:
  5395                           	opt stack 0
  5396  000093                     ___ftmul@f1:
  5397                           	opt stack 0
  5398                           
  5399                           ; 3 bytes @ 0x33
  5400  000093                     	ds	1
  5401  000094                     GetNumber@tempThis:
  5402                           	opt stack 0
  5403  000094                     GetMemoryLong@temp:
  5404                           	opt stack 0
  5405                           
  5406                           ; 4 bytes @ 0x34
  5407  000094                     	ds	1
  5408  000095                     GetNumber@temp:
  5409                           	opt stack 0
  5410  000095                     EncodeNEC@temp1:
  5411                           	opt stack 0
  5412                           
  5413                           ; 4 bytes @ 0x35
  5414  000095                     	ds	1
  5415  000096                     ___ftmul@f2:
  5416                           	opt stack 0
  5417                           
  5418                           ; 3 bytes @ 0x36
  5419  000096                     	ds	2
  5420  000098                     GetMemoryLong@H:
  5421                           	opt stack 0
  5422                           
  5423                           ; 1 bytes @ 0x38
  5424  000098                     	ds	1
  5425  000099                     ??___ftmul:
  5426  000099                     GetMemoryLong@MH:
  5427                           	opt stack 0
  5428  000099                     EncodeNEC@temp2:
  5429                           	opt stack 0
  5430                           
  5431                           ; 4 bytes @ 0x39
  5432  000099                     	ds	1
  5433  00009A                     GetMemoryLong@ML:
  5434                           	opt stack 0
  5435                           
  5436                           ; 1 bytes @ 0x3A
  5437  00009A                     	ds	1
  5438  00009B                     GetMemoryLong@L:
  5439                           	opt stack 0
  5440                           
  5441                           ; 1 bytes @ 0x3B
  5442  00009B                     	ds	1
  5443  00009C                     GetMemoryLong@AddressFirst:
  5444                           	opt stack 0
  5445  00009C                     ___ftmul@exp:
  5446                           	opt stack 0
  5447                           
  5448                           ; 1 bytes @ 0x3C
  5449  00009C                     	ds	1
  5450  00009D                     GetEEPROM@Temp:
  5451                           	opt stack 0
  5452  00009D                     ___ftmul@f3_as_product:
  5453                           	opt stack 0
  5454  00009D                     SetMemoryLong@Data:
  5455                           	opt stack 0
  5456  00009D                     EncodeNEC@temp3:
  5457                           	opt stack 0
  5458                           
  5459                           ; 4 bytes @ 0x3D
  5460  00009D                     	ds	2
  5461  00009F                     ??_GetEEPROM:
  5462                           
  5463                           ; 0 bytes @ 0x3F
  5464  00009F                     	ds	1
  5465  0000A0                     ___ftmul@cntr:
  5466                           	opt stack 0
  5467                           
  5468                           ; 1 bytes @ 0x40
  5469  0000A0                     	ds	1
  5470  0000A1                     GetEEPROM@Arrayspot:
  5471                           	opt stack 0
  5472  0000A1                     SetMemoryLong@AddressFirst:
  5473                           	opt stack 0
  5474  0000A1                     ___ftmul@sign:
  5475                           	opt stack 0
  5476  0000A1                     EncodeNEC@temp4:
  5477                           	opt stack 0
  5478                           
  5479                           ; 4 bytes @ 0x41
  5480  0000A1                     	ds	1
  5481  0000A2                     ??_SetMemoryLong:
  5482  0000A2                     ?_ReadVoltage:
  5483                           	opt stack 0
  5484  0000A2                     ?_fround:
  5485                           	opt stack 0
  5486  0000A2                     ?_scale:
  5487                           	opt stack 0
  5488  0000A2                     GetEEPROM@k:
  5489                           	opt stack 0
  5490                           
  5491                           ; 1 bytes @ 0x42
  5492  0000A2                     	ds	1
  5493  0000A3                     GetEEPROM@i:
  5494                           	opt stack 0
  5495                           
  5496                           ; 1 bytes @ 0x43
  5497  0000A3                     	ds	1
  5498  0000A4                     GetEEPROM@j:
  5499                           	opt stack 0
  5500                           
  5501                           ; 1 bytes @ 0x44
  5502  0000A4                     	ds	1
  5503  0000A5                     ??_SyncEEPROMToGlobal:
  5504  0000A5                     EncodeNEC@address:
  5505                           	opt stack 0
  5506  0000A5                     ReadVoltage@voltage:
  5507                           	opt stack 0
  5508  0000A5                     _fround$3785:
  5509                           	opt stack 0
  5510  0000A5                     _scale$3786:
  5511                           	opt stack 0
  5512                           
  5513                           ; 3 bytes @ 0x45
  5514  0000A5                     	ds	1
  5515  0000A6                     SetMemoryLong@Test:
  5516                           	opt stack 0
  5517                           
  5518                           ; 4 bytes @ 0x46
  5519  0000A6                     	ds	2
  5520  0000A8                     scale@scl:
  5521                           	opt stack 0
  5522  0000A8                     ReadVoltage@temp:
  5523                           	opt stack 0
  5524  0000A8                     _fround$3784:
  5525                           	opt stack 0
  5526                           
  5527                           ; 3 bytes @ 0x48
  5528  0000A8                     	ds	2
  5529  0000AA                     SetMemoryLong@H:
  5530                           	opt stack 0
  5531                           
  5532                           ; 1 bytes @ 0x4A
  5533  0000AA                     	ds	1
  5534  0000AB                     SetMemoryLong@MH:
  5535                           	opt stack 0
  5536  0000AB                     fround@prec:
  5537                           	opt stack 0
  5538                           
  5539                           ; 1 bytes @ 0x4B
  5540  0000AB                     	ds	1
  5541  0000AC                     ?___ftadd:
  5542                           	opt stack 0
  5543  0000AC                     SetMemoryLong@ML:
  5544                           	opt stack 0
  5545  0000AC                     ___ftadd@f1:
  5546                           	opt stack 0
  5547                           
  5548                           ; 3 bytes @ 0x4C
  5549  0000AC                     	ds	1
  5550  0000AD                     SetMemoryLong@L:
  5551                           	opt stack 0
  5552                           
  5553                           ; 1 bytes @ 0x4D
  5554  0000AD                     	ds	1
  5555  0000AE                     ??_SetEEPROM:
  5556                           
  5557                           ; 0 bytes @ 0x4E
  5558  0000AE                     	ds	1
  5559  0000AF                     ___ftadd@f2:
  5560                           	opt stack 0
  5561                           
  5562                           ; 3 bytes @ 0x4F
  5563  0000AF                     	ds	1
  5564  0000B0                     SetEEPROM@fail:
  5565                           	opt stack 0
  5566                           
  5567                           ; 4 bytes @ 0x50
  5568  0000B0                     	ds	2
  5569  0000B2                     ??___ftadd:
  5570                           
  5571                           ; 0 bytes @ 0x52
  5572  0000B2                     	ds	2
  5573  0000B4                     SetEEPROM@temp:
  5574                           	opt stack 0
  5575                           
  5576                           ; 1 bytes @ 0x54
  5577  0000B4                     	ds	1
  5578  0000B5                     SetEEPROM@Arrayspot:
  5579                           	opt stack 0
  5580  0000B5                     ___ftadd@sign:
  5581                           	opt stack 0
  5582                           
  5583                           ; 1 bytes @ 0x55
  5584  0000B5                     	ds	1
  5585  0000B6                     SetEEPROM@k:
  5586                           	opt stack 0
  5587  0000B6                     ___ftadd@exp2:
  5588                           	opt stack 0
  5589                           
  5590                           ; 1 bytes @ 0x56
  5591  0000B6                     	ds	1
  5592  0000B7                     SetEEPROM@i:
  5593                           	opt stack 0
  5594  0000B7                     ___ftadd@exp1:
  5595                           	opt stack 0
  5596                           
  5597                           ; 1 bytes @ 0x57
  5598  0000B7                     	ds	1
  5599  0000B8                     ?___ftsub:
  5600                           	opt stack 0
  5601  0000B8                     ?___fttol:
  5602                           	opt stack 0
  5603  0000B8                     SetEEPROM@j:
  5604                           	opt stack 0
  5605  0000B8                     ___ftsub@f1:
  5606                           	opt stack 0
  5607  0000B8                     ___fttol@f1:
  5608                           	opt stack 0
  5609                           
  5610                           ; 3 bytes @ 0x58
  5611  0000B8                     	ds	1
  5612  0000B9                     ??_SetEEPROMdefault:
  5613  0000B9                     UseIRCode@Code:
  5614                           	opt stack 0
  5615                           
  5616                           ; 2 bytes @ 0x59
  5617  0000B9                     	ds	2
  5618  0000BB                     SetEEPROMdefault@k:
  5619                           	opt stack 0
  5620  0000BB                     ___ftsub@f2:
  5621                           	opt stack 0
  5622  0000BB                     UseIRCode@NEC:
  5623                           	opt stack 0
  5624                           
  5625                           ; 4 bytes @ 0x5B
  5626  0000BB                     	ds	1
  5627  0000BC                     ??___fttol:
  5628  0000BC                     SetEEPROMdefault@i:
  5629                           	opt stack 0
  5630                           
  5631                           ; 1 bytes @ 0x5C
  5632  0000BC                     	ds	1
  5633  0000BD                     SetEEPROMdefault@j:
  5634                           	opt stack 0
  5635                           
  5636                           ; 1 bytes @ 0x5D
  5637  0000BD                     	ds	1
  5638  0000BE                     
  5639                           ; 0 bytes @ 0x5E
  5640  0000BE                     	ds	1
  5641  0000BF                     ??_UseIRCode:
  5642                           
  5643                           ; 0 bytes @ 0x5F
  5644  0000BF                     	ds	2
  5645  0000C1                     ___fttol@sign1:
  5646                           	opt stack 0
  5647                           
  5648                           ; 1 bytes @ 0x61
  5649  0000C1                     	ds	1
  5650  0000C2                     UseIRCode@found:
  5651                           	opt stack 0
  5652  0000C2                     ___fttol@lval:
  5653                           	opt stack 0
  5654                           
  5655                           ; 4 bytes @ 0x62
  5656  0000C2                     	ds	1
  5657  0000C3                     UseIRCode@j:
  5658                           	opt stack 0
  5659                           
  5660                           ; 1 bytes @ 0x63
  5661  0000C3                     	ds	1
  5662  0000C4                     UseIRCode@i:
  5663                           	opt stack 0
  5664                           
  5665                           ; 1 bytes @ 0x64
  5666  0000C4                     	ds	2
  5667  0000C6                     ___fttol@exp1:
  5668                           	opt stack 0
  5669                           
  5670                           ; 1 bytes @ 0x66
  5671  0000C6                     	ds	1
  5672  0000C7                     ?_sprintf:
  5673                           	opt stack 0
  5674  0000C7                     ?_Round:
  5675                           	opt stack 0
  5676  0000C7                     sprintf@sp:
  5677                           	opt stack 0
  5678  0000C7                     Round@input:
  5679                           	opt stack 0
  5680                           
  5681                           ; 3 bytes @ 0x67
  5682  0000C7                     	ds	2
  5683  0000C9                     sprintf@f:
  5684                           	opt stack 0
  5685                           
  5686                           ; 2 bytes @ 0x69
  5687  0000C9                     	ds	1
  5688  0000CA                     Round@temp:
  5689                           	opt stack 0
  5690                           
  5691                           ; 4 bytes @ 0x6A
  5692  0000CA                     	ds	4
  5693  0000CE                     InitUART@Baud:
  5694                           	opt stack 0
  5695                           
  5696                           ; 4 bytes @ 0x6E
  5697  0000CE                     	ds	4
  5698  0000D2                     ??_InitUART:
  5699                           
  5700                           ; 0 bytes @ 0x72
  5701  0000D2                     	ds	3
  5702  0000D5                     ??_sprintf:
  5703                           
  5704                           ; 0 bytes @ 0x75
  5705  0000D5                     	ds	6
  5706  0000DB                     tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           postdec1	equ	0xFE5
  5713                           fsr1h	equ	0xFE2
  5714                           fsr1l	equ	0xFE1
  5715                           
  5716                           ; 0 bytes @ 0x7B
  5717                           
  5718                           	psect	cstackCOMRAM
  5719  000001                     __pcstackCOMRAM:
  5720                           	opt stack 0
  5721  000001                     IsCharacter@data:
  5722                           	opt stack 0
  5723  000001                     i1UARTchar@data:
  5724                           	opt stack 0
  5725  000001                     i1ReadUSART@data:
  5726                           	opt stack 0
  5727  000001                     i1cleanBuffer@data:
  5728                           	opt stack 0
  5729                           
  5730                           ; 2 bytes @ 0x0
  5731  000001                     	ds	1
  5732  000002                     EraseScreen@characters:
  5733                           	opt stack 0
  5734  000002                     i1UARTstring@data:
  5735                           	opt stack 0
  5736                           
  5737                           ; 2 bytes @ 0x1
  5738  000002                     	ds	1
  5739  000003                     EraseScreen@i:
  5740                           	opt stack 0
  5741  000003                     i1cleanBuffer@count:
  5742                           	opt stack 0
  5743                           
  5744                           ; 2 bytes @ 0x2
  5745  000003                     	ds	1
  5746  000004                     i1UARTstringCRLN@data:
  5747                           	opt stack 0
  5748                           
  5749                           ; 2 bytes @ 0x3
  5750  000004                     	ds	1
  5751  000005                     ??i1_cleanBuffer:
  5752                           
  5753                           ; 0 bytes @ 0x4
  5754  000005                     	ds	1
  5755  000006                     
  5756                           ; 0 bytes @ 0x5
  5757  000006                     	ds	2
  5758  000008                     i1cleanBuffer@i:
  5759                           	opt stack 0
  5760                           
  5761                           ; 1 bytes @ 0x7
  5762  000008                     	ds	1
  5763  000009                     ??_low_isr:
  5764                           
  5765                           ; 0 bytes @ 0x8
  5766  000009                     	ds	17
  5767  00001A                     low_isr@data:
  5768                           	opt stack 0
  5769                           
  5770                           ; 1 bytes @ 0x19
  5771  00001A                     	ds	1
  5772  00001B                     IRrawToNEC@Raw:
  5773                           	opt stack 0
  5774                           
  5775                           ; 2 bytes @ 0x1A
  5776  00001B                     	ds	2
  5777  00001D                     IRrawToNEC@NEC:
  5778                           	opt stack 0
  5779                           
  5780                           ; 2 bytes @ 0x1C
  5781  00001D                     	ds	2
  5782  00001F                     IRrawToNEC@Invert:
  5783                           	opt stack 0
  5784                           
  5785                           ; 1 bytes @ 0x1E
  5786  00001F                     	ds	1
  5787  000020                     ??_IRrawToNEC:
  5788                           
  5789                           ; 0 bytes @ 0x1F
  5790  000020                     	ds	2
  5791  000022                     high_isr@IRpin:
  5792                           	opt stack 0
  5793                           
  5794                           ; 1 bytes @ 0x21
  5795  000022                     	ds	1
  5796  000023                     high_isr@Time0:
  5797                           	opt stack 0
  5798                           
  5799                           ; 2 bytes @ 0x22
  5800  000023                     	ds	2
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           postdec1	equ	0xFE5
  5808                           fsr1h	equ	0xFE2
  5809                           fsr1l	equ	0xFE1
  5810                           
  5811 ;;
  5812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5813 ;;
  5814 ;; *************** function _main *****************
  5815 ;; Defined at:
  5816 ;;		line 69 in file "main.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  BluetoothStr  255    0[BANK3 ] unsigned char [255]
  5821 ;;  i               1  159[BANK1 ] unsigned char 
  5822 ;;  VoltageStatu    1  158[BANK1 ] unsigned char 
  5823 ;;  BluetoothStr    1  157[BANK1 ] unsigned char 
  5824 ;;  Bluetoothtas    1  156[BANK1 ] unsigned char 
  5825 ;;  IRtask          1  155[BANK1 ] unsigned char 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;		None               void
  5828 ;; Registers used:
  5829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;      Locals:         0       0       5       0     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Totals:         0       0       5       0     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;Total ram usage:      260 bytes
  5840 ;; Hardware stack levels required when called:   14
  5841 ;; This function calls:
  5842 ;;		_BufferCopy
  5843 ;;		_ClearUSART
  5844 ;;		_ConfigureOscillator
  5845 ;;		_InitApp
  5846 ;;		_Init_System
  5847 ;;		_ReadIRpin
  5848 ;;		_ReadVoltage
  5849 ;;		_UARTchar
  5850 ;;		_UARTstring
  5851 ;;		_UseBluetooth
  5852 ;;		_UseIRCode
  5853 ;;		___ftadd
  5854 ;;		___ftge
  5855 ;;		___ftsub
  5856 ;;		_cleanBuffer
  5857 ;;		_delayUS
  5858 ;; This function is called by:
  5859 ;;		Startup code after reset
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text0
  5864  0053C8                     __ptext0:
  5865                           	opt stack 0
  5866  0053C8                     _main:
  5867                           	opt stack 17
  5868                           
  5869                           ;main.c: 71: unsigned char i=0;
  5870                           
  5871                           ;incstack = 0
  5872  0053C8  0E00               	movlw	0
  5873  0053CA  0101               	movlb	1	; () banked
  5874  0053CC  6F9F               	movwf	main@i& (0+255),b
  5875                           
  5876                           ;main.c: 72: unsigned char IRtask = 0;
  5877  0053CE  0E00               	movlw	0
  5878  0053D0  0101               	movlb	1	; () banked
  5879  0053D2  6F9B               	movwf	main@IRtask& (0+255),b
  5880                           
  5881                           ;main.c: 73: unsigned char Bluetoothtask = 0;
  5882  0053D4  0E00               	movlw	0
  5883  0053D6  0101               	movlb	1	; () banked
  5884  0053D8  6F9C               	movwf	main@Bluetoothtask& (0+255),b
  5885                           
  5886                           ;main.c: 74: unsigned char VoltageStatus = 1;
  5887  0053DA  0E01               	movlw	1
  5888  0053DC  0101               	movlb	1	; () banked
  5889  0053DE  6F9E               	movwf	main@VoltageStatus& (0+255),b
  5890                           
  5891                           ;main.c: 75: unsigned char BluetoothString[255];
  5892                           ;main.c: 76: unsigned char BluetoothStringPos = 0;
  5893  0053E0  0E00               	movlw	0
  5894  0053E2  0101               	movlb	1	; () banked
  5895  0053E4  6F9D               	movwf	main@BluetoothStringPos& (0+255),b
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;main.c: 79: ConfigureOscillator();
  5899  0053E6  ECE9  F049         	call	_ConfigureOscillator	;wreg free
  5900                           
  5901                           ;main.c: 80: InitApp();
  5902  0053EA  EC2F  F047         	call	_InitApp	;wreg free
  5903                           
  5904                           ;main.c: 81: Init_System();
  5905  0053EE  ECB7  F043         	call	_Init_System	;wreg free
  5906                           
  5907                           ;main.c: 83: BatteryVoltage = ReadVoltage();
  5908  0053F2  EC99  F03F         	call	_ReadVoltage	;wreg free
  5909  0053F6  C0A2  F0DB         	movff	?_ReadVoltage,_BatteryVoltage
  5910  0053FA  C0A3  F0DC         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  5911  0053FE  C0A4  F0DD         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  5912                           
  5913                           ;main.c: 84: if(BatteryVoltage < 3.7 )
  5914  005402  C0DB  F079         	movff	_BatteryVoltage,___ftge@ff1
  5915  005406  C0DC  F07A         	movff	_BatteryVoltage+1,___ftge@ff1+1
  5916  00540A  C0DD  F07B         	movff	_BatteryVoltage+2,___ftge@ff1+2
  5917  00540E  0ECD               	movlw	205
  5918  005410  0100               	movlb	0	; () banked
  5919  005412  6F7C               	movwf	___ftge@ff2& (0+255),b
  5920  005414  0E6C               	movlw	108
  5921  005416  0100               	movlb	0	; () banked
  5922  005418  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
  5923  00541A  0E40               	movlw	64
  5924  00541C  0100               	movlb	0	; () banked
  5925  00541E  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
  5926  005420  EC6B  F03E         	call	___ftge	;wreg free
  5927  005424  0100               	movlb	0	; () banked
  5928  005426  B0D8               	btfsc	status,0,c
  5929  005428  D002               	goto	l16074
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;main.c: 85: {
  5933                           ;main.c: 86: VoltageStatus = 34;
  5934  00542A  0E22               	movlw	34
  5935  00542C  D015               	goto	L1
  5936  00542E                     l16074:
  5937                           
  5938                           ;main.c: 88: else if (BatteryVoltage > 30.0)
  5939  00542E  0E00               	movlw	0
  5940  005430  0100               	movlb	0	; () banked
  5941  005432  6F79               	movwf	___ftge@ff1& (0+255),b
  5942  005434  0EF0               	movlw	240
  5943  005436  0100               	movlb	0	; () banked
  5944  005438  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
  5945  00543A  0E41               	movlw	65
  5946  00543C  0100               	movlb	0	; () banked
  5947  00543E  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
  5948  005440  C0DB  F07C         	movff	_BatteryVoltage,___ftge@ff2
  5949  005444  C0DC  F07D         	movff	_BatteryVoltage+1,___ftge@ff2+1
  5950  005448  C0DD  F07E         	movff	_BatteryVoltage+2,___ftge@ff2+2
  5951  00544C  EC6B  F03E         	call	___ftge	;wreg free
  5952  005450  0100               	movlb	0	; () banked
  5953  005452  B0D8               	btfsc	status,0,c
  5954  005454  D004               	goto	l16078
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;main.c: 89: {
  5958                           ;main.c: 90: VoltageStatus = 98;
  5959  005456  0E62               	movlw	98
  5960  005458                     L1:
  5961  005458  0101               	movlb	1	; () banked
  5962  00545A  6F9E               	movwf	main@VoltageStatus& (0+255),b
  5963                           
  5964                           ; BSR set to: 1
  5965  00545C  D000               	goto	l16078
  5966  00545E                     l16078:
  5967                           
  5968                           ;main.c: 91: }
  5969                           ;main.c: 92: if(VoltageStatus == 1)
  5970  00545E  0101               	movlb	1	; () banked
  5971  005460  059E               	decf	main@VoltageStatus& (0+255),w,b
  5972  005462  A4D8               	btfss	status,2,c
  5973  005464  D027               	goto	l16100
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;main.c: 93: {
  5977                           ;main.c: 95: for(i =0;i<10;i++)
  5978  005466  0E00               	movlw	0
  5979  005468  0101               	movlb	1	; () banked
  5980  00546A  6F9F               	movwf	main@i& (0+255),b
  5981  00546C                     l16082:
  5982                           
  5983                           ; BSR set to: 1
  5984  00546C  0E09               	movlw	9
  5985  00546E  0101               	movlb	1	; () banked
  5986  005470  659F               	cpfsgt	main@i& (0+255),b
  5987  005472  D001               	goto	l16086
  5988                           
  5989                           ; BSR set to: 1
  5990  005474  D01D               	goto	l16098
  5991  005476                     l16086:
  5992                           
  5993                           ; BSR set to: 1
  5994                           ;main.c: 96: {
  5995                           ;main.c: 97: (LATC |= 0x02);
  5996  005476  828B               	bsf	3979,1,c	;volatile
  5997                           
  5998                           ;main.c: 98: (LATC &= ~0x04);
  5999  005478  948B               	bcf	3979,2,c	;volatile
  6000                           
  6001                           ; BSR set to: 1
  6002                           ;main.c: 99: delayUS(50000);
  6003  00547A  0E50               	movlw	80
  6004  00547C  0100               	movlb	0	; () banked
  6005  00547E  6F79               	movwf	delayUS@US& (0+255),b
  6006  005480  0EC3               	movlw	195
  6007  005482  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6008  005484  0E00               	movlw	0
  6009  005486  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6010  005488  0E00               	movlw	0
  6011  00548A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6012  00548C  EC6B  F046         	call	_delayUS	;wreg free
  6013                           
  6014                           ;main.c: 100: (LATC &= ~0x02);
  6015  005490  928B               	bcf	3979,1,c	;volatile
  6016                           
  6017                           ;main.c: 101: (LATC |= 0x04);
  6018  005492  848B               	bsf	3979,2,c	;volatile
  6019                           
  6020                           ;main.c: 102: delayUS(50000);
  6021  005494  0E50               	movlw	80
  6022  005496  0100               	movlb	0	; () banked
  6023  005498  6F79               	movwf	delayUS@US& (0+255),b
  6024  00549A  0EC3               	movlw	195
  6025  00549C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6026  00549E  0E00               	movlw	0
  6027  0054A0  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6028  0054A2  0E00               	movlw	0
  6029  0054A4  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6030  0054A6  EC6B  F046         	call	_delayUS	;wreg free
  6031  0054AA  0101               	movlb	1	; () banked
  6032  0054AC  2B9F               	incf	main@i& (0+255),f,b
  6033  0054AE  D7DE               	goto	l16082
  6034  0054B0                     l16098:
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;main.c: 103: }
  6038                           ;main.c: 104: (LATC &= ~0x04);
  6039  0054B0  948B               	bcf	3979,2,c	;volatile
  6040                           
  6041                           ;main.c: 105: }
  6042  0054B2  D024               	goto	l132
  6043  0054B4                     l16100:
  6044                           
  6045                           ; BSR set to: 1
  6046                           ;main.c: 106: else
  6047                           ;main.c: 107: {
  6048                           ;main.c: 108: for(i =0;i<10;i++)
  6049  0054B4  0E00               	movlw	0
  6050  0054B6  0101               	movlb	1	; () banked
  6051  0054B8  6F9F               	movwf	main@i& (0+255),b
  6052  0054BA                     l16102:
  6053                           
  6054                           ; BSR set to: 1
  6055  0054BA  0E09               	movlw	9
  6056  0054BC  0101               	movlb	1	; () banked
  6057  0054BE  659F               	cpfsgt	main@i& (0+255),b
  6058  0054C0  D001               	goto	l16106
  6059                           
  6060                           ; BSR set to: 1
  6061  0054C2  D01C               	goto	l132
  6062  0054C4                     l16106:
  6063                           
  6064                           ; BSR set to: 1
  6065                           ;main.c: 109: {
  6066                           ;main.c: 110: (LATC |= 0x02);
  6067  0054C4  828B               	bsf	3979,1,c	;volatile
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;main.c: 111: delayUS(100000);
  6071  0054C6  0EA0               	movlw	160
  6072  0054C8  0100               	movlb	0	; () banked
  6073  0054CA  6F79               	movwf	delayUS@US& (0+255),b
  6074  0054CC  0E86               	movlw	134
  6075  0054CE  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6076  0054D0  0E01               	movlw	1
  6077  0054D2  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6078  0054D4  0E00               	movlw	0
  6079  0054D6  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6080  0054D8  EC6B  F046         	call	_delayUS	;wreg free
  6081                           
  6082                           ;main.c: 112: (LATC &= ~0x02);
  6083  0054DC  928B               	bcf	3979,1,c	;volatile
  6084                           
  6085                           ;main.c: 113: delayUS(100000);
  6086  0054DE  0EA0               	movlw	160
  6087  0054E0  0100               	movlb	0	; () banked
  6088  0054E2  6F79               	movwf	delayUS@US& (0+255),b
  6089  0054E4  0E86               	movlw	134
  6090  0054E6  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6091  0054E8  0E01               	movlw	1
  6092  0054EA  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6093  0054EC  0E00               	movlw	0
  6094  0054EE  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6095  0054F0  EC6B  F046         	call	_delayUS	;wreg free
  6096  0054F4  0101               	movlb	1	; () banked
  6097  0054F6  2B9F               	incf	main@i& (0+255),f,b
  6098  0054F8  D7E0               	goto	l16102
  6099                           
  6100                           ; BSR set to: 1
  6101                           
  6102                           ; BSR set to: 1
  6103  0054FA  D000               	goto	l132
  6104  0054FC                     l132:
  6105                           
  6106                           ;main.c: 118: {
  6107                           ;main.c: 119: IRtask = IR_New_Code;
  6108  0054FC  C0E5  F19B         	movff	_IR_New_Code,main@IRtask
  6109                           
  6110                           ;main.c: 120: Bluetoothtask = NewReceivedString;
  6111  005500  C0DF  F19C         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  6112                           
  6113                           ;main.c: 121: BatteryVoltage = ReadVoltage();
  6114  005504  EC99  F03F         	call	_ReadVoltage	;wreg free
  6115  005508  C0A2  F0DB         	movff	?_ReadVoltage,_BatteryVoltage
  6116  00550C  C0A3  F0DC         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6117  005510  C0A4  F0DD         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6118                           
  6119                           ;main.c: 122: if(VoltageStatus == 34)
  6120  005514  0E22               	movlw	34
  6121  005516  0101               	movlb	1	; () banked
  6122  005518  199E               	xorwf	main@VoltageStatus& (0+255),w,b
  6123  00551A  A4D8               	btfss	status,2,c
  6124  00551C  D018               	goto	l16122
  6125                           
  6126                           ; BSR set to: 1
  6127                           ;main.c: 123: {
  6128                           ;main.c: 125: BatteryVoltage -= 0.5;
  6129  00551E  C0DB  F0B8         	movff	_BatteryVoltage,___ftsub@f1
  6130  005522  C0DC  F0B9         	movff	_BatteryVoltage+1,___ftsub@f1+1
  6131  005526  C0DD  F0BA         	movff	_BatteryVoltage+2,___ftsub@f1+2
  6132  00552A  0E00               	movlw	0
  6133  00552C  0100               	movlb	0	; () banked
  6134  00552E  6FBB               	movwf	___ftsub@f2& (0+255),b
  6135  005530  0E00               	movlw	0
  6136  005532  0100               	movlb	0	; () banked
  6137  005534  6FBC               	movwf	(___ftsub@f2+1)& (0+255),b
  6138  005536  0E3F               	movlw	63
  6139  005538  0100               	movlb	0	; () banked
  6140  00553A  6FBD               	movwf	(___ftsub@f2+2)& (0+255),b
  6141  00553C  ECC0  F046         	call	___ftsub	;wreg free
  6142  005540  C0B8  F0DB         	movff	?___ftsub,_BatteryVoltage
  6143  005544  C0B9  F0DC         	movff	?___ftsub+1,_BatteryVoltage+1
  6144  005548  C0BA  F0DD         	movff	?___ftsub+2,_BatteryVoltage+2
  6145                           
  6146                           ;main.c: 126: }
  6147  00554C  D01D               	goto	l134
  6148  00554E                     l16122:
  6149                           
  6150                           ;main.c: 127: else if(VoltageStatus == 98)
  6151  00554E  0E62               	movlw	98
  6152  005550  0101               	movlb	1	; () banked
  6153  005552  199E               	xorwf	main@VoltageStatus& (0+255),w,b
  6154  005554  A4D8               	btfss	status,2,c
  6155  005556  D018               	goto	l134
  6156                           
  6157                           ; BSR set to: 1
  6158                           ;main.c: 128: {
  6159                           ;main.c: 130: BatteryVoltage += 0.5;
  6160  005558  C0DB  F0AC         	movff	_BatteryVoltage,___ftadd@f1
  6161  00555C  C0DC  F0AD         	movff	_BatteryVoltage+1,___ftadd@f1+1
  6162  005560  C0DD  F0AE         	movff	_BatteryVoltage+2,___ftadd@f1+2
  6163  005564  0E00               	movlw	0
  6164  005566  0100               	movlb	0	; () banked
  6165  005568  6FAF               	movwf	___ftadd@f2& (0+255),b
  6166  00556A  0E00               	movlw	0
  6167  00556C  0100               	movlb	0	; () banked
  6168  00556E  6FB0               	movwf	(___ftadd@f2+1)& (0+255),b
  6169  005570  0E3F               	movlw	63
  6170  005572  0100               	movlb	0	; () banked
  6171  005574  6FB1               	movwf	(___ftadd@f2+2)& (0+255),b
  6172  005576  EC1E  F02D         	call	___ftadd	;wreg free
  6173  00557A  C0AC  F0DB         	movff	?___ftadd,_BatteryVoltage
  6174  00557E  C0AD  F0DC         	movff	?___ftadd+1,_BatteryVoltage+1
  6175  005582  C0AE  F0DD         	movff	?___ftadd+2,_BatteryVoltage+2
  6176  005586  D000               	goto	l134
  6177  005588                     l134:
  6178                           
  6179                           ;main.c: 131: }
  6180                           ;main.c: 133: if(BatteryVoltage < 3.7 )
  6181  005588  C0DB  F079         	movff	_BatteryVoltage,___ftge@ff1
  6182  00558C  C0DC  F07A         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6183  005590  C0DD  F07B         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6184  005594  0ECD               	movlw	205
  6185  005596  0100               	movlb	0	; () banked
  6186  005598  6F7C               	movwf	___ftge@ff2& (0+255),b
  6187  00559A  0E6C               	movlw	108
  6188  00559C  0100               	movlb	0	; () banked
  6189  00559E  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
  6190  0055A0  0E40               	movlw	64
  6191  0055A2  0100               	movlb	0	; () banked
  6192  0055A4  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
  6193  0055A6  EC6B  F03E         	call	___ftge	;wreg free
  6194  0055AA  0100               	movlb	0	; () banked
  6195  0055AC  B0D8               	btfsc	status,0,c
  6196  0055AE  D002               	goto	l16128
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;main.c: 134: {
  6200                           ;main.c: 135: VoltageStatus = 34;
  6201  0055B0  0E22               	movlw	34
  6202  0055B2  D017               	goto	L3
  6203  0055B4                     l16128:
  6204                           
  6205                           ;main.c: 137: else if(BatteryVoltage > 30.0)
  6206  0055B4  0E00               	movlw	0
  6207  0055B6  0100               	movlb	0	; () banked
  6208  0055B8  6F79               	movwf	___ftge@ff1& (0+255),b
  6209  0055BA  0EF0               	movlw	240
  6210  0055BC  0100               	movlb	0	; () banked
  6211  0055BE  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
  6212  0055C0  0E41               	movlw	65
  6213  0055C2  0100               	movlb	0	; () banked
  6214  0055C4  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
  6215  0055C6  C0DB  F07C         	movff	_BatteryVoltage,___ftge@ff2
  6216  0055CA  C0DC  F07D         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6217  0055CE  C0DD  F07E         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6218  0055D2  EC6B  F03E         	call	___ftge	;wreg free
  6219  0055D6  0100               	movlb	0	; () banked
  6220  0055D8  B0D8               	btfsc	status,0,c
  6221  0055DA  D002               	goto	l16132
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;main.c: 138: {
  6225                           ;main.c: 139: VoltageStatus = 98;
  6226  0055DC  0E62               	movlw	98
  6227  0055DE  D001               	goto	L3
  6228  0055E0                     l16132:
  6229                           
  6230                           ;main.c: 141: else
  6231                           ;main.c: 142: {
  6232                           ;main.c: 143: VoltageStatus = 1;
  6233  0055E0  0E01               	movlw	1
  6234  0055E2                     L3:
  6235  0055E2  0101               	movlb	1	; () banked
  6236  0055E4  6F9E               	movwf	main@VoltageStatus& (0+255),b
  6237  0055E6  D000               	goto	l137
  6238  0055E8                     l137:
  6239                           
  6240                           ; BSR set to: 1
  6241                           ;main.c: 144: }
  6242                           ;main.c: 146: if(IRtask && IR_NEC)
  6243  0055E8  0101               	movlb	1	; () banked
  6244  0055EA  519B               	movf	main@IRtask& (0+255),w,b
  6245  0055EC  0101               	movlb	1	; () banked
  6246  0055EE  B4D8               	btfsc	status,2,c
  6247  0055F0  D01B               	goto	l16138
  6248                           
  6249                           ; BSR set to: 1
  6250  0055F2  0100               	movlb	0	; () banked
  6251  0055F4  51E1               	movf	_IR_NEC& (0+255),w,b
  6252  0055F6  0100               	movlb	0	; () banked
  6253  0055F8  11E2               	iorwf	(_IR_NEC+1)& (0+255),w,b
  6254  0055FA  0100               	movlb	0	; () banked
  6255  0055FC  11E3               	iorwf	(_IR_NEC+2)& (0+255),w,b
  6256  0055FE  0100               	movlb	0	; () banked
  6257  005600  11E4               	iorwf	(_IR_NEC+3)& (0+255),w,b
  6258  005602  B4D8               	btfsc	status,2,c
  6259  005604  D011               	goto	l16138
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;main.c: 147: {
  6263                           ;main.c: 148: UseIRCode(&IR_New_Code, IR_NEC);
  6264  005606  0EE5               	movlw	low _IR_New_Code
  6265  005608  0100               	movlb	0	; () banked
  6266  00560A  6FB9               	movwf	UseIRCode@Code& (0+255),b
  6267  00560C  0E00               	movlw	high _IR_New_Code
  6268  00560E  0100               	movlb	0	; () banked
  6269  005610  6FBA               	movwf	(UseIRCode@Code+1)& (0+255),b
  6270  005612  C0E1  F0BB         	movff	_IR_NEC,UseIRCode@NEC
  6271  005616  C0E2  F0BC         	movff	_IR_NEC+1,UseIRCode@NEC+1
  6272  00561A  C0E3  F0BD         	movff	_IR_NEC+2,UseIRCode@NEC+2
  6273  00561E  C0E4  F0BE         	movff	_IR_NEC+3,UseIRCode@NEC+3
  6274  005622  EC5D  F02E         	call	_UseIRCode	;wreg free
  6275  005626  D000               	goto	l16138
  6276  005628                     l16138:
  6277                           
  6278                           ;main.c: 149: }
  6279                           ;main.c: 151: if(Bluetoothtask >= 1)
  6280  005628  0101               	movlb	1	; () banked
  6281  00562A  519C               	movf	main@Bluetoothtask& (0+255),w,b
  6282  00562C  0101               	movlb	1	; () banked
  6283  00562E  B4D8               	btfsc	status,2,c
  6284  005630  D05B               	goto	l16176
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;main.c: 152: {
  6288                           ;main.c: 153: cleanBuffer(BluetoothString, 255);
  6289  005632  0E00               	movlw	low main@BluetoothString
  6290  005634  0100               	movlb	0	; () banked
  6291  005636  6F79               	movwf	cleanBuffer@data& (0+255),b
  6292  005638  0E03               	movlw	high main@BluetoothString
  6293  00563A  0100               	movlb	0	; () banked
  6294  00563C  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  6295  00563E  0E00               	movlw	0
  6296  005640  0100               	movlb	0	; () banked
  6297  005642  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  6298  005644  697B               	setf	cleanBuffer@count& (0+255),b
  6299  005646  ECBA  F045         	call	_cleanBuffer	;wreg free
  6300                           
  6301                           ;main.c: 154: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  6302  00564A  0E00               	movlw	low _ReceivedString
  6303  00564C  0100               	movlb	0	; () banked
  6304  00564E  6F81               	movwf	BufferCopy@from& (0+255),b
  6305  005650  0E06               	movlw	high _ReceivedString
  6306  005652  0100               	movlb	0	; () banked
  6307  005654  6F82               	movwf	(BufferCopy@from+1)& (0+255),b
  6308  005656  0E00               	movlw	low main@BluetoothString
  6309  005658  0100               	movlb	0	; () banked
  6310  00565A  6F83               	movwf	BufferCopy@to& (0+255),b
  6311  00565C  0E03               	movlw	high main@BluetoothString
  6312  00565E  0100               	movlb	0	; () banked
  6313  005660  6F84               	movwf	(BufferCopy@to+1)& (0+255),b
  6314  005662  C0E0  F085         	movff	_ReceivedStringPos,BufferCopy@count
  6315  005666  0E00               	movlw	0
  6316  005668  0100               	movlb	0	; () banked
  6317  00566A  6F86               	movwf	BufferCopy@shift& (0+255),b
  6318  00566C  EC2F  F043         	call	_BufferCopy	;wreg free
  6319                           
  6320                           ;main.c: 155: BluetoothStringPos = ReceivedStringPos;
  6321  005670  C0E0  F19D         	movff	_ReceivedStringPos,main@BluetoothStringPos
  6322                           
  6323                           ;main.c: 156: cleanBuffer(ReceivedString, ReceivedStringPos);
  6324  005674  0E00               	movlw	low _ReceivedString
  6325  005676  0100               	movlb	0	; () banked
  6326  005678  6F79               	movwf	cleanBuffer@data& (0+255),b
  6327  00567A  0E06               	movlw	high _ReceivedString
  6328  00567C  0100               	movlb	0	; () banked
  6329  00567E  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  6330  005680  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
  6331  005684  0100               	movlb	0	; () banked
  6332  005686  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
  6333  005688  ECBA  F045         	call	_cleanBuffer	;wreg free
  6334                           
  6335                           ;main.c: 157: ReceivedStringPos = 0;
  6336  00568C  0E00               	movlw	0
  6337  00568E  0100               	movlb	0	; () banked
  6338  005690  6FE0               	movwf	_ReceivedStringPos& (0+255),b
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;main.c: 158: NewReceivedString = 0;
  6342  005692  0E00               	movlw	0
  6343  005694  0100               	movlb	0	; () banked
  6344  005696  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;main.c: 159: UseBluetooth(&BluetoothString, BluetoothStringPos);
  6348  005698  0E00               	movlw	low main@BluetoothString
  6349  00569A  0101               	movlb	1	; () banked
  6350  00569C  6F8C               	movwf	UseBluetooth@String& (0+255),b
  6351  00569E  0E03               	movlw	high main@BluetoothString
  6352  0056A0  0101               	movlb	1	; () banked
  6353  0056A2  6F8D               	movwf	(UseBluetooth@String+1)& (0+255),b
  6354  0056A4  C19D  F18E         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  6355  0056A8  ECFB  F000         	call	_UseBluetooth	;wreg free
  6356                           
  6357                           ;main.c: 160: UARTstring(CRLN);
  6358  0056AC  0EFE               	movlw	low _CRLN
  6359  0056AE  0100               	movlb	0	; () banked
  6360  0056B0  6F7A               	movwf	UARTstring@data& (0+255),b
  6361  0056B2  0EF3               	movlw	high _CRLN
  6362  0056B4  0100               	movlb	0	; () banked
  6363  0056B6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  6364  0056B8  ECE7  F045         	call	_UARTstring	;wreg free
  6365                           
  6366                           ;main.c: 161: UARTchar('>');
  6367  0056BC  0E3E               	movlw	62
  6368  0056BE  ECF0  F048         	call	_UARTchar
  6369                           
  6370                           ;main.c: 162: if(IR_New_Code)
  6371  0056C2  0100               	movlb	0	; () banked
  6372  0056C4  51E5               	movf	_IR_New_Code& (0+255),w,b
  6373  0056C6  B4D8               	btfsc	status,2,c
  6374  0056C8  D004               	goto	l16162
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;main.c: 163: {
  6378                           ;main.c: 164: IR_New_Code = 0;
  6379  0056CA  0E00               	movlw	0
  6380  0056CC  0100               	movlb	0	; () banked
  6381  0056CE  6FE5               	movwf	_IR_New_Code& (0+255),b
  6382  0056D0  D000               	goto	l16162
  6383  0056D2                     l16162:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;main.c: 165: }
  6387                           ;main.c: 167: IRpinOLD = ReadIRpin();
  6388  0056D2  ECA3  F049         	call	_ReadIRpin	;wreg free
  6389  0056D6  6E31               	movwf	_IRpinOLD,c
  6390                           
  6391                           ;main.c: 168: INTCONbits.RBIF = 0;
  6392  0056D8  90F2               	bcf	intcon,0,c	;volatile
  6393                           
  6394                           ;main.c: 169: (IOCBbits.IOCB4 = 1);
  6395  0056DA  887D               	bsf	3965,4,c	;volatile
  6396                           
  6397                           ;main.c: 170: INTCONbits.RBIE = 1;
  6398  0056DC  86F2               	bsf	intcon,3,c	;volatile
  6399                           
  6400                           ;main.c: 171: ClearUSART();
  6401  0056DE  EC8E  F049         	call	_ClearUSART	;wreg free
  6402                           
  6403                           ;main.c: 172: PIR1bits.RCIF = 0;
  6404  0056E2  9A9E               	bcf	3998,5,c	;volatile
  6405                           
  6406                           ;main.c: 173: PIE1bits.RCIE = 1;
  6407  0056E4  8A9D               	bsf	3997,5,c	;volatile
  6408  0056E6  D000               	goto	l16176
  6409  0056E8                     l16176:
  6410                           
  6411                           ;main.c: 174: }
  6412                           ;main.c: 176: if(IRtimeout < 5000)
  6413  0056E8  0102               	movlb	2	; () banked
  6414  0056EA  5187               	movf	(_IRtimeout+3)& (0+255),w,b
  6415  0056EC  0102               	movlb	2	; () banked
  6416  0056EE  1186               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6417  0056F0  E110               	bnz	l16180
  6418  0056F2  0E88               	movlw	136
  6419  0056F4  0102               	movlb	2	; () banked
  6420  0056F6  5D84               	subwf	_IRtimeout& (0+255),w,b
  6421  0056F8  0E13               	movlw	19
  6422  0056FA  0102               	movlb	2	; () banked
  6423  0056FC  5985               	subwfb	(_IRtimeout+1)& (0+255),w,b
  6424  0056FE  B0D8               	btfsc	status,0,c
  6425  005700  D008               	goto	l16180
  6426                           
  6427                           ; BSR set to: 2
  6428                           ;main.c: 177: {
  6429                           ;main.c: 178: IRtimeout++;
  6430  005702  0E01               	movlw	1
  6431  005704  0102               	movlb	2	; () banked
  6432  005706  2784               	addwf	_IRtimeout& (0+255),f,b
  6433  005708  0E00               	movlw	0
  6434  00570A  2385               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6435  00570C  2386               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6436  00570E  2387               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6437                           
  6438                           ;main.c: 179: }
  6439  005710  D6F5               	goto	l132
  6440  005712                     l16180:
  6441                           
  6442                           ; BSR set to: 2
  6443                           ;main.c: 180: else if(IRtimeout == 5000)
  6444  005712  0E88               	movlw	136
  6445  005714  0102               	movlb	2	; () banked
  6446  005716  1984               	xorwf	_IRtimeout& (0+255),w,b
  6447  005718  E108               	bnz	u20331
  6448  00571A  0E13               	movlw	19
  6449  00571C  0102               	movlb	2	; () banked
  6450  00571E  1985               	xorwf	(_IRtimeout+1)& (0+255),w,b
  6451  005720  0102               	movlb	2	; () banked
  6452  005722  1186               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6453  005724  0102               	movlb	2	; () banked
  6454  005726  1187               	iorwf	(_IRtimeout+3)& (0+255),w,b
  6455  005728  A4D8               	btfss	status,2,c
  6456  00572A                     u20331:
  6457  00572A  D6E8               	goto	l132
  6458                           
  6459                           ; BSR set to: 2
  6460                           ;main.c: 181: {
  6461                           ;main.c: 182: IRtimeout++;
  6462  00572C  0E01               	movlw	1
  6463  00572E  0102               	movlb	2	; () banked
  6464  005730  2784               	addwf	_IRtimeout& (0+255),f,b
  6465  005732  0E00               	movlw	0
  6466  005734  2385               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6467  005736  2386               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6468  005738  2387               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6469                           
  6470                           ; BSR set to: 2
  6471                           ;main.c: 183: IR_NEC = 0;
  6472  00573A  0E00               	movlw	0
  6473  00573C  0100               	movlb	0	; () banked
  6474  00573E  6FE1               	movwf	_IR_NEC& (0+255),b
  6475  005740  0E00               	movlw	0
  6476  005742  6FE2               	movwf	(_IR_NEC+1)& (0+255),b
  6477  005744  0E00               	movlw	0
  6478  005746  6FE3               	movwf	(_IR_NEC+2)& (0+255),b
  6479  005748  0E00               	movlw	0
  6480  00574A  6FE4               	movwf	(_IR_NEC+3)& (0+255),b
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;main.c: 184: IR_New_Code = 0;
  6484  00574C  0E00               	movlw	0
  6485  00574E  0100               	movlb	0	; () banked
  6486  005750  6FE5               	movwf	_IR_New_Code& (0+255),b
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;main.c: 185: IRpinOLD = ReadIRpin();
  6490  005752  ECA3  F049         	call	_ReadIRpin	;wreg free
  6491  005756  6E31               	movwf	_IRpinOLD,c
  6492                           
  6493                           ;main.c: 186: INTCONbits.RBIF = 0;
  6494  005758  90F2               	bcf	intcon,0,c	;volatile
  6495                           
  6496                           ;main.c: 187: (IOCBbits.IOCB4 = 1);
  6497  00575A  887D               	bsf	3965,4,c	;volatile
  6498                           
  6499                           ;main.c: 188: INTCONbits.RBIE = 1;
  6500  00575C  86F2               	bsf	intcon,3,c	;volatile
  6501  00575E  D6CE               	goto	l132
  6502  005760  EFF9  F000         	goto	start
  6503  005764                     __end_of_main:
  6504                           	opt stack 0
  6505                           tblptru	equ	0xFF8
  6506                           tblptrh	equ	0xFF7
  6507                           tblptrl	equ	0xFF6
  6508                           tablat	equ	0xFF5
  6509                           intcon	equ	0xFF2
  6510                           postinc0	equ	0xFEE
  6511                           wreg	equ	0xFE8
  6512                           postdec1	equ	0xFE5
  6513                           fsr1h	equ	0xFE2
  6514                           fsr1l	equ	0xFE1
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function _UseIRCode *****************
  6518 ;; Defined at:
  6519 ;;		line 279 in file "IR.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  Code            2   89[BANK0 ] PTR unsigned char 
  6522 ;;		 -> IR_New_Code(1), 
  6523 ;;  NEC             4   91[BANK0 ] unsigned long 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  i               1  100[BANK0 ] unsigned char 
  6526 ;;  j               1   99[BANK0 ] unsigned char 
  6527 ;;  found           1   98[BANK0 ] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;		None               void
  6530 ;; Registers used:
  6531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6537 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;Total ram usage:       12 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:   11
  6544 ;; This function calls:
  6545 ;;		_DecodeNEC
  6546 ;;		_LEDTimerON
  6547 ;;		_ReadCodeButtons
  6548 ;;		_ReadIRpin
  6549 ;;		_ReadPushButton
  6550 ;;		_SendRF_Channel
  6551 ;;		_SyncGlobalToEEPROM
  6552 ;;		_delayUS
  6553 ;; This function is called by:
  6554 ;;		_main
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text1
  6559  005CBA                     __ptext1:
  6560                           	opt stack 0
  6561  005CBA                     _UseIRCode:
  6562                           	opt stack 19
  6563                           
  6564                           ;IR.c: 281: unsigned char i,j;
  6565                           ;IR.c: 282: unsigned char found = 0;
  6566                           
  6567                           ;incstack = 0
  6568  005CBA  0E00               	movlw	0
  6569  005CBC  0100               	movlb	0	; () banked
  6570  005CBE  6FC2               	movwf	UseIRCode@found& (0+255),b
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;IR.c: 284: LEDTimerON();
  6574  005CC0  EC66  F049         	call	_LEDTimerON	;wreg free
  6575                           
  6576                           ;IR.c: 285: if(*Code == 2 || *Code == 1)
  6577  005CC4  C0B9  FFD9         	movff	UseIRCode@Code,fsr2l
  6578  005CC8  C0BA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6579  005CCC  0E02               	movlw	2
  6580  005CCE  18DE               	xorwf	postinc2,w,c
  6581  005CD0  B4D8               	btfsc	status,2,c
  6582  005CD2  D007               	goto	l15128
  6583  005CD4  C0B9  FFD9         	movff	UseIRCode@Code,fsr2l
  6584  005CD8  C0BA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6585  005CDC  04DE               	decf	postinc2,w,c
  6586  005CDE  A4D8               	btfss	status,2,c
  6587  005CE0  D114               	goto	l15214
  6588  005CE2                     l15128:
  6589                           
  6590                           ;IR.c: 286: {
  6591                           ;IR.c: 287: DecodeNEC(NEC, &IRaddress, &IRcommand);
  6592  005CE2  C0BB  F07D         	movff	UseIRCode@NEC,DecodeNEC@Nec
  6593  005CE6  C0BC  F07E         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  6594  005CEA  C0BD  F07F         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  6595  005CEE  C0BE  F080         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  6596  005CF2  0EEA               	movlw	low _IRaddress
  6597  005CF4  0100               	movlb	0	; () banked
  6598  005CF6  6F81               	movwf	DecodeNEC@address& (0+255),b
  6599  005CF8  0E01               	movlw	high _IRaddress
  6600  005CFA  0100               	movlb	0	; () banked
  6601  005CFC  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  6602  005CFE  0EEB               	movlw	low _IRcommand
  6603  005D00  0100               	movlb	0	; () banked
  6604  005D02  6F83               	movwf	DecodeNEC@command& (0+255),b
  6605  005D04  0E01               	movlw	high _IRcommand
  6606  005D06  0100               	movlb	0	; () banked
  6607  005D08  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  6608  005D0A  EC03  F041         	call	_DecodeNEC	;wreg free
  6609                           
  6610                           ;IR.c: 288: if(ReadPushButton())
  6611  005D0E  EC80  F049         	call	_ReadPushButton	;wreg free
  6612  005D12  0900               	iorlw	0
  6613  005D14  B4D8               	btfsc	status,2,c
  6614  005D16  D055               	goto	l15168
  6615                           
  6616                           ;IR.c: 289: {
  6617                           ;IR.c: 290: Global.SWNECcode = NEC;
  6618  005D18  C0BB  F401         	movff	UseIRCode@NEC,_Global+1
  6619  005D1C  C0BC  F402         	movff	UseIRCode@NEC+1,_Global+2
  6620  005D20  C0BD  F403         	movff	UseIRCode@NEC+2,_Global+3
  6621  005D24  C0BE  F404         	movff	UseIRCode@NEC+3,_Global+4
  6622                           
  6623                           ;IR.c: 291: if(SyncGlobalToEEPROM())
  6624  005D28  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
  6625  005D2C  0900               	iorlw	0
  6626  005D2E  B4D8               	btfsc	status,2,c
  6627  005D30  D024               	goto	l15152
  6628                           
  6629                           ;IR.c: 292: {
  6630                           ;IR.c: 294: for(i =0;i<10;i++)
  6631  005D32  0E00               	movlw	0
  6632  005D34  0100               	movlb	0	; () banked
  6633  005D36  6FC4               	movwf	UseIRCode@i& (0+255),b
  6634  005D38                     l15138:
  6635                           
  6636                           ; BSR set to: 0
  6637  005D38  0E09               	movlw	9
  6638  005D3A  0100               	movlb	0	; () banked
  6639  005D3C  65C4               	cpfsgt	UseIRCode@i& (0+255),b
  6640  005D3E  D001               	goto	l15142
  6641                           
  6642                           ; BSR set to: 0
  6643  005D40  D0E4               	goto	l15214
  6644  005D42                     l15142:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;IR.c: 295: {
  6648                           ;IR.c: 296: (LATC |= 0x04);
  6649  005D42  848B               	bsf	3979,2,c	;volatile
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;IR.c: 297: delayUS(50000);
  6653  005D44  0E50               	movlw	80
  6654  005D46  0100               	movlb	0	; () banked
  6655  005D48  6F79               	movwf	delayUS@US& (0+255),b
  6656  005D4A  0EC3               	movlw	195
  6657  005D4C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6658  005D4E  0E00               	movlw	0
  6659  005D50  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6660  005D52  0E00               	movlw	0
  6661  005D54  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6662  005D56  EC6B  F046         	call	_delayUS	;wreg free
  6663                           
  6664                           ;IR.c: 298: (LATC &= ~0x04);
  6665  005D5A  948B               	bcf	3979,2,c	;volatile
  6666                           
  6667                           ;IR.c: 299: delayUS(50000);
  6668  005D5C  0E50               	movlw	80
  6669  005D5E  0100               	movlb	0	; () banked
  6670  005D60  6F79               	movwf	delayUS@US& (0+255),b
  6671  005D62  0EC3               	movlw	195
  6672  005D64  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6673  005D66  0E00               	movlw	0
  6674  005D68  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6675  005D6A  0E00               	movlw	0
  6676  005D6C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6677  005D6E  EC6B  F046         	call	_delayUS	;wreg free
  6678  005D72  0100               	movlb	0	; () banked
  6679  005D74  2BC4               	incf	UseIRCode@i& (0+255),f,b
  6680  005D76  D7E0               	goto	l15138
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;IR.c: 300: }
  6684                           ;IR.c: 301: }
  6685                           
  6686                           ; BSR set to: 0
  6687  005D78  D0C8               	goto	l15214
  6688  005D7A                     l15152:
  6689                           
  6690                           ;IR.c: 302: else
  6691                           ;IR.c: 303: {
  6692                           ;IR.c: 305: for(i =0;i<10;i++)
  6693  005D7A  0E00               	movlw	0
  6694  005D7C  0100               	movlb	0	; () banked
  6695  005D7E  6FC4               	movwf	UseIRCode@i& (0+255),b
  6696  005D80                     l15154:
  6697                           
  6698                           ; BSR set to: 0
  6699  005D80  0E09               	movlw	9
  6700  005D82  0100               	movlb	0	; () banked
  6701  005D84  65C4               	cpfsgt	UseIRCode@i& (0+255),b
  6702  005D86  D001               	goto	l15158
  6703                           
  6704                           ; BSR set to: 0
  6705  005D88  D0C0               	goto	l15214
  6706  005D8A                     l15158:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;IR.c: 306: {
  6710                           ;IR.c: 307: (LATC |= 0x02);
  6711  005D8A  828B               	bsf	3979,1,c	;volatile
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;IR.c: 308: delayUS(50000);
  6715  005D8C  0E50               	movlw	80
  6716  005D8E  0100               	movlb	0	; () banked
  6717  005D90  6F79               	movwf	delayUS@US& (0+255),b
  6718  005D92  0EC3               	movlw	195
  6719  005D94  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6720  005D96  0E00               	movlw	0
  6721  005D98  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6722  005D9A  0E00               	movlw	0
  6723  005D9C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6724  005D9E  EC6B  F046         	call	_delayUS	;wreg free
  6725                           
  6726                           ;IR.c: 309: (LATC &= ~0x02);
  6727  005DA2  928B               	bcf	3979,1,c	;volatile
  6728                           
  6729                           ;IR.c: 310: delayUS(50000);
  6730  005DA4  0E50               	movlw	80
  6731  005DA6  0100               	movlb	0	; () banked
  6732  005DA8  6F79               	movwf	delayUS@US& (0+255),b
  6733  005DAA  0EC3               	movlw	195
  6734  005DAC  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  6735  005DAE  0E00               	movlw	0
  6736  005DB0  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  6737  005DB2  0E00               	movlw	0
  6738  005DB4  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  6739  005DB6  EC6B  F046         	call	_delayUS	;wreg free
  6740  005DBA  0100               	movlb	0	; () banked
  6741  005DBC  2BC4               	incf	UseIRCode@i& (0+255),f,b
  6742  005DBE  D7E0               	goto	l15154
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;IR.c: 311: }
  6746                           ;IR.c: 312: }
  6747                           ;IR.c: 313: }
  6748                           
  6749                           ; BSR set to: 0
  6750                           
  6751                           ; BSR set to: 0
  6752  005DC0  D0A4               	goto	l15214
  6753  005DC2                     l15168:
  6754                           
  6755                           ;IR.c: 314: else
  6756                           ;IR.c: 315: {
  6757                           ;IR.c: 316: if(NEC == Global.SWNECcode)
  6758  005DC2  0100               	movlb	0	; () banked
  6759  005DC4  51BB               	movf	UseIRCode@NEC& (0+255),w,b
  6760  005DC6  0104               	movlb	4	; () banked
  6761  005DC8  1901               	xorwf	(_Global+1)& (0+255),w,b
  6762  005DCA  E121               	bnz	l15178
  6763  005DCC  0100               	movlb	0	; () banked
  6764  005DCE  51BC               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  6765  005DD0  0104               	movlb	4	; () banked
  6766  005DD2  1902               	xorwf	(_Global+2)& (0+255),w,b
  6767  005DD4  E11C               	bnz	l15178
  6768  005DD6  0100               	movlb	0	; () banked
  6769  005DD8  51BD               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  6770  005DDA  0104               	movlb	4	; () banked
  6771  005DDC  1903               	xorwf	(_Global+3)& (0+255),w,b
  6772  005DDE  E117               	bnz	l15178
  6773  005DE0  0100               	movlb	0	; () banked
  6774  005DE2  51BE               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  6775  005DE4  0104               	movlb	4	; () banked
  6776  005DE6  1904               	xorwf	(_Global+4)& (0+255),w,b
  6777  005DE8  A4D8               	btfss	status,2,c
  6778  005DEA  D011               	goto	l15178
  6779                           
  6780                           ; BSR set to: 4
  6781                           ;IR.c: 317: {
  6782                           ;IR.c: 318: if(*Code == 2)
  6783  005DEC  C0B9  FFD9         	movff	UseIRCode@Code,fsr2l
  6784  005DF0  C0BA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6785  005DF4  0E02               	movlw	2
  6786  005DF6  18DE               	xorwf	postinc2,w,c
  6787  005DF8  B4D8               	btfsc	status,2,c
  6788                           
  6789                           ; BSR set to: 4
  6790                           ;IR.c: 319: {
  6791                           ;IR.c: 320: (LATC |= 0x02);
  6792  005DFA  828B               	bsf	3979,1,c	;volatile
  6793                           
  6794                           ; BSR set to: 4
  6795                           ;IR.c: 321: }
  6796                           ;IR.c: 322: (LATC |= 0x04);
  6797  005DFC  848B               	bsf	3979,2,c	;volatile
  6798                           
  6799                           ; BSR set to: 4
  6800                           ;IR.c: 323: SendRF_Channel(ReadCodeButtons());
  6801  005DFE  EC96  F046         	call	_ReadCodeButtons	;wreg free
  6802  005E02  EC92  F02F         	call	_SendRF_Channel
  6803                           
  6804                           ;IR.c: 324: found = 1;
  6805  005E06  0E01               	movlw	1
  6806  005E08  0100               	movlb	0	; () banked
  6807  005E0A  6FC2               	movwf	UseIRCode@found& (0+255),b
  6808                           
  6809                           ;IR.c: 325: }
  6810  005E0C  D077               	goto	l15210
  6811  005E0E                     l15178:
  6812                           
  6813                           ;IR.c: 326: else
  6814                           ;IR.c: 327: {
  6815                           ;IR.c: 328: for(j=0; j < 3; j++)
  6816  005E0E  0E00               	movlw	0
  6817  005E10  0100               	movlb	0	; () banked
  6818  005E12  6FC3               	movwf	UseIRCode@j& (0+255),b
  6819  005E14                     l15180:
  6820                           
  6821                           ; BSR set to: 0
  6822  005E14  0E02               	movlw	2
  6823  005E16  0100               	movlb	0	; () banked
  6824  005E18  65C3               	cpfsgt	UseIRCode@j& (0+255),b
  6825  005E1A  D001               	goto	l15184
  6826                           
  6827                           ; BSR set to: 0
  6828  005E1C  D06F               	goto	l15210
  6829  005E1E                     l15184:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;IR.c: 329: {
  6833                           ;IR.c: 330: for(i=0; i < 15; i++)
  6834  005E1E  0E00               	movlw	0
  6835  005E20  0100               	movlb	0	; () banked
  6836  005E22  6FC4               	movwf	UseIRCode@i& (0+255),b
  6837  005E24                     l15186:
  6838                           
  6839                           ; BSR set to: 0
  6840  005E24  0E0E               	movlw	14
  6841  005E26  0100               	movlb	0	; () banked
  6842  005E28  65C4               	cpfsgt	UseIRCode@i& (0+255),b
  6843  005E2A  D001               	goto	l15190
  6844                           
  6845                           ; BSR set to: 0
  6846  005E2C  D063               	goto	l15206
  6847  005E2E                     l15190:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;IR.c: 331: {
  6851                           ;IR.c: 333: if(IRaddress == Global.RemoteButtonRF[i][j][0])
  6852  005E2E  0100               	movlb	0	; () banked
  6853  005E30  51C4               	movf	UseIRCode@i& (0+255),w,b
  6854  005E32  0D06               	mullw	6
  6855  005E34  0E00               	movlw	low _Global
  6856  005E36  0100               	movlb	0	; () banked
  6857  005E38  6FBF               	movwf	??_UseIRCode& (0+255),b
  6858  005E3A  0E04               	movlw	high _Global
  6859  005E3C  0100               	movlb	0	; () banked
  6860  005E3E  6FC0               	movwf	(??_UseIRCode+1)& (0+255),b
  6861  005E40  0E2E               	movlw	46
  6862  005E42  0100               	movlb	0	; () banked
  6863  005E44  27BF               	addwf	??_UseIRCode& (0+255),f,b
  6864  005E46  0E00               	movlw	0
  6865  005E48  23C0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6866  005E4A  50F3               	movf	prodl,w,c
  6867  005E4C  0100               	movlb	0	; () banked
  6868  005E4E  27BF               	addwf	??_UseIRCode& (0+255),f,b
  6869  005E50  50F4               	movf	prodh,w,c
  6870  005E52  0100               	movlb	0	; () banked
  6871  005E54  23C0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6872  005E56  0100               	movlb	0	; () banked
  6873  005E58  51C3               	movf	UseIRCode@j& (0+255),w,b
  6874  005E5A  0D02               	mullw	2
  6875  005E5C  50F3               	movf	prodl,w,c
  6876  005E5E  0100               	movlb	0	; () banked
  6877  005E60  25BF               	addwf	??_UseIRCode& (0+255),w,b
  6878  005E62  6ED9               	movwf	fsr2l,c
  6879  005E64  50F4               	movf	prodh,w,c
  6880  005E66  0100               	movlb	0	; () banked
  6881  005E68  21C0               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  6882  005E6A  6EDA               	movwf	fsr2h,c
  6883  005E6C  0101               	movlb	1	; () banked
  6884  005E6E  51EA               	movf	_IRaddress& (0+255),w,b
  6885  005E70  18DE               	xorwf	postinc2,w,c
  6886  005E72  A4D8               	btfss	status,2,c
  6887  005E74  D03C               	goto	l15202
  6888                           
  6889                           ; BSR set to: 1
  6890                           ;IR.c: 334: {
  6891                           ;IR.c: 335: if(IRcommand == Global.RemoteButtonRF[i][j][1])
  6892  005E76  0100               	movlb	0	; () banked
  6893  005E78  51C4               	movf	UseIRCode@i& (0+255),w,b
  6894  005E7A  0D06               	mullw	6
  6895  005E7C  0E00               	movlw	low _Global
  6896  005E7E  0100               	movlb	0	; () banked
  6897  005E80  6FBF               	movwf	??_UseIRCode& (0+255),b
  6898  005E82  0E04               	movlw	high _Global
  6899  005E84  0100               	movlb	0	; () banked
  6900  005E86  6FC0               	movwf	(??_UseIRCode+1)& (0+255),b
  6901  005E88  0E2E               	movlw	46
  6902  005E8A  0100               	movlb	0	; () banked
  6903  005E8C  27BF               	addwf	??_UseIRCode& (0+255),f,b
  6904  005E8E  0E00               	movlw	0
  6905  005E90  23C0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6906  005E92  50F3               	movf	prodl,w,c
  6907  005E94  0100               	movlb	0	; () banked
  6908  005E96  27BF               	addwf	??_UseIRCode& (0+255),f,b
  6909  005E98  50F4               	movf	prodh,w,c
  6910  005E9A  0100               	movlb	0	; () banked
  6911  005E9C  23C0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6912  005E9E  0100               	movlb	0	; () banked
  6913  005EA0  51C3               	movf	UseIRCode@j& (0+255),w,b
  6914  005EA2  0D02               	mullw	2
  6915  005EA4  50F3               	movf	prodl,w,c
  6916  005EA6  0100               	movlb	0	; () banked
  6917  005EA8  27BF               	addwf	??_UseIRCode& (0+255),f,b
  6918  005EAA  50F4               	movf	prodh,w,c
  6919  005EAC  0100               	movlb	0	; () banked
  6920  005EAE  23C0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  6921  005EB0  0E01               	movlw	1
  6922  005EB2  0100               	movlb	0	; () banked
  6923  005EB4  25BF               	addwf	??_UseIRCode& (0+255),w,b
  6924  005EB6  6ED9               	movwf	fsr2l,c
  6925  005EB8  0E00               	movlw	0
  6926  005EBA  0100               	movlb	0	; () banked
  6927  005EBC  21C0               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  6928  005EBE  6EDA               	movwf	fsr2h,c
  6929  005EC0  0101               	movlb	1	; () banked
  6930  005EC2  51EB               	movf	_IRcommand& (0+255),w,b
  6931  005EC4  18DE               	xorwf	postinc2,w,c
  6932  005EC6  A4D8               	btfss	status,2,c
  6933  005EC8  D012               	goto	l15202
  6934                           
  6935                           ; BSR set to: 1
  6936                           ;IR.c: 336: {
  6937                           ;IR.c: 337: if(*Code == 2)
  6938  005ECA  C0B9  FFD9         	movff	UseIRCode@Code,fsr2l
  6939  005ECE  C0BA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6940  005ED2  0E02               	movlw	2
  6941  005ED4  18DE               	xorwf	postinc2,w,c
  6942  005ED6  A4D8               	btfss	status,2,c
  6943  005ED8  D002               	goto	l15198
  6944                           
  6945                           ; BSR set to: 1
  6946                           ;IR.c: 338: {
  6947                           ;IR.c: 339: (LATC |= 0x02);
  6948  005EDA  828B               	bsf	3979,1,c	;volatile
  6949  005EDC  D000               	goto	l15198
  6950  005EDE                     l15198:
  6951                           
  6952                           ; BSR set to: 1
  6953                           ;IR.c: 340: }
  6954                           ;IR.c: 341: SendRF_Channel(i);
  6955  005EDE  0100               	movlb	0	; () banked
  6956  005EE0  51C4               	movf	UseIRCode@i& (0+255),w,b
  6957  005EE2  EC92  F02F         	call	_SendRF_Channel
  6958                           
  6959                           ;IR.c: 342: found = 1;
  6960  005EE6  0E01               	movlw	1
  6961  005EE8  0100               	movlb	0	; () banked
  6962  005EEA  6FC2               	movwf	UseIRCode@found& (0+255),b
  6963                           
  6964                           ; BSR set to: 0
  6965  005EEC  D000               	goto	l15202
  6966  005EEE                     l15202:
  6967  005EEE  0100               	movlb	0	; () banked
  6968  005EF0  2BC4               	incf	UseIRCode@i& (0+255),f,b
  6969  005EF2  D798               	goto	l15186
  6970  005EF4                     l15206:
  6971                           
  6972                           ; BSR set to: 0
  6973  005EF4  0100               	movlb	0	; () banked
  6974  005EF6  2BC3               	incf	UseIRCode@j& (0+255),f,b
  6975  005EF8  D78D               	goto	l15180
  6976                           
  6977                           ; BSR set to: 0
  6978                           
  6979                           ; BSR set to: 0
  6980  005EFA  D000               	goto	l15210
  6981  005EFC                     l15210:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;IR.c: 343: }
  6985                           ;IR.c: 344: }
  6986                           ;IR.c: 345: }
  6987                           ;IR.c: 346: }
  6988                           ;IR.c: 347: }
  6989                           ;IR.c: 349: if(found == 0)
  6990  005EFC  0100               	movlb	0	; () banked
  6991  005EFE  51C2               	movf	UseIRCode@found& (0+255),w,b
  6992  005F00  0100               	movlb	0	; () banked
  6993  005F02  A4D8               	btfss	status,2,c
  6994  005F04  D002               	goto	l15214
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;IR.c: 350: {
  6998                           ;IR.c: 351: (LATC |= 0x02);
  6999  005F06  828B               	bsf	3979,1,c	;volatile
  7000                           
  7001                           ; BSR set to: 0
  7002                           
  7003                           ; BSR set to: 0
  7004  005F08  D000               	goto	l15214
  7005  005F0A                     l15214:
  7006                           
  7007                           ;IR.c: 352: }
  7008                           ;IR.c: 353: }
  7009                           ;IR.c: 354: }
  7010                           ;IR.c: 355: *Code = 0;
  7011  005F0A  C0B9  FFD9         	movff	UseIRCode@Code,fsr2l
  7012  005F0E  C0BA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7013  005F12  0E00               	movlw	0
  7014  005F14  6EDF               	movwf	indf2,c
  7015                           
  7016                           ;IR.c: 356: IRpinOLD = ReadIRpin();
  7017  005F16  ECA3  F049         	call	_ReadIRpin	;wreg free
  7018  005F1A  6E31               	movwf	_IRpinOLD,c
  7019                           
  7020                           ;IR.c: 357: INTCONbits.RBIF = 0;
  7021  005F1C  90F2               	bcf	intcon,0,c	;volatile
  7022                           
  7023                           ;IR.c: 358: (IOCBbits.IOCB4 = 1);
  7024  005F1E  887D               	bsf	3965,4,c	;volatile
  7025                           
  7026                           ;IR.c: 359: INTCONbits.RBIE = 1;
  7027  005F20  86F2               	bsf	intcon,3,c	;volatile
  7028  005F22  0012               	return		;funcret
  7029  005F24                     __end_of_UseIRCode:
  7030                           	opt stack 0
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           intcon	equ	0xFF2
  7038                           postinc0	equ	0xFEE
  7039                           wreg	equ	0xFE8
  7040                           postdec1	equ	0xFE5
  7041                           fsr1h	equ	0xFE2
  7042                           fsr1l	equ	0xFE1
  7043                           indf2	equ	0xFDF
  7044                           postinc2	equ	0xFDE
  7045                           fsr2h	equ	0xFDA
  7046                           fsr2l	equ	0xFD9
  7047                           status	equ	0xFD8
  7048                           
  7049 ;; *************** function _SendRF_Channel *****************
  7050 ;; Defined at:
  7051 ;;		line 165 in file "RF.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  channel         1    wreg     unsigned char 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  channel         1   38[BANK0 ] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;		None               void
  7058 ;; Registers used:
  7059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;Total ram usage:        1 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    9
  7072 ;; This function calls:
  7073 ;;		_SendRF_wait
  7074 ;; This function is called by:
  7075 ;;		_UseIRCode
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text2
  7080  005F24                     __ptext2:
  7081                           	opt stack 0
  7082  005F24                     _SendRF_Channel:
  7083                           	opt stack 20
  7084                           
  7085                           ;incstack = 0
  7086                           ;SendRF_Channel@channel stored from wreg
  7087  005F24  0100               	movlb	0	; () banked
  7088  005F26  6F86               	movwf	SendRF_Channel@channel& (0+255),b
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;RF.c: 167: switch (channel)
  7092  005F28  D10D               	goto	l14946
  7093  005F2A                     l14888:
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,3);
  7097  005F2A  0EC9               	movlw	low _Conf1_ChannelD
  7098  005F2C  0100               	movlb	0	; () banked
  7099  005F2E  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7100  005F30  0EF3               	movlw	high _Conf1_ChannelD
  7101  005F32  0100               	movlb	0	; () banked
  7102  005F34  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7103  005F36  0E01               	movlw	1
  7104  005F38  0100               	movlb	0	; () banked
  7105  005F3A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7106  005F3C  0E0C               	movlw	12
  7107  005F3E  0100               	movlb	0	; () banked
  7108  005F40  6F84               	movwf	SendRF_wait@size& (0+255),b
  7109  005F42  0E03               	movlw	3
  7110  005F44  0100               	movlb	0	; () banked
  7111  005F46  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7112  005F48  EC94  F047         	call	_SendRF_wait	;wreg free
  7113                           
  7114                           ;RF.c: 172: break;
  7115  005F4C  0012               	return	
  7116  005F4E                     l14890:
  7117                           
  7118                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,3);
  7119  005F4E  0ED5               	movlw	low _Conf1_ChannelE
  7120  005F50  0100               	movlb	0	; () banked
  7121  005F52  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7122  005F54  0EF3               	movlw	high _Conf1_ChannelE
  7123  005F56  0100               	movlb	0	; () banked
  7124  005F58  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7125  005F5A  0E01               	movlw	1
  7126  005F5C  0100               	movlb	0	; () banked
  7127  005F5E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7128  005F60  0E0C               	movlw	12
  7129  005F62  0100               	movlb	0	; () banked
  7130  005F64  6F84               	movwf	SendRF_wait@size& (0+255),b
  7131  005F66  0E03               	movlw	3
  7132  005F68  0100               	movlb	0	; () banked
  7133  005F6A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7134  005F6C  EC94  F047         	call	_SendRF_wait	;wreg free
  7135                           
  7136                           ;RF.c: 176: break;
  7137  005F70  0012               	return	
  7138  005F72                     l14892:
  7139                           
  7140                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,3);
  7141  005F72  0EE1               	movlw	low _Conf1_ChannelF
  7142  005F74  0100               	movlb	0	; () banked
  7143  005F76  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7144  005F78  0EF3               	movlw	high _Conf1_ChannelF
  7145  005F7A  0100               	movlb	0	; () banked
  7146  005F7C  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7147  005F7E  0E01               	movlw	1
  7148  005F80  0100               	movlb	0	; () banked
  7149  005F82  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7150  005F84  0E0C               	movlw	12
  7151  005F86  0100               	movlb	0	; () banked
  7152  005F88  6F84               	movwf	SendRF_wait@size& (0+255),b
  7153  005F8A  0E03               	movlw	3
  7154  005F8C  0100               	movlb	0	; () banked
  7155  005F8E  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7156  005F90  EC94  F047         	call	_SendRF_wait	;wreg free
  7157                           
  7158                           ;RF.c: 180: break;
  7159  005F94  0012               	return	
  7160  005F96                     l14894:
  7161                           
  7162                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  7163  005F96  502A               	movf	_Conf2_ChannelB_Status,w,c
  7164  005F98  B4D8               	btfsc	status,2,c
  7165  005F9A  D014               	goto	l14900
  7166                           
  7167                           ;RF.c: 184: {
  7168                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,3);
  7169  005F9C  0EEE               	movlw	low _Conf2_ChannelB_OFF
  7170  005F9E  0100               	movlb	0	; () banked
  7171  005FA0  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7172  005FA2  0EF2               	movlw	high _Conf2_ChannelB_OFF
  7173  005FA4  0100               	movlb	0	; () banked
  7174  005FA6  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7175  005FA8  0E02               	movlw	2
  7176  005FAA  0100               	movlb	0	; () banked
  7177  005FAC  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7178  005FAE  0E10               	movlw	16
  7179  005FB0  0100               	movlb	0	; () banked
  7180  005FB2  6F84               	movwf	SendRF_wait@size& (0+255),b
  7181  005FB4  0E03               	movlw	3
  7182  005FB6  0100               	movlb	0	; () banked
  7183  005FB8  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7184  005FBA  EC94  F047         	call	_SendRF_wait	;wreg free
  7185                           
  7186                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  7187  005FBE  0E00               	movlw	0
  7188  005FC0  6E2A               	movwf	_Conf2_ChannelB_Status,c
  7189                           
  7190                           ;RF.c: 187: }
  7191  005FC2  0012               	return	
  7192  005FC4                     l14900:
  7193                           
  7194                           ;RF.c: 188: else
  7195                           ;RF.c: 189: {
  7196                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,3);
  7197  005FC4  0EFE               	movlw	low _Conf2_ChannelB_ON
  7198  005FC6  0100               	movlb	0	; () banked
  7199  005FC8  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7200  005FCA  0EF2               	movlw	high _Conf2_ChannelB_ON
  7201  005FCC  0100               	movlb	0	; () banked
  7202  005FCE  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7203  005FD0  0E02               	movlw	2
  7204  005FD2  0100               	movlb	0	; () banked
  7205  005FD4  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7206  005FD6  0E10               	movlw	16
  7207  005FD8  0100               	movlb	0	; () banked
  7208  005FDA  6F84               	movwf	SendRF_wait@size& (0+255),b
  7209  005FDC  0E03               	movlw	3
  7210  005FDE  0100               	movlb	0	; () banked
  7211  005FE0  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7212  005FE2  EC94  F047         	call	_SendRF_wait	;wreg free
  7213                           
  7214                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  7215  005FE6  0E01               	movlw	1
  7216  005FE8  6E2A               	movwf	_Conf2_ChannelB_Status,c
  7217                           
  7218                           ;RF.c: 192: }
  7219                           ;RF.c: 193: break;
  7220  005FEA  0012               	return	
  7221  005FEC                     l14904:
  7222                           
  7223                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  7224  005FEC  502B               	movf	_Conf2_ChannelD_Status,w,c
  7225  005FEE  B4D8               	btfsc	status,2,c
  7226  005FF0  D014               	goto	l14910
  7227                           
  7228                           ;RF.c: 197: {
  7229                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,3);
  7230  005FF2  0E0E               	movlw	low _Conf2_ChannelD_OFF
  7231  005FF4  0100               	movlb	0	; () banked
  7232  005FF6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7233  005FF8  0EF3               	movlw	high _Conf2_ChannelD_OFF
  7234  005FFA  0100               	movlb	0	; () banked
  7235  005FFC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7236  005FFE  0E02               	movlw	2
  7237  006000  0100               	movlb	0	; () banked
  7238  006002  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7239  006004  0E10               	movlw	16
  7240  006006  0100               	movlb	0	; () banked
  7241  006008  6F84               	movwf	SendRF_wait@size& (0+255),b
  7242  00600A  0E03               	movlw	3
  7243  00600C  0100               	movlb	0	; () banked
  7244  00600E  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7245  006010  EC94  F047         	call	_SendRF_wait	;wreg free
  7246                           
  7247                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  7248  006014  0E00               	movlw	0
  7249  006016  6E2B               	movwf	_Conf2_ChannelD_Status,c
  7250                           
  7251                           ;RF.c: 200: }
  7252  006018  0012               	return	
  7253  00601A                     l14910:
  7254                           
  7255                           ;RF.c: 201: else
  7256                           ;RF.c: 202: {
  7257                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,3);
  7258  00601A  0E1E               	movlw	low _Conf2_ChannelD_ON
  7259  00601C  0100               	movlb	0	; () banked
  7260  00601E  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7261  006020  0EF3               	movlw	high _Conf2_ChannelD_ON
  7262  006022  0100               	movlb	0	; () banked
  7263  006024  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7264  006026  0E02               	movlw	2
  7265  006028  0100               	movlb	0	; () banked
  7266  00602A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7267  00602C  0E10               	movlw	16
  7268  00602E  0100               	movlb	0	; () banked
  7269  006030  6F84               	movwf	SendRF_wait@size& (0+255),b
  7270  006032  0E03               	movlw	3
  7271  006034  0100               	movlb	0	; () banked
  7272  006036  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7273  006038  EC94  F047         	call	_SendRF_wait	;wreg free
  7274                           
  7275                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  7276  00603C  0E01               	movlw	1
  7277  00603E  6E2B               	movwf	_Conf2_ChannelD_Status,c
  7278                           
  7279                           ;RF.c: 205: }
  7280                           ;RF.c: 206: break;
  7281  006040  0012               	return	
  7282  006042                     l14914:
  7283                           
  7284                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  7285  006042  502C               	movf	_Conf2_ChannelH_1_Status,w,c
  7286  006044  B4D8               	btfsc	status,2,c
  7287  006046  D014               	goto	l14920
  7288                           
  7289                           ;RF.c: 210: {
  7290                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,3);
  7291  006048  0E2E               	movlw	low _Conf2_ChannelH_1_OFF
  7292  00604A  0100               	movlb	0	; () banked
  7293  00604C  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7294  00604E  0EF3               	movlw	high _Conf2_ChannelH_1_OFF
  7295  006050  0100               	movlb	0	; () banked
  7296  006052  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7297  006054  0E02               	movlw	2
  7298  006056  0100               	movlb	0	; () banked
  7299  006058  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7300  00605A  0E10               	movlw	16
  7301  00605C  0100               	movlb	0	; () banked
  7302  00605E  6F84               	movwf	SendRF_wait@size& (0+255),b
  7303  006060  0E03               	movlw	3
  7304  006062  0100               	movlb	0	; () banked
  7305  006064  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7306  006066  EC94  F047         	call	_SendRF_wait	;wreg free
  7307                           
  7308                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  7309  00606A  0E00               	movlw	0
  7310  00606C  6E2C               	movwf	_Conf2_ChannelH_1_Status,c
  7311                           
  7312                           ;RF.c: 213: }
  7313  00606E  0012               	return	
  7314  006070                     l14920:
  7315                           
  7316                           ;RF.c: 214: else
  7317                           ;RF.c: 215: {
  7318                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,3);
  7319  006070  0E3E               	movlw	low _Conf2_ChannelH_1_ON
  7320  006072  0100               	movlb	0	; () banked
  7321  006074  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7322  006076  0EF3               	movlw	high _Conf2_ChannelH_1_ON
  7323  006078  0100               	movlb	0	; () banked
  7324  00607A  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7325  00607C  0E02               	movlw	2
  7326  00607E  0100               	movlb	0	; () banked
  7327  006080  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7328  006082  0E10               	movlw	16
  7329  006084  0100               	movlb	0	; () banked
  7330  006086  6F84               	movwf	SendRF_wait@size& (0+255),b
  7331  006088  0E03               	movlw	3
  7332  00608A  0100               	movlb	0	; () banked
  7333  00608C  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7334  00608E  EC94  F047         	call	_SendRF_wait	;wreg free
  7335                           
  7336                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  7337  006092  0E01               	movlw	1
  7338  006094  6E2C               	movwf	_Conf2_ChannelH_1_Status,c
  7339                           
  7340                           ;RF.c: 218: }
  7341                           ;RF.c: 219: break;
  7342  006096  0012               	return	
  7343  006098                     l14924:
  7344                           
  7345                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  7346  006098  502D               	movf	_Conf2_ChannelH_2_Status,w,c
  7347  00609A  B4D8               	btfsc	status,2,c
  7348  00609C  D014               	goto	l14930
  7349                           
  7350                           ;RF.c: 223: {
  7351                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,3);
  7352  00609E  0E4E               	movlw	low _Conf2_ChannelH_2_OFF
  7353  0060A0  0100               	movlb	0	; () banked
  7354  0060A2  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7355  0060A4  0EF3               	movlw	high _Conf2_ChannelH_2_OFF
  7356  0060A6  0100               	movlb	0	; () banked
  7357  0060A8  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7358  0060AA  0E02               	movlw	2
  7359  0060AC  0100               	movlb	0	; () banked
  7360  0060AE  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7361  0060B0  0E10               	movlw	16
  7362  0060B2  0100               	movlb	0	; () banked
  7363  0060B4  6F84               	movwf	SendRF_wait@size& (0+255),b
  7364  0060B6  0E03               	movlw	3
  7365  0060B8  0100               	movlb	0	; () banked
  7366  0060BA  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7367  0060BC  EC94  F047         	call	_SendRF_wait	;wreg free
  7368                           
  7369                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  7370  0060C0  0E00               	movlw	0
  7371  0060C2  6E2D               	movwf	_Conf2_ChannelH_2_Status,c
  7372                           
  7373                           ;RF.c: 226: }
  7374  0060C4  0012               	return	
  7375  0060C6                     l14930:
  7376                           
  7377                           ;RF.c: 227: else
  7378                           ;RF.c: 228: {
  7379                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,3);
  7380  0060C6  0E5E               	movlw	low _Conf2_ChannelH_2_ON
  7381  0060C8  0100               	movlb	0	; () banked
  7382  0060CA  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7383  0060CC  0EF3               	movlw	high _Conf2_ChannelH_2_ON
  7384  0060CE  0100               	movlb	0	; () banked
  7385  0060D0  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7386  0060D2  0E02               	movlw	2
  7387  0060D4  0100               	movlb	0	; () banked
  7388  0060D6  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7389  0060D8  0E10               	movlw	16
  7390  0060DA  0100               	movlb	0	; () banked
  7391  0060DC  6F84               	movwf	SendRF_wait@size& (0+255),b
  7392  0060DE  0E03               	movlw	3
  7393  0060E0  0100               	movlb	0	; () banked
  7394  0060E2  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7395  0060E4  EC94  F047         	call	_SendRF_wait	;wreg free
  7396                           
  7397                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  7398  0060E8  0E01               	movlw	1
  7399  0060EA  6E2D               	movwf	_Conf2_ChannelH_2_Status,c
  7400                           
  7401                           ;RF.c: 231: }
  7402                           ;RF.c: 232: break;
  7403  0060EC  0012               	return	
  7404  0060EE                     l14934:
  7405                           
  7406                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  7407  0060EE  502E               	movf	_Conf2_ChannelH_3_Status,w,c
  7408  0060F0  B4D8               	btfsc	status,2,c
  7409  0060F2  D014               	goto	l14940
  7410                           
  7411                           ;RF.c: 236: {
  7412                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,3);
  7413  0060F4  0E6E               	movlw	low _Conf2_ChannelH_3_OFF
  7414  0060F6  0100               	movlb	0	; () banked
  7415  0060F8  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7416  0060FA  0EF3               	movlw	high _Conf2_ChannelH_3_OFF
  7417  0060FC  0100               	movlb	0	; () banked
  7418  0060FE  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7419  006100  0E02               	movlw	2
  7420  006102  0100               	movlb	0	; () banked
  7421  006104  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7422  006106  0E10               	movlw	16
  7423  006108  0100               	movlb	0	; () banked
  7424  00610A  6F84               	movwf	SendRF_wait@size& (0+255),b
  7425  00610C  0E03               	movlw	3
  7426  00610E  0100               	movlb	0	; () banked
  7427  006110  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7428  006112  EC94  F047         	call	_SendRF_wait	;wreg free
  7429                           
  7430                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  7431  006116  0E00               	movlw	0
  7432  006118  6E2E               	movwf	_Conf2_ChannelH_3_Status,c
  7433                           
  7434                           ;RF.c: 239: }
  7435  00611A  0012               	return	
  7436  00611C                     l14940:
  7437                           
  7438                           ;RF.c: 240: else
  7439                           ;RF.c: 241: {
  7440                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,3);
  7441  00611C  0E7E               	movlw	low _Conf2_ChannelH_3_ON
  7442  00611E  0100               	movlb	0	; () banked
  7443  006120  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7444  006122  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  7445  006124  0100               	movlb	0	; () banked
  7446  006126  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7447  006128  0E02               	movlw	2
  7448  00612A  0100               	movlb	0	; () banked
  7449  00612C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7450  00612E  0E10               	movlw	16
  7451  006130  0100               	movlb	0	; () banked
  7452  006132  6F84               	movwf	SendRF_wait@size& (0+255),b
  7453  006134  0E03               	movlw	3
  7454  006136  0100               	movlb	0	; () banked
  7455  006138  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7456  00613A  EC94  F047         	call	_SendRF_wait	;wreg free
  7457                           
  7458                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  7459  00613E  0E01               	movlw	1
  7460  006140  6E2E               	movwf	_Conf2_ChannelH_3_Status,c
  7461                           
  7462                           ;RF.c: 248: }
  7463                           
  7464                           ;RF.c: 247: break;
  7465                           
  7466                           ;RF.c: 246: default:
  7467                           
  7468                           ;RF.c: 244: }
  7469                           ;RF.c: 245: break;
  7470  006142  0012               	return	
  7471  006144                     l14946:
  7472  006144  0100               	movlb	0	; () banked
  7473  006146  5186               	movf	SendRF_Channel@channel& (0+255),w,b
  7474                           
  7475                           ; Switch size 1, requested type "space"
  7476                           ; Number of cases is 8, Range of values is 0 to 7
  7477                           ; switch strategies available:
  7478                           ; Name         Instructions Cycles
  7479                           ; simple_byte           25    13 (average)
  7480                           ;	Chosen strategy is simple_byte
  7481  006148  0A00               	xorlw	0	; case 0
  7482  00614A  B4D8               	btfsc	status,2,c
  7483  00614C  D6EE               	goto	l14888
  7484  00614E  0A01               	xorlw	1	; case 1
  7485  006150  B4D8               	btfsc	status,2,c
  7486  006152  D6FD               	goto	l14890
  7487  006154  0A03               	xorlw	3	; case 2
  7488  006156  B4D8               	btfsc	status,2,c
  7489  006158  D70C               	goto	l14892
  7490  00615A  0A01               	xorlw	1	; case 3
  7491  00615C  B4D8               	btfsc	status,2,c
  7492  00615E  D71B               	goto	l14894
  7493  006160  0A07               	xorlw	7	; case 4
  7494  006162  B4D8               	btfsc	status,2,c
  7495  006164  D743               	goto	l14904
  7496  006166  0A01               	xorlw	1	; case 5
  7497  006168  B4D8               	btfsc	status,2,c
  7498  00616A  D76B               	goto	l14914
  7499  00616C  0A03               	xorlw	3	; case 6
  7500  00616E  B4D8               	btfsc	status,2,c
  7501  006170  D793               	goto	l14924
  7502  006172  0A01               	xorlw	1	; case 7
  7503  006174  A4D8               	btfss	status,2,c
  7504  006176  0012               	return	
  7505  006178  D7BA               	goto	l14934
  7506                           
  7507                           ; BSR set to: 0
  7508  00617A  0012               	return		;funcret
  7509  00617C                     __end_of_SendRF_Channel:
  7510                           	opt stack 0
  7511                           tblptru	equ	0xFF8
  7512                           tblptrh	equ	0xFF7
  7513                           tblptrl	equ	0xFF6
  7514                           tablat	equ	0xFF5
  7515                           prodh	equ	0xFF4
  7516                           prodl	equ	0xFF3
  7517                           intcon	equ	0xFF2
  7518                           postinc0	equ	0xFEE
  7519                           wreg	equ	0xFE8
  7520                           postdec1	equ	0xFE5
  7521                           fsr1h	equ	0xFE2
  7522                           fsr1l	equ	0xFE1
  7523                           indf2	equ	0xFDF
  7524                           postinc2	equ	0xFDE
  7525                           fsr2h	equ	0xFDA
  7526                           fsr2l	equ	0xFD9
  7527                           status	equ	0xFD8
  7528                           
  7529 ;; *************** function _ReadPushButton *****************
  7530 ;; Defined at:
  7531 ;;		line 52 in file "Button.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      unsigned char 
  7538 ;; Registers used:
  7539 ;;		wreg
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    6
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_UseIRCode
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text3
  7560  009300                     __ptext3:
  7561                           	opt stack 0
  7562  009300                     _ReadPushButton:
  7563                           	opt stack 23
  7564                           
  7565                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  7566                           
  7567                           ;incstack = 0
  7568  009300  B082               	btfsc	3970,0,c	;volatile
  7569  009302  D002               	goto	l14856
  7570                           
  7571                           ;Button.c: 56: {
  7572                           ;Button.c: 57: return 1;
  7573  009304  0E01               	movlw	1
  7574  009306  0012               	return	
  7575  009308                     l14856:
  7576                           
  7577                           ;Button.c: 58: }
  7578                           ;Button.c: 59: return 0;
  7579  009308  0E00               	movlw	0
  7580  00930A  0012               	return	
  7581  00930C  0012               	return		;funcret
  7582  00930E                     __end_of_ReadPushButton:
  7583                           	opt stack 0
  7584                           tblptru	equ	0xFF8
  7585                           tblptrh	equ	0xFF7
  7586                           tblptrl	equ	0xFF6
  7587                           tablat	equ	0xFF5
  7588                           prodh	equ	0xFF4
  7589                           prodl	equ	0xFF3
  7590                           intcon	equ	0xFF2
  7591                           postinc0	equ	0xFEE
  7592                           wreg	equ	0xFE8
  7593                           postdec1	equ	0xFE5
  7594                           fsr1h	equ	0xFE2
  7595                           fsr1l	equ	0xFE1
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           fsr2h	equ	0xFDA
  7599                           fsr2l	equ	0xFD9
  7600                           status	equ	0xFD8
  7601                           
  7602 ;; *************** function _ReadCodeButtons *****************
  7603 ;; Defined at:
  7604 ;;		line 67 in file "Button.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  temp            1   34[BANK0 ] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      unsigned char 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;Total ram usage:        1 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    7
  7625 ;; This function calls:
  7626 ;;		_delayUS
  7627 ;; This function is called by:
  7628 ;;		_UseIRCode
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text4
  7633  008D2C                     __ptext4:
  7634                           	opt stack 0
  7635  008D2C                     _ReadCodeButtons:
  7636                           	opt stack 22
  7637                           
  7638                           ;Button.c: 69: unsigned char temp = 0;
  7639                           
  7640                           ;incstack = 0
  7641  008D2C  0E00               	movlw	0
  7642  008D2E  0100               	movlb	0	; () banked
  7643  008D30  6F82               	movwf	ReadCodeButtons@temp& (0+255),b
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;Button.c: 71: (LATC &= ~0x10);
  7647  008D32  988B               	bcf	3979,4,c	;volatile
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;Button.c: 72: delayUS(5);
  7651  008D34  0E05               	movlw	5
  7652  008D36  0100               	movlb	0	; () banked
  7653  008D38  6F79               	movwf	delayUS@US& (0+255),b
  7654  008D3A  0E00               	movlw	0
  7655  008D3C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  7656  008D3E  0E00               	movlw	0
  7657  008D40  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  7658  008D42  0E00               	movlw	0
  7659  008D44  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  7660  008D46  EC6B  F046         	call	_delayUS	;wreg free
  7661                           
  7662                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  7663  008D4A  B081               	btfsc	3969,0,c	;volatile
  7664  008D4C  D004               	goto	l14870
  7665                           
  7666                           ;Button.c: 76: {
  7667                           ;Button.c: 77: temp +=8;
  7668  008D4E  0E08               	movlw	8
  7669  008D50  0100               	movlb	0	; () banked
  7670  008D52  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7671  008D54  D000               	goto	l14870
  7672  008D56                     l14870:
  7673                           
  7674                           ;Button.c: 78: }
  7675                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  7676  008D56  B281               	btfsc	3969,1,c	;volatile
  7677  008D58  D004               	goto	l14874
  7678                           
  7679                           ;Button.c: 80: {
  7680                           ;Button.c: 81: temp +=4;
  7681  008D5A  0E04               	movlw	4
  7682  008D5C  0100               	movlb	0	; () banked
  7683  008D5E  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7684  008D60  D000               	goto	l14874
  7685  008D62                     l14874:
  7686                           
  7687                           ;Button.c: 82: }
  7688                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  7689  008D62  B481               	btfsc	3969,2,c	;volatile
  7690  008D64  D004               	goto	l14878
  7691                           
  7692                           ;Button.c: 84: {
  7693                           ;Button.c: 85: temp +=2;
  7694  008D66  0E02               	movlw	2
  7695  008D68  0100               	movlb	0	; () banked
  7696  008D6A  2782               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7697  008D6C  D000               	goto	l14878
  7698  008D6E                     l14878:
  7699                           
  7700                           ;Button.c: 86: }
  7701                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  7702  008D6E  B681               	btfsc	3969,3,c	;volatile
  7703  008D70  D002               	goto	l1630
  7704                           
  7705                           ;Button.c: 88: {
  7706                           ;Button.c: 89: temp +=1;
  7707  008D72  0100               	movlb	0	; () banked
  7708  008D74  2B82               	incf	ReadCodeButtons@temp& (0+255),f,b
  7709  008D76                     l1630:
  7710                           
  7711                           ;Button.c: 90: }
  7712                           ;Button.c: 91: (LATC |= 0x10);
  7713  008D76  888B               	bsf	3979,4,c	;volatile
  7714                           
  7715                           ;Button.c: 92: return temp;
  7716  008D78  0100               	movlb	0	; () banked
  7717  008D7A  5182               	movf	ReadCodeButtons@temp& (0+255),w,b
  7718  008D7C  0012               	return	
  7719                           
  7720                           ; BSR set to: 0
  7721                           
  7722                           ; BSR set to: 0
  7723  008D7E  0012               	return		;funcret
  7724  008D80                     __end_of_ReadCodeButtons:
  7725                           	opt stack 0
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           postinc0	equ	0xFEE
  7734                           wreg	equ	0xFE8
  7735                           postdec1	equ	0xFE5
  7736                           fsr1h	equ	0xFE2
  7737                           fsr1l	equ	0xFE1
  7738                           indf2	equ	0xFDF
  7739                           postinc2	equ	0xFDE
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744 ;; *************** function _UseBluetooth *****************
  7745 ;; Defined at:
  7746 ;;		line 279 in file "Bluetooth.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  String          2  140[BANK1 ] PTR unsigned char 
  7749 ;;		 -> main@BluetoothString(255), 
  7750 ;;  StringPos       1  142[BANK1 ] unsigned char 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  buf           100    0[BANK2 ] unsigned char [100]
  7753 ;;  rfchannelSTR   10  100[BANK2 ] unsigned char [10]
  7754 ;;  temp            4  127[BANK2 ] unsigned long 
  7755 ;;  EnteredNEC      4  118[BANK2 ] unsigned long 
  7756 ;;  tempNec         4  111[BANK2 ] unsigned long 
  7757 ;;  i               1  131[BANK2 ] unsigned char 
  7758 ;;  NecCommand      1  126[BANK2 ] unsigned char 
  7759 ;;  NecAddress      1  125[BANK2 ] unsigned char 
  7760 ;;  rfconf          1  124[BANK2 ] unsigned char 
  7761 ;;  tempRFArray     1  123[BANK2 ] unsigned char 
  7762 ;;  ok              1  122[BANK2 ] unsigned char 
  7763 ;;  device          1  117[BANK2 ] unsigned char 
  7764 ;;  EmptyPlace      1  116[BANK2 ] unsigned char 
  7765 ;;  timeout         1  115[BANK2 ] unsigned char 
  7766 ;;  set             1  110[BANK2 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      unsigned char 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7776 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;      Locals:         0       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Totals:         0       0      15     132       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;Total ram usage:      147 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:   11
  7783 ;; This function calls:
  7784 ;;		_ClearUSART
  7785 ;;		_DecodeNEC
  7786 ;;		_EncodeNEC
  7787 ;;		_GetNumber
  7788 ;;		_GetStringAfterComma
  7789 ;;		_ReadVoltage
  7790 ;;		_SendNEC_wait
  7791 ;;		_SendRF_wait
  7792 ;;		_StringAddEqual
  7793 ;;		_StringContainsCaseInsensitive
  7794 ;;		_StringMatch
  7795 ;;		_StringMatchCaseInsensitive
  7796 ;;		_SyncGlobalToEEPROM
  7797 ;;		_UARTchar
  7798 ;;		_UARTcommandMenu
  7799 ;;		_UARTstring
  7800 ;;		_UARTstringCRLN
  7801 ;;		_WaitForIRsignal
  7802 ;;		_cleanBuffer
  7803 ;;		_delayUS
  7804 ;;		_lowercaseString
  7805 ;;		_sprintf
  7806 ;; This function is called by:
  7807 ;;		_main
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text5
  7812  0001F6                     __ptext5:
  7813                           	opt stack 0
  7814  0001F6                     _UseBluetooth:
  7815                           	opt stack 19
  7816                           
  7817                           ;Bluetooth.c: 281: unsigned char ok = 1;
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;incstack = 0
  7821  0001F6  0E01               	movlw	1
  7822  0001F8  0102               	movlb	2	; () banked
  7823  0001FA  6F7A               	movwf	UseBluetooth@ok& (0+255),b
  7824                           
  7825                           ;Bluetooth.c: 283: unsigned long EnteredNEC = 0;
  7826  0001FC  0E00               	movlw	0
  7827  0001FE  0102               	movlb	2	; () banked
  7828  000200  6F76               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  7829  000202  0E00               	movlw	0
  7830  000204  6F77               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  7831  000206  0E00               	movlw	0
  7832  000208  6F78               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  7833  00020A  0E00               	movlw	0
  7834  00020C  6F79               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  7835                           
  7836                           ;Bluetooth.c: 284: unsigned char NecAddress = 0;
  7837  00020E  0E00               	movlw	0
  7838  000210  0102               	movlb	2	; () banked
  7839  000212  6F7D               	movwf	UseBluetooth@NecAddress& (0+255),b
  7840                           
  7841                           ;Bluetooth.c: 285: unsigned char NecCommand = 0;
  7842  000214  0E00               	movlw	0
  7843  000216  0102               	movlb	2	; () banked
  7844  000218  6F7E               	movwf	UseBluetooth@NecCommand& (0+255),b
  7845                           
  7846                           ;Bluetooth.c: 286: unsigned long temp = 0;
  7847  00021A  0E00               	movlw	0
  7848  00021C  0102               	movlb	2	; () banked
  7849  00021E  6F7F               	movwf	UseBluetooth@temp& (0+255),b
  7850  000220  0E00               	movlw	0
  7851  000222  6F80               	movwf	(UseBluetooth@temp+1)& (0+255),b
  7852  000224  0E00               	movlw	0
  7853  000226  6F81               	movwf	(UseBluetooth@temp+2)& (0+255),b
  7854  000228  0E00               	movlw	0
  7855  00022A  6F82               	movwf	(UseBluetooth@temp+3)& (0+255),b
  7856                           
  7857                           ;Bluetooth.c: 287: unsigned long tempNec = 0;
  7858  00022C  0E00               	movlw	0
  7859  00022E  0102               	movlb	2	; () banked
  7860  000230  6F6F               	movwf	UseBluetooth@tempNec& (0+255),b
  7861  000232  0E00               	movlw	0
  7862  000234  6F70               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  7863  000236  0E00               	movlw	0
  7864  000238  6F71               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  7865  00023A  0E00               	movlw	0
  7866  00023C  6F72               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  7867                           
  7868                           ;Bluetooth.c: 288: unsigned char buf[100];
  7869                           ;Bluetooth.c: 289: unsigned char timeout =0;
  7870  00023E  0E00               	movlw	0
  7871  000240  0102               	movlb	2	; () banked
  7872  000242  6F73               	movwf	UseBluetooth@timeout& (0+255),b
  7873                           
  7874                           ;Bluetooth.c: 290: unsigned char rfchannelSTR[10];
  7875                           ;Bluetooth.c: 291: unsigned char rfconf, i, tempRFArray;
  7876                           ;Bluetooth.c: 292: unsigned char device = 0;
  7877  000244  0E00               	movlw	0
  7878  000246  0102               	movlb	2	; () banked
  7879  000248  6F75               	movwf	UseBluetooth@device& (0+255),b
  7880                           
  7881                           ;Bluetooth.c: 293: unsigned char EmptyPlace = 0;
  7882  00024A  0E00               	movlw	0
  7883  00024C  0102               	movlb	2	; () banked
  7884  00024E  6F74               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  7885                           
  7886                           ;Bluetooth.c: 294: unsigned char set = 0;
  7887  000250  0E00               	movlw	0
  7888  000252  0102               	movlb	2	; () banked
  7889  000254  6F6E               	movwf	UseBluetooth@set& (0+255),b
  7890                           
  7891                           ; BSR set to: 2
  7892                           ;Bluetooth.c: 296: cleanBuffer(buf,100);
  7893  000256  0E00               	movlw	low UseBluetooth@buf
  7894  000258  0100               	movlb	0	; () banked
  7895  00025A  6F79               	movwf	cleanBuffer@data& (0+255),b
  7896  00025C  0E02               	movlw	high UseBluetooth@buf
  7897  00025E  0100               	movlb	0	; () banked
  7898  000260  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  7899  000262  0E00               	movlw	0
  7900  000264  0100               	movlb	0	; () banked
  7901  000266  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  7902  000268  0E64               	movlw	100
  7903  00026A  6F7B               	movwf	cleanBuffer@count& (0+255),b
  7904  00026C  ECBA  F045         	call	_cleanBuffer	;wreg free
  7905                           
  7906                           ;Bluetooth.c: 297: cleanBuffer(rfchannelSTR,10);
  7907  000270  0E64               	movlw	low UseBluetooth@rfchannelSTR
  7908  000272  0100               	movlb	0	; () banked
  7909  000274  6F79               	movwf	cleanBuffer@data& (0+255),b
  7910  000276  0E02               	movlw	high UseBluetooth@rfchannelSTR
  7911  000278  0100               	movlb	0	; () banked
  7912  00027A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
  7913  00027C  0E00               	movlw	0
  7914  00027E  0100               	movlb	0	; () banked
  7915  000280  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
  7916  000282  0E0A               	movlw	10
  7917  000284  6F7B               	movwf	cleanBuffer@count& (0+255),b
  7918  000286  ECBA  F045         	call	_cleanBuffer	;wreg free
  7919                           
  7920                           ;Bluetooth.c: 299: if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf1"))
  7921  00028A  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  7922  00028E  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  7923  000292  0EC6               	movlw	low STR_20
  7924  000294  0100               	movlb	0	; () banked
  7925  000296  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  7926  000298  0EFF               	movlw	high STR_20
  7927  00029A  0100               	movlb	0	; () banked
  7928  00029C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  7929  00029E  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  7930  0002A2  0900               	iorlw	0
  7931  0002A4  B4D8               	btfsc	status,2,c
  7932  0002A6  D083               	goto	l15254
  7933                           
  7934                           ;Bluetooth.c: 300: {
  7935                           ;Bluetooth.c: 301: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  7936  0002A8  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  7937  0002AC  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  7938  0002B0  0E8E               	movlw	low _Conf1_ChannelD_STR
  7939  0002B2  0100               	movlb	0	; () banked
  7940  0002B4  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7941  0002B6  0EF3               	movlw	high _Conf1_ChannelD_STR
  7942  0002B8  0100               	movlb	0	; () banked
  7943  0002BA  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7944  0002BC  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  7945  0002C0  0900               	iorlw	0
  7946  0002C2  B4D8               	btfsc	status,2,c
  7947  0002C4  D012               	goto	l15236
  7948                           
  7949                           ;Bluetooth.c: 302: {
  7950                           ;Bluetooth.c: 304: SendRF_wait(Conf1_ChannelD,1,12,8);
  7951  0002C6  0EC9               	movlw	low _Conf1_ChannelD
  7952  0002C8  0100               	movlb	0	; () banked
  7953  0002CA  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7954  0002CC  0EF3               	movlw	high _Conf1_ChannelD
  7955  0002CE  0100               	movlb	0	; () banked
  7956  0002D0  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7957  0002D2  0E01               	movlw	1
  7958  0002D4  0100               	movlb	0	; () banked
  7959  0002D6  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7960  0002D8  0E0C               	movlw	12
  7961  0002DA  0100               	movlb	0	; () banked
  7962  0002DC  6F84               	movwf	SendRF_wait@size& (0+255),b
  7963  0002DE  0E08               	movlw	8
  7964  0002E0  0100               	movlb	0	; () banked
  7965  0002E2  6F85               	movwf	SendRF_wait@amount& (0+255),b
  7966  0002E4  EC94  F047         	call	_SendRF_wait	;wreg free
  7967                           
  7968                           ;Bluetooth.c: 305: }
  7969  0002E8  D054               	goto	l15248
  7970  0002EA                     l15236:
  7971                           
  7972                           ;Bluetooth.c: 306: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  7973  0002EA  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  7974  0002EE  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  7975  0002F2  0E9D               	movlw	low _Conf1_ChannelE_STR
  7976  0002F4  0100               	movlb	0	; () banked
  7977  0002F6  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  7978  0002F8  0EF3               	movlw	high _Conf1_ChannelE_STR
  7979  0002FA  0100               	movlb	0	; () banked
  7980  0002FC  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  7981  0002FE  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  7982  000302  0900               	iorlw	0
  7983  000304  B4D8               	btfsc	status,2,c
  7984  000306  D012               	goto	l15240
  7985                           
  7986                           ;Bluetooth.c: 307: {
  7987                           ;Bluetooth.c: 309: SendRF_wait(Conf1_ChannelE,1,12,8);
  7988  000308  0ED5               	movlw	low _Conf1_ChannelE
  7989  00030A  0100               	movlb	0	; () banked
  7990  00030C  6F81               	movwf	SendRF_wait@Code& (0+255),b
  7991  00030E  0EF3               	movlw	high _Conf1_ChannelE
  7992  000310  0100               	movlb	0	; () banked
  7993  000312  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7994  000314  0E01               	movlw	1
  7995  000316  0100               	movlb	0	; () banked
  7996  000318  6F83               	movwf	SendRF_wait@Config& (0+255),b
  7997  00031A  0E0C               	movlw	12
  7998  00031C  0100               	movlb	0	; () banked
  7999  00031E  6F84               	movwf	SendRF_wait@size& (0+255),b
  8000  000320  0E08               	movlw	8
  8001  000322  0100               	movlb	0	; () banked
  8002  000324  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8003  000326  EC94  F047         	call	_SendRF_wait	;wreg free
  8004                           
  8005                           ;Bluetooth.c: 310: }
  8006  00032A  D033               	goto	l15248
  8007  00032C                     l15240:
  8008                           
  8009                           ;Bluetooth.c: 311: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  8010  00032C  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8011  000330  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8012  000334  0EAC               	movlw	low _Conf1_ChannelF_STR
  8013  000336  0100               	movlb	0	; () banked
  8014  000338  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8015  00033A  0EF3               	movlw	high _Conf1_ChannelF_STR
  8016  00033C  0100               	movlb	0	; () banked
  8017  00033E  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8018  000340  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8019  000344  0900               	iorlw	0
  8020  000346  B4D8               	btfsc	status,2,c
  8021  000348  D012               	goto	l15244
  8022                           
  8023                           ;Bluetooth.c: 312: {
  8024                           ;Bluetooth.c: 314: SendRF_wait(Conf1_ChannelF,1,12,8);
  8025  00034A  0EE1               	movlw	low _Conf1_ChannelF
  8026  00034C  0100               	movlb	0	; () banked
  8027  00034E  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8028  000350  0EF3               	movlw	high _Conf1_ChannelF
  8029  000352  0100               	movlb	0	; () banked
  8030  000354  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8031  000356  0E01               	movlw	1
  8032  000358  0100               	movlb	0	; () banked
  8033  00035A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8034  00035C  0E0C               	movlw	12
  8035  00035E  0100               	movlb	0	; () banked
  8036  000360  6F84               	movwf	SendRF_wait@size& (0+255),b
  8037  000362  0E08               	movlw	8
  8038  000364  0100               	movlb	0	; () banked
  8039  000366  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8040  000368  EC94  F047         	call	_SendRF_wait	;wreg free
  8041                           
  8042                           ;Bluetooth.c: 315: }
  8043  00036C  D012               	goto	l15248
  8044  00036E                     l15244:
  8045                           
  8046                           ;Bluetooth.c: 316: else
  8047                           ;Bluetooth.c: 317: {
  8048                           ;Bluetooth.c: 319: UARTstring((unsigned char *)SYNTAX_ERR);
  8049  00036E  0EBB               	movlw	low _SYNTAX_ERR
  8050  000370  0100               	movlb	0	; () banked
  8051  000372  6F7A               	movwf	UARTstring@data& (0+255),b
  8052  000374  0EF3               	movlw	high _SYNTAX_ERR
  8053  000376  0100               	movlb	0	; () banked
  8054  000378  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8055  00037A  ECE7  F045         	call	_UARTstring	;wreg free
  8056                           
  8057                           ;Bluetooth.c: 320: UARTstring((unsigned char *)CRLN);
  8058  00037E  0EFE               	movlw	low _CRLN
  8059  000380  0100               	movlb	0	; () banked
  8060  000382  6F7A               	movwf	UARTstring@data& (0+255),b
  8061  000384  0EF3               	movlw	high _CRLN
  8062  000386  0100               	movlb	0	; () banked
  8063  000388  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8064  00038A  ECE7  F045         	call	_UARTstring	;wreg free
  8065                           
  8066                           ;Bluetooth.c: 321: return 0;
  8067                           ;	Return value of _UseBluetooth is never used
  8068  00038E  0012               	return	
  8069  000390  D000               	goto	l15248
  8070  000392                     l15248:
  8071                           
  8072                           ;Bluetooth.c: 322: }
  8073                           ;Bluetooth.c: 323: if(ok)
  8074  000392  0102               	movlb	2	; () banked
  8075  000394  517A               	movf	UseBluetooth@ok& (0+255),w,b
  8076  000396  0102               	movlb	2	; () banked
  8077  000398  B4D8               	btfsc	status,2,c
  8078  00039A  0012               	return	
  8079                           
  8080                           ; BSR set to: 2
  8081                           ;Bluetooth.c: 324: {
  8082                           ;Bluetooth.c: 325: UARTstringCRLN((unsigned char *)"Configuration 1 RF code sent");
  8083  00039C  0E57               	movlw	low STR_21
  8084  00039E  0100               	movlb	0	; () banked
  8085  0003A0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8086  0003A2  0EFB               	movlw	high STR_21
  8087  0003A4  0100               	movlb	0	; () banked
  8088  0003A6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8089  0003A8  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8090                           
  8091                           ;Bluetooth.c: 327: }
  8092                           ;Bluetooth.c: 328: }
  8093                           
  8094                           ;Bluetooth.c: 326: return 1;
  8095                           ;	Return value of _UseBluetooth is never used
  8096  0003AC  0012               	return	
  8097  0003AE                     l15254:
  8098                           
  8099                           ;Bluetooth.c: 329: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf2"
      +                          ))
  8100  0003AE  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8101  0003B2  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8102  0003B6  0ECC               	movlw	low STR_22
  8103  0003B8  0100               	movlb	0	; () banked
  8104  0003BA  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8105  0003BC  0EFF               	movlw	high STR_22
  8106  0003BE  0100               	movlb	0	; () banked
  8107  0003C0  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8108  0003C2  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  8109  0003C6  0900               	iorlw	0
  8110  0003C8  B4D8               	btfsc	status,2,c
  8111  0003CA  D16A               	goto	l15306
  8112                           
  8113                           ;Bluetooth.c: 330: {
  8114                           ;Bluetooth.c: 331: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  8115  0003CC  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8116  0003D0  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8117  0003D4  0ECA               	movlw	low _Conf2_ChannelB_ON_STR
  8118  0003D6  0100               	movlb	0	; () banked
  8119  0003D8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8120  0003DA  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
  8121  0003DC  0100               	movlb	0	; () banked
  8122  0003DE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8123  0003E0  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8124  0003E4  0900               	iorlw	0
  8125  0003E6  B4D8               	btfsc	status,2,c
  8126  0003E8  D012               	goto	l15260
  8127                           
  8128                           ;Bluetooth.c: 332: {
  8129                           ;Bluetooth.c: 334: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  8130  0003EA  0EFE               	movlw	low _Conf2_ChannelB_ON
  8131  0003EC  0100               	movlb	0	; () banked
  8132  0003EE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8133  0003F0  0EF2               	movlw	high _Conf2_ChannelB_ON
  8134  0003F2  0100               	movlb	0	; () banked
  8135  0003F4  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8136  0003F6  0E02               	movlw	2
  8137  0003F8  0100               	movlb	0	; () banked
  8138  0003FA  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8139  0003FC  0E10               	movlw	16
  8140  0003FE  0100               	movlb	0	; () banked
  8141  000400  6F84               	movwf	SendRF_wait@size& (0+255),b
  8142  000402  0E08               	movlw	8
  8143  000404  0100               	movlb	0	; () banked
  8144  000406  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8145  000408  EC94  F047         	call	_SendRF_wait	;wreg free
  8146                           
  8147                           ;Bluetooth.c: 335: }
  8148  00040C  D13B               	goto	l15300
  8149  00040E                     l15260:
  8150                           
  8151                           ;Bluetooth.c: 336: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  8152  00040E  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8153  000412  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8154  000416  0EA4               	movlw	low _Conf2_ChannelB_OFF_STR
  8155  000418  0100               	movlb	0	; () banked
  8156  00041A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8157  00041C  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
  8158  00041E  0100               	movlb	0	; () banked
  8159  000420  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8160  000422  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8161  000426  0900               	iorlw	0
  8162  000428  B4D8               	btfsc	status,2,c
  8163  00042A  D012               	goto	l15264
  8164                           
  8165                           ;Bluetooth.c: 337: {
  8166                           ;Bluetooth.c: 339: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  8167  00042C  0EEE               	movlw	low _Conf2_ChannelB_OFF
  8168  00042E  0100               	movlb	0	; () banked
  8169  000430  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8170  000432  0EF2               	movlw	high _Conf2_ChannelB_OFF
  8171  000434  0100               	movlb	0	; () banked
  8172  000436  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8173  000438  0E02               	movlw	2
  8174  00043A  0100               	movlb	0	; () banked
  8175  00043C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8176  00043E  0E10               	movlw	16
  8177  000440  0100               	movlb	0	; () banked
  8178  000442  6F84               	movwf	SendRF_wait@size& (0+255),b
  8179  000444  0E08               	movlw	8
  8180  000446  0100               	movlb	0	; () banked
  8181  000448  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8182  00044A  EC94  F047         	call	_SendRF_wait	;wreg free
  8183                           
  8184                           ;Bluetooth.c: 340: }
  8185  00044E  D11A               	goto	l15300
  8186  000450                     l15264:
  8187                           
  8188                           ;Bluetooth.c: 341: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  8189  000450  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8190  000454  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8191  000458  0EDC               	movlw	low _Conf2_ChannelD_ON_STR
  8192  00045A  0100               	movlb	0	; () banked
  8193  00045C  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8194  00045E  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
  8195  000460  0100               	movlb	0	; () banked
  8196  000462  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8197  000464  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8198  000468  0900               	iorlw	0
  8199  00046A  B4D8               	btfsc	status,2,c
  8200  00046C  D012               	goto	l15268
  8201                           
  8202                           ;Bluetooth.c: 342: {
  8203                           ;Bluetooth.c: 344: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  8204  00046E  0E1E               	movlw	low _Conf2_ChannelD_ON
  8205  000470  0100               	movlb	0	; () banked
  8206  000472  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8207  000474  0EF3               	movlw	high _Conf2_ChannelD_ON
  8208  000476  0100               	movlb	0	; () banked
  8209  000478  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8210  00047A  0E02               	movlw	2
  8211  00047C  0100               	movlb	0	; () banked
  8212  00047E  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8213  000480  0E10               	movlw	16
  8214  000482  0100               	movlb	0	; () banked
  8215  000484  6F84               	movwf	SendRF_wait@size& (0+255),b
  8216  000486  0E08               	movlw	8
  8217  000488  0100               	movlb	0	; () banked
  8218  00048A  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8219  00048C  EC94  F047         	call	_SendRF_wait	;wreg free
  8220                           
  8221                           ;Bluetooth.c: 345: }
  8222  000490  D0F9               	goto	l15300
  8223  000492                     l15268:
  8224                           
  8225                           ;Bluetooth.c: 346: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  8226  000492  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8227  000496  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8228  00049A  0EB7               	movlw	low _Conf2_ChannelD_OFF_STR
  8229  00049C  0100               	movlb	0	; () banked
  8230  00049E  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8231  0004A0  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
  8232  0004A2  0100               	movlb	0	; () banked
  8233  0004A4  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8234  0004A6  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8235  0004AA  0900               	iorlw	0
  8236  0004AC  B4D8               	btfsc	status,2,c
  8237  0004AE  D012               	goto	l15272
  8238                           
  8239                           ;Bluetooth.c: 347: {
  8240                           ;Bluetooth.c: 349: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  8241  0004B0  0E0E               	movlw	low _Conf2_ChannelD_OFF
  8242  0004B2  0100               	movlb	0	; () banked
  8243  0004B4  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8244  0004B6  0EF3               	movlw	high _Conf2_ChannelD_OFF
  8245  0004B8  0100               	movlb	0	; () banked
  8246  0004BA  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8247  0004BC  0E02               	movlw	2
  8248  0004BE  0100               	movlb	0	; () banked
  8249  0004C0  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8250  0004C2  0E10               	movlw	16
  8251  0004C4  0100               	movlb	0	; () banked
  8252  0004C6  6F84               	movwf	SendRF_wait@size& (0+255),b
  8253  0004C8  0E08               	movlw	8
  8254  0004CA  0100               	movlb	0	; () banked
  8255  0004CC  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8256  0004CE  EC94  F047         	call	_SendRF_wait	;wreg free
  8257                           
  8258                           ;Bluetooth.c: 350: }
  8259  0004D2  D0D8               	goto	l15300
  8260  0004D4                     l15272:
  8261                           
  8262                           ;Bluetooth.c: 351: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  8263  0004D4  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8264  0004D8  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8265  0004DC  0E68               	movlw	low _Conf2_ChannelH_1_ON_STR
  8266  0004DE  0100               	movlb	0	; () banked
  8267  0004E0  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8268  0004E2  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
  8269  0004E4  0100               	movlb	0	; () banked
  8270  0004E6  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8271  0004E8  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8272  0004EC  0900               	iorlw	0
  8273  0004EE  B4D8               	btfsc	status,2,c
  8274  0004F0  D012               	goto	l15276
  8275                           
  8276                           ;Bluetooth.c: 352: {
  8277                           ;Bluetooth.c: 354: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  8278  0004F2  0E3E               	movlw	low _Conf2_ChannelH_1_ON
  8279  0004F4  0100               	movlb	0	; () banked
  8280  0004F6  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8281  0004F8  0EF3               	movlw	high _Conf2_ChannelH_1_ON
  8282  0004FA  0100               	movlb	0	; () banked
  8283  0004FC  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8284  0004FE  0E02               	movlw	2
  8285  000500  0100               	movlb	0	; () banked
  8286  000502  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8287  000504  0E10               	movlw	16
  8288  000506  0100               	movlb	0	; () banked
  8289  000508  6F84               	movwf	SendRF_wait@size& (0+255),b
  8290  00050A  0E08               	movlw	8
  8291  00050C  0100               	movlb	0	; () banked
  8292  00050E  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8293  000510  EC94  F047         	call	_SendRF_wait	;wreg free
  8294                           
  8295                           ;Bluetooth.c: 355: }
  8296  000514  D0B7               	goto	l15300
  8297  000516                     l15276:
  8298                           
  8299                           ;Bluetooth.c: 356: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  8300  000516  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8301  00051A  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8302  00051E  0E29               	movlw	low _Conf2_ChannelH_1_OFF_STR
  8303  000520  0100               	movlb	0	; () banked
  8304  000522  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8305  000524  0EF2               	movlw	high _Conf2_ChannelH_1_OFF_STR
  8306  000526  0100               	movlb	0	; () banked
  8307  000528  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8308  00052A  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8309  00052E  0900               	iorlw	0
  8310  000530  B4D8               	btfsc	status,2,c
  8311  000532  D012               	goto	l15280
  8312                           
  8313                           ;Bluetooth.c: 357: {
  8314                           ;Bluetooth.c: 359: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  8315  000534  0E2E               	movlw	low _Conf2_ChannelH_1_OFF
  8316  000536  0100               	movlb	0	; () banked
  8317  000538  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8318  00053A  0EF3               	movlw	high _Conf2_ChannelH_1_OFF
  8319  00053C  0100               	movlb	0	; () banked
  8320  00053E  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8321  000540  0E02               	movlw	2
  8322  000542  0100               	movlb	0	; () banked
  8323  000544  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8324  000546  0E10               	movlw	16
  8325  000548  0100               	movlb	0	; () banked
  8326  00054A  6F84               	movwf	SendRF_wait@size& (0+255),b
  8327  00054C  0E08               	movlw	8
  8328  00054E  0100               	movlb	0	; () banked
  8329  000550  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8330  000552  EC94  F047         	call	_SendRF_wait	;wreg free
  8331                           
  8332                           ;Bluetooth.c: 360: }
  8333  000556  D096               	goto	l15300
  8334  000558                     l15280:
  8335                           
  8336                           ;Bluetooth.c: 361: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  8337  000558  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8338  00055C  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8339  000560  0E7C               	movlw	low _Conf2_ChannelH_2_ON_STR
  8340  000562  0100               	movlb	0	; () banked
  8341  000564  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8342  000566  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
  8343  000568  0100               	movlb	0	; () banked
  8344  00056A  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8345  00056C  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8346  000570  0900               	iorlw	0
  8347  000572  B4D8               	btfsc	status,2,c
  8348  000574  D012               	goto	l15284
  8349                           
  8350                           ;Bluetooth.c: 362: {
  8351                           ;Bluetooth.c: 364: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  8352  000576  0E5E               	movlw	low _Conf2_ChannelH_2_ON
  8353  000578  0100               	movlb	0	; () banked
  8354  00057A  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8355  00057C  0EF3               	movlw	high _Conf2_ChannelH_2_ON
  8356  00057E  0100               	movlb	0	; () banked
  8357  000580  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8358  000582  0E02               	movlw	2
  8359  000584  0100               	movlb	0	; () banked
  8360  000586  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8361  000588  0E10               	movlw	16
  8362  00058A  0100               	movlb	0	; () banked
  8363  00058C  6F84               	movwf	SendRF_wait@size& (0+255),b
  8364  00058E  0E08               	movlw	8
  8365  000590  0100               	movlb	0	; () banked
  8366  000592  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8367  000594  EC94  F047         	call	_SendRF_wait	;wreg free
  8368                           
  8369                           ;Bluetooth.c: 365: }
  8370  000598  D075               	goto	l15300
  8371  00059A                     l15284:
  8372                           
  8373                           ;Bluetooth.c: 366: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
  8374  00059A  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8375  00059E  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8376  0005A2  0E3E               	movlw	low _Conf2_ChannelH_2_OFF_STR
  8377  0005A4  0100               	movlb	0	; () banked
  8378  0005A6  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8379  0005A8  0EF2               	movlw	high _Conf2_ChannelH_2_OFF_STR
  8380  0005AA  0100               	movlb	0	; () banked
  8381  0005AC  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8382  0005AE  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8383  0005B2  0900               	iorlw	0
  8384  0005B4  B4D8               	btfsc	status,2,c
  8385  0005B6  D012               	goto	l15288
  8386                           
  8387                           ;Bluetooth.c: 367: {
  8388                           ;Bluetooth.c: 369: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  8389  0005B8  0E4E               	movlw	low _Conf2_ChannelH_2_OFF
  8390  0005BA  0100               	movlb	0	; () banked
  8391  0005BC  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8392  0005BE  0EF3               	movlw	high _Conf2_ChannelH_2_OFF
  8393  0005C0  0100               	movlb	0	; () banked
  8394  0005C2  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8395  0005C4  0E02               	movlw	2
  8396  0005C6  0100               	movlb	0	; () banked
  8397  0005C8  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8398  0005CA  0E10               	movlw	16
  8399  0005CC  0100               	movlb	0	; () banked
  8400  0005CE  6F84               	movwf	SendRF_wait@size& (0+255),b
  8401  0005D0  0E08               	movlw	8
  8402  0005D2  0100               	movlb	0	; () banked
  8403  0005D4  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8404  0005D6  EC94  F047         	call	_SendRF_wait	;wreg free
  8405                           
  8406                           ;Bluetooth.c: 370: }
  8407  0005DA  D054               	goto	l15300
  8408  0005DC                     l15288:
  8409                           
  8410                           ;Bluetooth.c: 371: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
  8411  0005DC  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8412  0005E0  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8413  0005E4  0E90               	movlw	low _Conf2_ChannelH_3_ON_STR
  8414  0005E6  0100               	movlb	0	; () banked
  8415  0005E8  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8416  0005EA  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
  8417  0005EC  0100               	movlb	0	; () banked
  8418  0005EE  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8419  0005F0  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8420  0005F4  0900               	iorlw	0
  8421  0005F6  B4D8               	btfsc	status,2,c
  8422  0005F8  D012               	goto	l15292
  8423                           
  8424                           ;Bluetooth.c: 372: {
  8425                           ;Bluetooth.c: 374: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  8426  0005FA  0E7E               	movlw	low _Conf2_ChannelH_3_ON
  8427  0005FC  0100               	movlb	0	; () banked
  8428  0005FE  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8429  000600  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  8430  000602  0100               	movlb	0	; () banked
  8431  000604  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8432  000606  0E02               	movlw	2
  8433  000608  0100               	movlb	0	; () banked
  8434  00060A  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8435  00060C  0E10               	movlw	16
  8436  00060E  0100               	movlb	0	; () banked
  8437  000610  6F84               	movwf	SendRF_wait@size& (0+255),b
  8438  000612  0E08               	movlw	8
  8439  000614  0100               	movlb	0	; () banked
  8440  000616  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8441  000618  EC94  F047         	call	_SendRF_wait	;wreg free
  8442                           
  8443                           ;Bluetooth.c: 375: }
  8444  00061C  D033               	goto	l15300
  8445  00061E                     l15292:
  8446                           
  8447                           ;Bluetooth.c: 376: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
  8448  00061E  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8449  000622  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8450  000626  0E53               	movlw	low _Conf2_ChannelH_3_OFF_STR
  8451  000628  0100               	movlb	0	; () banked
  8452  00062A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8453  00062C  0EF2               	movlw	high _Conf2_ChannelH_3_OFF_STR
  8454  00062E  0100               	movlb	0	; () banked
  8455  000630  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8456  000632  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
  8457  000636  0900               	iorlw	0
  8458  000638  B4D8               	btfsc	status,2,c
  8459  00063A  D012               	goto	l15296
  8460                           
  8461                           ;Bluetooth.c: 377: {
  8462                           ;Bluetooth.c: 379: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  8463  00063C  0E4E               	movlw	low _Conf2_ChannelH_2_OFF
  8464  00063E  0100               	movlb	0	; () banked
  8465  000640  6F81               	movwf	SendRF_wait@Code& (0+255),b
  8466  000642  0EF3               	movlw	high _Conf2_ChannelH_2_OFF
  8467  000644  0100               	movlb	0	; () banked
  8468  000646  6F82               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8469  000648  0E03               	movlw	3
  8470  00064A  0100               	movlb	0	; () banked
  8471  00064C  6F83               	movwf	SendRF_wait@Config& (0+255),b
  8472  00064E  0E10               	movlw	16
  8473  000650  0100               	movlb	0	; () banked
  8474  000652  6F84               	movwf	SendRF_wait@size& (0+255),b
  8475  000654  0E08               	movlw	8
  8476  000656  0100               	movlb	0	; () banked
  8477  000658  6F85               	movwf	SendRF_wait@amount& (0+255),b
  8478  00065A  EC94  F047         	call	_SendRF_wait	;wreg free
  8479                           
  8480                           ;Bluetooth.c: 380: }
  8481  00065E  D012               	goto	l15300
  8482  000660                     l15296:
  8483                           
  8484                           ;Bluetooth.c: 381: else
  8485                           ;Bluetooth.c: 382: {
  8486                           ;Bluetooth.c: 384: UARTstring((unsigned char *)SYNTAX_ERR);
  8487  000660  0EBB               	movlw	low _SYNTAX_ERR
  8488  000662  0100               	movlb	0	; () banked
  8489  000664  6F7A               	movwf	UARTstring@data& (0+255),b
  8490  000666  0EF3               	movlw	high _SYNTAX_ERR
  8491  000668  0100               	movlb	0	; () banked
  8492  00066A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8493  00066C  ECE7  F045         	call	_UARTstring	;wreg free
  8494                           
  8495                           ;Bluetooth.c: 385: UARTstring(CRLN);
  8496  000670  0EFE               	movlw	low _CRLN
  8497  000672  0100               	movlb	0	; () banked
  8498  000674  6F7A               	movwf	UARTstring@data& (0+255),b
  8499  000676  0EF3               	movlw	high _CRLN
  8500  000678  0100               	movlb	0	; () banked
  8501  00067A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8502  00067C  ECE7  F045         	call	_UARTstring	;wreg free
  8503                           
  8504                           ;Bluetooth.c: 386: return 0;
  8505                           ;	Return value of _UseBluetooth is never used
  8506  000680  0012               	return	
  8507  000682  D000               	goto	l15300
  8508  000684                     l15300:
  8509                           
  8510                           ;Bluetooth.c: 387: }
  8511                           ;Bluetooth.c: 388: if(ok)
  8512  000684  0102               	movlb	2	; () banked
  8513  000686  517A               	movf	UseBluetooth@ok& (0+255),w,b
  8514  000688  0102               	movlb	2	; () banked
  8515  00068A  B4D8               	btfsc	status,2,c
  8516  00068C  0012               	return	
  8517                           
  8518                           ; BSR set to: 2
  8519                           ;Bluetooth.c: 389: {
  8520                           ;Bluetooth.c: 390: UARTstringCRLN((unsigned char *)"Configuration 2 RF code sent");
  8521  00068E  0E74               	movlw	low STR_23
  8522  000690  0100               	movlb	0	; () banked
  8523  000692  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8524  000694  0EFB               	movlw	high STR_23
  8525  000696  0100               	movlb	0	; () banked
  8526  000698  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8527  00069A  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8528                           
  8529                           ;Bluetooth.c: 392: }
  8530                           ;Bluetooth.c: 393: }
  8531                           
  8532                           ;Bluetooth.c: 391: return 1;
  8533                           ;	Return value of _UseBluetooth is never used
  8534  00069E  0012               	return	
  8535  0006A0                     l15306:
  8536                           
  8537                           ;Bluetooth.c: 394: else if(StringContainsCaseInsensitive(String,(unsigned char *)"NEC"))
  8538  0006A0  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8539  0006A4  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8540  0006A8  0EEF               	movlw	low STR_24
  8541  0006AA  0100               	movlb	0	; () banked
  8542  0006AC  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8543  0006AE  0EFF               	movlw	high STR_24
  8544  0006B0  0100               	movlb	0	; () banked
  8545  0006B2  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8546  0006B4  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  8547  0006B8  0900               	iorlw	0
  8548  0006BA  B4D8               	btfsc	status,2,c
  8549  0006BC  D1E0               	goto	l15368
  8550                           
  8551                           ;Bluetooth.c: 395: {
  8552                           ;Bluetooth.c: 396: if(!GetNumber(String, 2, &temp))
  8553  0006BE  C18C  F085         	movff	UseBluetooth@String,GetNumber@This
  8554  0006C2  C18D  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8555  0006C6  0E02               	movlw	2
  8556  0006C8  0100               	movlb	0	; () banked
  8557  0006CA  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8558  0006CC  0E7F               	movlw	low UseBluetooth@temp
  8559  0006CE  0100               	movlb	0	; () banked
  8560  0006D0  6F88               	movwf	GetNumber@result& (0+255),b
  8561  0006D2  0E02               	movlw	high UseBluetooth@temp
  8562  0006D4  0100               	movlb	0	; () banked
  8563  0006D6  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8564  0006D8  EC90  F023         	call	_GetNumber	;wreg free
  8565  0006DC  0900               	iorlw	0
  8566  0006DE  A4D8               	btfss	status,2,c
  8567  0006E0  D0C9               	goto	l15342
  8568                           
  8569                           ;Bluetooth.c: 397: {
  8570                           ;Bluetooth.c: 398: if(temp > 0xFF)
  8571  0006E2  0102               	movlb	2	; () banked
  8572  0006E4  5182               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8573  0006E6  0102               	movlb	2	; () banked
  8574  0006E8  1181               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8575  0006EA  E104               	bnz	u19030
  8576  0006EC  0102               	movlb	2	; () banked
  8577  0006EE  0580               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8578  0006F0  A0D8               	btfss	status,0,c
  8579  0006F2  D011               	goto	l1859
  8580  0006F4                     u19030:
  8581                           
  8582                           ; BSR set to: 2
  8583                           ;Bluetooth.c: 399: {
  8584                           ;Bluetooth.c: 400: UARTstringCRLN((unsigned char *)"Error: Command larger that 255");
  8585  0006F4  0E42               	movlw	low STR_25
  8586  0006F6  0100               	movlb	0	; () banked
  8587  0006F8  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8588  0006FA  0EFA               	movlw	high STR_25
  8589  0006FC  0100               	movlb	0	; () banked
  8590  0006FE  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8591  000700  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8592                           
  8593                           ;Bluetooth.c: 401: UARTstring(CRLN);
  8594  000704  0EFE               	movlw	low _CRLN
  8595  000706  0100               	movlb	0	; () banked
  8596  000708  6F7A               	movwf	UARTstring@data& (0+255),b
  8597  00070A  0EF3               	movlw	high _CRLN
  8598  00070C  0100               	movlb	0	; () banked
  8599  00070E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8600  000710  ECE7  F045         	call	_UARTstring	;wreg free
  8601                           
  8602                           ;Bluetooth.c: 402: return 0;
  8603                           ;	Return value of _UseBluetooth is never used
  8604  000714  0012               	return	
  8605  000716                     l1859:
  8606                           
  8607                           ; BSR set to: 2
  8608                           ;Bluetooth.c: 403: }
  8609                           ;Bluetooth.c: 404: NecCommand = (unsigned char)temp;
  8610  000716  C27F  F27E         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  8611                           
  8612                           ; BSR set to: 2
  8613                           ;Bluetooth.c: 405: if(!GetNumber(String, 1, &temp))
  8614  00071A  C18C  F085         	movff	UseBluetooth@String,GetNumber@This
  8615  00071E  C18D  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8616  000722  0E01               	movlw	1
  8617  000724  0100               	movlb	0	; () banked
  8618  000726  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8619  000728  0E7F               	movlw	low UseBluetooth@temp
  8620  00072A  0100               	movlb	0	; () banked
  8621  00072C  6F88               	movwf	GetNumber@result& (0+255),b
  8622  00072E  0E02               	movlw	high UseBluetooth@temp
  8623  000730  0100               	movlb	0	; () banked
  8624  000732  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8625  000734  EC90  F023         	call	_GetNumber	;wreg free
  8626  000738  0900               	iorlw	0
  8627  00073A  A4D8               	btfss	status,2,c
  8628  00073C  D092               	goto	l15340
  8629                           
  8630                           ;Bluetooth.c: 406: {
  8631                           ;Bluetooth.c: 407: if(temp > 0xFF)
  8632  00073E  0102               	movlb	2	; () banked
  8633  000740  5182               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8634  000742  0102               	movlb	2	; () banked
  8635  000744  1181               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8636  000746  E104               	bnz	u19050
  8637  000748  0102               	movlb	2	; () banked
  8638  00074A  0580               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8639  00074C  A0D8               	btfss	status,0,c
  8640  00074E  D011               	goto	l1861
  8641  000750                     u19050:
  8642                           
  8643                           ; BSR set to: 2
  8644                           ;Bluetooth.c: 408: {
  8645                           ;Bluetooth.c: 409: UARTstringCRLN((unsigned char *)"Error: Address larger that 255");
  8646  000750  0E61               	movlw	low STR_26
  8647  000752  0100               	movlb	0	; () banked
  8648  000754  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8649  000756  0EFA               	movlw	high STR_26
  8650  000758  0100               	movlb	0	; () banked
  8651  00075A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8652  00075C  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8653                           
  8654                           ;Bluetooth.c: 410: UARTstring(CRLN);
  8655  000760  0EFE               	movlw	low _CRLN
  8656  000762  0100               	movlb	0	; () banked
  8657  000764  6F7A               	movwf	UARTstring@data& (0+255),b
  8658  000766  0EF3               	movlw	high _CRLN
  8659  000768  0100               	movlb	0	; () banked
  8660  00076A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8661  00076C  ECE7  F045         	call	_UARTstring	;wreg free
  8662                           
  8663                           ;Bluetooth.c: 411: return 0;
  8664                           ;	Return value of _UseBluetooth is never used
  8665  000770  0012               	return	
  8666  000772                     l1861:
  8667                           
  8668                           ; BSR set to: 2
  8669                           ;Bluetooth.c: 412: }
  8670                           ;Bluetooth.c: 413: NecAddress = (unsigned char) temp;
  8671  000772  C27F  F27D         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  8672                           
  8673                           ; BSR set to: 2
  8674                           ;Bluetooth.c: 414: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
  8675  000776  0E00               	movlw	low UseBluetooth@buf
  8676  000778  0100               	movlb	0	; () banked
  8677  00077A  6FC7               	movwf	sprintf@sp& (0+255),b
  8678  00077C  0E02               	movlw	high UseBluetooth@buf
  8679  00077E  0100               	movlb	0	; () banked
  8680  000780  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8681  000782  0EE7               	movlw	low STR_27
  8682  000784  0100               	movlb	0	; () banked
  8683  000786  6FC9               	movwf	sprintf@f& (0+255),b
  8684  000788  0EFC               	movlw	high STR_27
  8685  00078A  0100               	movlb	0	; () banked
  8686  00078C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8687  00078E  C27D  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8688  000792  0100               	movlb	0	; () banked
  8689  000794  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8690  000796  EC7B  F010         	call	_sprintf	;wreg free
  8691                           
  8692                           ;Bluetooth.c: 415: UARTstringCRLN(buf);
  8693  00079A  0E00               	movlw	low UseBluetooth@buf
  8694  00079C  0100               	movlb	0	; () banked
  8695  00079E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8696  0007A0  0E02               	movlw	high UseBluetooth@buf
  8697  0007A2  0100               	movlb	0	; () banked
  8698  0007A4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8699  0007A6  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8700                           
  8701                           ;Bluetooth.c: 416: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
  8702  0007AA  0E00               	movlw	low UseBluetooth@buf
  8703  0007AC  0100               	movlb	0	; () banked
  8704  0007AE  6FC7               	movwf	sprintf@sp& (0+255),b
  8705  0007B0  0E02               	movlw	high UseBluetooth@buf
  8706  0007B2  0100               	movlb	0	; () banked
  8707  0007B4  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8708  0007B6  0ED2               	movlw	low STR_28
  8709  0007B8  0100               	movlb	0	; () banked
  8710  0007BA  6FC9               	movwf	sprintf@f& (0+255),b
  8711  0007BC  0EFC               	movlw	high STR_28
  8712  0007BE  0100               	movlb	0	; () banked
  8713  0007C0  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8714  0007C2  C27E  F0CB         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8715  0007C6  0100               	movlb	0	; () banked
  8716  0007C8  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8717  0007CA  EC7B  F010         	call	_sprintf	;wreg free
  8718                           
  8719                           ;Bluetooth.c: 417: UARTstringCRLN(buf);
  8720  0007CE  0E00               	movlw	low UseBluetooth@buf
  8721  0007D0  0100               	movlb	0	; () banked
  8722  0007D2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8723  0007D4  0E02               	movlw	high UseBluetooth@buf
  8724  0007D6  0100               	movlb	0	; () banked
  8725  0007D8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8726  0007DA  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8727                           
  8728                           ;Bluetooth.c: 418: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  8729  0007DE  C27E  F07D         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  8730  0007E2  0102               	movlb	2	; () banked
  8731  0007E4  517D               	movf	UseBluetooth@NecAddress& (0+255),w,b
  8732  0007E6  EC99  F038         	call	_EncodeNEC
  8733  0007EA  C07D  F276         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  8734  0007EE  C07E  F277         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  8735  0007F2  C07F  F278         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  8736  0007F6  C080  F279         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  8737                           
  8738                           ;Bluetooth.c: 419: SendNEC_wait(EnteredNEC,0);
  8739  0007FA  C276  F08E         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8740  0007FE  C277  F08F         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8741  000802  C278  F090         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8742  000806  C279  F091         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8743  00080A  0E00               	movlw	0
  8744  00080C  0100               	movlb	0	; () banked
  8745  00080E  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8746  000810  EC4E  F042         	call	_SendNEC_wait	;wreg free
  8747                           
  8748                           ;Bluetooth.c: 420: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  8749  000814  0E00               	movlw	low UseBluetooth@buf
  8750  000816  0100               	movlb	0	; () banked
  8751  000818  6FC7               	movwf	sprintf@sp& (0+255),b
  8752  00081A  0E02               	movlw	high UseBluetooth@buf
  8753  00081C  0100               	movlb	0	; () banked
  8754  00081E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8755  000820  0E63               	movlw	low STR_29
  8756  000822  0100               	movlb	0	; () banked
  8757  000824  6FC9               	movwf	sprintf@f& (0+255),b
  8758  000826  0EFC               	movlw	high STR_29
  8759  000828  0100               	movlb	0	; () banked
  8760  00082A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8761  00082C  C276  F0CB         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8762  000830  C277  F0CC         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8763  000834  C278  F0CD         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8764  000838  C279  F0CE         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8765  00083C  EC7B  F010         	call	_sprintf	;wreg free
  8766                           
  8767                           ;Bluetooth.c: 421: UARTstringCRLN(buf);
  8768  000840  0E00               	movlw	low UseBluetooth@buf
  8769  000842  0100               	movlb	0	; () banked
  8770  000844  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8771  000846  0E02               	movlw	high UseBluetooth@buf
  8772  000848  0100               	movlb	0	; () banked
  8773  00084A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8774  00084C  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8775                           
  8776                           ;Bluetooth.c: 422: UARTstring(CRLN);
  8777  000850  0EFE               	movlw	low _CRLN
  8778  000852  0100               	movlb	0	; () banked
  8779  000854  6F7A               	movwf	UARTstring@data& (0+255),b
  8780  000856  0EF3               	movlw	high _CRLN
  8781  000858  0100               	movlb	0	; () banked
  8782  00085A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8783  00085C  ECE7  F045         	call	_UARTstring	;wreg free
  8784                           
  8785                           ;Bluetooth.c: 423: }
  8786  000860  0012               	return	
  8787  000862                     l15340:
  8788                           
  8789                           ;Bluetooth.c: 424: else
  8790                           ;Bluetooth.c: 425: {
  8791                           ;Bluetooth.c: 426: UARTstringCRLN((unsigned char *)"Error: could not decode Address");
  8792  000862  0E22               	movlw	low STR_30
  8793  000864  0100               	movlb	0	; () banked
  8794  000866  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8795  000868  0EFA               	movlw	high STR_30
  8796  00086A  0100               	movlb	0	; () banked
  8797  00086C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8798  00086E  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8799                           
  8800                           ;Bluetooth.c: 427: }
  8801                           ;Bluetooth.c: 428: }
  8802  000872  0012               	return	
  8803  000874                     l15342:
  8804                           
  8805                           ;Bluetooth.c: 429: else if(!GetNumber(String, 1, &EnteredNEC))
  8806  000874  C18C  F085         	movff	UseBluetooth@String,GetNumber@This
  8807  000878  C18D  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  8808  00087C  0E01               	movlw	1
  8809  00087E  0100               	movlb	0	; () banked
  8810  000880  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  8811  000882  0E76               	movlw	low UseBluetooth@EnteredNEC
  8812  000884  0100               	movlb	0	; () banked
  8813  000886  6F88               	movwf	GetNumber@result& (0+255),b
  8814  000888  0E02               	movlw	high UseBluetooth@EnteredNEC
  8815  00088A  0100               	movlb	0	; () banked
  8816  00088C  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  8817  00088E  EC90  F023         	call	_GetNumber	;wreg free
  8818  000892  0900               	iorlw	0
  8819  000894  A4D8               	btfss	status,2,c
  8820  000896  D08A               	goto	l15364
  8821                           
  8822                           ;Bluetooth.c: 430: {
  8823                           ;Bluetooth.c: 431: SendNEC_wait(EnteredNEC,0);
  8824  000898  C276  F08E         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8825  00089C  C277  F08F         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8826  0008A0  C278  F090         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8827  0008A4  C279  F091         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8828  0008A8  0E00               	movlw	0
  8829  0008AA  0100               	movlb	0	; () banked
  8830  0008AC  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8831  0008AE  EC4E  F042         	call	_SendNEC_wait	;wreg free
  8832                           
  8833                           ;Bluetooth.c: 432: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
  8834  0008B2  0E00               	movlw	low UseBluetooth@buf
  8835  0008B4  0100               	movlb	0	; () banked
  8836  0008B6  6FC7               	movwf	sprintf@sp& (0+255),b
  8837  0008B8  0E02               	movlw	high UseBluetooth@buf
  8838  0008BA  0100               	movlb	0	; () banked
  8839  0008BC  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8840  0008BE  0E63               	movlw	low STR_31
  8841  0008C0  0100               	movlb	0	; () banked
  8842  0008C2  6FC9               	movwf	sprintf@f& (0+255),b
  8843  0008C4  0EFD               	movlw	high STR_31
  8844  0008C6  0100               	movlb	0	; () banked
  8845  0008C8  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8846  0008CA  C276  F0CB         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8847  0008CE  C277  F0CC         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8848  0008D2  C278  F0CD         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8849  0008D6  C279  F0CE         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8850  0008DA  EC7B  F010         	call	_sprintf	;wreg free
  8851                           
  8852                           ;Bluetooth.c: 433: UARTstringCRLN(buf);
  8853  0008DE  0E00               	movlw	low UseBluetooth@buf
  8854  0008E0  0100               	movlb	0	; () banked
  8855  0008E2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8856  0008E4  0E02               	movlw	high UseBluetooth@buf
  8857  0008E6  0100               	movlb	0	; () banked
  8858  0008E8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8859  0008EA  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8860                           
  8861                           ;Bluetooth.c: 434: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  8862  0008EE  C276  F07D         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  8863  0008F2  C277  F07E         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  8864  0008F6  C278  F07F         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  8865  0008FA  C279  F080         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  8866  0008FE  0E7D               	movlw	low UseBluetooth@NecAddress
  8867  000900  0100               	movlb	0	; () banked
  8868  000902  6F81               	movwf	DecodeNEC@address& (0+255),b
  8869  000904  0E02               	movlw	high UseBluetooth@NecAddress
  8870  000906  0100               	movlb	0	; () banked
  8871  000908  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  8872  00090A  0E7E               	movlw	low UseBluetooth@NecCommand
  8873  00090C  0100               	movlb	0	; () banked
  8874  00090E  6F83               	movwf	DecodeNEC@command& (0+255),b
  8875  000910  0E02               	movlw	high UseBluetooth@NecCommand
  8876  000912  0100               	movlb	0	; () banked
  8877  000914  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  8878  000916  EC03  F041         	call	_DecodeNEC	;wreg free
  8879  00091A  0900               	iorlw	0
  8880  00091C  B4D8               	btfsc	status,2,c
  8881  00091E  D035               	goto	l15358
  8882                           
  8883                           ;Bluetooth.c: 435: {
  8884                           ;Bluetooth.c: 436: sprintf(buf,"address: 0x%02X ", NecAddress);
  8885  000920  0E00               	movlw	low UseBluetooth@buf
  8886  000922  0100               	movlb	0	; () banked
  8887  000924  6FC7               	movwf	sprintf@sp& (0+255),b
  8888  000926  0E02               	movlw	high UseBluetooth@buf
  8889  000928  0100               	movlb	0	; () banked
  8890  00092A  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8891  00092C  0EEB               	movlw	low (STR_27+4)
  8892  00092E  0100               	movlb	0	; () banked
  8893  000930  6FC9               	movwf	sprintf@f& (0+255),b
  8894  000932  0EFC               	movlw	high (STR_27+4)
  8895  000934  0100               	movlb	0	; () banked
  8896  000936  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8897  000938  C27D  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8898  00093C  0100               	movlb	0	; () banked
  8899  00093E  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8900  000940  EC7B  F010         	call	_sprintf	;wreg free
  8901                           
  8902                           ;Bluetooth.c: 437: UARTstringCRLN(buf);
  8903  000944  0E00               	movlw	low UseBluetooth@buf
  8904  000946  0100               	movlb	0	; () banked
  8905  000948  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8906  00094A  0E02               	movlw	high UseBluetooth@buf
  8907  00094C  0100               	movlb	0	; () banked
  8908  00094E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8909  000950  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8910                           
  8911                           ;Bluetooth.c: 438: sprintf(buf,"command: 0x%02X ", NecCommand);
  8912  000954  0E00               	movlw	low UseBluetooth@buf
  8913  000956  0100               	movlb	0	; () banked
  8914  000958  6FC7               	movwf	sprintf@sp& (0+255),b
  8915  00095A  0E02               	movlw	high UseBluetooth@buf
  8916  00095C  0100               	movlb	0	; () banked
  8917  00095E  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  8918  000960  0EF0               	movlw	low (STR_47+27)
  8919  000962  0100               	movlb	0	; () banked
  8920  000964  6FC9               	movwf	sprintf@f& (0+255),b
  8921  000966  0EF7               	movlw	high (STR_47+27)
  8922  000968  0100               	movlb	0	; () banked
  8923  00096A  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  8924  00096C  C27E  F0CB         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8925  000970  0100               	movlb	0	; () banked
  8926  000972  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  8927  000974  EC7B  F010         	call	_sprintf	;wreg free
  8928                           
  8929                           ;Bluetooth.c: 439: UARTstringCRLN(buf);
  8930  000978  0E00               	movlw	low UseBluetooth@buf
  8931  00097A  0100               	movlb	0	; () banked
  8932  00097C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8933  00097E  0E02               	movlw	high UseBluetooth@buf
  8934  000980  0100               	movlb	0	; () banked
  8935  000982  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8936  000984  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8937                           
  8938                           ;Bluetooth.c: 440: }
  8939  000988  D008               	goto	l1866
  8940  00098A                     l15358:
  8941                           
  8942                           ;Bluetooth.c: 441: else
  8943                           ;Bluetooth.c: 442: {
  8944                           ;Bluetooth.c: 443: UARTstringCRLN((unsigned char *)"Error: could not decode NEC code");
  8945  00098A  0E61               	movlw	low STR_34
  8946  00098C  0100               	movlb	0	; () banked
  8947  00098E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8948  000990  0EF9               	movlw	high STR_34
  8949  000992  0100               	movlb	0	; () banked
  8950  000994  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8951  000996  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8952  00099A                     l1866:
  8953                           
  8954                           ;Bluetooth.c: 444: }
  8955                           ;Bluetooth.c: 445: UARTstring(CRLN);
  8956  00099A  0EFE               	movlw	low _CRLN
  8957  00099C  0100               	movlb	0	; () banked
  8958  00099E  6F7A               	movwf	UARTstring@data& (0+255),b
  8959  0009A0  0EF3               	movlw	high _CRLN
  8960  0009A2  0100               	movlb	0	; () banked
  8961  0009A4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8962  0009A6  ECE7  F045         	call	_UARTstring	;wreg free
  8963                           
  8964                           ;Bluetooth.c: 447: }
  8965                           
  8966                           ;Bluetooth.c: 446: return 1;
  8967                           ;	Return value of _UseBluetooth is never used
  8968  0009AA  0012               	return	
  8969  0009AC                     l15364:
  8970                           
  8971                           ;Bluetooth.c: 448: else
  8972                           ;Bluetooth.c: 449: {
  8973                           ;Bluetooth.c: 450: UARTstring(CRLN);
  8974  0009AC  0EFE               	movlw	low _CRLN
  8975  0009AE  0100               	movlb	0	; () banked
  8976  0009B0  6F7A               	movwf	UARTstring@data& (0+255),b
  8977  0009B2  0EF3               	movlw	high _CRLN
  8978  0009B4  0100               	movlb	0	; () banked
  8979  0009B6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8980  0009B8  ECE7  F045         	call	_UARTstring	;wreg free
  8981                           
  8982                           ;Bluetooth.c: 451: UARTstringCRLN((unsigned char *)"NEC code not entered correctly");
  8983  0009BC  0E1B               	movlw	low STR_35
  8984  0009BE  0100               	movlb	0	; () banked
  8985  0009C0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  8986  0009C2  0EFB               	movlw	high STR_35
  8987  0009C4  0100               	movlb	0	; () banked
  8988  0009C6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8989  0009C8  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  8990                           
  8991                           ;Bluetooth.c: 452: UARTstring(CRLN);
  8992  0009CC  0EFE               	movlw	low _CRLN
  8993  0009CE  0100               	movlb	0	; () banked
  8994  0009D0  6F7A               	movwf	UARTstring@data& (0+255),b
  8995  0009D2  0EF3               	movlw	high _CRLN
  8996  0009D4  0100               	movlb	0	; () banked
  8997  0009D6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  8998  0009D8  ECE7  F045         	call	_UARTstring	;wreg free
  8999                           
  9000                           ;Bluetooth.c: 453: UARTstringCRLN((unsigned char *)"Usage:");
  9001  0009DC  0EB2               	movlw	low STR_36
  9002  0009DE  0100               	movlb	0	; () banked
  9003  0009E0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9004  0009E2  0EFF               	movlw	high STR_36
  9005  0009E4  0100               	movlb	0	; () banked
  9006  0009E6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9007  0009E8  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9008                           
  9009                           ;Bluetooth.c: 454: UARTstringCRLN((unsigned char *)"NEC = (32 bit code)");
  9010  0009EC  0E3B               	movlw	low STR_37
  9011  0009EE  0100               	movlb	0	; () banked
  9012  0009F0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9013  0009F2  0EFD               	movlw	high STR_37
  9014  0009F4  0100               	movlb	0	; () banked
  9015  0009F6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9016  0009F8  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9017                           
  9018                           ;Bluetooth.c: 455: UARTstringCRLN((unsigned char *)"        or");
  9019  0009FC  0E69               	movlw	low STR_38
  9020  0009FE  0100               	movlb	0	; () banked
  9021  000A00  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9022  000A02  0EFF               	movlw	high STR_38
  9023  000A04  0100               	movlb	0	; () banked
  9024  000A06  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9025  000A08  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9026                           
  9027                           ;Bluetooth.c: 456: UARTstringCRLN((unsigned char *)"NEC = address,command");
  9028  000A0C  0EA7               	movlw	low STR_39
  9029  000A0E  0100               	movlb	0	; () banked
  9030  000A10  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9031  000A12  0EFC               	movlw	high STR_39
  9032  000A14  0100               	movlb	0	; () banked
  9033  000A16  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9034  000A18  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9035                           
  9036                           ;Bluetooth.c: 457: UARTstring(CRLN);
  9037  000A1C  0EFE               	movlw	low _CRLN
  9038  000A1E  0100               	movlb	0	; () banked
  9039  000A20  6F7A               	movwf	UARTstring@data& (0+255),b
  9040  000A22  0EF3               	movlw	high _CRLN
  9041  000A24  0100               	movlb	0	; () banked
  9042  000A26  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9043  000A28  ECE7  F045         	call	_UARTstring	;wreg free
  9044                           
  9045                           ;Bluetooth.c: 458: UARTstringCRLN((unsigned char *)"Example:");
  9046  000A2C  0E91               	movlw	low STR_40
  9047  000A2E  0100               	movlb	0	; () banked
  9048  000A30  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9049  000A32  0EFF               	movlw	high STR_40
  9050  000A34  0100               	movlb	0	; () banked
  9051  000A36  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9052  000A38  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9053                           
  9054                           ;Bluetooth.c: 459: UARTstringCRLN((unsigned char *)"NEC = 0x1CE350af ");
  9055  000A3C  0EFE               	movlw	low STR_41
  9056  000A3E  0100               	movlb	0	; () banked
  9057  000A40  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9058  000A42  0EFD               	movlw	high STR_41
  9059  000A44  0100               	movlb	0	; () banked
  9060  000A46  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9061  000A48  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9062                           
  9063                           ;Bluetooth.c: 460: UARTstringCRLN((unsigned char *)"      or");
  9064  000A4C  0E6B               	movlw	low (STR_38+2)
  9065  000A4E  0100               	movlb	0	; () banked
  9066  000A50  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9067  000A52  0EFF               	movlw	high (STR_38+2)
  9068  000A54  0100               	movlb	0	; () banked
  9069  000A56  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9070  000A58  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9071                           
  9072                           ;Bluetooth.c: 461: UARTstringCRLN((unsigned char *)"NEC = 0x38, 0x0A");
  9073  000A5C  0E56               	movlw	low STR_43
  9074  000A5E  0100               	movlb	0	; () banked
  9075  000A60  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9076  000A62  0EFE               	movlw	high STR_43
  9077  000A64  0100               	movlb	0	; () banked
  9078  000A66  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9079  000A68  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9080                           
  9081                           ;Bluetooth.c: 462: UARTstring(CRLN);
  9082  000A6C  0EFE               	movlw	low _CRLN
  9083  000A6E  0100               	movlb	0	; () banked
  9084  000A70  6F7A               	movwf	UARTstring@data& (0+255),b
  9085  000A72  0EF3               	movlw	high _CRLN
  9086  000A74  0100               	movlb	0	; () banked
  9087  000A76  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9088  000A78  ECE7  F045         	call	_UARTstring	;wreg free
  9089                           
  9090                           ;Bluetooth.c: 464: }
  9091                           ;Bluetooth.c: 465: }
  9092                           
  9093                           ;Bluetooth.c: 463: return 0;
  9094                           ;	Return value of _UseBluetooth is never used
  9095  000A7C  0012               	return	
  9096  000A7E                     l15368:
  9097                           
  9098                           ;Bluetooth.c: 466: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Remote
      +                          Button"))
  9099  000A7E  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9100  000A82  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9101  000A86  0E1A               	movlw	low STR_44
  9102  000A88  0100               	movlb	0	; () banked
  9103  000A8A  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9104  000A8C  0EFF               	movlw	high STR_44
  9105  000A8E  0100               	movlb	0	; () banked
  9106  000A90  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9107  000A92  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  9108  000A96  0900               	iorlw	0
  9109  000A98  B4D8               	btfsc	status,2,c
  9110  000A9A  D2C8               	goto	l15456
  9111                           
  9112                           ;Bluetooth.c: 467: {
  9113                           ;Bluetooth.c: 468: if(StringAddEqual(String))
  9114  000A9C  C18C  F088         	movff	UseBluetooth@String,StringAddEqual@Input
  9115  000AA0  C18D  F089         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
  9116  000AA4  EC9B  F032         	call	_StringAddEqual	;wreg free
  9117  000AA8  0900               	iorlw	0
  9118  000AAA  B4D8               	btfsc	status,2,c
  9119  000AAC  D266               	goto	l15450
  9120                           
  9121                           ;Bluetooth.c: 469: {
  9122                           ;Bluetooth.c: 470: StringPos++;
  9123  000AAE  0101               	movlb	1	; () banked
  9124  000AB0  2B8E               	incf	UseBluetooth@StringPos& (0+255),f,b
  9125                           
  9126                           ; BSR set to: 1
  9127                           ;Bluetooth.c: 471: if(!GetNumber(String, 1, &temp))
  9128  000AB2  C18C  F085         	movff	UseBluetooth@String,GetNumber@This
  9129  000AB6  C18D  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
  9130  000ABA  0E01               	movlw	1
  9131  000ABC  0100               	movlb	0	; () banked
  9132  000ABE  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
  9133  000AC0  0E7F               	movlw	low UseBluetooth@temp
  9134  000AC2  0100               	movlb	0	; () banked
  9135  000AC4  6F88               	movwf	GetNumber@result& (0+255),b
  9136  000AC6  0E02               	movlw	high UseBluetooth@temp
  9137  000AC8  0100               	movlb	0	; () banked
  9138  000ACA  6F89               	movwf	(GetNumber@result+1)& (0+255),b
  9139  000ACC  EC90  F023         	call	_GetNumber	;wreg free
  9140  000AD0  0900               	iorlw	0
  9141  000AD2  A4D8               	btfss	status,2,c
  9142  000AD4  D252               	goto	l15450
  9143                           
  9144                           ;Bluetooth.c: 472: {
  9145                           ;Bluetooth.c: 473: if(temp <= 20 && temp > 0)
  9146  000AD6  0102               	movlb	2	; () banked
  9147  000AD8  5182               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9148  000ADA  0102               	movlb	2	; () banked
  9149  000ADC  1181               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9150  000ADE  0102               	movlb	2	; () banked
  9151  000AE0  1180               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9152  000AE2  E104               	bnz	u19111
  9153  000AE4  0E15               	movlw	21
  9154  000AE6  0102               	movlb	2	; () banked
  9155  000AE8  5D7F               	subwf	UseBluetooth@temp& (0+255),w,b
  9156  000AEA  B0D8               	btfsc	status,0,c
  9157  000AEC                     u19111:
  9158  000AEC  D22C               	goto	l15446
  9159                           
  9160                           ; BSR set to: 2
  9161  000AEE  0102               	movlb	2	; () banked
  9162  000AF0  517F               	movf	UseBluetooth@temp& (0+255),w,b
  9163  000AF2  0102               	movlb	2	; () banked
  9164  000AF4  1180               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9165  000AF6  0102               	movlb	2	; () banked
  9166  000AF8  1181               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9167  000AFA  0102               	movlb	2	; () banked
  9168  000AFC  1182               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
  9169  000AFE  B4D8               	btfsc	status,2,c
  9170  000B00  D222               	goto	l15446
  9171                           
  9172                           ; BSR set to: 2
  9173                           ;Bluetooth.c: 474: {
  9174                           ;Bluetooth.c: 475: if(!StringContainsCaseInsensitive(String,(unsigned char *)"set"))
  9175  000B02  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9176  000B06  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9177  000B0A  0E9B               	movlw	low (STR_55+16)
  9178  000B0C  0100               	movlb	0	; () banked
  9179  000B0E  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9180  000B10  0EFD               	movlw	high (STR_55+16)
  9181  000B12  0100               	movlb	0	; () banked
  9182  000B14  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9183  000B16  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  9184  000B1A  0900               	iorlw	0
  9185  000B1C  A4D8               	btfss	status,2,c
  9186  000B1E  D123               	goto	l15406
  9187                           
  9188                           ;Bluetooth.c: 476: {
  9189                           ;Bluetooth.c: 477: tempNec = EncodeNEC(Global.RemoteButtonNEC[temp-1][0], Global.RemoteB
      +                          uttonNEC[temp-1][1]);
  9190  000B20  0EFE               	movlw	254
  9191  000B22  0101               	movlb	1	; () banked
  9192  000B24  6F8F               	movwf	??_UseBluetooth& (0+255),b
  9193  000B26  0EFF               	movlw	255
  9194  000B28  0101               	movlb	1	; () banked
  9195  000B2A  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
  9196  000B2C  C27F  F191         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9197  000B30  C280  F192         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9198  000B34  90D8               	bcf	status,0,c
  9199  000B36  0101               	movlb	1	; () banked
  9200  000B38  3791               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9201  000B3A  3792               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9202  000B3C  0101               	movlb	1	; () banked
  9203  000B3E  518F               	movf	??_UseBluetooth& (0+255),w,b
  9204  000B40  0101               	movlb	1	; () banked
  9205  000B42  2791               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9206  000B44  0101               	movlb	1	; () banked
  9207  000B46  5190               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9208  000B48  0101               	movlb	1	; () banked
  9209  000B4A  2392               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9210  000B4C  0E00               	movlw	low _Global
  9211  000B4E  0101               	movlb	1	; () banked
  9212  000B50  6F93               	movwf	(??_UseBluetooth+4)& (0+255),b
  9213  000B52  0E04               	movlw	high _Global
  9214  000B54  0101               	movlb	1	; () banked
  9215  000B56  6F94               	movwf	(??_UseBluetooth+5)& (0+255),b
  9216  000B58  0E05               	movlw	5
  9217  000B5A  0101               	movlb	1	; () banked
  9218  000B5C  2793               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9219  000B5E  0E00               	movlw	0
  9220  000B60  2394               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9221  000B62  0101               	movlb	1	; () banked
  9222  000B64  5191               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9223  000B66  0101               	movlb	1	; () banked
  9224  000B68  2793               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9225  000B6A  0101               	movlb	1	; () banked
  9226  000B6C  5192               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9227  000B6E  0101               	movlb	1	; () banked
  9228  000B70  2394               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9229  000B72  0E01               	movlw	1
  9230  000B74  0101               	movlb	1	; () banked
  9231  000B76  2593               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9232  000B78  6ED9               	movwf	fsr2l,c
  9233  000B7A  0E00               	movlw	0
  9234  000B7C  0101               	movlb	1	; () banked
  9235  000B7E  2194               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9236  000B80  6EDA               	movwf	fsr2h,c
  9237  000B82  50DF               	movf	indf2,w,c
  9238  000B84  0100               	movlb	0	; () banked
  9239  000B86  6F7D               	movwf	EncodeNEC@command& (0+255),b
  9240  000B88  0EFE               	movlw	254
  9241  000B8A  0101               	movlb	1	; () banked
  9242  000B8C  6F95               	movwf	(??_UseBluetooth+6)& (0+255),b
  9243  000B8E  0EFF               	movlw	255
  9244  000B90  0101               	movlb	1	; () banked
  9245  000B92  6F96               	movwf	(??_UseBluetooth+7)& (0+255),b
  9246  000B94  C27F  F197         	movff	UseBluetooth@temp,??_UseBluetooth+8
  9247  000B98  C280  F198         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
  9248  000B9C  90D8               	bcf	status,0,c
  9249  000B9E  0101               	movlb	1	; () banked
  9250  000BA0  3797               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9251  000BA2  3798               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
  9252  000BA4  0101               	movlb	1	; () banked
  9253  000BA6  5195               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9254  000BA8  0101               	movlb	1	; () banked
  9255  000BAA  2797               	addwf	(??_UseBluetooth+8)& (0+255),f,b
  9256  000BAC  0101               	movlb	1	; () banked
  9257  000BAE  5196               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9258  000BB0  0101               	movlb	1	; () banked
  9259  000BB2  2398               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
  9260  000BB4  0E05               	movlw	low (_Global+5)
  9261  000BB6  0101               	movlb	1	; () banked
  9262  000BB8  2597               	addwf	(??_UseBluetooth+8)& (0+255),w,b
  9263  000BBA  6ED9               	movwf	fsr2l,c
  9264  000BBC  0E04               	movlw	high (_Global+5)
  9265  000BBE  0101               	movlb	1	; () banked
  9266  000BC0  2198               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
  9267  000BC2  6EDA               	movwf	fsr2h,c
  9268  000BC4  50DF               	movf	indf2,w,c
  9269  000BC6  EC99  F038         	call	_EncodeNEC
  9270  000BCA  C07D  F26F         	movff	?_EncodeNEC,UseBluetooth@tempNec
  9271  000BCE  C07E  F270         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
  9272  000BD2  C07F  F271         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
  9273  000BD6  C080  F272         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
  9274                           
  9275                           ;Bluetooth.c: 478: if(tempNec != 0x00FF00FF)
  9276  000BDA  0102               	movlb	2	; () banked
  9277  000BDC  296F               	incf	UseBluetooth@tempNec& (0+255),w,b
  9278  000BDE  E108               	bnz	u19140
  9279  000BE0  0102               	movlb	2	; () banked
  9280  000BE2  2971               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
  9281  000BE4  0102               	movlb	2	; () banked
  9282  000BE6  1170               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
  9283  000BE8  0102               	movlb	2	; () banked
  9284  000BEA  1172               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
  9285  000BEC  B4D8               	btfsc	status,2,c
  9286  000BEE  D0A9               	goto	l15400
  9287  000BF0                     u19140:
  9288                           
  9289                           ; BSR set to: 2
  9290                           ;Bluetooth.c: 479: {
  9291                           ;Bluetooth.c: 480: SendNEC_wait(tempNec,0);
  9292  000BF0  C26F  F08E         	movff	UseBluetooth@tempNec,SendNEC_wait@code
  9293  000BF4  C270  F08F         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
  9294  000BF8  C271  F090         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
  9295  000BFC  C272  F091         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
  9296  000C00  0E00               	movlw	0
  9297  000C02  0100               	movlb	0	; () banked
  9298  000C04  6F92               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9299  000C06  EC4E  F042         	call	_SendNEC_wait	;wreg free
  9300                           
  9301                           ;Bluetooth.c: 481: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
  9302  000C0A  0E00               	movlw	low UseBluetooth@buf
  9303  000C0C  0100               	movlb	0	; () banked
  9304  000C0E  6FC7               	movwf	sprintf@sp& (0+255),b
  9305  000C10  0E02               	movlw	high UseBluetooth@buf
  9306  000C12  0100               	movlb	0	; () banked
  9307  000C14  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9308  000C16  0EFC               	movlw	low STR_46
  9309  000C18  0100               	movlb	0	; () banked
  9310  000C1A  6FC9               	movwf	sprintf@f& (0+255),b
  9311  000C1C  0EFC               	movlw	high STR_46
  9312  000C1E  0100               	movlb	0	; () banked
  9313  000C20  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9314  000C22  C26F  F0CB         	movff	UseBluetooth@tempNec,?_sprintf+4
  9315  000C26  C270  F0CC         	movff	UseBluetooth@tempNec+1,?_sprintf+5
  9316  000C2A  C271  F0CD         	movff	UseBluetooth@tempNec+2,?_sprintf+6
  9317  000C2E  C272  F0CE         	movff	UseBluetooth@tempNec+3,?_sprintf+7
  9318  000C32  EC7B  F010         	call	_sprintf	;wreg free
  9319                           
  9320                           ;Bluetooth.c: 482: UARTstringCRLN(buf);
  9321  000C36  0E00               	movlw	low UseBluetooth@buf
  9322  000C38  0100               	movlb	0	; () banked
  9323  000C3A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9324  000C3C  0E02               	movlw	high UseBluetooth@buf
  9325  000C3E  0100               	movlb	0	; () banked
  9326  000C40  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9327  000C42  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9328                           
  9329                           ;Bluetooth.c: 483: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global.Remo
      +                          teButtonNEC[temp-1][0], Global.RemoteButtonNEC[temp-1][1]);
  9330  000C46  0E00               	movlw	low UseBluetooth@buf
  9331  000C48  0100               	movlb	0	; () banked
  9332  000C4A  6FC7               	movwf	sprintf@sp& (0+255),b
  9333  000C4C  0E02               	movlw	high UseBluetooth@buf
  9334  000C4E  0100               	movlb	0	; () banked
  9335  000C50  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9336  000C52  0ED5               	movlw	low STR_47
  9337  000C54  0100               	movlb	0	; () banked
  9338  000C56  6FC9               	movwf	sprintf@f& (0+255),b
  9339  000C58  0EF7               	movlw	high STR_47
  9340  000C5A  0100               	movlb	0	; () banked
  9341  000C5C  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9342  000C5E  0EFE               	movlw	254
  9343  000C60  0101               	movlb	1	; () banked
  9344  000C62  6F8F               	movwf	??_UseBluetooth& (0+255),b
  9345  000C64  0EFF               	movlw	255
  9346  000C66  0101               	movlb	1	; () banked
  9347  000C68  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
  9348  000C6A  C27F  F191         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9349  000C6E  C280  F192         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9350  000C72  90D8               	bcf	status,0,c
  9351  000C74  0101               	movlb	1	; () banked
  9352  000C76  3791               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9353  000C78  3792               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9354  000C7A  0101               	movlb	1	; () banked
  9355  000C7C  518F               	movf	??_UseBluetooth& (0+255),w,b
  9356  000C7E  0101               	movlb	1	; () banked
  9357  000C80  2791               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9358  000C82  0101               	movlb	1	; () banked
  9359  000C84  5190               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9360  000C86  0101               	movlb	1	; () banked
  9361  000C88  2392               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9362  000C8A  0E05               	movlw	low (_Global+5)
  9363  000C8C  0101               	movlb	1	; () banked
  9364  000C8E  2591               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9365  000C90  6ED9               	movwf	fsr2l,c
  9366  000C92  0E04               	movlw	high (_Global+5)
  9367  000C94  0101               	movlb	1	; () banked
  9368  000C96  2192               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9369  000C98  6EDA               	movwf	fsr2h,c
  9370  000C9A  50DF               	movf	indf2,w,c
  9371  000C9C  0101               	movlb	1	; () banked
  9372  000C9E  6F93               	movwf	(??_UseBluetooth+4)& (0+255),b
  9373  000CA0  0101               	movlb	1	; () banked
  9374  000CA2  5193               	movf	(??_UseBluetooth+4)& (0+255),w,b
  9375  000CA4  0100               	movlb	0	; () banked
  9376  000CA6  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  9377  000CA8  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  9378  000CAA  0EFE               	movlw	254
  9379  000CAC  0101               	movlb	1	; () banked
  9380  000CAE  6F94               	movwf	(??_UseBluetooth+5)& (0+255),b
  9381  000CB0  0EFF               	movlw	255
  9382  000CB2  0101               	movlb	1	; () banked
  9383  000CB4  6F95               	movwf	(??_UseBluetooth+6)& (0+255),b
  9384  000CB6  C27F  F196         	movff	UseBluetooth@temp,??_UseBluetooth+7
  9385  000CBA  C280  F197         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
  9386  000CBE  90D8               	bcf	status,0,c
  9387  000CC0  0101               	movlb	1	; () banked
  9388  000CC2  3796               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
  9389  000CC4  3797               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9390  000CC6  0101               	movlb	1	; () banked
  9391  000CC8  5194               	movf	(??_UseBluetooth+5)& (0+255),w,b
  9392  000CCA  0101               	movlb	1	; () banked
  9393  000CCC  2796               	addwf	(??_UseBluetooth+7)& (0+255),f,b
  9394  000CCE  0101               	movlb	1	; () banked
  9395  000CD0  5195               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9396  000CD2  0101               	movlb	1	; () banked
  9397  000CD4  2397               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
  9398  000CD6  0E00               	movlw	low _Global
  9399  000CD8  0101               	movlb	1	; () banked
  9400  000CDA  6F98               	movwf	(??_UseBluetooth+9)& (0+255),b
  9401  000CDC  0E04               	movlw	high _Global
  9402  000CDE  0101               	movlb	1	; () banked
  9403  000CE0  6F99               	movwf	(??_UseBluetooth+10)& (0+255),b
  9404  000CE2  0E05               	movlw	5
  9405  000CE4  0101               	movlb	1	; () banked
  9406  000CE6  2798               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9407  000CE8  0E00               	movlw	0
  9408  000CEA  2399               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9409  000CEC  0101               	movlb	1	; () banked
  9410  000CEE  5196               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9411  000CF0  0101               	movlb	1	; () banked
  9412  000CF2  2798               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9413  000CF4  0101               	movlb	1	; () banked
  9414  000CF6  5197               	movf	(??_UseBluetooth+8)& (0+255),w,b
  9415  000CF8  0101               	movlb	1	; () banked
  9416  000CFA  2399               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9417  000CFC  0E01               	movlw	1
  9418  000CFE  0101               	movlb	1	; () banked
  9419  000D00  2598               	addwf	(??_UseBluetooth+9)& (0+255),w,b
  9420  000D02  6ED9               	movwf	fsr2l,c
  9421  000D04  0E00               	movlw	0
  9422  000D06  0101               	movlb	1	; () banked
  9423  000D08  2199               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
  9424  000D0A  6EDA               	movwf	fsr2h,c
  9425  000D0C  50DF               	movf	indf2,w,c
  9426  000D0E  0101               	movlb	1	; () banked
  9427  000D10  6F9A               	movwf	(??_UseBluetooth+11)& (0+255),b
  9428  000D12  0101               	movlb	1	; () banked
  9429  000D14  519A               	movf	(??_UseBluetooth+11)& (0+255),w,b
  9430  000D16  0100               	movlb	0	; () banked
  9431  000D18  6FCD               	movwf	(?_sprintf+6)& (0+255),b
  9432  000D1A  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  9433  000D1C  EC7B  F010         	call	_sprintf	;wreg free
  9434                           
  9435                           ;Bluetooth.c: 484: UARTstringCRLN(buf);
  9436  000D20  0E00               	movlw	low UseBluetooth@buf
  9437  000D22  0100               	movlb	0	; () banked
  9438  000D24  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9439  000D26  0E02               	movlw	high UseBluetooth@buf
  9440  000D28  0100               	movlb	0	; () banked
  9441  000D2A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9442  000D2C  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9443                           
  9444                           ;Bluetooth.c: 485: UARTstring(CRLN);
  9445  000D30  0EFE               	movlw	low _CRLN
  9446  000D32  0100               	movlb	0	; () banked
  9447  000D34  6F7A               	movwf	UARTstring@data& (0+255),b
  9448  000D36  0EF3               	movlw	high _CRLN
  9449  000D38  0100               	movlb	0	; () banked
  9450  000D3A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9451  000D3C  ECE7  F045         	call	_UARTstring	;wreg free
  9452                           
  9453                           ;Bluetooth.c: 486: return 1;
  9454                           ;	Return value of _UseBluetooth is never used
  9455  000D40  0012               	return	
  9456  000D42                     l15400:
  9457                           
  9458                           ;Bluetooth.c: 487: }
  9459                           ;Bluetooth.c: 488: UARTstring(CRLN);
  9460  000D42  0EFE               	movlw	low _CRLN
  9461  000D44  0100               	movlb	0	; () banked
  9462  000D46  6F7A               	movwf	UARTstring@data& (0+255),b
  9463  000D48  0EF3               	movlw	high _CRLN
  9464  000D4A  0100               	movlb	0	; () banked
  9465  000D4C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9466  000D4E  ECE7  F045         	call	_UARTstring	;wreg free
  9467                           
  9468                           ;Bluetooth.c: 489: UARTstringCRLN((unsigned char *)"Error: No NEC code saved for specifi
      +                          ed command");
  9469  000D52  0E36               	movlw	low STR_48
  9470  000D54  0100               	movlb	0	; () banked
  9471  000D56  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9472  000D58  0EF6               	movlw	high STR_48
  9473  000D5A  0100               	movlb	0	; () banked
  9474  000D5C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9475  000D5E  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9476                           
  9477                           ;Bluetooth.c: 490: return 0;
  9478                           ;	Return value of _UseBluetooth is never used
  9479  000D62  0012               	return	
  9480                           
  9481                           ;Bluetooth.c: 491: }
  9482  000D64  D10A               	goto	l15450
  9483  000D66                     l15406:
  9484                           
  9485                           ;Bluetooth.c: 492: else
  9486                           ;Bluetooth.c: 493: {
  9487                           ;Bluetooth.c: 494: if(!WaitForIRsignal())
  9488  000D66  ECE7  F042         	call	_WaitForIRsignal	;wreg free
  9489  000D6A  0900               	iorlw	0
  9490  000D6C  B4D8               	btfsc	status,2,c
  9491  000D6E  0012               	return	
  9492  000D70  D001               	goto	l15410
  9493                           
  9494                           ;Bluetooth.c: 495: {
  9495                           ;Bluetooth.c: 496: return 0;
  9496                           ;	Return value of _UseBluetooth is never used
  9497  000D72  0012               	return	
  9498  000D74                     l15410:
  9499                           
  9500                           ;Bluetooth.c: 497: }
  9501                           ;Bluetooth.c: 500: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  9502  000D74  C0E1  F07D         	movff	_IR_NEC,DecodeNEC@Nec
  9503  000D78  C0E2  F07E         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  9504  000D7C  C0E3  F07F         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  9505  000D80  C0E4  F080         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  9506  000D84  0E7D               	movlw	low UseBluetooth@NecAddress
  9507  000D86  0100               	movlb	0	; () banked
  9508  000D88  6F81               	movwf	DecodeNEC@address& (0+255),b
  9509  000D8A  0E02               	movlw	high UseBluetooth@NecAddress
  9510  000D8C  0100               	movlb	0	; () banked
  9511  000D8E  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
  9512  000D90  0E7E               	movlw	low UseBluetooth@NecCommand
  9513  000D92  0100               	movlb	0	; () banked
  9514  000D94  6F83               	movwf	DecodeNEC@command& (0+255),b
  9515  000D96  0E02               	movlw	high UseBluetooth@NecCommand
  9516  000D98  0100               	movlb	0	; () banked
  9517  000D9A  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
  9518  000D9C  EC03  F041         	call	_DecodeNEC	;wreg free
  9519                           
  9520                           ;Bluetooth.c: 501: Global.RemoteButtonNEC[temp - 1][0] = NecAddress;
  9521  000DA0  0EFE               	movlw	254
  9522  000DA2  0101               	movlb	1	; () banked
  9523  000DA4  6F8F               	movwf	??_UseBluetooth& (0+255),b
  9524  000DA6  0EFF               	movlw	255
  9525  000DA8  0101               	movlb	1	; () banked
  9526  000DAA  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
  9527  000DAC  C27F  F191         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9528  000DB0  C280  F192         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9529  000DB4  90D8               	bcf	status,0,c
  9530  000DB6  0101               	movlb	1	; () banked
  9531  000DB8  3791               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9532  000DBA  3792               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9533  000DBC  0101               	movlb	1	; () banked
  9534  000DBE  518F               	movf	??_UseBluetooth& (0+255),w,b
  9535  000DC0  0101               	movlb	1	; () banked
  9536  000DC2  2791               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9537  000DC4  0101               	movlb	1	; () banked
  9538  000DC6  5190               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9539  000DC8  0101               	movlb	1	; () banked
  9540  000DCA  2392               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9541  000DCC  0E05               	movlw	low (_Global+5)
  9542  000DCE  0101               	movlb	1	; () banked
  9543  000DD0  2591               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9544  000DD2  6ED9               	movwf	fsr2l,c
  9545  000DD4  0E04               	movlw	high (_Global+5)
  9546  000DD6  0101               	movlb	1	; () banked
  9547  000DD8  2192               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9548  000DDA  6EDA               	movwf	fsr2h,c
  9549  000DDC  C27D  FFDF         	movff	UseBluetooth@NecAddress,indf2
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;Bluetooth.c: 502: Global.RemoteButtonNEC[temp - 1][1] = NecCommand;
  9553  000DE0  0EFE               	movlw	254
  9554  000DE2  0101               	movlb	1	; () banked
  9555  000DE4  6F8F               	movwf	??_UseBluetooth& (0+255),b
  9556  000DE6  0EFF               	movlw	255
  9557  000DE8  0101               	movlb	1	; () banked
  9558  000DEA  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
  9559  000DEC  C27F  F191         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9560  000DF0  C280  F192         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9561  000DF4  90D8               	bcf	status,0,c
  9562  000DF6  0101               	movlb	1	; () banked
  9563  000DF8  3791               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9564  000DFA  3792               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9565  000DFC  0101               	movlb	1	; () banked
  9566  000DFE  518F               	movf	??_UseBluetooth& (0+255),w,b
  9567  000E00  0101               	movlb	1	; () banked
  9568  000E02  2791               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9569  000E04  0101               	movlb	1	; () banked
  9570  000E06  5190               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9571  000E08  0101               	movlb	1	; () banked
  9572  000E0A  2392               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9573  000E0C  0E00               	movlw	low _Global
  9574  000E0E  0101               	movlb	1	; () banked
  9575  000E10  6F93               	movwf	(??_UseBluetooth+4)& (0+255),b
  9576  000E12  0E04               	movlw	high _Global
  9577  000E14  0101               	movlb	1	; () banked
  9578  000E16  6F94               	movwf	(??_UseBluetooth+5)& (0+255),b
  9579  000E18  0E05               	movlw	5
  9580  000E1A  0101               	movlb	1	; () banked
  9581  000E1C  2793               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9582  000E1E  0E00               	movlw	0
  9583  000E20  2394               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9584  000E22  0101               	movlb	1	; () banked
  9585  000E24  5191               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9586  000E26  0101               	movlb	1	; () banked
  9587  000E28  2793               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9588  000E2A  0101               	movlb	1	; () banked
  9589  000E2C  5192               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9590  000E2E  0101               	movlb	1	; () banked
  9591  000E30  2394               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9592  000E32  0E01               	movlw	1
  9593  000E34  0101               	movlb	1	; () banked
  9594  000E36  2593               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9595  000E38  6ED9               	movwf	fsr2l,c
  9596  000E3A  0E00               	movlw	0
  9597  000E3C  0101               	movlb	1	; () banked
  9598  000E3E  2194               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9599  000E40  6EDA               	movwf	fsr2h,c
  9600  000E42  C27E  FFDF         	movff	UseBluetooth@NecCommand,indf2
  9601                           
  9602                           ; BSR set to: 1
  9603                           ;Bluetooth.c: 503: SyncGlobalToEEPROM();
  9604  000E46  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
  9605                           
  9606                           ;Bluetooth.c: 504: UARTstring(CRLN);
  9607  000E4A  0EFE               	movlw	low _CRLN
  9608  000E4C  0100               	movlb	0	; () banked
  9609  000E4E  6F7A               	movwf	UARTstring@data& (0+255),b
  9610  000E50  0EF3               	movlw	high _CRLN
  9611  000E52  0100               	movlb	0	; () banked
  9612  000E54  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9613  000E56  ECE7  F045         	call	_UARTstring	;wreg free
  9614                           
  9615                           ;Bluetooth.c: 505: sprintf(buf,"RemoteButton%ld now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
  9616  000E5A  0E00               	movlw	low UseBluetooth@buf
  9617  000E5C  0100               	movlb	0	; () banked
  9618  000E5E  6FC7               	movwf	sprintf@sp& (0+255),b
  9619  000E60  0E02               	movlw	high UseBluetooth@buf
  9620  000E62  0100               	movlb	0	; () banked
  9621  000E64  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9622  000E66  0E65               	movlw	low STR_49
  9623  000E68  0100               	movlb	0	; () banked
  9624  000E6A  6FC9               	movwf	sprintf@f& (0+255),b
  9625  000E6C  0EF6               	movlw	high STR_49
  9626  000E6E  0100               	movlb	0	; () banked
  9627  000E70  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9628  000E72  C27F  F0CB         	movff	UseBluetooth@temp,?_sprintf+4
  9629  000E76  C280  F0CC         	movff	UseBluetooth@temp+1,?_sprintf+5
  9630  000E7A  C281  F0CD         	movff	UseBluetooth@temp+2,?_sprintf+6
  9631  000E7E  C282  F0CE         	movff	UseBluetooth@temp+3,?_sprintf+7
  9632  000E82  C0E1  F0CF         	movff	_IR_NEC,?_sprintf+8
  9633  000E86  C0E2  F0D0         	movff	_IR_NEC+1,?_sprintf+9
  9634  000E8A  C0E3  F0D1         	movff	_IR_NEC+2,?_sprintf+10
  9635  000E8E  C0E4  F0D2         	movff	_IR_NEC+3,?_sprintf+11
  9636  000E92  EC7B  F010         	call	_sprintf	;wreg free
  9637                           
  9638                           ;Bluetooth.c: 506: UARTstringCRLN(buf);
  9639  000E96  0E00               	movlw	low UseBluetooth@buf
  9640  000E98  0100               	movlb	0	; () banked
  9641  000E9A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9642  000E9C  0E02               	movlw	high UseBluetooth@buf
  9643  000E9E  0100               	movlb	0	; () banked
  9644  000EA0  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9645  000EA2  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9646                           
  9647                           ;Bluetooth.c: 507: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
  9648  000EA6  0E00               	movlw	low UseBluetooth@buf
  9649  000EA8  0100               	movlb	0	; () banked
  9650  000EAA  6FC7               	movwf	sprintf@sp& (0+255),b
  9651  000EAC  0E02               	movlw	high UseBluetooth@buf
  9652  000EAE  0100               	movlb	0	; () banked
  9653  000EB0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
  9654  000EB2  0ED5               	movlw	low STR_47
  9655  000EB4  0100               	movlb	0	; () banked
  9656  000EB6  6FC9               	movwf	sprintf@f& (0+255),b
  9657  000EB8  0EF7               	movlw	high STR_47
  9658  000EBA  0100               	movlb	0	; () banked
  9659  000EBC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
  9660  000EBE  C27D  F0CB         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9661  000EC2  0100               	movlb	0	; () banked
  9662  000EC4  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  9663  000EC6  C27E  F0CD         	movff	UseBluetooth@NecCommand,?_sprintf+6
  9664  000ECA  0100               	movlb	0	; () banked
  9665  000ECC  6BCE               	clrf	(?_sprintf+7)& (0+255),b
  9666  000ECE  EC7B  F010         	call	_sprintf	;wreg free
  9667                           
  9668                           ;Bluetooth.c: 508: UARTstringCRLN(buf);
  9669  000ED2  0E00               	movlw	low UseBluetooth@buf
  9670  000ED4  0100               	movlb	0	; () banked
  9671  000ED6  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9672  000ED8  0E02               	movlw	high UseBluetooth@buf
  9673  000EDA  0100               	movlb	0	; () banked
  9674  000EDC  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9675  000EDE  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9676                           
  9677                           ;Bluetooth.c: 509: UARTstring(CRLN);
  9678  000EE2  0EFE               	movlw	low _CRLN
  9679  000EE4  0100               	movlb	0	; () banked
  9680  000EE6  6F7A               	movwf	UARTstring@data& (0+255),b
  9681  000EE8  0EF3               	movlw	high _CRLN
  9682  000EEA  0100               	movlb	0	; () banked
  9683  000EEC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9684  000EEE  ECE7  F045         	call	_UARTstring	;wreg free
  9685                           
  9686                           ;Bluetooth.c: 511: for(i =0;i<10;i++)
  9687  000EF2  0E00               	movlw	0
  9688  000EF4  0102               	movlb	2	; () banked
  9689  000EF6  6F83               	movwf	UseBluetooth@i& (0+255),b
  9690                           
  9691                           ; BSR set to: 2
  9692  000EF8  0E09               	movlw	9
  9693  000EFA  0102               	movlb	2	; () banked
  9694  000EFC  6583               	cpfsgt	UseBluetooth@i& (0+255),b
  9695  000EFE  D002               	goto	l15436
  9696  000F00  0012               	return	
  9697                           
  9698                           ; BSR set to: 2
  9699  000F02  0012               	return	
  9700  000F04                     l15436:
  9701                           
  9702                           ; BSR set to: 2
  9703                           ;Bluetooth.c: 512: {
  9704                           ;Bluetooth.c: 513: (LATC |= 0x04);
  9705  000F04  848B               	bsf	3979,2,c	;volatile
  9706                           
  9707                           ; BSR set to: 2
  9708                           ;Bluetooth.c: 514: delayUS(50000);
  9709  000F06  0E50               	movlw	80
  9710  000F08  0100               	movlb	0	; () banked
  9711  000F0A  6F79               	movwf	delayUS@US& (0+255),b
  9712  000F0C  0EC3               	movlw	195
  9713  000F0E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  9714  000F10  0E00               	movlw	0
  9715  000F12  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  9716  000F14  0E00               	movlw	0
  9717  000F16  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  9718  000F18  EC6B  F046         	call	_delayUS	;wreg free
  9719                           
  9720                           ;Bluetooth.c: 515: (LATC &= ~0x04);
  9721  000F1C  948B               	bcf	3979,2,c	;volatile
  9722                           
  9723                           ;Bluetooth.c: 516: delayUS(50000);
  9724  000F1E  0E50               	movlw	80
  9725  000F20  0100               	movlb	0	; () banked
  9726  000F22  6F79               	movwf	delayUS@US& (0+255),b
  9727  000F24  0EC3               	movlw	195
  9728  000F26  6F7A               	movwf	(delayUS@US+1)& (0+255),b
  9729  000F28  0E00               	movlw	0
  9730  000F2A  6F7B               	movwf	(delayUS@US+2)& (0+255),b
  9731  000F2C  0E00               	movlw	0
  9732  000F2E  6F7C               	movwf	(delayUS@US+3)& (0+255),b
  9733  000F30  EC6B  F046         	call	_delayUS	;wreg free
  9734  000F34  0102               	movlb	2	; () banked
  9735  000F36  2B83               	incf	UseBluetooth@i& (0+255),f,b
  9736                           
  9737                           ; BSR set to: 2
  9738  000F38  0E09               	movlw	9
  9739  000F3A  0102               	movlb	2	; () banked
  9740  000F3C  6583               	cpfsgt	UseBluetooth@i& (0+255),b
  9741  000F3E  D7E2               	goto	l15436
  9742  000F40  0012               	return	
  9743                           
  9744                           ; BSR set to: 2
  9745                           ;Bluetooth.c: 517: }
  9746                           ;Bluetooth.c: 518: return 1;
  9747                           ;	Return value of _UseBluetooth is never used
  9748  000F42  0012               	return	
  9749                           
  9750                           ; BSR set to: 2
  9751                           ;Bluetooth.c: 519: }
  9752                           ;Bluetooth.c: 520: }
  9753  000F44  D01A               	goto	l15450
  9754  000F46                     l15446:
  9755                           
  9756                           ; BSR set to: 2
  9757                           ;Bluetooth.c: 521: else
  9758                           ;Bluetooth.c: 522: {
  9759                           ;Bluetooth.c: 523: UARTstring(CRLN);
  9760  000F46  0EFE               	movlw	low _CRLN
  9761  000F48  0100               	movlb	0	; () banked
  9762  000F4A  6F7A               	movwf	UARTstring@data& (0+255),b
  9763  000F4C  0EF3               	movlw	high _CRLN
  9764  000F4E  0100               	movlb	0	; () banked
  9765  000F50  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9766  000F52  ECE7  F045         	call	_UARTstring	;wreg free
  9767                           
  9768                           ;Bluetooth.c: 524: UARTstringCRLN((unsigned char *)"Error: Remote button number too high
      +                          ");
  9769  000F56  0EF5               	movlw	low STR_51
  9770  000F58  0100               	movlb	0	; () banked
  9771  000F5A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9772  000F5C  0EF8               	movlw	high STR_51
  9773  000F5E  0100               	movlb	0	; () banked
  9774  000F60  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9775  000F62  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9776                           
  9777                           ;Bluetooth.c: 525: UARTstring(CRLN);
  9778  000F66  0EFE               	movlw	low _CRLN
  9779  000F68  0100               	movlb	0	; () banked
  9780  000F6A  6F7A               	movwf	UARTstring@data& (0+255),b
  9781  000F6C  0EF3               	movlw	high _CRLN
  9782  000F6E  0100               	movlb	0	; () banked
  9783  000F70  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9784  000F72  ECE7  F045         	call	_UARTstring	;wreg free
  9785                           
  9786                           ;Bluetooth.c: 526: return 0;
  9787                           ;	Return value of _UseBluetooth is never used
  9788  000F76  0012               	return	
  9789  000F78  D000               	goto	l15450
  9790  000F7A                     l15450:
  9791                           
  9792                           ;Bluetooth.c: 527: }
  9793                           ;Bluetooth.c: 528: }
  9794                           ;Bluetooth.c: 529: }
  9795                           ;Bluetooth.c: 530: UARTstring(CRLN);
  9796  000F7A  0EFE               	movlw	low _CRLN
  9797  000F7C  0100               	movlb	0	; () banked
  9798  000F7E  6F7A               	movwf	UARTstring@data& (0+255),b
  9799  000F80  0EF3               	movlw	high _CRLN
  9800  000F82  0100               	movlb	0	; () banked
  9801  000F84  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9802  000F86  ECE7  F045         	call	_UARTstring	;wreg free
  9803                           
  9804                           ;Bluetooth.c: 531: UARTstringCRLN((unsigned char *)"Error: Remote button not specified")
      +                          ;
  9805  000F8A  0E3E               	movlw	low STR_52
  9806  000F8C  0100               	movlb	0	; () banked
  9807  000F8E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9808  000F90  0EF9               	movlw	high STR_52
  9809  000F92  0100               	movlb	0	; () banked
  9810  000F94  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9811  000F96  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9812                           
  9813                           ;Bluetooth.c: 532: UARTstring(CRLN);
  9814  000F9A  0EFE               	movlw	low _CRLN
  9815  000F9C  0100               	movlb	0	; () banked
  9816  000F9E  6F7A               	movwf	UARTstring@data& (0+255),b
  9817  000FA0  0EF3               	movlw	high _CRLN
  9818  000FA2  0100               	movlb	0	; () banked
  9819  000FA4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9820  000FA6  ECE7  F045         	call	_UARTstring	;wreg free
  9821                           
  9822                           ;Bluetooth.c: 533: UARTstringCRLN((unsigned char *)"Usage:");
  9823  000FAA  0EB2               	movlw	low STR_36
  9824  000FAC  0100               	movlb	0	; () banked
  9825  000FAE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9826  000FB0  0EFF               	movlw	high STR_36
  9827  000FB2  0100               	movlb	0	; () banked
  9828  000FB4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9829  000FB6  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9830                           
  9831                           ;Bluetooth.c: 534: UARTstringCRLN((unsigned char *)"RemoteButton'x'");
  9832  000FBA  0E67               	movlw	low STR_54
  9833  000FBC  0100               	movlb	0	; () banked
  9834  000FBE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9835  000FC0  0EFE               	movlw	high STR_54
  9836  000FC2  0100               	movlb	0	; () banked
  9837  000FC4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9838  000FC6  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9839                           
  9840                           ;Bluetooth.c: 535: UARTstringCRLN((unsigned char *)"RemoteButton'x' set");
  9841  000FCA  0E8B               	movlw	low STR_55
  9842  000FCC  0100               	movlb	0	; () banked
  9843  000FCE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9844  000FD0  0EFD               	movlw	high STR_55
  9845  000FD2  0100               	movlb	0	; () banked
  9846  000FD4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9847  000FD6  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9848                           
  9849                           ;Bluetooth.c: 536: UARTstring(CRLN);
  9850  000FDA  0EFE               	movlw	low _CRLN
  9851  000FDC  0100               	movlb	0	; () banked
  9852  000FDE  6F7A               	movwf	UARTstring@data& (0+255),b
  9853  000FE0  0EF3               	movlw	high _CRLN
  9854  000FE2  0100               	movlb	0	; () banked
  9855  000FE4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9856  000FE6  ECE7  F045         	call	_UARTstring	;wreg free
  9857                           
  9858                           ;Bluetooth.c: 537: UARTstringCRLN((unsigned char *)"Example:");
  9859  000FEA  0E91               	movlw	low STR_40
  9860  000FEC  0100               	movlb	0	; () banked
  9861  000FEE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9862  000FF0  0EFF               	movlw	high STR_40
  9863  000FF2  0100               	movlb	0	; () banked
  9864  000FF4  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9865  000FF6  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9866                           
  9867                           ;Bluetooth.c: 538: UARTstringCRLN((unsigned char *)"RemoteButton1");
  9868  000FFA  0E96               	movlw	low STR_57
  9869  000FFC  0100               	movlb	0	; () banked
  9870  000FFE  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9871  001000  0EFE               	movlw	high STR_57
  9872  001002  0100               	movlb	0	; () banked
  9873  001004  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9874  001006  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9875                           
  9876                           ;Bluetooth.c: 539: UARTstringCRLN((unsigned char *)"RemoteButton1 set");
  9877  00100A  0E10               	movlw	low STR_58
  9878  00100C  0100               	movlb	0	; () banked
  9879  00100E  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9880  001010  0EFE               	movlw	high STR_58
  9881  001012  0100               	movlb	0	; () banked
  9882  001014  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9883  001016  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9884                           
  9885                           ;Bluetooth.c: 540: UARTstring(CRLN);
  9886  00101A  0EFE               	movlw	low _CRLN
  9887  00101C  0100               	movlb	0	; () banked
  9888  00101E  6F7A               	movwf	UARTstring@data& (0+255),b
  9889  001020  0EF3               	movlw	high _CRLN
  9890  001022  0100               	movlb	0	; () banked
  9891  001024  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9892  001026  ECE7  F045         	call	_UARTstring	;wreg free
  9893                           
  9894                           ;Bluetooth.c: 542: }
  9895                           
  9896                           ;Bluetooth.c: 541: return 0;
  9897                           ;	Return value of _UseBluetooth is never used
  9898  00102A  0012               	return	
  9899  00102C                     l15456:
  9900                           
  9901                           ;Bluetooth.c: 543: else if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set
      +                          ") || StringContainsCaseInsensitive(String,(unsigned char *)"RF clear"))
  9902  00102C  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9903  001030  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9904  001034  0EB9               	movlw	low STR_59
  9905  001036  0100               	movlb	0	; () banked
  9906  001038  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9907  00103A  0EFF               	movlw	high STR_59
  9908  00103C  0100               	movlb	0	; () banked
  9909  00103E  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9910  001040  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  9911  001044  0900               	iorlw	0
  9912  001046  A4D8               	btfss	status,2,c
  9913  001048  D010               	goto	l15460
  9914  00104A  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9915  00104E  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9916  001052  0E9A               	movlw	low STR_60
  9917  001054  0100               	movlb	0	; () banked
  9918  001056  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9919  001058  0EFF               	movlw	high STR_60
  9920  00105A  0100               	movlb	0	; () banked
  9921  00105C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9922  00105E  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  9923  001062  0900               	iorlw	0
  9924  001064  B4D8               	btfsc	status,2,c
  9925  001066  EFA1  F00C         	goto	l15738
  9926  00106A                     l15460:
  9927                           
  9928                           ;Bluetooth.c: 544: {
  9929                           ;Bluetooth.c: 545: if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set"))
  9930  00106A  C18C  F07C         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9931  00106E  C18D  F07D         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9932  001072  0EB9               	movlw	low STR_59
  9933  001074  0100               	movlb	0	; () banked
  9934  001076  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9935  001078  0EFF               	movlw	high STR_59
  9936  00107A  0100               	movlb	0	; () banked
  9937  00107C  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9938  00107E  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
  9939  001082  0900               	iorlw	0
  9940  001084  B4D8               	btfsc	status,2,c
  9941  001086  D002               	goto	l15464
  9942                           
  9943                           ;Bluetooth.c: 546: {
  9944                           ;Bluetooth.c: 547: set = 1;
  9945  001088  0E01               	movlw	1
  9946  00108A  D001               	goto	L4
  9947  00108C                     l15464:
  9948                           
  9949                           ;Bluetooth.c: 549: else
  9950                           ;Bluetooth.c: 550: {
  9951                           ;Bluetooth.c: 551: set = 0;
  9952  00108C  0E00               	movlw	0
  9953  00108E                     L4:
  9954  00108E  0102               	movlb	2	; () banked
  9955  001090  6F6E               	movwf	UseBluetooth@set& (0+255),b
  9956  001092  D000               	goto	l15466
  9957  001094                     l15466:
  9958                           
  9959                           ; BSR set to: 2
  9960                           ;Bluetooth.c: 552: }
  9961                           ;Bluetooth.c: 553: if(!StringAddEqual(String))
  9962  001094  C18C  F088         	movff	UseBluetooth@String,StringAddEqual@Input
  9963  001098  C18D  F089         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
  9964  00109C  EC9B  F032         	call	_StringAddEqual	;wreg free
  9965  0010A0  0900               	iorlw	0
  9966  0010A2  A4D8               	btfss	status,2,c
  9967  0010A4  D011               	goto	l15472
  9968                           
  9969                           ;Bluetooth.c: 554: {
  9970                           ;Bluetooth.c: 555: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
  9971  0010A6  0EAB               	movlw	low STR_62
  9972  0010A8  0100               	movlb	0	; () banked
  9973  0010AA  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
  9974  0010AC  0EF8               	movlw	high STR_62
  9975  0010AE  0100               	movlb	0	; () banked
  9976  0010B0  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9977  0010B2  ECF1  F044         	call	_UARTstringCRLN	;wreg free
  9978                           
  9979                           ;Bluetooth.c: 556: UARTstring(CRLN);
  9980  0010B6  0EFE               	movlw	low _CRLN
  9981  0010B8  0100               	movlb	0	; () banked
  9982  0010BA  6F7A               	movwf	UARTstring@data& (0+255),b
  9983  0010BC  0EF3               	movlw	high _CRLN
  9984  0010BE  0100               	movlb	0	; () banked
  9985  0010C0  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
  9986  0010C2  ECE7  F045         	call	_UARTstring	;wreg free
  9987                           
  9988                           ;Bluetooth.c: 557: return 0;
  9989                           ;	Return value of _UseBluetooth is never used
  9990  0010C6  0012               	return	
  9991  0010C8                     l15472:
  9992                           
  9993                           ;Bluetooth.c: 558: }
  9994                           ;Bluetooth.c: 559: StringPos++;
  9995  0010C8  0101               	movlb	1	; () banked
  9996  0010CA  2B8E               	incf	UseBluetooth@StringPos& (0+255),f,b
  9997                           
  9998                           ; BSR set to: 1
  9999                           ;Bluetooth.c: 560: UARTstring(CRLN);
 10000  0010CC  0EFE               	movlw	low _CRLN
 10001  0010CE  0100               	movlb	0	; () banked
 10002  0010D0  6F7A               	movwf	UARTstring@data& (0+255),b
 10003  0010D2  0EF3               	movlw	high _CRLN
 10004  0010D4  0100               	movlb	0	; () banked
 10005  0010D6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10006  0010D8  ECE7  F045         	call	_UARTstring	;wreg free
 10007                           
 10008                           ;Bluetooth.c: 561: if(!GetNumber(String, 1, &temp))
 10009  0010DC  C18C  F085         	movff	UseBluetooth@String,GetNumber@This
 10010  0010E0  C18D  F086         	movff	UseBluetooth@String+1,GetNumber@This+1
 10011  0010E4  0E01               	movlw	1
 10012  0010E6  0100               	movlb	0	; () banked
 10013  0010E8  6F87               	movwf	GetNumber@CommaNumber& (0+255),b
 10014  0010EA  0E7F               	movlw	low UseBluetooth@temp
 10015  0010EC  0100               	movlb	0	; () banked
 10016  0010EE  6F88               	movwf	GetNumber@result& (0+255),b
 10017  0010F0  0E02               	movlw	high UseBluetooth@temp
 10018  0010F2  0100               	movlb	0	; () banked
 10019  0010F4  6F89               	movwf	(GetNumber@result+1)& (0+255),b
 10020  0010F6  EC90  F023         	call	_GetNumber	;wreg free
 10021  0010FA  0900               	iorlw	0
 10022  0010FC  A4D8               	btfss	status,2,c
 10023  0010FE  D003               	goto	l15480
 10024                           
 10025                           ;Bluetooth.c: 562: {
 10026                           ;Bluetooth.c: 563: rfconf = (unsigned char) temp;
 10027  001100  C27F  F27C         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 10028                           
 10029                           ;Bluetooth.c: 564: }
 10030  001104  D011               	goto	l15484
 10031  001106                     l15480:
 10032                           
 10033                           ;Bluetooth.c: 565: else
 10034                           ;Bluetooth.c: 566: {
 10035                           ;Bluetooth.c: 567: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10036  001106  0EAB               	movlw	low STR_62
 10037  001108  0100               	movlb	0	; () banked
 10038  00110A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10039  00110C  0EF8               	movlw	high STR_62
 10040  00110E  0100               	movlb	0	; () banked
 10041  001110  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10042  001112  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10043                           
 10044                           ;Bluetooth.c: 568: UARTstring(CRLN);
 10045  001116  0EFE               	movlw	low _CRLN
 10046  001118  0100               	movlb	0	; () banked
 10047  00111A  6F7A               	movwf	UARTstring@data& (0+255),b
 10048  00111C  0EF3               	movlw	high _CRLN
 10049  00111E  0100               	movlb	0	; () banked
 10050  001120  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10051  001122  ECE7  F045         	call	_UARTstring	;wreg free
 10052                           
 10053                           ;Bluetooth.c: 569: return 0;
 10054                           ;	Return value of _UseBluetooth is never used
 10055  001126  0012               	return	
 10056  001128                     l15484:
 10057                           
 10058                           ;Bluetooth.c: 570: }
 10059                           ;Bluetooth.c: 571: if(rfconf <= 0 || rfconf > 2)
 10060  001128  0102               	movlb	2	; () banked
 10061  00112A  517C               	movf	UseBluetooth@rfconf& (0+255),w,b
 10062  00112C  0102               	movlb	2	; () banked
 10063  00112E  B4D8               	btfsc	status,2,c
 10064  001130  D005               	goto	l15488
 10065                           
 10066                           ; BSR set to: 2
 10067  001132  0E02               	movlw	2
 10068  001134  0102               	movlb	2	; () banked
 10069  001136  657C               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 10070  001138  D012               	goto	l15492
 10071  00113A  D000               	goto	l15488
 10072  00113C                     l15488:
 10073                           
 10074                           ; BSR set to: 2
 10075                           ;Bluetooth.c: 572: {
 10076                           ;Bluetooth.c: 573: UARTstringCRLN((unsigned char *)"Error: RF configuration out of range
      +                          ");
 10077  00113C  0ED0               	movlw	low STR_64
 10078  00113E  0100               	movlb	0	; () banked
 10079  001140  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10080  001142  0EF8               	movlw	high STR_64
 10081  001144  0100               	movlb	0	; () banked
 10082  001146  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10083  001148  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10084                           
 10085                           ;Bluetooth.c: 574: UARTstring(CRLN);
 10086  00114C  0EFE               	movlw	low _CRLN
 10087  00114E  0100               	movlb	0	; () banked
 10088  001150  6F7A               	movwf	UARTstring@data& (0+255),b
 10089  001152  0EF3               	movlw	high _CRLN
 10090  001154  0100               	movlb	0	; () banked
 10091  001156  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10092  001158  ECE7  F045         	call	_UARTstring	;wreg free
 10093                           
 10094                           ;Bluetooth.c: 575: return 0;
 10095                           ;	Return value of _UseBluetooth is never used
 10096  00115C  0012               	return	
 10097  00115E                     l15492:
 10098                           
 10099                           ;Bluetooth.c: 576: }
 10100                           ;Bluetooth.c: 577: if(GetStringAfterComma(String, 1, rfchannelSTR))
 10101  00115E  C18C  F079         	movff	UseBluetooth@String,GetStringAfterComma@This
 10102  001162  C18D  F07A         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 10103  001166  0E01               	movlw	1
 10104  001168  0100               	movlb	0	; () banked
 10105  00116A  6F7B               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 10106  00116C  0E64               	movlw	low UseBluetooth@rfchannelSTR
 10107  00116E  0100               	movlb	0	; () banked
 10108  001170  6F7C               	movwf	GetStringAfterComma@result& (0+255),b
 10109  001172  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10110  001174  0100               	movlb	0	; () banked
 10111  001176  6F7D               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 10112  001178  EC86  F03B         	call	_GetStringAfterComma	;wreg free
 10113  00117C  0900               	iorlw	0
 10114  00117E  B4D8               	btfsc	status,2,c
 10115  001180  D011               	goto	l15500
 10116                           
 10117                           ;Bluetooth.c: 578: {
 10118                           ;Bluetooth.c: 579: UARTstringCRLN((unsigned char *)"Error: No RF channel specified");
 10119  001182  0EDD               	movlw	low STR_65
 10120  001184  0100               	movlb	0	; () banked
 10121  001186  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10122  001188  0EFA               	movlw	high STR_65
 10123  00118A  0100               	movlb	0	; () banked
 10124  00118C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10125  00118E  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10126                           
 10127                           ;Bluetooth.c: 580: UARTstring(CRLN);
 10128  001192  0EFE               	movlw	low _CRLN
 10129  001194  0100               	movlb	0	; () banked
 10130  001196  6F7A               	movwf	UARTstring@data& (0+255),b
 10131  001198  0EF3               	movlw	high _CRLN
 10132  00119A  0100               	movlb	0	; () banked
 10133  00119C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10134  00119E  ECE7  F045         	call	_UARTstring	;wreg free
 10135                           
 10136                           ;Bluetooth.c: 582: }
 10137                           
 10138                           ;Bluetooth.c: 581: return 0;
 10139                           ;	Return value of _UseBluetooth is never used
 10140  0011A2  0012               	return	
 10141  0011A4                     l15500:
 10142                           
 10143                           ;Bluetooth.c: 583: else
 10144                           ;Bluetooth.c: 584: {
 10145                           ;Bluetooth.c: 585: lowercaseString(rfchannelSTR);
 10146  0011A4  0E64               	movlw	low UseBluetooth@rfchannelSTR
 10147  0011A6  0100               	movlb	0	; () banked
 10148  0011A8  6F79               	movwf	lowercaseString@Input& (0+255),b
 10149  0011AA  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10150  0011AC  0100               	movlb	0	; () banked
 10151  0011AE  6F7A               	movwf	(lowercaseString@Input+1)& (0+255),b
 10152  0011B0  EC52  F047         	call	_lowercaseString	;wreg free
 10153                           
 10154                           ;Bluetooth.c: 586: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 10155  0011B4  0102               	movlb	2	; () banked
 10156  0011B6  5165               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10157  0011B8  B4D8               	btfsc	status,2,c
 10158  0011BA  D005               	goto	l15506
 10159                           
 10160                           ; BSR set to: 2
 10161  0011BC  0E20               	movlw	32
 10162  0011BE  0102               	movlb	2	; () banked
 10163  0011C0  1965               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10164  0011C2  A4D8               	btfss	status,2,c
 10165  0011C4  D3AD               	goto	l15734
 10166  0011C6                     l15506:
 10167                           
 10168                           ; BSR set to: 2
 10169                           ;Bluetooth.c: 587: {
 10170                           ;Bluetooth.c: 588: rfchannelSTR[1] = 0;
 10171  0011C6  0E00               	movlw	0
 10172  0011C8  0102               	movlb	2	; () banked
 10173  0011CA  6F65               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 10174                           
 10175                           ; BSR set to: 2
 10176                           ;Bluetooth.c: 589: if(rfconf == 1)
 10177  0011CC  0102               	movlb	2	; () banked
 10178  0011CE  057C               	decf	UseBluetooth@rfconf& (0+255),w,b
 10179  0011D0  A4D8               	btfss	status,2,c
 10180  0011D2  D015               	goto	l15514
 10181                           
 10182                           ; BSR set to: 2
 10183                           ;Bluetooth.c: 590: {
 10184                           ;Bluetooth.c: 591: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 10185  0011D4  0EF6               	movlw	low _Conf1_Channels
 10186  0011D6  0100               	movlb	0	; () banked
 10187  0011D8  6F7C               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10188  0011DA  0EF3               	movlw	high _Conf1_Channels
 10189  0011DC  0100               	movlb	0	; () banked
 10190  0011DE  6F7D               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10191  0011E0  0E64               	movlw	low UseBluetooth@rfchannelSTR
 10192  0011E2  0100               	movlb	0	; () banked
 10193  0011E4  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10194  0011E6  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10195  0011E8  0100               	movlb	0	; () banked
 10196  0011EA  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10197  0011EC  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
 10198  0011F0  0900               	iorlw	0
 10199  0011F2  A4D8               	btfss	status,2,c
 10200  0011F4  D019               	goto	l1899
 10201                           
 10202                           ;Bluetooth.c: 592: {
 10203                           ;Bluetooth.c: 593: ok = 0;
 10204  0011F6  0E00               	movlw	0
 10205  0011F8  0102               	movlb	2	; () banked
 10206  0011FA  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10207                           
 10208                           ; BSR set to: 2
 10209                           ;Bluetooth.c: 594: }
 10210                           ;Bluetooth.c: 595: }
 10211  0011FC  D015               	goto	l1899
 10212  0011FE                     l15514:
 10213                           
 10214                           ; BSR set to: 2
 10215                           ;Bluetooth.c: 596: else if(rfconf == 2)
 10216  0011FE  0E02               	movlw	2
 10217  001200  0102               	movlb	2	; () banked
 10218  001202  197C               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10219  001204  A4D8               	btfss	status,2,c
 10220  001206  D010               	goto	l1899
 10221                           
 10222                           ; BSR set to: 2
 10223                           ;Bluetooth.c: 597: {
 10224                           ;Bluetooth.c: 598: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 10225  001208  0EFA               	movlw	low _Conf2_Channels
 10226  00120A  0100               	movlb	0	; () banked
 10227  00120C  6F7C               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10228  00120E  0EF3               	movlw	high _Conf2_Channels
 10229  001210  0100               	movlb	0	; () banked
 10230  001212  6F7D               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10231  001214  0E64               	movlw	low UseBluetooth@rfchannelSTR
 10232  001216  0100               	movlb	0	; () banked
 10233  001218  6F7E               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10234  00121A  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10235  00121C  0100               	movlb	0	; () banked
 10236  00121E  6F7F               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10237  001220  ECD4  F039         	call	_StringContainsCaseInsensitive	;wreg free
 10238  001224  D7E5               	goto	L10
 10239                           
 10240                           ; BSR set to: 2
 10241                           
 10242                           ;Bluetooth.c: 599: {
 10243                           ;Bluetooth.c: 600: ok = 0;
 10244  001226  D000               	goto	l1899
 10245  001228                     l1899:
 10246                           
 10247                           ;Bluetooth.c: 601: }
 10248                           ;Bluetooth.c: 602: }
 10249                           ;Bluetooth.c: 603: if(!ok)
 10250  001228  0102               	movlb	2	; () banked
 10251  00122A  517A               	movf	UseBluetooth@ok& (0+255),w,b
 10252  00122C  0102               	movlb	2	; () banked
 10253  00122E  A4D8               	btfss	status,2,c
 10254  001230  D011               	goto	l15524
 10255                           
 10256                           ; BSR set to: 2
 10257                           ;Bluetooth.c: 604: {
 10258                           ;Bluetooth.c: 605: UARTstringCRLN((unsigned char *)"Error: RF channel out of range");
 10259  001232  0EFC               	movlw	low STR_66
 10260  001234  0100               	movlb	0	; () banked
 10261  001236  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10262  001238  0EFA               	movlw	high STR_66
 10263  00123A  0100               	movlb	0	; () banked
 10264  00123C  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10265  00123E  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10266                           
 10267                           ;Bluetooth.c: 606: UARTstring(CRLN);
 10268  001242  0EFE               	movlw	low _CRLN
 10269  001244  0100               	movlb	0	; () banked
 10270  001246  6F7A               	movwf	UARTstring@data& (0+255),b
 10271  001248  0EF3               	movlw	high _CRLN
 10272  00124A  0100               	movlb	0	; () banked
 10273  00124C  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10274  00124E  ECE7  F045         	call	_UARTstring	;wreg free
 10275                           
 10276                           ;Bluetooth.c: 607: return 0;
 10277                           ;	Return value of _UseBluetooth is never used
 10278  001252  0012               	return	
 10279  001254                     l15524:
 10280                           
 10281                           ;Bluetooth.c: 608: }
 10282                           ;Bluetooth.c: 610: if(rfconf == 1)
 10283  001254  0102               	movlb	2	; () banked
 10284  001256  057C               	decf	UseBluetooth@rfconf& (0+255),w,b
 10285  001258  A4D8               	btfss	status,2,c
 10286  00125A  D017               	goto	l15538
 10287                           
 10288                           ; BSR set to: 2
 10289                           ;Bluetooth.c: 611: {
 10290                           ;Bluetooth.c: 612: if(rfchannelSTR[0] == 'd')
 10291  00125C  0E64               	movlw	100
 10292  00125E  0102               	movlb	2	; () banked
 10293  001260  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10294  001262  A4D8               	btfss	status,2,c
 10295  001264  D002               	goto	l15530
 10296                           
 10297                           ; BSR set to: 2
 10298                           ;Bluetooth.c: 613: {
 10299                           ;Bluetooth.c: 614: tempRFArray = 0;
 10300  001266  0E00               	movlw	0
 10301  001268  D0B9               	goto	L9
 10302  00126A                     l15530:
 10303                           
 10304                           ; BSR set to: 2
 10305                           ;Bluetooth.c: 616: else if(rfchannelSTR[0] == 'e')
 10306  00126A  0E65               	movlw	101
 10307  00126C  0102               	movlb	2	; () banked
 10308  00126E  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10309  001270  A4D8               	btfss	status,2,c
 10310  001272  D002               	goto	l15534
 10311                           
 10312                           ; BSR set to: 2
 10313                           ;Bluetooth.c: 617: {
 10314                           ;Bluetooth.c: 618: tempRFArray = 1;
 10315  001274  0E01               	movlw	1
 10316  001276  D0B2               	goto	L9
 10317  001278                     l15534:
 10318                           
 10319                           ; BSR set to: 2
 10320                           ;Bluetooth.c: 620: else if(rfchannelSTR[0] == 'f')
 10321  001278  0E66               	movlw	102
 10322  00127A  0102               	movlb	2	; () banked
 10323  00127C  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10324  00127E  A4D8               	btfss	status,2,c
 10325  001280  0012               	return	
 10326                           
 10327                           ; BSR set to: 2
 10328                           ;Bluetooth.c: 621: {
 10329                           ;Bluetooth.c: 622: tempRFArray = 2;
 10330  001282  0E02               	movlw	2
 10331  001284  D0AB               	goto	L9
 10332                           
 10333                           ; BSR set to: 2
 10334                           ;Bluetooth.c: 624: else
 10335                           ;Bluetooth.c: 625: {
 10336                           ;Bluetooth.c: 627: return 0;
 10337                           ;	Return value of _UseBluetooth is never used
 10338                           
 10339                           ;Bluetooth.c: 623: }
 10340  001286  0012               	return	
 10341                           
 10342                           ; BSR set to: 2
 10343                           ;Bluetooth.c: 628: }
 10344                           ;Bluetooth.c: 629: }
 10345                           
 10346                           ; BSR set to: 2
 10347                           
 10348                           ; BSR set to: 2
 10349  001288  D0AE               	goto	l15606
 10350  00128A                     l15538:
 10351                           
 10352                           ; BSR set to: 2
 10353                           ;Bluetooth.c: 630: else if(rfconf ==2)
 10354  00128A  0E02               	movlw	2
 10355  00128C  0102               	movlb	2	; () banked
 10356  00128E  197C               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10357  001290  A4D8               	btfss	status,2,c
 10358  001292  D0A9               	goto	l15606
 10359                           
 10360                           ; BSR set to: 2
 10361                           ;Bluetooth.c: 631: {
 10362                           ;Bluetooth.c: 632: if(rfchannelSTR[0] == 'b')
 10363  001294  0E62               	movlw	98
 10364  001296  0102               	movlb	2	; () banked
 10365  001298  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10366  00129A  A4D8               	btfss	status,2,c
 10367  00129C  D002               	goto	l15544
 10368                           
 10369                           ; BSR set to: 2
 10370                           ;Bluetooth.c: 633: {
 10371                           ;Bluetooth.c: 634: tempRFArray = 3;
 10372  00129E  0E03               	movlw	3
 10373  0012A0  D09D               	goto	L9
 10374  0012A2                     l15544:
 10375                           
 10376                           ; BSR set to: 2
 10377                           ;Bluetooth.c: 636: else if(rfchannelSTR[0] == 'd')
 10378  0012A2  0E64               	movlw	100
 10379  0012A4  0102               	movlb	2	; () banked
 10380  0012A6  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10381  0012A8  A4D8               	btfss	status,2,c
 10382  0012AA  D002               	goto	l15548
 10383                           
 10384                           ; BSR set to: 2
 10385                           ;Bluetooth.c: 637: {
 10386                           ;Bluetooth.c: 638: tempRFArray = 4;
 10387  0012AC  0E04               	movlw	4
 10388  0012AE  D096               	goto	L9
 10389  0012B0                     l15548:
 10390                           
 10391                           ; BSR set to: 2
 10392                           ;Bluetooth.c: 640: else if(rfchannelSTR[0] == 'h')
 10393  0012B0  0E68               	movlw	104
 10394  0012B2  0102               	movlb	2	; () banked
 10395  0012B4  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10396  0012B6  A4D8               	btfss	status,2,c
 10397  0012B8  0012               	return	
 10398                           
 10399                           ; BSR set to: 2
 10400                           ;Bluetooth.c: 641: {
 10401                           ;Bluetooth.c: 642: cleanBuffer(ReceivedString, ReceivedStringPos);
 10402  0012BA  0E00               	movlw	low _ReceivedString
 10403  0012BC  0100               	movlb	0	; () banked
 10404  0012BE  6F79               	movwf	cleanBuffer@data& (0+255),b
 10405  0012C0  0E06               	movlw	high _ReceivedString
 10406  0012C2  0100               	movlb	0	; () banked
 10407  0012C4  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 10408  0012C6  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 10409  0012CA  0100               	movlb	0	; () banked
 10410  0012CC  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 10411  0012CE  ECBA  F045         	call	_cleanBuffer	;wreg free
 10412                           
 10413                           ;Bluetooth.c: 643: ReceivedStringPos = 0;
 10414  0012D2  0E00               	movlw	0
 10415  0012D4  0100               	movlb	0	; () banked
 10416  0012D6  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;Bluetooth.c: 644: NewReceivedString = 0;
 10420  0012D8  0E00               	movlw	0
 10421  0012DA  0100               	movlb	0	; () banked
 10422  0012DC  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;Bluetooth.c: 645: UARTstring((unsigned char *)"Which device?");
 10426  0012DE  0EA4               	movlw	low STR_67
 10427  0012E0  0100               	movlb	0	; () banked
 10428  0012E2  6F7A               	movwf	UARTstring@data& (0+255),b
 10429  0012E4  0EFE               	movlw	high STR_67
 10430  0012E6  0100               	movlb	0	; () banked
 10431  0012E8  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10432  0012EA  ECE7  F045         	call	_UARTstring	;wreg free
 10433                           
 10434                           ;Bluetooth.c: 646: UARTstring(CRLN);
 10435  0012EE  0EFE               	movlw	low _CRLN
 10436  0012F0  0100               	movlb	0	; () banked
 10437  0012F2  6F7A               	movwf	UARTstring@data& (0+255),b
 10438  0012F4  0EF3               	movlw	high _CRLN
 10439  0012F6  0100               	movlb	0	; () banked
 10440  0012F8  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10441  0012FA  ECE7  F045         	call	_UARTstring	;wreg free
 10442                           
 10443                           ;Bluetooth.c: 647: UARTchar('>');
 10444  0012FE  0E3E               	movlw	62
 10445  001300  ECF0  F048         	call	_UARTchar
 10446                           
 10447                           ;Bluetooth.c: 648: timeout = 0;
 10448  001304  0E00               	movlw	0
 10449  001306  0102               	movlb	2	; () banked
 10450  001308  6F73               	movwf	UseBluetooth@timeout& (0+255),b
 10451                           
 10452                           ; BSR set to: 2
 10453                           ;Bluetooth.c: 649: ClearUSART();
 10454  00130A  EC8E  F049         	call	_ClearUSART	;wreg free
 10455                           
 10456                           ;Bluetooth.c: 650: PIR1bits.RCIF = 0;
 10457  00130E  9A9E               	bcf	3998,5,c	;volatile
 10458                           
 10459                           ;Bluetooth.c: 651: PIE1bits.RCIE = 1;
 10460  001310  8A9D               	bsf	3997,5,c	;volatile
 10461                           
 10462                           ;Bluetooth.c: 652: while(!NewReceivedString)
 10463  001312  D023               	goto	l15580
 10464  001314                     l15570:
 10465                           
 10466                           ;Bluetooth.c: 653: {
 10467                           ;Bluetooth.c: 654: delayUS(300000);
 10468  001314  0EE0               	movlw	224
 10469  001316  0100               	movlb	0	; () banked
 10470  001318  6F79               	movwf	delayUS@US& (0+255),b
 10471  00131A  0E93               	movlw	147
 10472  00131C  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 10473  00131E  0E04               	movlw	4
 10474  001320  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 10475  001322  0E00               	movlw	0
 10476  001324  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 10477  001326  EC6B  F046         	call	_delayUS	;wreg free
 10478                           
 10479                           ;Bluetooth.c: 655: timeout++;
 10480  00132A  0102               	movlb	2	; () banked
 10481  00132C  2B73               	incf	UseBluetooth@timeout& (0+255),f,b
 10482                           
 10483                           ; BSR set to: 2
 10484                           ;Bluetooth.c: 656: if(timeout > 25)
 10485  00132E  0E19               	movlw	25
 10486  001330  0102               	movlb	2	; () banked
 10487  001332  6573               	cpfsgt	UseBluetooth@timeout& (0+255),b
 10488  001334  D012               	goto	l15580
 10489                           
 10490                           ; BSR set to: 2
 10491                           ;Bluetooth.c: 657: {
 10492                           ;Bluetooth.c: 658: UARTstring(CRLN);
 10493  001336  0EFE               	movlw	low _CRLN
 10494  001338  0100               	movlb	0	; () banked
 10495  00133A  6F7A               	movwf	UARTstring@data& (0+255),b
 10496  00133C  0EF3               	movlw	high _CRLN
 10497  00133E  0100               	movlb	0	; () banked
 10498  001340  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10499  001342  ECE7  F045         	call	_UARTstring	;wreg free
 10500                           
 10501                           ;Bluetooth.c: 659: UARTstringCRLN((unsigned char *)"Error: No RF config 2, channel H dev
      +                          ice specified");
 10502  001346  0EAC               	movlw	low STR_68
 10503  001348  0100               	movlb	0	; () banked
 10504  00134A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10505  00134C  0EF4               	movlw	high STR_68
 10506  00134E  0100               	movlb	0	; () banked
 10507  001350  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10508  001352  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10509                           
 10510                           ;Bluetooth.c: 660: return 0;
 10511                           ;	Return value of _UseBluetooth is never used
 10512  001356  0012               	return	
 10513  001358  D000               	goto	l15580
 10514  00135A                     l15580:
 10515  00135A  0100               	movlb	0	; () banked
 10516  00135C  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 10517  00135E  B4D8               	btfsc	status,2,c
 10518  001360  D7D9               	goto	l15570
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;Bluetooth.c: 661: }
 10522                           ;Bluetooth.c: 662: }
 10523                           ;Bluetooth.c: 663: PIE1bits.RCIE = 0;
 10524  001362  9A9D               	bcf	3997,5,c	;volatile
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;Bluetooth.c: 664: ok = 1;
 10528  001364  0E01               	movlw	1
 10529  001366  0102               	movlb	2	; () banked
 10530  001368  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10531                           
 10532                           ; BSR set to: 2
 10533                           ;Bluetooth.c: 665: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 10534  00136A  0E30               	movlw	48
 10535  00136C  0106               	movlb	6	; () banked
 10536  00136E  6500               	cpfsgt	_ReceivedString& (0+255),b
 10537  001370  D005               	goto	l15588
 10538                           
 10539                           ; BSR set to: 6
 10540  001372  0E33               	movlw	51
 10541  001374  0106               	movlb	6	; () banked
 10542  001376  6500               	cpfsgt	_ReceivedString& (0+255),b
 10543  001378  D00D               	goto	l15592
 10544  00137A  D000               	goto	l15588
 10545  00137C                     l15588:
 10546                           
 10547                           ; BSR set to: 6
 10548                           ;Bluetooth.c: 666: {
 10549                           ;Bluetooth.c: 667: UARTstringCRLN((unsigned char *)"Error: RF config 2, channel H device
      +                           out of range");
 10550  00137C  0EDE               	movlw	low STR_69
 10551  00137E  0100               	movlb	0	; () banked
 10552  001380  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10553  001382  0EF4               	movlw	high STR_69
 10554  001384  0100               	movlb	0	; () banked
 10555  001386  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10556  001388  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10557                           
 10558                           ;Bluetooth.c: 668: ok = 0;
 10559  00138C  0E00               	movlw	0
 10560  00138E  0102               	movlb	2	; () banked
 10561  001390  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10562  001392  D000               	goto	l15592
 10563  001394                     l15592:
 10564                           
 10565                           ;Bluetooth.c: 669: }
 10566                           ;Bluetooth.c: 670: cleanBuffer(ReceivedString, ReceivedStringPos);
 10567  001394  0E00               	movlw	low _ReceivedString
 10568  001396  0100               	movlb	0	; () banked
 10569  001398  6F79               	movwf	cleanBuffer@data& (0+255),b
 10570  00139A  0E06               	movlw	high _ReceivedString
 10571  00139C  0100               	movlb	0	; () banked
 10572  00139E  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 10573  0013A0  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 10574  0013A4  0100               	movlb	0	; () banked
 10575  0013A6  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 10576  0013A8  ECBA  F045         	call	_cleanBuffer	;wreg free
 10577                           
 10578                           ;Bluetooth.c: 671: ReceivedStringPos = 0;
 10579  0013AC  0E00               	movlw	0
 10580  0013AE  0100               	movlb	0	; () banked
 10581  0013B0  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;Bluetooth.c: 672: NewReceivedString = 0;
 10585  0013B2  0E00               	movlw	0
 10586  0013B4  0100               	movlb	0	; () banked
 10587  0013B6  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;Bluetooth.c: 673: if(!ok)
 10591  0013B8  0102               	movlb	2	; () banked
 10592  0013BA  517A               	movf	UseBluetooth@ok& (0+255),w,b
 10593  0013BC  0102               	movlb	2	; () banked
 10594  0013BE  B4D8               	btfsc	status,2,c
 10595  0013C0  0012               	return	
 10596  0013C2  D001               	goto	l15602
 10597                           
 10598                           ; BSR set to: 2
 10599                           ;Bluetooth.c: 674: {
 10600                           ;Bluetooth.c: 675: return 0;
 10601                           ;	Return value of _UseBluetooth is never used
 10602  0013C4  0012               	return	
 10603  0013C6                     l15602:
 10604                           
 10605                           ; BSR set to: 2
 10606                           ;Bluetooth.c: 676: }
 10607                           ;Bluetooth.c: 677: device = String[0] - '0';
 10608  0013C6  C18C  FFD9         	movff	UseBluetooth@String,fsr2l
 10609  0013CA  C18D  FFDA         	movff	UseBluetooth@String+1,fsr2h
 10610  0013CE  50DF               	movf	indf2,w,c
 10611  0013D0  0FD0               	addlw	208
 10612  0013D2  0102               	movlb	2	; () banked
 10613  0013D4  6F75               	movwf	UseBluetooth@device& (0+255),b
 10614                           
 10615                           ; BSR set to: 2
 10616                           ;Bluetooth.c: 678: tempRFArray = device + 4;
 10617  0013D6  0102               	movlb	2	; () banked
 10618  0013D8  5175               	movf	UseBluetooth@device& (0+255),w,b
 10619  0013DA  0F04               	addlw	4
 10620  0013DC                     L9:
 10621  0013DC  0102               	movlb	2	; () banked
 10622  0013DE  6F7B               	movwf	UseBluetooth@tempRFArray& (0+255),b
 10623                           
 10624                           ;Bluetooth.c: 679: }
 10625  0013E0  D002               	goto	l15606
 10626                           
 10627                           ; BSR set to: 2
 10628                           ;Bluetooth.c: 680: else
 10629                           ;Bluetooth.c: 681: {
 10630                           ;Bluetooth.c: 683: return 0;
 10631                           ;	Return value of _UseBluetooth is never used
 10632  0013E2  0012               	return	
 10633                           
 10634                           ; BSR set to: 2
 10635                           
 10636                           ; BSR set to: 2
 10637                           
 10638                           ; BSR set to: 2
 10639                           
 10640                           ; BSR set to: 2
 10641  0013E4  D000               	goto	l15606
 10642  0013E6                     l15606:
 10643                           
 10644                           ; BSR set to: 2
 10645                           ;Bluetooth.c: 684: }
 10646                           ;Bluetooth.c: 685: }
 10647                           ;Bluetooth.c: 686: if(set)
 10648  0013E6  0102               	movlb	2	; () banked
 10649  0013E8  516E               	movf	UseBluetooth@set& (0+255),w,b
 10650  0013EA  0102               	movlb	2	; () banked
 10651  0013EC  B4D8               	btfsc	status,2,c
 10652  0013EE  D1D3               	goto	l15694
 10653                           
 10654                           ; BSR set to: 2
 10655                           ;Bluetooth.c: 687: {
 10656                           ;Bluetooth.c: 688: if(!WaitForIRsignal())
 10657  0013F0  ECE7  F042         	call	_WaitForIRsignal	;wreg free
 10658  0013F4  0900               	iorlw	0
 10659  0013F6  B4D8               	btfsc	status,2,c
 10660  0013F8  0012               	return	
 10661  0013FA  D001               	goto	l15612
 10662                           
 10663                           ;Bluetooth.c: 689: {
 10664                           ;Bluetooth.c: 690: return 0;
 10665                           ;	Return value of _UseBluetooth is never used
 10666  0013FC  0012               	return	
 10667  0013FE                     l15612:
 10668                           
 10669                           ;Bluetooth.c: 691: }
 10670                           ;Bluetooth.c: 692: UARTstring(CRLN);
 10671  0013FE  0EFE               	movlw	low _CRLN
 10672  001400  0100               	movlb	0	; () banked
 10673  001402  6F7A               	movwf	UARTstring@data& (0+255),b
 10674  001404  0EF3               	movlw	high _CRLN
 10675  001406  0100               	movlb	0	; () banked
 10676  001408  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 10677  00140A  ECE7  F045         	call	_UARTstring	;wreg free
 10678                           
 10679                           ;Bluetooth.c: 693: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 10680  00140E  C0E1  F07D         	movff	_IR_NEC,DecodeNEC@Nec
 10681  001412  C0E2  F07E         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 10682  001416  C0E3  F07F         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 10683  00141A  C0E4  F080         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 10684  00141E  0E7D               	movlw	low UseBluetooth@NecAddress
 10685  001420  0100               	movlb	0	; () banked
 10686  001422  6F81               	movwf	DecodeNEC@address& (0+255),b
 10687  001424  0E02               	movlw	high UseBluetooth@NecAddress
 10688  001426  0100               	movlb	0	; () banked
 10689  001428  6F82               	movwf	(DecodeNEC@address+1)& (0+255),b
 10690  00142A  0E7E               	movlw	low UseBluetooth@NecCommand
 10691  00142C  0100               	movlb	0	; () banked
 10692  00142E  6F83               	movwf	DecodeNEC@command& (0+255),b
 10693  001430  0E02               	movlw	high UseBluetooth@NecCommand
 10694  001432  0100               	movlb	0	; () banked
 10695  001434  6F84               	movwf	(DecodeNEC@command+1)& (0+255),b
 10696  001436  EC03  F041         	call	_DecodeNEC	;wreg free
 10697                           
 10698                           ;Bluetooth.c: 694: ok = 0;
 10699  00143A  0E00               	movlw	0
 10700  00143C  0102               	movlb	2	; () banked
 10701  00143E  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10702                           
 10703                           ; BSR set to: 2
 10704                           ;Bluetooth.c: 695: for(i=0; i < 3; i++)
 10705  001440  0E00               	movlw	0
 10706  001442  0102               	movlb	2	; () banked
 10707  001444  6F83               	movwf	UseBluetooth@i& (0+255),b
 10708  001446                     l15620:
 10709                           
 10710                           ; BSR set to: 2
 10711  001446  0E02               	movlw	2
 10712  001448  0102               	movlb	2	; () banked
 10713  00144A  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 10714  00144C  D001               	goto	l15624
 10715                           
 10716                           ; BSR set to: 2
 10717  00144E  D053               	goto	l15636
 10718  001450                     l15624:
 10719                           
 10720                           ; BSR set to: 2
 10721                           ;Bluetooth.c: 696: {
 10722                           ;Bluetooth.c: 697: if(Global.RemoteButtonRF[tempRFArray][i][0] == 0 && Global.RemoteButt
      +                          onRF[tempRFArray][i][1] == 0)
 10723  001450  0102               	movlb	2	; () banked
 10724  001452  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10725  001454  0D06               	mullw	6
 10726  001456  0E00               	movlw	low _Global
 10727  001458  0101               	movlb	1	; () banked
 10728  00145A  6F8F               	movwf	??_UseBluetooth& (0+255),b
 10729  00145C  0E04               	movlw	high _Global
 10730  00145E  0101               	movlb	1	; () banked
 10731  001460  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 10732  001462  0E2E               	movlw	46
 10733  001464  0101               	movlb	1	; () banked
 10734  001466  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10735  001468  0E00               	movlw	0
 10736  00146A  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10737  00146C  50F3               	movf	prodl,w,c
 10738  00146E  0101               	movlb	1	; () banked
 10739  001470  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10740  001472  50F4               	movf	prodh,w,c
 10741  001474  0101               	movlb	1	; () banked
 10742  001476  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10743  001478  0102               	movlb	2	; () banked
 10744  00147A  5183               	movf	UseBluetooth@i& (0+255),w,b
 10745  00147C  0D02               	mullw	2
 10746  00147E  50F3               	movf	prodl,w,c
 10747  001480  0101               	movlb	1	; () banked
 10748  001482  258F               	addwf	??_UseBluetooth& (0+255),w,b
 10749  001484  6ED9               	movwf	fsr2l,c
 10750  001486  50F4               	movf	prodh,w,c
 10751  001488  0101               	movlb	1	; () banked
 10752  00148A  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10753  00148C  6EDA               	movwf	fsr2h,c
 10754  00148E  50DF               	movf	indf2,w,c
 10755  001490  A4D8               	btfss	status,2,c
 10756  001492  D02E               	goto	l15632
 10757                           
 10758                           ; BSR set to: 1
 10759  001494  0102               	movlb	2	; () banked
 10760  001496  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10761  001498  0D06               	mullw	6
 10762  00149A  0E00               	movlw	low _Global
 10763  00149C  0101               	movlb	1	; () banked
 10764  00149E  6F8F               	movwf	??_UseBluetooth& (0+255),b
 10765  0014A0  0E04               	movlw	high _Global
 10766  0014A2  0101               	movlb	1	; () banked
 10767  0014A4  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 10768  0014A6  0E2E               	movlw	46
 10769  0014A8  0101               	movlb	1	; () banked
 10770  0014AA  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10771  0014AC  0E00               	movlw	0
 10772  0014AE  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10773  0014B0  50F3               	movf	prodl,w,c
 10774  0014B2  0101               	movlb	1	; () banked
 10775  0014B4  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10776  0014B6  50F4               	movf	prodh,w,c
 10777  0014B8  0101               	movlb	1	; () banked
 10778  0014BA  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10779  0014BC  0102               	movlb	2	; () banked
 10780  0014BE  5183               	movf	UseBluetooth@i& (0+255),w,b
 10781  0014C0  0D02               	mullw	2
 10782  0014C2  50F3               	movf	prodl,w,c
 10783  0014C4  0101               	movlb	1	; () banked
 10784  0014C6  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10785  0014C8  50F4               	movf	prodh,w,c
 10786  0014CA  0101               	movlb	1	; () banked
 10787  0014CC  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10788  0014CE  0E01               	movlw	1
 10789  0014D0  0101               	movlb	1	; () banked
 10790  0014D2  258F               	addwf	??_UseBluetooth& (0+255),w,b
 10791  0014D4  6ED9               	movwf	fsr2l,c
 10792  0014D6  0E00               	movlw	0
 10793  0014D8  0101               	movlb	1	; () banked
 10794  0014DA  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10795  0014DC  6EDA               	movwf	fsr2h,c
 10796  0014DE  50DF               	movf	indf2,w,c
 10797  0014E0  A4D8               	btfss	status,2,c
 10798  0014E2  D006               	goto	l15632
 10799                           
 10800                           ; BSR set to: 1
 10801                           ;Bluetooth.c: 698: {
 10802                           ;Bluetooth.c: 699: EmptyPlace = i;
 10803  0014E4  C283  F274         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 10804                           
 10805                           ; BSR set to: 1
 10806                           ;Bluetooth.c: 700: ok = 1;
 10807  0014E8  0E01               	movlw	1
 10808  0014EA  0102               	movlb	2	; () banked
 10809  0014EC  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10810                           
 10811                           ;Bluetooth.c: 701: break;
 10812  0014EE  D003               	goto	l15636
 10813  0014F0                     l15632:
 10814  0014F0  0102               	movlb	2	; () banked
 10815  0014F2  2B83               	incf	UseBluetooth@i& (0+255),f,b
 10816  0014F4  D7A8               	goto	l15620
 10817  0014F6                     l15636:
 10818                           
 10819                           ; BSR set to: 2
 10820                           ;Bluetooth.c: 702: }
 10821                           ;Bluetooth.c: 703: }
 10822                           ;Bluetooth.c: 704: if(!ok)
 10823  0014F6  0102               	movlb	2	; () banked
 10824  0014F8  517A               	movf	UseBluetooth@ok& (0+255),w,b
 10825  0014FA  0102               	movlb	2	; () banked
 10826  0014FC  A4D8               	btfss	status,2,c
 10827  0014FE  D009               	goto	l15642
 10828                           
 10829                           ; BSR set to: 2
 10830                           ;Bluetooth.c: 705: {
 10831                           ;Bluetooth.c: 706: UARTstringCRLN((unsigned char *)"Error: No space available to this RF
      +                           code");
 10832  001500  0E59               	movlw	low STR_70
 10833  001502  0100               	movlb	0	; () banked
 10834  001504  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 10835  001506  0EF8               	movlw	high STR_70
 10836  001508  0100               	movlb	0	; () banked
 10837  00150A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10838  00150C  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 10839                           
 10840                           ;Bluetooth.c: 707: return 0;
 10841                           ;	Return value of _UseBluetooth is never used
 10842  001510  0012               	return	
 10843  001512                     l15642:
 10844                           
 10845                           ;Bluetooth.c: 708: }
 10846                           ;Bluetooth.c: 709: ok = 1;
 10847  001512  0E01               	movlw	1
 10848  001514  0102               	movlb	2	; () banked
 10849  001516  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10850                           
 10851                           ;Bluetooth.c: 710: if(EmptyPlace)
 10852  001518  0102               	movlb	2	; () banked
 10853  00151A  5174               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 10854  00151C  0102               	movlb	2	; () banked
 10855  00151E  B4D8               	btfsc	status,2,c
 10856  001520  D062               	goto	l15656
 10857                           
 10858                           ; BSR set to: 2
 10859                           ;Bluetooth.c: 711: {
 10860                           ;Bluetooth.c: 713: for(i=0; i < EmptyPlace; i++)
 10861  001522  0E00               	movlw	0
 10862  001524  0102               	movlb	2	; () banked
 10863  001526  6F83               	movwf	UseBluetooth@i& (0+255),b
 10864  001528  D056               	goto	l15654
 10865  00152A                     l15646:
 10866                           
 10867                           ; BSR set to: 2
 10868                           ;Bluetooth.c: 714: {
 10869                           ;Bluetooth.c: 715: if(NecAddress == Global.RemoteButtonRF[tempRFArray][i][0])
 10870  00152A  0102               	movlb	2	; () banked
 10871  00152C  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10872  00152E  0D06               	mullw	6
 10873  001530  0E00               	movlw	low _Global
 10874  001532  0101               	movlb	1	; () banked
 10875  001534  6F8F               	movwf	??_UseBluetooth& (0+255),b
 10876  001536  0E04               	movlw	high _Global
 10877  001538  0101               	movlb	1	; () banked
 10878  00153A  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 10879  00153C  0E2E               	movlw	46
 10880  00153E  0101               	movlb	1	; () banked
 10881  001540  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10882  001542  0E00               	movlw	0
 10883  001544  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10884  001546  50F3               	movf	prodl,w,c
 10885  001548  0101               	movlb	1	; () banked
 10886  00154A  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10887  00154C  50F4               	movf	prodh,w,c
 10888  00154E  0101               	movlb	1	; () banked
 10889  001550  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10890  001552  0102               	movlb	2	; () banked
 10891  001554  5183               	movf	UseBluetooth@i& (0+255),w,b
 10892  001556  0D02               	mullw	2
 10893  001558  50F3               	movf	prodl,w,c
 10894  00155A  0101               	movlb	1	; () banked
 10895  00155C  258F               	addwf	??_UseBluetooth& (0+255),w,b
 10896  00155E  6ED9               	movwf	fsr2l,c
 10897  001560  50F4               	movf	prodh,w,c
 10898  001562  0101               	movlb	1	; () banked
 10899  001564  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10900  001566  6EDA               	movwf	fsr2h,c
 10901  001568  0102               	movlb	2	; () banked
 10902  00156A  517D               	movf	UseBluetooth@NecAddress& (0+255),w,b
 10903  00156C  18DE               	xorwf	postinc2,w,c
 10904  00156E  A4D8               	btfss	status,2,c
 10905  001570  D02F               	goto	l15652
 10906                           
 10907                           ; BSR set to: 2
 10908                           ;Bluetooth.c: 716: {
 10909                           ;Bluetooth.c: 717: if(NecCommand == Global.RemoteButtonRF[tempRFArray][i][1])
 10910  001572  0102               	movlb	2	; () banked
 10911  001574  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10912  001576  0D06               	mullw	6
 10913  001578  0E00               	movlw	low _Global
 10914  00157A  0101               	movlb	1	; () banked
 10915  00157C  6F8F               	movwf	??_UseBluetooth& (0+255),b
 10916  00157E  0E04               	movlw	high _Global
 10917  001580  0101               	movlb	1	; () banked
 10918  001582  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 10919  001584  0E2E               	movlw	46
 10920  001586  0101               	movlb	1	; () banked
 10921  001588  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10922  00158A  0E00               	movlw	0
 10923  00158C  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10924  00158E  50F3               	movf	prodl,w,c
 10925  001590  0101               	movlb	1	; () banked
 10926  001592  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10927  001594  50F4               	movf	prodh,w,c
 10928  001596  0101               	movlb	1	; () banked
 10929  001598  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10930  00159A  0102               	movlb	2	; () banked
 10931  00159C  5183               	movf	UseBluetooth@i& (0+255),w,b
 10932  00159E  0D02               	mullw	2
 10933  0015A0  50F3               	movf	prodl,w,c
 10934  0015A2  0101               	movlb	1	; () banked
 10935  0015A4  278F               	addwf	??_UseBluetooth& (0+255),f,b
 10936  0015A6  50F4               	movf	prodh,w,c
 10937  0015A8  0101               	movlb	1	; () banked
 10938  0015AA  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10939  0015AC  0E01               	movlw	1
 10940  0015AE  0101               	movlb	1	; () banked
 10941  0015B0  258F               	addwf	??_UseBluetooth& (0+255),w,b
 10942  0015B2  6ED9               	movwf	fsr2l,c
 10943  0015B4  0E00               	movlw	0
 10944  0015B6  0101               	movlb	1	; () banked
 10945  0015B8  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10946  0015BA  6EDA               	movwf	fsr2h,c
 10947  0015BC  0102               	movlb	2	; () banked
 10948  0015BE  517E               	movf	UseBluetooth@NecCommand& (0+255),w,b
 10949  0015C0  18DE               	xorwf	postinc2,w,c
 10950  0015C2  A4D8               	btfss	status,2,c
 10951  0015C4  D005               	goto	l15652
 10952                           
 10953                           ; BSR set to: 2
 10954                           ;Bluetooth.c: 718: {
 10955                           ;Bluetooth.c: 719: ok = 0;
 10956  0015C6  0E00               	movlw	0
 10957  0015C8  0102               	movlb	2	; () banked
 10958  0015CA  6F7A               	movwf	UseBluetooth@ok& (0+255),b
 10959                           
 10960                           ;Bluetooth.c: 720: break;
 10961  0015CC  D00C               	goto	l15656
 10962                           
 10963                           ; BSR set to: 2
 10964  0015CE  D000               	goto	l15652
 10965  0015D0                     l15652:
 10966                           
 10967                           ; BSR set to: 2
 10968  0015D0  0102               	movlb	2	; () banked
 10969  0015D2  2B83               	incf	UseBluetooth@i& (0+255),f,b
 10970  0015D4  D000               	goto	l15654
 10971  0015D6                     l15654:
 10972                           
 10973                           ; BSR set to: 2
 10974  0015D6  0102               	movlb	2	; () banked
 10975  0015D8  5174               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 10976  0015DA  0102               	movlb	2	; () banked
 10977  0015DC  5D83               	subwf	UseBluetooth@i& (0+255),w,b
 10978  0015DE  B0D8               	btfsc	status,0,c
 10979  0015E0  D002               	goto	l15656
 10980  0015E2  D7A3               	goto	l15646
 10981                           
 10982                           ; BSR set to: 2
 10983  0015E4  D000               	goto	l15656
 10984  0015E6                     l15656:
 10985                           
 10986                           ; BSR set to: 2
 10987                           ;Bluetooth.c: 721: }
 10988                           ;Bluetooth.c: 722: }
 10989                           ;Bluetooth.c: 723: }
 10990                           ;Bluetooth.c: 724: }
 10991                           ;Bluetooth.c: 725: if(!ok)
 10992  0015E6  0102               	movlb	2	; () banked
 10993  0015E8  517A               	movf	UseBluetooth@ok& (0+255),w,b
 10994  0015EA  0102               	movlb	2	; () banked
 10995  0015EC  A4D8               	btfss	status,2,c
 10996  0015EE  D009               	goto	l15662
 10997                           
 10998                           ; BSR set to: 2
 10999                           ;Bluetooth.c: 726: {
 11000                           ;Bluetooth.c: 727: UARTstringCRLN((unsigned char *)"Error: NEC code already saved to thi
      +                          s RF code");
 11001  0015F0  0EA7               	movlw	low STR_71
 11002  0015F2  0100               	movlb	0	; () banked
 11003  0015F4  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11004  0015F6  0EF7               	movlw	high STR_71
 11005  0015F8  0100               	movlb	0	; () banked
 11006  0015FA  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11007  0015FC  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11008                           
 11009                           ;Bluetooth.c: 728: return 0;
 11010                           ;	Return value of _UseBluetooth is never used
 11011  001600  0012               	return	
 11012  001602                     l15662:
 11013                           
 11014                           ;Bluetooth.c: 729: }
 11015                           ;Bluetooth.c: 732: Global.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 11016  001602  0102               	movlb	2	; () banked
 11017  001604  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11018  001606  0D06               	mullw	6
 11019  001608  0E00               	movlw	low _Global
 11020  00160A  0101               	movlb	1	; () banked
 11021  00160C  6F8F               	movwf	??_UseBluetooth& (0+255),b
 11022  00160E  0E04               	movlw	high _Global
 11023  001610  0101               	movlb	1	; () banked
 11024  001612  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 11025  001614  0E2E               	movlw	46
 11026  001616  0101               	movlb	1	; () banked
 11027  001618  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11028  00161A  0E00               	movlw	0
 11029  00161C  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11030  00161E  50F3               	movf	prodl,w,c
 11031  001620  0101               	movlb	1	; () banked
 11032  001622  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11033  001624  50F4               	movf	prodh,w,c
 11034  001626  0101               	movlb	1	; () banked
 11035  001628  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11036  00162A  0102               	movlb	2	; () banked
 11037  00162C  5174               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11038  00162E  0D02               	mullw	2
 11039  001630  50F3               	movf	prodl,w,c
 11040  001632  0101               	movlb	1	; () banked
 11041  001634  258F               	addwf	??_UseBluetooth& (0+255),w,b
 11042  001636  6ED9               	movwf	fsr2l,c
 11043  001638  50F4               	movf	prodh,w,c
 11044  00163A  0101               	movlb	1	; () banked
 11045  00163C  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11046  00163E  6EDA               	movwf	fsr2h,c
 11047  001640  C27D  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11048                           
 11049                           ;Bluetooth.c: 733: Global.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 11050  001644  0102               	movlb	2	; () banked
 11051  001646  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11052  001648  0D06               	mullw	6
 11053  00164A  0E00               	movlw	low _Global
 11054  00164C  0101               	movlb	1	; () banked
 11055  00164E  6F8F               	movwf	??_UseBluetooth& (0+255),b
 11056  001650  0E04               	movlw	high _Global
 11057  001652  0101               	movlb	1	; () banked
 11058  001654  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 11059  001656  0E2E               	movlw	46
 11060  001658  0101               	movlb	1	; () banked
 11061  00165A  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11062  00165C  0E00               	movlw	0
 11063  00165E  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11064  001660  50F3               	movf	prodl,w,c
 11065  001662  0101               	movlb	1	; () banked
 11066  001664  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11067  001666  50F4               	movf	prodh,w,c
 11068  001668  0101               	movlb	1	; () banked
 11069  00166A  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11070  00166C  0102               	movlb	2	; () banked
 11071  00166E  5174               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11072  001670  0D02               	mullw	2
 11073  001672  50F3               	movf	prodl,w,c
 11074  001674  0101               	movlb	1	; () banked
 11075  001676  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11076  001678  50F4               	movf	prodh,w,c
 11077  00167A  0101               	movlb	1	; () banked
 11078  00167C  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11079  00167E  0E01               	movlw	1
 11080  001680  0101               	movlb	1	; () banked
 11081  001682  258F               	addwf	??_UseBluetooth& (0+255),w,b
 11082  001684  6ED9               	movwf	fsr2l,c
 11083  001686  0E00               	movlw	0
 11084  001688  0101               	movlb	1	; () banked
 11085  00168A  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11086  00168C  6EDA               	movwf	fsr2h,c
 11087  00168E  C27E  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11088                           
 11089                           ; BSR set to: 1
 11090                           ;Bluetooth.c: 734: SyncGlobalToEEPROM();
 11091  001692  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11092                           
 11093                           ;Bluetooth.c: 736: if(device)
 11094  001696  0102               	movlb	2	; () banked
 11095  001698  5175               	movf	UseBluetooth@device& (0+255),w,b
 11096  00169A  0102               	movlb	2	; () banked
 11097  00169C  B4D8               	btfsc	status,2,c
 11098  00169E  D023               	goto	l15670
 11099                           
 11100                           ; BSR set to: 2
 11101                           ;Bluetooth.c: 737: {
 11102                           ;Bluetooth.c: 738: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 11103  0016A0  0E00               	movlw	low UseBluetooth@buf
 11104  0016A2  0100               	movlb	0	; () banked
 11105  0016A4  6FC7               	movwf	sprintf@sp& (0+255),b
 11106  0016A6  0E02               	movlw	high UseBluetooth@buf
 11107  0016A8  0100               	movlb	0	; () banked
 11108  0016AA  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11109  0016AC  0E01               	movlw	low STR_72
 11110  0016AE  0100               	movlb	0	; () banked
 11111  0016B0  6FC9               	movwf	sprintf@f& (0+255),b
 11112  0016B2  0EF4               	movlw	high STR_72
 11113  0016B4  0100               	movlb	0	; () banked
 11114  0016B6  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11115  0016B8  C0E1  F0CB         	movff	_IR_NEC,?_sprintf+4
 11116  0016BC  C0E2  F0CC         	movff	_IR_NEC+1,?_sprintf+5
 11117  0016C0  C0E3  F0CD         	movff	_IR_NEC+2,?_sprintf+6
 11118  0016C4  C0E4  F0CE         	movff	_IR_NEC+3,?_sprintf+7
 11119  0016C8  C27C  F0CF         	movff	UseBluetooth@rfconf,?_sprintf+8
 11120  0016CC  0100               	movlb	0	; () banked
 11121  0016CE  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11122  0016D0  C264  F0D1         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11123  0016D4  0100               	movlb	0	; () banked
 11124  0016D6  6BD2               	clrf	(?_sprintf+11)& (0+255),b
 11125  0016D8  C275  F0D3         	movff	UseBluetooth@device,?_sprintf+12
 11126  0016DC  0100               	movlb	0	; () banked
 11127  0016DE  6BD4               	clrf	(?_sprintf+13)& (0+255),b
 11128  0016E0  EC7B  F010         	call	_sprintf	;wreg free
 11129                           
 11130                           ;Bluetooth.c: 739: }
 11131  0016E4  D01F               	goto	l15672
 11132  0016E6                     l15670:
 11133                           
 11134                           ;Bluetooth.c: 740: else
 11135                           ;Bluetooth.c: 741: {
 11136                           ;Bluetooth.c: 742: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 11137  0016E6  0E00               	movlw	low UseBluetooth@buf
 11138  0016E8  0100               	movlb	0	; () banked
 11139  0016EA  6FC7               	movwf	sprintf@sp& (0+255),b
 11140  0016EC  0E02               	movlw	high UseBluetooth@buf
 11141  0016EE  0100               	movlb	0	; () banked
 11142  0016F0  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11143  0016F2  0E40               	movlw	low STR_73
 11144  0016F4  0100               	movlb	0	; () banked
 11145  0016F6  6FC9               	movwf	sprintf@f& (0+255),b
 11146  0016F8  0EF4               	movlw	high STR_73
 11147  0016FA  0100               	movlb	0	; () banked
 11148  0016FC  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11149  0016FE  C0E1  F0CB         	movff	_IR_NEC,?_sprintf+4
 11150  001702  C0E2  F0CC         	movff	_IR_NEC+1,?_sprintf+5
 11151  001706  C0E3  F0CD         	movff	_IR_NEC+2,?_sprintf+6
 11152  00170A  C0E4  F0CE         	movff	_IR_NEC+3,?_sprintf+7
 11153  00170E  C27C  F0CF         	movff	UseBluetooth@rfconf,?_sprintf+8
 11154  001712  0100               	movlb	0	; () banked
 11155  001714  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11156  001716  C264  F0D1         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11157  00171A  0100               	movlb	0	; () banked
 11158  00171C  6BD2               	clrf	(?_sprintf+11)& (0+255),b
 11159  00171E  EC7B  F010         	call	_sprintf	;wreg free
 11160  001722  D000               	goto	l15672
 11161  001724                     l15672:
 11162                           
 11163                           ;Bluetooth.c: 743: }
 11164                           ;Bluetooth.c: 744: UARTstringCRLN(buf);
 11165  001724  0E00               	movlw	low UseBluetooth@buf
 11166  001726  0100               	movlb	0	; () banked
 11167  001728  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11168  00172A  0E02               	movlw	high UseBluetooth@buf
 11169  00172C  0100               	movlb	0	; () banked
 11170  00172E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11171  001730  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11172                           
 11173                           ;Bluetooth.c: 745: UARTstring(CRLN);
 11174  001734  0EFE               	movlw	low _CRLN
 11175  001736  0100               	movlb	0	; () banked
 11176  001738  6F7A               	movwf	UARTstring@data& (0+255),b
 11177  00173A  0EF3               	movlw	high _CRLN
 11178  00173C  0100               	movlb	0	; () banked
 11179  00173E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11180  001740  ECE7  F045         	call	_UARTstring	;wreg free
 11181                           
 11182                           ;Bluetooth.c: 747: for(i =0;i<10;i++)
 11183  001744  0E00               	movlw	0
 11184  001746  0102               	movlb	2	; () banked
 11185  001748  6F83               	movwf	UseBluetooth@i& (0+255),b
 11186                           
 11187                           ; BSR set to: 2
 11188  00174A  0E09               	movlw	9
 11189  00174C  0102               	movlb	2	; () banked
 11190  00174E  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11191  001750  D002               	goto	l15682
 11192  001752  0012               	return	
 11193                           
 11194                           ; BSR set to: 2
 11195  001754  0012               	return	
 11196  001756                     l15682:
 11197                           
 11198                           ; BSR set to: 2
 11199                           ;Bluetooth.c: 748: {
 11200                           ;Bluetooth.c: 749: (LATC |= 0x04);
 11201  001756  848B               	bsf	3979,2,c	;volatile
 11202                           
 11203                           ; BSR set to: 2
 11204                           ;Bluetooth.c: 750: delayUS(50000);
 11205  001758  0E50               	movlw	80
 11206  00175A  0100               	movlb	0	; () banked
 11207  00175C  6F79               	movwf	delayUS@US& (0+255),b
 11208  00175E  0EC3               	movlw	195
 11209  001760  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11210  001762  0E00               	movlw	0
 11211  001764  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11212  001766  0E00               	movlw	0
 11213  001768  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11214  00176A  EC6B  F046         	call	_delayUS	;wreg free
 11215                           
 11216                           ;Bluetooth.c: 751: (LATC &= ~0x04);
 11217  00176E  948B               	bcf	3979,2,c	;volatile
 11218                           
 11219                           ;Bluetooth.c: 752: delayUS(50000);
 11220  001770  0E50               	movlw	80
 11221  001772  0100               	movlb	0	; () banked
 11222  001774  6F79               	movwf	delayUS@US& (0+255),b
 11223  001776  0EC3               	movlw	195
 11224  001778  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11225  00177A  0E00               	movlw	0
 11226  00177C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11227  00177E  0E00               	movlw	0
 11228  001780  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11229  001782  EC6B  F046         	call	_delayUS	;wreg free
 11230  001786  0102               	movlb	2	; () banked
 11231  001788  2B83               	incf	UseBluetooth@i& (0+255),f,b
 11232                           
 11233                           ; BSR set to: 2
 11234  00178A  0E09               	movlw	9
 11235  00178C  0102               	movlb	2	; () banked
 11236  00178E  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11237  001790  D7E2               	goto	l15682
 11238  001792  0012               	return	
 11239                           
 11240                           ; BSR set to: 2
 11241                           ;Bluetooth.c: 755: }
 11242                           
 11243                           ; BSR set to: 2
 11244                           ;Bluetooth.c: 753: }
 11245                           ;Bluetooth.c: 754: return 1;
 11246                           ;	Return value of _UseBluetooth is never used
 11247  001794  0012               	return	
 11248  001796                     l15694:
 11249                           
 11250                           ; BSR set to: 2
 11251                           ;Bluetooth.c: 756: else
 11252                           ;Bluetooth.c: 757: {
 11253                           ;Bluetooth.c: 759: for(i=0; i < 3; i++)
 11254  001796  0E00               	movlw	0
 11255  001798  0102               	movlb	2	; () banked
 11256  00179A  6F83               	movwf	UseBluetooth@i& (0+255),b
 11257  00179C                     l15696:
 11258                           
 11259                           ; BSR set to: 2
 11260  00179C  0E02               	movlw	2
 11261  00179E  0102               	movlb	2	; () banked
 11262  0017A0  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11263  0017A2  D001               	goto	l15700
 11264                           
 11265                           ; BSR set to: 2
 11266  0017A4  D04B               	goto	l15706
 11267  0017A6                     l15700:
 11268                           
 11269                           ; BSR set to: 2
 11270                           ;Bluetooth.c: 760: {
 11271                           ;Bluetooth.c: 762: Global.RemoteButtonRF[tempRFArray][i][0] = 0;
 11272  0017A6  0102               	movlb	2	; () banked
 11273  0017A8  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11274  0017AA  0D06               	mullw	6
 11275  0017AC  0E00               	movlw	low _Global
 11276  0017AE  0101               	movlb	1	; () banked
 11277  0017B0  6F8F               	movwf	??_UseBluetooth& (0+255),b
 11278  0017B2  0E04               	movlw	high _Global
 11279  0017B4  0101               	movlb	1	; () banked
 11280  0017B6  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 11281  0017B8  0E2E               	movlw	46
 11282  0017BA  0101               	movlb	1	; () banked
 11283  0017BC  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11284  0017BE  0E00               	movlw	0
 11285  0017C0  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11286  0017C2  50F3               	movf	prodl,w,c
 11287  0017C4  0101               	movlb	1	; () banked
 11288  0017C6  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11289  0017C8  50F4               	movf	prodh,w,c
 11290  0017CA  0101               	movlb	1	; () banked
 11291  0017CC  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11292  0017CE  0102               	movlb	2	; () banked
 11293  0017D0  5183               	movf	UseBluetooth@i& (0+255),w,b
 11294  0017D2  0D02               	mullw	2
 11295  0017D4  50F3               	movf	prodl,w,c
 11296  0017D6  0101               	movlb	1	; () banked
 11297  0017D8  258F               	addwf	??_UseBluetooth& (0+255),w,b
 11298  0017DA  6ED9               	movwf	fsr2l,c
 11299  0017DC  50F4               	movf	prodh,w,c
 11300  0017DE  0101               	movlb	1	; () banked
 11301  0017E0  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11302  0017E2  6EDA               	movwf	fsr2h,c
 11303  0017E4  0E00               	movlw	0
 11304  0017E6  6EDF               	movwf	indf2,c
 11305                           
 11306                           ;Bluetooth.c: 763: Global.RemoteButtonRF[tempRFArray][i][1] = 0;
 11307  0017E8  0102               	movlb	2	; () banked
 11308  0017EA  517B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11309  0017EC  0D06               	mullw	6
 11310  0017EE  0E00               	movlw	low _Global
 11311  0017F0  0101               	movlb	1	; () banked
 11312  0017F2  6F8F               	movwf	??_UseBluetooth& (0+255),b
 11313  0017F4  0E04               	movlw	high _Global
 11314  0017F6  0101               	movlb	1	; () banked
 11315  0017F8  6F90               	movwf	(??_UseBluetooth+1)& (0+255),b
 11316  0017FA  0E2E               	movlw	46
 11317  0017FC  0101               	movlb	1	; () banked
 11318  0017FE  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11319  001800  0E00               	movlw	0
 11320  001802  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11321  001804  50F3               	movf	prodl,w,c
 11322  001806  0101               	movlb	1	; () banked
 11323  001808  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11324  00180A  50F4               	movf	prodh,w,c
 11325  00180C  0101               	movlb	1	; () banked
 11326  00180E  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11327  001810  0102               	movlb	2	; () banked
 11328  001812  5183               	movf	UseBluetooth@i& (0+255),w,b
 11329  001814  0D02               	mullw	2
 11330  001816  50F3               	movf	prodl,w,c
 11331  001818  0101               	movlb	1	; () banked
 11332  00181A  278F               	addwf	??_UseBluetooth& (0+255),f,b
 11333  00181C  50F4               	movf	prodh,w,c
 11334  00181E  0101               	movlb	1	; () banked
 11335  001820  2390               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11336  001822  0E01               	movlw	1
 11337  001824  0101               	movlb	1	; () banked
 11338  001826  258F               	addwf	??_UseBluetooth& (0+255),w,b
 11339  001828  6ED9               	movwf	fsr2l,c
 11340  00182A  0E00               	movlw	0
 11341  00182C  0101               	movlb	1	; () banked
 11342  00182E  2190               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11343  001830  6EDA               	movwf	fsr2h,c
 11344  001832  0E00               	movlw	0
 11345  001834  6EDF               	movwf	indf2,c
 11346                           
 11347                           ; BSR set to: 1
 11348  001836  0102               	movlb	2	; () banked
 11349  001838  2B83               	incf	UseBluetooth@i& (0+255),f,b
 11350  00183A  D7B0               	goto	l15696
 11351  00183C                     l15706:
 11352                           
 11353                           ; BSR set to: 2
 11354                           ;Bluetooth.c: 764: }
 11355                           ;Bluetooth.c: 765: SyncGlobalToEEPROM();
 11356  00183C  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11357                           
 11358                           ;Bluetooth.c: 766: if(device)
 11359  001840  0102               	movlb	2	; () banked
 11360  001842  5175               	movf	UseBluetooth@device& (0+255),w,b
 11361  001844  0102               	movlb	2	; () banked
 11362  001846  B4D8               	btfsc	status,2,c
 11363  001848  D01B               	goto	l15712
 11364                           
 11365                           ; BSR set to: 2
 11366                           ;Bluetooth.c: 767: {
 11367                           ;Bluetooth.c: 768: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 11368  00184A  0E00               	movlw	low UseBluetooth@buf
 11369  00184C  0100               	movlb	0	; () banked
 11370  00184E  6FC7               	movwf	sprintf@sp& (0+255),b
 11371  001850  0E02               	movlw	high UseBluetooth@buf
 11372  001852  0100               	movlb	0	; () banked
 11373  001854  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11374  001856  0E76               	movlw	low STR_74
 11375  001858  0100               	movlb	0	; () banked
 11376  00185A  6FC9               	movwf	sprintf@f& (0+255),b
 11377  00185C  0EF4               	movlw	high STR_74
 11378  00185E  0100               	movlb	0	; () banked
 11379  001860  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11380  001862  C27C  F0CB         	movff	UseBluetooth@rfconf,?_sprintf+4
 11381  001866  0100               	movlb	0	; () banked
 11382  001868  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 11383  00186A  C264  F0CD         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11384  00186E  0100               	movlb	0	; () banked
 11385  001870  6BCE               	clrf	(?_sprintf+7)& (0+255),b
 11386  001872  C275  F0CF         	movff	UseBluetooth@device,?_sprintf+8
 11387  001876  0100               	movlb	0	; () banked
 11388  001878  6BD0               	clrf	(?_sprintf+9)& (0+255),b
 11389  00187A  EC7B  F010         	call	_sprintf	;wreg free
 11390                           
 11391                           ;Bluetooth.c: 769: }
 11392  00187E  D017               	goto	l15714
 11393  001880                     l15712:
 11394                           
 11395                           ;Bluetooth.c: 770: else
 11396                           ;Bluetooth.c: 771: {
 11397                           ;Bluetooth.c: 772: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 11398  001880  0E00               	movlw	low UseBluetooth@buf
 11399  001882  0100               	movlb	0	; () banked
 11400  001884  6FC7               	movwf	sprintf@sp& (0+255),b
 11401  001886  0E02               	movlw	high UseBluetooth@buf
 11402  001888  0100               	movlb	0	; () banked
 11403  00188A  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11404  00188C  0E01               	movlw	low STR_75
 11405  00188E  0100               	movlb	0	; () banked
 11406  001890  6FC9               	movwf	sprintf@f& (0+255),b
 11407  001892  0EF8               	movlw	high STR_75
 11408  001894  0100               	movlb	0	; () banked
 11409  001896  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11410  001898  C27C  F0CB         	movff	UseBluetooth@rfconf,?_sprintf+4
 11411  00189C  0100               	movlb	0	; () banked
 11412  00189E  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 11413  0018A0  C264  F0CD         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11414  0018A4  0100               	movlb	0	; () banked
 11415  0018A6  6BCE               	clrf	(?_sprintf+7)& (0+255),b
 11416  0018A8  EC7B  F010         	call	_sprintf	;wreg free
 11417  0018AC  D000               	goto	l15714
 11418  0018AE                     l15714:
 11419                           
 11420                           ;Bluetooth.c: 773: }
 11421                           ;Bluetooth.c: 774: UARTstringCRLN(buf);
 11422  0018AE  0E00               	movlw	low UseBluetooth@buf
 11423  0018B0  0100               	movlb	0	; () banked
 11424  0018B2  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11425  0018B4  0E02               	movlw	high UseBluetooth@buf
 11426  0018B6  0100               	movlb	0	; () banked
 11427  0018B8  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11428  0018BA  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11429                           
 11430                           ;Bluetooth.c: 775: UARTstring(CRLN);
 11431  0018BE  0EFE               	movlw	low _CRLN
 11432  0018C0  0100               	movlb	0	; () banked
 11433  0018C2  6F7A               	movwf	UARTstring@data& (0+255),b
 11434  0018C4  0EF3               	movlw	high _CRLN
 11435  0018C6  0100               	movlb	0	; () banked
 11436  0018C8  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11437  0018CA  ECE7  F045         	call	_UARTstring	;wreg free
 11438                           
 11439                           ;Bluetooth.c: 777: for(i =0;i<10;i++)
 11440  0018CE  0E00               	movlw	0
 11441  0018D0  0102               	movlb	2	; () banked
 11442  0018D2  6F83               	movwf	UseBluetooth@i& (0+255),b
 11443                           
 11444                           ; BSR set to: 2
 11445  0018D4  0E09               	movlw	9
 11446  0018D6  0102               	movlb	2	; () banked
 11447  0018D8  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11448  0018DA  D002               	goto	l15724
 11449  0018DC  0012               	return	
 11450                           
 11451                           ; BSR set to: 2
 11452  0018DE  0012               	return	
 11453  0018E0                     l15724:
 11454                           
 11455                           ; BSR set to: 2
 11456                           ;Bluetooth.c: 778: {
 11457                           ;Bluetooth.c: 779: (LATC |= 0x04);
 11458  0018E0  848B               	bsf	3979,2,c	;volatile
 11459                           
 11460                           ; BSR set to: 2
 11461                           ;Bluetooth.c: 780: delayUS(50000);
 11462  0018E2  0E50               	movlw	80
 11463  0018E4  0100               	movlb	0	; () banked
 11464  0018E6  6F79               	movwf	delayUS@US& (0+255),b
 11465  0018E8  0EC3               	movlw	195
 11466  0018EA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11467  0018EC  0E00               	movlw	0
 11468  0018EE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11469  0018F0  0E00               	movlw	0
 11470  0018F2  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11471  0018F4  EC6B  F046         	call	_delayUS	;wreg free
 11472                           
 11473                           ;Bluetooth.c: 781: (LATC &= ~0x04);
 11474  0018F8  948B               	bcf	3979,2,c	;volatile
 11475                           
 11476                           ;Bluetooth.c: 782: delayUS(50000);
 11477  0018FA  0E50               	movlw	80
 11478  0018FC  0100               	movlb	0	; () banked
 11479  0018FE  6F79               	movwf	delayUS@US& (0+255),b
 11480  001900  0EC3               	movlw	195
 11481  001902  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11482  001904  0E00               	movlw	0
 11483  001906  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11484  001908  0E00               	movlw	0
 11485  00190A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11486  00190C  EC6B  F046         	call	_delayUS	;wreg free
 11487  001910  0102               	movlb	2	; () banked
 11488  001912  2B83               	incf	UseBluetooth@i& (0+255),f,b
 11489                           
 11490                           ; BSR set to: 2
 11491  001914  0E09               	movlw	9
 11492  001916  0102               	movlb	2	; () banked
 11493  001918  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11494  00191A  D7E2               	goto	l15724
 11495  00191C  0012               	return	
 11496                           
 11497                           ; BSR set to: 2
 11498                           ;Bluetooth.c: 785: }
 11499                           ;Bluetooth.c: 786: }
 11500                           
 11501                           ; BSR set to: 2
 11502                           ;Bluetooth.c: 783: }
 11503                           ;Bluetooth.c: 784: return 1;
 11504                           ;	Return value of _UseBluetooth is never used
 11505  00191E  0012               	return	
 11506  001920                     l15734:
 11507                           
 11508                           ; BSR set to: 2
 11509                           ;Bluetooth.c: 787: else
 11510                           ;Bluetooth.c: 788: {
 11511                           ;Bluetooth.c: 789: UARTstringCRLN((unsigned char *)"Error: RF channel needs to be one ch
      +                          aracter");
 11512  001920  0E2D               	movlw	low STR_76
 11513  001922  0100               	movlb	0	; () banked
 11514  001924  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11515  001926  0EF8               	movlw	high STR_76
 11516  001928  0100               	movlb	0	; () banked
 11517  00192A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11518  00192C  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11519                           
 11520                           ;Bluetooth.c: 790: UARTstring(CRLN);
 11521  001930  0EFE               	movlw	low _CRLN
 11522  001932  0100               	movlb	0	; () banked
 11523  001934  6F7A               	movwf	UARTstring@data& (0+255),b
 11524  001936  0EF3               	movlw	high _CRLN
 11525  001938  0100               	movlb	0	; () banked
 11526  00193A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11527  00193C  ECE7  F045         	call	_UARTstring	;wreg free
 11528                           
 11529                           ;Bluetooth.c: 792: }
 11530                           ;Bluetooth.c: 793: }
 11531                           ;Bluetooth.c: 794: }
 11532                           
 11533                           ;Bluetooth.c: 791: return 0;
 11534                           ;	Return value of _UseBluetooth is never used
 11535  001940  0012               	return	
 11536  001942                     l15738:
 11537                           
 11538                           ;Bluetooth.c: 795: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Reset"))
 11539  001942  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11540  001946  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11541  00194A  0ED2               	movlw	low STR_77
 11542  00194C  0100               	movlb	0	; () banked
 11543  00194E  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11544  001950  0EFF               	movlw	high STR_77
 11545  001952  0100               	movlb	0	; () banked
 11546  001954  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11547  001956  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
 11548  00195A  0900               	iorlw	0
 11549  00195C  B4D8               	btfsc	status,2,c
 11550  00195E  D097               	goto	l15800
 11551                           
 11552                           ;Bluetooth.c: 796: {
 11553                           ;Bluetooth.c: 797: cleanBuffer(ReceivedString, ReceivedStringPos);
 11554  001960  0E00               	movlw	low _ReceivedString
 11555  001962  0100               	movlb	0	; () banked
 11556  001964  6F79               	movwf	cleanBuffer@data& (0+255),b
 11557  001966  0E06               	movlw	high _ReceivedString
 11558  001968  0100               	movlb	0	; () banked
 11559  00196A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 11560  00196C  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 11561  001970  0100               	movlb	0	; () banked
 11562  001972  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 11563  001974  ECBA  F045         	call	_cleanBuffer	;wreg free
 11564                           
 11565                           ;Bluetooth.c: 798: ReceivedStringPos = 0;
 11566  001978  0E00               	movlw	0
 11567  00197A  0100               	movlb	0	; () banked
 11568  00197C  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;Bluetooth.c: 799: NewReceivedString = 0;
 11572  00197E  0E00               	movlw	0
 11573  001980  0100               	movlb	0	; () banked
 11574  001982  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;Bluetooth.c: 800: UARTstring((unsigned char *)"Enter Y to reset or N to cancel");
 11578  001984  0E02               	movlw	low STR_78
 11579  001986  0100               	movlb	0	; () banked
 11580  001988  6F7A               	movwf	UARTstring@data& (0+255),b
 11581  00198A  0EFA               	movlw	high STR_78
 11582  00198C  0100               	movlb	0	; () banked
 11583  00198E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11584  001990  ECE7  F045         	call	_UARTstring	;wreg free
 11585                           
 11586                           ;Bluetooth.c: 801: UARTstring(CRLN);
 11587  001994  0EFE               	movlw	low _CRLN
 11588  001996  0100               	movlb	0	; () banked
 11589  001998  6F7A               	movwf	UARTstring@data& (0+255),b
 11590  00199A  0EF3               	movlw	high _CRLN
 11591  00199C  0100               	movlb	0	; () banked
 11592  00199E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11593  0019A0  ECE7  F045         	call	_UARTstring	;wreg free
 11594                           
 11595                           ;Bluetooth.c: 802: UARTchar('>');
 11596  0019A4  0E3E               	movlw	62
 11597  0019A6  ECF0  F048         	call	_UARTchar
 11598                           
 11599                           ;Bluetooth.c: 803: timeout = 0;
 11600  0019AA  0E00               	movlw	0
 11601  0019AC  0102               	movlb	2	; () banked
 11602  0019AE  6F73               	movwf	UseBluetooth@timeout& (0+255),b
 11603                           
 11604                           ; BSR set to: 2
 11605                           ;Bluetooth.c: 804: ClearUSART();
 11606  0019B0  EC8E  F049         	call	_ClearUSART	;wreg free
 11607                           
 11608                           ;Bluetooth.c: 805: PIR1bits.RCIF = 0;
 11609  0019B4  9A9E               	bcf	3998,5,c	;volatile
 11610                           
 11611                           ;Bluetooth.c: 806: PIE1bits.RCIE = 1;
 11612  0019B6  8A9D               	bsf	3997,5,c	;volatile
 11613                           
 11614                           ;Bluetooth.c: 807: while(!NewReceivedString)
 11615  0019B8  D023               	goto	l15770
 11616  0019BA                     l15760:
 11617                           
 11618                           ;Bluetooth.c: 808: {
 11619                           ;Bluetooth.c: 809: delayUS(300000);
 11620  0019BA  0EE0               	movlw	224
 11621  0019BC  0100               	movlb	0	; () banked
 11622  0019BE  6F79               	movwf	delayUS@US& (0+255),b
 11623  0019C0  0E93               	movlw	147
 11624  0019C2  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 11625  0019C4  0E04               	movlw	4
 11626  0019C6  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 11627  0019C8  0E00               	movlw	0
 11628  0019CA  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 11629  0019CC  EC6B  F046         	call	_delayUS	;wreg free
 11630                           
 11631                           ;Bluetooth.c: 810: timeout++;
 11632  0019D0  0102               	movlb	2	; () banked
 11633  0019D2  2B73               	incf	UseBluetooth@timeout& (0+255),f,b
 11634                           
 11635                           ; BSR set to: 2
 11636                           ;Bluetooth.c: 811: if(timeout > 25)
 11637  0019D4  0E19               	movlw	25
 11638  0019D6  0102               	movlb	2	; () banked
 11639  0019D8  6573               	cpfsgt	UseBluetooth@timeout& (0+255),b
 11640  0019DA  D012               	goto	l15770
 11641                           
 11642                           ; BSR set to: 2
 11643                           ;Bluetooth.c: 812: {
 11644                           ;Bluetooth.c: 813: UARTstring(CRLN);
 11645  0019DC  0EFE               	movlw	low _CRLN
 11646  0019DE  0100               	movlb	0	; () banked
 11647  0019E0  6F7A               	movwf	UARTstring@data& (0+255),b
 11648  0019E2  0EF3               	movlw	high _CRLN
 11649  0019E4  0100               	movlb	0	; () banked
 11650  0019E6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11651  0019E8  ECE7  F045         	call	_UARTstring	;wreg free
 11652                           
 11653                           ;Bluetooth.c: 814: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11654  0019EC  0E3A               	movlw	low STR_79
 11655  0019EE  0100               	movlb	0	; () banked
 11656  0019F0  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11657  0019F2  0EFB               	movlw	high STR_79
 11658  0019F4  0100               	movlb	0	; () banked
 11659  0019F6  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11660  0019F8  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11661                           
 11662                           ;Bluetooth.c: 815: return 0;
 11663                           ;	Return value of _UseBluetooth is never used
 11664  0019FC  0012               	return	
 11665  0019FE  D000               	goto	l15770
 11666  001A00                     l15770:
 11667  001A00  0100               	movlb	0	; () banked
 11668  001A02  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 11669  001A04  B4D8               	btfsc	status,2,c
 11670  001A06  D7D9               	goto	l15760
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;Bluetooth.c: 816: }
 11674                           ;Bluetooth.c: 817: }
 11675                           ;Bluetooth.c: 818: PIE1bits.RCIE = 0;
 11676  001A08  9A9D               	bcf	3997,5,c	;volatile
 11677                           
 11678                           ; BSR set to: 0
 11679                           ;Bluetooth.c: 819: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 11680  001A0A  0E59               	movlw	89
 11681  001A0C  0106               	movlb	6	; () banked
 11682  001A0E  1900               	xorwf	_ReceivedString& (0+255),w,b
 11683  001A10  B4D8               	btfsc	status,2,c
 11684  001A12  D009               	goto	l15778
 11685                           
 11686                           ; BSR set to: 6
 11687  001A14  0E79               	movlw	121
 11688  001A16  0106               	movlb	6	; () banked
 11689  001A18  1900               	xorwf	_ReceivedString& (0+255),w,b
 11690  001A1A  A4D8               	btfss	status,2,c
 11691  001A1C  D014               	goto	l15788
 11692                           
 11693                           ; BSR set to: 6
 11694  001A1E  0106               	movlb	6	; () banked
 11695  001A20  5101               	movf	(_ReceivedString+1)& (0+255),w,b
 11696  001A22  A4D8               	btfss	status,2,c
 11697  001A24  D010               	goto	l15788
 11698  001A26                     l15778:
 11699                           
 11700                           ; BSR set to: 6
 11701                           ;Bluetooth.c: 820: {
 11702                           ;Bluetooth.c: 822: UARTstringCRLN((unsigned char *)"System will reset");
 11703  001A26  0E22               	movlw	low STR_80
 11704  001A28  0100               	movlb	0	; () banked
 11705  001A2A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11706  001A2C  0EFE               	movlw	high STR_80
 11707  001A2E  0100               	movlb	0	; () banked
 11708  001A30  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11709  001A32  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11710                           
 11711                           ;Bluetooth.c: 823: Global.EEPROMinitFlag = 0;
 11712  001A36  0E00               	movlw	0
 11713  001A38  0104               	movlb	4	; () banked
 11714  001A3A  6F2D               	movwf	(_Global+45)& (0+255),b
 11715                           
 11716                           ; BSR set to: 4
 11717                           ;Bluetooth.c: 824: SyncGlobalToEEPROM();
 11718  001A3C  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
 11719  001A40  00FF               	reset		;# 
 11720                           
 11721                           ;Bluetooth.c: 826: return 1;
 11722                           ;	Return value of _UseBluetooth is never used
 11723  001A42  0012               	return	
 11724                           
 11725                           ;Bluetooth.c: 827: }
 11726  001A44  D011               	goto	l15790
 11727  001A46                     l15788:
 11728                           
 11729                           ;Bluetooth.c: 828: else
 11730                           ;Bluetooth.c: 829: {
 11731                           ;Bluetooth.c: 830: UARTstring(CRLN);
 11732  001A46  0EFE               	movlw	low _CRLN
 11733  001A48  0100               	movlb	0	; () banked
 11734  001A4A  6F7A               	movwf	UARTstring@data& (0+255),b
 11735  001A4C  0EF3               	movlw	high _CRLN
 11736  001A4E  0100               	movlb	0	; () banked
 11737  001A50  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11738  001A52  ECE7  F045         	call	_UARTstring	;wreg free
 11739                           
 11740                           ;Bluetooth.c: 831: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11741  001A56  0E3A               	movlw	low STR_79
 11742  001A58  0100               	movlb	0	; () banked
 11743  001A5A  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11744  001A5C  0EFB               	movlw	high STR_79
 11745  001A5E  0100               	movlb	0	; () banked
 11746  001A60  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11747  001A62  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11748  001A66  D000               	goto	l15790
 11749  001A68                     l15790:
 11750                           
 11751                           ;Bluetooth.c: 832: }
 11752                           ;Bluetooth.c: 833: cleanBuffer(ReceivedString, ReceivedStringPos);
 11753  001A68  0E00               	movlw	low _ReceivedString
 11754  001A6A  0100               	movlb	0	; () banked
 11755  001A6C  6F79               	movwf	cleanBuffer@data& (0+255),b
 11756  001A6E  0E06               	movlw	high _ReceivedString
 11757  001A70  0100               	movlb	0	; () banked
 11758  001A72  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 11759  001A74  C0E0  F07B         	movff	_ReceivedStringPos,cleanBuffer@count
 11760  001A78  0100               	movlb	0	; () banked
 11761  001A7A  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 11762  001A7C  ECBA  F045         	call	_cleanBuffer	;wreg free
 11763                           
 11764                           ;Bluetooth.c: 834: ReceivedStringPos = 0;
 11765  001A80  0E00               	movlw	0
 11766  001A82  0100               	movlb	0	; () banked
 11767  001A84  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;Bluetooth.c: 835: NewReceivedString = 0;
 11771  001A86  0E00               	movlw	0
 11772  001A88  0100               	movlb	0	; () banked
 11773  001A8A  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;Bluetooth.c: 837: }
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;Bluetooth.c: 836: return 0;
 11780                           ;	Return value of _UseBluetooth is never used
 11781  001A8C  0012               	return	
 11782  001A8E                     l15800:
 11783                           
 11784                           ;Bluetooth.c: 838: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Voltage")
      +                          )
 11785  001A8E  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11786  001A92  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11787  001A96  0EA3               	movlw	low STR_82
 11788  001A98  0100               	movlb	0	; () banked
 11789  001A9A  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11790  001A9C  0EFF               	movlw	high STR_82
 11791  001A9E  0100               	movlb	0	; () banked
 11792  001AA0  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11793  001AA2  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
 11794  001AA6  0900               	iorlw	0
 11795  001AA8  B4D8               	btfsc	status,2,c
 11796  001AAA  D02F               	goto	l15810
 11797                           
 11798                           ;Bluetooth.c: 839: {
 11799                           ;Bluetooth.c: 840: UARTstring(CRLN);
 11800  001AAC  0EFE               	movlw	low _CRLN
 11801  001AAE  0100               	movlb	0	; () banked
 11802  001AB0  6F7A               	movwf	UARTstring@data& (0+255),b
 11803  001AB2  0EF3               	movlw	high _CRLN
 11804  001AB4  0100               	movlb	0	; () banked
 11805  001AB6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11806  001AB8  ECE7  F045         	call	_UARTstring	;wreg free
 11807                           
 11808                           ;Bluetooth.c: 841: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 11809  001ABC  0E00               	movlw	low UseBluetooth@buf
 11810  001ABE  0100               	movlb	0	; () banked
 11811  001AC0  6FC7               	movwf	sprintf@sp& (0+255),b
 11812  001AC2  0E02               	movlw	high UseBluetooth@buf
 11813  001AC4  0100               	movlb	0	; () banked
 11814  001AC6  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11815  001AC8  0E77               	movlw	low STR_83
 11816  001ACA  0100               	movlb	0	; () banked
 11817  001ACC  6FC9               	movwf	sprintf@f& (0+255),b
 11818  001ACE  0EFD               	movlw	high STR_83
 11819  001AD0  0100               	movlb	0	; () banked
 11820  001AD2  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11821  001AD4  EC99  F03F         	call	_ReadVoltage	;wreg free
 11822  001AD8  C0A2  F0CB         	movff	?_ReadVoltage,?_sprintf+4
 11823  001ADC  C0A3  F0CC         	movff	?_ReadVoltage+1,?_sprintf+5
 11824  001AE0  C0A4  F0CD         	movff	?_ReadVoltage+2,?_sprintf+6
 11825  001AE4  EC7B  F010         	call	_sprintf	;wreg free
 11826                           
 11827                           ;Bluetooth.c: 842: UARTstringCRLN(buf);
 11828  001AE8  0E00               	movlw	low UseBluetooth@buf
 11829  001AEA  0100               	movlb	0	; () banked
 11830  001AEC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11831  001AEE  0E02               	movlw	high UseBluetooth@buf
 11832  001AF0  0100               	movlb	0	; () banked
 11833  001AF2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11834  001AF4  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11835                           
 11836                           ;Bluetooth.c: 843: UARTstring(CRLN);
 11837  001AF8  0EFE               	movlw	low _CRLN
 11838  001AFA  0100               	movlb	0	; () banked
 11839  001AFC  6F7A               	movwf	UARTstring@data& (0+255),b
 11840  001AFE  0EF3               	movlw	high _CRLN
 11841  001B00  0100               	movlb	0	; () banked
 11842  001B02  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11843  001B04  ECE7  F045         	call	_UARTstring	;wreg free
 11844                           
 11845                           ;Bluetooth.c: 844: }
 11846  001B08  0012               	return	
 11847  001B0A                     l15810:
 11848                           
 11849                           ;Bluetooth.c: 845: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Version")
      +                          )
 11850  001B0A  C18C  F07C         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11851  001B0E  C18D  F07D         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11852  001B12  0E12               	movlw	low (STR_94+18)
 11853  001B14  0100               	movlb	0	; () banked
 11854  001B16  6F7E               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11855  001B18  0EFC               	movlw	high (STR_94+18)
 11856  001B1A  0100               	movlb	0	; () banked
 11857  001B1C  6F7F               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11858  001B1E  EC9D  F042         	call	_StringMatchCaseInsensitive	;wreg free
 11859  001B22  0900               	iorlw	0
 11860  001B24  B4D8               	btfsc	status,2,c
 11861  001B26  D02D               	goto	l15820
 11862                           
 11863                           ;Bluetooth.c: 846: {
 11864                           ;Bluetooth.c: 847: UARTstring(CRLN);
 11865  001B28  0EFE               	movlw	low _CRLN
 11866  001B2A  0100               	movlb	0	; () banked
 11867  001B2C  6F7A               	movwf	UARTstring@data& (0+255),b
 11868  001B2E  0EF3               	movlw	high _CRLN
 11869  001B30  0100               	movlb	0	; () banked
 11870  001B32  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11871  001B34  ECE7  F045         	call	_UARTstring	;wreg free
 11872                           
 11873                           ;Bluetooth.c: 848: sprintf(buf,"Firmware Version: %s", Version);
 11874  001B38  0E00               	movlw	low UseBluetooth@buf
 11875  001B3A  0100               	movlb	0	; () banked
 11876  001B3C  6FC7               	movwf	sprintf@sp& (0+255),b
 11877  001B3E  0E02               	movlw	high UseBluetooth@buf
 11878  001B40  0100               	movlb	0	; () banked
 11879  001B42  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 11880  001B44  0E26               	movlw	low STR_85
 11881  001B46  0100               	movlb	0	; () banked
 11882  001B48  6FC9               	movwf	sprintf@f& (0+255),b
 11883  001B4A  0EFD               	movlw	high STR_85
 11884  001B4C  0100               	movlb	0	; () banked
 11885  001B4E  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 11886  001B50  0EED               	movlw	low _Version
 11887  001B52  0100               	movlb	0	; () banked
 11888  001B54  6FCB               	movwf	(?_sprintf+4)& (0+255),b
 11889  001B56  0EF3               	movlw	high _Version
 11890  001B58  0100               	movlb	0	; () banked
 11891  001B5A  6FCC               	movwf	(?_sprintf+5)& (0+255),b
 11892  001B5C  EC7B  F010         	call	_sprintf	;wreg free
 11893                           
 11894                           ;Bluetooth.c: 849: UARTstringCRLN(buf);
 11895  001B60  0E00               	movlw	low UseBluetooth@buf
 11896  001B62  0100               	movlb	0	; () banked
 11897  001B64  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 11898  001B66  0E02               	movlw	high UseBluetooth@buf
 11899  001B68  0100               	movlb	0	; () banked
 11900  001B6A  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11901  001B6C  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 11902                           
 11903                           ;Bluetooth.c: 850: UARTstring(CRLN);
 11904  001B70  0EFE               	movlw	low _CRLN
 11905  001B72  0100               	movlb	0	; () banked
 11906  001B74  6F7A               	movwf	UARTstring@data& (0+255),b
 11907  001B76  0EF3               	movlw	high _CRLN
 11908  001B78  0100               	movlb	0	; () banked
 11909  001B7A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11910  001B7C  ECE7  F045         	call	_UARTstring	;wreg free
 11911                           
 11912                           ;Bluetooth.c: 851: }
 11913  001B80  0012               	return	
 11914  001B82                     l15820:
 11915                           
 11916                           ;Bluetooth.c: 852: else if(StringMatch(String,(unsigned char *)"???"))
 11917  001B82  C18C  F079         	movff	UseBluetooth@String,StringMatch@This
 11918  001B86  C18D  F07A         	movff	UseBluetooth@String+1,StringMatch@This+1
 11919  001B8A  0EEB               	movlw	low STR_86
 11920  001B8C  0100               	movlb	0	; () banked
 11921  001B8E  6F7B               	movwf	StringMatch@That& (0+255),b
 11922  001B90  0EFF               	movlw	high STR_86
 11923  001B92  0100               	movlb	0	; () banked
 11924  001B94  6F7C               	movwf	(StringMatch@That+1)& (0+255),b
 11925  001B96  ECB5  F044         	call	_StringMatch	;wreg free
 11926  001B9A  0900               	iorlw	0
 11927  001B9C  B4D8               	btfsc	status,2,c
 11928  001B9E  D291               	goto	l15886
 11929                           
 11930                           ;Bluetooth.c: 853: {
 11931                           ;Bluetooth.c: 854: UARTstring(CRLN);
 11932  001BA0  0EFE               	movlw	low _CRLN
 11933  001BA2  0100               	movlb	0	; () banked
 11934  001BA4  6F7A               	movwf	UARTstring@data& (0+255),b
 11935  001BA6  0EF3               	movlw	high _CRLN
 11936  001BA8  0100               	movlb	0	; () banked
 11937  001BAA  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11938  001BAC  ECE7  F045         	call	_UARTstring	;wreg free
 11939                           
 11940                           ;Bluetooth.c: 855: for(i=0; i< 34; i++ )
 11941  001BB0  0E00               	movlw	0
 11942  001BB2  0102               	movlb	2	; () banked
 11943  001BB4  6F83               	movwf	UseBluetooth@i& (0+255),b
 11944  001BB6                     l15826:
 11945                           
 11946                           ; BSR set to: 2
 11947  001BB6  0E21               	movlw	33
 11948  001BB8  0102               	movlb	2	; () banked
 11949  001BBA  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11950  001BBC  D001               	goto	l15830
 11951                           
 11952                           ; BSR set to: 2
 11953  001BBE  D006               	goto	l15836
 11954  001BC0                     l15830:
 11955                           
 11956                           ; BSR set to: 2
 11957                           ;Bluetooth.c: 856: {
 11958                           ;Bluetooth.c: 857: UARTchar('~');
 11959  001BC0  0E7E               	movlw	126
 11960  001BC2  ECF0  F048         	call	_UARTchar
 11961  001BC6  0102               	movlb	2	; () banked
 11962  001BC8  2B83               	incf	UseBluetooth@i& (0+255),f,b
 11963  001BCA  D7F5               	goto	l15826
 11964  001BCC                     l15836:
 11965                           
 11966                           ; BSR set to: 2
 11967                           ;Bluetooth.c: 858: }
 11968                           ;Bluetooth.c: 859: UARTstring((unsigned char *)"Command Menu");
 11969  001BCC  0EF3               	movlw	low (STR_143+14)
 11970  001BCE  0100               	movlb	0	; () banked
 11971  001BD0  6F7A               	movwf	UARTstring@data& (0+255),b
 11972  001BD2  0EFB               	movlw	high (STR_143+14)
 11973  001BD4  0100               	movlb	0	; () banked
 11974  001BD6  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 11975  001BD8  ECE7  F045         	call	_UARTstring	;wreg free
 11976                           
 11977                           ;Bluetooth.c: 860: for(i=0; i< 34; i++ )
 11978  001BDC  0E00               	movlw	0
 11979  001BDE  0102               	movlb	2	; () banked
 11980  001BE0  6F83               	movwf	UseBluetooth@i& (0+255),b
 11981  001BE2                     l15840:
 11982                           
 11983                           ; BSR set to: 2
 11984  001BE2  0E21               	movlw	33
 11985  001BE4  0102               	movlb	2	; () banked
 11986  001BE6  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 11987  001BE8  D001               	goto	l15844
 11988                           
 11989                           ; BSR set to: 2
 11990  001BEA  D006               	goto	l15850
 11991  001BEC                     l15844:
 11992                           
 11993                           ; BSR set to: 2
 11994                           ;Bluetooth.c: 861: {
 11995                           ;Bluetooth.c: 862: UARTchar('~');
 11996  001BEC  0E7E               	movlw	126
 11997  001BEE  ECF0  F048         	call	_UARTchar
 11998  001BF2  0102               	movlb	2	; () banked
 11999  001BF4  2B83               	incf	UseBluetooth@i& (0+255),f,b
 12000  001BF6  D7F5               	goto	l15840
 12001  001BF8                     l15850:
 12002                           
 12003                           ; BSR set to: 2
 12004                           ;Bluetooth.c: 863: }
 12005                           ;Bluetooth.c: 864: UARTstring(CRLN);
 12006  001BF8  0EFE               	movlw	low _CRLN
 12007  001BFA  0100               	movlb	0	; () banked
 12008  001BFC  6F7A               	movwf	UARTstring@data& (0+255),b
 12009  001BFE  0EF3               	movlw	high _CRLN
 12010  001C00  0100               	movlb	0	; () banked
 12011  001C02  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12012  001C04  ECE7  F045         	call	_UARTstring	;wreg free
 12013                           
 12014                           ;Bluetooth.c: 865: UARTstring(CRLN);
 12015  001C08  0EFE               	movlw	low _CRLN
 12016  001C0A  0100               	movlb	0	; () banked
 12017  001C0C  6F7A               	movwf	UARTstring@data& (0+255),b
 12018  001C0E  0EF3               	movlw	high _CRLN
 12019  001C10  0100               	movlb	0	; () banked
 12020  001C12  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12021  001C14  ECE7  F045         	call	_UARTstring	;wreg free
 12022                           
 12023                           ;Bluetooth.c: 866: UARTstringCRLN((unsigned char *)"System commands:");
 12024  001C18  0E45               	movlw	low STR_88
 12025  001C1A  0100               	movlb	0	; () banked
 12026  001C1C  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12027  001C1E  0EFE               	movlw	high STR_88
 12028  001C20  0100               	movlb	0	; () banked
 12029  001C22  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12030  001C24  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12031                           
 12032                           ;Bluetooth.c: 867: UARTcommandMenu((unsigned char *)"???", (unsigned char *)"Help Menu")
      +                          ;
 12033  001C28  0EEB               	movlw	low STR_86
 12034  001C2A  0100               	movlb	0	; () banked
 12035  001C2C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12036  001C2E  0EFF               	movlw	high STR_86
 12037  001C30  0100               	movlb	0	; () banked
 12038  001C32  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12039  001C34  0E7E               	movlw	low STR_90
 12040  001C36  0100               	movlb	0	; () banked
 12041  001C38  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12042  001C3A  0EFF               	movlw	high STR_90
 12043  001C3C  0100               	movlb	0	; () banked
 12044  001C3E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12045  001C40  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12046                           
 12047                           ;Bluetooth.c: 868: UARTcommandMenu((unsigned char *)"Reset", (unsigned char *)"Clears me
      +                          mory and resets device");
 12048  001C44  0ED2               	movlw	low STR_77
 12049  001C46  0100               	movlb	0	; () banked
 12050  001C48  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12051  001C4A  0EFF               	movlw	high STR_77
 12052  001C4C  0100               	movlb	0	; () banked
 12053  001C4E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12054  001C50  0EE2               	movlw	low STR_92
 12055  001C52  0100               	movlb	0	; () banked
 12056  001C54  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12057  001C56  0EF9               	movlw	high STR_92
 12058  001C58  0100               	movlb	0	; () banked
 12059  001C5A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12060  001C5C  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12061                           
 12062                           ;Bluetooth.c: 869: UARTcommandMenu((unsigned char *)"Version", (unsigned char *)"Display
      +                          s Firmware Version");
 12063  001C60  0E12               	movlw	low (STR_94+18)
 12064  001C62  0100               	movlb	0	; () banked
 12065  001C64  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12066  001C66  0EFC               	movlw	high (STR_94+18)
 12067  001C68  0100               	movlb	0	; () banked
 12068  001C6A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12069  001C6C  0E00               	movlw	low STR_94
 12070  001C6E  0100               	movlb	0	; () banked
 12071  001C70  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12072  001C72  0EFC               	movlw	high STR_94
 12073  001C74  0100               	movlb	0	; () banked
 12074  001C76  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12075  001C78  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12076                           
 12077                           ;Bluetooth.c: 870: UARTstring(CRLN);
 12078  001C7C  0EFE               	movlw	low _CRLN
 12079  001C7E  0100               	movlb	0	; () banked
 12080  001C80  6F7A               	movwf	UARTstring@data& (0+255),b
 12081  001C82  0EF3               	movlw	high _CRLN
 12082  001C84  0100               	movlb	0	; () banked
 12083  001C86  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12084  001C88  ECE7  F045         	call	_UARTstring	;wreg free
 12085                           
 12086                           ;Bluetooth.c: 871: UARTstringCRLN((unsigned char *)"Diagnostic Commands:");
 12087  001C8C  0E11               	movlw	low STR_95
 12088  001C8E  0100               	movlb	0	; () banked
 12089  001C90  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12090  001C92  0EFD               	movlw	high STR_95
 12091  001C94  0100               	movlb	0	; () banked
 12092  001C96  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12093  001C98  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12094                           
 12095                           ;Bluetooth.c: 872: UARTcommandMenu((unsigned char *)"Voltage", (unsigned char *)"Display
      +                          s the supply voltage");
 12096  001C9C  0EA3               	movlw	low STR_82
 12097  001C9E  0100               	movlb	0	; () banked
 12098  001CA0  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12099  001CA2  0EFF               	movlw	high STR_82
 12100  001CA4  0100               	movlb	0	; () banked
 12101  001CA6  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12102  001CA8  0EAD               	movlw	low STR_97
 12103  001CAA  0100               	movlb	0	; () banked
 12104  001CAC  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12105  001CAE  0EFB               	movlw	high STR_97
 12106  001CB0  0100               	movlb	0	; () banked
 12107  001CB2  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12108  001CB4  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12109                           
 12110                           ;Bluetooth.c: 873: UARTstring(CRLN);
 12111  001CB8  0EFE               	movlw	low _CRLN
 12112  001CBA  0100               	movlb	0	; () banked
 12113  001CBC  6F7A               	movwf	UARTstring@data& (0+255),b
 12114  001CBE  0EF3               	movlw	high _CRLN
 12115  001CC0  0100               	movlb	0	; () banked
 12116  001CC2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12117  001CC4  ECE7  F045         	call	_UARTstring	;wreg free
 12118                           
 12119                           ;Bluetooth.c: 874: UARTstringCRLN((unsigned char *)"IR commands:");
 12120  001CC8  0EBF               	movlw	low STR_98
 12121  001CCA  0100               	movlb	0	; () banked
 12122  001CCC  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12123  001CCE  0EFE               	movlw	high STR_98
 12124  001CD0  0100               	movlb	0	; () banked
 12125  001CD2  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12126  001CD4  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12127                           
 12128                           ;Bluetooth.c: 875: for(i=1; i <= 20; i++)
 12129  001CD8  0E01               	movlw	1
 12130  001CDA  0102               	movlb	2	; () banked
 12131  001CDC  6F83               	movwf	UseBluetooth@i& (0+255),b
 12132  001CDE                     l15854:
 12133                           
 12134                           ; BSR set to: 2
 12135  001CDE  0E14               	movlw	20
 12136  001CE0  0102               	movlb	2	; () banked
 12137  001CE2  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 12138  001CE4  D001               	goto	l15858
 12139                           
 12140                           ; BSR set to: 2
 12141  001CE6  D030               	goto	l15868
 12142  001CE8                     l15858:
 12143                           
 12144                           ; BSR set to: 2
 12145                           ;Bluetooth.c: 876: {
 12146                           ;Bluetooth.c: 877: cleanBuffer(buf,50);
 12147  001CE8  0E00               	movlw	low UseBluetooth@buf
 12148  001CEA  0100               	movlb	0	; () banked
 12149  001CEC  6F79               	movwf	cleanBuffer@data& (0+255),b
 12150  001CEE  0E02               	movlw	high UseBluetooth@buf
 12151  001CF0  0100               	movlb	0	; () banked
 12152  001CF2  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 12153  001CF4  0E00               	movlw	0
 12154  001CF6  0100               	movlb	0	; () banked
 12155  001CF8  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 12156  001CFA  0E32               	movlw	50
 12157  001CFC  6F7B               	movwf	cleanBuffer@count& (0+255),b
 12158  001CFE  ECBA  F045         	call	_cleanBuffer	;wreg free
 12159                           
 12160                           ;Bluetooth.c: 878: sprintf(buf,"RemoteButton%d",i);
 12161  001D02  0E00               	movlw	low UseBluetooth@buf
 12162  001D04  0100               	movlb	0	; () banked
 12163  001D06  6FC7               	movwf	sprintf@sp& (0+255),b
 12164  001D08  0E02               	movlw	high UseBluetooth@buf
 12165  001D0A  0100               	movlb	0	; () banked
 12166  001D0C  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12167  001D0E  0E87               	movlw	low STR_99
 12168  001D10  0100               	movlb	0	; () banked
 12169  001D12  6FC9               	movwf	sprintf@f& (0+255),b
 12170  001D14  0EFE               	movlw	high STR_99
 12171  001D16  0100               	movlb	0	; () banked
 12172  001D18  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12173  001D1A  C283  F0CB         	movff	UseBluetooth@i,?_sprintf+4
 12174  001D1E  0100               	movlb	0	; () banked
 12175  001D20  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 12176  001D22  EC7B  F010         	call	_sprintf	;wreg free
 12177                           
 12178                           ;Bluetooth.c: 879: UARTcommandMenu(buf, "Transmits saved NEC code");
 12179  001D26  0E00               	movlw	low UseBluetooth@buf
 12180  001D28  0100               	movlb	0	; () banked
 12181  001D2A  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12182  001D2C  0E02               	movlw	high UseBluetooth@buf
 12183  001D2E  0100               	movlb	0	; () banked
 12184  001D30  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12185  001D32  0E1A               	movlw	low STR_100
 12186  001D34  0100               	movlb	0	; () banked
 12187  001D36  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12188  001D38  0EFC               	movlw	high STR_100
 12189  001D3A  0100               	movlb	0	; () banked
 12190  001D3C  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12191  001D3E  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12192  001D42  0102               	movlb	2	; () banked
 12193  001D44  2B83               	incf	UseBluetooth@i& (0+255),f,b
 12194  001D46  D7CB               	goto	l15854
 12195  001D48                     l15868:
 12196                           
 12197                           ; BSR set to: 2
 12198                           ;Bluetooth.c: 880: }
 12199                           ;Bluetooth.c: 881: for(i=1; i <= 20; i++)
 12200  001D48  0E01               	movlw	1
 12201  001D4A  0102               	movlb	2	; () banked
 12202  001D4C  6F83               	movwf	UseBluetooth@i& (0+255),b
 12203  001D4E                     l15870:
 12204                           
 12205                           ; BSR set to: 2
 12206  001D4E  0E14               	movlw	20
 12207  001D50  0102               	movlb	2	; () banked
 12208  001D52  6583               	cpfsgt	UseBluetooth@i& (0+255),b
 12209  001D54  D001               	goto	l15874
 12210                           
 12211                           ; BSR set to: 2
 12212  001D56  D030               	goto	l15884
 12213  001D58                     l15874:
 12214                           
 12215                           ; BSR set to: 2
 12216                           ;Bluetooth.c: 882: {
 12217                           ;Bluetooth.c: 883: cleanBuffer(buf,50);
 12218  001D58  0E00               	movlw	low UseBluetooth@buf
 12219  001D5A  0100               	movlb	0	; () banked
 12220  001D5C  6F79               	movwf	cleanBuffer@data& (0+255),b
 12221  001D5E  0E02               	movlw	high UseBluetooth@buf
 12222  001D60  0100               	movlb	0	; () banked
 12223  001D62  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 12224  001D64  0E00               	movlw	0
 12225  001D66  0100               	movlb	0	; () banked
 12226  001D68  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 12227  001D6A  0E32               	movlw	50
 12228  001D6C  6F7B               	movwf	cleanBuffer@count& (0+255),b
 12229  001D6E  ECBA  F045         	call	_cleanBuffer	;wreg free
 12230                           
 12231                           ;Bluetooth.c: 884: sprintf(buf,"RemoteButton%d set",i);
 12232  001D72  0E00               	movlw	low UseBluetooth@buf
 12233  001D74  0100               	movlb	0	; () banked
 12234  001D76  6FC7               	movwf	sprintf@sp& (0+255),b
 12235  001D78  0E02               	movlw	high UseBluetooth@buf
 12236  001D7A  0100               	movlb	0	; () banked
 12237  001D7C  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 12238  001D7E  0EEB               	movlw	low STR_101
 12239  001D80  0100               	movlb	0	; () banked
 12240  001D82  6FC9               	movwf	sprintf@f& (0+255),b
 12241  001D84  0EFD               	movlw	high STR_101
 12242  001D86  0100               	movlb	0	; () banked
 12243  001D88  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 12244  001D8A  C283  F0CB         	movff	UseBluetooth@i,?_sprintf+4
 12245  001D8E  0100               	movlb	0	; () banked
 12246  001D90  6BCC               	clrf	(?_sprintf+5)& (0+255),b
 12247  001D92  EC7B  F010         	call	_sprintf	;wreg free
 12248                           
 12249                           ;Bluetooth.c: 885: UARTcommandMenu(buf,(unsigned char *) "Allows saving NEC codes");
 12250  001D96  0E00               	movlw	low UseBluetooth@buf
 12251  001D98  0100               	movlb	0	; () banked
 12252  001D9A  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12253  001D9C  0E02               	movlw	high UseBluetooth@buf
 12254  001D9E  0100               	movlb	0	; () banked
 12255  001DA0  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12256  001DA2  0E4B               	movlw	low STR_102
 12257  001DA4  0100               	movlb	0	; () banked
 12258  001DA6  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12259  001DA8  0EFC               	movlw	high STR_102
 12260  001DAA  0100               	movlb	0	; () banked
 12261  001DAC  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12262  001DAE  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12263  001DB2  0102               	movlb	2	; () banked
 12264  001DB4  2B83               	incf	UseBluetooth@i& (0+255),f,b
 12265  001DB6  D7CB               	goto	l15870
 12266  001DB8                     l15884:
 12267                           
 12268                           ; BSR set to: 2
 12269                           ;Bluetooth.c: 886: }
 12270                           ;Bluetooth.c: 887: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 1
      +                           channel D");
 12271  001DB8  0E32               	movlw	low STR_103
 12272  001DBA  0100               	movlb	0	; () banked
 12273  001DBC  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12274  001DBE  0EFF               	movlw	high STR_103
 12275  001DC0  0100               	movlb	0	; () banked
 12276  001DC2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12277  001DC4  0E41               	movlw	low STR_104
 12278  001DC6  0100               	movlb	0	; () banked
 12279  001DC8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12280  001DCA  0EF5               	movlw	high STR_104
 12281  001DCC  0100               	movlb	0	; () banked
 12282  001DCE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12283  001DD0  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12284                           
 12285                           ;Bluetooth.c: 888: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 1
      +                           channel E");
 12286  001DD4  0E48               	movlw	low STR_105
 12287  001DD6  0100               	movlb	0	; () banked
 12288  001DD8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12289  001DDA  0EFF               	movlw	high STR_105
 12290  001DDC  0100               	movlb	0	; () banked
 12291  001DDE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12292  001DE0  0EA3               	movlw	low STR_106
 12293  001DE2  0100               	movlb	0	; () banked
 12294  001DE4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12295  001DE6  0EF5               	movlw	high STR_106
 12296  001DE8  0100               	movlb	0	; () banked
 12297  001DEA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12298  001DEC  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12299                           
 12300                           ;Bluetooth.c: 889: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 1
      +                           channel F");
 12301  001DF0  0E53               	movlw	low STR_107
 12302  001DF2  0100               	movlb	0	; () banked
 12303  001DF4  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12304  001DF6  0EFF               	movlw	high STR_107
 12305  001DF8  0100               	movlb	0	; () banked
 12306  001DFA  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12307  001DFC  0ED4               	movlw	low STR_108
 12308  001DFE  0100               	movlb	0	; () banked
 12309  001E00  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12310  001E02  0EF5               	movlw	high STR_108
 12311  001E04  0100               	movlb	0	; () banked
 12312  001E06  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12313  001E08  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12314                           
 12315                           ;Bluetooth.c: 890: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 2
      +                           channel B");
 12316  001E0C  0E27               	movlw	low STR_109
 12317  001E0E  0100               	movlb	0	; () banked
 12318  001E10  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12319  001E12  0EFF               	movlw	high STR_109
 12320  001E14  0100               	movlb	0	; () banked
 12321  001E16  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12322  001E18  0E10               	movlw	low STR_110
 12323  001E1A  0100               	movlb	0	; () banked
 12324  001E1C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12325  001E1E  0EF5               	movlw	high STR_110
 12326  001E20  0100               	movlb	0	; () banked
 12327  001E22  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12328  001E24  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12329                           
 12330                           ;Bluetooth.c: 891: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 2
      +                           channel D");
 12331  001E28  0E3D               	movlw	low STR_111
 12332  001E2A  0100               	movlb	0	; () banked
 12333  001E2C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12334  001E2E  0EFF               	movlw	high STR_111
 12335  001E30  0100               	movlb	0	; () banked
 12336  001E32  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12337  001E34  0E72               	movlw	low STR_112
 12338  001E36  0100               	movlb	0	; () banked
 12339  001E38  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12340  001E3A  0EF5               	movlw	high STR_112
 12341  001E3C  0100               	movlb	0	; () banked
 12342  001E3E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12343  001E40  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12344                           
 12345                           ;Bluetooth.c: 892: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 2
      +                           channel H");
 12346  001E44  0E5E               	movlw	low STR_113
 12347  001E46  0100               	movlb	0	; () banked
 12348  001E48  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12349  001E4A  0EFF               	movlw	high STR_113
 12350  001E4C  0100               	movlb	0	; () banked
 12351  001E4E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12352  001E50  0E05               	movlw	low STR_114
 12353  001E52  0100               	movlb	0	; () banked
 12354  001E54  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12355  001E56  0EF6               	movlw	high STR_114
 12356  001E58  0100               	movlb	0	; () banked
 12357  001E5A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12358  001E5C  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12359                           
 12360                           ;Bluetooth.c: 893: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1 
      +                          channel D");
 12361  001E60  0ED9               	movlw	low STR_115
 12362  001E62  0100               	movlb	0	; () banked
 12363  001E64  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12364  001E66  0EFE               	movlw	high STR_115
 12365  001E68  0100               	movlb	0	; () banked
 12366  001E6A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12367  001E6C  0EC1               	movlw	low STR_116
 12368  001E6E  0100               	movlb	0	; () banked
 12369  001E70  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12370  001E72  0EF6               	movlw	high STR_116
 12371  001E74  0100               	movlb	0	; () banked
 12372  001E76  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12373  001E78  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12374                           
 12375                           ;Bluetooth.c: 894: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1 
      +                          channel E");
 12376  001E7C  0EF3               	movlw	low STR_117
 12377  001E7E  0100               	movlb	0	; () banked
 12378  001E80  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12379  001E82  0EFE               	movlw	high STR_117
 12380  001E84  0100               	movlb	0	; () banked
 12381  001E86  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12382  001E88  0E1D               	movlw	low STR_118
 12383  001E8A  0100               	movlb	0	; () banked
 12384  001E8C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12385  001E8E  0EF7               	movlw	high STR_118
 12386  001E90  0100               	movlb	0	; () banked
 12387  001E92  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12388  001E94  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12389                           
 12390                           ;Bluetooth.c: 895: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1 
      +                          channel F");
 12391  001E98  0E00               	movlw	low STR_119
 12392  001E9A  0100               	movlb	0	; () banked
 12393  001E9C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12394  001E9E  0EFF               	movlw	high STR_119
 12395  001EA0  0100               	movlb	0	; () banked
 12396  001EA2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12397  001EA4  0E4B               	movlw	low STR_120
 12398  001EA6  0100               	movlb	0	; () banked
 12399  001EA8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12400  001EAA  0EF7               	movlw	high STR_120
 12401  001EAC  0100               	movlb	0	; () banked
 12402  001EAE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12403  001EB0  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12404                           
 12405                           ;Bluetooth.c: 896: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2 
      +                          channel B");
 12406  001EB4  0ECC               	movlw	low STR_121
 12407  001EB6  0100               	movlb	0	; () banked
 12408  001EB8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12409  001EBA  0EFE               	movlw	high STR_121
 12410  001EBC  0100               	movlb	0	; () banked
 12411  001EBE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12412  001EC0  0E93               	movlw	low STR_122
 12413  001EC2  0100               	movlb	0	; () banked
 12414  001EC4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12415  001EC6  0EF6               	movlw	high STR_122
 12416  001EC8  0100               	movlb	0	; () banked
 12417  001ECA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12418  001ECC  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12419                           
 12420                           ;Bluetooth.c: 897: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2 
      +                          channel D");
 12421  001ED0  0EE6               	movlw	low STR_123
 12422  001ED2  0100               	movlb	0	; () banked
 12423  001ED4  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12424  001ED6  0EFE               	movlw	high STR_123
 12425  001ED8  0100               	movlb	0	; () banked
 12426  001EDA  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12427  001EDC  0EEF               	movlw	low STR_124
 12428  001EDE  0100               	movlb	0	; () banked
 12429  001EE0  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12430  001EE2  0EF6               	movlw	high STR_124
 12431  001EE4  0100               	movlb	0	; () banked
 12432  001EE6  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12433  001EE8  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12434                           
 12435                           ;Bluetooth.c: 898: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2 
      +                          channel H");
 12436  001EEC  0E0D               	movlw	low STR_125
 12437  001EEE  0100               	movlb	0	; () banked
 12438  001EF0  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12439  001EF2  0EFF               	movlw	high STR_125
 12440  001EF4  0100               	movlb	0	; () banked
 12441  001EF6  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12442  001EF8  0E79               	movlw	low STR_126
 12443  001EFA  0100               	movlb	0	; () banked
 12444  001EFC  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12445  001EFE  0EF7               	movlw	high STR_126
 12446  001F00  0100               	movlb	0	; () banked
 12447  001F02  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12448  001F04  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12449                           
 12450                           ;Bluetooth.c: 899: UARTcommandMenu((unsigned char *)"NEC?", (unsigned char *)"NEC descri
      +                          ption for Arbitrary code send");
 12451  001F08  0EE2               	movlw	low STR_127
 12452  001F0A  0100               	movlb	0	; () banked
 12453  001F0C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12454  001F0E  0EFF               	movlw	high STR_127
 12455  001F10  0100               	movlb	0	; () banked
 12456  001F12  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12457  001F14  0E83               	movlw	low STR_128
 12458  001F16  0100               	movlb	0	; () banked
 12459  001F18  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12460  001F1A  0EF8               	movlw	high STR_128
 12461  001F1C  0100               	movlb	0	; () banked
 12462  001F1E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12463  001F20  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12464                           
 12465                           ;Bluetooth.c: 900: UARTstring(CRLN);
 12466  001F24  0EFE               	movlw	low _CRLN
 12467  001F26  0100               	movlb	0	; () banked
 12468  001F28  6F7A               	movwf	UARTstring@data& (0+255),b
 12469  001F2A  0EF3               	movlw	high _CRLN
 12470  001F2C  0100               	movlb	0	; () banked
 12471  001F2E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12472  001F30  ECE7  F045         	call	_UARTstring	;wreg free
 12473                           
 12474                           ;Bluetooth.c: 901: UARTstringCRLN((unsigned char *)"RF commands:");
 12475  001F34  0EB2               	movlw	low STR_129
 12476  001F36  0100               	movlb	0	; () banked
 12477  001F38  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12478  001F3A  0EFE               	movlw	high STR_129
 12479  001F3C  0100               	movlb	0	; () banked
 12480  001F3E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12481  001F40  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12482                           
 12483                           ;Bluetooth.c: 902: UARTcommandMenu(Conf1_ChannelD_STR, (unsigned char *)"RFK100LC Channe
      +                          l D");
 12484  001F44  0E8E               	movlw	low _Conf1_ChannelD_STR
 12485  001F46  0100               	movlb	0	; () banked
 12486  001F48  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12487  001F4A  0EF3               	movlw	high _Conf1_ChannelD_STR
 12488  001F4C  0100               	movlb	0	; () banked
 12489  001F4E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12490  001F50  0E9F               	movlw	low STR_130
 12491  001F52  0100               	movlb	0	; () banked
 12492  001F54  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12493  001F56  0EFD               	movlw	high STR_130
 12494  001F58  0100               	movlb	0	; () banked
 12495  001F5A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12496  001F5C  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12497                           
 12498                           ;Bluetooth.c: 903: UARTcommandMenu(Conf1_ChannelE_STR, (unsigned char *)"RFK100LC Channe
      +                          l E");
 12499  001F60  0E9D               	movlw	low _Conf1_ChannelE_STR
 12500  001F62  0100               	movlb	0	; () banked
 12501  001F64  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12502  001F66  0EF3               	movlw	high _Conf1_ChannelE_STR
 12503  001F68  0100               	movlb	0	; () banked
 12504  001F6A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12505  001F6C  0EB2               	movlw	low STR_131
 12506  001F6E  0100               	movlb	0	; () banked
 12507  001F70  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12508  001F72  0EFD               	movlw	high STR_131
 12509  001F74  0100               	movlb	0	; () banked
 12510  001F76  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12511  001F78  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12512                           
 12513                           ;Bluetooth.c: 904: UARTcommandMenu(Conf1_ChannelF_STR, (unsigned char *)"RFK100LC Channe
      +                          l F");
 12514  001F7C  0EAC               	movlw	low _Conf1_ChannelF_STR
 12515  001F7E  0100               	movlb	0	; () banked
 12516  001F80  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12517  001F82  0EF3               	movlw	high _Conf1_ChannelF_STR
 12518  001F84  0100               	movlb	0	; () banked
 12519  001F86  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12520  001F88  0EC5               	movlw	low STR_132
 12521  001F8A  0100               	movlb	0	; () banked
 12522  001F8C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12523  001F8E  0EFD               	movlw	high STR_132
 12524  001F90  0100               	movlb	0	; () banked
 12525  001F92  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12526  001F94  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12527                           
 12528                           ;Bluetooth.c: 905: UARTcommandMenu(Conf2_ChannelB_ON_STR, (unsigned char *)"RFK306LC Cha
      +                          nnel B ON");
 12529  001F98  0ECA               	movlw	low _Conf2_ChannelB_ON_STR
 12530  001F9A  0100               	movlb	0	; () banked
 12531  001F9C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12532  001F9E  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
 12533  001FA0  0100               	movlb	0	; () banked
 12534  001FA2  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12535  001FA4  0E91               	movlw	low STR_133
 12536  001FA6  0100               	movlb	0	; () banked
 12537  001FA8  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12538  001FAA  0EFC               	movlw	high STR_133
 12539  001FAC  0100               	movlb	0	; () banked
 12540  001FAE  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12541  001FB0  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12542                           
 12543                           ;Bluetooth.c: 906: UARTcommandMenu(Conf2_ChannelB_OFF_STR, (unsigned char *)"RFK306LC Ch
      +                          annel B OFF");
 12544  001FB4  0EA4               	movlw	low _Conf2_ChannelB_OFF_STR
 12545  001FB6  0100               	movlb	0	; () banked
 12546  001FB8  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12547  001FBA  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
 12548  001FBC  0100               	movlb	0	; () banked
 12549  001FBE  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12550  001FC0  0E7A               	movlw	low STR_134
 12551  001FC2  0100               	movlb	0	; () banked
 12552  001FC4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12553  001FC6  0EFC               	movlw	high STR_134
 12554  001FC8  0100               	movlb	0	; () banked
 12555  001FCA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12556  001FCC  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12557                           
 12558                           ;Bluetooth.c: 907: UARTcommandMenu(Conf2_ChannelD_ON_STR, (unsigned char *)"TR009 Channe
      +                          l D ON");
 12559  001FD0  0EDC               	movlw	low _Conf2_ChannelD_ON_STR
 12560  001FD2  0100               	movlb	0	; () banked
 12561  001FD4  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12562  001FD6  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
 12563  001FD8  0100               	movlb	0	; () banked
 12564  001FDA  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12565  001FDC  0ED8               	movlw	low STR_135
 12566  001FDE  0100               	movlb	0	; () banked
 12567  001FE0  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12568  001FE2  0EFD               	movlw	high STR_135
 12569  001FE4  0100               	movlb	0	; () banked
 12570  001FE6  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12571  001FE8  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12572                           
 12573                           ;Bluetooth.c: 908: UARTcommandMenu(Conf2_ChannelD_OFF_STR, (unsigned char *)"TR009 Chann
      +                          el D OFF");
 12574  001FEC  0EB7               	movlw	low _Conf2_ChannelD_OFF_STR
 12575  001FEE  0100               	movlb	0	; () banked
 12576  001FF0  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12577  001FF2  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
 12578  001FF4  0100               	movlb	0	; () banked
 12579  001FF6  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12580  001FF8  0E4F               	movlw	low STR_136
 12581  001FFA  0100               	movlb	0	; () banked
 12582  001FFC  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12583  001FFE  0EFD               	movlw	high STR_136
 12584  002000  0100               	movlb	0	; () banked
 12585  002002  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12586  002004  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12587                           
 12588                           ;Bluetooth.c: 909: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 1 ON");
 12589  002008  0E68               	movlw	low _Conf2_ChannelH_1_ON_STR
 12590  00200A  0100               	movlb	0	; () banked
 12591  00200C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12592  00200E  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
 12593  002010  0100               	movlb	0	; () banked
 12594  002012  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12595  002014  0E80               	movlw	low STR_137
 12596  002016  0100               	movlb	0	; () banked
 12597  002018  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12598  00201A  0EFA               	movlw	high STR_137
 12599  00201C  0100               	movlb	0	; () banked
 12600  00201E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12601  002020  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12602                           
 12603                           ;Bluetooth.c: 910: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 1 OFF");
 12604  002024  0E29               	movlw	low _Conf2_ChannelH_1_OFF_STR
 12605  002026  0100               	movlb	0	; () banked
 12606  002028  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12607  00202A  0EF2               	movlw	high _Conf2_ChannelH_1_OFF_STR
 12608  00202C  0100               	movlb	0	; () banked
 12609  00202E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12610  002030  0E82               	movlw	low STR_138
 12611  002032  0100               	movlb	0	; () banked
 12612  002034  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12613  002036  0EF9               	movlw	high STR_138
 12614  002038  0100               	movlb	0	; () banked
 12615  00203A  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12616  00203C  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12617                           
 12618                           ;Bluetooth.c: 911: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 2 ON");
 12619  002040  0E7C               	movlw	low _Conf2_ChannelH_2_ON_STR
 12620  002042  0100               	movlb	0	; () banked
 12621  002044  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12622  002046  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
 12623  002048  0100               	movlb	0	; () banked
 12624  00204A  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12625  00204C  0E9F               	movlw	low STR_139
 12626  00204E  0100               	movlb	0	; () banked
 12627  002050  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12628  002052  0EFA               	movlw	high STR_139
 12629  002054  0100               	movlb	0	; () banked
 12630  002056  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12631  002058  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12632                           
 12633                           ;Bluetooth.c: 912: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 2 OFF");
 12634  00205C  0E3E               	movlw	low _Conf2_ChannelH_2_OFF_STR
 12635  00205E  0100               	movlb	0	; () banked
 12636  002060  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12637  002062  0EF2               	movlw	high _Conf2_ChannelH_2_OFF_STR
 12638  002064  0100               	movlb	0	; () banked
 12639  002066  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12640  002068  0EA2               	movlw	low STR_140
 12641  00206A  0100               	movlb	0	; () banked
 12642  00206C  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12643  00206E  0EF9               	movlw	high STR_140
 12644  002070  0100               	movlb	0	; () banked
 12645  002072  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12646  002074  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12647                           
 12648                           ;Bluetooth.c: 913: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 3 ON");
 12649  002078  0E90               	movlw	low _Conf2_ChannelH_3_ON_STR
 12650  00207A  0100               	movlb	0	; () banked
 12651  00207C  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12652  00207E  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
 12653  002080  0100               	movlb	0	; () banked
 12654  002082  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12655  002084  0EBE               	movlw	low STR_141
 12656  002086  0100               	movlb	0	; () banked
 12657  002088  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12658  00208A  0EFA               	movlw	high STR_141
 12659  00208C  0100               	movlb	0	; () banked
 12660  00208E  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12661  002090  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12662                           
 12663                           ;Bluetooth.c: 914: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 3 OFF");
 12664  002094  0E53               	movlw	low _Conf2_ChannelH_3_OFF_STR
 12665  002096  0100               	movlb	0	; () banked
 12666  002098  6F7C               	movwf	UARTcommandMenu@Command& (0+255),b
 12667  00209A  0EF2               	movlw	high _Conf2_ChannelH_3_OFF_STR
 12668  00209C  0100               	movlb	0	; () banked
 12669  00209E  6F7D               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12670  0020A0  0EC2               	movlw	low STR_142
 12671  0020A2  0100               	movlb	0	; () banked
 12672  0020A4  6F7E               	movwf	UARTcommandMenu@Desc& (0+255),b
 12673  0020A6  0EF9               	movlw	high STR_142
 12674  0020A8  0100               	movlb	0	; () banked
 12675  0020AA  6F7F               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12676  0020AC  ECF7  F03A         	call	_UARTcommandMenu	;wreg free
 12677                           
 12678                           ;Bluetooth.c: 915: UARTstring(CRLN);
 12679  0020B0  0EFE               	movlw	low _CRLN
 12680  0020B2  0100               	movlb	0	; () banked
 12681  0020B4  6F7A               	movwf	UARTstring@data& (0+255),b
 12682  0020B6  0EF3               	movlw	high _CRLN
 12683  0020B8  0100               	movlb	0	; () banked
 12684  0020BA  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12685  0020BC  ECE7  F045         	call	_UARTstring	;wreg free
 12686                           
 12687                           ;Bluetooth.c: 916: }
 12688  0020C0  0012               	return	
 12689  0020C2                     l15886:
 12690                           
 12691                           ;Bluetooth.c: 917: else
 12692                           ;Bluetooth.c: 918: {
 12693                           ;Bluetooth.c: 919: UARTstringCRLN(SYNTAX_ERR);
 12694  0020C2  0EBB               	movlw	low _SYNTAX_ERR
 12695  0020C4  0100               	movlb	0	; () banked
 12696  0020C6  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12697  0020C8  0EF3               	movlw	high _SYNTAX_ERR
 12698  0020CA  0100               	movlb	0	; () banked
 12699  0020CC  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12700  0020CE  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12701                           
 12702                           ;Bluetooth.c: 920: UARTstringCRLN((unsigned char *)"Enter ??? for Command Menu");
 12703  0020D2  0EE5               	movlw	low STR_143
 12704  0020D4  0100               	movlb	0	; () banked
 12705  0020D6  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12706  0020D8  0EFB               	movlw	high STR_143
 12707  0020DA  0100               	movlb	0	; () banked
 12708  0020DC  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12709  0020DE  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12710                           
 12711                           ;Bluetooth.c: 921: UARTstring(CRLN);
 12712  0020E2  0EFE               	movlw	low _CRLN
 12713  0020E4  0100               	movlb	0	; () banked
 12714  0020E6  6F7A               	movwf	UARTstring@data& (0+255),b
 12715  0020E8  0EF3               	movlw	high _CRLN
 12716  0020EA  0100               	movlb	0	; () banked
 12717  0020EC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12718  0020EE  ECE7  F045         	call	_UARTstring	;wreg free
 12719                           
 12720                           ;Bluetooth.c: 922: return 0;
 12721                           ;	Return value of _UseBluetooth is never used
 12722  0020F2  0012               	return	
 12723                           
 12724                           ;Bluetooth.c: 923: }
 12725                           ;Bluetooth.c: 925: return 0;
 12726                           ;	Return value of _UseBluetooth is never used
 12727  0020F4  0012               	return		;funcret
 12728  0020F6                     __end_of_UseBluetooth:
 12729                           	opt stack 0
 12730                           tblptru	equ	0xFF8
 12731                           tblptrh	equ	0xFF7
 12732                           tblptrl	equ	0xFF6
 12733                           tablat	equ	0xFF5
 12734                           prodh	equ	0xFF4
 12735                           prodl	equ	0xFF3
 12736                           intcon	equ	0xFF2
 12737                           postinc0	equ	0xFEE
 12738                           wreg	equ	0xFE8
 12739                           postdec1	equ	0xFE5
 12740                           fsr1h	equ	0xFE2
 12741                           fsr1l	equ	0xFE1
 12742                           indf2	equ	0xFDF
 12743                           postinc2	equ	0xFDE
 12744                           fsr2h	equ	0xFDA
 12745                           fsr2l	equ	0xFD9
 12746                           status	equ	0xFD8
 12747                           
 12748 ;; *************** function _lowercaseString *****************
 12749 ;; Defined at:
 12750 ;;		line 332 in file "MISC.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  Input           2   25[BANK0 ] PTR unsigned char 
 12753 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;		None               void
 12758 ;; Registers used:
 12759 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12765 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;Total ram usage:        3 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; Hardware stack levels required when called:    6
 12772 ;; This function calls:
 12773 ;;		Nothing
 12774 ;; This function is called by:
 12775 ;;		_UseBluetooth
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           	psect	text6
 12780  008EA4                     __ptext6:
 12781                           	opt stack 0
 12782  008EA4                     _lowercaseString:
 12783                           	opt stack 23
 12784                           
 12785                           ;MISC.c: 334: while((*Input != 0))
 12786                           
 12787                           ;incstack = 0
 12788  008EA4  D019               	goto	l14508
 12789  008EA6                     l14500:
 12790                           
 12791                           ;MISC.c: 335: {
 12792                           ;MISC.c: 336: if((*Input >= 65) && (*Input <= 90 ))
 12793  008EA6  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12794  008EAA  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12795  008EAE  0E40               	movlw	64
 12796  008EB0  64DF               	cpfsgt	indf2,c
 12797  008EB2  D00E               	goto	l14506
 12798  008EB4  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12799  008EB8  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12800  008EBC  0E5B               	movlw	91
 12801  008EBE  60DF               	cpfslt	indf2,c
 12802  008EC0  D007               	goto	l14506
 12803                           
 12804                           ;MISC.c: 337: {
 12805                           ;MISC.c: 338: *Input += 32;
 12806  008EC2  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12807  008EC6  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12808  008ECA  0E20               	movlw	32
 12809  008ECC  26DF               	addwf	indf2,f,c
 12810  008ECE  D000               	goto	l14506
 12811  008ED0                     l14506:
 12812                           
 12813                           ;MISC.c: 339: }
 12814                           ;MISC.c: 340: Input++;
 12815  008ED0  0100               	movlb	0	; () banked
 12816  008ED2  4B79               	infsnz	lowercaseString@Input& (0+255),f,b
 12817  008ED4  2B7A               	incf	(lowercaseString@Input+1)& (0+255),f,b
 12818  008ED6  D000               	goto	l14508
 12819  008ED8                     l14508:
 12820  008ED8  C079  FFD9         	movff	lowercaseString@Input,fsr2l
 12821  008EDC  C07A  FFDA         	movff	lowercaseString@Input+1,fsr2h
 12822  008EE0  50DF               	movf	indf2,w,c
 12823  008EE2  A4D8               	btfss	status,2,c
 12824  008EE4  D7E0               	goto	l14500
 12825  008EE6  0012               	return		;funcret
 12826  008EE8                     __end_of_lowercaseString:
 12827                           	opt stack 0
 12828                           tblptru	equ	0xFF8
 12829                           tblptrh	equ	0xFF7
 12830                           tblptrl	equ	0xFF6
 12831                           tablat	equ	0xFF5
 12832                           prodh	equ	0xFF4
 12833                           prodl	equ	0xFF3
 12834                           intcon	equ	0xFF2
 12835                           postinc0	equ	0xFEE
 12836                           wreg	equ	0xFE8
 12837                           postdec1	equ	0xFE5
 12838                           fsr1h	equ	0xFE2
 12839                           fsr1l	equ	0xFE1
 12840                           indf2	equ	0xFDF
 12841                           postinc2	equ	0xFDE
 12842                           fsr2h	equ	0xFDA
 12843                           fsr2l	equ	0xFD9
 12844                           status	equ	0xFD8
 12845                           
 12846 ;; *************** function _WaitForIRsignal *****************
 12847 ;; Defined at:
 12848 ;;		line 933 in file "Bluetooth.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;  timeout         1   34[BANK0 ] unsigned char 
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      unsigned char 
 12855 ;; Registers used:
 12856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12866 ;;Total ram usage:        1 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:    9
 12869 ;; This function calls:
 12870 ;;		_LEDTimerON
 12871 ;;		_UARTchar
 12872 ;;		_UARTstring
 12873 ;;		_UARTstringCRLN
 12874 ;;		_delayUS
 12875 ;; This function is called by:
 12876 ;;		_UseBluetooth
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text7
 12881  0085CE                     __ptext7:
 12882                           	opt stack 0
 12883  0085CE                     _WaitForIRsignal:
 12884                           	opt stack 20
 12885                           
 12886                           ;Bluetooth.c: 935: unsigned char timeout = 0;
 12887                           
 12888                           ;incstack = 0
 12889  0085CE  0E00               	movlw	0
 12890  0085D0  0100               	movlb	0	; () banked
 12891  0085D2  6F82               	movwf	WaitForIRsignal@timeout& (0+255),b
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;Bluetooth.c: 937: UARTstring(CRLN);
 12895  0085D4  0EFE               	movlw	low _CRLN
 12896  0085D6  0100               	movlb	0	; () banked
 12897  0085D8  6F7A               	movwf	UARTstring@data& (0+255),b
 12898  0085DA  0EF3               	movlw	high _CRLN
 12899  0085DC  0100               	movlb	0	; () banked
 12900  0085DE  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12901  0085E0  ECE7  F045         	call	_UARTstring	;wreg free
 12902                           
 12903                           ;Bluetooth.c: 938: UARTstring((unsigned char *)"Press Remote Control button");
 12904  0085E4  0EC9               	movlw	low STR_144
 12905  0085E6  0100               	movlb	0	; () banked
 12906  0085E8  6F7A               	movwf	UARTstring@data& (0+255),b
 12907  0085EA  0EFB               	movlw	high STR_144
 12908  0085EC  0100               	movlb	0	; () banked
 12909  0085EE  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12910  0085F0  ECE7  F045         	call	_UARTstring	;wreg free
 12911                           
 12912                           ;Bluetooth.c: 939: timeout = 0;
 12913  0085F4  0E00               	movlw	0
 12914  0085F6  0100               	movlb	0	; () banked
 12915  0085F8  6F82               	movwf	WaitForIRsignal@timeout& (0+255),b
 12916                           
 12917                           ;Bluetooth.c: 940: while(IR_New_Code != 1)
 12918  0085FA  D027               	goto	l15014
 12919  0085FC                     l15000:
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;Bluetooth.c: 941: {
 12923                           ;Bluetooth.c: 942: UARTchar('.');
 12924  0085FC  0E2E               	movlw	46
 12925  0085FE  ECF0  F048         	call	_UARTchar
 12926                           
 12927                           ;Bluetooth.c: 943: delayUS(300000);
 12928  008602  0EE0               	movlw	224
 12929  008604  0100               	movlb	0	; () banked
 12930  008606  6F79               	movwf	delayUS@US& (0+255),b
 12931  008608  0E93               	movlw	147
 12932  00860A  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 12933  00860C  0E04               	movlw	4
 12934  00860E  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 12935  008610  0E00               	movlw	0
 12936  008612  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 12937  008614  EC6B  F046         	call	_delayUS	;wreg free
 12938                           
 12939                           ;Bluetooth.c: 944: timeout++;
 12940  008618  0100               	movlb	0	; () banked
 12941  00861A  2B82               	incf	WaitForIRsignal@timeout& (0+255),f,b
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;Bluetooth.c: 945: if(timeout > 25)
 12945  00861C  0E19               	movlw	25
 12946  00861E  0100               	movlb	0	; () banked
 12947  008620  6582               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 12948  008622  D013               	goto	l15014
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;Bluetooth.c: 946: {
 12952                           ;Bluetooth.c: 947: UARTstring(CRLN);
 12953  008624  0EFE               	movlw	low _CRLN
 12954  008626  0100               	movlb	0	; () banked
 12955  008628  6F7A               	movwf	UARTstring@data& (0+255),b
 12956  00862A  0EF3               	movlw	high _CRLN
 12957  00862C  0100               	movlb	0	; () banked
 12958  00862E  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 12959  008630  ECE7  F045         	call	_UARTstring	;wreg free
 12960                           
 12961                           ;Bluetooth.c: 948: UARTstringCRLN((unsigned char *)"Error: No remote button was pressed"
      +                          );
 12962  008634  0E1A               	movlw	low STR_145
 12963  008636  0100               	movlb	0	; () banked
 12964  008638  6F7C               	movwf	UARTstringCRLN@data& (0+255),b
 12965  00863A  0EF9               	movlw	high STR_145
 12966  00863C  0100               	movlb	0	; () banked
 12967  00863E  6F7D               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12968  008640  ECF1  F044         	call	_UARTstringCRLN	;wreg free
 12969                           
 12970                           ;Bluetooth.c: 949: return 0;
 12971  008644  0E00               	movlw	0
 12972  008646  0012               	return	
 12973  008648  D000               	goto	l15014
 12974  00864A                     l15014:
 12975  00864A  0100               	movlb	0	; () banked
 12976  00864C  05E5               	decf	_IR_New_Code& (0+255),w,b
 12977  00864E  A4D8               	btfss	status,2,c
 12978  008650  D7D5               	goto	l15000
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;Bluetooth.c: 950: }
 12982                           ;Bluetooth.c: 951: }
 12983                           ;Bluetooth.c: 952: (LATC |= 0x04);
 12984                           
 12985                           ; BSR set to: 0
 12986  008652  848B               	bsf	3979,2,c	;volatile
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;Bluetooth.c: 953: LEDTimerON();
 12990  008654  EC66  F049         	call	_LEDTimerON	;wreg free
 12991                           
 12992                           ;Bluetooth.c: 954: return 1;
 12993  008658  0E01               	movlw	1
 12994  00865A  0012               	return	
 12995  00865C  0012               	return		;funcret
 12996  00865E                     __end_of_WaitForIRsignal:
 12997                           	opt stack 0
 12998                           tblptru	equ	0xFF8
 12999                           tblptrh	equ	0xFF7
 13000                           tblptrl	equ	0xFF6
 13001                           tablat	equ	0xFF5
 13002                           prodh	equ	0xFF4
 13003                           prodl	equ	0xFF3
 13004                           intcon	equ	0xFF2
 13005                           postinc0	equ	0xFEE
 13006                           wreg	equ	0xFE8
 13007                           postdec1	equ	0xFE5
 13008                           fsr1h	equ	0xFE2
 13009                           fsr1l	equ	0xFE1
 13010                           indf2	equ	0xFDF
 13011                           postinc2	equ	0xFDE
 13012                           fsr2h	equ	0xFDA
 13013                           fsr2l	equ	0xFD9
 13014                           status	equ	0xFD8
 13015                           
 13016 ;; *************** function _UARTstringCRLN *****************
 13017 ;; Defined at:
 13018 ;;		line 262 in file "UART.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  data            2   28[BANK0 ] PTR unsigned char 
 13021 ;;		 -> STR_145(36), STR_143(27), STR_129(13), STR_98(13), 
 13022 ;;		 -> STR_95(21), STR_88(17), STR_81(29), STR_80(18), 
 13023 ;;		 -> STR_79(29), STR_76(44), STR_71(46), STR_70(42), 
 13024 ;;		 -> STR_69(50), STR_68(50), STR_66(31), STR_65(31), 
 13025 ;;		 -> STR_64(37), STR_63(37), STR_62(37), STR_58(18), 
 13026 ;;		 -> STR_57(14), STR_56(9), STR_55(20), STR_54(16), 
 13027 ;;		 -> STR_53(7), STR_52(35), STR_51(37), STR_48(47), 
 13028 ;;		 -> STR_43(17), STR_42(9), STR_41(18), STR_40(9), 
 13029 ;;		 -> STR_39(22), STR_38(11), STR_37(20), STR_36(7), 
 13030 ;;		 -> STR_35(31), STR_34(33), STR_30(32), STR_26(31), 
 13031 ;;		 -> STR_25(31), STR_23(29), STR_21(29), SYNTAX_ERR(14), 
 13032 ;;		 -> UseBluetooth@buf(100), STR_1(16), 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;		None               void
 13037 ;; Registers used:
 13038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13044 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13048 ;;Total ram usage:        2 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; Hardware stack levels required when called:    8
 13051 ;; This function calls:
 13052 ;;		_UARTchar
 13053 ;;		_UARTstring
 13054 ;; This function is called by:
 13055 ;;		_UseBluetooth
 13056 ;;		_WaitForIRsignal
 13057 ;; This function uses a non-reentrant model
 13058 ;;
 13059                           
 13060                           	psect	text8
 13061  0089E2                     __ptext8:
 13062                           	opt stack 0
 13063  0089E2                     _UARTstringCRLN:
 13064                           	opt stack 20
 13065                           
 13066                           ;UART.c: 264: while(*data != 0)
 13067                           
 13068                           ;incstack = 0
 13069  0089E2  D017               	goto	l13792
 13070  0089E4                     l13788:
 13071                           
 13072                           ;UART.c: 265: {
 13073                           ;UART.c: 266: UARTchar(*data);
 13074  0089E4  C07C  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13075  0089E8  C07D  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13076  0089EC  0E00               	movlw	low (__mediumconst shr (0+16))
 13077  0089EE  6EF8               	movwf	tblptru,c
 13078  0089F0  0E0F               	movlw	(high __ramtop+-1)
 13079  0089F2  64F7               	cpfsgt	tblptrh,c
 13080  0089F4  D003               	bra	u16867
 13081  0089F6  0008               	tblrd		*
 13082  0089F8  50F5               	movf	tablat,w,c
 13083  0089FA  D005               	bra	u16860
 13084  0089FC                     u16867:
 13085  0089FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13086  008A00  CFF7 FFEA          	movff	tblptrh,fsr0h
 13087  008A04  50EF               	movf	indf0,w,c
 13088  008A06                     u16860:
 13089  008A06  ECF0  F048         	call	_UARTchar
 13090                           
 13091                           ;UART.c: 267: *data++;
 13092  008A0A  0100               	movlb	0	; () banked
 13093  008A0C  4B7C               	infsnz	UARTstringCRLN@data& (0+255),f,b
 13094  008A0E  2B7D               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 13095  008A10  D000               	goto	l13792
 13096  008A12                     l13792:
 13097  008A12  C07C  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13098  008A16  C07D  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13099  008A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 13100  008A1C  6EF8               	movwf	tblptru,c
 13101  008A1E  0E0F               	movlw	(high __ramtop+-1)
 13102  008A20  64F7               	cpfsgt	tblptrh,c
 13103  008A22  D003               	bra	u16877
 13104  008A24  0008               	tblrd		*
 13105  008A26  50F5               	movf	tablat,w,c
 13106  008A28  D005               	bra	u16870
 13107  008A2A                     u16877:
 13108  008A2A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13109  008A2E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13110  008A32  50EF               	movf	indf0,w,c
 13111  008A34                     u16870:
 13112  008A34  0900               	iorlw	0
 13113  008A36  A4D8               	btfss	status,2,c
 13114  008A38  D7D5               	goto	l13788
 13115                           
 13116                           ;UART.c: 268: }
 13117                           ;UART.c: 269: UARTstring(CRLN);
 13118  008A3A  0EFE               	movlw	low _CRLN
 13119  008A3C  0100               	movlb	0	; () banked
 13120  008A3E  6F7A               	movwf	UARTstring@data& (0+255),b
 13121  008A40  0EF3               	movlw	high _CRLN
 13122  008A42  0100               	movlb	0	; () banked
 13123  008A44  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13124  008A46  ECE7  F045         	call	_UARTstring	;wreg free
 13125  008A4A  0012               	return		;funcret
 13126  008A4C                     __end_of_UARTstringCRLN:
 13127                           	opt stack 0
 13128                           tblptru	equ	0xFF8
 13129                           tblptrh	equ	0xFF7
 13130                           tblptrl	equ	0xFF6
 13131                           tablat	equ	0xFF5
 13132                           prodh	equ	0xFF4
 13133                           prodl	equ	0xFF3
 13134                           intcon	equ	0xFF2
 13135                           indf0	equ	0xFEF
 13136                           postinc0	equ	0xFEE
 13137                           fsr0h	equ	0xFEA
 13138                           fsr0l	equ	0xFE9
 13139                           wreg	equ	0xFE8
 13140                           postdec1	equ	0xFE5
 13141                           fsr1h	equ	0xFE2
 13142                           fsr1l	equ	0xFE1
 13143                           indf2	equ	0xFDF
 13144                           postinc2	equ	0xFDE
 13145                           fsr2h	equ	0xFDA
 13146                           fsr2l	equ	0xFD9
 13147                           status	equ	0xFD8
 13148                           
 13149 ;; *************** function _UARTcommandMenu *****************
 13150 ;; Defined at:
 13151 ;;		line 277 in file "UART.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;  Command         2   28[BANK0 ] PTR unsigned char 
 13154 ;;		 -> STR_127(5), STR_125(13), STR_123(13), STR_121(13), 
 13155 ;;		 -> STR_119(13), STR_117(13), STR_115(13), STR_113(11), 
 13156 ;;		 -> STR_111(11), STR_109(11), STR_107(11), STR_105(11), 
 13157 ;;		 -> STR_103(11), STR_96(8), STR_93(8), STR_91(6), 
 13158 ;;		 -> STR_89(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 13159 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 13160 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 13161 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 13162 ;;  Desc            2   30[BANK0 ] PTR unsigned char 
 13163 ;;		 -> STR_142(32), STR_141(31), STR_140(32), STR_139(31), 
 13164 ;;		 -> STR_138(32), STR_137(31), STR_136(20), STR_135(19), 
 13165 ;;		 -> STR_134(23), STR_133(22), STR_132(19), STR_131(19), 
 13166 ;;		 -> STR_130(19), STR_128(40), STR_126(46), STR_124(46), 
 13167 ;;		 -> STR_122(46), STR_120(46), STR_118(46), STR_116(46), 
 13168 ;;		 -> STR_114(49), STR_112(49), STR_110(49), STR_108(49), 
 13169 ;;		 -> STR_106(49), STR_104(49), STR_102(24), STR_100(25), 
 13170 ;;		 -> STR_97(28), STR_94(26), STR_92(32), STR_90(10), 
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;  place           1   38[BANK0 ] unsigned char 
 13173 ;;  i               1   37[BANK0 ] unsigned char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;		None               void
 13176 ;; Registers used:
 13177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13186 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13187 ;;Total ram usage:       11 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:    8
 13190 ;; This function calls:
 13191 ;;		_UARTchar
 13192 ;;		_UARTstring
 13193 ;; This function is called by:
 13194 ;;		_UseBluetooth
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198                           	psect	text9
 13199  0075EE                     __ptext9:
 13200                           	opt stack 0
 13201  0075EE                     _UARTcommandMenu:
 13202                           	opt stack 21
 13203                           
 13204                           ;UART.c: 279: unsigned char place = 0;
 13205                           
 13206                           ;incstack = 0
 13207  0075EE  0E00               	movlw	0
 13208  0075F0  0100               	movlb	0	; () banked
 13209  0075F2  6F86               	movwf	UARTcommandMenu@place& (0+255),b
 13210                           
 13211                           ;UART.c: 280: unsigned char i;
 13212                           ;UART.c: 282: while((*Command != 0) && (place < 30))
 13213  0075F4  D019               	goto	l14802
 13214  0075F6                     l14796:
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;UART.c: 283: {
 13218                           ;UART.c: 284: UARTchar(*Command);
 13219  0075F6  C07C  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13220  0075FA  C07D  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13221  0075FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13222  007600  6EF8               	movwf	tblptru,c
 13223  007602  0E0F               	movlw	(high __ramtop+-1)
 13224  007604  64F7               	cpfsgt	tblptrh,c
 13225  007606  D003               	bra	u18377
 13226  007608  0008               	tblrd		*
 13227  00760A  50F5               	movf	tablat,w,c
 13228  00760C  D005               	bra	u18370
 13229  00760E                     u18377:
 13230  00760E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13231  007612  CFF7 FFEA          	movff	tblptrh,fsr0h
 13232  007616  50EF               	movf	indf0,w,c
 13233  007618                     u18370:
 13234  007618  ECF0  F048         	call	_UARTchar
 13235                           
 13236                           ;UART.c: 285: *Command++;
 13237  00761C  0100               	movlb	0	; () banked
 13238  00761E  4B7C               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 13239  007620  2B7D               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;UART.c: 286: place++;
 13243  007622  0100               	movlb	0	; () banked
 13244  007624  2B86               	incf	UARTcommandMenu@place& (0+255),f,b
 13245  007626  D000               	goto	l14802
 13246  007628                     l14802:
 13247                           
 13248                           ; BSR set to: 0
 13249  007628  C07C  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13250  00762C  C07D  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13251  007630  0E00               	movlw	low (__mediumconst shr (0+16))
 13252  007632  6EF8               	movwf	tblptru,c
 13253  007634  0E0F               	movlw	(high __ramtop+-1)
 13254  007636  64F7               	cpfsgt	tblptrh,c
 13255  007638  D003               	bra	u18387
 13256  00763A  0008               	tblrd		*
 13257  00763C  50F5               	movf	tablat,w,c
 13258  00763E  D005               	bra	u18380
 13259  007640                     u18387:
 13260  007640  CFF6 FFE9          	movff	tblptrl,fsr0l
 13261  007644  CFF7 FFEA          	movff	tblptrh,fsr0h
 13262  007648  50EF               	movf	indf0,w,c
 13263  00764A                     u18380:
 13264  00764A  0900               	iorlw	0
 13265  00764C  B4D8               	btfsc	status,2,c
 13266  00764E  D005               	goto	l14806
 13267  007650  0E1D               	movlw	29
 13268  007652  0100               	movlb	0	; () banked
 13269  007654  6586               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13270  007656  D7CF               	goto	l14796
 13271                           
 13272                           ; BSR set to: 0
 13273  007658  D000               	goto	l14806
 13274  00765A                     l14806:
 13275                           
 13276                           ;UART.c: 287: }
 13277                           ;UART.c: 288: for(i =0; i < ((30 - place) + 1); i++)
 13278  00765A  0E00               	movlw	0
 13279  00765C  0100               	movlb	0	; () banked
 13280  00765E  6F85               	movwf	UARTcommandMenu@i& (0+255),b
 13281  007660  D006               	goto	l14812
 13282  007662                     l14808:
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;UART.c: 289: {
 13286                           ;UART.c: 290: UARTchar('-');
 13287  007662  0E2D               	movlw	45
 13288  007664  ECF0  F048         	call	_UARTchar
 13289  007668  0100               	movlb	0	; () banked
 13290  00766A  2B85               	incf	UARTcommandMenu@i& (0+255),f,b
 13291  00766C  D000               	goto	l14812
 13292  00766E                     l14812:
 13293                           
 13294                           ; BSR set to: 0
 13295  00766E  0100               	movlb	0	; () banked
 13296  007670  5186               	movf	UARTcommandMenu@place& (0+255),w,b
 13297  007672  0100               	movlb	0	; () banked
 13298  007674  6F80               	movwf	??_UARTcommandMenu& (0+255),b
 13299  007676  6B81               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 13300  007678  0100               	movlb	0	; () banked
 13301  00767A  1F80               	comf	??_UARTcommandMenu& (0+255),f,b
 13302  00767C  1F81               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 13303  00767E  4B80               	infsnz	??_UARTcommandMenu& (0+255),f,b
 13304  007680  2B81               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 13305  007682  0E1F               	movlw	31
 13306  007684  0100               	movlb	0	; () banked
 13307  007686  2780               	addwf	??_UARTcommandMenu& (0+255),f,b
 13308  007688  0E00               	movlw	0
 13309  00768A  2381               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 13310  00768C  0100               	movlb	0	; () banked
 13311  00768E  5185               	movf	UARTcommandMenu@i& (0+255),w,b
 13312  007690  0100               	movlb	0	; () banked
 13313  007692  6F82               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 13314  007694  6B83               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 13315  007696  0100               	movlb	0	; () banked
 13316  007698  5180               	movf	??_UARTcommandMenu& (0+255),w,b
 13317  00769A  0100               	movlb	0	; () banked
 13318  00769C  5D82               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 13319  00769E  0100               	movlb	0	; () banked
 13320  0076A0  5183               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 13321  0076A2  0A80               	xorlw	128
 13322  0076A4  0100               	movlb	0	; () banked
 13323  0076A6  6F84               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 13324  0076A8  0100               	movlb	0	; () banked
 13325  0076AA  5181               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 13326  0076AC  0A80               	xorlw	128
 13327  0076AE  0100               	movlb	0	; () banked
 13328  0076B0  5984               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 13329  0076B2  A0D8               	btfss	status,0,c
 13330  0076B4  D7D6               	goto	l14808
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;UART.c: 291: }
 13334                           ;UART.c: 292: place = 0;
 13335                           
 13336                           ; BSR set to: 0
 13337  0076B6  0E00               	movlw	0
 13338  0076B8  0100               	movlb	0	; () banked
 13339  0076BA  6F86               	movwf	UARTcommandMenu@place& (0+255),b
 13340                           
 13341                           ;UART.c: 293: while((*Desc != 0) && (place < (50 - 1)))
 13342  0076BC  D00F               	goto	l14822
 13343  0076BE                     l14816:
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;UART.c: 294: {
 13347                           ;UART.c: 295: UARTchar(*Desc);
 13348  0076BE  C07E  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13349  0076C2  C07F  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13350  0076C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13351  0076C6  6AF8               	clrf	tblptru,c
 13352  0076C8                     	endif
 13353  0076C8                     	if	0	;tblptru may be non-zero
 13354  0076C8                     	endif
 13355  0076C8  0008               	tblrd		*
 13356  0076CA  50F5               	movf	tablat,w,c
 13357  0076CC  ECF0  F048         	call	_UARTchar
 13358                           
 13359                           ;UART.c: 296: *Desc++;
 13360  0076D0  0100               	movlb	0	; () banked
 13361  0076D2  4B7E               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 13362  0076D4  2B7F               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;UART.c: 297: place++;
 13366  0076D6  0100               	movlb	0	; () banked
 13367  0076D8  2B86               	incf	UARTcommandMenu@place& (0+255),f,b
 13368  0076DA  D000               	goto	l14822
 13369  0076DC                     l14822:
 13370                           
 13371                           ; BSR set to: 0
 13372  0076DC  C07E  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13373  0076E0  C07F  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13374  0076E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13375  0076E4  6AF8               	clrf	tblptru,c
 13376  0076E6                     	endif
 13377  0076E6                     	if	0	;tblptru may be non-zero
 13378  0076E6                     	endif
 13379  0076E6  0008               	tblrd		*
 13380  0076E8  50F5               	movf	tablat,w,c
 13381  0076EA  0900               	iorlw	0
 13382  0076EC  B4D8               	btfsc	status,2,c
 13383  0076EE  D005               	goto	l14826
 13384                           
 13385                           ; BSR set to: 0
 13386  0076F0  0E30               	movlw	48
 13387  0076F2  0100               	movlb	0	; () banked
 13388  0076F4  6586               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13389  0076F6  D7E3               	goto	l14816
 13390                           
 13391                           ; BSR set to: 0
 13392  0076F8  D000               	goto	l14826
 13393  0076FA                     l14826:
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;UART.c: 298: }
 13397                           ;UART.c: 299: UARTstring(CRLN);
 13398  0076FA  0EFE               	movlw	low _CRLN
 13399  0076FC  0100               	movlb	0	; () banked
 13400  0076FE  6F7A               	movwf	UARTstring@data& (0+255),b
 13401  007700  0EF3               	movlw	high _CRLN
 13402  007702  0100               	movlb	0	; () banked
 13403  007704  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 13404  007706  ECE7  F045         	call	_UARTstring	;wreg free
 13405  00770A  0012               	return		;funcret
 13406  00770C                     __end_of_UARTcommandMenu:
 13407                           	opt stack 0
 13408                           tblptru	equ	0xFF8
 13409                           tblptrh	equ	0xFF7
 13410                           tblptrl	equ	0xFF6
 13411                           tablat	equ	0xFF5
 13412                           prodh	equ	0xFF4
 13413                           prodl	equ	0xFF3
 13414                           intcon	equ	0xFF2
 13415                           indf0	equ	0xFEF
 13416                           postinc0	equ	0xFEE
 13417                           fsr0h	equ	0xFEA
 13418                           fsr0l	equ	0xFE9
 13419                           wreg	equ	0xFE8
 13420                           postdec1	equ	0xFE5
 13421                           fsr1h	equ	0xFE2
 13422                           fsr1l	equ	0xFE1
 13423                           indf2	equ	0xFDF
 13424                           postinc2	equ	0xFDE
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429 ;; *************** function _StringMatchCaseInsensitive *****************
 13430 ;; Defined at:
 13431 ;;		line 217 in file "MISC.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13434 ;;		 -> main@BluetoothString(255), 
 13435 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13436 ;;		 -> STR_84(8), STR_82(8), STR_77(6), Conf2_ChannelH_3_OFF_STR(21), 
 13437 ;;		 -> Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR
      +(21), 
 13438 ;;		 -> Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), 
 13439 ;;		 -> Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;  tempThat        1   33[BANK0 ] unsigned char 
 13442 ;;  tempThis        1   32[BANK0 ] unsigned char 
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  1    wreg      unsigned char 
 13445 ;; Registers used:
 13446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13456 ;;Total ram usage:        6 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:    7
 13459 ;; This function calls:
 13460 ;;		_lowercaseChar
 13461 ;; This function is called by:
 13462 ;;		_UseBluetooth
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466                           	psect	text10
 13467  00853A                     __ptext10:
 13468                           	opt stack 0
 13469  00853A                     _StringMatchCaseInsensitive:
 13470                           	opt stack 22
 13471                           
 13472                           ;MISC.c: 219: unsigned char tempThis,
 13473                           ;MISC.c: 220: tempThat;
 13474                           ;MISC.c: 222: while(*This != 0)
 13475                           
 13476                           ;incstack = 0
 13477  00853A  D033               	goto	l14444
 13478  00853C                     l14426:
 13479                           
 13480                           ;MISC.c: 223: {
 13481                           ;MISC.c: 224: tempThis = *This;
 13482  00853C  C07C  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13483  008540  C07D  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13484  008544  50DF               	movf	indf2,w,c
 13485  008546  0100               	movlb	0	; () banked
 13486  008548  6F80               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;MISC.c: 225: tempThat = *That;
 13490  00854A  C07E  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13491  00854E  C07F  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13492  008552                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13493  008552  6AF8               	clrf	tblptru,c
 13494  008554                     	endif
 13495  008554                     	if	0	;tblptru may be non-zero
 13496  008554                     	endif
 13497  008554  0008               	tblrd		*
 13498  008556  CFF5 F081          	movff	tablat,StringMatchCaseInsensitive@tempThat
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;MISC.c: 226: lowercaseChar(&tempThis);
 13502  00855A  0E80               	movlw	low StringMatchCaseInsensitive@tempThis
 13503  00855C  0100               	movlb	0	; () banked
 13504  00855E  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13505  008560  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 13506  008562  0100               	movlb	0	; () banked
 13507  008564  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13508  008566  ECA2  F048         	call	_lowercaseChar	;wreg free
 13509                           
 13510                           ;MISC.c: 227: lowercaseChar(&tempThat);
 13511  00856A  0E81               	movlw	low StringMatchCaseInsensitive@tempThat
 13512  00856C  0100               	movlb	0	; () banked
 13513  00856E  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13514  008570  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 13515  008572  0100               	movlb	0	; () banked
 13516  008574  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13517  008576  ECA2  F048         	call	_lowercaseChar	;wreg free
 13518                           
 13519                           ;MISC.c: 229: if((tempThis != tempThat) || (tempThat == 0))
 13520  00857A  0100               	movlb	0	; () banked
 13521  00857C  5181               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13522  00857E  0100               	movlb	0	; () banked
 13523  008580  1980               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 13524  008582  A4D8               	btfss	status,2,c
 13525  008584  D005               	goto	l14438
 13526                           
 13527                           ; BSR set to: 0
 13528  008586  0100               	movlb	0	; () banked
 13529  008588  5181               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13530  00858A  0100               	movlb	0	; () banked
 13531  00858C  A4D8               	btfss	status,2,c
 13532  00858E  D002               	goto	l14442
 13533  008590                     l14438:
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;MISC.c: 230: {
 13537                           ;MISC.c: 231: return 0;
 13538  008590  0E00               	movlw	0
 13539                           
 13540                           ; BSR set to: 0
 13541  008592  0012               	return	
 13542  008594                     l14442:
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;MISC.c: 232: }
 13546                           ;MISC.c: 233: This++;
 13547  008594  0100               	movlb	0	; () banked
 13548  008596  4B7C               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 13549  008598  2B7D               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 13550                           
 13551                           ;MISC.c: 234: That++;
 13552  00859A  0100               	movlb	0	; () banked
 13553  00859C  4B7E               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 13554  00859E  2B7F               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 13555  0085A0  D000               	goto	l14444
 13556  0085A2                     l14444:
 13557  0085A2  C07C  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13558  0085A6  C07D  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13559  0085AA  50DF               	movf	indf2,w,c
 13560  0085AC  A4D8               	btfss	status,2,c
 13561  0085AE  D7C6               	goto	l14426
 13562                           
 13563                           ;MISC.c: 235: }
 13564                           ;MISC.c: 236: if(*That == 0)
 13565  0085B0  C07E  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13566  0085B4  C07F  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13567  0085B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13568  0085B8  6AF8               	clrf	tblptru,c
 13569  0085BA                     	endif
 13570  0085BA                     	if	0	;tblptru may be non-zero
 13571  0085BA                     	endif
 13572  0085BA  0008               	tblrd		*
 13573  0085BC  50F5               	movf	tablat,w,c
 13574  0085BE  0900               	iorlw	0
 13575  0085C0  A4D8               	btfss	status,2,c
 13576  0085C2  D002               	goto	l14454
 13577                           
 13578                           ;MISC.c: 237: {
 13579                           ;MISC.c: 238: return 1;
 13580  0085C4  0E01               	movlw	1
 13581                           
 13582                           ;MISC.c: 239: }
 13583  0085C6  0012               	return	
 13584  0085C8                     l14454:
 13585                           
 13586                           ;MISC.c: 240: else
 13587                           ;MISC.c: 241: {
 13588                           ;MISC.c: 242: return 0;
 13589  0085C8  0E00               	movlw	0
 13590  0085CA  0012               	return	
 13591  0085CC  0012               	return		;funcret
 13592  0085CE                     __end_of_StringMatchCaseInsensitive:
 13593                           	opt stack 0
 13594                           tblptru	equ	0xFF8
 13595                           tblptrh	equ	0xFF7
 13596                           tblptrl	equ	0xFF6
 13597                           tablat	equ	0xFF5
 13598                           prodh	equ	0xFF4
 13599                           prodl	equ	0xFF3
 13600                           intcon	equ	0xFF2
 13601                           indf0	equ	0xFEF
 13602                           postinc0	equ	0xFEE
 13603                           fsr0h	equ	0xFEA
 13604                           fsr0l	equ	0xFE9
 13605                           wreg	equ	0xFE8
 13606                           postdec1	equ	0xFE5
 13607                           fsr1h	equ	0xFE2
 13608                           fsr1l	equ	0xFE1
 13609                           indf2	equ	0xFDF
 13610                           postinc2	equ	0xFDE
 13611                           fsr2h	equ	0xFDA
 13612                           fsr2l	equ	0xFD9
 13613                           status	equ	0xFD8
 13614                           
 13615 ;; *************** function _StringMatch *****************
 13616 ;; Defined at:
 13617 ;;		line 190 in file "MISC.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  This            2   25[BANK0 ] PTR unsigned char 
 13620 ;;		 -> main@BluetoothString(255), 
 13621 ;;  That            2   27[BANK0 ] PTR const unsigned char 
 13622 ;;		 -> STR_86(4), 
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  1    wreg      unsigned char 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        5 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    6
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		_UseBluetooth
 13645 ;; This function uses a non-reentrant model
 13646 ;;
 13647                           
 13648                           	psect	text11
 13649  00896A                     __ptext11:
 13650                           	opt stack 0
 13651  00896A                     _StringMatch:
 13652                           	opt stack 23
 13653                           
 13654                           ;MISC.c: 192: while(*This != 0)
 13655                           
 13656                           ;incstack = 0
 13657  00896A  D025               	goto	l14410
 13658  00896C                     l14400:
 13659                           
 13660                           ;MISC.c: 193: {
 13661                           ;MISC.c: 194: if(*This != *That || *That == 0)
 13662  00896C  C079  FFD9         	movff	StringMatch@This,fsr2l
 13663  008970  C07A  FFDA         	movff	StringMatch@This+1,fsr2h
 13664  008974  50DF               	movf	indf2,w,c
 13665  008976  0100               	movlb	0	; () banked
 13666  008978  6F7D               	movwf	??_StringMatch& (0+255),b
 13667  00897A  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13668  00897E  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13669  008982                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13670  008982  6AF8               	clrf	tblptru,c
 13671  008984                     	endif
 13672  008984                     	if	0	;tblptru may be non-zero
 13673  008984                     	endif
 13674  008984  0008               	tblrd		*
 13675  008986  50F5               	movf	tablat,w,c
 13676  008988  0100               	movlb	0	; () banked
 13677  00898A  197D               	xorwf	??_StringMatch& (0+255),w,b
 13678  00898C  A4D8               	btfss	status,2,c
 13679  00898E  D00A               	goto	l14404
 13680                           
 13681                           ; BSR set to: 0
 13682  008990  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13683  008994  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13684  008998                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13685  008998  6AF8               	clrf	tblptru,c
 13686  00899A                     	endif
 13687  00899A                     	if	0	;tblptru may be non-zero
 13688  00899A                     	endif
 13689  00899A  0008               	tblrd		*
 13690  00899C  50F5               	movf	tablat,w,c
 13691  00899E  0900               	iorlw	0
 13692  0089A0  A4D8               	btfss	status,2,c
 13693  0089A2  D002               	goto	l14408
 13694  0089A4                     l14404:
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;MISC.c: 195: {
 13698                           ;MISC.c: 196: return 0;
 13699  0089A4  0E00               	movlw	0
 13700                           
 13701                           ; BSR set to: 0
 13702  0089A6  0012               	return	
 13703  0089A8                     l14408:
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;MISC.c: 197: }
 13707                           ;MISC.c: 198: This++;
 13708  0089A8  0100               	movlb	0	; () banked
 13709  0089AA  4B79               	infsnz	StringMatch@This& (0+255),f,b
 13710  0089AC  2B7A               	incf	(StringMatch@This+1)& (0+255),f,b
 13711                           
 13712                           ;MISC.c: 199: That++;
 13713  0089AE  0100               	movlb	0	; () banked
 13714  0089B0  4B7B               	infsnz	StringMatch@That& (0+255),f,b
 13715  0089B2  2B7C               	incf	(StringMatch@That+1)& (0+255),f,b
 13716  0089B4  D000               	goto	l14410
 13717  0089B6                     l14410:
 13718  0089B6  C079  FFD9         	movff	StringMatch@This,fsr2l
 13719  0089BA  C07A  FFDA         	movff	StringMatch@This+1,fsr2h
 13720  0089BE  50DF               	movf	indf2,w,c
 13721  0089C0  A4D8               	btfss	status,2,c
 13722  0089C2  D7D4               	goto	l14400
 13723                           
 13724                           ;MISC.c: 200: }
 13725                           ;MISC.c: 201: if(*That == 0)
 13726  0089C4  C07B  FFF6         	movff	StringMatch@That,tblptrl
 13727  0089C8  C07C  FFF7         	movff	StringMatch@That+1,tblptrh
 13728  0089CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13729  0089CC  6AF8               	clrf	tblptru,c
 13730  0089CE                     	endif
 13731  0089CE                     	if	0	;tblptru may be non-zero
 13732  0089CE                     	endif
 13733  0089CE  0008               	tblrd		*
 13734  0089D0  50F5               	movf	tablat,w,c
 13735  0089D2  0900               	iorlw	0
 13736  0089D4  A4D8               	btfss	status,2,c
 13737  0089D6  D002               	goto	l14420
 13738                           
 13739                           ;MISC.c: 202: {
 13740                           ;MISC.c: 203: return 1;
 13741  0089D8  0E01               	movlw	1
 13742                           
 13743                           ;MISC.c: 204: }
 13744  0089DA  0012               	return	
 13745  0089DC                     l14420:
 13746                           
 13747                           ;MISC.c: 205: else
 13748                           ;MISC.c: 206: {
 13749                           ;MISC.c: 207: return 0;
 13750  0089DC  0E00               	movlw	0
 13751  0089DE  0012               	return	
 13752  0089E0  0012               	return		;funcret
 13753  0089E2                     __end_of_StringMatch:
 13754                           	opt stack 0
 13755                           tblptru	equ	0xFF8
 13756                           tblptrh	equ	0xFF7
 13757                           tblptrl	equ	0xFF6
 13758                           tablat	equ	0xFF5
 13759                           prodh	equ	0xFF4
 13760                           prodl	equ	0xFF3
 13761                           intcon	equ	0xFF2
 13762                           indf0	equ	0xFEF
 13763                           postinc0	equ	0xFEE
 13764                           fsr0h	equ	0xFEA
 13765                           fsr0l	equ	0xFE9
 13766                           wreg	equ	0xFE8
 13767                           postdec1	equ	0xFE5
 13768                           fsr1h	equ	0xFE2
 13769                           fsr1l	equ	0xFE1
 13770                           indf2	equ	0xFDF
 13771                           postinc2	equ	0xFDE
 13772                           fsr2h	equ	0xFDA
 13773                           fsr2l	equ	0xFD9
 13774                           status	equ	0xFD8
 13775                           
 13776 ;; *************** function _StringContainsCaseInsensitive *****************
 13777 ;; Defined at:
 13778 ;;		line 289 in file "MISC.c"
 13779 ;; Parameters:    Size  Location     Type
 13780 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13781 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), main@BluetoothString(255), 
 13782 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13783 ;;		 -> STR_61(7), STR_60(9), STR_59(7), STR_45(4), 
 13784 ;;		 -> STR_44(13), STR_24(4), STR_22(6), STR_20(6), 
 13785 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;  tempThat        1   34[BANK0 ] unsigned char 
 13788 ;;  tempThis        1   33[BANK0 ] unsigned char 
 13789 ;;  begin           1   32[BANK0 ] unsigned char 
 13790 ;; Return value:  Size  Location     Type
 13791 ;;                  1    wreg      unsigned char 
 13792 ;; Registers used:
 13793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13794 ;; Tracked objects:
 13795 ;;		On entry : 0/0
 13796 ;;		On exit  : 0/0
 13797 ;;		Unchanged: 0/0
 13798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;Total ram usage:        7 bytes
 13804 ;; Hardware stack levels used:    1
 13805 ;; Hardware stack levels required when called:    7
 13806 ;; This function calls:
 13807 ;;		_lowercaseChar
 13808 ;; This function is called by:
 13809 ;;		_UseBluetooth
 13810 ;; This function uses a non-reentrant model
 13811 ;;
 13812                           
 13813                           	psect	text12
 13814  0073A8                     __ptext12:
 13815                           	opt stack 0
 13816  0073A8                     _StringContainsCaseInsensitive:
 13817                           	opt stack 22
 13818                           
 13819                           ;MISC.c: 291: unsigned char tempThis,
 13820                           ;MISC.c: 292: tempThat;
 13821                           ;MISC.c: 293: unsigned char begin = 0;
 13822                           
 13823                           ;incstack = 0
 13824  0073A8  0E00               	movlw	0
 13825  0073AA  0100               	movlb	0	; () banked
 13826  0073AC  6F80               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 13827                           
 13828                           ;MISC.c: 295: while(*This != 0)
 13829  0073AE  D078               	goto	l14492
 13830  0073B0                     l14460:
 13831                           
 13832                           ;MISC.c: 296: {
 13833                           ;MISC.c: 297: tempThis = *This;
 13834  0073B0  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 13835  0073B4  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 13836  0073B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13837  0073BA  6EF8               	movwf	tblptru,c
 13838  0073BC  0E0F               	movlw	(high __ramtop+-1)
 13839  0073BE  64F7               	cpfsgt	tblptrh,c
 13840  0073C0  D003               	bra	u17637
 13841  0073C2  0008               	tblrd		*
 13842  0073C4  50F5               	movf	tablat,w,c
 13843  0073C6  D005               	bra	u17630
 13844  0073C8                     u17637:
 13845  0073C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13846  0073CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13847  0073D0  50EF               	movf	indf0,w,c
 13848  0073D2                     u17630:
 13849  0073D2  0100               	movlb	0	; () banked
 13850  0073D4  6F81               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 13851                           
 13852                           ;MISC.c: 298: tempThat = *That;
 13853  0073D6  C07E  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 13854  0073DA  C07F  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 13855  0073DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13856  0073E0  6EF8               	movwf	tblptru,c
 13857  0073E2  0E0F               	movlw	(high __ramtop+-1)
 13858  0073E4  64F7               	cpfsgt	tblptrh,c
 13859  0073E6  D003               	bra	u17647
 13860  0073E8  0008               	tblrd		*
 13861  0073EA  50F5               	movf	tablat,w,c
 13862  0073EC  D005               	bra	u17640
 13863  0073EE                     u17647:
 13864  0073EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 13865  0073F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 13866  0073F6  50EF               	movf	indf0,w,c
 13867  0073F8                     u17640:
 13868  0073F8  0100               	movlb	0	; () banked
 13869  0073FA  6F82               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;MISC.c: 299: lowercaseChar(&tempThis);
 13873  0073FC  0E81               	movlw	low StringContainsCaseInsensitive@tempThis
 13874  0073FE  0100               	movlb	0	; () banked
 13875  007400  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13876  007402  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 13877  007404  0100               	movlb	0	; () banked
 13878  007406  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13879  007408  ECA2  F048         	call	_lowercaseChar	;wreg free
 13880                           
 13881                           ;MISC.c: 300: lowercaseChar(&tempThat);
 13882  00740C  0E82               	movlw	low StringContainsCaseInsensitive@tempThat
 13883  00740E  0100               	movlb	0	; () banked
 13884  007410  6F79               	movwf	lowercaseChar@Input& (0+255),b
 13885  007412  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 13886  007414  0100               	movlb	0	; () banked
 13887  007416  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13888  007418  ECA2  F048         	call	_lowercaseChar	;wreg free
 13889                           
 13890                           ;MISC.c: 302: if(tempThis == tempThat)
 13891  00741C  0100               	movlb	0	; () banked
 13892  00741E  5182               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 13893  007420  0100               	movlb	0	; () banked
 13894  007422  1981               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 13895  007424  A4D8               	btfss	status,2,c
 13896  007426  D033               	goto	l14484
 13897                           
 13898                           ; BSR set to: 0
 13899                           ;MISC.c: 303: {
 13900                           ;MISC.c: 304: begin = 1;
 13901  007428  0E01               	movlw	1
 13902  00742A  0100               	movlb	0	; () banked
 13903  00742C  6F80               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;MISC.c: 305: That++;
 13907  00742E  0100               	movlb	0	; () banked
 13908  007430  4B7E               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 13909  007432  2B7F               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 13910                           
 13911                           ; BSR set to: 0
 13912                           ;MISC.c: 306: if(*That == 0)
 13913  007434  C07E  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 13914  007438  C07F  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 13915  00743C  0E00               	movlw	low (__mediumconst shr (0+16))
 13916  00743E  6EF8               	movwf	tblptru,c
 13917  007440  0E0F               	movlw	(high __ramtop+-1)
 13918  007442  64F7               	cpfsgt	tblptrh,c
 13919  007444  D003               	bra	u17667
 13920  007446  0008               	tblrd		*
 13921  007448  50F5               	movf	tablat,w,c
 13922  00744A  D005               	bra	u17660
 13923  00744C                     u17667:
 13924  00744C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13925  007450  CFF7 FFEA          	movff	tblptrh,fsr0h
 13926  007454  50EF               	movf	indf0,w,c
 13927  007456                     u17660:
 13928  007456  0900               	iorlw	0
 13929  007458  A4D8               	btfss	status,2,c
 13930  00745A  D002               	goto	l14478
 13931                           
 13932                           ;MISC.c: 307: {
 13933                           ;MISC.c: 308: return 1;
 13934  00745C  0E01               	movlw	1
 13935  00745E  0012               	return	
 13936  007460                     l14478:
 13937                           
 13938                           ;MISC.c: 309: }
 13939                           ;MISC.c: 310: if(*This == 0)
 13940  007460  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 13941  007464  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 13942  007468  0E00               	movlw	low (__mediumconst shr (0+16))
 13943  00746A  6EF8               	movwf	tblptru,c
 13944  00746C  0E0F               	movlw	(high __ramtop+-1)
 13945  00746E  64F7               	cpfsgt	tblptrh,c
 13946  007470  D003               	bra	u17687
 13947  007472  0008               	tblrd		*
 13948  007474  50F5               	movf	tablat,w,c
 13949  007476  D005               	bra	u17680
 13950  007478                     u17687:
 13951  007478  CFF6 FFE9          	movff	tblptrl,fsr0l
 13952  00747C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13953  007480  50EF               	movf	indf0,w,c
 13954  007482                     u17680:
 13955  007482  0900               	iorlw	0
 13956  007484  A4D8               	btfss	status,2,c
 13957  007486  D008               	goto	l14490
 13958                           
 13959                           ;MISC.c: 311: {
 13960                           ;MISC.c: 312: return 0;
 13961  007488  0E00               	movlw	0
 13962  00748A  0012               	return	
 13963                           
 13964                           ;MISC.c: 313: }
 13965                           ;MISC.c: 314: }
 13966  00748C  D005               	goto	l14490
 13967  00748E                     l14484:
 13968                           
 13969                           ;MISC.c: 315: else
 13970                           ;MISC.c: 316: {
 13971                           ;MISC.c: 317: if(begin == 1)
 13972  00748E  0100               	movlb	0	; () banked
 13973  007490  0580               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
 13974  007492  D7F8               	goto	L11
 13975                           
 13976                           ; BSR set to: 0
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;MISC.c: 318: {
 13980                           ;MISC.c: 319: return 0;
 13981  007494  0012               	return	
 13982                           
 13983                           ; BSR set to: 0
 13984  007496  D000               	goto	l14490
 13985  007498                     l14490:
 13986                           
 13987                           ;MISC.c: 320: }
 13988                           ;MISC.c: 321: }
 13989                           ;MISC.c: 322: This++;
 13990  007498  0100               	movlb	0	; () banked
 13991  00749A  4B7C               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 13992  00749C  2B7D               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 13993  00749E  D000               	goto	l14492
 13994  0074A0                     l14492:
 13995                           
 13996                           ; BSR set to: 0
 13997  0074A0  C07C  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 13998  0074A4  C07D  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 13999  0074A8  0E00               	movlw	low (__mediumconst shr (0+16))
 14000  0074AA  6EF8               	movwf	tblptru,c
 14001  0074AC  0E0F               	movlw	(high __ramtop+-1)
 14002  0074AE  64F7               	cpfsgt	tblptrh,c
 14003  0074B0  D003               	bra	u17717
 14004  0074B2  0008               	tblrd		*
 14005  0074B4  50F5               	movf	tablat,w,c
 14006  0074B6  D005               	bra	u17710
 14007  0074B8                     u17717:
 14008  0074B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14009  0074BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14010  0074C0  50EF               	movf	indf0,w,c
 14011  0074C2                     u17710:
 14012  0074C2  0900               	iorlw	0
 14013  0074C4  A4D8               	btfss	status,2,c
 14014  0074C6  D774               	goto	l14460
 14015                           
 14016                           ;MISC.c: 323: }
 14017                           ;MISC.c: 324: return 0;
 14018  0074C8  0E00               	movlw	0
 14019  0074CA  0012               	return	
 14020  0074CC  0012               	return		;funcret
 14021  0074CE                     __end_of_StringContainsCaseInsensitive:
 14022                           	opt stack 0
 14023                           tblptru	equ	0xFF8
 14024                           tblptrh	equ	0xFF7
 14025                           tblptrl	equ	0xFF6
 14026                           tablat	equ	0xFF5
 14027                           prodh	equ	0xFF4
 14028                           prodl	equ	0xFF3
 14029                           intcon	equ	0xFF2
 14030                           indf0	equ	0xFEF
 14031                           postinc0	equ	0xFEE
 14032                           fsr0h	equ	0xFEA
 14033                           fsr0l	equ	0xFE9
 14034                           wreg	equ	0xFE8
 14035                           postdec1	equ	0xFE5
 14036                           fsr1h	equ	0xFE2
 14037                           fsr1l	equ	0xFE1
 14038                           indf2	equ	0xFDF
 14039                           postinc2	equ	0xFDE
 14040                           fsr2h	equ	0xFDA
 14041                           fsr2l	equ	0xFD9
 14042                           status	equ	0xFD8
 14043                           
 14044 ;; *************** function _StringAddEqual *****************
 14045 ;; Defined at:
 14046 ;;		line 591 in file "MISC.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;  Input           2   40[BANK0 ] PTR unsigned char 
 14049 ;;		 -> main@BluetoothString(255), 
 14050 ;; Auto vars:     Size  Location     Type
 14051 ;;  temp          100    0[BANK1 ] unsigned char [100]
 14052 ;;  j               1  102[BANK1 ] unsigned char 
 14053 ;;  i               1  101[BANK1 ] unsigned char 
 14054 ;;  firstnumber     1  100[BANK1 ] unsigned char 
 14055 ;; Return value:  Size  Location     Type
 14056 ;;                  1    wreg      unsigned char 
 14057 ;; Registers used:
 14058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14059 ;; Tracked objects:
 14060 ;;		On entry : 0/0
 14061 ;;		On exit  : 0/0
 14062 ;;		Unchanged: 0/0
 14063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14065 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14066 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14067 ;;      Totals:         0       4     103       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14068 ;;Total ram usage:      107 bytes
 14069 ;; Hardware stack levels used:    1
 14070 ;; Hardware stack levels required when called:    8
 14071 ;; This function calls:
 14072 ;;		_BufferCopy
 14073 ;;		_cleanBuffer
 14074 ;; This function is called by:
 14075 ;;		_UseBluetooth
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           
 14079                           	psect	text13
 14080  006536                     __ptext13:
 14081                           	opt stack 0
 14082  006536                     _StringAddEqual:
 14083                           	opt stack 21
 14084                           
 14085                           ;MISC.c: 593: unsigned char i =0;
 14086                           
 14087                           ;incstack = 0
 14088  006536  0E00               	movlw	0
 14089  006538  0101               	movlb	1	; () banked
 14090  00653A  6F65               	movwf	StringAddEqual@i& (0+255),b
 14091                           
 14092                           ;MISC.c: 594: unsigned char j =0;
 14093  00653C  0E00               	movlw	0
 14094  00653E  0101               	movlb	1	; () banked
 14095  006540  6F66               	movwf	StringAddEqual@j& (0+255),b
 14096                           
 14097                           ;MISC.c: 595: unsigned char firstnumber = 200;
 14098  006542  0EC8               	movlw	200
 14099  006544  0101               	movlb	1	; () banked
 14100  006546  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 14101                           
 14102                           ; BSR set to: 1
 14103                           ;MISC.c: 596: unsigned char temp[100];
 14104                           ;MISC.c: 597: cleanBuffer(temp,100);
 14105  006548  0E00               	movlw	low StringAddEqual@temp
 14106  00654A  0100               	movlb	0	; () banked
 14107  00654C  6F79               	movwf	cleanBuffer@data& (0+255),b
 14108  00654E  0E01               	movlw	high StringAddEqual@temp
 14109  006550  0100               	movlb	0	; () banked
 14110  006552  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 14111  006554  0E00               	movlw	0
 14112  006556  0100               	movlb	0	; () banked
 14113  006558  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 14114  00655A  0E64               	movlw	100
 14115  00655C  6F7B               	movwf	cleanBuffer@count& (0+255),b
 14116  00655E  ECBA  F045         	call	_cleanBuffer	;wreg free
 14117                           
 14118                           ;MISC.c: 598: while(Input[i] != 0)
 14119  006562  D032               	goto	l14688
 14120  006564                     l14680:
 14121                           
 14122                           ;MISC.c: 599: {
 14123                           ;MISC.c: 600: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 14124  006564  0101               	movlb	1	; () banked
 14125  006566  5165               	movf	StringAddEqual@i& (0+255),w,b
 14126  006568  0D01               	mullw	1
 14127  00656A  50F3               	movf	prodl,w,c
 14128  00656C  0100               	movlb	0	; () banked
 14129  00656E  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14130  006570  6ED9               	movwf	fsr2l,c
 14131  006572  50F4               	movf	prodh,w,c
 14132  006574  0100               	movlb	0	; () banked
 14133  006576  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14134  006578  6EDA               	movwf	fsr2h,c
 14135  00657A  0E2F               	movlw	47
 14136  00657C  64DF               	cpfsgt	indf2,c
 14137  00657E  D00F               	goto	l14684
 14138                           
 14139                           ; BSR set to: 0
 14140  006580  0101               	movlb	1	; () banked
 14141  006582  5165               	movf	StringAddEqual@i& (0+255),w,b
 14142  006584  0D01               	mullw	1
 14143  006586  50F3               	movf	prodl,w,c
 14144  006588  0100               	movlb	0	; () banked
 14145  00658A  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14146  00658C  6ED9               	movwf	fsr2l,c
 14147  00658E  50F4               	movf	prodh,w,c
 14148  006590  0100               	movlb	0	; () banked
 14149  006592  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14150  006594  6EDA               	movwf	fsr2h,c
 14151  006596  0E39               	movlw	57
 14152  006598  64DF               	cpfsgt	indf2,c
 14153  00659A  D010               	goto	l473
 14154  00659C  D000               	goto	l14684
 14155  00659E                     l14684:
 14156                           
 14157                           ; BSR set to: 0
 14158  00659E  0101               	movlb	1	; () banked
 14159  0065A0  5165               	movf	StringAddEqual@i& (0+255),w,b
 14160  0065A2  0D01               	mullw	1
 14161  0065A4  50F3               	movf	prodl,w,c
 14162  0065A6  0100               	movlb	0	; () banked
 14163  0065A8  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14164  0065AA  6ED9               	movwf	fsr2l,c
 14165  0065AC  50F4               	movf	prodh,w,c
 14166  0065AE  0100               	movlb	0	; () banked
 14167  0065B0  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14168  0065B2  6EDA               	movwf	fsr2h,c
 14169  0065B4  0E2D               	movlw	45
 14170  0065B6  18DE               	xorwf	postinc2,w,c
 14171  0065B8  A4D8               	btfss	status,2,c
 14172  0065BA  D003               	goto	l14686
 14173  0065BC                     l473:
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;MISC.c: 601: {
 14177                           ;MISC.c: 602: firstnumber = i;
 14178  0065BC  C165  F164         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 14179                           
 14180                           ;MISC.c: 603: break;
 14181  0065C0  D011               	goto	l14690
 14182  0065C2                     l14686:
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;MISC.c: 604: }
 14186                           ;MISC.c: 605: i++;
 14187  0065C2  0101               	movlb	1	; () banked
 14188  0065C4  2B65               	incf	StringAddEqual@i& (0+255),f,b
 14189  0065C6  D000               	goto	l14688
 14190  0065C8                     l14688:
 14191  0065C8  0101               	movlb	1	; () banked
 14192  0065CA  5165               	movf	StringAddEqual@i& (0+255),w,b
 14193  0065CC  0D01               	mullw	1
 14194  0065CE  50F3               	movf	prodl,w,c
 14195  0065D0  0100               	movlb	0	; () banked
 14196  0065D2  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14197  0065D4  6ED9               	movwf	fsr2l,c
 14198  0065D6  50F4               	movf	prodh,w,c
 14199  0065D8  0100               	movlb	0	; () banked
 14200  0065DA  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14201  0065DC  6EDA               	movwf	fsr2h,c
 14202  0065DE  50DF               	movf	indf2,w,c
 14203  0065E0  A4D8               	btfss	status,2,c
 14204  0065E2  D7C0               	goto	l14680
 14205  0065E4                     l14690:
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;MISC.c: 606: }
 14209                           ;MISC.c: 607: if(firstnumber == 200)
 14210  0065E4  0EC8               	movlw	200
 14211  0065E6  0101               	movlb	1	; () banked
 14212  0065E8  1964               	xorwf	StringAddEqual@firstnumber& (0+255),w,b
 14213  0065EA  A4D8               	btfss	status,2,c
 14214  0065EC  D002               	goto	l14696
 14215                           
 14216                           ; BSR set to: 1
 14217                           ;MISC.c: 608: {
 14218                           ;MISC.c: 610: return 0;
 14219  0065EE  0E00               	movlw	0
 14220                           
 14221                           ; BSR set to: 1
 14222  0065F0  0012               	return	
 14223  0065F2                     l14696:
 14224                           
 14225                           ; BSR set to: 1
 14226                           ;MISC.c: 611: }
 14227                           ;MISC.c: 612: for(j=0;j<firstnumber;j++)
 14228  0065F2  0E00               	movlw	0
 14229  0065F4  0101               	movlb	1	; () banked
 14230  0065F6  6F66               	movwf	StringAddEqual@j& (0+255),b
 14231  0065F8  D019               	goto	l14702
 14232  0065FA                     l14698:
 14233                           
 14234                           ; BSR set to: 1
 14235                           ;MISC.c: 613: {
 14236                           ;MISC.c: 614: temp[j] = Input[j];
 14237  0065FA  0101               	movlb	1	; () banked
 14238  0065FC  5166               	movf	StringAddEqual@j& (0+255),w,b
 14239  0065FE  0D01               	mullw	1
 14240  006600  50F3               	movf	prodl,w,c
 14241  006602  0100               	movlb	0	; () banked
 14242  006604  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14243  006606  6ED9               	movwf	fsr2l,c
 14244  006608  50F4               	movf	prodh,w,c
 14245  00660A  0100               	movlb	0	; () banked
 14246  00660C  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14247  00660E  6EDA               	movwf	fsr2h,c
 14248  006610  0101               	movlb	1	; () banked
 14249  006612  5166               	movf	StringAddEqual@j& (0+255),w,b
 14250  006614  0D01               	mullw	1
 14251  006616  0E00               	movlw	low StringAddEqual@temp
 14252  006618  24F3               	addwf	prodl,w,c
 14253  00661A  6EE1               	movwf	fsr1l,c
 14254  00661C  0E01               	movlw	high StringAddEqual@temp
 14255  00661E  20F4               	addwfc	prodh,w,c
 14256  006620  6EE2               	movwf	fsr1h,c
 14257  006622  CFDF FFE7          	movff	indf2,indf1
 14258                           
 14259                           ; BSR set to: 1
 14260  006626  0101               	movlb	1	; () banked
 14261  006628  2B66               	incf	StringAddEqual@j& (0+255),f,b
 14262  00662A  D000               	goto	l14702
 14263  00662C                     l14702:
 14264                           
 14265                           ; BSR set to: 1
 14266  00662C  0101               	movlb	1	; () banked
 14267  00662E  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14268  006630  0101               	movlb	1	; () banked
 14269  006632  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 14270  006634  A0D8               	btfss	status,0,c
 14271  006636  D7E1               	goto	l14698
 14272                           
 14273                           ; BSR set to: 1
 14274                           ;MISC.c: 615: }
 14275                           ;MISC.c: 616: temp[firstnumber] = '=';
 14276                           
 14277                           ; BSR set to: 1
 14278  006638  0101               	movlb	1	; () banked
 14279  00663A  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14280  00663C  0D01               	mullw	1
 14281  00663E  0E00               	movlw	low StringAddEqual@temp
 14282  006640  24F3               	addwf	prodl,w,c
 14283  006642  6ED9               	movwf	fsr2l,c
 14284  006644  0E01               	movlw	high StringAddEqual@temp
 14285  006646  20F4               	addwfc	prodh,w,c
 14286  006648  6EDA               	movwf	fsr2h,c
 14287  00664A  0E3D               	movlw	61
 14288  00664C  6EDF               	movwf	indf2,c
 14289                           
 14290                           ; BSR set to: 1
 14291                           ;MISC.c: 617: for(j = (firstnumber);j<99;j++)
 14292  00664E  C164  F166         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 14293  006652                     l14708:
 14294                           
 14295                           ; BSR set to: 1
 14296  006652  0E62               	movlw	98
 14297  006654  0101               	movlb	1	; () banked
 14298  006656  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 14299  006658  D001               	goto	l14712
 14300                           
 14301                           ; BSR set to: 1
 14302  00665A  D032               	goto	l14722
 14303  00665C                     l14712:
 14304                           
 14305                           ; BSR set to: 1
 14306                           ;MISC.c: 618: {
 14307                           ;MISC.c: 619: temp[j+1] = Input[j];
 14308  00665C  0101               	movlb	1	; () banked
 14309  00665E  5166               	movf	StringAddEqual@j& (0+255),w,b
 14310  006660  0D01               	mullw	1
 14311  006662  50F3               	movf	prodl,w,c
 14312  006664  0100               	movlb	0	; () banked
 14313  006666  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14314  006668  6ED9               	movwf	fsr2l,c
 14315  00666A  50F4               	movf	prodh,w,c
 14316  00666C  0100               	movlb	0	; () banked
 14317  00666E  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14318  006670  6EDA               	movwf	fsr2h,c
 14319  006672  0101               	movlb	1	; () banked
 14320  006674  5166               	movf	StringAddEqual@j& (0+255),w,b
 14321  006676  0100               	movlb	0	; () banked
 14322  006678  6F8A               	movwf	??_StringAddEqual& (0+255),b
 14323  00667A  6B8B               	clrf	(??_StringAddEqual+1)& (0+255),b
 14324  00667C  0E01               	movlw	1
 14325  00667E  0100               	movlb	0	; () banked
 14326  006680  278A               	addwf	??_StringAddEqual& (0+255),f,b
 14327  006682  0E00               	movlw	0
 14328  006684  238B               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 14329  006686  0E00               	movlw	low StringAddEqual@temp
 14330  006688  0100               	movlb	0	; () banked
 14331  00668A  258A               	addwf	??_StringAddEqual& (0+255),w,b
 14332  00668C  6EE1               	movwf	fsr1l,c
 14333  00668E  0E01               	movlw	high StringAddEqual@temp
 14334  006690  0100               	movlb	0	; () banked
 14335  006692  218B               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 14336  006694  6EE2               	movwf	fsr1h,c
 14337  006696  CFDF FFE7          	movff	indf2,indf1
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;MISC.c: 620: if(Input[j] ==0)
 14341  00669A  0101               	movlb	1	; () banked
 14342  00669C  5166               	movf	StringAddEqual@j& (0+255),w,b
 14343  00669E  0D01               	mullw	1
 14344  0066A0  50F3               	movf	prodl,w,c
 14345  0066A2  0100               	movlb	0	; () banked
 14346  0066A4  2588               	addwf	StringAddEqual@Input& (0+255),w,b
 14347  0066A6  6ED9               	movwf	fsr2l,c
 14348  0066A8  50F4               	movf	prodh,w,c
 14349  0066AA  0100               	movlb	0	; () banked
 14350  0066AC  2189               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14351  0066AE  6EDA               	movwf	fsr2h,c
 14352  0066B0  50DF               	movf	indf2,w,c
 14353  0066B2  B4D8               	btfsc	status,2,c
 14354  0066B4  D005               	goto	l14722
 14355  0066B6  D001               	goto	l14718
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;MISC.c: 621: {
 14359                           ;MISC.c: 622: break;
 14360  0066B8  D003               	goto	l14722
 14361  0066BA                     l14718:
 14362                           
 14363                           ; BSR set to: 0
 14364  0066BA  0101               	movlb	1	; () banked
 14365  0066BC  2B66               	incf	StringAddEqual@j& (0+255),f,b
 14366  0066BE  D7C9               	goto	l14708
 14367  0066C0                     l14722:
 14368                           
 14369                           ;MISC.c: 623: }
 14370                           ;MISC.c: 624: }
 14371                           ;MISC.c: 625: BufferCopy(temp,Input,100, 0);
 14372  0066C0  0E00               	movlw	low StringAddEqual@temp
 14373  0066C2  0100               	movlb	0	; () banked
 14374  0066C4  6F81               	movwf	BufferCopy@from& (0+255),b
 14375  0066C6  0E01               	movlw	high StringAddEqual@temp
 14376  0066C8  0100               	movlb	0	; () banked
 14377  0066CA  6F82               	movwf	(BufferCopy@from+1)& (0+255),b
 14378  0066CC  C088  F083         	movff	StringAddEqual@Input,BufferCopy@to
 14379  0066D0  C089  F084         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 14380  0066D4  0E64               	movlw	100
 14381  0066D6  0100               	movlb	0	; () banked
 14382  0066D8  6F85               	movwf	BufferCopy@count& (0+255),b
 14383  0066DA  0E00               	movlw	0
 14384  0066DC  0100               	movlb	0	; () banked
 14385  0066DE  6F86               	movwf	BufferCopy@shift& (0+255),b
 14386  0066E0  EC2F  F043         	call	_BufferCopy	;wreg free
 14387                           
 14388                           ;MISC.c: 626: return 1;
 14389  0066E4  0E01               	movlw	1
 14390  0066E6  0012               	return	
 14391  0066E8  0012               	return		;funcret
 14392  0066EA                     __end_of_StringAddEqual:
 14393                           	opt stack 0
 14394                           tblptru	equ	0xFF8
 14395                           tblptrh	equ	0xFF7
 14396                           tblptrl	equ	0xFF6
 14397                           tablat	equ	0xFF5
 14398                           prodh	equ	0xFF4
 14399                           prodl	equ	0xFF3
 14400                           intcon	equ	0xFF2
 14401                           indf0	equ	0xFEF
 14402                           postinc0	equ	0xFEE
 14403                           fsr0h	equ	0xFEA
 14404                           fsr0l	equ	0xFE9
 14405                           wreg	equ	0xFE8
 14406                           indf1	equ	0xFE7
 14407                           postdec1	equ	0xFE5
 14408                           fsr1h	equ	0xFE2
 14409                           fsr1l	equ	0xFE1
 14410                           indf2	equ	0xFDF
 14411                           postinc2	equ	0xFDE
 14412                           fsr2h	equ	0xFDA
 14413                           fsr2l	equ	0xFD9
 14414                           status	equ	0xFD8
 14415                           
 14416 ;; *************** function _BufferCopy *****************
 14417 ;; Defined at:
 14418 ;;		line 167 in file "MISC.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;  from            2   33[BANK0 ] PTR unsigned char 
 14421 ;;		 -> StringAddEqual@temp(100), ReceivedString(255), 
 14422 ;;  to              2   35[BANK0 ] PTR unsigned char 
 14423 ;;		 -> main@BluetoothString(255), 
 14424 ;;  count           1   37[BANK0 ] unsigned char 
 14425 ;;  shift           1   38[BANK0 ] unsigned char 
 14426 ;; Auto vars:     Size  Location     Type
 14427 ;;  i               1   39[BANK0 ] unsigned char 
 14428 ;; Return value:  Size  Location     Type
 14429 ;;		None               void
 14430 ;; Registers used:
 14431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14432 ;; Tracked objects:
 14433 ;;		On entry : 0/0
 14434 ;;		On exit  : 0/0
 14435 ;;		Unchanged: 0/0
 14436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14437 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14440 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14441 ;;Total ram usage:        7 bytes
 14442 ;; Hardware stack levels used:    1
 14443 ;; Hardware stack levels required when called:    7
 14444 ;; This function calls:
 14445 ;;		_cleanBuffer
 14446 ;; This function is called by:
 14447 ;;		_main
 14448 ;;		_StringAddEqual
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           	psect	text14
 14453  00865E                     __ptext14:
 14454                           	opt stack 0
 14455  00865E                     _BufferCopy:
 14456                           	opt stack 21
 14457                           
 14458                           ;MISC.c: 169: unsigned char i=0;
 14459                           
 14460                           ;incstack = 0
 14461  00865E  0E00               	movlw	0
 14462  008660  0100               	movlb	0	; () banked
 14463  008662  6F87               	movwf	BufferCopy@i& (0+255),b
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;MISC.c: 170: cleanBuffer(to,count);
 14467  008664  C083  F079         	movff	BufferCopy@to,cleanBuffer@data
 14468  008668  C084  F07A         	movff	BufferCopy@to+1,cleanBuffer@data+1
 14469  00866C  C085  F07B         	movff	BufferCopy@count,cleanBuffer@count
 14470  008670  0100               	movlb	0	; () banked
 14471  008672  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 14472  008674  ECBA  F045         	call	_cleanBuffer	;wreg free
 14473                           
 14474                           ;MISC.c: 171: for(i = shift; i>0;i--)
 14475  008678  C086  F087         	movff	BufferCopy@shift,BufferCopy@i
 14476  00867C                     l13666:
 14477  00867C  0100               	movlb	0	; () banked
 14478  00867E  5187               	movf	BufferCopy@i& (0+255),w,b
 14479  008680  0100               	movlb	0	; () banked
 14480  008682  B4D8               	btfsc	status,2,c
 14481  008684  D022               	goto	l13686
 14482  008686  D001               	goto	l13670
 14483                           
 14484                           ; BSR set to: 0
 14485  008688  D020               	goto	l13686
 14486  00868A                     l13670:
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;MISC.c: 172: {
 14490                           ;MISC.c: 173: *to = ' ';
 14491  00868A  C083  FFD9         	movff	BufferCopy@to,fsr2l
 14492  00868E  C084  FFDA         	movff	BufferCopy@to+1,fsr2h
 14493  008692  0E20               	movlw	32
 14494  008694  6EDF               	movwf	indf2,c
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;MISC.c: 174: to++;
 14498  008696  0100               	movlb	0	; () banked
 14499  008698  4B83               	infsnz	BufferCopy@to& (0+255),f,b
 14500  00869A  2B84               	incf	(BufferCopy@to+1)& (0+255),f,b
 14501                           
 14502                           ; BSR set to: 0
 14503  00869C  0100               	movlb	0	; () banked
 14504  00869E  0787               	decf	BufferCopy@i& (0+255),f,b
 14505  0086A0  D7ED               	goto	l13666
 14506                           
 14507                           ; BSR set to: 0
 14508                           ;MISC.c: 175: }
 14509                           ;MISC.c: 176: while(*from != 0 && count >0)
 14510                           
 14511                           ; BSR set to: 0
 14512  0086A2  D013               	goto	l13686
 14513  0086A4                     l13678:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;MISC.c: 177: {
 14517                           ;MISC.c: 178: *to = *from;
 14518  0086A4  C081  FFD9         	movff	BufferCopy@from,fsr2l
 14519  0086A8  C082  FFDA         	movff	BufferCopy@from+1,fsr2h
 14520  0086AC  C083  FFE1         	movff	BufferCopy@to,fsr1l
 14521  0086B0  C084  FFE2         	movff	BufferCopy@to+1,fsr1h
 14522  0086B4  CFDF FFE7          	movff	indf2,indf1
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;MISC.c: 179: from++;
 14526  0086B8  0100               	movlb	0	; () banked
 14527  0086BA  4B81               	infsnz	BufferCopy@from& (0+255),f,b
 14528  0086BC  2B82               	incf	(BufferCopy@from+1)& (0+255),f,b
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;MISC.c: 180: to++;
 14532  0086BE  0100               	movlb	0	; () banked
 14533  0086C0  4B83               	infsnz	BufferCopy@to& (0+255),f,b
 14534  0086C2  2B84               	incf	(BufferCopy@to+1)& (0+255),f,b
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;MISC.c: 181: count--;
 14538  0086C4  0100               	movlb	0	; () banked
 14539  0086C6  0785               	decf	BufferCopy@count& (0+255),f,b
 14540  0086C8  D000               	goto	l13686
 14541  0086CA                     l13686:
 14542                           
 14543                           ; BSR set to: 0
 14544  0086CA  C081  FFD9         	movff	BufferCopy@from,fsr2l
 14545  0086CE  C082  FFDA         	movff	BufferCopy@from+1,fsr2h
 14546  0086D2  50DF               	movf	indf2,w,c
 14547  0086D4  B4D8               	btfsc	status,2,c
 14548  0086D6  0012               	return	
 14549                           
 14550                           ; BSR set to: 0
 14551  0086D8  0100               	movlb	0	; () banked
 14552  0086DA  5185               	movf	BufferCopy@count& (0+255),w,b
 14553  0086DC  0100               	movlb	0	; () banked
 14554  0086DE  B4D8               	btfsc	status,2,c
 14555  0086E0  0012               	return	
 14556  0086E2  D7E0               	goto	l13678
 14557                           
 14558                           ; BSR set to: 0
 14559  0086E4  0012               	return	
 14560                           
 14561                           ; BSR set to: 0
 14562                           
 14563                           ; BSR set to: 0
 14564  0086E6  0012               	return		;funcret
 14565  0086E8                     __end_of_BufferCopy:
 14566                           	opt stack 0
 14567                           tblptru	equ	0xFF8
 14568                           tblptrh	equ	0xFF7
 14569                           tblptrl	equ	0xFF6
 14570                           tablat	equ	0xFF5
 14571                           prodh	equ	0xFF4
 14572                           prodl	equ	0xFF3
 14573                           intcon	equ	0xFF2
 14574                           indf0	equ	0xFEF
 14575                           postinc0	equ	0xFEE
 14576                           fsr0h	equ	0xFEA
 14577                           fsr0l	equ	0xFE9
 14578                           wreg	equ	0xFE8
 14579                           indf1	equ	0xFE7
 14580                           postdec1	equ	0xFE5
 14581                           fsr1h	equ	0xFE2
 14582                           fsr1l	equ	0xFE1
 14583                           indf2	equ	0xFDF
 14584                           postinc2	equ	0xFDE
 14585                           fsr2h	equ	0xFDA
 14586                           fsr2l	equ	0xFD9
 14587                           status	equ	0xFD8
 14588                           
 14589 ;; *************** function _SendRF_wait *****************
 14590 ;; Defined at:
 14591 ;;		line 145 in file "RF.c"
 14592 ;; Parameters:    Size  Location     Type
 14593 ;;  Code            2   33[BANK0 ] PTR const unsigned char 
 14594 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 14595 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 14596 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 14597 ;;		 -> Conf1_ChannelD(12), 
 14598 ;;  Config          1   35[BANK0 ] unsigned char 
 14599 ;;  size            1   36[BANK0 ] unsigned char 
 14600 ;;  amount          1   37[BANK0 ] unsigned char 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;		None               void
 14605 ;; Registers used:
 14606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14607 ;; Tracked objects:
 14608 ;;		On entry : 0/0
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14612 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14616 ;;Total ram usage:        5 bytes
 14617 ;; Hardware stack levels used:    1
 14618 ;; Hardware stack levels required when called:    8
 14619 ;; This function calls:
 14620 ;;		_LEDTimerON
 14621 ;;		_ReadIRpin
 14622 ;;		_SendRF
 14623 ;; This function is called by:
 14624 ;;		_UseBluetooth
 14625 ;;		_SendRF_Channel
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	text15
 14630  008F28                     __ptext15:
 14631                           	opt stack 0
 14632  008F28                     _SendRF_wait:
 14633                           	opt stack 20
 14634                           
 14635                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;incstack = 0
 14639  008F28  987D               	bcf	3965,4,c	;volatile
 14640                           
 14641                           ;RF.c: 148: INTCONbits.RBIE = 0;
 14642  008F2A  96F2               	bcf	intcon,3,c	;volatile
 14643                           
 14644                           ;RF.c: 149: INTCONbits.PEIE = 0;
 14645  008F2C  9CF2               	bcf	intcon,6,c	;volatile
 14646                           
 14647                           ;RF.c: 150: LEDTimerON();
 14648  008F2E  EC66  F049         	call	_LEDTimerON	;wreg free
 14649                           
 14650                           ;RF.c: 151: (LATC |= 0x04);
 14651  008F32  848B               	bsf	3979,2,c	;volatile
 14652                           
 14653                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 14654  008F34  C081  F079         	movff	SendRF_wait@Code,SendRF@Code
 14655  008F38  C082  F07A         	movff	SendRF_wait@Code+1,SendRF@Code+1
 14656  008F3C  C083  F07B         	movff	SendRF_wait@Config,SendRF@Config
 14657  008F40  C084  F07C         	movff	SendRF_wait@size,SendRF@size
 14658  008F44  C085  F07D         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 14659  008F48  EC1D  F03D         	call	_SendRF	;wreg free
 14660                           
 14661                           ;RF.c: 153: while(!Sent);
 14662  008F4C  D000               	goto	l14100
 14663  008F4E                     l14100:
 14664  008F4E  0100               	movlb	0	; () banked
 14665  008F50  51E6               	movf	_Sent& (0+255),w,b	;volatile
 14666  008F52  B4D8               	btfsc	status,2,c
 14667  008F54  D7FC               	goto	l14100
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;RF.c: 154: INTCONbits.PEIE = 1;
 14671  008F56  8CF2               	bsf	intcon,6,c	;volatile
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 14675  008F58  ECA3  F049         	call	_ReadIRpin	;wreg free
 14676  008F5C  6E31               	movwf	_IRpinOLD,c
 14677                           
 14678                           ;RF.c: 156: INTCONbits.RBIF = 0;
 14679  008F5E  90F2               	bcf	intcon,0,c	;volatile
 14680                           
 14681                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 14682  008F60  887D               	bsf	3965,4,c	;volatile
 14683                           
 14684                           ;RF.c: 158: INTCONbits.RBIE = 1;
 14685  008F62  86F2               	bsf	intcon,3,c	;volatile
 14686  008F64  0012               	return		;funcret
 14687  008F66                     __end_of_SendRF_wait:
 14688                           	opt stack 0
 14689                           tblptru	equ	0xFF8
 14690                           tblptrh	equ	0xFF7
 14691                           tblptrl	equ	0xFF6
 14692                           tablat	equ	0xFF5
 14693                           prodh	equ	0xFF4
 14694                           prodl	equ	0xFF3
 14695                           intcon	equ	0xFF2
 14696                           indf0	equ	0xFEF
 14697                           postinc0	equ	0xFEE
 14698                           fsr0h	equ	0xFEA
 14699                           fsr0l	equ	0xFE9
 14700                           wreg	equ	0xFE8
 14701                           indf1	equ	0xFE7
 14702                           postdec1	equ	0xFE5
 14703                           fsr1h	equ	0xFE2
 14704                           fsr1l	equ	0xFE1
 14705                           indf2	equ	0xFDF
 14706                           postinc2	equ	0xFDE
 14707                           fsr2h	equ	0xFDA
 14708                           fsr2l	equ	0xFD9
 14709                           status	equ	0xFD8
 14710                           
 14711 ;; *************** function _SendRF *****************
 14712 ;; Defined at:
 14713 ;;		line 68 in file "RF.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  Code            2   25[BANK0 ] PTR const unsigned char 
 14716 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 14717 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 14718 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 14719 ;;		 -> Conf1_ChannelD(12), 
 14720 ;;  Config          1   27[BANK0 ] unsigned char 
 14721 ;;  size            1   28[BANK0 ] unsigned char 
 14722 ;;  RepeatAmount    1   29[BANK0 ] unsigned char 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;  i               1   32[BANK0 ] unsigned char 
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  1    wreg      unsigned char 
 14727 ;; Registers used:
 14728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14734 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14737 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14738 ;;Total ram usage:        8 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    6
 14741 ;; This function calls:
 14742 ;;		Nothing
 14743 ;; This function is called by:
 14744 ;;		_SendRF_wait
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text16
 14749  007A3A                     __ptext16:
 14750                           	opt stack 0
 14751  007A3A                     _SendRF:
 14752                           	opt stack 21
 14753                           
 14754                           ;RF.c: 70: unsigned char i;
 14755                           ;RF.c: 71: if(Sent)
 14756                           
 14757                           ;incstack = 0
 14758  007A3A  0100               	movlb	0	; () banked
 14759  007A3C  51E6               	movf	_Sent& (0+255),w,b	;volatile
 14760  007A3E  B4D8               	btfsc	status,2,c
 14761  007A40  0012               	return	
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;RF.c: 72: {
 14765                           ;RF.c: 74: RF_IR = 55;
 14766  007A42  0E37               	movlw	55
 14767  007A44  6E40               	movwf	_RF_IR,c
 14768                           
 14769                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 14770  007A46  0100               	movlb	0	; () banked
 14771  007A48  517B               	movf	SendRF@Config& (0+255),w,b
 14772  007A4A  0100               	movlb	0	; () banked
 14773  007A4C  B4D8               	btfsc	status,2,c
 14774  007A4E  0012               	return	
 14775                           
 14776                           ; BSR set to: 0
 14777  007A50  0E02               	movlw	2
 14778  007A52  0100               	movlb	0	; () banked
 14779  007A54  657B               	cpfsgt	SendRF@Config& (0+255),b
 14780  007A56  D002               	goto	l2096
 14781  007A58  0012               	return	
 14782                           
 14783                           ; BSR set to: 0
 14784                           ;RF.c: 76: {
 14785                           ;RF.c: 77: return 0;
 14786                           ;	Return value of _SendRF is never used
 14787  007A5A  0012               	return	
 14788  007A5C                     l2096:
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;RF.c: 78: }
 14792                           ;RF.c: 79: RFConfig = Config;
 14793  007A5C  C07B  F036         	movff	SendRF@Config,_RFConfig
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;RF.c: 80: if(Config == 1)
 14797  007A60  0100               	movlb	0	; () banked
 14798  007A62  057B               	decf	SendRF@Config& (0+255),w,b
 14799  007A64  A4D8               	btfss	status,2,c
 14800  007A66  D002               	goto	l13610
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;RF.c: 81: {
 14804                           ;RF.c: 82: RF_IR_Postscaler = 2;
 14805  007A68  0E02               	movlw	2
 14806  007A6A  D006               	goto	L12
 14807  007A6C                     l13610:
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;RF.c: 84: else if(Config == 2)
 14811  007A6C  0E02               	movlw	2
 14812  007A6E  0100               	movlb	0	; () banked
 14813  007A70  197B               	xorwf	SendRF@Config& (0+255),w,b
 14814  007A72  A4D8               	btfss	status,2,c
 14815  007A74  0012               	return	
 14816                           
 14817                           ; BSR set to: 0
 14818                           ;RF.c: 85: {
 14819                           ;RF.c: 86: RF_IR_Postscaler = 4;
 14820  007A76  0E04               	movlw	4
 14821  007A78                     L12:
 14822  007A78  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 14823                           
 14824                           ;RF.c: 87: }
 14825  007A7A  D002               	goto	l13614
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;RF.c: 88: else
 14829                           ;RF.c: 89: {
 14830                           ;RF.c: 90: return 0;
 14831                           ;	Return value of _SendRF is never used
 14832  007A7C  0012               	return	
 14833                           
 14834                           ; BSR set to: 0
 14835  007A7E  D000               	goto	l13614
 14836  007A80                     l13614:
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;RF.c: 91: }
 14840                           ;RF.c: 93: Sent = 0;
 14841  007A80  0E00               	movlw	0
 14842  007A82  0100               	movlb	0	; () banked
 14843  007A84  6FE6               	movwf	_Sent& (0+255),b	;volatile
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;RF.c: 94: Sendcount = RepeatAmount;
 14847  007A86  C07D  F03A         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 14848                           
 14849                           ;RF.c: 95: RFsendFlag = 1;
 14850  007A8A  0E01               	movlw	1
 14851  007A8C  6E39               	movwf	_RFsendFlag,c	;volatile
 14852                           
 14853                           ;RF.c: 96: RFcodeBit = 0;
 14854  007A8E  0E00               	movlw	0
 14855  007A90  6E37               	movwf	_RFcodeBit,c
 14856                           
 14857                           ;RF.c: 97: RFcodePlace = 1;
 14858  007A92  0E01               	movlw	1
 14859  007A94  6E38               	movwf	_RFcodePlace,c
 14860                           
 14861                           ; BSR set to: 0
 14862                           ;RF.c: 100: if(size >= 20)
 14863  007A96  0E13               	movlw	19
 14864  007A98  0100               	movlb	0	; () banked
 14865  007A9A  657C               	cpfsgt	SendRF@size& (0+255),b
 14866  007A9C  D002               	goto	l13622
 14867  007A9E  0012               	return	
 14868                           
 14869                           ; BSR set to: 0
 14870                           ;RF.c: 101: {
 14871                           ;RF.c: 102: return 0;
 14872                           ;	Return value of _SendRF is never used
 14873  007AA0  0012               	return	
 14874  007AA2                     l13622:
 14875                           
 14876                           ; BSR set to: 0
 14877                           ;RF.c: 103: }
 14878                           ;RF.c: 104: for(i=0;i<size;i++)
 14879  007AA2  0E00               	movlw	0
 14880  007AA4  0100               	movlb	0	; () banked
 14881  007AA6  6F80               	movwf	SendRF@i& (0+255),b
 14882  007AA8  D021               	goto	l13628
 14883  007AAA                     l13624:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;RF.c: 105: {
 14887                           ;RF.c: 106: RFsendCode[i] = Code[i];
 14888  007AAA  0100               	movlb	0	; () banked
 14889  007AAC  5180               	movf	SendRF@i& (0+255),w,b
 14890  007AAE  0D01               	mullw	1
 14891  007AB0  C079  F07E         	movff	SendRF@Code,??_SendRF
 14892  007AB4  C07A  F07F         	movff	SendRF@Code+1,??_SendRF+1
 14893  007AB8  50F3               	movf	prodl,w,c
 14894  007ABA  0100               	movlb	0	; () banked
 14895  007ABC  277E               	addwf	??_SendRF& (0+255),f,b
 14896  007ABE  50F4               	movf	prodh,w,c
 14897  007AC0  0100               	movlb	0	; () banked
 14898  007AC2  237F               	addwfc	(??_SendRF+1)& (0+255),f,b
 14899  007AC4  C07E  FFF6         	movff	??_SendRF,tblptrl
 14900  007AC8  C07F  FFF7         	movff	??_SendRF+1,tblptrh
 14901  007ACC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14902  007ACC  6AF8               	clrf	tblptru,c
 14903  007ACE                     	endif
 14904  007ACE                     	if	0	;tblptru may be non-zero
 14905  007ACE                     	endif
 14906  007ACE  0100               	movlb	0	; () banked
 14907  007AD0  5180               	movf	SendRF@i& (0+255),w,b
 14908  007AD2  0D01               	mullw	1
 14909  007AD4  0ED6               	movlw	low _RFsendCode
 14910  007AD6  24F3               	addwf	prodl,w,c
 14911  007AD8  6ED9               	movwf	fsr2l,c
 14912  007ADA  0E01               	movlw	high _RFsendCode
 14913  007ADC  20F4               	addwfc	prodh,w,c
 14914  007ADE  6EDA               	movwf	fsr2h,c
 14915  007AE0  0008               	tblrd		*
 14916  007AE2  CFF5 FFDF          	movff	tablat,indf2
 14917                           
 14918                           ; BSR set to: 0
 14919  007AE6  0100               	movlb	0	; () banked
 14920  007AE8  2B80               	incf	SendRF@i& (0+255),f,b
 14921  007AEA  D000               	goto	l13628
 14922  007AEC                     l13628:
 14923                           
 14924                           ; BSR set to: 0
 14925  007AEC  0100               	movlb	0	; () banked
 14926  007AEE  517C               	movf	SendRF@size& (0+255),w,b
 14927  007AF0  0100               	movlb	0	; () banked
 14928  007AF2  5D80               	subwf	SendRF@i& (0+255),w,b
 14929  007AF4  A0D8               	btfss	status,0,c
 14930  007AF6  D7D9               	goto	l13624
 14931                           
 14932                           ; BSR set to: 0
 14933                           ;RF.c: 107: }
 14934                           ;RF.c: 108: RFsendCode[i] = 99;
 14935                           
 14936                           ; BSR set to: 0
 14937  007AF8  0100               	movlb	0	; () banked
 14938  007AFA  5180               	movf	SendRF@i& (0+255),w,b
 14939  007AFC  0D01               	mullw	1
 14940  007AFE  0ED6               	movlw	low _RFsendCode
 14941  007B00  24F3               	addwf	prodl,w,c
 14942  007B02  6ED9               	movwf	fsr2l,c
 14943  007B04  0E01               	movlw	high _RFsendCode
 14944  007B06  20F4               	addwfc	prodh,w,c
 14945  007B08  6EDA               	movwf	fsr2h,c
 14946  007B0A  0E63               	movlw	99
 14947  007B0C  6EDF               	movwf	indf2,c
 14948                           
 14949                           ; BSR set to: 0
 14950                           ;RF.c: 110: (TMR2 = 0);
 14951  007B0E  0E00               	movlw	0
 14952  007B10  6ECC               	movwf	4044,c	;volatile
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;RF.c: 111: if(Config == 1)
 14956  007B12  0100               	movlb	0	; () banked
 14957  007B14  057B               	decf	SendRF@Config& (0+255),w,b
 14958  007B16  A4D8               	btfss	status,2,c
 14959  007B18  D002               	goto	l13638
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;RF.c: 112: {
 14963                           ;RF.c: 113: (PR2 = 250);
 14964  007B1A  0EFA               	movlw	250
 14965  007B1C  D001               	goto	L13
 14966  007B1E                     l13638:
 14967                           
 14968                           ; BSR set to: 0
 14969                           ;RF.c: 115: else
 14970                           ;RF.c: 116: {
 14971                           ;RF.c: 117: (PR2 = 187);
 14972  007B1E  0EBB               	movlw	187
 14973  007B20                     L13:
 14974  007B20  6ECB               	movwf	4043,c	;volatile
 14975  007B22  D000               	goto	l13640
 14976  007B24                     l13640:
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;RF.c: 118: }
 14980                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 14981  007B24  84CA               	bsf	4042,2,c	;volatile
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;RF.c: 120: return 1;
 14985                           ;	Return value of _SendRF is never used
 14986  007B26  0012               	return	
 14987                           
 14988                           ; BSR set to: 0
 14989                           
 14990                           ; BSR set to: 0
 14991                           ;RF.c: 121: }
 14992                           ;RF.c: 122: return 2;
 14993                           ;	Return value of _SendRF is never used
 14994  007B28  0012               	return		;funcret
 14995  007B2A                     __end_of_SendRF:
 14996                           	opt stack 0
 14997                           tblptru	equ	0xFF8
 14998                           tblptrh	equ	0xFF7
 14999                           tblptrl	equ	0xFF6
 15000                           tablat	equ	0xFF5
 15001                           prodh	equ	0xFF4
 15002                           prodl	equ	0xFF3
 15003                           intcon	equ	0xFF2
 15004                           indf0	equ	0xFEF
 15005                           postinc0	equ	0xFEE
 15006                           fsr0h	equ	0xFEA
 15007                           fsr0l	equ	0xFE9
 15008                           wreg	equ	0xFE8
 15009                           indf1	equ	0xFE7
 15010                           postdec1	equ	0xFE5
 15011                           fsr1h	equ	0xFE2
 15012                           fsr1l	equ	0xFE1
 15013                           indf2	equ	0xFDF
 15014                           postinc2	equ	0xFDE
 15015                           fsr2h	equ	0xFDA
 15016                           fsr2l	equ	0xFD9
 15017                           status	equ	0xFD8
 15018                           
 15019 ;; *************** function _LEDTimerON *****************
 15020 ;; Defined at:
 15021 ;;		line 134 in file "Timer.c"
 15022 ;; Parameters:    Size  Location     Type
 15023 ;;		None
 15024 ;; Auto vars:     Size  Location     Type
 15025 ;;		None
 15026 ;; Return value:  Size  Location     Type
 15027 ;;		None               void
 15028 ;; Registers used:
 15029 ;;		wreg, status,2, cstack
 15030 ;; Tracked objects:
 15031 ;;		On entry : 0/0
 15032 ;;		On exit  : 0/0
 15033 ;;		Unchanged: 0/0
 15034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15039 ;;Total ram usage:        0 bytes
 15040 ;; Hardware stack levels used:    1
 15041 ;; Hardware stack levels required when called:    7
 15042 ;; This function calls:
 15043 ;;		_ResetTimer1
 15044 ;; This function is called by:
 15045 ;;		_UseIRCode
 15046 ;;		_WaitForIRsignal
 15047 ;;		_SendRF_wait
 15048 ;; This function uses a non-reentrant model
 15049 ;;
 15050                           
 15051                           	psect	text17
 15052  0092CC                     __ptext17:
 15053                           	opt stack 0
 15054  0092CC                     _LEDTimerON:
 15055                           	opt stack 20
 15056                           
 15057                           ;Timer.c: 136: (T1CONbits.TMR1ON = FALSE);
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;incstack = 0
 15061  0092CC  90CD               	bcf	4045,0,c	;volatile
 15062                           
 15063                           ;Timer.c: 137: ResetTimer1();
 15064  0092CE  ECC6  F049         	call	_ResetTimer1	;wreg free
 15065                           
 15066                           ;Timer.c: 138: Timer1_Postscaler = 0;
 15067  0092D2  0E00               	movlw	0
 15068  0092D4  6E3B               	movwf	_Timer1_Postscaler,c
 15069                           
 15070                           ;Timer.c: 139: ResetTimer1();
 15071  0092D6  ECC6  F049         	call	_ResetTimer1	;wreg free
 15072                           
 15073                           ;Timer.c: 140: (T1CONbits.TMR1ON = TRUE);
 15074  0092DA  80CD               	bsf	4045,0,c	;volatile
 15075  0092DC  0012               	return		;funcret
 15076  0092DE                     __end_of_LEDTimerON:
 15077                           	opt stack 0
 15078                           tblptru	equ	0xFF8
 15079                           tblptrh	equ	0xFF7
 15080                           tblptrl	equ	0xFF6
 15081                           tablat	equ	0xFF5
 15082                           prodh	equ	0xFF4
 15083                           prodl	equ	0xFF3
 15084                           intcon	equ	0xFF2
 15085                           indf0	equ	0xFEF
 15086                           postinc0	equ	0xFEE
 15087                           fsr0h	equ	0xFEA
 15088                           fsr0l	equ	0xFE9
 15089                           wreg	equ	0xFE8
 15090                           indf1	equ	0xFE7
 15091                           postdec1	equ	0xFE5
 15092                           fsr1h	equ	0xFE2
 15093                           fsr1l	equ	0xFE1
 15094                           indf2	equ	0xFDF
 15095                           postinc2	equ	0xFDE
 15096                           fsr2h	equ	0xFDA
 15097                           fsr2l	equ	0xFD9
 15098                           status	equ	0xFD8
 15099                           
 15100 ;; *************** function _ResetTimer1 *****************
 15101 ;; Defined at:
 15102 ;;		line 108 in file "Timer.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;		None
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;		None
 15107 ;; Return value:  Size  Location     Type
 15108 ;;		None               void
 15109 ;; Registers used:
 15110 ;;		wreg, status,2
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15120 ;;Total ram usage:        0 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:    6
 15123 ;; This function calls:
 15124 ;;		Nothing
 15125 ;; This function is called by:
 15126 ;;		_LEDTimerON
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           	psect	text18
 15131  00938C                     __ptext18:
 15132                           	opt stack 0
 15133  00938C                     _ResetTimer1:
 15134                           	opt stack 20
 15135                           
 15136                           ;Timer.c: 114: TMR1H = 0;
 15137                           
 15138                           ;incstack = 0
 15139  00938C  0E00               	movlw	0
 15140  00938E  6ECF               	movwf	4047,c	;volatile
 15141                           
 15142                           ;Timer.c: 115: TMR1L = 2;
 15143  009390  0E02               	movlw	2
 15144  009392  6ECE               	movwf	4046,c	;volatile
 15145  009394  0012               	return		;funcret
 15146  009396                     __end_of_ResetTimer1:
 15147                           	opt stack 0
 15148                           tblptru	equ	0xFF8
 15149                           tblptrh	equ	0xFF7
 15150                           tblptrl	equ	0xFF6
 15151                           tablat	equ	0xFF5
 15152                           prodh	equ	0xFF4
 15153                           prodl	equ	0xFF3
 15154                           intcon	equ	0xFF2
 15155                           indf0	equ	0xFEF
 15156                           postinc0	equ	0xFEE
 15157                           fsr0h	equ	0xFEA
 15158                           fsr0l	equ	0xFE9
 15159                           wreg	equ	0xFE8
 15160                           indf1	equ	0xFE7
 15161                           postdec1	equ	0xFE5
 15162                           fsr1h	equ	0xFE2
 15163                           fsr1l	equ	0xFE1
 15164                           indf2	equ	0xFDF
 15165                           postinc2	equ	0xFDE
 15166                           fsr2h	equ	0xFDA
 15167                           fsr2l	equ	0xFD9
 15168                           status	equ	0xFD8
 15169                           
 15170 ;; *************** function _SendNEC_wait *****************
 15171 ;; Defined at:
 15172 ;;		line 429 in file "IR.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;  code            4   46[BANK0 ] unsigned long 
 15175 ;;  RepeatAmount    1   50[BANK0 ] unsigned char 
 15176 ;; Auto vars:     Size  Location     Type
 15177 ;;  toggle          1   51[BANK0 ] unsigned char 
 15178 ;; Return value:  Size  Location     Type
 15179 ;;		None               void
 15180 ;; Registers used:
 15181 ;;		wreg, status,2, status,0, cstack
 15182 ;; Tracked objects:
 15183 ;;		On entry : 0/0
 15184 ;;		On exit  : 0/0
 15185 ;;		Unchanged: 0/0
 15186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15187 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15191 ;;Total ram usage:        6 bytes
 15192 ;; Hardware stack levels used:    1
 15193 ;; Hardware stack levels required when called:    8
 15194 ;; This function calls:
 15195 ;;		_CheckReceivingIR
 15196 ;;		_ReadIRpin
 15197 ;;		_SendNEC_bytes
 15198 ;;		_delayUS
 15199 ;; This function is called by:
 15200 ;;		_UseBluetooth
 15201 ;; This function uses a non-reentrant model
 15202 ;;
 15203                           
 15204                           	psect	text19
 15205  00849C                     __ptext19:
 15206                           	opt stack 0
 15207  00849C                     _SendNEC_wait:
 15208                           	opt stack 21
 15209                           
 15210                           ;IR.c: 431: unsigned char toggle = 0;
 15211                           
 15212                           ;incstack = 0
 15213  00849C  0E00               	movlw	0
 15214  00849E  0100               	movlb	0	; () banked
 15215  0084A0  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15216                           
 15217                           ; BSR set to: 0
 15218                           
 15219                           ;IR.c: 432: while(CheckReceivingIR());
 15220  0084A2  D000               	goto	l14950
 15221  0084A4                     l14950:
 15222  0084A4  EC6F  F049         	call	_CheckReceivingIR	;wreg free
 15223  0084A8  0900               	iorlw	0
 15224  0084AA  A4D8               	btfss	status,2,c
 15225  0084AC  D7FB               	goto	l14950
 15226                           
 15227                           ;IR.c: 434: (IOCBbits.IOCB4 = 0);
 15228  0084AE  987D               	bcf	3965,4,c	;volatile
 15229                           
 15230                           ;IR.c: 435: INTCONbits.RBIE = 0;
 15231  0084B0  96F2               	bcf	intcon,3,c	;volatile
 15232                           
 15233                           ;IR.c: 436: INTCONbits.PEIE = 0;
 15234  0084B2  9CF2               	bcf	intcon,6,c	;volatile
 15235                           
 15236                           ;IR.c: 438: SendNEC_bytes(code, RepeatAmount);
 15237  0084B4  C08E  F089         	movff	SendNEC_wait@code,SendNEC_bytes@code
 15238  0084B8  C08F  F08A         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 15239  0084BC  C090  F08B         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 15240  0084C0  C091  F08C         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 15241  0084C4  C092  F08D         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 15242  0084C8  EC74  F043         	call	_SendNEC_bytes	;wreg free
 15243                           
 15244                           ;IR.c: 439: while(!Sent)
 15245  0084CC  D01C               	goto	l14972
 15246  0084CE                     l14954:
 15247                           
 15248                           ;IR.c: 440: {
 15249                           ;IR.c: 441: if(IRmod)
 15250  0084CE  0100               	movlb	0	; () banked
 15251  0084D0  51DE               	movf	_IRmod& (0+255),w,b	;volatile
 15252  0084D2  B4D8               	btfsc	status,2,c
 15253  0084D4  D013               	goto	l14968
 15254                           
 15255                           ; BSR set to: 0
 15256                           ;IR.c: 442: {
 15257                           ;IR.c: 444: if(toggle < 9)
 15258  0084D6  0E09               	movlw	9
 15259  0084D8  0100               	movlb	0	; () banked
 15260  0084DA  6193               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15261  0084DC  D002               	goto	l14960
 15262                           
 15263                           ; BSR set to: 0
 15264                           ;IR.c: 445: {
 15265                           ;IR.c: 446: (LATC |= 0x08);
 15266  0084DE  868B               	bsf	3979,3,c	;volatile
 15267                           
 15268                           ;IR.c: 447: }
 15269  0084E0  D00A               	goto	l14966
 15270  0084E2                     l14960:
 15271                           
 15272                           ; BSR set to: 0
 15273                           ;IR.c: 448: else if(toggle < 17)
 15274  0084E2  0E11               	movlw	17
 15275  0084E4  0100               	movlb	0	; () banked
 15276  0084E6  6193               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15277  0084E8  D002               	goto	l14964
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;IR.c: 449: {
 15281                           ;IR.c: 450: (LATC &= ~0x08);
 15282  0084EA  968B               	bcf	3979,3,c	;volatile
 15283                           
 15284                           ;IR.c: 451: }
 15285  0084EC  D004               	goto	l14966
 15286  0084EE                     l14964:
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;IR.c: 452: else
 15290                           ;IR.c: 453: {
 15291                           ;IR.c: 454: toggle = 0;
 15292  0084EE  0E00               	movlw	0
 15293  0084F0  0100               	movlb	0	; () banked
 15294  0084F2  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15295                           
 15296                           ; BSR set to: 0
 15297  0084F4  D000               	goto	l14966
 15298  0084F6                     l14966:
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;IR.c: 455: }
 15302                           ;IR.c: 456: toggle++;
 15303  0084F6  0100               	movlb	0	; () banked
 15304  0084F8  2B93               	incf	SendNEC_wait@toggle& (0+255),f,b
 15305                           
 15306                           ;IR.c: 457: }
 15307  0084FA  D005               	goto	l14972
 15308  0084FC                     l14968:
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;IR.c: 458: else
 15312                           ;IR.c: 459: {
 15313                           ;IR.c: 460: (LATC &= ~0x08);
 15314  0084FC  968B               	bcf	3979,3,c	;volatile
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;IR.c: 461: toggle = 0;
 15318  0084FE  0E00               	movlw	0
 15319  008500  0100               	movlb	0	; () banked
 15320  008502  6F93               	movwf	SendNEC_wait@toggle& (0+255),b
 15321                           
 15322                           ; BSR set to: 0
 15323  008504  D000               	goto	l14972
 15324  008506                     l14972:
 15325  008506  0100               	movlb	0	; () banked
 15326  008508  51E6               	movf	_Sent& (0+255),w,b	;volatile
 15327  00850A  B4D8               	btfsc	status,2,c
 15328  00850C  D7E0               	goto	l14954
 15329                           
 15330                           ; BSR set to: 0
 15331                           ;IR.c: 462: }
 15332                           ;IR.c: 463: }
 15333                           ;IR.c: 465: if(IRbitPosition)
 15334                           
 15335                           ; BSR set to: 0
 15336  00850E  503E               	movf	_IRbitPosition,w,c	;volatile
 15337  008510  A4D8               	btfss	status,2,c
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;IR.c: 466: {
 15341                           ;IR.c: 468: __nop();
 15342  008512  F000               	nop	
 15343                           
 15344                           ;IR.c: 469: }
 15345                           ;IR.c: 471: INTCONbits.PEIE = 1;
 15346  008514  8CF2               	bsf	intcon,6,c	;volatile
 15347                           
 15348                           ;IR.c: 472: delayUS(8000);
 15349  008516  0E40               	movlw	64
 15350  008518  0100               	movlb	0	; () banked
 15351  00851A  6F79               	movwf	delayUS@US& (0+255),b
 15352  00851C  0E1F               	movlw	31
 15353  00851E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 15354  008520  0E00               	movlw	0
 15355  008522  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 15356  008524  0E00               	movlw	0
 15357  008526  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 15358  008528  EC6B  F046         	call	_delayUS	;wreg free
 15359                           
 15360                           ;IR.c: 473: IRpinOLD = ReadIRpin();
 15361  00852C  ECA3  F049         	call	_ReadIRpin	;wreg free
 15362  008530  6E31               	movwf	_IRpinOLD,c
 15363                           
 15364                           ;IR.c: 474: INTCONbits.RBIF = 0;
 15365  008532  90F2               	bcf	intcon,0,c	;volatile
 15366                           
 15367                           ;IR.c: 475: (IOCBbits.IOCB4 = 1);
 15368  008534  887D               	bsf	3965,4,c	;volatile
 15369                           
 15370                           ;IR.c: 476: INTCONbits.RBIE = 1;
 15371  008536  86F2               	bsf	intcon,3,c	;volatile
 15372  008538  0012               	return		;funcret
 15373  00853A                     __end_of_SendNEC_wait:
 15374                           	opt stack 0
 15375                           tblptru	equ	0xFF8
 15376                           tblptrh	equ	0xFF7
 15377                           tblptrl	equ	0xFF6
 15378                           tablat	equ	0xFF5
 15379                           prodh	equ	0xFF4
 15380                           prodl	equ	0xFF3
 15381                           intcon	equ	0xFF2
 15382                           indf0	equ	0xFEF
 15383                           postinc0	equ	0xFEE
 15384                           fsr0h	equ	0xFEA
 15385                           fsr0l	equ	0xFE9
 15386                           wreg	equ	0xFE8
 15387                           indf1	equ	0xFE7
 15388                           postdec1	equ	0xFE5
 15389                           fsr1h	equ	0xFE2
 15390                           fsr1l	equ	0xFE1
 15391                           indf2	equ	0xFDF
 15392                           postinc2	equ	0xFDE
 15393                           fsr2h	equ	0xFDA
 15394                           fsr2l	equ	0xFD9
 15395                           status	equ	0xFD8
 15396                           
 15397 ;; *************** function _SendNEC_bytes *****************
 15398 ;; Defined at:
 15399 ;;		line 366 in file "IR.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;  code            4   41[BANK0 ] unsigned long 
 15402 ;;  RepeatAmount    1   45[BANK0 ] unsigned char 
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;		None
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1    wreg      unsigned char 
 15407 ;; Registers used:
 15408 ;;		wreg, status,2, status,0, cstack
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/0
 15411 ;;		On exit  : 0/0
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15414 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15417 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15418 ;;Total ram usage:        5 bytes
 15419 ;; Hardware stack levels used:    1
 15420 ;; Hardware stack levels required when called:    7
 15421 ;; This function calls:
 15422 ;;		_Reverse_4Byte
 15423 ;; This function is called by:
 15424 ;;		_SendNEC_wait
 15425 ;; This function uses a non-reentrant model
 15426 ;;
 15427                           
 15428                           	psect	text20
 15429  0086E8                     __ptext20:
 15430                           	opt stack 0
 15431  0086E8                     _SendNEC_bytes:
 15432                           	opt stack 21
 15433                           
 15434                           ;IR.c: 395: if(Sent)
 15435                           
 15436                           ;incstack = 0
 15437  0086E8  0100               	movlb	0	; () banked
 15438  0086EA  51E6               	movf	_Sent& (0+255),w,b	;volatile
 15439  0086EC  B4D8               	btfsc	status,2,c
 15440  0086EE  0012               	return	
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;IR.c: 396: {
 15444                           ;IR.c: 398: if(!code)
 15445  0086F0  0100               	movlb	0	; () banked
 15446  0086F2  5189               	movf	SendNEC_bytes@code& (0+255),w,b
 15447  0086F4  0100               	movlb	0	; () banked
 15448  0086F6  118A               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 15449  0086F8  0100               	movlb	0	; () banked
 15450  0086FA  118B               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 15451  0086FC  0100               	movlb	0	; () banked
 15452  0086FE  118C               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 15453  008700  B4D8               	btfsc	status,2,c
 15454  008702  0012               	return	
 15455  008704  D001               	goto	l13934
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;IR.c: 399: {
 15459                           ;IR.c: 400: return 0;
 15460                           ;	Return value of _SendNEC_bytes is never used
 15461  008706  0012               	return	
 15462  008708                     l13934:
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;IR.c: 401: }
 15466                           ;IR.c: 402: RF_IR = 66;
 15467  008708  0E42               	movlw	66
 15468  00870A  6E40               	movwf	_RF_IR,c
 15469                           
 15470                           ;IR.c: 403: Sent = 0;
 15471  00870C  0E00               	movlw	0
 15472  00870E  0100               	movlb	0	; () banked
 15473  008710  6FE6               	movwf	_Sent& (0+255),b	;volatile
 15474                           
 15475                           ;IR.c: 404: IRsendFlag = 1;
 15476  008712  0E01               	movlw	1
 15477  008714  6E35               	movwf	_IRsendFlag,c
 15478                           
 15479                           ;IR.c: 405: IRcodeBit = 0;
 15480  008716  0E00               	movlw	0
 15481  008718  6E30               	movwf	_IRcodeBit,c
 15482                           
 15483                           ;IR.c: 406: IRcodePlace = 7;
 15484  00871A  0E07               	movlw	7
 15485  00871C  6E3F               	movwf	_IRcodePlace,c
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;IR.c: 407: IRsendCode = Reverse_4Byte(code);
 15489  00871E  C089  F079         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 15490  008722  C08A  F07A         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 15491  008726  C08B  F07B         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 15492  00872A  C08C  F07C         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 15493  00872E  EC1D  F018         	call	_Reverse_4Byte	;wreg free
 15494  008732  C079  F025         	movff	?_Reverse_4Byte,_IRsendCode
 15495  008736  C07A  F026         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 15496  00873A  C07B  F027         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 15497  00873E  C07C  F028         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 15498                           
 15499                           ;IR.c: 408: if(RepeatAmount)
 15500  008742  0100               	movlb	0	; () banked
 15501  008744  518D               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 15502  008746  0100               	movlb	0	; () banked
 15503  008748  B4D8               	btfsc	status,2,c
 15504  00874A  D003               	goto	l13942
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;IR.c: 409: {
 15508                           ;IR.c: 410: IRrepeatflag = 1;
 15509  00874C  0E01               	movlw	1
 15510  00874E  6E34               	movwf	_IRrepeatflag,c
 15511  008750  D000               	goto	l13942
 15512  008752                     l13942:
 15513                           
 15514                           ; BSR set to: 0
 15515                           ;IR.c: 411: }
 15516                           ;IR.c: 412: IRrepeatAmount = RepeatAmount;
 15517  008752  C08D  F033         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 15518                           
 15519                           ;IR.c: 413: (TMR2 = 0);
 15520  008756  0E00               	movlw	0
 15521  008758  6ECC               	movwf	4044,c	;volatile
 15522                           
 15523                           ;IR.c: 414: (PR2 = 150);
 15524  00875A  0E96               	movlw	150
 15525  00875C  6ECB               	movwf	4043,c	;volatile
 15526                           
 15527                           ;IR.c: 415: RF_IR_Postscaler = 4;
 15528  00875E  0E04               	movlw	4
 15529  008760  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 15530                           
 15531                           ;IR.c: 416: (IRmod = 1);
 15532  008762  0E01               	movlw	1
 15533  008764  0100               	movlb	0	; () banked
 15534  008766  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 15535                           
 15536                           ; BSR set to: 0
 15537                           ;IR.c: 417: (T2CONbits.TMR2ON = 1);
 15538  008768  84CA               	bsf	4042,2,c	;volatile
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;IR.c: 418: return 1;
 15542                           ;	Return value of _SendNEC_bytes is never used
 15543  00876A  0012               	return	
 15544                           
 15545                           ; BSR set to: 0
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;IR.c: 419: }
 15549                           ;IR.c: 420: return 2;
 15550                           ;	Return value of _SendNEC_bytes is never used
 15551  00876C  0012               	return		;funcret
 15552  00876E                     __end_of_SendNEC_bytes:
 15553                           	opt stack 0
 15554                           tblptru	equ	0xFF8
 15555                           tblptrh	equ	0xFF7
 15556                           tblptrl	equ	0xFF6
 15557                           tablat	equ	0xFF5
 15558                           prodh	equ	0xFF4
 15559                           prodl	equ	0xFF3
 15560                           intcon	equ	0xFF2
 15561                           indf0	equ	0xFEF
 15562                           postinc0	equ	0xFEE
 15563                           fsr0h	equ	0xFEA
 15564                           fsr0l	equ	0xFE9
 15565                           wreg	equ	0xFE8
 15566                           indf1	equ	0xFE7
 15567                           postdec1	equ	0xFE5
 15568                           fsr1h	equ	0xFE2
 15569                           fsr1l	equ	0xFE1
 15570                           indf2	equ	0xFDF
 15571                           postinc2	equ	0xFDE
 15572                           fsr2h	equ	0xFDA
 15573                           fsr2l	equ	0xFD9
 15574                           status	equ	0xFD8
 15575                           
 15576 ;; *************** function _Reverse_4Byte *****************
 15577 ;; Defined at:
 15578 ;;		line 412 in file "MISC.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;  This            4   25[BANK0 ] unsigned long 
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;  temp            4   37[BANK0 ] unsigned long 
 15583 ;; Return value:  Size  Location     Type
 15584 ;;                  4   25[BANK0 ] unsigned long 
 15585 ;; Registers used:
 15586 ;;		wreg, status,2, status,0
 15587 ;; Tracked objects:
 15588 ;;		On entry : 0/0
 15589 ;;		On exit  : 0/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15595 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15596 ;;Total ram usage:       16 bytes
 15597 ;; Hardware stack levels used:    1
 15598 ;; Hardware stack levels required when called:    6
 15599 ;; This function calls:
 15600 ;;		Nothing
 15601 ;; This function is called by:
 15602 ;;		_SendNEC_bytes
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           	psect	text21
 15607  00303A                     __ptext21:
 15608                           	opt stack 0
 15609  00303A                     _Reverse_4Byte:
 15610                           	opt stack 21
 15611                           
 15612                           ;MISC.c: 414: unsigned long temp=0;
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;incstack = 0
 15616  00303A  0E00               	movlw	0
 15617  00303C  0100               	movlb	0	; () banked
 15618  00303E  6F85               	movwf	Reverse_4Byte@temp& (0+255),b
 15619  003040  0E00               	movlw	0
 15620  003042  6F86               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 15621  003044  0E00               	movlw	0
 15622  003046  6F87               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 15623  003048  0E00               	movlw	0
 15624  00304A  6F88               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;MISC.c: 416: temp += (This & 0x00000001) << 31;
 15628  00304C  0E01               	movlw	1
 15629  00304E  0100               	movlb	0	; () banked
 15630  003050  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15631  003052  0100               	movlb	0	; () banked
 15632  003054  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15633  003056  0E00               	movlw	0
 15634  003058  0100               	movlb	0	; () banked
 15635  00305A  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15636  00305C  0100               	movlb	0	; () banked
 15637  00305E  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15638  003060  0E00               	movlw	0
 15639  003062  0100               	movlb	0	; () banked
 15640  003064  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15641  003066  0100               	movlb	0	; () banked
 15642  003068  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15643  00306A  0E00               	movlw	0
 15644  00306C  0100               	movlb	0	; () banked
 15645  00306E  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15646  003070  0100               	movlb	0	; () banked
 15647  003072  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15648  003074  0E1F               	movlw	31
 15649  003076                     u15635:
 15650  003076  90D8               	bcf	status,0,c
 15651  003078  0100               	movlb	0	; () banked
 15652  00307A  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15653  00307C  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15654  00307E  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15655  003080  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15656  003082  2EE8               	decfsz	wreg,f,c
 15657  003084  D7F8               	goto	u15635
 15658  003086  0100               	movlb	0	; () banked
 15659  003088  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15660  00308A  0100               	movlb	0	; () banked
 15661  00308C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15662  00308E  0100               	movlb	0	; () banked
 15663  003090  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15664  003092  0100               	movlb	0	; () banked
 15665  003094  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15666  003096  0100               	movlb	0	; () banked
 15667  003098  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15668  00309A  0100               	movlb	0	; () banked
 15669  00309C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15670  00309E  0100               	movlb	0	; () banked
 15671  0030A0  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15672  0030A2  0100               	movlb	0	; () banked
 15673  0030A4  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;MISC.c: 417: temp += (This & 0x00000002) << 29;
 15677  0030A6  0E02               	movlw	2
 15678  0030A8  0100               	movlb	0	; () banked
 15679  0030AA  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15680  0030AC  0100               	movlb	0	; () banked
 15681  0030AE  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15682  0030B0  0E00               	movlw	0
 15683  0030B2  0100               	movlb	0	; () banked
 15684  0030B4  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15685  0030B6  0100               	movlb	0	; () banked
 15686  0030B8  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15687  0030BA  0E00               	movlw	0
 15688  0030BC  0100               	movlb	0	; () banked
 15689  0030BE  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15690  0030C0  0100               	movlb	0	; () banked
 15691  0030C2  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15692  0030C4  0E00               	movlw	0
 15693  0030C6  0100               	movlb	0	; () banked
 15694  0030C8  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15695  0030CA  0100               	movlb	0	; () banked
 15696  0030CC  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15697  0030CE  0E1D               	movlw	29
 15698  0030D0                     u15645:
 15699  0030D0  90D8               	bcf	status,0,c
 15700  0030D2  0100               	movlb	0	; () banked
 15701  0030D4  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15702  0030D6  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15703  0030D8  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15704  0030DA  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15705  0030DC  2EE8               	decfsz	wreg,f,c
 15706  0030DE  D7F8               	goto	u15645
 15707  0030E0  0100               	movlb	0	; () banked
 15708  0030E2  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15709  0030E4  0100               	movlb	0	; () banked
 15710  0030E6  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15711  0030E8  0100               	movlb	0	; () banked
 15712  0030EA  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15713  0030EC  0100               	movlb	0	; () banked
 15714  0030EE  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15715  0030F0  0100               	movlb	0	; () banked
 15716  0030F2  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15717  0030F4  0100               	movlb	0	; () banked
 15718  0030F6  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15719  0030F8  0100               	movlb	0	; () banked
 15720  0030FA  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15721  0030FC  0100               	movlb	0	; () banked
 15722  0030FE  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15723                           
 15724                           ; BSR set to: 0
 15725                           ;MISC.c: 418: temp += (This & 0x00000004) << 27;
 15726  003100  0E04               	movlw	4
 15727  003102  0100               	movlb	0	; () banked
 15728  003104  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15729  003106  0100               	movlb	0	; () banked
 15730  003108  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15731  00310A  0E00               	movlw	0
 15732  00310C  0100               	movlb	0	; () banked
 15733  00310E  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15734  003110  0100               	movlb	0	; () banked
 15735  003112  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15736  003114  0E00               	movlw	0
 15737  003116  0100               	movlb	0	; () banked
 15738  003118  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15739  00311A  0100               	movlb	0	; () banked
 15740  00311C  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15741  00311E  0E00               	movlw	0
 15742  003120  0100               	movlb	0	; () banked
 15743  003122  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15744  003124  0100               	movlb	0	; () banked
 15745  003126  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15746  003128  0E1B               	movlw	27
 15747  00312A                     u15655:
 15748  00312A  90D8               	bcf	status,0,c
 15749  00312C  0100               	movlb	0	; () banked
 15750  00312E  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15751  003130  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15752  003132  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15753  003134  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15754  003136  2EE8               	decfsz	wreg,f,c
 15755  003138  D7F8               	goto	u15655
 15756  00313A  0100               	movlb	0	; () banked
 15757  00313C  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15758  00313E  0100               	movlb	0	; () banked
 15759  003140  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15760  003142  0100               	movlb	0	; () banked
 15761  003144  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15762  003146  0100               	movlb	0	; () banked
 15763  003148  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15764  00314A  0100               	movlb	0	; () banked
 15765  00314C  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15766  00314E  0100               	movlb	0	; () banked
 15767  003150  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15768  003152  0100               	movlb	0	; () banked
 15769  003154  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15770  003156  0100               	movlb	0	; () banked
 15771  003158  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15772                           
 15773                           ; BSR set to: 0
 15774                           ;MISC.c: 419: temp += (This & 0x00000008) << 25;
 15775  00315A  0E08               	movlw	8
 15776  00315C  0100               	movlb	0	; () banked
 15777  00315E  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15778  003160  0100               	movlb	0	; () banked
 15779  003162  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15780  003164  0E00               	movlw	0
 15781  003166  0100               	movlb	0	; () banked
 15782  003168  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15783  00316A  0100               	movlb	0	; () banked
 15784  00316C  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15785  00316E  0E00               	movlw	0
 15786  003170  0100               	movlb	0	; () banked
 15787  003172  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15788  003174  0100               	movlb	0	; () banked
 15789  003176  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15790  003178  0E00               	movlw	0
 15791  00317A  0100               	movlb	0	; () banked
 15792  00317C  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15793  00317E  0100               	movlb	0	; () banked
 15794  003180  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15795  003182  0E19               	movlw	25
 15796  003184                     u15665:
 15797  003184  90D8               	bcf	status,0,c
 15798  003186  0100               	movlb	0	; () banked
 15799  003188  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15800  00318A  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15801  00318C  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15802  00318E  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15803  003190  2EE8               	decfsz	wreg,f,c
 15804  003192  D7F8               	goto	u15665
 15805  003194  0100               	movlb	0	; () banked
 15806  003196  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15807  003198  0100               	movlb	0	; () banked
 15808  00319A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15809  00319C  0100               	movlb	0	; () banked
 15810  00319E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15811  0031A0  0100               	movlb	0	; () banked
 15812  0031A2  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15813  0031A4  0100               	movlb	0	; () banked
 15814  0031A6  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15815  0031A8  0100               	movlb	0	; () banked
 15816  0031AA  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15817  0031AC  0100               	movlb	0	; () banked
 15818  0031AE  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15819  0031B0  0100               	movlb	0	; () banked
 15820  0031B2  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;MISC.c: 420: temp += (This & 0x00000010) << 23;
 15824  0031B4  0E10               	movlw	16
 15825  0031B6  0100               	movlb	0	; () banked
 15826  0031B8  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15827  0031BA  0100               	movlb	0	; () banked
 15828  0031BC  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15829  0031BE  0E00               	movlw	0
 15830  0031C0  0100               	movlb	0	; () banked
 15831  0031C2  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15832  0031C4  0100               	movlb	0	; () banked
 15833  0031C6  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15834  0031C8  0E00               	movlw	0
 15835  0031CA  0100               	movlb	0	; () banked
 15836  0031CC  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15837  0031CE  0100               	movlb	0	; () banked
 15838  0031D0  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15839  0031D2  0E00               	movlw	0
 15840  0031D4  0100               	movlb	0	; () banked
 15841  0031D6  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15842  0031D8  0100               	movlb	0	; () banked
 15843  0031DA  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15844  0031DC  0E17               	movlw	23
 15845  0031DE                     u15675:
 15846  0031DE  90D8               	bcf	status,0,c
 15847  0031E0  0100               	movlb	0	; () banked
 15848  0031E2  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15849  0031E4  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15850  0031E6  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15851  0031E8  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15852  0031EA  2EE8               	decfsz	wreg,f,c
 15853  0031EC  D7F8               	goto	u15675
 15854  0031EE  0100               	movlb	0	; () banked
 15855  0031F0  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15856  0031F2  0100               	movlb	0	; () banked
 15857  0031F4  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15858  0031F6  0100               	movlb	0	; () banked
 15859  0031F8  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15860  0031FA  0100               	movlb	0	; () banked
 15861  0031FC  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15862  0031FE  0100               	movlb	0	; () banked
 15863  003200  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15864  003202  0100               	movlb	0	; () banked
 15865  003204  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15866  003206  0100               	movlb	0	; () banked
 15867  003208  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15868  00320A  0100               	movlb	0	; () banked
 15869  00320C  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;MISC.c: 421: temp += (This & 0x00000020) << 21;
 15873  00320E  0E20               	movlw	32
 15874  003210  0100               	movlb	0	; () banked
 15875  003212  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15876  003214  0100               	movlb	0	; () banked
 15877  003216  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15878  003218  0E00               	movlw	0
 15879  00321A  0100               	movlb	0	; () banked
 15880  00321C  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15881  00321E  0100               	movlb	0	; () banked
 15882  003220  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15883  003222  0E00               	movlw	0
 15884  003224  0100               	movlb	0	; () banked
 15885  003226  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15886  003228  0100               	movlb	0	; () banked
 15887  00322A  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15888  00322C  0E00               	movlw	0
 15889  00322E  0100               	movlb	0	; () banked
 15890  003230  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15891  003232  0100               	movlb	0	; () banked
 15892  003234  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15893  003236  0E15               	movlw	21
 15894  003238                     u15685:
 15895  003238  90D8               	bcf	status,0,c
 15896  00323A  0100               	movlb	0	; () banked
 15897  00323C  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15898  00323E  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15899  003240  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15900  003242  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15901  003244  2EE8               	decfsz	wreg,f,c
 15902  003246  D7F8               	goto	u15685
 15903  003248  0100               	movlb	0	; () banked
 15904  00324A  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15905  00324C  0100               	movlb	0	; () banked
 15906  00324E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15907  003250  0100               	movlb	0	; () banked
 15908  003252  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15909  003254  0100               	movlb	0	; () banked
 15910  003256  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15911  003258  0100               	movlb	0	; () banked
 15912  00325A  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15913  00325C  0100               	movlb	0	; () banked
 15914  00325E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15915  003260  0100               	movlb	0	; () banked
 15916  003262  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15917  003264  0100               	movlb	0	; () banked
 15918  003266  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;MISC.c: 422: temp += (This & 0x00000040) << 19;
 15922  003268  0E40               	movlw	64
 15923  00326A  0100               	movlb	0	; () banked
 15924  00326C  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15925  00326E  0100               	movlb	0	; () banked
 15926  003270  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15927  003272  0E00               	movlw	0
 15928  003274  0100               	movlb	0	; () banked
 15929  003276  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15930  003278  0100               	movlb	0	; () banked
 15931  00327A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15932  00327C  0E00               	movlw	0
 15933  00327E  0100               	movlb	0	; () banked
 15934  003280  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15935  003282  0100               	movlb	0	; () banked
 15936  003284  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15937  003286  0E00               	movlw	0
 15938  003288  0100               	movlb	0	; () banked
 15939  00328A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15940  00328C  0100               	movlb	0	; () banked
 15941  00328E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15942  003290  0E13               	movlw	19
 15943  003292                     u15695:
 15944  003292  90D8               	bcf	status,0,c
 15945  003294  0100               	movlb	0	; () banked
 15946  003296  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15947  003298  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15948  00329A  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15949  00329C  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15950  00329E  2EE8               	decfsz	wreg,f,c
 15951  0032A0  D7F8               	goto	u15695
 15952  0032A2  0100               	movlb	0	; () banked
 15953  0032A4  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 15954  0032A6  0100               	movlb	0	; () banked
 15955  0032A8  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 15956  0032AA  0100               	movlb	0	; () banked
 15957  0032AC  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 15958  0032AE  0100               	movlb	0	; () banked
 15959  0032B0  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 15960  0032B2  0100               	movlb	0	; () banked
 15961  0032B4  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 15962  0032B6  0100               	movlb	0	; () banked
 15963  0032B8  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 15964  0032BA  0100               	movlb	0	; () banked
 15965  0032BC  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 15966  0032BE  0100               	movlb	0	; () banked
 15967  0032C0  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;MISC.c: 423: temp += (This & 0x00000080) << 17;
 15971  0032C2  0E80               	movlw	128
 15972  0032C4  0100               	movlb	0	; () banked
 15973  0032C6  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 15974  0032C8  0100               	movlb	0	; () banked
 15975  0032CA  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 15976  0032CC  0E00               	movlw	0
 15977  0032CE  0100               	movlb	0	; () banked
 15978  0032D0  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 15979  0032D2  0100               	movlb	0	; () banked
 15980  0032D4  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 15981  0032D6  0E00               	movlw	0
 15982  0032D8  0100               	movlb	0	; () banked
 15983  0032DA  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 15984  0032DC  0100               	movlb	0	; () banked
 15985  0032DE  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 15986  0032E0  0E00               	movlw	0
 15987  0032E2  0100               	movlb	0	; () banked
 15988  0032E4  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 15989  0032E6  0100               	movlb	0	; () banked
 15990  0032E8  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 15991  0032EA  0E11               	movlw	17
 15992  0032EC                     u15705:
 15993  0032EC  90D8               	bcf	status,0,c
 15994  0032EE  0100               	movlb	0	; () banked
 15995  0032F0  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 15996  0032F2  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 15997  0032F4  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 15998  0032F6  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 15999  0032F8  2EE8               	decfsz	wreg,f,c
 16000  0032FA  D7F8               	goto	u15705
 16001  0032FC  0100               	movlb	0	; () banked
 16002  0032FE  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16003  003300  0100               	movlb	0	; () banked
 16004  003302  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16005  003304  0100               	movlb	0	; () banked
 16006  003306  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16007  003308  0100               	movlb	0	; () banked
 16008  00330A  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16009  00330C  0100               	movlb	0	; () banked
 16010  00330E  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16011  003310  0100               	movlb	0	; () banked
 16012  003312  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16013  003314  0100               	movlb	0	; () banked
 16014  003316  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16015  003318  0100               	movlb	0	; () banked
 16016  00331A  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;MISC.c: 424: temp += (This & 0x00000100) << 15;
 16020  00331C  0E00               	movlw	0
 16021  00331E  0100               	movlb	0	; () banked
 16022  003320  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16023  003322  0100               	movlb	0	; () banked
 16024  003324  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16025  003326  0E01               	movlw	1
 16026  003328  0100               	movlb	0	; () banked
 16027  00332A  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16028  00332C  0100               	movlb	0	; () banked
 16029  00332E  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16030  003330  0E00               	movlw	0
 16031  003332  0100               	movlb	0	; () banked
 16032  003334  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16033  003336  0100               	movlb	0	; () banked
 16034  003338  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16035  00333A  0E00               	movlw	0
 16036  00333C  0100               	movlb	0	; () banked
 16037  00333E  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16038  003340  0100               	movlb	0	; () banked
 16039  003342  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16040  003344  0E0F               	movlw	15
 16041  003346                     u15715:
 16042  003346  90D8               	bcf	status,0,c
 16043  003348  0100               	movlb	0	; () banked
 16044  00334A  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16045  00334C  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16046  00334E  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16047  003350  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16048  003352  2EE8               	decfsz	wreg,f,c
 16049  003354  D7F8               	goto	u15715
 16050  003356  0100               	movlb	0	; () banked
 16051  003358  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16052  00335A  0100               	movlb	0	; () banked
 16053  00335C  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16054  00335E  0100               	movlb	0	; () banked
 16055  003360  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16056  003362  0100               	movlb	0	; () banked
 16057  003364  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16058  003366  0100               	movlb	0	; () banked
 16059  003368  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16060  00336A  0100               	movlb	0	; () banked
 16061  00336C  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16062  00336E  0100               	movlb	0	; () banked
 16063  003370  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16064  003372  0100               	movlb	0	; () banked
 16065  003374  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;MISC.c: 425: temp += (This & 0x00000200) << 13;
 16069  003376  0E00               	movlw	0
 16070  003378  0100               	movlb	0	; () banked
 16071  00337A  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16072  00337C  0100               	movlb	0	; () banked
 16073  00337E  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16074  003380  0E02               	movlw	2
 16075  003382  0100               	movlb	0	; () banked
 16076  003384  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16077  003386  0100               	movlb	0	; () banked
 16078  003388  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16079  00338A  0E00               	movlw	0
 16080  00338C  0100               	movlb	0	; () banked
 16081  00338E  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16082  003390  0100               	movlb	0	; () banked
 16083  003392  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16084  003394  0E00               	movlw	0
 16085  003396  0100               	movlb	0	; () banked
 16086  003398  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16087  00339A  0100               	movlb	0	; () banked
 16088  00339C  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16089  00339E  0E0D               	movlw	13
 16090  0033A0                     u15725:
 16091  0033A0  90D8               	bcf	status,0,c
 16092  0033A2  0100               	movlb	0	; () banked
 16093  0033A4  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16094  0033A6  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16095  0033A8  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16096  0033AA  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16097  0033AC  2EE8               	decfsz	wreg,f,c
 16098  0033AE  D7F8               	goto	u15725
 16099  0033B0  0100               	movlb	0	; () banked
 16100  0033B2  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16101  0033B4  0100               	movlb	0	; () banked
 16102  0033B6  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16103  0033B8  0100               	movlb	0	; () banked
 16104  0033BA  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16105  0033BC  0100               	movlb	0	; () banked
 16106  0033BE  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16107  0033C0  0100               	movlb	0	; () banked
 16108  0033C2  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16109  0033C4  0100               	movlb	0	; () banked
 16110  0033C6  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16111  0033C8  0100               	movlb	0	; () banked
 16112  0033CA  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16113  0033CC  0100               	movlb	0	; () banked
 16114  0033CE  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;MISC.c: 426: temp += (This & 0x00000400) << 11;
 16118  0033D0  0E00               	movlw	0
 16119  0033D2  0100               	movlb	0	; () banked
 16120  0033D4  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16121  0033D6  0100               	movlb	0	; () banked
 16122  0033D8  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16123  0033DA  0E04               	movlw	4
 16124  0033DC  0100               	movlb	0	; () banked
 16125  0033DE  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16126  0033E0  0100               	movlb	0	; () banked
 16127  0033E2  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16128  0033E4  0E00               	movlw	0
 16129  0033E6  0100               	movlb	0	; () banked
 16130  0033E8  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16131  0033EA  0100               	movlb	0	; () banked
 16132  0033EC  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16133  0033EE  0E00               	movlw	0
 16134  0033F0  0100               	movlb	0	; () banked
 16135  0033F2  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16136  0033F4  0100               	movlb	0	; () banked
 16137  0033F6  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16138  0033F8  0E0B               	movlw	11
 16139  0033FA                     u15735:
 16140  0033FA  90D8               	bcf	status,0,c
 16141  0033FC  0100               	movlb	0	; () banked
 16142  0033FE  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16143  003400  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16144  003402  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16145  003404  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16146  003406  2EE8               	decfsz	wreg,f,c
 16147  003408  D7F8               	goto	u15735
 16148  00340A  0100               	movlb	0	; () banked
 16149  00340C  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16150  00340E  0100               	movlb	0	; () banked
 16151  003410  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16152  003412  0100               	movlb	0	; () banked
 16153  003414  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16154  003416  0100               	movlb	0	; () banked
 16155  003418  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16156  00341A  0100               	movlb	0	; () banked
 16157  00341C  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16158  00341E  0100               	movlb	0	; () banked
 16159  003420  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16160  003422  0100               	movlb	0	; () banked
 16161  003424  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16162  003426  0100               	movlb	0	; () banked
 16163  003428  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;MISC.c: 427: temp += (This & 0x00000800) << 9;
 16167  00342A  0E00               	movlw	0
 16168  00342C  0100               	movlb	0	; () banked
 16169  00342E  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16170  003430  0100               	movlb	0	; () banked
 16171  003432  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16172  003434  0E08               	movlw	8
 16173  003436  0100               	movlb	0	; () banked
 16174  003438  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16175  00343A  0100               	movlb	0	; () banked
 16176  00343C  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16177  00343E  0E00               	movlw	0
 16178  003440  0100               	movlb	0	; () banked
 16179  003442  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16180  003444  0100               	movlb	0	; () banked
 16181  003446  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16182  003448  0E00               	movlw	0
 16183  00344A  0100               	movlb	0	; () banked
 16184  00344C  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16185  00344E  0100               	movlb	0	; () banked
 16186  003450  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16187  003452  0E09               	movlw	9
 16188  003454                     u15745:
 16189  003454  90D8               	bcf	status,0,c
 16190  003456  0100               	movlb	0	; () banked
 16191  003458  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16192  00345A  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16193  00345C  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16194  00345E  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16195  003460  2EE8               	decfsz	wreg,f,c
 16196  003462  D7F8               	goto	u15745
 16197  003464  0100               	movlb	0	; () banked
 16198  003466  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16199  003468  0100               	movlb	0	; () banked
 16200  00346A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16201  00346C  0100               	movlb	0	; () banked
 16202  00346E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16203  003470  0100               	movlb	0	; () banked
 16204  003472  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16205  003474  0100               	movlb	0	; () banked
 16206  003476  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16207  003478  0100               	movlb	0	; () banked
 16208  00347A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16209  00347C  0100               	movlb	0	; () banked
 16210  00347E  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16211  003480  0100               	movlb	0	; () banked
 16212  003482  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;MISC.c: 428: temp += (This & 0x00001000) << 7;
 16216  003484  0E00               	movlw	0
 16217  003486  0100               	movlb	0	; () banked
 16218  003488  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16219  00348A  0100               	movlb	0	; () banked
 16220  00348C  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16221  00348E  0E10               	movlw	16
 16222  003490  0100               	movlb	0	; () banked
 16223  003492  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16224  003494  0100               	movlb	0	; () banked
 16225  003496  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16226  003498  0E00               	movlw	0
 16227  00349A  0100               	movlb	0	; () banked
 16228  00349C  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16229  00349E  0100               	movlb	0	; () banked
 16230  0034A0  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16231  0034A2  0E00               	movlw	0
 16232  0034A4  0100               	movlb	0	; () banked
 16233  0034A6  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16234  0034A8  0100               	movlb	0	; () banked
 16235  0034AA  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16236  0034AC  0E07               	movlw	7
 16237  0034AE                     u15755:
 16238  0034AE  90D8               	bcf	status,0,c
 16239  0034B0  0100               	movlb	0	; () banked
 16240  0034B2  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16241  0034B4  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16242  0034B6  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16243  0034B8  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16244  0034BA  2EE8               	decfsz	wreg,f,c
 16245  0034BC  D7F8               	goto	u15755
 16246  0034BE  0100               	movlb	0	; () banked
 16247  0034C0  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16248  0034C2  0100               	movlb	0	; () banked
 16249  0034C4  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16250  0034C6  0100               	movlb	0	; () banked
 16251  0034C8  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16252  0034CA  0100               	movlb	0	; () banked
 16253  0034CC  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16254  0034CE  0100               	movlb	0	; () banked
 16255  0034D0  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16256  0034D2  0100               	movlb	0	; () banked
 16257  0034D4  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16258  0034D6  0100               	movlb	0	; () banked
 16259  0034D8  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16260  0034DA  0100               	movlb	0	; () banked
 16261  0034DC  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;MISC.c: 429: temp += (This & 0x00002000) << 5;
 16265  0034DE  0E00               	movlw	0
 16266  0034E0  0100               	movlb	0	; () banked
 16267  0034E2  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16268  0034E4  0100               	movlb	0	; () banked
 16269  0034E6  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16270  0034E8  0E20               	movlw	32
 16271  0034EA  0100               	movlb	0	; () banked
 16272  0034EC  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16273  0034EE  0100               	movlb	0	; () banked
 16274  0034F0  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16275  0034F2  0E00               	movlw	0
 16276  0034F4  0100               	movlb	0	; () banked
 16277  0034F6  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16278  0034F8  0100               	movlb	0	; () banked
 16279  0034FA  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16280  0034FC  0E00               	movlw	0
 16281  0034FE  0100               	movlb	0	; () banked
 16282  003500  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16283  003502  0100               	movlb	0	; () banked
 16284  003504  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16285  003506  0E05               	movlw	5
 16286  003508                     u15765:
 16287  003508  90D8               	bcf	status,0,c
 16288  00350A  0100               	movlb	0	; () banked
 16289  00350C  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16290  00350E  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16291  003510  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16292  003512  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16293  003514  2EE8               	decfsz	wreg,f,c
 16294  003516  D7F8               	goto	u15765
 16295  003518  0100               	movlb	0	; () banked
 16296  00351A  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16297  00351C  0100               	movlb	0	; () banked
 16298  00351E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16299  003520  0100               	movlb	0	; () banked
 16300  003522  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16301  003524  0100               	movlb	0	; () banked
 16302  003526  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16303  003528  0100               	movlb	0	; () banked
 16304  00352A  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16305  00352C  0100               	movlb	0	; () banked
 16306  00352E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16307  003530  0100               	movlb	0	; () banked
 16308  003532  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16309  003534  0100               	movlb	0	; () banked
 16310  003536  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;MISC.c: 430: temp += (This & 0x00004000) << 3;
 16314  003538  0E00               	movlw	0
 16315  00353A  0100               	movlb	0	; () banked
 16316  00353C  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16317  00353E  0100               	movlb	0	; () banked
 16318  003540  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16319  003542  0E40               	movlw	64
 16320  003544  0100               	movlb	0	; () banked
 16321  003546  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16322  003548  0100               	movlb	0	; () banked
 16323  00354A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16324  00354C  0E00               	movlw	0
 16325  00354E  0100               	movlb	0	; () banked
 16326  003550  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16327  003552  0100               	movlb	0	; () banked
 16328  003554  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16329  003556  0E00               	movlw	0
 16330  003558  0100               	movlb	0	; () banked
 16331  00355A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16332  00355C  0100               	movlb	0	; () banked
 16333  00355E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16334  003560  0E03               	movlw	3
 16335  003562                     u15775:
 16336  003562  90D8               	bcf	status,0,c
 16337  003564  0100               	movlb	0	; () banked
 16338  003566  377D               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16339  003568  377E               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16340  00356A  377F               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16341  00356C  3780               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16342  00356E  2EE8               	decfsz	wreg,f,c
 16343  003570  D7F8               	goto	u15775
 16344  003572  0100               	movlb	0	; () banked
 16345  003574  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 16346  003576  0100               	movlb	0	; () banked
 16347  003578  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16348  00357A  0100               	movlb	0	; () banked
 16349  00357C  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16350  00357E  0100               	movlb	0	; () banked
 16351  003580  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16352  003582  0100               	movlb	0	; () banked
 16353  003584  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16354  003586  0100               	movlb	0	; () banked
 16355  003588  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16356  00358A  0100               	movlb	0	; () banked
 16357  00358C  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16358  00358E  0100               	movlb	0	; () banked
 16359  003590  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16360                           
 16361                           ; BSR set to: 0
 16362                           ;MISC.c: 431: temp += (This & 0x00008000) << 1;
 16363  003592  0E00               	movlw	0
 16364  003594  0100               	movlb	0	; () banked
 16365  003596  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 16366  003598  0100               	movlb	0	; () banked
 16367  00359A  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 16368  00359C  0E80               	movlw	128
 16369  00359E  0100               	movlb	0	; () banked
 16370  0035A0  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16371  0035A2  0100               	movlb	0	; () banked
 16372  0035A4  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16373  0035A6  0E00               	movlw	0
 16374  0035A8  0100               	movlb	0	; () banked
 16375  0035AA  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16376  0035AC  0100               	movlb	0	; () banked
 16377  0035AE  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16378  0035B0  0E00               	movlw	0
 16379  0035B2  0100               	movlb	0	; () banked
 16380  0035B4  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16381  0035B6  0100               	movlb	0	; () banked
 16382  0035B8  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16383  0035BA  90D8               	bcf	status,0,c
 16384  0035BC  0100               	movlb	0	; () banked
 16385  0035BE  357D               	rlcf	??_Reverse_4Byte& (0+255),w,b
 16386  0035C0  0100               	movlb	0	; () banked
 16387  0035C2  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16388  0035C4  0100               	movlb	0	; () banked
 16389  0035C6  357E               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 16390  0035C8  0100               	movlb	0	; () banked
 16391  0035CA  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16392  0035CC  0100               	movlb	0	; () banked
 16393  0035CE  357F               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 16394  0035D0  0100               	movlb	0	; () banked
 16395  0035D2  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16396  0035D4  0100               	movlb	0	; () banked
 16397  0035D6  3580               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 16398  0035D8  0100               	movlb	0	; () banked
 16399  0035DA  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16400  0035DC  0100               	movlb	0	; () banked
 16401  0035DE  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16402  0035E0  0100               	movlb	0	; () banked
 16403  0035E2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16404  0035E4  0100               	movlb	0	; () banked
 16405  0035E6  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16406  0035E8  0100               	movlb	0	; () banked
 16407  0035EA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16408  0035EC  0100               	movlb	0	; () banked
 16409  0035EE  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16410  0035F0  0100               	movlb	0	; () banked
 16411  0035F2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16412  0035F4  0100               	movlb	0	; () banked
 16413  0035F6  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16414  0035F8  0100               	movlb	0	; () banked
 16415  0035FA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;MISC.c: 432: temp += (This & 0x00010000) >> 1;
 16419  0035FC  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16420  003600  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16421  003604  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16422  003608  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16423  00360C  0100               	movlb	0	; () banked
 16424  00360E  90D8               	bcf	status,0,c
 16425  003610  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16426  003612  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16427  003614  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16428  003616  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16429  003618  0E00               	movlw	0
 16430  00361A  0100               	movlb	0	; () banked
 16431  00361C  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16432  00361E  0100               	movlb	0	; () banked
 16433  003620  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16434  003622  0E80               	movlw	128
 16435  003624  0100               	movlb	0	; () banked
 16436  003626  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16437  003628  0100               	movlb	0	; () banked
 16438  00362A  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16439  00362C  0E00               	movlw	0
 16440  00362E  0100               	movlb	0	; () banked
 16441  003630  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16442  003632  0100               	movlb	0	; () banked
 16443  003634  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16444  003636  0E00               	movlw	0
 16445  003638  0100               	movlb	0	; () banked
 16446  00363A  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16447  00363C  0100               	movlb	0	; () banked
 16448  00363E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16449  003640  0100               	movlb	0	; () banked
 16450  003642  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16451  003644  0100               	movlb	0	; () banked
 16452  003646  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16453  003648  0100               	movlb	0	; () banked
 16454  00364A  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16455  00364C  0100               	movlb	0	; () banked
 16456  00364E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16457  003650  0100               	movlb	0	; () banked
 16458  003652  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16459  003654  0100               	movlb	0	; () banked
 16460  003656  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16461  003658  0100               	movlb	0	; () banked
 16462  00365A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16463  00365C  0100               	movlb	0	; () banked
 16464  00365E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;MISC.c: 433: temp += (This & 0x00020000) >> 3;
 16468  003660  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16469  003664  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16470  003668  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16471  00366C  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16472  003670  0E04               	movlw	4
 16473  003672  D006               	goto	u15780
 16474  003674                     u15785:
 16475  003674  0100               	movlb	0	; () banked
 16476  003676  90D8               	bcf	status,0,c
 16477  003678  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16478  00367A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16479  00367C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16480  00367E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16481  003680                     u15780:
 16482  003680  2EE8               	decfsz	wreg,f,c
 16483  003682  D7F8               	goto	u15785
 16484  003684  0E00               	movlw	0
 16485  003686  0100               	movlb	0	; () banked
 16486  003688  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16487  00368A  0100               	movlb	0	; () banked
 16488  00368C  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16489  00368E  0E40               	movlw	64
 16490  003690  0100               	movlb	0	; () banked
 16491  003692  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16492  003694  0100               	movlb	0	; () banked
 16493  003696  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16494  003698  0E00               	movlw	0
 16495  00369A  0100               	movlb	0	; () banked
 16496  00369C  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16497  00369E  0100               	movlb	0	; () banked
 16498  0036A0  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16499  0036A2  0E00               	movlw	0
 16500  0036A4  0100               	movlb	0	; () banked
 16501  0036A6  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16502  0036A8  0100               	movlb	0	; () banked
 16503  0036AA  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16504  0036AC  0100               	movlb	0	; () banked
 16505  0036AE  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16506  0036B0  0100               	movlb	0	; () banked
 16507  0036B2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16508  0036B4  0100               	movlb	0	; () banked
 16509  0036B6  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16510  0036B8  0100               	movlb	0	; () banked
 16511  0036BA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16512  0036BC  0100               	movlb	0	; () banked
 16513  0036BE  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16514  0036C0  0100               	movlb	0	; () banked
 16515  0036C2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16516  0036C4  0100               	movlb	0	; () banked
 16517  0036C6  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16518  0036C8  0100               	movlb	0	; () banked
 16519  0036CA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16520                           
 16521                           ; BSR set to: 0
 16522                           ;MISC.c: 434: temp += (This & 0x00040000) >> 5;
 16523  0036CC  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16524  0036D0  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16525  0036D4  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16526  0036D8  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16527  0036DC  0E06               	movlw	6
 16528  0036DE  D006               	goto	u15790
 16529  0036E0                     u15795:
 16530  0036E0  0100               	movlb	0	; () banked
 16531  0036E2  90D8               	bcf	status,0,c
 16532  0036E4  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16533  0036E6  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16534  0036E8  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16535  0036EA  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16536  0036EC                     u15790:
 16537  0036EC  2EE8               	decfsz	wreg,f,c
 16538  0036EE  D7F8               	goto	u15795
 16539  0036F0  0E00               	movlw	0
 16540  0036F2  0100               	movlb	0	; () banked
 16541  0036F4  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16542  0036F6  0100               	movlb	0	; () banked
 16543  0036F8  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16544  0036FA  0E20               	movlw	32
 16545  0036FC  0100               	movlb	0	; () banked
 16546  0036FE  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16547  003700  0100               	movlb	0	; () banked
 16548  003702  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16549  003704  0E00               	movlw	0
 16550  003706  0100               	movlb	0	; () banked
 16551  003708  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16552  00370A  0100               	movlb	0	; () banked
 16553  00370C  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16554  00370E  0E00               	movlw	0
 16555  003710  0100               	movlb	0	; () banked
 16556  003712  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16557  003714  0100               	movlb	0	; () banked
 16558  003716  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16559  003718  0100               	movlb	0	; () banked
 16560  00371A  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16561  00371C  0100               	movlb	0	; () banked
 16562  00371E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16563  003720  0100               	movlb	0	; () banked
 16564  003722  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16565  003724  0100               	movlb	0	; () banked
 16566  003726  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16567  003728  0100               	movlb	0	; () banked
 16568  00372A  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16569  00372C  0100               	movlb	0	; () banked
 16570  00372E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16571  003730  0100               	movlb	0	; () banked
 16572  003732  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16573  003734  0100               	movlb	0	; () banked
 16574  003736  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16575                           
 16576                           ; BSR set to: 0
 16577                           ;MISC.c: 435: temp += (This & 0x00080000) >> 7;
 16578  003738  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16579  00373C  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16580  003740  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16581  003744  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16582  003748  0E08               	movlw	8
 16583  00374A  D006               	goto	u15800
 16584  00374C                     u15805:
 16585  00374C  0100               	movlb	0	; () banked
 16586  00374E  90D8               	bcf	status,0,c
 16587  003750  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16588  003752  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16589  003754  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16590  003756  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16591  003758                     u15800:
 16592  003758  2EE8               	decfsz	wreg,f,c
 16593  00375A  D7F8               	goto	u15805
 16594  00375C  0E00               	movlw	0
 16595  00375E  0100               	movlb	0	; () banked
 16596  003760  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16597  003762  0100               	movlb	0	; () banked
 16598  003764  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16599  003766  0E10               	movlw	16
 16600  003768  0100               	movlb	0	; () banked
 16601  00376A  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16602  00376C  0100               	movlb	0	; () banked
 16603  00376E  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16604  003770  0E00               	movlw	0
 16605  003772  0100               	movlb	0	; () banked
 16606  003774  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16607  003776  0100               	movlb	0	; () banked
 16608  003778  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16609  00377A  0E00               	movlw	0
 16610  00377C  0100               	movlb	0	; () banked
 16611  00377E  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16612  003780  0100               	movlb	0	; () banked
 16613  003782  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16614  003784  0100               	movlb	0	; () banked
 16615  003786  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16616  003788  0100               	movlb	0	; () banked
 16617  00378A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16618  00378C  0100               	movlb	0	; () banked
 16619  00378E  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16620  003790  0100               	movlb	0	; () banked
 16621  003792  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16622  003794  0100               	movlb	0	; () banked
 16623  003796  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16624  003798  0100               	movlb	0	; () banked
 16625  00379A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16626  00379C  0100               	movlb	0	; () banked
 16627  00379E  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16628  0037A0  0100               	movlb	0	; () banked
 16629  0037A2  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;MISC.c: 436: temp += (This & 0x00100000) >> 9;
 16633  0037A4  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16634  0037A8  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16635  0037AC  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16636  0037B0  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16637  0037B4  0E0A               	movlw	10
 16638  0037B6  D006               	goto	u15810
 16639  0037B8                     u15815:
 16640  0037B8  0100               	movlb	0	; () banked
 16641  0037BA  90D8               	bcf	status,0,c
 16642  0037BC  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16643  0037BE  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16644  0037C0  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16645  0037C2  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16646  0037C4                     u15810:
 16647  0037C4  2EE8               	decfsz	wreg,f,c
 16648  0037C6  D7F8               	goto	u15815
 16649  0037C8  0E00               	movlw	0
 16650  0037CA  0100               	movlb	0	; () banked
 16651  0037CC  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16652  0037CE  0100               	movlb	0	; () banked
 16653  0037D0  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16654  0037D2  0E08               	movlw	8
 16655  0037D4  0100               	movlb	0	; () banked
 16656  0037D6  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16657  0037D8  0100               	movlb	0	; () banked
 16658  0037DA  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16659  0037DC  0E00               	movlw	0
 16660  0037DE  0100               	movlb	0	; () banked
 16661  0037E0  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16662  0037E2  0100               	movlb	0	; () banked
 16663  0037E4  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16664  0037E6  0E00               	movlw	0
 16665  0037E8  0100               	movlb	0	; () banked
 16666  0037EA  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16667  0037EC  0100               	movlb	0	; () banked
 16668  0037EE  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16669  0037F0  0100               	movlb	0	; () banked
 16670  0037F2  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16671  0037F4  0100               	movlb	0	; () banked
 16672  0037F6  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16673  0037F8  0100               	movlb	0	; () banked
 16674  0037FA  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16675  0037FC  0100               	movlb	0	; () banked
 16676  0037FE  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16677  003800  0100               	movlb	0	; () banked
 16678  003802  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16679  003804  0100               	movlb	0	; () banked
 16680  003806  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16681  003808  0100               	movlb	0	; () banked
 16682  00380A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16683  00380C  0100               	movlb	0	; () banked
 16684  00380E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16685                           
 16686                           ; BSR set to: 0
 16687                           ;MISC.c: 437: temp += (This & 0x00200000) >> 11;
 16688  003810  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16689  003814  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16690  003818  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16691  00381C  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16692  003820  0E0C               	movlw	12
 16693  003822  D006               	goto	u15820
 16694  003824                     u15825:
 16695  003824  0100               	movlb	0	; () banked
 16696  003826  90D8               	bcf	status,0,c
 16697  003828  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16698  00382A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16699  00382C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16700  00382E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16701  003830                     u15820:
 16702  003830  2EE8               	decfsz	wreg,f,c
 16703  003832  D7F8               	goto	u15825
 16704  003834  0E00               	movlw	0
 16705  003836  0100               	movlb	0	; () banked
 16706  003838  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16707  00383A  0100               	movlb	0	; () banked
 16708  00383C  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16709  00383E  0E04               	movlw	4
 16710  003840  0100               	movlb	0	; () banked
 16711  003842  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16712  003844  0100               	movlb	0	; () banked
 16713  003846  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16714  003848  0E00               	movlw	0
 16715  00384A  0100               	movlb	0	; () banked
 16716  00384C  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16717  00384E  0100               	movlb	0	; () banked
 16718  003850  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16719  003852  0E00               	movlw	0
 16720  003854  0100               	movlb	0	; () banked
 16721  003856  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16722  003858  0100               	movlb	0	; () banked
 16723  00385A  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16724  00385C  0100               	movlb	0	; () banked
 16725  00385E  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16726  003860  0100               	movlb	0	; () banked
 16727  003862  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16728  003864  0100               	movlb	0	; () banked
 16729  003866  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16730  003868  0100               	movlb	0	; () banked
 16731  00386A  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16732  00386C  0100               	movlb	0	; () banked
 16733  00386E  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16734  003870  0100               	movlb	0	; () banked
 16735  003872  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16736  003874  0100               	movlb	0	; () banked
 16737  003876  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16738  003878  0100               	movlb	0	; () banked
 16739  00387A  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;MISC.c: 438: temp += (This & 0x00400000) >> 13;
 16743  00387C  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16744  003880  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16745  003884  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16746  003888  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16747  00388C  0E0E               	movlw	14
 16748  00388E  D006               	goto	u15830
 16749  003890                     u15835:
 16750  003890  0100               	movlb	0	; () banked
 16751  003892  90D8               	bcf	status,0,c
 16752  003894  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16753  003896  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16754  003898  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16755  00389A  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16756  00389C                     u15830:
 16757  00389C  2EE8               	decfsz	wreg,f,c
 16758  00389E  D7F8               	goto	u15835
 16759  0038A0  0E00               	movlw	0
 16760  0038A2  0100               	movlb	0	; () banked
 16761  0038A4  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16762  0038A6  0100               	movlb	0	; () banked
 16763  0038A8  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16764  0038AA  0E02               	movlw	2
 16765  0038AC  0100               	movlb	0	; () banked
 16766  0038AE  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16767  0038B0  0100               	movlb	0	; () banked
 16768  0038B2  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16769  0038B4  0E00               	movlw	0
 16770  0038B6  0100               	movlb	0	; () banked
 16771  0038B8  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16772  0038BA  0100               	movlb	0	; () banked
 16773  0038BC  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16774  0038BE  0E00               	movlw	0
 16775  0038C0  0100               	movlb	0	; () banked
 16776  0038C2  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16777  0038C4  0100               	movlb	0	; () banked
 16778  0038C6  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16779  0038C8  0100               	movlb	0	; () banked
 16780  0038CA  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16781  0038CC  0100               	movlb	0	; () banked
 16782  0038CE  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16783  0038D0  0100               	movlb	0	; () banked
 16784  0038D2  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16785  0038D4  0100               	movlb	0	; () banked
 16786  0038D6  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16787  0038D8  0100               	movlb	0	; () banked
 16788  0038DA  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16789  0038DC  0100               	movlb	0	; () banked
 16790  0038DE  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16791  0038E0  0100               	movlb	0	; () banked
 16792  0038E2  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16793  0038E4  0100               	movlb	0	; () banked
 16794  0038E6  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;MISC.c: 439: temp += (This & 0x00800000) >> 15;
 16798  0038E8  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16799  0038EC  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16800  0038F0  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16801  0038F4  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16802  0038F8  0E10               	movlw	16
 16803  0038FA  D006               	goto	u15840
 16804  0038FC                     u15845:
 16805  0038FC  0100               	movlb	0	; () banked
 16806  0038FE  90D8               	bcf	status,0,c
 16807  003900  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16808  003902  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16809  003904  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16810  003906  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16811  003908                     u15840:
 16812  003908  2EE8               	decfsz	wreg,f,c
 16813  00390A  D7F8               	goto	u15845
 16814  00390C  0E00               	movlw	0
 16815  00390E  0100               	movlb	0	; () banked
 16816  003910  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16817  003912  0100               	movlb	0	; () banked
 16818  003914  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16819  003916  0E01               	movlw	1
 16820  003918  0100               	movlb	0	; () banked
 16821  00391A  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16822  00391C  0100               	movlb	0	; () banked
 16823  00391E  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16824  003920  0E00               	movlw	0
 16825  003922  0100               	movlb	0	; () banked
 16826  003924  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16827  003926  0100               	movlb	0	; () banked
 16828  003928  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16829  00392A  0E00               	movlw	0
 16830  00392C  0100               	movlb	0	; () banked
 16831  00392E  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16832  003930  0100               	movlb	0	; () banked
 16833  003932  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16834  003934  0100               	movlb	0	; () banked
 16835  003936  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16836  003938  0100               	movlb	0	; () banked
 16837  00393A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16838  00393C  0100               	movlb	0	; () banked
 16839  00393E  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16840  003940  0100               	movlb	0	; () banked
 16841  003942  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16842  003944  0100               	movlb	0	; () banked
 16843  003946  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16844  003948  0100               	movlb	0	; () banked
 16845  00394A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16846  00394C  0100               	movlb	0	; () banked
 16847  00394E  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16848  003950  0100               	movlb	0	; () banked
 16849  003952  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;MISC.c: 440: temp += (This & 0x01000000) >> 17;
 16853  003954  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16854  003958  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16855  00395C  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16856  003960  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16857  003964  0E12               	movlw	18
 16858  003966  D006               	goto	u15850
 16859  003968                     u15855:
 16860  003968  0100               	movlb	0	; () banked
 16861  00396A  90D8               	bcf	status,0,c
 16862  00396C  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16863  00396E  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16864  003970  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16865  003972  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16866  003974                     u15850:
 16867  003974  2EE8               	decfsz	wreg,f,c
 16868  003976  D7F8               	goto	u15855
 16869  003978  0E80               	movlw	128
 16870  00397A  0100               	movlb	0	; () banked
 16871  00397C  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16872  00397E  0100               	movlb	0	; () banked
 16873  003980  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16874  003982  0E00               	movlw	0
 16875  003984  0100               	movlb	0	; () banked
 16876  003986  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16877  003988  0100               	movlb	0	; () banked
 16878  00398A  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16879  00398C  0E00               	movlw	0
 16880  00398E  0100               	movlb	0	; () banked
 16881  003990  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16882  003992  0100               	movlb	0	; () banked
 16883  003994  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16884  003996  0E00               	movlw	0
 16885  003998  0100               	movlb	0	; () banked
 16886  00399A  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16887  00399C  0100               	movlb	0	; () banked
 16888  00399E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16889  0039A0  0100               	movlb	0	; () banked
 16890  0039A2  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16891  0039A4  0100               	movlb	0	; () banked
 16892  0039A6  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16893  0039A8  0100               	movlb	0	; () banked
 16894  0039AA  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16895  0039AC  0100               	movlb	0	; () banked
 16896  0039AE  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16897  0039B0  0100               	movlb	0	; () banked
 16898  0039B2  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16899  0039B4  0100               	movlb	0	; () banked
 16900  0039B6  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16901  0039B8  0100               	movlb	0	; () banked
 16902  0039BA  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16903  0039BC  0100               	movlb	0	; () banked
 16904  0039BE  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;MISC.c: 441: temp += (This & 0x02000000) >> 19;
 16908  0039C0  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16909  0039C4  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16910  0039C8  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16911  0039CC  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16912  0039D0  0E14               	movlw	20
 16913  0039D2  D006               	goto	u15860
 16914  0039D4                     u15865:
 16915  0039D4  0100               	movlb	0	; () banked
 16916  0039D6  90D8               	bcf	status,0,c
 16917  0039D8  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16918  0039DA  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16919  0039DC  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16920  0039DE  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16921  0039E0                     u15860:
 16922  0039E0  2EE8               	decfsz	wreg,f,c
 16923  0039E2  D7F8               	goto	u15865
 16924  0039E4  0E40               	movlw	64
 16925  0039E6  0100               	movlb	0	; () banked
 16926  0039E8  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16927  0039EA  0100               	movlb	0	; () banked
 16928  0039EC  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16929  0039EE  0E00               	movlw	0
 16930  0039F0  0100               	movlb	0	; () banked
 16931  0039F2  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16932  0039F4  0100               	movlb	0	; () banked
 16933  0039F6  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16934  0039F8  0E00               	movlw	0
 16935  0039FA  0100               	movlb	0	; () banked
 16936  0039FC  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16937  0039FE  0100               	movlb	0	; () banked
 16938  003A00  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16939  003A02  0E00               	movlw	0
 16940  003A04  0100               	movlb	0	; () banked
 16941  003A06  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16942  003A08  0100               	movlb	0	; () banked
 16943  003A0A  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16944  003A0C  0100               	movlb	0	; () banked
 16945  003A0E  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16946  003A10  0100               	movlb	0	; () banked
 16947  003A12  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16948  003A14  0100               	movlb	0	; () banked
 16949  003A16  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16950  003A18  0100               	movlb	0	; () banked
 16951  003A1A  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16952  003A1C  0100               	movlb	0	; () banked
 16953  003A1E  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16954  003A20  0100               	movlb	0	; () banked
 16955  003A22  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16956  003A24  0100               	movlb	0	; () banked
 16957  003A26  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16958  003A28  0100               	movlb	0	; () banked
 16959  003A2A  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;MISC.c: 442: temp += (This & 0x04000000) >> 21;
 16963  003A2C  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16964  003A30  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16965  003A34  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16966  003A38  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16967  003A3C  0E16               	movlw	22
 16968  003A3E  D006               	goto	u15870
 16969  003A40                     u15875:
 16970  003A40  0100               	movlb	0	; () banked
 16971  003A42  90D8               	bcf	status,0,c
 16972  003A44  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16973  003A46  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16974  003A48  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16975  003A4A  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16976  003A4C                     u15870:
 16977  003A4C  2EE8               	decfsz	wreg,f,c
 16978  003A4E  D7F8               	goto	u15875
 16979  003A50  0E20               	movlw	32
 16980  003A52  0100               	movlb	0	; () banked
 16981  003A54  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 16982  003A56  0100               	movlb	0	; () banked
 16983  003A58  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16984  003A5A  0E00               	movlw	0
 16985  003A5C  0100               	movlb	0	; () banked
 16986  003A5E  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16987  003A60  0100               	movlb	0	; () banked
 16988  003A62  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16989  003A64  0E00               	movlw	0
 16990  003A66  0100               	movlb	0	; () banked
 16991  003A68  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16992  003A6A  0100               	movlb	0	; () banked
 16993  003A6C  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16994  003A6E  0E00               	movlw	0
 16995  003A70  0100               	movlb	0	; () banked
 16996  003A72  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16997  003A74  0100               	movlb	0	; () banked
 16998  003A76  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16999  003A78  0100               	movlb	0	; () banked
 17000  003A7A  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17001  003A7C  0100               	movlb	0	; () banked
 17002  003A7E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17003  003A80  0100               	movlb	0	; () banked
 17004  003A82  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17005  003A84  0100               	movlb	0	; () banked
 17006  003A86  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17007  003A88  0100               	movlb	0	; () banked
 17008  003A8A  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17009  003A8C  0100               	movlb	0	; () banked
 17010  003A8E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17011  003A90  0100               	movlb	0	; () banked
 17012  003A92  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17013  003A94  0100               	movlb	0	; () banked
 17014  003A96  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17015                           
 17016                           ; BSR set to: 0
 17017                           ;MISC.c: 443: temp += (This & 0x08000000) >> 23;
 17018  003A98  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17019  003A9C  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17020  003AA0  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17021  003AA4  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17022  003AA8  0E18               	movlw	24
 17023  003AAA  D006               	goto	u15880
 17024  003AAC                     u15885:
 17025  003AAC  0100               	movlb	0	; () banked
 17026  003AAE  90D8               	bcf	status,0,c
 17027  003AB0  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17028  003AB2  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17029  003AB4  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17030  003AB6  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17031  003AB8                     u15880:
 17032  003AB8  2EE8               	decfsz	wreg,f,c
 17033  003ABA  D7F8               	goto	u15885
 17034  003ABC  0E10               	movlw	16
 17035  003ABE  0100               	movlb	0	; () banked
 17036  003AC0  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17037  003AC2  0100               	movlb	0	; () banked
 17038  003AC4  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17039  003AC6  0E00               	movlw	0
 17040  003AC8  0100               	movlb	0	; () banked
 17041  003ACA  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17042  003ACC  0100               	movlb	0	; () banked
 17043  003ACE  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17044  003AD0  0E00               	movlw	0
 17045  003AD2  0100               	movlb	0	; () banked
 17046  003AD4  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17047  003AD6  0100               	movlb	0	; () banked
 17048  003AD8  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17049  003ADA  0E00               	movlw	0
 17050  003ADC  0100               	movlb	0	; () banked
 17051  003ADE  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17052  003AE0  0100               	movlb	0	; () banked
 17053  003AE2  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17054  003AE4  0100               	movlb	0	; () banked
 17055  003AE6  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17056  003AE8  0100               	movlb	0	; () banked
 17057  003AEA  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17058  003AEC  0100               	movlb	0	; () banked
 17059  003AEE  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17060  003AF0  0100               	movlb	0	; () banked
 17061  003AF2  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17062  003AF4  0100               	movlb	0	; () banked
 17063  003AF6  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17064  003AF8  0100               	movlb	0	; () banked
 17065  003AFA  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17066  003AFC  0100               	movlb	0	; () banked
 17067  003AFE  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17068  003B00  0100               	movlb	0	; () banked
 17069  003B02  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;MISC.c: 444: temp += (This & 0x10000000) >> 25;
 17073  003B04  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17074  003B08  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17075  003B0C  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17076  003B10  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17077  003B14  0E1A               	movlw	26
 17078  003B16  D006               	goto	u15890
 17079  003B18                     u15895:
 17080  003B18  0100               	movlb	0	; () banked
 17081  003B1A  90D8               	bcf	status,0,c
 17082  003B1C  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17083  003B1E  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17084  003B20  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17085  003B22  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17086  003B24                     u15890:
 17087  003B24  2EE8               	decfsz	wreg,f,c
 17088  003B26  D7F8               	goto	u15895
 17089  003B28  0E08               	movlw	8
 17090  003B2A  0100               	movlb	0	; () banked
 17091  003B2C  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17092  003B2E  0100               	movlb	0	; () banked
 17093  003B30  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17094  003B32  0E00               	movlw	0
 17095  003B34  0100               	movlb	0	; () banked
 17096  003B36  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17097  003B38  0100               	movlb	0	; () banked
 17098  003B3A  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17099  003B3C  0E00               	movlw	0
 17100  003B3E  0100               	movlb	0	; () banked
 17101  003B40  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17102  003B42  0100               	movlb	0	; () banked
 17103  003B44  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17104  003B46  0E00               	movlw	0
 17105  003B48  0100               	movlb	0	; () banked
 17106  003B4A  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17107  003B4C  0100               	movlb	0	; () banked
 17108  003B4E  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17109  003B50  0100               	movlb	0	; () banked
 17110  003B52  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17111  003B54  0100               	movlb	0	; () banked
 17112  003B56  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17113  003B58  0100               	movlb	0	; () banked
 17114  003B5A  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17115  003B5C  0100               	movlb	0	; () banked
 17116  003B5E  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17117  003B60  0100               	movlb	0	; () banked
 17118  003B62  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17119  003B64  0100               	movlb	0	; () banked
 17120  003B66  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17121  003B68  0100               	movlb	0	; () banked
 17122  003B6A  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17123  003B6C  0100               	movlb	0	; () banked
 17124  003B6E  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;MISC.c: 445: temp += (This & 0x20000000) >> 27;
 17128  003B70  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17129  003B74  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17130  003B78  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17131  003B7C  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17132  003B80  0E1C               	movlw	28
 17133  003B82  D006               	goto	u15900
 17134  003B84                     u15905:
 17135  003B84  0100               	movlb	0	; () banked
 17136  003B86  90D8               	bcf	status,0,c
 17137  003B88  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17138  003B8A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17139  003B8C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17140  003B8E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17141  003B90                     u15900:
 17142  003B90  2EE8               	decfsz	wreg,f,c
 17143  003B92  D7F8               	goto	u15905
 17144  003B94  0E04               	movlw	4
 17145  003B96  0100               	movlb	0	; () banked
 17146  003B98  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17147  003B9A  0100               	movlb	0	; () banked
 17148  003B9C  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17149  003B9E  0E00               	movlw	0
 17150  003BA0  0100               	movlb	0	; () banked
 17151  003BA2  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17152  003BA4  0100               	movlb	0	; () banked
 17153  003BA6  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17154  003BA8  0E00               	movlw	0
 17155  003BAA  0100               	movlb	0	; () banked
 17156  003BAC  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17157  003BAE  0100               	movlb	0	; () banked
 17158  003BB0  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17159  003BB2  0E00               	movlw	0
 17160  003BB4  0100               	movlb	0	; () banked
 17161  003BB6  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17162  003BB8  0100               	movlb	0	; () banked
 17163  003BBA  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17164  003BBC  0100               	movlb	0	; () banked
 17165  003BBE  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17166  003BC0  0100               	movlb	0	; () banked
 17167  003BC2  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17168  003BC4  0100               	movlb	0	; () banked
 17169  003BC6  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17170  003BC8  0100               	movlb	0	; () banked
 17171  003BCA  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17172  003BCC  0100               	movlb	0	; () banked
 17173  003BCE  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17174  003BD0  0100               	movlb	0	; () banked
 17175  003BD2  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17176  003BD4  0100               	movlb	0	; () banked
 17177  003BD6  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17178  003BD8  0100               	movlb	0	; () banked
 17179  003BDA  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;MISC.c: 446: temp += (This & 0x40000000) >> 29;
 17183  003BDC  C079  F07D         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17184  003BE0  C07A  F07E         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17185  003BE4  C07B  F07F         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17186  003BE8  C07C  F080         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17187  003BEC  0E1E               	movlw	30
 17188  003BEE  D006               	goto	u15910
 17189  003BF0                     u15915:
 17190  003BF0  0100               	movlb	0	; () banked
 17191  003BF2  90D8               	bcf	status,0,c
 17192  003BF4  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17193  003BF6  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17194  003BF8  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17195  003BFA  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17196  003BFC                     u15910:
 17197  003BFC  2EE8               	decfsz	wreg,f,c
 17198  003BFE  D7F8               	goto	u15915
 17199  003C00  0E02               	movlw	2
 17200  003C02  0100               	movlb	0	; () banked
 17201  003C04  157D               	andwf	??_Reverse_4Byte& (0+255),w,b
 17202  003C06  0100               	movlb	0	; () banked
 17203  003C08  6F81               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17204  003C0A  0E00               	movlw	0
 17205  003C0C  0100               	movlb	0	; () banked
 17206  003C0E  157E               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17207  003C10  0100               	movlb	0	; () banked
 17208  003C12  6F82               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17209  003C14  0E00               	movlw	0
 17210  003C16  0100               	movlb	0	; () banked
 17211  003C18  157F               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17212  003C1A  0100               	movlb	0	; () banked
 17213  003C1C  6F83               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17214  003C1E  0E00               	movlw	0
 17215  003C20  0100               	movlb	0	; () banked
 17216  003C22  1580               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17217  003C24  0100               	movlb	0	; () banked
 17218  003C26  6F84               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17219  003C28  0100               	movlb	0	; () banked
 17220  003C2A  5181               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17221  003C2C  0100               	movlb	0	; () banked
 17222  003C2E  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17223  003C30  0100               	movlb	0	; () banked
 17224  003C32  5182               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17225  003C34  0100               	movlb	0	; () banked
 17226  003C36  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17227  003C38  0100               	movlb	0	; () banked
 17228  003C3A  5183               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17229  003C3C  0100               	movlb	0	; () banked
 17230  003C3E  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17231  003C40  0100               	movlb	0	; () banked
 17232  003C42  5184               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17233  003C44  0100               	movlb	0	; () banked
 17234  003C46  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;MISC.c: 447: temp += (This & 0x80000000) >> 31;
 17238  003C48  0E00               	movlw	0
 17239  003C4A  0100               	movlb	0	; () banked
 17240  003C4C  1579               	andwf	Reverse_4Byte@This& (0+255),w,b
 17241  003C4E  0100               	movlb	0	; () banked
 17242  003C50  6F7D               	movwf	??_Reverse_4Byte& (0+255),b
 17243  003C52  0E00               	movlw	0
 17244  003C54  0100               	movlb	0	; () banked
 17245  003C56  157A               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17246  003C58  0100               	movlb	0	; () banked
 17247  003C5A  6F7E               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17248  003C5C  0E00               	movlw	0
 17249  003C5E  0100               	movlb	0	; () banked
 17250  003C60  157B               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17251  003C62  0100               	movlb	0	; () banked
 17252  003C64  6F7F               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17253  003C66  0E80               	movlw	128
 17254  003C68  0100               	movlb	0	; () banked
 17255  003C6A  157C               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17256  003C6C  0100               	movlb	0	; () banked
 17257  003C6E  6F80               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17258  003C70  0E20               	movlw	32
 17259  003C72  D006               	goto	u15920
 17260  003C74                     u15925:
 17261  003C74  0100               	movlb	0	; () banked
 17262  003C76  90D8               	bcf	status,0,c
 17263  003C78  3380               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17264  003C7A  337F               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17265  003C7C  337E               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17266  003C7E  337D               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17267  003C80                     u15920:
 17268  003C80  2EE8               	decfsz	wreg,f,c
 17269  003C82  D7F8               	goto	u15925
 17270  003C84  0100               	movlb	0	; () banked
 17271  003C86  517D               	movf	??_Reverse_4Byte& (0+255),w,b
 17272  003C88  0100               	movlb	0	; () banked
 17273  003C8A  2785               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17274  003C8C  0100               	movlb	0	; () banked
 17275  003C8E  517E               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17276  003C90  0100               	movlb	0	; () banked
 17277  003C92  2386               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17278  003C94  0100               	movlb	0	; () banked
 17279  003C96  517F               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17280  003C98  0100               	movlb	0	; () banked
 17281  003C9A  2387               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17282  003C9C  0100               	movlb	0	; () banked
 17283  003C9E  5180               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17284  003CA0  0100               	movlb	0	; () banked
 17285  003CA2  2388               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;MISC.c: 449: return temp;
 17289  003CA4  C085  F079         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 17290  003CA8  C086  F07A         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 17291  003CAC  C087  F07B         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 17292  003CB0  C088  F07C         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 17293  003CB4  0012               	return	
 17294                           
 17295                           ; BSR set to: 0
 17296                           
 17297                           ; BSR set to: 0
 17298  003CB6  0012               	return		;funcret
 17299  003CB8                     __end_of_Reverse_4Byte:
 17300                           	opt stack 0
 17301                           tblptru	equ	0xFF8
 17302                           tblptrh	equ	0xFF7
 17303                           tblptrl	equ	0xFF6
 17304                           tablat	equ	0xFF5
 17305                           prodh	equ	0xFF4
 17306                           prodl	equ	0xFF3
 17307                           intcon	equ	0xFF2
 17308                           indf0	equ	0xFEF
 17309                           postinc0	equ	0xFEE
 17310                           fsr0h	equ	0xFEA
 17311                           fsr0l	equ	0xFE9
 17312                           wreg	equ	0xFE8
 17313                           indf1	equ	0xFE7
 17314                           postdec1	equ	0xFE5
 17315                           fsr1h	equ	0xFE2
 17316                           fsr1l	equ	0xFE1
 17317                           indf2	equ	0xFDF
 17318                           postinc2	equ	0xFDE
 17319                           fsr2h	equ	0xFDA
 17320                           fsr2l	equ	0xFD9
 17321                           status	equ	0xFD8
 17322                           
 17323 ;; *************** function _CheckReceivingIR *****************
 17324 ;; Defined at:
 17325 ;;		line 518 in file "IR.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;		None
 17328 ;; Auto vars:     Size  Location     Type
 17329 ;;		None
 17330 ;; Return value:  Size  Location     Type
 17331 ;;                  1    wreg      unsigned char 
 17332 ;; Registers used:
 17333 ;;		wreg, status,2, status,0
 17334 ;; Tracked objects:
 17335 ;;		On entry : 0/0
 17336 ;;		On exit  : 0/0
 17337 ;;		Unchanged: 0/0
 17338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17343 ;;Total ram usage:        0 bytes
 17344 ;; Hardware stack levels used:    1
 17345 ;; Hardware stack levels required when called:    6
 17346 ;; This function calls:
 17347 ;;		Nothing
 17348 ;; This function is called by:
 17349 ;;		_SendNEC_wait
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           	psect	text22
 17354  0092DE                     __ptext22:
 17355                           	opt stack 0
 17356  0092DE                     _CheckReceivingIR:
 17357                           	opt stack 22
 17358                           
 17359                           ;IR.c: 520: if(ReceivingIR == 13)
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;incstack = 0
 17363  0092DE  0E0D               	movlw	13
 17364  0092E0  1842               	xorwf	_ReceivingIR,w,c	;volatile
 17365  0092E2  A4D8               	btfss	status,2,c
 17366  0092E4  D002               	goto	l13954
 17367                           
 17368                           ;IR.c: 521: {
 17369                           ;IR.c: 522: return 0;
 17370  0092E6  0E00               	movlw	0
 17371  0092E8  0012               	return	
 17372  0092EA                     l13954:
 17373                           
 17374                           ;IR.c: 523: }
 17375                           ;IR.c: 524: return 1;
 17376  0092EA  0E01               	movlw	1
 17377  0092EC  0012               	return	
 17378  0092EE  0012               	return		;funcret
 17379  0092F0                     __end_of_CheckReceivingIR:
 17380                           	opt stack 0
 17381                           tblptru	equ	0xFF8
 17382                           tblptrh	equ	0xFF7
 17383                           tblptrl	equ	0xFF6
 17384                           tablat	equ	0xFF5
 17385                           prodh	equ	0xFF4
 17386                           prodl	equ	0xFF3
 17387                           intcon	equ	0xFF2
 17388                           indf0	equ	0xFEF
 17389                           postinc0	equ	0xFEE
 17390                           fsr0h	equ	0xFEA
 17391                           fsr0l	equ	0xFE9
 17392                           wreg	equ	0xFE8
 17393                           indf1	equ	0xFE7
 17394                           postdec1	equ	0xFE5
 17395                           fsr1h	equ	0xFE2
 17396                           fsr1l	equ	0xFE1
 17397                           indf2	equ	0xFDF
 17398                           postinc2	equ	0xFDE
 17399                           fsr2h	equ	0xFDA
 17400                           fsr2l	equ	0xFD9
 17401                           status	equ	0xFD8
 17402                           
 17403 ;; *************** function _ReadVoltage *****************
 17404 ;; Defined at:
 17405 ;;		line 60 in file "ADC.c"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;		None
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  voltage         3   69[BANK0 ] unsigned char 
 17410 ;;  temp            2   72[BANK0 ] unsigned int 
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  3   66[BANK0 ] unsigned int 
 17413 ;; Registers used:
 17414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 0/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17420 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17424 ;;Total ram usage:        8 bytes
 17425 ;; Hardware stack levels used:    1
 17426 ;; Hardware stack levels required when called:    8
 17427 ;; This function calls:
 17428 ;;		_InternalADC_Read
 17429 ;;		_VoltageDividerOFF
 17430 ;;		_VoltageDividerON
 17431 ;;		___ftdiv
 17432 ;;		___ftmul
 17433 ;;		___lwtoft
 17434 ;;		_delayUS
 17435 ;; This function is called by:
 17436 ;;		_main
 17437 ;;		_UseBluetooth
 17438 ;; This function uses a non-reentrant model
 17439 ;;
 17440                           
 17441                           	psect	text23
 17442  007F32                     __ptext23:
 17443                           	opt stack 0
 17444  007F32                     _ReadVoltage:
 17445                           	opt stack 21
 17446                           
 17447                           ;ADC.c: 62: unsigned int temp;
 17448                           ;ADC.c: 63: double voltage;
 17449                           ;ADC.c: 65: VoltageDividerON();
 17450                           
 17451                           ;incstack = 0
 17452  007F32  ECDF  F049         	call	_VoltageDividerON	;wreg free
 17453                           
 17454                           ;ADC.c: 66: delayUS(5);
 17455  007F36  0E05               	movlw	5
 17456  007F38  0100               	movlb	0	; () banked
 17457  007F3A  6F79               	movwf	delayUS@US& (0+255),b
 17458  007F3C  0E00               	movlw	0
 17459  007F3E  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 17460  007F40  0E00               	movlw	0
 17461  007F42  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 17462  007F44  0E00               	movlw	0
 17463  007F46  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 17464  007F48  EC6B  F046         	call	_delayUS	;wreg free
 17465                           
 17466                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 17467  007F4C  0EA8               	movlw	low ReadVoltage@temp
 17468  007F4E  0100               	movlb	0	; () banked
 17469  007F50  6F82               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 17470  007F52  0E00               	movlw	high ReadVoltage@temp
 17471  007F54  0100               	movlb	0	; () banked
 17472  007F56  6F83               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 17473  007F58  0E00               	movlw	0
 17474  007F5A  ECAC  F041         	call	_InternalADC_Read
 17475  007F5E  0900               	iorlw	0
 17476  007F60  B4D8               	btfsc	status,2,c
 17477  007F62  D02F               	goto	l14178
 17478                           
 17479                           ;ADC.c: 68: {
 17480                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 17481  007F64  0E00               	movlw	0
 17482  007F66  0100               	movlb	0	; () banked
 17483  007F68  6F87               	movwf	___ftdiv@f2& (0+255),b
 17484  007F6A  0E80               	movlw	128
 17485  007F6C  0100               	movlb	0	; () banked
 17486  007F6E  6F88               	movwf	(___ftdiv@f2+1)& (0+255),b
 17487  007F70  0E44               	movlw	68
 17488  007F72  0100               	movlb	0	; () banked
 17489  007F74  6F89               	movwf	(___ftdiv@f2+2)& (0+255),b
 17490  007F76  C0A8  F081         	movff	ReadVoltage@temp,___lwtoft@c
 17491  007F7A  C0A9  F082         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 17492  007F7E  EC8C  F048         	call	___lwtoft	;wreg free
 17493  007F82  C081  F084         	movff	?___lwtoft,___ftdiv@f1
 17494  007F86  C082  F085         	movff	?___lwtoft+1,___ftdiv@f1+1
 17495  007F8A  C083  F086         	movff	?___lwtoft+2,___ftdiv@f1+2
 17496  007F8E  EC47  F037         	call	___ftdiv	;wreg free
 17497  007F92  C084  F093         	movff	?___ftdiv,___ftmul@f1
 17498  007F96  C085  F094         	movff	?___ftdiv+1,___ftmul@f1+1
 17499  007F9A  C086  F095         	movff	?___ftdiv+2,___ftmul@f1+2
 17500  007F9E  0E33               	movlw	51
 17501  007FA0  0100               	movlb	0	; () banked
 17502  007FA2  6F96               	movwf	___ftmul@f2& (0+255),b
 17503  007FA4  0E11               	movlw	17
 17504  007FA6  0100               	movlb	0	; () banked
 17505  007FA8  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 17506  007FAA  0E42               	movlw	66
 17507  007FAC  0100               	movlb	0	; () banked
 17508  007FAE  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 17509  007FB0  EC91  F036         	call	___ftmul	;wreg free
 17510  007FB4  C093  F0A5         	movff	?___ftmul,ReadVoltage@voltage
 17511  007FB8  C094  F0A6         	movff	?___ftmul+1,ReadVoltage@voltage+1
 17512  007FBC  C095  F0A7         	movff	?___ftmul+2,ReadVoltage@voltage+2
 17513                           
 17514                           ;ADC.c: 70: }
 17515  007FC0  D00A               	goto	l14180
 17516  007FC2                     l14178:
 17517                           
 17518                           ;ADC.c: 71: else
 17519                           ;ADC.c: 72: {
 17520                           ;ADC.c: 73: voltage = 0.0;
 17521  007FC2  0E00               	movlw	0
 17522  007FC4  0100               	movlb	0	; () banked
 17523  007FC6  6FA5               	movwf	ReadVoltage@voltage& (0+255),b
 17524  007FC8  0E00               	movlw	0
 17525  007FCA  0100               	movlb	0	; () banked
 17526  007FCC  6FA6               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 17527  007FCE  0E00               	movlw	0
 17528  007FD0  0100               	movlb	0	; () banked
 17529  007FD2  6FA7               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 17530  007FD4  D000               	goto	l14180
 17531  007FD6                     l14180:
 17532                           
 17533                           ;ADC.c: 74: }
 17534                           ;ADC.c: 75: VoltageDividerOFF();
 17535  007FD6  ECE7  F049         	call	_VoltageDividerOFF	;wreg free
 17536                           
 17537                           ;ADC.c: 76: return voltage;
 17538  007FDA  C0A5  F0A2         	movff	ReadVoltage@voltage,?_ReadVoltage
 17539  007FDE  C0A6  F0A3         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 17540  007FE2  C0A7  F0A4         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 17541  007FE6  0012               	return	
 17542  007FE8  0012               	return		;funcret
 17543  007FEA                     __end_of_ReadVoltage:
 17544                           	opt stack 0
 17545                           tblptru	equ	0xFF8
 17546                           tblptrh	equ	0xFF7
 17547                           tblptrl	equ	0xFF6
 17548                           tablat	equ	0xFF5
 17549                           prodh	equ	0xFF4
 17550                           prodl	equ	0xFF3
 17551                           intcon	equ	0xFF2
 17552                           indf0	equ	0xFEF
 17553                           postinc0	equ	0xFEE
 17554                           fsr0h	equ	0xFEA
 17555                           fsr0l	equ	0xFE9
 17556                           wreg	equ	0xFE8
 17557                           indf1	equ	0xFE7
 17558                           postdec1	equ	0xFE5
 17559                           fsr1h	equ	0xFE2
 17560                           fsr1l	equ	0xFE1
 17561                           indf2	equ	0xFDF
 17562                           postinc2	equ	0xFDE
 17563                           fsr2h	equ	0xFDA
 17564                           fsr2l	equ	0xFD9
 17565                           status	equ	0xFD8
 17566                           
 17567 ;; *************** function ___lwtoft *****************
 17568 ;; Defined at:
 17569 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 17570 ;; Parameters:    Size  Location     Type
 17571 ;;  c               2   33[BANK0 ] unsigned int 
 17572 ;; Auto vars:     Size  Location     Type
 17573 ;;		None
 17574 ;; Return value:  Size  Location     Type
 17575 ;;                  3   33[BANK0 ] float 
 17576 ;; Registers used:
 17577 ;;		wreg, status,2, status,0, cstack
 17578 ;; Tracked objects:
 17579 ;;		On entry : 0/0
 17580 ;;		On exit  : 0/0
 17581 ;;		Unchanged: 0/0
 17582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17583 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17586 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17587 ;;Total ram usage:        3 bytes
 17588 ;; Hardware stack levels used:    1
 17589 ;; Hardware stack levels required when called:    7
 17590 ;; This function calls:
 17591 ;;		___ftpack
 17592 ;; This function is called by:
 17593 ;;		_ReadVoltage
 17594 ;; This function uses a non-reentrant model
 17595 ;;
 17596                           
 17597                           	psect	text24
 17598  009118                     __ptext24:
 17599                           	opt stack 0
 17600  009118                     ___lwtoft:
 17601                           	opt stack 21
 17602                           
 17603                           ;incstack = 0
 17604  009118  C081  F079         	movff	___lwtoft@c,___ftpack@arg
 17605  00911C  C082  F07A         	movff	___lwtoft@c+1,___ftpack@arg+1
 17606  009120  0100               	movlb	0	; () banked
 17607  009122  6B7B               	clrf	(___ftpack@arg+2)& (0+255),b
 17608  009124  0E8E               	movlw	142
 17609  009126  0100               	movlb	0	; () banked
 17610  009128  6F7C               	movwf	___ftpack@exp& (0+255),b
 17611  00912A  0E00               	movlw	0
 17612  00912C  0100               	movlb	0	; () banked
 17613  00912E  6F7D               	movwf	___ftpack@sign& (0+255),b
 17614  009130  EC67  F03A         	call	___ftpack	;wreg free
 17615  009134  C079  F081         	movff	?___ftpack,?___lwtoft
 17616  009138  C07A  F082         	movff	?___ftpack+1,?___lwtoft+1
 17617  00913C  C07B  F083         	movff	?___ftpack+2,?___lwtoft+2
 17618  009140  0012               	return	
 17619  009142  0012               	return		;funcret
 17620  009144                     __end_of___lwtoft:
 17621                           	opt stack 0
 17622                           tblptru	equ	0xFF8
 17623                           tblptrh	equ	0xFF7
 17624                           tblptrl	equ	0xFF6
 17625                           tablat	equ	0xFF5
 17626                           prodh	equ	0xFF4
 17627                           prodl	equ	0xFF3
 17628                           intcon	equ	0xFF2
 17629                           indf0	equ	0xFEF
 17630                           postinc0	equ	0xFEE
 17631                           fsr0h	equ	0xFEA
 17632                           fsr0l	equ	0xFE9
 17633                           wreg	equ	0xFE8
 17634                           indf1	equ	0xFE7
 17635                           postdec1	equ	0xFE5
 17636                           fsr1h	equ	0xFE2
 17637                           fsr1l	equ	0xFE1
 17638                           indf2	equ	0xFDF
 17639                           postinc2	equ	0xFDE
 17640                           fsr2h	equ	0xFDA
 17641                           fsr2l	equ	0xFD9
 17642                           status	equ	0xFD8
 17643                           
 17644 ;; *************** function ___ftdiv *****************
 17645 ;; Defined at:
 17646 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 17647 ;; Parameters:    Size  Location     Type
 17648 ;;  f1              3   36[BANK0 ] float 
 17649 ;;  f2              3   39[BANK0 ] float 
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;  f3              3   46[BANK0 ] float 
 17652 ;;  sign            1   50[BANK0 ] unsigned char 
 17653 ;;  exp             1   49[BANK0 ] unsigned char 
 17654 ;;  cntr            1   45[BANK0 ] unsigned char 
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  3   36[BANK0 ] float 
 17657 ;; Registers used:
 17658 ;;		wreg, status,2, status,0, cstack
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/0
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17664 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17665 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17666 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17667 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17668 ;;Total ram usage:       15 bytes
 17669 ;; Hardware stack levels used:    1
 17670 ;; Hardware stack levels required when called:    7
 17671 ;; This function calls:
 17672 ;;		___ftpack
 17673 ;; This function is called by:
 17674 ;;		_ReadVoltage
 17675 ;; This function uses a non-reentrant model
 17676 ;;
 17677                           
 17678                           	psect	text25
 17679  006E8E                     __ptext25:
 17680                           	opt stack 0
 17681  006E8E                     ___ftdiv:
 17682                           	opt stack 21
 17683                           
 17684                           ;incstack = 0
 17685  006E8E  C086  F08A         	movff	___ftdiv@f1+2,??___ftdiv
 17686  006E92  0100               	movlb	0	; () banked
 17687  006E94  6B8B               	clrf	(??___ftdiv+1)& (0+255),b
 17688  006E96  6B8C               	clrf	(??___ftdiv+2)& (0+255),b
 17689  006E98  0100               	movlb	0	; () banked
 17690  006E9A  3585               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17691  006E9C  0100               	movlb	0	; () banked
 17692  006E9E  378A               	rlcf	??___ftdiv& (0+255),f,b
 17693  006EA0  E301               	bnc	u17261
 17694  006EA2  818B               	bsf	(??___ftdiv+1)& (0+255),0,b
 17695  006EA4                     u17261:
 17696  006EA4  0100               	movlb	0	; () banked
 17697  006EA6  518A               	movf	??___ftdiv& (0+255),w,b
 17698  006EA8  0100               	movlb	0	; () banked
 17699  006EAA  6F91               	movwf	___ftdiv@exp& (0+255),b
 17700  006EAC  0100               	movlb	0	; () banked
 17701  006EAE  5191               	movf	___ftdiv@exp& (0+255),w,b
 17702  006EB0  A4D8               	btfss	status,2,c
 17703  006EB2  D00A               	goto	l14126
 17704                           
 17705                           ; BSR set to: 0
 17706  006EB4  0E00               	movlw	0
 17707  006EB6  0100               	movlb	0	; () banked
 17708  006EB8  6F84               	movwf	?___ftdiv& (0+255),b
 17709  006EBA  0E00               	movlw	0
 17710  006EBC  0100               	movlb	0	; () banked
 17711  006EBE  6F85               	movwf	(?___ftdiv+1)& (0+255),b
 17712  006EC0  0E00               	movlw	0
 17713  006EC2  0100               	movlb	0	; () banked
 17714  006EC4  6F86               	movwf	(?___ftdiv+2)& (0+255),b
 17715                           
 17716                           ; BSR set to: 0
 17717  006EC6  0012               	return	
 17718  006EC8                     l14126:
 17719                           
 17720                           ; BSR set to: 0
 17721  006EC8  C089  F08A         	movff	___ftdiv@f2+2,??___ftdiv
 17722  006ECC  0100               	movlb	0	; () banked
 17723  006ECE  6B8B               	clrf	(??___ftdiv+1)& (0+255),b
 17724  006ED0  6B8C               	clrf	(??___ftdiv+2)& (0+255),b
 17725  006ED2  0100               	movlb	0	; () banked
 17726  006ED4  3588               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17727  006ED6  0100               	movlb	0	; () banked
 17728  006ED8  378A               	rlcf	??___ftdiv& (0+255),f,b
 17729  006EDA  E301               	bnc	u17281
 17730  006EDC  818B               	bsf	(??___ftdiv+1)& (0+255),0,b
 17731  006EDE                     u17281:
 17732  006EDE  0100               	movlb	0	; () banked
 17733  006EE0  518A               	movf	??___ftdiv& (0+255),w,b
 17734  006EE2  0100               	movlb	0	; () banked
 17735  006EE4  6F92               	movwf	___ftdiv@sign& (0+255),b
 17736  006EE6  0100               	movlb	0	; () banked
 17737  006EE8  5192               	movf	___ftdiv@sign& (0+255),w,b
 17738  006EEA  A4D8               	btfss	status,2,c
 17739  006EEC  D00A               	goto	l14132
 17740                           
 17741                           ; BSR set to: 0
 17742  006EEE  0E00               	movlw	0
 17743  006EF0  0100               	movlb	0	; () banked
 17744  006EF2  6F84               	movwf	?___ftdiv& (0+255),b
 17745  006EF4  0E00               	movlw	0
 17746  006EF6  0100               	movlb	0	; () banked
 17747  006EF8  6F85               	movwf	(?___ftdiv+1)& (0+255),b
 17748  006EFA  0E00               	movlw	0
 17749  006EFC  0100               	movlb	0	; () banked
 17750  006EFE  6F86               	movwf	(?___ftdiv+2)& (0+255),b
 17751                           
 17752                           ; BSR set to: 0
 17753  006F00  0012               	return	
 17754  006F02                     l14132:
 17755                           
 17756                           ; BSR set to: 0
 17757  006F02  0E00               	movlw	0
 17758  006F04  0100               	movlb	0	; () banked
 17759  006F06  6F8E               	movwf	___ftdiv@f3& (0+255),b
 17760  006F08  0E00               	movlw	0
 17761  006F0A  0100               	movlb	0	; () banked
 17762  006F0C  6F8F               	movwf	(___ftdiv@f3+1)& (0+255),b
 17763  006F0E  0E00               	movlw	0
 17764  006F10  0100               	movlb	0	; () banked
 17765  006F12  6F90               	movwf	(___ftdiv@f3+2)& (0+255),b
 17766                           
 17767                           ; BSR set to: 0
 17768  006F14  0100               	movlb	0	; () banked
 17769  006F16  5192               	movf	___ftdiv@sign& (0+255),w,b
 17770  006F18  0F89               	addlw	137
 17771  006F1A  0100               	movlb	0	; () banked
 17772  006F1C  5F91               	subwf	___ftdiv@exp& (0+255),f,b
 17773                           
 17774                           ; BSR set to: 0
 17775  006F1E  C086  F092         	movff	___ftdiv@f1+2,___ftdiv@sign
 17776                           
 17777                           ; BSR set to: 0
 17778  006F22  0100               	movlb	0	; () banked
 17779  006F24  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17780  006F26  0100               	movlb	0	; () banked
 17781  006F28  1B92               	xorwf	___ftdiv@sign& (0+255),f,b
 17782                           
 17783                           ; BSR set to: 0
 17784  006F2A  0E80               	movlw	128
 17785  006F2C  0100               	movlb	0	; () banked
 17786  006F2E  1792               	andwf	___ftdiv@sign& (0+255),f,b
 17787                           
 17788                           ; BSR set to: 0
 17789  006F30  0100               	movlb	0	; () banked
 17790  006F32  8F85               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17791                           
 17792                           ; BSR set to: 0
 17793  006F34  0EFF               	movlw	255
 17794  006F36  0100               	movlb	0	; () banked
 17795  006F38  1784               	andwf	___ftdiv@f1& (0+255),f,b
 17796  006F3A  0EFF               	movlw	255
 17797  006F3C  0100               	movlb	0	; () banked
 17798  006F3E  1785               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 17799  006F40  0E00               	movlw	0
 17800  006F42  0100               	movlb	0	; () banked
 17801  006F44  1786               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 17802                           
 17803                           ; BSR set to: 0
 17804  006F46  0100               	movlb	0	; () banked
 17805  006F48  8F88               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 17806                           
 17807                           ; BSR set to: 0
 17808  006F4A  0EFF               	movlw	255
 17809  006F4C  0100               	movlb	0	; () banked
 17810  006F4E  1787               	andwf	___ftdiv@f2& (0+255),f,b
 17811  006F50  0EFF               	movlw	255
 17812  006F52  0100               	movlb	0	; () banked
 17813  006F54  1788               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 17814  006F56  0E00               	movlw	0
 17815  006F58  0100               	movlb	0	; () banked
 17816  006F5A  1789               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 17817                           
 17818                           ; BSR set to: 0
 17819  006F5C  0E18               	movlw	24
 17820  006F5E  0100               	movlb	0	; () banked
 17821  006F60  6F8D               	movwf	___ftdiv@cntr& (0+255),b
 17822  006F62  D000               	goto	l14152
 17823  006F64                     l14152:
 17824                           
 17825                           ; BSR set to: 0
 17826  006F64  0100               	movlb	0	; () banked
 17827  006F66  90D8               	bcf	status,0,c
 17828  006F68  378E               	rlcf	___ftdiv@f3& (0+255),f,b
 17829  006F6A  378F               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 17830  006F6C  3790               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 17831                           
 17832                           ; BSR set to: 0
 17833  006F6E  0100               	movlb	0	; () banked
 17834  006F70  5187               	movf	___ftdiv@f2& (0+255),w,b
 17835  006F72  0100               	movlb	0	; () banked
 17836  006F74  5D84               	subwf	___ftdiv@f1& (0+255),w,b
 17837  006F76  0100               	movlb	0	; () banked
 17838  006F78  5188               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17839  006F7A  0100               	movlb	0	; () banked
 17840  006F7C  5985               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 17841  006F7E  0100               	movlb	0	; () banked
 17842  006F80  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17843  006F82  0100               	movlb	0	; () banked
 17844  006F84  5986               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 17845  006F86  A0D8               	btfss	status,0,c
 17846  006F88  D00E               	goto	l2708
 17847                           
 17848                           ; BSR set to: 0
 17849  006F8A  0100               	movlb	0	; () banked
 17850  006F8C  5187               	movf	___ftdiv@f2& (0+255),w,b
 17851  006F8E  0100               	movlb	0	; () banked
 17852  006F90  5F84               	subwf	___ftdiv@f1& (0+255),f,b
 17853  006F92  0100               	movlb	0	; () banked
 17854  006F94  5188               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17855  006F96  0100               	movlb	0	; () banked
 17856  006F98  5B85               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 17857  006F9A  0100               	movlb	0	; () banked
 17858  006F9C  5189               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17859  006F9E  0100               	movlb	0	; () banked
 17860  006FA0  5B86               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 17861                           
 17862                           ; BSR set to: 0
 17863  006FA2  0100               	movlb	0	; () banked
 17864  006FA4  818E               	bsf	___ftdiv@f3& (0+255),0,b
 17865  006FA6                     l2708:
 17866                           
 17867                           ; BSR set to: 0
 17868  006FA6  0100               	movlb	0	; () banked
 17869  006FA8  90D8               	bcf	status,0,c
 17870  006FAA  3784               	rlcf	___ftdiv@f1& (0+255),f,b
 17871  006FAC  3785               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 17872  006FAE  3786               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 17873                           
 17874                           ; BSR set to: 0
 17875  006FB0  0100               	movlb	0	; () banked
 17876  006FB2  2F8D               	decfsz	___ftdiv@cntr& (0+255),f,b
 17877  006FB4  D7D7               	goto	l14152
 17878  006FB6  D000               	goto	l14162
 17879  006FB8                     l14162:
 17880                           
 17881                           ; BSR set to: 0
 17882  006FB8  C08E  F079         	movff	___ftdiv@f3,___ftpack@arg
 17883  006FBC  C08F  F07A         	movff	___ftdiv@f3+1,___ftpack@arg+1
 17884  006FC0  C090  F07B         	movff	___ftdiv@f3+2,___ftpack@arg+2
 17885  006FC4  C091  F07C         	movff	___ftdiv@exp,___ftpack@exp
 17886  006FC8  C092  F07D         	movff	___ftdiv@sign,___ftpack@sign
 17887  006FCC  EC67  F03A         	call	___ftpack	;wreg free
 17888  006FD0  C079  F084         	movff	?___ftpack,?___ftdiv
 17889  006FD4  C07A  F085         	movff	?___ftpack+1,?___ftdiv+1
 17890  006FD8  C07B  F086         	movff	?___ftpack+2,?___ftdiv+2
 17891  006FDC  0012               	return	
 17892  006FDE  0012               	return		;funcret
 17893  006FE0                     __end_of___ftdiv:
 17894                           	opt stack 0
 17895                           tblptru	equ	0xFF8
 17896                           tblptrh	equ	0xFF7
 17897                           tblptrl	equ	0xFF6
 17898                           tablat	equ	0xFF5
 17899                           prodh	equ	0xFF4
 17900                           prodl	equ	0xFF3
 17901                           intcon	equ	0xFF2
 17902                           indf0	equ	0xFEF
 17903                           postinc0	equ	0xFEE
 17904                           fsr0h	equ	0xFEA
 17905                           fsr0l	equ	0xFE9
 17906                           wreg	equ	0xFE8
 17907                           indf1	equ	0xFE7
 17908                           postdec1	equ	0xFE5
 17909                           fsr1h	equ	0xFE2
 17910                           fsr1l	equ	0xFE1
 17911                           indf2	equ	0xFDF
 17912                           postinc2	equ	0xFDE
 17913                           fsr2h	equ	0xFDA
 17914                           fsr2l	equ	0xFD9
 17915                           status	equ	0xFD8
 17916                           
 17917 ;; *************** function _VoltageDividerON *****************
 17918 ;; Defined at:
 17919 ;;		line 148 in file "ADC.c"
 17920 ;; Parameters:    Size  Location     Type
 17921 ;;		None
 17922 ;; Auto vars:     Size  Location     Type
 17923 ;;		None
 17924 ;; Return value:  Size  Location     Type
 17925 ;;		None               void
 17926 ;; Registers used:
 17927 ;;		status,2, status,0
 17928 ;; Tracked objects:
 17929 ;;		On entry : 0/0
 17930 ;;		On exit  : 0/0
 17931 ;;		Unchanged: 0/0
 17932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17937 ;;Total ram usage:        0 bytes
 17938 ;; Hardware stack levels used:    1
 17939 ;; Hardware stack levels required when called:    6
 17940 ;; This function calls:
 17941 ;;		Nothing
 17942 ;; This function is called by:
 17943 ;;		_ReadVoltage
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947                           	psect	text26
 17948  0093BE                     __ptext26:
 17949                           	opt stack 0
 17950  0093BE                     _VoltageDividerON:
 17951                           	opt stack 22
 17952                           
 17953                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 17954                           
 17955                           ;incstack = 0
 17956  0093BE  9A93               	bcf	3987,5,c	;volatile
 17957                           
 17958                           ;ADC.c: 151: LATB &= ~0x20;
 17959  0093C0  9A8A               	bcf	3978,5,c	;volatile
 17960  0093C2  0012               	return		;funcret
 17961  0093C4                     __end_of_VoltageDividerON:
 17962                           	opt stack 0
 17963                           tblptru	equ	0xFF8
 17964                           tblptrh	equ	0xFF7
 17965                           tblptrl	equ	0xFF6
 17966                           tablat	equ	0xFF5
 17967                           prodh	equ	0xFF4
 17968                           prodl	equ	0xFF3
 17969                           intcon	equ	0xFF2
 17970                           indf0	equ	0xFEF
 17971                           postinc0	equ	0xFEE
 17972                           fsr0h	equ	0xFEA
 17973                           fsr0l	equ	0xFE9
 17974                           wreg	equ	0xFE8
 17975                           indf1	equ	0xFE7
 17976                           postdec1	equ	0xFE5
 17977                           fsr1h	equ	0xFE2
 17978                           fsr1l	equ	0xFE1
 17979                           indf2	equ	0xFDF
 17980                           postinc2	equ	0xFDE
 17981                           fsr2h	equ	0xFDA
 17982                           fsr2l	equ	0xFD9
 17983                           status	equ	0xFD8
 17984                           
 17985 ;; *************** function _VoltageDividerOFF *****************
 17986 ;; Defined at:
 17987 ;;		line 159 in file "ADC.c"
 17988 ;; Parameters:    Size  Location     Type
 17989 ;;		None
 17990 ;; Auto vars:     Size  Location     Type
 17991 ;;		None
 17992 ;; Return value:  Size  Location     Type
 17993 ;;		None               void
 17994 ;; Registers used:
 17995 ;;		None
 17996 ;; Tracked objects:
 17997 ;;		On entry : 0/0
 17998 ;;		On exit  : 0/0
 17999 ;;		Unchanged: 0/0
 18000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18005 ;;Total ram usage:        0 bytes
 18006 ;; Hardware stack levels used:    1
 18007 ;; Hardware stack levels required when called:    6
 18008 ;; This function calls:
 18009 ;;		Nothing
 18010 ;; This function is called by:
 18011 ;;		_ReadVoltage
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015                           	psect	text27
 18016  0093CE                     __ptext27:
 18017                           	opt stack 0
 18018  0093CE                     _VoltageDividerOFF:
 18019                           	opt stack 22
 18020                           
 18021                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 18022                           
 18023                           ;incstack = 0
 18024  0093CE  8A93               	bsf	3987,5,c	;volatile
 18025  0093D0  0012               	return		;funcret
 18026  0093D2                     __end_of_VoltageDividerOFF:
 18027                           	opt stack 0
 18028                           tblptru	equ	0xFF8
 18029                           tblptrh	equ	0xFF7
 18030                           tblptrl	equ	0xFF6
 18031                           tablat	equ	0xFF5
 18032                           prodh	equ	0xFF4
 18033                           prodl	equ	0xFF3
 18034                           intcon	equ	0xFF2
 18035                           indf0	equ	0xFEF
 18036                           postinc0	equ	0xFEE
 18037                           fsr0h	equ	0xFEA
 18038                           fsr0l	equ	0xFE9
 18039                           wreg	equ	0xFE8
 18040                           indf1	equ	0xFE7
 18041                           postdec1	equ	0xFE5
 18042                           fsr1h	equ	0xFE2
 18043                           fsr1l	equ	0xFE1
 18044                           indf2	equ	0xFDF
 18045                           postinc2	equ	0xFDE
 18046                           fsr2h	equ	0xFDA
 18047                           fsr2l	equ	0xFD9
 18048                           status	equ	0xFD8
 18049                           
 18050 ;; *************** function _InternalADC_Read *****************
 18051 ;; Defined at:
 18052 ;;		line 84 in file "ADC.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;  channel         1    wreg     unsigned char 
 18055 ;;  ADCcounts       2   34[BANK0 ] PTR unsigned int 
 18056 ;;		 -> ReadVoltage@temp(2), 
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;  channel         1   39[BANK0 ] unsigned char 
 18059 ;;  AnaChanSel      1   38[BANK0 ] unsigned char 
 18060 ;; Return value:  Size  Location     Type
 18061 ;;                  1    wreg      unsigned char 
 18062 ;; Registers used:
 18063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18064 ;; Tracked objects:
 18065 ;;		On entry : 0/0
 18066 ;;		On exit  : 0/0
 18067 ;;		Unchanged: 0/0
 18068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18070 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18072 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18073 ;;Total ram usage:        6 bytes
 18074 ;; Hardware stack levels used:    1
 18075 ;; Hardware stack levels required when called:    7
 18076 ;; This function calls:
 18077 ;;		_delayUS
 18078 ;; This function is called by:
 18079 ;;		_ReadVoltage
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text28
 18084  008358                     __ptext28:
 18085                           	opt stack 0
 18086  008358                     _InternalADC_Read:
 18087                           	opt stack 21
 18088                           
 18089                           ;incstack = 0
 18090                           ;InternalADC_Read@channel stored from wreg
 18091  008358  0100               	movlb	0	; () banked
 18092  00835A  6F87               	movwf	InternalADC_Read@channel& (0+255),b
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 18096  00835C  0E01               	movlw	1
 18097  00835E  0100               	movlb	0	; () banked
 18098  008360  6F86               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;ADC.c: 87: if(channel > 0b1100)
 18102  008362  0E0C               	movlw	12
 18103  008364  0100               	movlb	0	; () banked
 18104  008366  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18105  008368  D00A               	goto	l13810
 18106                           
 18107                           ; BSR set to: 0
 18108                           ;ADC.c: 88: {
 18109                           ;ADC.c: 89: *ADCcounts = 0;
 18110  00836A  C082  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18111  00836E  C083  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18112  008372  0E00               	movlw	0
 18113  008374  6EDE               	movwf	postinc2,c
 18114  008376  0E00               	movlw	0
 18115  008378  6EDD               	movwf	postdec2,c
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;ADC.c: 90: return 0;
 18119  00837A  0E00               	movlw	0
 18120                           
 18121                           ; BSR set to: 0
 18122  00837C  0012               	return	
 18123  00837E                     l13810:
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;ADC.c: 91: }
 18127                           ;ADC.c: 92: if(channel > 1)
 18128  00837E  0E01               	movlw	1
 18129  008380  0100               	movlb	0	; () banked
 18130  008382  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18131  008384  D001               	goto	l13814
 18132                           
 18133                           ; BSR set to: 0
 18134                           ;ADC.c: 95: }
 18135  008386  D009               	goto	l13818
 18136  008388                     l13814:
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;ADC.c: 96: else if (channel == 0)
 18140  008388  0100               	movlb	0	; () banked
 18141  00838A  5187               	movf	InternalADC_Read@channel& (0+255),w,b
 18142  00838C  0100               	movlb	0	; () banked
 18143  00838E  A4D8               	btfss	status,2,c
 18144  008390  D004               	goto	l13818
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;ADC.c: 97: {
 18148                           ;ADC.c: 98: AnaChanSel = 0;
 18149  008392  0E00               	movlw	0
 18150  008394  0100               	movlb	0	; () banked
 18151  008396  6F86               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18152                           
 18153                           ; BSR set to: 0
 18154  008398  D000               	goto	l13818
 18155  00839A                     l13818:
 18156                           
 18157                           ; BSR set to: 0
 18158                           ;ADC.c: 99: }
 18159                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 18160  00839A  0100               	movlb	0	; () banked
 18161  00839C  4586               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 18162  00839E  46E8               	rlncf	wreg,f,c
 18163  0083A0  0BFC               	andlw	252
 18164  0083A2  12C2               	iorwf	4034,f,c	;volatile
 18165                           
 18166                           ; BSR set to: 0
 18167                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 18168  0083A4  98C1               	bcf	4033,4,c	;volatile
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 18172  0083A6  9AC1               	bcf	4033,5,c	;volatile
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 18176  0083A8  80C2               	bsf	4034,0,c	;volatile
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;ADC.c: 107: delayUS(50);
 18180  0083AA  0E32               	movlw	50
 18181  0083AC  0100               	movlb	0	; () banked
 18182  0083AE  6F79               	movwf	delayUS@US& (0+255),b
 18183  0083B0  0E00               	movlw	0
 18184  0083B2  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 18185  0083B4  0E00               	movlw	0
 18186  0083B6  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 18187  0083B8  0E00               	movlw	0
 18188  0083BA  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 18189  0083BC  EC6B  F046         	call	_delayUS	;wreg free
 18190                           
 18191                           ;ADC.c: 109: ADCON0bits.GO = 1;
 18192  0083C0  82C2               	bsf	4034,1,c	;volatile
 18193                           
 18194                           ;ADC.c: 110: while(ADCON0bits.GO);
 18195  0083C2  D000               	goto	l735
 18196  0083C4                     l735:
 18197  0083C4  B2C2               	btfsc	4034,1,c	;volatile
 18198  0083C6  D7FE               	goto	l735
 18199                           
 18200                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 18201  0083C8  90C2               	bcf	4034,0,c	;volatile
 18202                           
 18203                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 18204  0083CA  50C3               	movf	4035,w,c	;volatile
 18205  0083CC  CFC4 F084          	movff	4036,??_InternalADC_Read	;volatile
 18206  0083D0  0100               	movlb	0	; () banked
 18207  0083D2  6B85               	clrf	(??_InternalADC_Read+1)& (0+255),b
 18208  0083D4  C084  F085         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 18209  0083D8  0100               	movlb	0	; () banked
 18210  0083DA  6B84               	clrf	??_InternalADC_Read& (0+255),b
 18211  0083DC  0100               	movlb	0	; () banked
 18212  0083DE  2784               	addwf	??_InternalADC_Read& (0+255),f,b
 18213  0083E0  0E00               	movlw	0
 18214  0083E2  2385               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 18215  0083E4  C082  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18216  0083E8  C083  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18217  0083EC  C084  FFDE         	movff	??_InternalADC_Read,postinc2
 18218  0083F0  C085  FFDD         	movff	??_InternalADC_Read+1,postdec2
 18219                           
 18220                           ; BSR set to: 0
 18221                           ;ADC.c: 114: return 1;
 18222  0083F4  0E01               	movlw	1
 18223  0083F6  0012               	return	
 18224                           
 18225                           ; BSR set to: 0
 18226                           
 18227                           ; BSR set to: 0
 18228  0083F8  0012               	return		;funcret
 18229  0083FA                     __end_of_InternalADC_Read:
 18230                           	opt stack 0
 18231                           tblptru	equ	0xFF8
 18232                           tblptrh	equ	0xFF7
 18233                           tblptrl	equ	0xFF6
 18234                           tablat	equ	0xFF5
 18235                           prodh	equ	0xFF4
 18236                           prodl	equ	0xFF3
 18237                           intcon	equ	0xFF2
 18238                           indf0	equ	0xFEF
 18239                           postinc0	equ	0xFEE
 18240                           fsr0h	equ	0xFEA
 18241                           fsr0l	equ	0xFE9
 18242                           wreg	equ	0xFE8
 18243                           indf1	equ	0xFE7
 18244                           postdec1	equ	0xFE5
 18245                           fsr1h	equ	0xFE2
 18246                           fsr1l	equ	0xFE1
 18247                           indf2	equ	0xFDF
 18248                           postinc2	equ	0xFDE
 18249                           postdec2	equ	0xFDD
 18250                           fsr2h	equ	0xFDA
 18251                           fsr2l	equ	0xFD9
 18252                           status	equ	0xFD8
 18253                           
 18254 ;; *************** function _GetStringAfterComma *****************
 18255 ;; Defined at:
 18256 ;;		line 634 in file "MISC.c"
 18257 ;; Parameters:    Size  Location     Type
 18258 ;;  This            2   25[BANK0 ] PTR unsigned char 
 18259 ;;		 -> main@BluetoothString(255), 
 18260 ;;  CommaNumber     1   27[BANK0 ] unsigned char 
 18261 ;;  result          2   28[BANK0 ] PTR unsigned char 
 18262 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;  count           1   32[BANK0 ] unsigned char 
 18265 ;;  tempCommaNum    1   31[BANK0 ] unsigned char 
 18266 ;; Return value:  Size  Location     Type
 18267 ;;                  1    wreg      unsigned char 
 18268 ;; Registers used:
 18269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18270 ;; Tracked objects:
 18271 ;;		On entry : 0/0
 18272 ;;		On exit  : 0/0
 18273 ;;		Unchanged: 0/0
 18274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18275 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18276 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18278 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18279 ;;Total ram usage:        8 bytes
 18280 ;; Hardware stack levels used:    1
 18281 ;; Hardware stack levels required when called:    6
 18282 ;; This function calls:
 18283 ;;		Nothing
 18284 ;; This function is called by:
 18285 ;;		_UseBluetooth
 18286 ;; This function uses a non-reentrant model
 18287 ;;
 18288                           
 18289                           	psect	text29
 18290  00770C                     __ptext29:
 18291                           	opt stack 0
 18292  00770C                     _GetStringAfterComma:
 18293                           	opt stack 23
 18294                           
 18295                           ;MISC.c: 636: unsigned char tempCommaNumber = 1;
 18296                           
 18297                           ; BSR set to: 0
 18298                           ;incstack = 0
 18299  00770C  0E01               	movlw	1
 18300  00770E  0100               	movlb	0	; () banked
 18301  007710  6F7F               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 18302                           
 18303                           ;MISC.c: 637: unsigned char count = 0;
 18304  007712  0E00               	movlw	0
 18305  007714  0100               	movlb	0	; () banked
 18306  007716  6F80               	movwf	GetStringAfterComma@count& (0+255),b
 18307                           
 18308                           ; BSR set to: 0
 18309                           
 18310                           ;MISC.c: 639: SCAN:while(*This != ',' && *This != 0)
 18311  007718  D001               	goto	l14732
 18312                           
 18313                           ; BSR set to: 0
 18314  00771A  D02B               	goto	L14
 18315  00771C                     l14732:
 18316                           
 18317                           ; BSR set to: 0
 18318  00771C  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18319  007720  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18320  007724  0E2C               	movlw	44
 18321  007726  18DE               	xorwf	postinc2,w,c
 18322  007728  B4D8               	btfsc	status,2,c
 18323  00772A  D009               	goto	l14736
 18324                           
 18325                           ; BSR set to: 0
 18326  00772C  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18327  007730  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18328  007734  50DF               	movf	indf2,w,c
 18329  007736  B4D8               	btfsc	status,2,c
 18330  007738  D002               	goto	l14736
 18331  00773A  D01B               	goto	L14
 18332                           
 18333                           ; BSR set to: 0
 18334  00773C  D000               	goto	l14736
 18335  00773E                     l14736:
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;MISC.c: 643: }
 18339                           ;MISC.c: 644: if(*This == 0)
 18340  00773E  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18341  007742  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18342  007746  50DF               	movf	indf2,w,c
 18343  007748  A4D8               	btfss	status,2,c
 18344  00774A  D003               	goto	l14744
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;MISC.c: 645: {
 18348                           ;MISC.c: 646: return 1;
 18349  00774C  0E01               	movlw	1
 18350                           
 18351                           ; BSR set to: 0
 18352  00774E  0012               	return	
 18353                           
 18354                           ; BSR set to: 0
 18355                           ;MISC.c: 647: }
 18356  007750  D015               	goto	l14750
 18357  007752                     l14744:
 18358                           
 18359                           ; BSR set to: 0
 18360                           ;MISC.c: 648: else if(*This != ',')
 18361  007752  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18362  007756  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18363  00775A  0E2C               	movlw	44
 18364  00775C  18DE               	xorwf	postinc2,w,c
 18365  00775E  B4D8               	btfsc	status,2,c
 18366  007760  D00D               	goto	l14750
 18367                           
 18368                           ; BSR set to: 0
 18369                           ;MISC.c: 649: {
 18370                           ;MISC.c: 650: if(tempCommaNumber < CommaNumber)
 18371  007762  0100               	movlb	0	; () banked
 18372  007764  517B               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 18373  007766  0100               	movlb	0	; () banked
 18374  007768  5D7F               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 18375  00776A  B0D8               	btfsc	status,0,c
 18376  00776C  D007               	goto	l14750
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;MISC.c: 651: {
 18380                           ;MISC.c: 652: tempCommaNumber++;
 18381  00776E  0100               	movlb	0	; () banked
 18382  007770  2B7F               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 18383  007772                     L14:
 18384                           
 18385                           ;MISC.c: 653: This++;
 18386  007772  0100               	movlb	0	; () banked
 18387  007774  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18388  007776  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18389                           
 18390                           ;MISC.c: 654: goto SCAN;
 18391  007778  D7D1               	goto	l14732
 18392                           
 18393                           ; BSR set to: 0
 18394                           
 18395                           ; BSR set to: 0
 18396  00777A  D000               	goto	l14750
 18397  00777C                     l14750:
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;MISC.c: 655: }
 18401                           ;MISC.c: 656: }
 18402                           ;MISC.c: 657: if(*This == 0)
 18403  00777C  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18404  007780  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18405  007784  50DF               	movf	indf2,w,c
 18406  007786  A4D8               	btfss	status,2,c
 18407  007788  D002               	goto	l14756
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;MISC.c: 658: {
 18411                           ;MISC.c: 659: return 1;
 18412  00778A  0E01               	movlw	1
 18413                           
 18414                           ; BSR set to: 0
 18415  00778C  0012               	return	
 18416  00778E                     l14756:
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;MISC.c: 660: }
 18420                           ;MISC.c: 661: This++;
 18421  00778E  0100               	movlb	0	; () banked
 18422  007790  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18423  007792  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;MISC.c: 662: if(*This == ' ')
 18427  007794  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18428  007798  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18429  00779C  0E20               	movlw	32
 18430  00779E  18DE               	xorwf	postinc2,w,c
 18431  0077A0  A4D8               	btfss	status,2,c
 18432  0077A2  D004               	goto	l14762
 18433                           
 18434                           ; BSR set to: 0
 18435                           ;MISC.c: 663: {
 18436                           ;MISC.c: 664: This++;
 18437  0077A4  0100               	movlb	0	; () banked
 18438  0077A6  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18439  0077A8  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18440                           
 18441                           ;MISC.c: 666: }
 18442  0077AA  D028               	goto	l14784
 18443  0077AC                     l14762:
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;MISC.c: 667: else if (*This == ',')
 18447  0077AC  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18448  0077B0  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18449  0077B4  0E2C               	movlw	44
 18450  0077B6  18DE               	xorwf	postinc2,w,c
 18451  0077B8  A4D8               	btfss	status,2,c
 18452  0077BA  D003               	goto	l14770
 18453                           
 18454                           ; BSR set to: 0
 18455                           ;MISC.c: 668: {
 18456                           ;MISC.c: 669: return 2;
 18457  0077BC  0E02               	movlw	2
 18458                           
 18459                           ; BSR set to: 0
 18460  0077BE  0012               	return	
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;MISC.c: 670: }
 18464  0077C0  D01D               	goto	l14784
 18465  0077C2                     l14770:
 18466                           
 18467                           ; BSR set to: 0
 18468                           ;MISC.c: 671: else if(*This == 0)
 18469  0077C2  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18470  0077C6  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18471  0077CA  50DF               	movf	indf2,w,c
 18472  0077CC  A4D8               	btfss	status,2,c
 18473  0077CE  D016               	goto	l14784
 18474                           
 18475                           ; BSR set to: 0
 18476                           ;MISC.c: 672: {
 18477                           ;MISC.c: 673: return 3;
 18478  0077D0  0E03               	movlw	3
 18479                           
 18480                           ; BSR set to: 0
 18481  0077D2  0012               	return	
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;MISC.c: 674: }
 18485                           ;MISC.c: 675: while(*This != 0 && *This != ' ' && count < 10)
 18486                           
 18487                           ; BSR set to: 0
 18488                           
 18489                           ; BSR set to: 0
 18490  0077D4  D013               	goto	l14784
 18491  0077D6                     l14776:
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;MISC.c: 676: {
 18495                           ;MISC.c: 677: *result = *This;
 18496  0077D6  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18497  0077DA  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18498  0077DE  C07C  FFE1         	movff	GetStringAfterComma@result,fsr1l
 18499  0077E2  C07D  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 18500  0077E6  CFDF FFE7          	movff	indf2,indf1
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;MISC.c: 678: result++;
 18504  0077EA  0100               	movlb	0	; () banked
 18505  0077EC  4B7C               	infsnz	GetStringAfterComma@result& (0+255),f,b
 18506  0077EE  2B7D               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 18507                           
 18508                           ; BSR set to: 0
 18509                           ;MISC.c: 679: This++;
 18510  0077F0  0100               	movlb	0	; () banked
 18511  0077F2  4B79               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18512  0077F4  2B7A               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;MISC.c: 680: count++;
 18516  0077F6  0100               	movlb	0	; () banked
 18517  0077F8  2B80               	incf	GetStringAfterComma@count& (0+255),f,b
 18518  0077FA  D000               	goto	l14784
 18519  0077FC                     l14784:
 18520                           
 18521                           ; BSR set to: 0
 18522  0077FC  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18523  007800  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18524  007804  50DF               	movf	indf2,w,c
 18525  007806  B4D8               	btfsc	status,2,c
 18526  007808  D00D               	goto	l14790
 18527                           
 18528                           ; BSR set to: 0
 18529  00780A  C079  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18530  00780E  C07A  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18531  007812  0E20               	movlw	32
 18532  007814  18DE               	xorwf	postinc2,w,c
 18533  007816  B4D8               	btfsc	status,2,c
 18534  007818  D005               	goto	l14790
 18535                           
 18536                           ; BSR set to: 0
 18537  00781A  0E09               	movlw	9
 18538  00781C  0100               	movlb	0	; () banked
 18539  00781E  6580               	cpfsgt	GetStringAfterComma@count& (0+255),b
 18540  007820  D7DA               	goto	l14776
 18541                           
 18542                           ; BSR set to: 0
 18543  007822  D000               	goto	l14790
 18544  007824                     l14790:
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;MISC.c: 681: }
 18548                           ;MISC.c: 682: return 0;
 18549  007824  0E00               	movlw	0
 18550  007826  0012               	return	
 18551                           
 18552                           ; BSR set to: 0
 18553                           
 18554                           ; BSR set to: 0
 18555  007828  0012               	return		;funcret
 18556  00782A                     __end_of_GetStringAfterComma:
 18557                           	opt stack 0
 18558                           tblptru	equ	0xFF8
 18559                           tblptrh	equ	0xFF7
 18560                           tblptrl	equ	0xFF6
 18561                           tablat	equ	0xFF5
 18562                           prodh	equ	0xFF4
 18563                           prodl	equ	0xFF3
 18564                           intcon	equ	0xFF2
 18565                           indf0	equ	0xFEF
 18566                           postinc0	equ	0xFEE
 18567                           fsr0h	equ	0xFEA
 18568                           fsr0l	equ	0xFE9
 18569                           wreg	equ	0xFE8
 18570                           indf1	equ	0xFE7
 18571                           postdec1	equ	0xFE5
 18572                           fsr1h	equ	0xFE2
 18573                           fsr1l	equ	0xFE1
 18574                           indf2	equ	0xFDF
 18575                           postinc2	equ	0xFDE
 18576                           postdec2	equ	0xFDD
 18577                           fsr2h	equ	0xFDA
 18578                           fsr2l	equ	0xFD9
 18579                           status	equ	0xFD8
 18580                           
 18581 ;; *************** function _GetNumber *****************
 18582 ;; Defined at:
 18583 ;;		line 457 in file "MISC.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;  This            2   37[BANK0 ] PTR unsigned char 
 18586 ;;		 -> main@BluetoothString(255), 
 18587 ;;  CommaNumber     1   39[BANK0 ] unsigned char 
 18588 ;;  result          2   40[BANK0 ] PTR unsigned long 
 18589 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 18590 ;; Auto vars:     Size  Location     Type
 18591 ;;  temp            4   53[BANK0 ] long 
 18592 ;;  tempThis        1   52[BANK0 ] unsigned char 
 18593 ;;  i               1   51[BANK0 ] unsigned char 
 18594 ;;  Hex             1   50[BANK0 ] unsigned char 
 18595 ;;  count           1   49[BANK0 ] unsigned char 
 18596 ;;  negative        1   48[BANK0 ] unsigned char 
 18597 ;;  tempCommaNum    1   47[BANK0 ] unsigned char 
 18598 ;; Return value:  Size  Location     Type
 18599 ;;                  1    wreg      unsigned char 
 18600 ;; Registers used:
 18601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18602 ;; Tracked objects:
 18603 ;;		On entry : 0/0
 18604 ;;		On exit  : 0/0
 18605 ;;		Unchanged: 0/0
 18606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18607 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18608 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18609 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18610 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18611 ;;Total ram usage:       20 bytes
 18612 ;; Hardware stack levels used:    1
 18613 ;; Hardware stack levels required when called:    7
 18614 ;; This function calls:
 18615 ;;		_IsLetter
 18616 ;;		___lmul
 18617 ;;		_lowercaseChar
 18618 ;; This function is called by:
 18619 ;;		_UseBluetooth
 18620 ;; This function uses a non-reentrant model
 18621 ;;
 18622                           
 18623                           	psect	text30
 18624  004720                     __ptext30:
 18625                           	opt stack 0
 18626  004720                     _GetNumber:
 18627                           	opt stack 22
 18628                           
 18629                           ;MISC.c: 459: unsigned char i =0;
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;incstack = 0
 18633  004720  0E00               	movlw	0
 18634  004722  0100               	movlb	0	; () banked
 18635  004724  6F93               	movwf	GetNumber@i& (0+255),b
 18636                           
 18637                           ;MISC.c: 460: long temp =0;
 18638  004726  0E00               	movlw	0
 18639  004728  0100               	movlb	0	; () banked
 18640  00472A  6F95               	movwf	GetNumber@temp& (0+255),b
 18641  00472C  0E00               	movlw	0
 18642  00472E  6F96               	movwf	(GetNumber@temp+1)& (0+255),b
 18643  004730  0E00               	movlw	0
 18644  004732  6F97               	movwf	(GetNumber@temp+2)& (0+255),b
 18645  004734  0E00               	movlw	0
 18646  004736  6F98               	movwf	(GetNumber@temp+3)& (0+255),b
 18647                           
 18648                           ;MISC.c: 461: unsigned char negative =0;
 18649  004738  0E00               	movlw	0
 18650  00473A  0100               	movlb	0	; () banked
 18651  00473C  6F90               	movwf	GetNumber@negative& (0+255),b
 18652                           
 18653                           ;MISC.c: 462: unsigned char tempCommaNumber = 1;
 18654  00473E  0E01               	movlw	1
 18655  004740  0100               	movlb	0	; () banked
 18656  004742  6F8F               	movwf	GetNumber@tempCommaNumber& (0+255),b
 18657                           
 18658                           ;MISC.c: 463: unsigned char count =0;
 18659  004744  0E00               	movlw	0
 18660  004746  0100               	movlb	0	; () banked
 18661  004748  6F91               	movwf	GetNumber@count& (0+255),b
 18662                           
 18663                           ;MISC.c: 464: unsigned char Hex = 0;
 18664  00474A  0E00               	movlw	0
 18665  00474C  0100               	movlb	0	; () banked
 18666  00474E  6F92               	movwf	GetNumber@Hex& (0+255),b
 18667                           
 18668                           ;MISC.c: 465: unsigned char tempThis;
 18669                           ;MISC.c: 467: while(*This != 0)
 18670  004750  D038               	goto	l14532
 18671  004752                     l14512:
 18672                           
 18673                           ; BSR set to: 0
 18674                           ;MISC.c: 468: {
 18675                           ;MISC.c: 469: if(*This == '0')
 18676  004752  C085  FFD9         	movff	GetNumber@This,fsr2l
 18677  004756  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18678  00475A  0E30               	movlw	48
 18679  00475C  18DE               	xorwf	postinc2,w,c
 18680  00475E  A4D8               	btfss	status,2,c
 18681  004760  D02A               	goto	l14528
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;MISC.c: 470: {
 18685                           ;MISC.c: 471: count++;
 18686  004762  0100               	movlb	0	; () banked
 18687  004764  2B91               	incf	GetNumber@count& (0+255),f,b
 18688                           
 18689                           ;MISC.c: 472: This++;
 18690  004766  0100               	movlb	0	; () banked
 18691  004768  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18692  00476A  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;MISC.c: 473: if(*This == 'x' || *This == 'X')
 18696  00476C  C085  FFD9         	movff	GetNumber@This,fsr2l
 18697  004770  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18698  004774  0E78               	movlw	120
 18699  004776  18DE               	xorwf	postinc2,w,c
 18700  004778  B4D8               	btfsc	status,2,c
 18701  00477A  D008               	goto	l14520
 18702                           
 18703                           ; BSR set to: 0
 18704  00477C  C085  FFD9         	movff	GetNumber@This,fsr2l
 18705  004780  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18706  004784  0E58               	movlw	88
 18707  004786  18DE               	xorwf	postinc2,w,c
 18708  004788  A4D8               	btfss	status,2,c
 18709  00478A  D015               	goto	l14528
 18710  00478C                     l14520:
 18711                           
 18712                           ; BSR set to: 0
 18713                           ;MISC.c: 474: {
 18714                           ;MISC.c: 475: This++;
 18715  00478C  0100               	movlb	0	; () banked
 18716  00478E  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18717  004790  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18718                           
 18719                           ; BSR set to: 0
 18720                           ;MISC.c: 476: if(*This >='0' && *This <='9')
 18721  004792  C085  FFD9         	movff	GetNumber@This,fsr2l
 18722  004796  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18723  00479A  0E2F               	movlw	47
 18724  00479C  64DF               	cpfsgt	indf2,c
 18725  00479E  D00B               	goto	l14528
 18726                           
 18727                           ; BSR set to: 0
 18728  0047A0  C085  FFD9         	movff	GetNumber@This,fsr2l
 18729  0047A4  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18730  0047A8  0E3A               	movlw	58
 18731  0047AA  60DF               	cpfslt	indf2,c
 18732  0047AC  D004               	goto	l14528
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;MISC.c: 477: {
 18736                           ;MISC.c: 478: Hex = 1;
 18737  0047AE  0E01               	movlw	1
 18738  0047B0  0100               	movlb	0	; () banked
 18739  0047B2  6F92               	movwf	GetNumber@Hex& (0+255),b
 18740                           
 18741                           ; BSR set to: 0
 18742                           
 18743                           ; BSR set to: 0
 18744  0047B4  D000               	goto	l14528
 18745  0047B6                     l14528:
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;MISC.c: 479: }
 18749                           ;MISC.c: 480: }
 18750                           ;MISC.c: 481: }
 18751                           ;MISC.c: 482: count++;
 18752  0047B6  0100               	movlb	0	; () banked
 18753  0047B8  2B91               	incf	GetNumber@count& (0+255),f,b
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;MISC.c: 483: This++;
 18757  0047BA  0100               	movlb	0	; () banked
 18758  0047BC  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18759  0047BE  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18760  0047C0  D000               	goto	l14532
 18761  0047C2                     l14532:
 18762                           
 18763                           ; BSR set to: 0
 18764  0047C2  C085  FFD9         	movff	GetNumber@This,fsr2l
 18765  0047C6  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18766  0047CA  50DF               	movf	indf2,w,c
 18767  0047CC  A4D8               	btfss	status,2,c
 18768  0047CE  D7C1               	goto	l14512
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;MISC.c: 484: }
 18772                           ;MISC.c: 485: This-=count;
 18773                           
 18774                           ; BSR set to: 0
 18775  0047D0  0100               	movlb	0	; () banked
 18776  0047D2  5191               	movf	GetNumber@count& (0+255),w,b
 18777  0047D4  0D01               	mullw	1
 18778  0047D6  50F3               	movf	prodl,w,c
 18779  0047D8  0100               	movlb	0	; () banked
 18780  0047DA  5F85               	subwf	GetNumber@This& (0+255),f,b
 18781  0047DC  50F4               	movf	prodh,w,c
 18782  0047DE  0100               	movlb	0	; () banked
 18783  0047E0  5B86               	subwfb	(GetNumber@This+1)& (0+255),f,b
 18784                           
 18785                           ; BSR set to: 0
 18786                           
 18787                           ;MISC.c: 487: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 18788  0047E2  D001               	goto	l14538
 18789                           
 18790                           ; BSR set to: 0
 18791  0047E4  D03B               	goto	L15
 18792  0047E6                     l14538:
 18793                           
 18794                           ; BSR set to: 0
 18795  0047E6  C085  FFD9         	movff	GetNumber@This,fsr2l
 18796  0047EA  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18797  0047EE  0E3D               	movlw	61
 18798  0047F0  18DE               	xorwf	postinc2,w,c
 18799  0047F2  B4D8               	btfsc	status,2,c
 18800  0047F4  D011               	goto	l14544
 18801                           
 18802                           ; BSR set to: 0
 18803  0047F6  C085  FFD9         	movff	GetNumber@This,fsr2l
 18804  0047FA  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18805  0047FE  0E2C               	movlw	44
 18806  004800  18DE               	xorwf	postinc2,w,c
 18807  004802  B4D8               	btfsc	status,2,c
 18808  004804  D009               	goto	l14544
 18809                           
 18810                           ; BSR set to: 0
 18811  004806  C085  FFD9         	movff	GetNumber@This,fsr2l
 18812  00480A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18813  00480E  50DF               	movf	indf2,w,c
 18814  004810  B4D8               	btfsc	status,2,c
 18815  004812  D002               	goto	l14544
 18816  004814  D023               	goto	L15
 18817                           
 18818                           ; BSR set to: 0
 18819  004816  D000               	goto	l14544
 18820  004818                     l14544:
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;MISC.c: 491: }
 18824                           ;MISC.c: 492: if(*This == 0)
 18825  004818  C085  FFD9         	movff	GetNumber@This,fsr2l
 18826  00481C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18827  004820  50DF               	movf	indf2,w,c
 18828  004822  A4D8               	btfss	status,2,c
 18829  004824  D003               	goto	l14552
 18830                           
 18831                           ; BSR set to: 0
 18832                           ;MISC.c: 493: {
 18833                           ;MISC.c: 494: return 1;
 18834  004826  0E01               	movlw	1
 18835                           
 18836                           ; BSR set to: 0
 18837  004828  0012               	return	
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;MISC.c: 495: }
 18841  00482A  D01D               	goto	l14560
 18842  00482C                     l14552:
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;MISC.c: 496: else if(*This != '=' || *This != ',')
 18846  00482C  C085  FFD9         	movff	GetNumber@This,fsr2l
 18847  004830  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18848  004834  0E3D               	movlw	61
 18849  004836  18DE               	xorwf	postinc2,w,c
 18850  004838  A4D8               	btfss	status,2,c
 18851  00483A  D008               	goto	l14556
 18852                           
 18853                           ; BSR set to: 0
 18854  00483C  C085  FFD9         	movff	GetNumber@This,fsr2l
 18855  004840  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18856  004844  0E2C               	movlw	44
 18857  004846  18DE               	xorwf	postinc2,w,c
 18858  004848  B4D8               	btfsc	status,2,c
 18859  00484A  D00D               	goto	l14560
 18860  00484C                     l14556:
 18861                           
 18862                           ; BSR set to: 0
 18863                           ;MISC.c: 497: {
 18864                           ;MISC.c: 498: if(tempCommaNumber < CommaNumber)
 18865  00484C  0100               	movlb	0	; () banked
 18866  00484E  5187               	movf	GetNumber@CommaNumber& (0+255),w,b
 18867  004850  0100               	movlb	0	; () banked
 18868  004852  5D8F               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 18869  004854  B0D8               	btfsc	status,0,c
 18870  004856  D007               	goto	l14560
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;MISC.c: 499: {
 18874                           ;MISC.c: 500: tempCommaNumber++;
 18875  004858  0100               	movlb	0	; () banked
 18876  00485A  2B8F               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 18877  00485C                     L15:
 18878                           
 18879                           ;MISC.c: 501: This++;
 18880  00485C  0100               	movlb	0	; () banked
 18881  00485E  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18882  004860  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18883                           
 18884                           ;MISC.c: 502: goto SCAN;
 18885  004862  D7C1               	goto	l14538
 18886                           
 18887                           ; BSR set to: 0
 18888                           
 18889                           ; BSR set to: 0
 18890  004864  D000               	goto	l14560
 18891  004866                     l14560:
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;MISC.c: 503: }
 18895                           ;MISC.c: 504: }
 18896                           ;MISC.c: 505: if(*This == 0)
 18897  004866  C085  FFD9         	movff	GetNumber@This,fsr2l
 18898  00486A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18899  00486E  50DF               	movf	indf2,w,c
 18900  004870  A4D8               	btfss	status,2,c
 18901  004872  D002               	goto	l14566
 18902                           
 18903                           ; BSR set to: 0
 18904                           ;MISC.c: 506: {
 18905                           ;MISC.c: 507: return 1;
 18906  004874  0E01               	movlw	1
 18907                           
 18908                           ; BSR set to: 0
 18909  004876  0012               	return	
 18910  004878                     l14566:
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;MISC.c: 508: }
 18914                           ;MISC.c: 509: This++;
 18915  004878  0100               	movlb	0	; () banked
 18916  00487A  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18917  00487C  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;MISC.c: 510: if(*This == ' ')
 18921  00487E  C085  FFD9         	movff	GetNumber@This,fsr2l
 18922  004882  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18923  004886  0E20               	movlw	32
 18924  004888  18DE               	xorwf	postinc2,w,c
 18925  00488A  B4D8               	btfsc	status,2,c
 18926  00488C  D01E               	goto	l14586
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;MISC.c: 515: else if (*This == '=' || *This == ',')
 18930                           
 18931                           ; BSR set to: 0
 18932                           
 18933                           ;MISC.c: 514: }
 18934                           
 18935                           ; BSR set to: 0
 18936                           ;MISC.c: 511: {
 18937                           ;MISC.c: 512: This++;
 18938  00488E  C085  FFD9         	movff	GetNumber@This,fsr2l
 18939  004892  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18940  004896  0E3D               	movlw	61
 18941  004898  18DE               	xorwf	postinc2,w,c
 18942  00489A  B4D8               	btfsc	status,2,c
 18943  00489C  D008               	goto	l14576
 18944                           
 18945                           ; BSR set to: 0
 18946  00489E  C085  FFD9         	movff	GetNumber@This,fsr2l
 18947  0048A2  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18948  0048A6  0E2C               	movlw	44
 18949  0048A8  18DE               	xorwf	postinc2,w,c
 18950  0048AA  A4D8               	btfss	status,2,c
 18951  0048AC  D003               	goto	l14582
 18952  0048AE                     l14576:
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;MISC.c: 516: {
 18956                           ;MISC.c: 517: return 2;
 18957  0048AE  0E02               	movlw	2
 18958                           
 18959                           ; BSR set to: 0
 18960  0048B0  0012               	return	
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;MISC.c: 518: }
 18964  0048B2  D019               	goto	l14594
 18965  0048B4                     l14582:
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;MISC.c: 519: else if(*This == '-')
 18969  0048B4  C085  FFD9         	movff	GetNumber@This,fsr2l
 18970  0048B8  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18971  0048BC  0E2D               	movlw	45
 18972  0048BE  18DE               	xorwf	postinc2,w,c
 18973  0048C0  A4D8               	btfss	status,2,c
 18974  0048C2  D007               	goto	l14588
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;MISC.c: 520: {
 18978                           ;MISC.c: 521: negative = 1;
 18979  0048C4  0E01               	movlw	1
 18980  0048C6  0100               	movlb	0	; () banked
 18981  0048C8  6F90               	movwf	GetNumber@negative& (0+255),b
 18982  0048CA                     l14586:
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;MISC.c: 522: This++;
 18986  0048CA  0100               	movlb	0	; () banked
 18987  0048CC  4B85               	infsnz	GetNumber@This& (0+255),f,b
 18988  0048CE  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 18989                           
 18990                           ;MISC.c: 524: }
 18991  0048D0  D00A               	goto	l14594
 18992  0048D2                     l14588:
 18993                           
 18994                           ; BSR set to: 0
 18995                           ;MISC.c: 525: else if(*This == 0)
 18996  0048D2  C085  FFD9         	movff	GetNumber@This,fsr2l
 18997  0048D6  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 18998  0048DA  50DF               	movf	indf2,w,c
 18999  0048DC  A4D8               	btfss	status,2,c
 19000  0048DE  D003               	goto	l14594
 19001                           
 19002                           ; BSR set to: 0
 19003                           ;MISC.c: 526: {
 19004                           ;MISC.c: 527: return 3;
 19005  0048E0  0E03               	movlw	3
 19006                           
 19007                           ; BSR set to: 0
 19008  0048E2  0012               	return	
 19009                           
 19010                           ; BSR set to: 0
 19011                           
 19012                           ; BSR set to: 0
 19013                           
 19014                           ; BSR set to: 0
 19015  0048E4  D000               	goto	l14594
 19016  0048E6                     l14594:
 19017                           
 19018                           ; BSR set to: 0
 19019                           ;MISC.c: 528: }
 19020                           ;MISC.c: 529: if(Hex)
 19021  0048E6  0100               	movlb	0	; () banked
 19022  0048E8  5192               	movf	GetNumber@Hex& (0+255),w,b
 19023  0048EA  0100               	movlb	0	; () banked
 19024  0048EC  B4D8               	btfsc	status,2,c
 19025  0048EE  D11C               	goto	l14658
 19026                           
 19027                           ; BSR set to: 0
 19028                           ;MISC.c: 530: {
 19029                           ;MISC.c: 531: negative = 0;
 19030  0048F0  0E00               	movlw	0
 19031  0048F2  0100               	movlb	0	; () banked
 19032  0048F4  6F90               	movwf	GetNumber@negative& (0+255),b
 19033                           
 19034                           ;MISC.c: 532: while(*This != 'x' && *This != 'X')
 19035  0048F6  D004               	goto	l14600
 19036  0048F8                     l14598:
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;MISC.c: 533: {
 19040                           ;MISC.c: 535: This++;
 19041  0048F8  0100               	movlb	0	; () banked
 19042  0048FA  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19043  0048FC  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19044  0048FE  D000               	goto	l14600
 19045  004900                     l14600:
 19046                           
 19047                           ; BSR set to: 0
 19048  004900  C085  FFD9         	movff	GetNumber@This,fsr2l
 19049  004904  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19050  004908  0E78               	movlw	120
 19051  00490A  18DE               	xorwf	postinc2,w,c
 19052  00490C  B4D8               	btfsc	status,2,c
 19053  00490E  D108               	goto	l14656
 19054                           
 19055                           ; BSR set to: 0
 19056  004910  C085  FFD9         	movff	GetNumber@This,fsr2l
 19057  004914  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19058  004918  0E58               	movlw	88
 19059  00491A  18DE               	xorwf	postinc2,w,c
 19060  00491C  B4D8               	btfsc	status,2,c
 19061  00491E  D100               	goto	l14656
 19062  004920  D7EB               	goto	l14598
 19063                           
 19064                           ; BSR set to: 0
 19065  004922  D0FE               	goto	l14656
 19066                           
 19067                           ; BSR set to: 0
 19068  004924  D0FD               	goto	l14656
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;MISC.c: 538: }
 19072                           ;MISC.c: 539: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 19073                           
 19074                           ; BSR set to: 0
 19075                           ;MISC.c: 536: }
 19076                           ;MISC.c: 537: This++;
 19077  004926  D100               	goto	l14658
 19078  004928                     l14606:
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;MISC.c: 540: {
 19082                           ;MISC.c: 541: if(!Hex)
 19083  004928  0100               	movlb	0	; () banked
 19084  00492A  5192               	movf	GetNumber@Hex& (0+255),w,b
 19085  00492C  0100               	movlb	0	; () banked
 19086  00492E  A4D8               	btfss	status,2,c
 19087  004930  D05B               	goto	l14624
 19088                           
 19089                           ; BSR set to: 0
 19090                           ;MISC.c: 542: {
 19091                           ;MISC.c: 543: if(*This >=48 && *This <= 57)
 19092  004932  C085  FFD9         	movff	GetNumber@This,fsr2l
 19093  004936  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19094  00493A  0E2F               	movlw	47
 19095  00493C  64DF               	cpfsgt	indf2,c
 19096  00493E  D0F0               	goto	l14656
 19097                           
 19098                           ; BSR set to: 0
 19099  004940  C085  FFD9         	movff	GetNumber@This,fsr2l
 19100  004944  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19101  004948  0E3A               	movlw	58
 19102  00494A  60DF               	cpfslt	indf2,c
 19103  00494C  D0E9               	goto	l14656
 19104                           
 19105                           ; BSR set to: 0
 19106                           ;MISC.c: 544: {
 19107                           ;MISC.c: 545: temp = temp * 10;
 19108  00494E  C095  F079         	movff	GetNumber@temp,___lmul@multiplier
 19109  004952  C096  F07A         	movff	GetNumber@temp+1,___lmul@multiplier+1
 19110  004956  C097  F07B         	movff	GetNumber@temp+2,___lmul@multiplier+2
 19111  00495A  C098  F07C         	movff	GetNumber@temp+3,___lmul@multiplier+3
 19112  00495E  0E0A               	movlw	10
 19113  004960  0100               	movlb	0	; () banked
 19114  004962  6F7D               	movwf	___lmul@multiplicand& (0+255),b
 19115  004964  0E00               	movlw	0
 19116  004966  6F7E               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19117  004968  0E00               	movlw	0
 19118  00496A  6F7F               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19119  00496C  0E00               	movlw	0
 19120  00496E  6F80               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19121  004970  EC78  F044         	call	___lmul	;wreg free
 19122  004974  C079  F095         	movff	?___lmul,GetNumber@temp
 19123  004978  C07A  F096         	movff	?___lmul+1,GetNumber@temp+1
 19124  00497C  C07B  F097         	movff	?___lmul+2,GetNumber@temp+2
 19125  004980  C07C  F098         	movff	?___lmul+3,GetNumber@temp+3
 19126                           
 19127                           ;MISC.c: 546: temp += *This - 48;
 19128  004984  C085  FFD9         	movff	GetNumber@This,fsr2l
 19129  004988  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19130  00498C  50DF               	movf	indf2,w,c
 19131  00498E  0100               	movlb	0	; () banked
 19132  004990  6F8A               	movwf	??_GetNumber& (0+255),b
 19133  004992  0ED0               	movlw	208
 19134  004994  0100               	movlb	0	; () banked
 19135  004996  258A               	addwf	??_GetNumber& (0+255),w,b
 19136  004998  0100               	movlb	0	; () banked
 19137  00499A  6F8B               	movwf	(??_GetNumber+1)& (0+255),b
 19138  00499C  0100               	movlb	0	; () banked
 19139  00499E  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19140  0049A0  0EFF               	movlw	255
 19141  0049A2  238C               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19142  0049A4  0100               	movlb	0	; () banked
 19143  0049A6  6B8D               	clrf	(??_GetNumber+3)& (0+255),b
 19144  0049A8  0100               	movlb	0	; () banked
 19145  0049AA  BF8C               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19146  0049AC  078D               	decf	(??_GetNumber+3)& (0+255),f,b
 19147  0049AE  0100               	movlb	0	; () banked
 19148  0049B0  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19149  0049B2  0100               	movlb	0	; () banked
 19150  0049B4  6F8E               	movwf	(??_GetNumber+4)& (0+255),b
 19151  0049B6  0100               	movlb	0	; () banked
 19152  0049B8  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19153  0049BA  0100               	movlb	0	; () banked
 19154  0049BC  2795               	addwf	GetNumber@temp& (0+255),f,b
 19155  0049BE  0100               	movlb	0	; () banked
 19156  0049C0  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19157  0049C2  0100               	movlb	0	; () banked
 19158  0049C4  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19159  0049C6  0100               	movlb	0	; () banked
 19160  0049C8  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19161  0049CA  0100               	movlb	0	; () banked
 19162  0049CC  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19163  0049CE  0100               	movlb	0	; () banked
 19164  0049D0  518E               	movf	(??_GetNumber+4)& (0+255),w,b
 19165  0049D2  0100               	movlb	0	; () banked
 19166  0049D4  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19167                           
 19168                           ; BSR set to: 0
 19169                           ;MISC.c: 547: i++;
 19170  0049D6  0100               	movlb	0	; () banked
 19171  0049D8  2B93               	incf	GetNumber@i& (0+255),f,b
 19172  0049DA                     l14618:
 19173                           
 19174                           ; BSR set to: 0
 19175                           ;MISC.c: 548: if(i>32)
 19176  0049DA  0E20               	movlw	32
 19177  0049DC  0100               	movlb	0	; () banked
 19178  0049DE  6593               	cpfsgt	GetNumber@i& (0+255),b
 19179  0049E0  D09F               	goto	l14656
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;MISC.c: 549: {
 19183                           ;MISC.c: 550: return 4;
 19184  0049E2  0E04               	movlw	4
 19185                           
 19186                           ; BSR set to: 0
 19187  0049E4  0012               	return	
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;MISC.c: 551: }
 19191                           ;MISC.c: 552: }
 19192                           ;MISC.c: 553: }
 19193                           
 19194                           ; BSR set to: 0
 19195  0049E6  D09C               	goto	l14656
 19196  0049E8                     l14624:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;MISC.c: 554: else
 19200                           ;MISC.c: 555: {
 19201                           ;MISC.c: 556: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 19202  0049E8  C085  FFD9         	movff	GetNumber@This,fsr2l
 19203  0049EC  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19204  0049F0  0E2F               	movlw	47
 19205  0049F2  64DF               	cpfsgt	indf2,c
 19206  0049F4  D008               	goto	l14628
 19207                           
 19208                           ; BSR set to: 0
 19209  0049F6  C085  FFD9         	movff	GetNumber@This,fsr2l
 19210  0049FA  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19211  0049FE  0E39               	movlw	57
 19212  004A00  64DF               	cpfsgt	indf2,c
 19213  004A02  D01F               	goto	l14636
 19214  004A04  D000               	goto	l14628
 19215  004A06                     l14628:
 19216                           
 19217                           ; BSR set to: 0
 19218  004A06  C085  FFD9         	movff	GetNumber@This,fsr2l
 19219  004A0A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19220  004A0E  0E40               	movlw	64
 19221  004A10  64DF               	cpfsgt	indf2,c
 19222  004A12  D008               	goto	l14632
 19223                           
 19224                           ; BSR set to: 0
 19225  004A14  C085  FFD9         	movff	GetNumber@This,fsr2l
 19226  004A18  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19227  004A1C  0E46               	movlw	70
 19228  004A1E  64DF               	cpfsgt	indf2,c
 19229  004A20  D010               	goto	l14636
 19230  004A22  D000               	goto	l14632
 19231  004A24                     l14632:
 19232                           
 19233                           ; BSR set to: 0
 19234  004A24  C085  FFD9         	movff	GetNumber@This,fsr2l
 19235  004A28  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19236  004A2C  0E60               	movlw	96
 19237  004A2E  64DF               	cpfsgt	indf2,c
 19238  004A30  D077               	goto	l14656
 19239                           
 19240                           ; BSR set to: 0
 19241  004A32  C085  FFD9         	movff	GetNumber@This,fsr2l
 19242  004A36  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19243  004A3A  0E67               	movlw	103
 19244  004A3C  60DF               	cpfslt	indf2,c
 19245  004A3E  D070               	goto	l14656
 19246  004A40  D000               	goto	l14636
 19247  004A42                     l14636:
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;MISC.c: 557: {
 19251                           ;MISC.c: 558: temp <<= 4;
 19252  004A42  0100               	movlb	0	; () banked
 19253  004A44  0E04               	movlw	4
 19254  004A46                     u18085:
 19255  004A46  90D8               	bcf	status,0,c
 19256  004A48  3795               	rlcf	GetNumber@temp& (0+255),f,b
 19257  004A4A  3796               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 19258  004A4C  3797               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 19259  004A4E  3798               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 19260  004A50  2EE8               	decfsz	wreg,f,c
 19261  004A52  D7F9               	goto	u18085
 19262                           
 19263                           ; BSR set to: 0
 19264                           ;MISC.c: 559: tempThis = *This;
 19265  004A54  C085  FFD9         	movff	GetNumber@This,fsr2l
 19266  004A58  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19267  004A5C  50DF               	movf	indf2,w,c
 19268  004A5E  0100               	movlb	0	; () banked
 19269  004A60  6F94               	movwf	GetNumber@tempThis& (0+255),b
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;MISC.c: 560: if(IsLetter(tempThis))
 19273  004A62  0100               	movlb	0	; () banked
 19274  004A64  5194               	movf	GetNumber@tempThis& (0+255),w,b
 19275  004A66  ECE1  F048         	call	_IsLetter
 19276  004A6A  0900               	iorlw	0
 19277  004A6C  B4D8               	btfsc	status,2,c
 19278  004A6E  D029               	goto	l14646
 19279                           
 19280                           ;MISC.c: 561: {
 19281                           ;MISC.c: 562: lowercaseChar(&tempThis);
 19282  004A70  0E94               	movlw	low GetNumber@tempThis
 19283  004A72  0100               	movlb	0	; () banked
 19284  004A74  6F79               	movwf	lowercaseChar@Input& (0+255),b
 19285  004A76  0E00               	movlw	high GetNumber@tempThis
 19286  004A78  0100               	movlb	0	; () banked
 19287  004A7A  6F7A               	movwf	(lowercaseChar@Input+1)& (0+255),b
 19288  004A7C  ECA2  F048         	call	_lowercaseChar	;wreg free
 19289                           
 19290                           ;MISC.c: 563: temp += (tempThis - 87);
 19291  004A80  0EA9               	movlw	169
 19292  004A82  0100               	movlb	0	; () banked
 19293  004A84  2594               	addwf	GetNumber@tempThis& (0+255),w,b
 19294  004A86  0100               	movlb	0	; () banked
 19295  004A88  6F8A               	movwf	??_GetNumber& (0+255),b
 19296  004A8A  0100               	movlb	0	; () banked
 19297  004A8C  6B8B               	clrf	(??_GetNumber+1)& (0+255),b
 19298  004A8E  0EFF               	movlw	255
 19299  004A90  238B               	addwfc	(??_GetNumber+1)& (0+255),f,b
 19300  004A92  0100               	movlb	0	; () banked
 19301  004A94  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19302  004A96  0100               	movlb	0	; () banked
 19303  004A98  BF8B               	btfsc	(??_GetNumber+1)& (0+255),7,b
 19304  004A9A  078C               	decf	(??_GetNumber+2)& (0+255),f,b
 19305  004A9C  0100               	movlb	0	; () banked
 19306  004A9E  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19307  004AA0  0100               	movlb	0	; () banked
 19308  004AA2  6F8D               	movwf	(??_GetNumber+3)& (0+255),b
 19309  004AA4  0100               	movlb	0	; () banked
 19310  004AA6  518A               	movf	??_GetNumber& (0+255),w,b
 19311  004AA8  0100               	movlb	0	; () banked
 19312  004AAA  2795               	addwf	GetNumber@temp& (0+255),f,b
 19313  004AAC  0100               	movlb	0	; () banked
 19314  004AAE  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19315  004AB0  0100               	movlb	0	; () banked
 19316  004AB2  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19317  004AB4  0100               	movlb	0	; () banked
 19318  004AB6  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19319  004AB8  0100               	movlb	0	; () banked
 19320  004ABA  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19321  004ABC  0100               	movlb	0	; () banked
 19322  004ABE  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19323  004AC0  D027               	goto	L16
 19324  004AC2                     l14646:
 19325                           
 19326                           ;MISC.c: 565: else
 19327                           ;MISC.c: 566: {
 19328                           ;MISC.c: 567: temp += (*This - 48);
 19329  004AC2  C085  FFD9         	movff	GetNumber@This,fsr2l
 19330  004AC6  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19331  004ACA  50DF               	movf	indf2,w,c
 19332  004ACC  0100               	movlb	0	; () banked
 19333  004ACE  6F8A               	movwf	??_GetNumber& (0+255),b
 19334  004AD0  0ED0               	movlw	208
 19335  004AD2  0100               	movlb	0	; () banked
 19336  004AD4  258A               	addwf	??_GetNumber& (0+255),w,b
 19337  004AD6  0100               	movlb	0	; () banked
 19338  004AD8  6F8B               	movwf	(??_GetNumber+1)& (0+255),b
 19339  004ADA  0100               	movlb	0	; () banked
 19340  004ADC  6B8C               	clrf	(??_GetNumber+2)& (0+255),b
 19341  004ADE  0EFF               	movlw	255
 19342  004AE0  238C               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19343  004AE2  0100               	movlb	0	; () banked
 19344  004AE4  6B8D               	clrf	(??_GetNumber+3)& (0+255),b
 19345  004AE6  0100               	movlb	0	; () banked
 19346  004AE8  BF8C               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19347  004AEA  078D               	decf	(??_GetNumber+3)& (0+255),f,b
 19348  004AEC  0100               	movlb	0	; () banked
 19349  004AEE  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19350  004AF0  0100               	movlb	0	; () banked
 19351  004AF2  6F8E               	movwf	(??_GetNumber+4)& (0+255),b
 19352  004AF4  0100               	movlb	0	; () banked
 19353  004AF6  518B               	movf	(??_GetNumber+1)& (0+255),w,b
 19354  004AF8  0100               	movlb	0	; () banked
 19355  004AFA  2795               	addwf	GetNumber@temp& (0+255),f,b
 19356  004AFC  0100               	movlb	0	; () banked
 19357  004AFE  518C               	movf	(??_GetNumber+2)& (0+255),w,b
 19358  004B00  0100               	movlb	0	; () banked
 19359  004B02  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19360  004B04  0100               	movlb	0	; () banked
 19361  004B06  518D               	movf	(??_GetNumber+3)& (0+255),w,b
 19362  004B08  0100               	movlb	0	; () banked
 19363  004B0A  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19364  004B0C  0100               	movlb	0	; () banked
 19365  004B0E  518E               	movf	(??_GetNumber+4)& (0+255),w,b
 19366  004B10                     L16:
 19367  004B10  0100               	movlb	0	; () banked
 19368  004B12  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19369  004B14  D000               	goto	l14648
 19370  004B16                     l14648:
 19371                           
 19372                           ; BSR set to: 0
 19373                           ;MISC.c: 568: }
 19374                           ;MISC.c: 569: i++;
 19375  004B16  0100               	movlb	0	; () banked
 19376  004B18  2B93               	incf	GetNumber@i& (0+255),f,b
 19377  004B1A  D75F               	goto	l14618
 19378                           
 19379                           ; BSR set to: 0
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;MISC.c: 571: {
 19383                           ;MISC.c: 572: return 4;
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;MISC.c: 570: if(i>32)
 19387  004B1C  0012               	return	
 19388                           
 19389                           ; BSR set to: 0
 19390                           
 19391                           ; BSR set to: 0
 19392  004B1E  D000               	goto	l14656
 19393  004B20                     l14656:
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;MISC.c: 573: }
 19397                           ;MISC.c: 574: }
 19398                           ;MISC.c: 575: }
 19399                           ;MISC.c: 576: This++;
 19400  004B20  0100               	movlb	0	; () banked
 19401  004B22  4B85               	infsnz	GetNumber@This& (0+255),f,b
 19402  004B24  2B86               	incf	(GetNumber@This+1)& (0+255),f,b
 19403  004B26  D000               	goto	l14658
 19404  004B28                     l14658:
 19405                           
 19406                           ; BSR set to: 0
 19407  004B28  C085  FFD9         	movff	GetNumber@This,fsr2l
 19408  004B2C  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19409  004B30  50DF               	movf	indf2,w,c
 19410  004B32  B4D8               	btfsc	status,2,c
 19411  004B34  D01A               	goto	l14666
 19412                           
 19413                           ; BSR set to: 0
 19414  004B36  C085  FFD9         	movff	GetNumber@This,fsr2l
 19415  004B3A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19416  004B3E  0E20               	movlw	32
 19417  004B40  18DE               	xorwf	postinc2,w,c
 19418  004B42  B4D8               	btfsc	status,2,c
 19419  004B44  D012               	goto	l14666
 19420                           
 19421                           ; BSR set to: 0
 19422  004B46  C085  FFD9         	movff	GetNumber@This,fsr2l
 19423  004B4A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19424  004B4E  0E2C               	movlw	44
 19425  004B50  18DE               	xorwf	postinc2,w,c
 19426  004B52  B4D8               	btfsc	status,2,c
 19427  004B54  D00A               	goto	l14666
 19428                           
 19429                           ; BSR set to: 0
 19430  004B56  C085  FFD9         	movff	GetNumber@This,fsr2l
 19431  004B5A  C086  FFDA         	movff	GetNumber@This+1,fsr2h
 19432  004B5E  0E3D               	movlw	61
 19433  004B60  18DE               	xorwf	postinc2,w,c
 19434  004B62  B4D8               	btfsc	status,2,c
 19435  004B64  D002               	goto	l14666
 19436  004B66  D6E0               	goto	l14606
 19437                           
 19438                           ; BSR set to: 0
 19439  004B68  D000               	goto	l14666
 19440  004B6A                     l14666:
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;MISC.c: 577: }
 19444                           ;MISC.c: 578: if(negative)
 19445  004B6A  0100               	movlb	0	; () banked
 19446  004B6C  5190               	movf	GetNumber@negative& (0+255),w,b
 19447  004B6E  0100               	movlb	0	; () banked
 19448  004B70  B4D8               	btfsc	status,2,c
 19449  004B72  D00A               	goto	l14670
 19450                           
 19451                           ; BSR set to: 0
 19452                           ;MISC.c: 579: {
 19453                           ;MISC.c: 580: temp = (temp * -1);
 19454  004B74  0100               	movlb	0	; () banked
 19455  004B76  1F98               	comf	(GetNumber@temp+3)& (0+255),f,b
 19456  004B78  1F97               	comf	(GetNumber@temp+2)& (0+255),f,b
 19457  004B7A  1F96               	comf	(GetNumber@temp+1)& (0+255),f,b
 19458  004B7C  6D95               	negf	GetNumber@temp& (0+255),b
 19459  004B7E  0E00               	movlw	0
 19460  004B80  2396               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19461  004B82  2397               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19462  004B84  2398               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19463  004B86  D000               	goto	l14670
 19464  004B88                     l14670:
 19465                           
 19466                           ; BSR set to: 0
 19467                           ;MISC.c: 581: }
 19468                           ;MISC.c: 582: *result = temp;
 19469  004B88  C088  FFD9         	movff	GetNumber@result,fsr2l
 19470  004B8C  C089  FFDA         	movff	GetNumber@result+1,fsr2h
 19471  004B90  C095  FFDE         	movff	GetNumber@temp,postinc2
 19472  004B94  C096  FFDE         	movff	GetNumber@temp+1,postinc2
 19473  004B98  C097  FFDE         	movff	GetNumber@temp+2,postinc2
 19474  004B9C  C098  FFDE         	movff	GetNumber@temp+3,postinc2
 19475                           
 19476                           ; BSR set to: 0
 19477                           ;MISC.c: 583: return 0;
 19478  004BA0  0E00               	movlw	0
 19479  004BA2  0012               	return	
 19480                           
 19481                           ; BSR set to: 0
 19482                           
 19483                           ; BSR set to: 0
 19484  004BA4  0012               	return		;funcret
 19485  004BA6                     __end_of_GetNumber:
 19486                           	opt stack 0
 19487                           tblptru	equ	0xFF8
 19488                           tblptrh	equ	0xFF7
 19489                           tblptrl	equ	0xFF6
 19490                           tablat	equ	0xFF5
 19491                           prodh	equ	0xFF4
 19492                           prodl	equ	0xFF3
 19493                           intcon	equ	0xFF2
 19494                           indf0	equ	0xFEF
 19495                           postinc0	equ	0xFEE
 19496                           fsr0h	equ	0xFEA
 19497                           fsr0l	equ	0xFE9
 19498                           wreg	equ	0xFE8
 19499                           indf1	equ	0xFE7
 19500                           postdec1	equ	0xFE5
 19501                           fsr1h	equ	0xFE2
 19502                           fsr1l	equ	0xFE1
 19503                           indf2	equ	0xFDF
 19504                           postinc2	equ	0xFDE
 19505                           postdec2	equ	0xFDD
 19506                           fsr2h	equ	0xFDA
 19507                           fsr2l	equ	0xFD9
 19508                           status	equ	0xFD8
 19509                           
 19510 ;; *************** function _lowercaseChar *****************
 19511 ;; Defined at:
 19512 ;;		line 349 in file "MISC.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  Input           2   25[BANK0 ] PTR unsigned char 
 19515 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 19516 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 19517 ;; Auto vars:     Size  Location     Type
 19518 ;;		None
 19519 ;; Return value:  Size  Location     Type
 19520 ;;		None               void
 19521 ;; Registers used:
 19522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19523 ;; Tracked objects:
 19524 ;;		On entry : 0/0
 19525 ;;		On exit  : 0/0
 19526 ;;		Unchanged: 0/0
 19527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19531 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19532 ;;Total ram usage:        3 bytes
 19533 ;; Hardware stack levels used:    1
 19534 ;; Hardware stack levels required when called:    6
 19535 ;; This function calls:
 19536 ;;		Nothing
 19537 ;; This function is called by:
 19538 ;;		_StringMatchCaseInsensitive
 19539 ;;		_StringContainsCaseInsensitive
 19540 ;;		_GetNumber
 19541 ;; This function uses a non-reentrant model
 19542 ;;
 19543                           
 19544                           	psect	text31
 19545  009144                     __ptext31:
 19546                           	opt stack 0
 19547  009144                     _lowercaseChar:
 19548                           	opt stack 22
 19549                           
 19550                           ;MISC.c: 351: if((*Input >= 65) && (*Input <= 90 ))
 19551                           
 19552                           ; BSR set to: 0
 19553                           ;incstack = 0
 19554  009144  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19555  009148  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19556  00914C  0E40               	movlw	64
 19557  00914E  64DF               	cpfsgt	indf2,c
 19558  009150  0012               	return	
 19559  009152  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19560  009156  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19561  00915A  0E5B               	movlw	91
 19562  00915C  60DF               	cpfslt	indf2,c
 19563  00915E  0012               	return	
 19564                           
 19565                           ;MISC.c: 352: {
 19566                           ;MISC.c: 353: *Input += 32;
 19567  009160  C079  FFD9         	movff	lowercaseChar@Input,fsr2l
 19568  009164  C07A  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19569  009168  0E20               	movlw	32
 19570  00916A  26DF               	addwf	indf2,f,c
 19571  00916C  0012               	return	
 19572  00916E  0012               	return		;funcret
 19573  009170                     __end_of_lowercaseChar:
 19574                           	opt stack 0
 19575                           tblptru	equ	0xFF8
 19576                           tblptrh	equ	0xFF7
 19577                           tblptrl	equ	0xFF6
 19578                           tablat	equ	0xFF5
 19579                           prodh	equ	0xFF4
 19580                           prodl	equ	0xFF3
 19581                           intcon	equ	0xFF2
 19582                           indf0	equ	0xFEF
 19583                           postinc0	equ	0xFEE
 19584                           fsr0h	equ	0xFEA
 19585                           fsr0l	equ	0xFE9
 19586                           wreg	equ	0xFE8
 19587                           indf1	equ	0xFE7
 19588                           postdec1	equ	0xFE5
 19589                           fsr1h	equ	0xFE2
 19590                           fsr1l	equ	0xFE1
 19591                           indf2	equ	0xFDF
 19592                           postinc2	equ	0xFDE
 19593                           postdec2	equ	0xFDD
 19594                           fsr2h	equ	0xFDA
 19595                           fsr2l	equ	0xFD9
 19596                           status	equ	0xFD8
 19597                           
 19598 ;; *************** function ___lmul *****************
 19599 ;; Defined at:
 19600 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 19601 ;; Parameters:    Size  Location     Type
 19602 ;;  multiplier      4   25[BANK0 ] unsigned long 
 19603 ;;  multiplicand    4   29[BANK0 ] unsigned long 
 19604 ;; Auto vars:     Size  Location     Type
 19605 ;;  product         4   33[BANK0 ] unsigned long 
 19606 ;; Return value:  Size  Location     Type
 19607 ;;                  4   25[BANK0 ] unsigned long 
 19608 ;; Registers used:
 19609 ;;		wreg, status,2, status,0
 19610 ;; Tracked objects:
 19611 ;;		On entry : 0/0
 19612 ;;		On exit  : 0/0
 19613 ;;		Unchanged: 0/0
 19614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19618 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19619 ;;Total ram usage:       12 bytes
 19620 ;; Hardware stack levels used:    1
 19621 ;; Hardware stack levels required when called:    6
 19622 ;; This function calls:
 19623 ;;		Nothing
 19624 ;; This function is called by:
 19625 ;;		_GetNumber
 19626 ;; This function uses a non-reentrant model
 19627 ;;
 19628                           
 19629                           	psect	text32
 19630  0088F0                     __ptext32:
 19631                           	opt stack 0
 19632  0088F0                     ___lmul:
 19633                           	opt stack 22
 19634                           
 19635                           ;incstack = 0
 19636  0088F0  0E00               	movlw	0
 19637  0088F2  0100               	movlb	0	; () banked
 19638  0088F4  6F81               	movwf	___lmul@product& (0+255),b
 19639  0088F6  0E00               	movlw	0
 19640  0088F8  6F82               	movwf	(___lmul@product+1)& (0+255),b
 19641  0088FA  0E00               	movlw	0
 19642  0088FC  6F83               	movwf	(___lmul@product+2)& (0+255),b
 19643  0088FE  0E00               	movlw	0
 19644  008900  6F84               	movwf	(___lmul@product+3)& (0+255),b
 19645  008902  D000               	goto	l14112
 19646  008904                     l14112:
 19647                           
 19648                           ; BSR set to: 0
 19649  008904  0100               	movlb	0	; () banked
 19650  008906  A179               	btfss	___lmul@multiplier& (0+255),0,b
 19651  008908  D011               	goto	l14116
 19652                           
 19653                           ; BSR set to: 0
 19654  00890A  0100               	movlb	0	; () banked
 19655  00890C  517D               	movf	___lmul@multiplicand& (0+255),w,b
 19656  00890E  0100               	movlb	0	; () banked
 19657  008910  2781               	addwf	___lmul@product& (0+255),f,b
 19658  008912  0100               	movlb	0	; () banked
 19659  008914  517E               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19660  008916  0100               	movlb	0	; () banked
 19661  008918  2382               	addwfc	(___lmul@product+1)& (0+255),f,b
 19662  00891A  0100               	movlb	0	; () banked
 19663  00891C  517F               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19664  00891E  0100               	movlb	0	; () banked
 19665  008920  2383               	addwfc	(___lmul@product+2)& (0+255),f,b
 19666  008922  0100               	movlb	0	; () banked
 19667  008924  5180               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19668  008926  0100               	movlb	0	; () banked
 19669  008928  2384               	addwfc	(___lmul@product+3)& (0+255),f,b
 19670  00892A  D000               	goto	l14116
 19671  00892C                     l14116:
 19672                           
 19673                           ; BSR set to: 0
 19674  00892C  0100               	movlb	0	; () banked
 19675  00892E  90D8               	bcf	status,0,c
 19676  008930  377D               	rlcf	___lmul@multiplicand& (0+255),f,b
 19677  008932  377E               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19678  008934  377F               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19679  008936  3780               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19680                           
 19681                           ; BSR set to: 0
 19682  008938  0100               	movlb	0	; () banked
 19683  00893A  90D8               	bcf	status,0,c
 19684  00893C  337C               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19685  00893E  337B               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19686  008940  337A               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19687  008942  3379               	rrcf	___lmul@multiplier& (0+255),f,b
 19688  008944  0100               	movlb	0	; () banked
 19689  008946  5179               	movf	___lmul@multiplier& (0+255),w,b
 19690  008948  0100               	movlb	0	; () banked
 19691  00894A  117A               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19692  00894C  0100               	movlb	0	; () banked
 19693  00894E  117B               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19694  008950  0100               	movlb	0	; () banked
 19695  008952  117C               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19696  008954  A4D8               	btfss	status,2,c
 19697  008956  D7D6               	goto	l14112
 19698                           
 19699                           ; BSR set to: 0
 19700  008958  C081  F079         	movff	___lmul@product,?___lmul
 19701  00895C  C082  F07A         	movff	___lmul@product+1,?___lmul+1
 19702  008960  C083  F07B         	movff	___lmul@product+2,?___lmul+2
 19703  008964  C084  F07C         	movff	___lmul@product+3,?___lmul+3
 19704                           
 19705                           ; BSR set to: 0
 19706  008968  0012               	return		;funcret
 19707  00896A                     __end_of___lmul:
 19708                           	opt stack 0
 19709                           tblptru	equ	0xFF8
 19710                           tblptrh	equ	0xFF7
 19711                           tblptrl	equ	0xFF6
 19712                           tablat	equ	0xFF5
 19713                           prodh	equ	0xFF4
 19714                           prodl	equ	0xFF3
 19715                           intcon	equ	0xFF2
 19716                           indf0	equ	0xFEF
 19717                           postinc0	equ	0xFEE
 19718                           fsr0h	equ	0xFEA
 19719                           fsr0l	equ	0xFE9
 19720                           wreg	equ	0xFE8
 19721                           indf1	equ	0xFE7
 19722                           postdec1	equ	0xFE5
 19723                           fsr1h	equ	0xFE2
 19724                           fsr1l	equ	0xFE1
 19725                           indf2	equ	0xFDF
 19726                           postinc2	equ	0xFDE
 19727                           postdec2	equ	0xFDD
 19728                           fsr2h	equ	0xFDA
 19729                           fsr2l	equ	0xFD9
 19730                           status	equ	0xFD8
 19731                           
 19732 ;; *************** function _IsLetter *****************
 19733 ;; Defined at:
 19734 ;;		line 99 in file "MISC.c"
 19735 ;; Parameters:    Size  Location     Type
 19736 ;;  data            1    wreg     unsigned char 
 19737 ;; Auto vars:     Size  Location     Type
 19738 ;;  data            1   25[BANK0 ] unsigned char 
 19739 ;; Return value:  Size  Location     Type
 19740 ;;                  1    wreg      unsigned char 
 19741 ;; Registers used:
 19742 ;;		wreg, status,2, status,0
 19743 ;; Tracked objects:
 19744 ;;		On entry : 0/0
 19745 ;;		On exit  : 0/0
 19746 ;;		Unchanged: 0/0
 19747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19752 ;;Total ram usage:        1 bytes
 19753 ;; Hardware stack levels used:    1
 19754 ;; Hardware stack levels required when called:    6
 19755 ;; This function calls:
 19756 ;;		Nothing
 19757 ;; This function is called by:
 19758 ;;		_GetNumber
 19759 ;; This function uses a non-reentrant model
 19760 ;;
 19761                           
 19762                           	psect	text33
 19763  0091C2                     __ptext33:
 19764                           	opt stack 0
 19765  0091C2                     _IsLetter:
 19766                           	opt stack 22
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;incstack = 0
 19770                           ;IsLetter@data stored from wreg
 19771  0091C2  0100               	movlb	0	; () banked
 19772  0091C4  6F79               	movwf	IsLetter@data& (0+255),b
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;MISC.c: 101: if(data >= 65 && data <= 90)
 19776  0091C6  0E40               	movlw	64
 19777  0091C8  0100               	movlb	0	; () banked
 19778  0091CA  6579               	cpfsgt	IsLetter@data& (0+255),b
 19779  0091CC  D006               	goto	l13700
 19780                           
 19781                           ; BSR set to: 0
 19782  0091CE  0E5B               	movlw	91
 19783  0091D0  0100               	movlb	0	; () banked
 19784  0091D2  6179               	cpfslt	IsLetter@data& (0+255),b
 19785  0091D4  D002               	goto	l13700
 19786                           
 19787                           ; BSR set to: 0
 19788                           ;MISC.c: 102: {
 19789                           ;MISC.c: 103: return 1;
 19790  0091D6  0E01               	movlw	1
 19791                           
 19792                           ; BSR set to: 0
 19793  0091D8  0012               	return	
 19794  0091DA                     l13700:
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;MISC.c: 104: }
 19798                           ;MISC.c: 105: return 0;
 19799  0091DA  0E00               	movlw	0
 19800  0091DC  0012               	return	
 19801                           
 19802                           ; BSR set to: 0
 19803                           
 19804                           ; BSR set to: 0
 19805  0091DE  0012               	return		;funcret
 19806  0091E0                     __end_of_IsLetter:
 19807                           	opt stack 0
 19808                           tblptru	equ	0xFF8
 19809                           tblptrh	equ	0xFF7
 19810                           tblptrl	equ	0xFF6
 19811                           tablat	equ	0xFF5
 19812                           prodh	equ	0xFF4
 19813                           prodl	equ	0xFF3
 19814                           intcon	equ	0xFF2
 19815                           indf0	equ	0xFEF
 19816                           postinc0	equ	0xFEE
 19817                           fsr0h	equ	0xFEA
 19818                           fsr0l	equ	0xFE9
 19819                           wreg	equ	0xFE8
 19820                           indf1	equ	0xFE7
 19821                           postdec1	equ	0xFE5
 19822                           fsr1h	equ	0xFE2
 19823                           fsr1l	equ	0xFE1
 19824                           indf2	equ	0xFDF
 19825                           postinc2	equ	0xFDE
 19826                           postdec2	equ	0xFDD
 19827                           fsr2h	equ	0xFDA
 19828                           fsr2l	equ	0xFD9
 19829                           status	equ	0xFD8
 19830                           
 19831 ;; *************** function _EncodeNEC *****************
 19832 ;; Defined at:
 19833 ;;		line 532 in file "IR.c"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;  address         1    wreg     unsigned char 
 19836 ;;  command         1   29[BANK0 ] unsigned char 
 19837 ;; Auto vars:     Size  Location     Type
 19838 ;;  address         1   69[BANK0 ] unsigned char 
 19839 ;;  temp4           4   65[BANK0 ] unsigned long 
 19840 ;;  temp3           4   61[BANK0 ] unsigned long 
 19841 ;;  temp2           4   57[BANK0 ] unsigned long 
 19842 ;;  temp1           4   53[BANK0 ] unsigned long 
 19843 ;; Return value:  Size  Location     Type
 19844 ;;                  4   29[BANK0 ] unsigned long 
 19845 ;; Registers used:
 19846 ;;		wreg, status,2, status,0, cstack
 19847 ;; Tracked objects:
 19848 ;;		On entry : 0/0
 19849 ;;		On exit  : 0/0
 19850 ;;		Unchanged: 0/0
 19851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19852 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19853 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19856 ;;Total ram usage:       41 bytes
 19857 ;; Hardware stack levels used:    1
 19858 ;; Hardware stack levels required when called:    7
 19859 ;; This function calls:
 19860 ;;		_Reverse_Byte
 19861 ;; This function is called by:
 19862 ;;		_UseBluetooth
 19863 ;; This function uses a non-reentrant model
 19864 ;;
 19865                           
 19866                           	psect	text34
 19867  007132                     __ptext34:
 19868                           	opt stack 0
 19869  007132                     _EncodeNEC:
 19870                           	opt stack 22
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;incstack = 0
 19874                           ;EncodeNEC@address stored from wreg
 19875  007132  0100               	movlb	0	; () banked
 19876  007134  6FA5               	movwf	EncodeNEC@address& (0+255),b
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;IR.c: 534: unsigned long temp1,
 19880                           ;IR.c: 535: temp2,
 19881                           ;IR.c: 536: temp3,
 19882                           ;IR.c: 537: temp4;
 19883                           ;IR.c: 545: temp1 = (unsigned long) Reverse_Byte(address);
 19884  007136  0100               	movlb	0	; () banked
 19885  007138  51A5               	movf	EncodeNEC@address& (0+255),w,b
 19886  00713A  ECF5  F03F         	call	_Reverse_Byte
 19887  00713E  0100               	movlb	0	; () banked
 19888  007140  6F81               	movwf	??_EncodeNEC& (0+255),b
 19889  007142  0100               	movlb	0	; () banked
 19890  007144  5181               	movf	??_EncodeNEC& (0+255),w,b
 19891  007146  0100               	movlb	0	; () banked
 19892  007148  6F95               	movwf	EncodeNEC@temp1& (0+255),b
 19893  00714A  6B96               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 19894  00714C  6B97               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 19895  00714E  6B98               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 19896                           
 19897                           ;IR.c: 546: temp2 = (unsigned long) Reverse_Byte(~address);
 19898  007150  0100               	movlb	0	; () banked
 19899  007152  51A5               	movf	EncodeNEC@address& (0+255),w,b
 19900  007154  0AFF               	xorlw	255
 19901  007156  ECF5  F03F         	call	_Reverse_Byte
 19902  00715A  0100               	movlb	0	; () banked
 19903  00715C  6F81               	movwf	??_EncodeNEC& (0+255),b
 19904  00715E  0100               	movlb	0	; () banked
 19905  007160  5181               	movf	??_EncodeNEC& (0+255),w,b
 19906  007162  0100               	movlb	0	; () banked
 19907  007164  6F99               	movwf	EncodeNEC@temp2& (0+255),b
 19908  007166  6B9A               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 19909  007168  6B9B               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 19910  00716A  6B9C               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 19911                           
 19912                           ;IR.c: 547: temp3 = (unsigned long) Reverse_Byte(command);
 19913  00716C  0100               	movlb	0	; () banked
 19914  00716E  517D               	movf	EncodeNEC@command& (0+255),w,b
 19915  007170  ECF5  F03F         	call	_Reverse_Byte
 19916  007174  0100               	movlb	0	; () banked
 19917  007176  6F81               	movwf	??_EncodeNEC& (0+255),b
 19918  007178  0100               	movlb	0	; () banked
 19919  00717A  5181               	movf	??_EncodeNEC& (0+255),w,b
 19920  00717C  0100               	movlb	0	; () banked
 19921  00717E  6F9D               	movwf	EncodeNEC@temp3& (0+255),b
 19922  007180  6B9E               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 19923  007182  6B9F               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 19924  007184  6BA0               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 19925                           
 19926                           ;IR.c: 548: temp4 = (unsigned long) Reverse_Byte(~command);
 19927  007186  0100               	movlb	0	; () banked
 19928  007188  517D               	movf	EncodeNEC@command& (0+255),w,b
 19929  00718A  0AFF               	xorlw	255
 19930  00718C  ECF5  F03F         	call	_Reverse_Byte
 19931  007190  0100               	movlb	0	; () banked
 19932  007192  6F81               	movwf	??_EncodeNEC& (0+255),b
 19933  007194  0100               	movlb	0	; () banked
 19934  007196  5181               	movf	??_EncodeNEC& (0+255),w,b
 19935  007198  0100               	movlb	0	; () banked
 19936  00719A  6FA1               	movwf	EncodeNEC@temp4& (0+255),b
 19937  00719C  6BA2               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 19938  00719E  6BA3               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 19939  0071A0  6BA4               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;IR.c: 550: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 19943  0071A2  C09D  F082         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 19944  0071A6  C09E  F083         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 19945  0071AA  C09F  F084         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 19946  0071AE  0100               	movlb	0	; () banked
 19947  0071B0  6B81               	clrf	??_EncodeNEC& (0+255),b
 19948  0071B2  C099  F085         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 19949  0071B6  C09A  F086         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 19950  0071BA  C09B  F087         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 19951  0071BE  C09C  F088         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 19952  0071C2  C086  F088         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 19953  0071C6  C085  F087         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 19954  0071CA  0100               	movlb	0	; () banked
 19955  0071CC  6B86               	clrf	(??_EncodeNEC+5)& (0+255),b
 19956  0071CE  6B85               	clrf	(??_EncodeNEC+4)& (0+255),b
 19957  0071D0  C095  F089         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 19958  0071D4  C096  F08A         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 19959  0071D8  C097  F08B         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 19960  0071DC  C098  F08C         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 19961  0071E0  C089  F08C         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 19962  0071E4  0100               	movlb	0	; () banked
 19963  0071E6  6B8B               	clrf	(??_EncodeNEC+10)& (0+255),b
 19964  0071E8  6B8A               	clrf	(??_EncodeNEC+9)& (0+255),b
 19965  0071EA  6B89               	clrf	(??_EncodeNEC+8)& (0+255),b
 19966  0071EC  0100               	movlb	0	; () banked
 19967  0071EE  5185               	movf	(??_EncodeNEC+4)& (0+255),w,b
 19968  0071F0  0100               	movlb	0	; () banked
 19969  0071F2  2589               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 19970  0071F4  0100               	movlb	0	; () banked
 19971  0071F6  6F8D               	movwf	(??_EncodeNEC+12)& (0+255),b
 19972  0071F8  0100               	movlb	0	; () banked
 19973  0071FA  5186               	movf	(??_EncodeNEC+5)& (0+255),w,b
 19974  0071FC  0100               	movlb	0	; () banked
 19975  0071FE  218A               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 19976  007200  0100               	movlb	0	; () banked
 19977  007202  6F8E               	movwf	(??_EncodeNEC+13)& (0+255),b
 19978  007204  0100               	movlb	0	; () banked
 19979  007206  5187               	movf	(??_EncodeNEC+6)& (0+255),w,b
 19980  007208  0100               	movlb	0	; () banked
 19981  00720A  218B               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 19982  00720C  0100               	movlb	0	; () banked
 19983  00720E  6F8F               	movwf	(??_EncodeNEC+14)& (0+255),b
 19984  007210  0100               	movlb	0	; () banked
 19985  007212  5188               	movf	(??_EncodeNEC+7)& (0+255),w,b
 19986  007214  0100               	movlb	0	; () banked
 19987  007216  218C               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 19988  007218  0100               	movlb	0	; () banked
 19989  00721A  6F90               	movwf	(??_EncodeNEC+15)& (0+255),b
 19990  00721C  0100               	movlb	0	; () banked
 19991  00721E  5181               	movf	??_EncodeNEC& (0+255),w,b
 19992  007220  0100               	movlb	0	; () banked
 19993  007222  258D               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 19994  007224  0100               	movlb	0	; () banked
 19995  007226  6F91               	movwf	(??_EncodeNEC+16)& (0+255),b
 19996  007228  0100               	movlb	0	; () banked
 19997  00722A  5182               	movf	(??_EncodeNEC+1)& (0+255),w,b
 19998  00722C  0100               	movlb	0	; () banked
 19999  00722E  218E               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 20000  007230  0100               	movlb	0	; () banked
 20001  007232  6F92               	movwf	(??_EncodeNEC+17)& (0+255),b
 20002  007234  0100               	movlb	0	; () banked
 20003  007236  5183               	movf	(??_EncodeNEC+2)& (0+255),w,b
 20004  007238  0100               	movlb	0	; () banked
 20005  00723A  218F               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 20006  00723C  0100               	movlb	0	; () banked
 20007  00723E  6F93               	movwf	(??_EncodeNEC+18)& (0+255),b
 20008  007240  0100               	movlb	0	; () banked
 20009  007242  5184               	movf	(??_EncodeNEC+3)& (0+255),w,b
 20010  007244  0100               	movlb	0	; () banked
 20011  007246  2190               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 20012  007248  0100               	movlb	0	; () banked
 20013  00724A  6F94               	movwf	(??_EncodeNEC+19)& (0+255),b
 20014  00724C  0100               	movlb	0	; () banked
 20015  00724E  51A1               	movf	EncodeNEC@temp4& (0+255),w,b
 20016  007250  0100               	movlb	0	; () banked
 20017  007252  2591               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 20018  007254  0100               	movlb	0	; () banked
 20019  007256  6F7D               	movwf	?_EncodeNEC& (0+255),b
 20020  007258  0100               	movlb	0	; () banked
 20021  00725A  51A2               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 20022  00725C  0100               	movlb	0	; () banked
 20023  00725E  2192               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 20024  007260  0100               	movlb	0	; () banked
 20025  007262  6F7E               	movwf	(?_EncodeNEC+1)& (0+255),b
 20026  007264  0100               	movlb	0	; () banked
 20027  007266  51A3               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 20028  007268  0100               	movlb	0	; () banked
 20029  00726A  2193               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 20030  00726C  0100               	movlb	0	; () banked
 20031  00726E  6F7F               	movwf	(?_EncodeNEC+2)& (0+255),b
 20032  007270  0100               	movlb	0	; () banked
 20033  007272  51A4               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 20034  007274  0100               	movlb	0	; () banked
 20035  007276  2194               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 20036  007278  0100               	movlb	0	; () banked
 20037  00727A  6F80               	movwf	(?_EncodeNEC+3)& (0+255),b
 20038  00727C  0012               	return	
 20039                           
 20040                           ; BSR set to: 0
 20041                           
 20042                           ; BSR set to: 0
 20043  00727E  0012               	return		;funcret
 20044  007280                     __end_of_EncodeNEC:
 20045                           	opt stack 0
 20046                           tblptru	equ	0xFF8
 20047                           tblptrh	equ	0xFF7
 20048                           tblptrl	equ	0xFF6
 20049                           tablat	equ	0xFF5
 20050                           prodh	equ	0xFF4
 20051                           prodl	equ	0xFF3
 20052                           intcon	equ	0xFF2
 20053                           indf0	equ	0xFEF
 20054                           postinc0	equ	0xFEE
 20055                           fsr0h	equ	0xFEA
 20056                           fsr0l	equ	0xFE9
 20057                           wreg	equ	0xFE8
 20058                           indf1	equ	0xFE7
 20059                           postdec1	equ	0xFE5
 20060                           fsr1h	equ	0xFE2
 20061                           fsr1l	equ	0xFE1
 20062                           indf2	equ	0xFDF
 20063                           postinc2	equ	0xFDE
 20064                           postdec2	equ	0xFDD
 20065                           fsr2h	equ	0xFDA
 20066                           fsr2l	equ	0xFD9
 20067                           status	equ	0xFD8
 20068                           
 20069 ;; *************** function _DecodeNEC *****************
 20070 ;; Defined at:
 20071 ;;		line 558 in file "IR.c"
 20072 ;; Parameters:    Size  Location     Type
 20073 ;;  Nec             4   29[BANK0 ] unsigned long 
 20074 ;;  address         2   33[BANK0 ] PTR unsigned char 
 20075 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 20076 ;;  command         2   35[BANK0 ] PTR unsigned char 
 20077 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 20078 ;; Auto vars:     Size  Location     Type
 20079 ;;  temp1           1   43[BANK0 ] unsigned char 
 20080 ;;  temp3           1   42[BANK0 ] unsigned char 
 20081 ;;  temp2           1   41[BANK0 ] unsigned char 
 20082 ;; Return value:  Size  Location     Type
 20083 ;;                  1    wreg      unsigned char 
 20084 ;; Registers used:
 20085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20086 ;; Tracked objects:
 20087 ;;		On entry : 0/0
 20088 ;;		On exit  : 0/0
 20089 ;;		Unchanged: 0/0
 20090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20091 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20092 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20093 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20094 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20095 ;;Total ram usage:       15 bytes
 20096 ;; Hardware stack levels used:    1
 20097 ;; Hardware stack levels required when called:    7
 20098 ;; This function calls:
 20099 ;;		_Reverse_Byte
 20100 ;; This function is called by:
 20101 ;;		_UseIRCode
 20102 ;;		_UseBluetooth
 20103 ;; This function uses a non-reentrant model
 20104 ;;
 20105                           
 20106                           	psect	text35
 20107  008206                     __ptext35:
 20108                           	opt stack 0
 20109  008206                     _DecodeNEC:
 20110                           	opt stack 22
 20111                           
 20112                           ;IR.c: 560: unsigned char temp1,
 20113                           ;IR.c: 561: temp2,
 20114                           ;IR.c: 562: temp3;
 20115                           ;IR.c: 564: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;incstack = 0
 20119  008206  0100               	movlb	0	; () banked
 20120  008208  517D               	movf	DecodeNEC@Nec& (0+255),w,b
 20121  00820A  ECF5  F03F         	call	_Reverse_Byte
 20122  00820E  0AFF               	xorlw	255
 20123  008210  0100               	movlb	0	; () banked
 20124  008212  6F8B               	movwf	DecodeNEC@temp1& (0+255),b
 20125                           
 20126                           ;IR.c: 565: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 20127  008214  0100               	movlb	0	; () banked
 20128  008216  517E               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 20129  008218  ECF5  F03F         	call	_Reverse_Byte
 20130  00821C  0100               	movlb	0	; () banked
 20131  00821E  6F89               	movwf	DecodeNEC@temp2& (0+255),b
 20132                           
 20133                           ; BSR set to: 0
 20134                           ;IR.c: 566: if(temp1 != temp2)
 20135  008220  0100               	movlb	0	; () banked
 20136  008222  5189               	movf	DecodeNEC@temp2& (0+255),w,b
 20137  008224  0100               	movlb	0	; () banked
 20138  008226  198B               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20139  008228  B4D8               	btfsc	status,2,c
 20140  00822A  D002               	goto	l14836
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;IR.c: 567: {
 20144                           ;IR.c: 569: return 0;
 20145  00822C  0E00               	movlw	0
 20146                           
 20147                           ; BSR set to: 0
 20148  00822E  0012               	return	
 20149  008230                     l14836:
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;IR.c: 570: }
 20153                           ;IR.c: 571: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 20154  008230  0100               	movlb	0	; () banked
 20155  008232  517F               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 20156  008234  ECF5  F03F         	call	_Reverse_Byte
 20157  008238  0AFF               	xorlw	255
 20158  00823A  0100               	movlb	0	; () banked
 20159  00823C  6F8B               	movwf	DecodeNEC@temp1& (0+255),b
 20160                           
 20161                           ;IR.c: 572: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 20162  00823E  0E00               	movlw	0
 20163  008240  0100               	movlb	0	; () banked
 20164  008242  157D               	andwf	DecodeNEC@Nec& (0+255),w,b
 20165  008244  0100               	movlb	0	; () banked
 20166  008246  6F85               	movwf	??_DecodeNEC& (0+255),b
 20167  008248  0E00               	movlw	0
 20168  00824A  0100               	movlb	0	; () banked
 20169  00824C  157E               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 20170  00824E  0100               	movlb	0	; () banked
 20171  008250  6F86               	movwf	(??_DecodeNEC+1)& (0+255),b
 20172  008252  0E00               	movlw	0
 20173  008254  0100               	movlb	0	; () banked
 20174  008256  157F               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 20175  008258  0100               	movlb	0	; () banked
 20176  00825A  6F87               	movwf	(??_DecodeNEC+2)& (0+255),b
 20177  00825C  0EFF               	movlw	255
 20178  00825E  0100               	movlb	0	; () banked
 20179  008260  1580               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 20180  008262  0100               	movlb	0	; () banked
 20181  008264  6F88               	movwf	(??_DecodeNEC+3)& (0+255),b
 20182  008266  0E19               	movlw	25
 20183  008268  D006               	goto	u18450
 20184  00826A                     u18455:
 20185  00826A  0100               	movlb	0	; () banked
 20186  00826C  90D8               	bcf	status,0,c
 20187  00826E  3388               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 20188  008270  3387               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 20189  008272  3386               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 20190  008274  3385               	rrcf	??_DecodeNEC& (0+255),f,b
 20191  008276                     u18450:
 20192  008276  2EE8               	decfsz	wreg,f,c
 20193  008278  D7F8               	goto	u18455
 20194  00827A  0100               	movlb	0	; () banked
 20195  00827C  5185               	movf	??_DecodeNEC& (0+255),w,b
 20196  00827E  ECF5  F03F         	call	_Reverse_Byte
 20197  008282  0100               	movlb	0	; () banked
 20198  008284  6F8A               	movwf	DecodeNEC@temp3& (0+255),b
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;IR.c: 573: if(temp1 != temp3)
 20202  008286  0100               	movlb	0	; () banked
 20203  008288  518A               	movf	DecodeNEC@temp3& (0+255),w,b
 20204  00828A  0100               	movlb	0	; () banked
 20205  00828C  198B               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20206  00828E  B4D8               	btfsc	status,2,c
 20207  008290  D002               	goto	l14844
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;IR.c: 574: {
 20211                           ;IR.c: 576: return 0;
 20212  008292  0E00               	movlw	0
 20213                           
 20214                           ; BSR set to: 0
 20215  008294  0012               	return	
 20216  008296                     l14844:
 20217                           
 20218                           ; BSR set to: 0
 20219                           ;IR.c: 577: }
 20220                           ;IR.c: 578: *command = temp2;
 20221  008296  C083  FFD9         	movff	DecodeNEC@command,fsr2l
 20222  00829A  C084  FFDA         	movff	DecodeNEC@command+1,fsr2h
 20223  00829E  C089  FFDF         	movff	DecodeNEC@temp2,indf2
 20224                           
 20225                           ;IR.c: 579: *address = temp3;
 20226  0082A2  C081  FFD9         	movff	DecodeNEC@address,fsr2l
 20227  0082A6  C082  FFDA         	movff	DecodeNEC@address+1,fsr2h
 20228  0082AA  C08A  FFDF         	movff	DecodeNEC@temp3,indf2
 20229                           
 20230                           ; BSR set to: 0
 20231                           ;IR.c: 580: return 1;
 20232  0082AE  0E01               	movlw	1
 20233  0082B0  0012               	return	
 20234                           
 20235                           ; BSR set to: 0
 20236                           
 20237                           ; BSR set to: 0
 20238  0082B2  0012               	return		;funcret
 20239  0082B4                     __end_of_DecodeNEC:
 20240                           	opt stack 0
 20241                           tblptru	equ	0xFF8
 20242                           tblptrh	equ	0xFF7
 20243                           tblptrl	equ	0xFF6
 20244                           tablat	equ	0xFF5
 20245                           prodh	equ	0xFF4
 20246                           prodl	equ	0xFF3
 20247                           intcon	equ	0xFF2
 20248                           indf0	equ	0xFEF
 20249                           postinc0	equ	0xFEE
 20250                           fsr0h	equ	0xFEA
 20251                           fsr0l	equ	0xFE9
 20252                           wreg	equ	0xFE8
 20253                           indf1	equ	0xFE7
 20254                           postdec1	equ	0xFE5
 20255                           fsr1h	equ	0xFE2
 20256                           fsr1l	equ	0xFE1
 20257                           indf2	equ	0xFDF
 20258                           postinc2	equ	0xFDE
 20259                           postdec2	equ	0xFDD
 20260                           fsr2h	equ	0xFDA
 20261                           fsr2l	equ	0xFD9
 20262                           status	equ	0xFD8
 20263                           
 20264 ;; *************** function _Reverse_Byte *****************
 20265 ;; Defined at:
 20266 ;;		line 362 in file "MISC.c"
 20267 ;; Parameters:    Size  Location     Type
 20268 ;;  This            1    wreg     unsigned char 
 20269 ;; Auto vars:     Size  Location     Type
 20270 ;;  This            1   28[BANK0 ] unsigned char 
 20271 ;;  temp            1   27[BANK0 ] unsigned char 
 20272 ;; Return value:  Size  Location     Type
 20273 ;;                  1    wreg      unsigned char 
 20274 ;; Registers used:
 20275 ;;		wreg, status,2, status,0
 20276 ;; Tracked objects:
 20277 ;;		On entry : 0/0
 20278 ;;		On exit  : 0/0
 20279 ;;		Unchanged: 0/0
 20280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20282 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20283 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20284 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;Total ram usage:        4 bytes
 20286 ;; Hardware stack levels used:    1
 20287 ;; Hardware stack levels required when called:    6
 20288 ;; This function calls:
 20289 ;;		Nothing
 20290 ;; This function is called by:
 20291 ;;		_EncodeNEC
 20292 ;;		_DecodeNEC
 20293 ;; This function uses a non-reentrant model
 20294 ;;
 20295                           
 20296                           	psect	text36
 20297  007FEA                     __ptext36:
 20298                           	opt stack 0
 20299  007FEA                     _Reverse_Byte:
 20300                           	opt stack 22
 20301                           
 20302                           ; BSR set to: 0
 20303                           ;incstack = 0
 20304                           ;Reverse_Byte@This stored from wreg
 20305  007FEA  0100               	movlb	0	; () banked
 20306  007FEC  6F7C               	movwf	Reverse_Byte@This& (0+255),b
 20307                           
 20308                           ; BSR set to: 0
 20309                           ;MISC.c: 364: unsigned char temp=0;
 20310  007FEE  0E00               	movlw	0
 20311  007FF0  0100               	movlb	0	; () banked
 20312  007FF2  6F7B               	movwf	Reverse_Byte@temp& (0+255),b
 20313                           
 20314                           ; BSR set to: 0
 20315                           ;MISC.c: 366: temp += (This & 0x01) << 7;
 20316  007FF4  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20317  007FF8  0E01               	movlw	1
 20318  007FFA  0100               	movlb	0	; () banked
 20319  007FFC  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20320  007FFE  0E00               	movlw	0
 20321  008000  B179               	btfsc	??_Reverse_Byte& (0+255),0,b
 20322  008002  0E80               	movlw	128
 20323  008004  6F79               	movwf	??_Reverse_Byte& (0+255),b
 20324  008006  0100               	movlb	0	; () banked
 20325  008008  5179               	movf	??_Reverse_Byte& (0+255),w,b
 20326  00800A  0100               	movlb	0	; () banked
 20327  00800C  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;MISC.c: 367: temp += (This & 0x02) << 5;
 20331  00800E  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20332  008012  0E02               	movlw	2
 20333  008014  0100               	movlb	0	; () banked
 20334  008016  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20335  008018  0E05               	movlw	5
 20336  00801A  0100               	movlb	0	; () banked
 20337  00801C  6F7A               	movwf	(??_Reverse_Byte+1)& (0+255),b
 20338  00801E                     u16775:
 20339  00801E  0100               	movlb	0	; () banked
 20340  008020  90D8               	bcf	status,0,c
 20341  008022  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20342  008024  0100               	movlb	0	; () banked
 20343  008026  2F7A               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 20344  008028  D7FA               	goto	u16775
 20345  00802A  0100               	movlb	0	; () banked
 20346  00802C  5179               	movf	??_Reverse_Byte& (0+255),w,b
 20347  00802E  0100               	movlb	0	; () banked
 20348  008030  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;MISC.c: 368: temp += (This & 0x04) << 3;
 20352  008032  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20353  008036  0E04               	movlw	4
 20354  008038  0100               	movlb	0	; () banked
 20355  00803A  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20356  00803C  0100               	movlb	0	; () banked
 20357  00803E  90D8               	bcf	status,0,c
 20358  008040  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20359  008042  0100               	movlb	0	; () banked
 20360  008044  90D8               	bcf	status,0,c
 20361  008046  3779               	rlcf	??_Reverse_Byte& (0+255),f,b
 20362  008048  0100               	movlb	0	; () banked
 20363  00804A  90D8               	bcf	status,0,c
 20364  00804C  3579               	rlcf	??_Reverse_Byte& (0+255),w,b
 20365  00804E  0100               	movlb	0	; () banked
 20366  008050  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20367                           
 20368                           ; BSR set to: 0
 20369                           ;MISC.c: 369: temp += (This & 0x08) << 1;
 20370  008052  C07C  F079         	movff	Reverse_Byte@This,??_Reverse_Byte
 20371  008056  0E08               	movlw	8
 20372  008058  0100               	movlb	0	; () banked
 20373  00805A  1779               	andwf	??_Reverse_Byte& (0+255),f,b
 20374  00805C  0100               	movlb	0	; () banked
 20375  00805E  90D8               	bcf	status,0,c
 20376  008060  3579               	rlcf	??_Reverse_Byte& (0+255),w,b
 20377  008062  0100               	movlb	0	; () banked
 20378  008064  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20379                           
 20380                           ; BSR set to: 0
 20381                           ;MISC.c: 370: temp += (This & 0x10) >> 1;
 20382  008066  0100               	movlb	0	; () banked
 20383  008068  90D8               	bcf	status,0,c
 20384  00806A  317C               	rrcf	Reverse_Byte@This& (0+255),w,b
 20385  00806C  0B08               	andlw	8
 20386  00806E  0100               	movlb	0	; () banked
 20387  008070  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;MISC.c: 371: temp += (This & 0x20) >> 3;
 20391  008072  0100               	movlb	0	; () banked
 20392  008074  397C               	swapf	Reverse_Byte@This& (0+255),w,b
 20393  008076  46E8               	rlncf	wreg,f,c
 20394  008078  0B1F               	andlw	31
 20395  00807A  0B04               	andlw	4
 20396  00807C  0100               	movlb	0	; () banked
 20397  00807E  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;MISC.c: 372: temp += (This & 0x40) >> 5;
 20401  008080  0100               	movlb	0	; () banked
 20402  008082  397C               	swapf	Reverse_Byte@This& (0+255),w,b
 20403  008084  42E8               	rrncf	wreg,f,c
 20404  008086  0B07               	andlw	7
 20405  008088  0B02               	andlw	2
 20406  00808A  0100               	movlb	0	; () banked
 20407  00808C  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20408                           
 20409                           ; BSR set to: 0
 20410                           ;MISC.c: 373: temp += (This & 0x80) >> 7;
 20411  00808E  0100               	movlb	0	; () banked
 20412  008090  457C               	rlncf	Reverse_Byte@This& (0+255),w,b
 20413  008092  0B01               	andlw	1
 20414  008094  0100               	movlb	0	; () banked
 20415  008096  277B               	addwf	Reverse_Byte@temp& (0+255),f,b
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;MISC.c: 375: return temp;
 20419  008098  0100               	movlb	0	; () banked
 20420  00809A  517B               	movf	Reverse_Byte@temp& (0+255),w,b
 20421  00809C  0012               	return	
 20422                           
 20423                           ; BSR set to: 0
 20424                           
 20425                           ; BSR set to: 0
 20426  00809E  0012               	return		;funcret
 20427  0080A0                     __end_of_Reverse_Byte:
 20428                           	opt stack 0
 20429                           tblptru	equ	0xFF8
 20430                           tblptrh	equ	0xFF7
 20431                           tblptrl	equ	0xFF6
 20432                           tablat	equ	0xFF5
 20433                           prodh	equ	0xFF4
 20434                           prodl	equ	0xFF3
 20435                           intcon	equ	0xFF2
 20436                           indf0	equ	0xFEF
 20437                           postinc0	equ	0xFEE
 20438                           fsr0h	equ	0xFEA
 20439                           fsr0l	equ	0xFE9
 20440                           wreg	equ	0xFE8
 20441                           indf1	equ	0xFE7
 20442                           postdec1	equ	0xFE5
 20443                           fsr1h	equ	0xFE2
 20444                           fsr1l	equ	0xFE1
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           fsr2h	equ	0xFDA
 20449                           fsr2l	equ	0xFD9
 20450                           status	equ	0xFD8
 20451                           
 20452 ;; *************** function _Init_System *****************
 20453 ;; Defined at:
 20454 ;;		line 105 in file "user.c"
 20455 ;; Parameters:    Size  Location     Type
 20456 ;;		None
 20457 ;; Auto vars:     Size  Location     Type
 20458 ;;		None
 20459 ;; Return value:  Size  Location     Type
 20460 ;;		None               void
 20461 ;; Registers used:
 20462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20463 ;; Tracked objects:
 20464 ;;		On entry : 0/0
 20465 ;;		On exit  : 0/0
 20466 ;;		Unchanged: 0/0
 20467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;Total ram usage:        0 bytes
 20473 ;; Hardware stack levels used:    1
 20474 ;; Hardware stack levels required when called:   13
 20475 ;; This function calls:
 20476 ;;		_EEPROMinitialized
 20477 ;;		_InitADC
 20478 ;;		_InitBluetooth
 20479 ;;		_InitIR
 20480 ;;		_InitTimers
 20481 ;;		_InitUART
 20482 ;;		_SetEEPROMdefault
 20483 ;;		_SyncEEPROMToGlobal
 20484 ;;		_SyncGlobalToEEPROM
 20485 ;;		_UARTchar
 20486 ;;		_UARTstring
 20487 ;;		_cleanBuffer
 20488 ;; This function is called by:
 20489 ;;		_main
 20490 ;; This function uses a non-reentrant model
 20491 ;;
 20492                           
 20493                           	psect	text37
 20494  00876E                     __ptext37:
 20495                           	opt stack 0
 20496  00876E                     _Init_System:
 20497                           	opt stack 17
 20498                           
 20499                           ;user.c: 107: cleanBuffer(&ReceivedString, 255);
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;incstack = 0
 20503  00876E  0E00               	movlw	low _ReceivedString
 20504  008770  0100               	movlb	0	; () banked
 20505  008772  6F79               	movwf	cleanBuffer@data& (0+255),b
 20506  008774  0E06               	movlw	high _ReceivedString
 20507  008776  0100               	movlb	0	; () banked
 20508  008778  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 20509  00877A  0E00               	movlw	0
 20510  00877C  0100               	movlb	0	; () banked
 20511  00877E  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 20512  008780  697B               	setf	cleanBuffer@count& (0+255),b
 20513  008782  ECBA  F045         	call	_cleanBuffer	;wreg free
 20514                           
 20515                           ;user.c: 110: IPR1bits.RCIP = 0;
 20516  008786  9A9F               	bcf	3999,5,c	;volatile
 20517                           
 20518                           ;user.c: 111: INTCON2bits.RBIP = 1;
 20519  008788  80F1               	bsf	intcon2,0,c	;volatile
 20520                           
 20521                           ;user.c: 112: INTCON2bits.TMR0IP = 1;
 20522  00878A  84F1               	bsf	intcon2,2,c	;volatile
 20523                           
 20524                           ;user.c: 113: IPR1bits.TMR2IP = 1;
 20525  00878C  829F               	bsf	3999,1,c	;volatile
 20526                           
 20527                           ;user.c: 114: IPR1bits.TMR1IP = 0;
 20528  00878E  909F               	bcf	3999,0,c	;volatile
 20529                           
 20530                           ;user.c: 115: IPR2bits.TMR3IP = 1;
 20531  008790  82A2               	bsf	4002,1,c	;volatile
 20532                           
 20533                           ;user.c: 118: RCONbits.IPEN = 1;
 20534  008792  8ED0               	bsf	4048,7,c	;volatile
 20535                           
 20536                           ;user.c: 119: INTCONbits.PEIE = 1;
 20537  008794  8CF2               	bsf	intcon,6,c	;volatile
 20538                           
 20539                           ;user.c: 120: INTCONbits.GIE = 1;
 20540  008796  8EF2               	bsf	intcon,7,c	;volatile
 20541                           
 20542                           ;user.c: 122: SyncEEPROMToGlobal();
 20543  008798  ECB4  F031         	call	_SyncEEPROMToGlobal	;wreg free
 20544                           
 20545                           ;user.c: 123: if(!EEPROMinitialized())
 20546  00879C  EC5C  F049         	call	_EEPROMinitialized	;wreg free
 20547  0087A0  0900               	iorlw	0
 20548  0087A2  A4D8               	btfss	status,2,c
 20549  0087A4  D008               	goto	l15106
 20550                           
 20551                           ;user.c: 124: {
 20552                           ;user.c: 125: SetEEPROMdefault();
 20553  0087A6  EC40  F039         	call	_SetEEPROMdefault	;wreg free
 20554                           
 20555                           ;user.c: 126: Global.EEPROMinitFlag = 59;
 20556  0087AA  0E3B               	movlw	59
 20557  0087AC  0104               	movlb	4	; () banked
 20558  0087AE  6F2D               	movwf	(_Global+45)& (0+255),b
 20559                           
 20560                           ; BSR set to: 4
 20561                           ;user.c: 127: SyncGlobalToEEPROM();
 20562  0087B0  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
 20563  0087B4  D000               	goto	l15106
 20564  0087B6                     l15106:
 20565                           
 20566                           ;user.c: 128: }
 20567                           ;user.c: 129: InitADC();
 20568  0087B6  EC3C  F049         	call	_InitADC	;wreg free
 20569                           
 20570                           ;user.c: 130: InitIR();
 20571  0087BA  ECE8  F046         	call	_InitIR	;wreg free
 20572                           
 20573                           ;user.c: 132: InitUART(115200);
 20574  0087BE  0E00               	movlw	0
 20575  0087C0  0100               	movlb	0	; () banked
 20576  0087C2  6FCE               	movwf	InitUART@Baud& (0+255),b
 20577  0087C4  0EC2               	movlw	194
 20578  0087C6  6FCF               	movwf	(InitUART@Baud+1)& (0+255),b
 20579  0087C8  0E01               	movlw	1
 20580  0087CA  6FD0               	movwf	(InitUART@Baud+2)& (0+255),b
 20581  0087CC  0E00               	movlw	0
 20582  0087CE  6FD1               	movwf	(InitUART@Baud+3)& (0+255),b
 20583  0087D0  EC15  F03C         	call	_InitUART	;wreg free
 20584                           
 20585                           ;user.c: 133: InitBluetooth();
 20586  0087D4  EC40  F046         	call	_InitBluetooth	;wreg free
 20587                           
 20588                           ;user.c: 134: UARTstring(CRLN);
 20589  0087D8  0EFE               	movlw	low _CRLN
 20590  0087DA  0100               	movlb	0	; () banked
 20591  0087DC  6F7A               	movwf	UARTstring@data& (0+255),b
 20592  0087DE  0EF3               	movlw	high _CRLN
 20593  0087E0  0100               	movlb	0	; () banked
 20594  0087E2  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 20595  0087E4  ECE7  F045         	call	_UARTstring	;wreg free
 20596                           
 20597                           ;user.c: 135: UARTchar('>');
 20598  0087E8  0E3E               	movlw	62
 20599  0087EA  ECF0  F048         	call	_UARTchar
 20600                           
 20601                           ;user.c: 137: InitTimers();
 20602  0087EE  EC52  F049         	call	_InitTimers	;wreg free
 20603  0087F2  0012               	return		;funcret
 20604  0087F4                     __end_of_Init_System:
 20605                           	opt stack 0
 20606                           tblptru	equ	0xFF8
 20607                           tblptrh	equ	0xFF7
 20608                           tblptrl	equ	0xFF6
 20609                           tablat	equ	0xFF5
 20610                           prodh	equ	0xFF4
 20611                           prodl	equ	0xFF3
 20612                           intcon	equ	0xFF2
 20613                           intcon2	equ	0xFF1
 20614                           indf0	equ	0xFEF
 20615                           postinc0	equ	0xFEE
 20616                           fsr0h	equ	0xFEA
 20617                           fsr0l	equ	0xFE9
 20618                           wreg	equ	0xFE8
 20619                           indf1	equ	0xFE7
 20620                           postdec1	equ	0xFE5
 20621                           fsr1h	equ	0xFE2
 20622                           fsr1l	equ	0xFE1
 20623                           indf2	equ	0xFDF
 20624                           postinc2	equ	0xFDE
 20625                           postdec2	equ	0xFDD
 20626                           fsr2h	equ	0xFDA
 20627                           fsr2l	equ	0xFD9
 20628                           status	equ	0xFD8
 20629                           
 20630 ;; *************** function _SyncEEPROMToGlobal *****************
 20631 ;; Defined at:
 20632 ;;		line 288 in file "EEPROM.c"
 20633 ;; Parameters:    Size  Location     Type
 20634 ;;		None
 20635 ;; Auto vars:     Size  Location     Type
 20636 ;;  Temp          136    3[BANK1 ] struct EEdata
 20637 ;;  j               1    2[BANK1 ] unsigned char 
 20638 ;;  i               1    1[BANK1 ] unsigned char 
 20639 ;;  k               1    0[BANK1 ] unsigned char 
 20640 ;; Return value:  Size  Location     Type
 20641 ;;		None               void
 20642 ;; Registers used:
 20643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20644 ;; Tracked objects:
 20645 ;;		On entry : 0/0
 20646 ;;		On exit  : 0/0
 20647 ;;		Unchanged: 0/0
 20648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20650 ;;      Locals:         0       0     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20652 ;;      Totals:         0       4     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20653 ;;Total ram usage:      143 bytes
 20654 ;; Hardware stack levels used:    1
 20655 ;; Hardware stack levels required when called:    9
 20656 ;; This function calls:
 20657 ;;		_GetEEPROM
 20658 ;; This function is called by:
 20659 ;;		_Init_System
 20660 ;; This function uses a non-reentrant model
 20661 ;;
 20662                           
 20663                           	psect	text38
 20664  006368                     __ptext38:
 20665                           	opt stack 0
 20666  006368                     _SyncEEPROMToGlobal:
 20667                           	opt stack 20
 20668                           
 20669                           ;EEPROM.c: 290: unsigned char i,j,k;
 20670                           ;EEPROM.c: 291: GBLdata Temp;
 20671                           ;EEPROM.c: 293: GetEEPROM(&Temp);
 20672                           
 20673                           ;incstack = 0
 20674  006368  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20675  00636A  0100               	movlb	0	; () banked
 20676  00636C  6F9D               	movwf	GetEEPROM@Temp& (0+255),b
 20677  00636E  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20678  006370  0100               	movlb	0	; () banked
 20679  006372  6F9E               	movwf	(GetEEPROM@Temp+1)& (0+255),b
 20680  006374  EC12  F035         	call	_GetEEPROM	;wreg free
 20681                           
 20682                           ;EEPROM.c: 295: Global.BlueToothFlag = Temp.BlueToothFlag;
 20683  006378  C103  F400         	movff	SyncEEPROMToGlobal@Temp,_Global
 20684                           
 20685                           ;EEPROM.c: 296: Global.SWNECcode = Temp.SWNECcode;
 20686  00637C  C104  F401         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 20687  006380  C105  F402         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 20688  006384  C106  F403         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 20689  006388  C107  F404         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 20690                           
 20691                           ;EEPROM.c: 297: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 20692  00638C  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 20693                           
 20694                           ;EEPROM.c: 298: for(i=0; i< 20; i++)
 20695  006390  0E00               	movlw	0
 20696  006392  0101               	movlb	1	; () banked
 20697  006394  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 20698  006396  D04F               	goto	l14214
 20699                           
 20700                           ; BSR set to: 1
 20701                           
 20702                           ; BSR set to: 1
 20703  006398  D052               	goto	l983
 20704  00639A                     l14200:
 20705                           
 20706                           ; BSR set to: 1
 20707                           ;EEPROM.c: 299: {
 20708                           ;EEPROM.c: 300: for(j=0; j < 2; j++)
 20709  00639A  0E00               	movlw	0
 20710  00639C  0101               	movlb	1	; () banked
 20711  00639E  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 20712  0063A0                     l14202:
 20713                           
 20714                           ; BSR set to: 1
 20715  0063A0  0E01               	movlw	1
 20716  0063A2  0101               	movlb	1	; () banked
 20717  0063A4  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 20718  0063A6  D001               	goto	l14206
 20719                           
 20720                           ; BSR set to: 1
 20721  0063A8  D044               	goto	l14212
 20722  0063AA                     l14206:
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;EEPROM.c: 301: {
 20726                           ;EEPROM.c: 302: Global.RemoteButtonNEC[i][j] = Temp.RemoteButtonNEC[i][j];
 20727  0063AA  0101               	movlb	1	; () banked
 20728  0063AC  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20729  0063AE  0D02               	mullw	2
 20730  0063B0  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20731  0063B2  0100               	movlb	0	; () banked
 20732  0063B4  6FA5               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 20733  0063B6  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20734  0063B8  0100               	movlb	0	; () banked
 20735  0063BA  6FA6               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 20736  0063BC  50F3               	movf	prodl,w,c
 20737  0063BE  0100               	movlb	0	; () banked
 20738  0063C0  27A5               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20739  0063C2  50F4               	movf	prodh,w,c
 20740  0063C4  0100               	movlb	0	; () banked
 20741  0063C6  23A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20742  0063C8  0101               	movlb	1	; () banked
 20743  0063CA  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20744  0063CC  0D01               	mullw	1
 20745  0063CE  50F3               	movf	prodl,w,c
 20746  0063D0  0100               	movlb	0	; () banked
 20747  0063D2  27A5               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20748  0063D4  50F4               	movf	prodh,w,c
 20749  0063D6  0100               	movlb	0	; () banked
 20750  0063D8  23A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20751  0063DA  0E05               	movlw	5
 20752  0063DC  0100               	movlb	0	; () banked
 20753  0063DE  25A5               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 20754  0063E0  6ED9               	movwf	fsr2l,c
 20755  0063E2  0E00               	movlw	0
 20756  0063E4  0100               	movlb	0	; () banked
 20757  0063E6  21A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 20758  0063E8  6EDA               	movwf	fsr2h,c
 20759  0063EA  0101               	movlb	1	; () banked
 20760  0063EC  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20761  0063EE  0D02               	mullw	2
 20762  0063F0  0E00               	movlw	low _Global
 20763  0063F2  0100               	movlb	0	; () banked
 20764  0063F4  6FA7               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 20765  0063F6  0E04               	movlw	high _Global
 20766  0063F8  0100               	movlb	0	; () banked
 20767  0063FA  6FA8               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 20768  0063FC  0E05               	movlw	5
 20769  0063FE  0100               	movlb	0	; () banked
 20770  006400  27A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20771  006402  0E00               	movlw	0
 20772  006404  23A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20773  006406  50F3               	movf	prodl,w,c
 20774  006408  0100               	movlb	0	; () banked
 20775  00640A  27A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20776  00640C  50F4               	movf	prodh,w,c
 20777  00640E  0100               	movlb	0	; () banked
 20778  006410  23A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20779  006412  0101               	movlb	1	; () banked
 20780  006414  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20781  006416  0D01               	mullw	1
 20782  006418  50F3               	movf	prodl,w,c
 20783  00641A  0100               	movlb	0	; () banked
 20784  00641C  25A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 20785  00641E  6EE1               	movwf	fsr1l,c
 20786  006420  50F4               	movf	prodh,w,c
 20787  006422  0100               	movlb	0	; () banked
 20788  006424  21A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 20789  006426  6EE2               	movwf	fsr1h,c
 20790  006428  CFDF FFE7          	movff	indf2,indf1
 20791                           
 20792                           ; BSR set to: 0
 20793  00642C  0101               	movlb	1	; () banked
 20794  00642E  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 20795  006430  D7B7               	goto	l14202
 20796  006432                     l14212:
 20797                           
 20798                           ; BSR set to: 1
 20799  006432  0101               	movlb	1	; () banked
 20800  006434  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 20801  006436                     l14214:
 20802                           
 20803                           ; BSR set to: 1
 20804  006436  0E13               	movlw	19
 20805  006438  0101               	movlb	1	; () banked
 20806  00643A  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 20807  00643C  D7AE               	goto	l14200
 20808  00643E                     l983:
 20809                           
 20810                           ; BSR set to: 1
 20811                           ;EEPROM.c: 303: }
 20812                           ;EEPROM.c: 304: }
 20813                           ;EEPROM.c: 305: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 20814  00643E  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 20815                           
 20816                           ; BSR set to: 1
 20817                           ;EEPROM.c: 306: for(i=0; i< 15; i++)
 20818  006442  0E00               	movlw	0
 20819  006444  0101               	movlb	1	; () banked
 20820  006446  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 20821                           
 20822                           ; BSR set to: 1
 20823  006448  0E0E               	movlw	14
 20824  00644A  0101               	movlb	1	; () banked
 20825  00644C  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 20826  00644E  D002               	goto	l14222
 20827  006450  0012               	return	
 20828                           
 20829                           ; BSR set to: 1
 20830  006452  0012               	return	
 20831  006454                     l14222:
 20832                           
 20833                           ; BSR set to: 1
 20834                           ;EEPROM.c: 307: {
 20835                           ;EEPROM.c: 308: for(j=0; j < 3; j++)
 20836  006454  0E00               	movlw	0
 20837  006456  0101               	movlb	1	; () banked
 20838  006458  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 20839  00645A                     l14224:
 20840                           
 20841                           ; BSR set to: 1
 20842  00645A  0E02               	movlw	2
 20843  00645C  0101               	movlb	1	; () banked
 20844  00645E  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 20845  006460  D001               	goto	l14228
 20846                           
 20847                           ; BSR set to: 1
 20848  006462  D061               	goto	l14244
 20849  006464                     l14228:
 20850                           
 20851                           ; BSR set to: 1
 20852                           ;EEPROM.c: 309: {
 20853                           ;EEPROM.c: 310: for(k=0; k < 2; k++)
 20854  006464  0E00               	movlw	0
 20855  006466  0101               	movlb	1	; () banked
 20856  006468  6F00               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 20857  00646A                     l14230:
 20858                           
 20859                           ; BSR set to: 1
 20860  00646A  0E01               	movlw	1
 20861  00646C  0101               	movlb	1	; () banked
 20862  00646E  6500               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 20863  006470  D001               	goto	l14234
 20864                           
 20865                           ; BSR set to: 1
 20866  006472  D056               	goto	l14240
 20867  006474                     l14234:
 20868                           
 20869                           ; BSR set to: 1
 20870                           ;EEPROM.c: 311: {
 20871                           ;EEPROM.c: 312: Global.RemoteButtonRF[i][j][k] = Temp.RemoteButtonRF[i][j][k];
 20872  006474  0101               	movlb	1	; () banked
 20873  006476  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20874  006478  0D06               	mullw	6
 20875  00647A  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 20876  00647C  0100               	movlb	0	; () banked
 20877  00647E  6FA5               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 20878  006480  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 20879  006482  0100               	movlb	0	; () banked
 20880  006484  6FA6               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 20881  006486  50F3               	movf	prodl,w,c
 20882  006488  0100               	movlb	0	; () banked
 20883  00648A  27A5               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20884  00648C  50F4               	movf	prodh,w,c
 20885  00648E  0100               	movlb	0	; () banked
 20886  006490  23A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20887  006492  0101               	movlb	1	; () banked
 20888  006494  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20889  006496  0D02               	mullw	2
 20890  006498  50F3               	movf	prodl,w,c
 20891  00649A  0100               	movlb	0	; () banked
 20892  00649C  27A5               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20893  00649E  50F4               	movf	prodh,w,c
 20894  0064A0  0100               	movlb	0	; () banked
 20895  0064A2  23A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20896  0064A4  0101               	movlb	1	; () banked
 20897  0064A6  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 20898  0064A8  0D01               	mullw	1
 20899  0064AA  50F3               	movf	prodl,w,c
 20900  0064AC  0100               	movlb	0	; () banked
 20901  0064AE  27A5               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 20902  0064B0  50F4               	movf	prodh,w,c
 20903  0064B2  0100               	movlb	0	; () banked
 20904  0064B4  23A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 20905  0064B6  0E2E               	movlw	46
 20906  0064B8  0100               	movlb	0	; () banked
 20907  0064BA  25A5               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 20908  0064BC  6ED9               	movwf	fsr2l,c
 20909  0064BE  0E00               	movlw	0
 20910  0064C0  0100               	movlb	0	; () banked
 20911  0064C2  21A6               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 20912  0064C4  6EDA               	movwf	fsr2h,c
 20913  0064C6  0101               	movlb	1	; () banked
 20914  0064C8  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 20915  0064CA  0D06               	mullw	6
 20916  0064CC  0E00               	movlw	low _Global
 20917  0064CE  0100               	movlb	0	; () banked
 20918  0064D0  6FA7               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 20919  0064D2  0E04               	movlw	high _Global
 20920  0064D4  0100               	movlb	0	; () banked
 20921  0064D6  6FA8               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 20922  0064D8  0E2E               	movlw	46
 20923  0064DA  0100               	movlb	0	; () banked
 20924  0064DC  27A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20925  0064DE  0E00               	movlw	0
 20926  0064E0  23A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20927  0064E2  50F3               	movf	prodl,w,c
 20928  0064E4  0100               	movlb	0	; () banked
 20929  0064E6  27A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20930  0064E8  50F4               	movf	prodh,w,c
 20931  0064EA  0100               	movlb	0	; () banked
 20932  0064EC  23A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20933  0064EE  0101               	movlb	1	; () banked
 20934  0064F0  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 20935  0064F2  0D02               	mullw	2
 20936  0064F4  50F3               	movf	prodl,w,c
 20937  0064F6  0100               	movlb	0	; () banked
 20938  0064F8  27A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 20939  0064FA  50F4               	movf	prodh,w,c
 20940  0064FC  0100               	movlb	0	; () banked
 20941  0064FE  23A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 20942  006500  0101               	movlb	1	; () banked
 20943  006502  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 20944  006504  0D01               	mullw	1
 20945  006506  50F3               	movf	prodl,w,c
 20946  006508  0100               	movlb	0	; () banked
 20947  00650A  25A7               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 20948  00650C  6EE1               	movwf	fsr1l,c
 20949  00650E  50F4               	movf	prodh,w,c
 20950  006510  0100               	movlb	0	; () banked
 20951  006512  21A8               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 20952  006514  6EE2               	movwf	fsr1h,c
 20953  006516  CFDF FFE7          	movff	indf2,indf1
 20954                           
 20955                           ; BSR set to: 0
 20956  00651A  0101               	movlb	1	; () banked
 20957  00651C  2B00               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 20958  00651E  D7A5               	goto	l14230
 20959  006520                     l14240:
 20960                           
 20961                           ; BSR set to: 1
 20962  006520  0101               	movlb	1	; () banked
 20963  006522  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 20964  006524  D79A               	goto	l14224
 20965  006526                     l14244:
 20966                           
 20967                           ; BSR set to: 1
 20968  006526  0101               	movlb	1	; () banked
 20969  006528  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 20970                           
 20971                           ; BSR set to: 1
 20972  00652A  0E0E               	movlw	14
 20973  00652C  0101               	movlb	1	; () banked
 20974  00652E  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 20975  006530  D791               	goto	l14222
 20976  006532  0012               	return	
 20977                           
 20978                           ; BSR set to: 1
 20979                           
 20980                           ; BSR set to: 1
 20981  006534  0012               	return		;funcret
 20982  006536                     __end_of_SyncEEPROMToGlobal:
 20983                           	opt stack 0
 20984                           tblptru	equ	0xFF8
 20985                           tblptrh	equ	0xFF7
 20986                           tblptrl	equ	0xFF6
 20987                           tablat	equ	0xFF5
 20988                           prodh	equ	0xFF4
 20989                           prodl	equ	0xFF3
 20990                           intcon	equ	0xFF2
 20991                           intcon2	equ	0xFF1
 20992                           indf0	equ	0xFEF
 20993                           postinc0	equ	0xFEE
 20994                           fsr0h	equ	0xFEA
 20995                           fsr0l	equ	0xFE9
 20996                           wreg	equ	0xFE8
 20997                           indf1	equ	0xFE7
 20998                           postdec1	equ	0xFE5
 20999                           fsr1h	equ	0xFE2
 21000                           fsr1l	equ	0xFE1
 21001                           indf2	equ	0xFDF
 21002                           postinc2	equ	0xFDE
 21003                           postdec2	equ	0xFDD
 21004                           fsr2h	equ	0xFDA
 21005                           fsr2l	equ	0xFD9
 21006                           status	equ	0xFD8
 21007                           
 21008 ;; *************** function _GetEEPROM *****************
 21009 ;; Defined at:
 21010 ;;		line 120 in file "EEPROM.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;  Temp            2   61[BANK0 ] PTR struct EEdata
 21013 ;;		 -> SyncEEPROMToGlobal@Temp(136), 
 21014 ;; Auto vars:     Size  Location     Type
 21015 ;;  j               1   68[BANK0 ] unsigned char 
 21016 ;;  i               1   67[BANK0 ] unsigned char 
 21017 ;;  k               1   66[BANK0 ] unsigned char 
 21018 ;;  Arrayspot       1   65[BANK0 ] unsigned char 
 21019 ;; Return value:  Size  Location     Type
 21020 ;;		None               void
 21021 ;; Registers used:
 21022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21023 ;; Tracked objects:
 21024 ;;		On entry : 0/0
 21025 ;;		On exit  : 0/0
 21026 ;;		Unchanged: 0/0
 21027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21029 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21031 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21032 ;;Total ram usage:        8 bytes
 21033 ;; Hardware stack levels used:    1
 21034 ;; Hardware stack levels required when called:    8
 21035 ;; This function calls:
 21036 ;;		_GetMemoryChar
 21037 ;;		_GetMemoryLong
 21038 ;; This function is called by:
 21039 ;;		_SyncEEPROMToGlobal
 21040 ;; This function uses a non-reentrant model
 21041 ;;
 21042                           
 21043                           	psect	text39
 21044  006A24                     __ptext39:
 21045                           	opt stack 0
 21046  006A24                     _GetEEPROM:
 21047                           	opt stack 20
 21048                           
 21049                           ;EEPROM.c: 122: unsigned char i,j,k;
 21050                           ;EEPROM.c: 123: unsigned char Arrayspot=5;
 21051                           
 21052                           ; BSR set to: 1
 21053                           ;incstack = 0
 21054  006A24  0E05               	movlw	5
 21055  006A26  0100               	movlb	0	; () banked
 21056  006A28  6FA1               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;EEPROM.c: 125: Temp->BlueToothFlag = GetMemoryChar(0);
 21060  006A2A  0E00               	movlw	0
 21061  006A2C  ECB8  F048         	call	_GetMemoryChar
 21062  006A30  0100               	movlb	0	; () banked
 21063  006A32  517C               	movf	?_GetMemoryChar& (0+255),w,b
 21064  006A34  C09D  FFD9         	movff	GetEEPROM@Temp,fsr2l
 21065  006A38  C09E  FFDA         	movff	GetEEPROM@Temp+1,fsr2h
 21066  006A3C  6EDF               	movwf	indf2,c
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;EEPROM.c: 126: Temp->SWNECcode = GetMemoryLong(1);
 21070  006A3E  0E01               	movlw	1
 21071  006A40  ECD9  F035         	call	_GetMemoryLong
 21072  006A44  0100               	movlb	0	; () banked
 21073  006A46  EE20 F001          	lfsr	2,1
 21074  006A4A  519D               	movf	GetEEPROM@Temp& (0+255),w,b
 21075  006A4C  26D9               	addwf	fsr2l,f,c
 21076  006A4E  519E               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21077  006A50  22DA               	addwfc	fsr2h,f,c
 21078  006A52  0100               	movlb	0	; () banked
 21079  006A54  C07C  FFDE         	movff	?_GetMemoryLong,postinc2
 21080  006A58  0100               	movlb	0	; () banked
 21081  006A5A  C07D  FFDE         	movff	?_GetMemoryLong+1,postinc2
 21082  006A5E  0100               	movlb	0	; () banked
 21083  006A60  C07E  FFDE         	movff	?_GetMemoryLong+2,postinc2
 21084  006A64  0100               	movlb	0	; () banked
 21085  006A66  C07F  FFDE         	movff	?_GetMemoryLong+3,postinc2
 21086                           
 21087                           ;EEPROM.c: 127: for(i=0; i< 20; i++)
 21088  006A6A  0E00               	movlw	0
 21089  006A6C  0100               	movlb	0	; () banked
 21090  006A6E  6FA3               	movwf	GetEEPROM@i& (0+255),b
 21091  006A70                     l13868:
 21092                           
 21093                           ; BSR set to: 0
 21094  006A70  0E13               	movlw	19
 21095  006A72  0100               	movlb	0	; () banked
 21096  006A74  65A3               	cpfsgt	GetEEPROM@i& (0+255),b
 21097  006A76  D001               	goto	l13872
 21098                           
 21099                           ; BSR set to: 0
 21100  006A78  D035               	goto	l13890
 21101  006A7A                     l13872:
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;EEPROM.c: 128: {
 21105                           ;EEPROM.c: 129: for(j=0; j < 2; j++)
 21106  006A7A  0E00               	movlw	0
 21107  006A7C  0100               	movlb	0	; () banked
 21108  006A7E  6FA4               	movwf	GetEEPROM@j& (0+255),b
 21109  006A80                     l13874:
 21110                           
 21111                           ; BSR set to: 0
 21112  006A80  0E01               	movlw	1
 21113  006A82  0100               	movlb	0	; () banked
 21114  006A84  65A4               	cpfsgt	GetEEPROM@j& (0+255),b
 21115  006A86  D001               	goto	l13878
 21116                           
 21117                           ; BSR set to: 0
 21118  006A88  D02A               	goto	l13886
 21119  006A8A                     l13878:
 21120                           
 21121                           ; BSR set to: 0
 21122                           ;EEPROM.c: 130: {
 21123                           ;EEPROM.c: 131: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 21124  006A8A  0100               	movlb	0	; () banked
 21125  006A8C  51A3               	movf	GetEEPROM@i& (0+255),w,b
 21126  006A8E  0D02               	mullw	2
 21127  006A90  C09D  F09F         	movff	GetEEPROM@Temp,??_GetEEPROM
 21128  006A94  C09E  F0A0         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21129  006A98  50F3               	movf	prodl,w,c
 21130  006A9A  0100               	movlb	0	; () banked
 21131  006A9C  279F               	addwf	??_GetEEPROM& (0+255),f,b
 21132  006A9E  50F4               	movf	prodh,w,c
 21133  006AA0  0100               	movlb	0	; () banked
 21134  006AA2  23A0               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21135  006AA4  0100               	movlb	0	; () banked
 21136  006AA6  51A4               	movf	GetEEPROM@j& (0+255),w,b
 21137  006AA8  0D01               	mullw	1
 21138  006AAA  50F3               	movf	prodl,w,c
 21139  006AAC  0100               	movlb	0	; () banked
 21140  006AAE  279F               	addwf	??_GetEEPROM& (0+255),f,b
 21141  006AB0  50F4               	movf	prodh,w,c
 21142  006AB2  0100               	movlb	0	; () banked
 21143  006AB4  23A0               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21144  006AB6  0E05               	movlw	5
 21145  006AB8  0100               	movlb	0	; () banked
 21146  006ABA  259F               	addwf	??_GetEEPROM& (0+255),w,b
 21147  006ABC  6ED9               	movwf	fsr2l,c
 21148  006ABE  0E00               	movlw	0
 21149  006AC0  0100               	movlb	0	; () banked
 21150  006AC2  21A0               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21151  006AC4  6EDA               	movwf	fsr2h,c
 21152  006AC6  0100               	movlb	0	; () banked
 21153  006AC8  51A1               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21154  006ACA  ECB8  F048         	call	_GetMemoryChar
 21155  006ACE  0100               	movlb	0	; () banked
 21156  006AD0  517C               	movf	?_GetMemoryChar& (0+255),w,b
 21157  006AD2  6EDF               	movwf	indf2,c
 21158                           
 21159                           ; BSR set to: 0
 21160  006AD4  0100               	movlb	0	; () banked
 21161  006AD6  2BA1               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21162                           
 21163                           ; BSR set to: 0
 21164  006AD8  0100               	movlb	0	; () banked
 21165  006ADA  2BA4               	incf	GetEEPROM@j& (0+255),f,b
 21166  006ADC  D7D1               	goto	l13874
 21167  006ADE                     l13886:
 21168                           
 21169                           ; BSR set to: 0
 21170  006ADE  0100               	movlb	0	; () banked
 21171  006AE0  2BA3               	incf	GetEEPROM@i& (0+255),f,b
 21172  006AE2  D7C6               	goto	l13868
 21173  006AE4                     l13890:
 21174                           
 21175                           ; BSR set to: 0
 21176                           ;EEPROM.c: 132: }
 21177                           ;EEPROM.c: 133: }
 21178                           ;EEPROM.c: 134: Temp->EEPROMinitFlag = GetMemoryChar((2*20 + 5));
 21179  006AE4  0100               	movlb	0	; () banked
 21180  006AE6  EE20 F02D          	lfsr	2,45
 21181  006AEA  519D               	movf	GetEEPROM@Temp& (0+255),w,b
 21182  006AEC  26D9               	addwf	fsr2l,f,c
 21183  006AEE  519E               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21184  006AF0  22DA               	addwfc	fsr2h,f,c
 21185  006AF2  0E2D               	movlw	45
 21186  006AF4  ECB8  F048         	call	_GetMemoryChar
 21187  006AF8  0100               	movlb	0	; () banked
 21188  006AFA  517C               	movf	?_GetMemoryChar& (0+255),w,b
 21189  006AFC  6EDF               	movwf	indf2,c
 21190                           
 21191                           ; BSR set to: 0
 21192                           ;EEPROM.c: 135: Arrayspot=(2*20 + 7);
 21193  006AFE  0E2F               	movlw	47
 21194  006B00  0100               	movlb	0	; () banked
 21195  006B02  6FA1               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21196                           
 21197                           ; BSR set to: 0
 21198                           ;EEPROM.c: 136: for(i=0; i< 15; i++)
 21199  006B04  0E00               	movlw	0
 21200  006B06  0100               	movlb	0	; () banked
 21201  006B08  6FA3               	movwf	GetEEPROM@i& (0+255),b
 21202                           
 21203                           ; BSR set to: 0
 21204  006B0A  0E0E               	movlw	14
 21205  006B0C  0100               	movlb	0	; () banked
 21206  006B0E  65A3               	cpfsgt	GetEEPROM@i& (0+255),b
 21207  006B10  D002               	goto	l13900
 21208  006B12  0012               	return	
 21209                           
 21210                           ; BSR set to: 0
 21211  006B14  0012               	return	
 21212  006B16                     l13900:
 21213                           
 21214                           ; BSR set to: 0
 21215                           ;EEPROM.c: 137: {
 21216                           ;EEPROM.c: 138: for(j=0; j < 3; j++)
 21217  006B16  0E00               	movlw	0
 21218  006B18  0100               	movlb	0	; () banked
 21219  006B1A  6FA4               	movwf	GetEEPROM@j& (0+255),b
 21220  006B1C                     l13902:
 21221                           
 21222                           ; BSR set to: 0
 21223  006B1C  0E02               	movlw	2
 21224  006B1E  0100               	movlb	0	; () banked
 21225  006B20  65A4               	cpfsgt	GetEEPROM@j& (0+255),b
 21226  006B22  D001               	goto	l13906
 21227                           
 21228                           ; BSR set to: 0
 21229  006B24  D03E               	goto	l13924
 21230  006B26                     l13906:
 21231                           
 21232                           ; BSR set to: 0
 21233                           ;EEPROM.c: 139: {
 21234                           ;EEPROM.c: 140: for(k=0; k < 2; k++)
 21235  006B26  0E00               	movlw	0
 21236  006B28  0100               	movlb	0	; () banked
 21237  006B2A  6FA2               	movwf	GetEEPROM@k& (0+255),b
 21238  006B2C                     l13908:
 21239                           
 21240                           ; BSR set to: 0
 21241  006B2C  0E01               	movlw	1
 21242  006B2E  0100               	movlb	0	; () banked
 21243  006B30  65A2               	cpfsgt	GetEEPROM@k& (0+255),b
 21244  006B32  D001               	goto	l13912
 21245                           
 21246                           ; BSR set to: 0
 21247  006B34  D033               	goto	l13920
 21248  006B36                     l13912:
 21249                           
 21250                           ; BSR set to: 0
 21251                           ;EEPROM.c: 141: {
 21252                           ;EEPROM.c: 142: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 21253  006B36  0100               	movlb	0	; () banked
 21254  006B38  51A3               	movf	GetEEPROM@i& (0+255),w,b
 21255  006B3A  0D06               	mullw	6
 21256  006B3C  C09D  F09F         	movff	GetEEPROM@Temp,??_GetEEPROM
 21257  006B40  C09E  F0A0         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21258  006B44  50F3               	movf	prodl,w,c
 21259  006B46  0100               	movlb	0	; () banked
 21260  006B48  279F               	addwf	??_GetEEPROM& (0+255),f,b
 21261  006B4A  50F4               	movf	prodh,w,c
 21262  006B4C  0100               	movlb	0	; () banked
 21263  006B4E  23A0               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21264  006B50  0100               	movlb	0	; () banked
 21265  006B52  51A4               	movf	GetEEPROM@j& (0+255),w,b
 21266  006B54  0D02               	mullw	2
 21267  006B56  50F3               	movf	prodl,w,c
 21268  006B58  0100               	movlb	0	; () banked
 21269  006B5A  279F               	addwf	??_GetEEPROM& (0+255),f,b
 21270  006B5C  50F4               	movf	prodh,w,c
 21271  006B5E  0100               	movlb	0	; () banked
 21272  006B60  23A0               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21273  006B62  0100               	movlb	0	; () banked
 21274  006B64  51A2               	movf	GetEEPROM@k& (0+255),w,b
 21275  006B66  0D01               	mullw	1
 21276  006B68  50F3               	movf	prodl,w,c
 21277  006B6A  0100               	movlb	0	; () banked
 21278  006B6C  279F               	addwf	??_GetEEPROM& (0+255),f,b
 21279  006B6E  50F4               	movf	prodh,w,c
 21280  006B70  0100               	movlb	0	; () banked
 21281  006B72  23A0               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21282  006B74  0E2E               	movlw	46
 21283  006B76  0100               	movlb	0	; () banked
 21284  006B78  259F               	addwf	??_GetEEPROM& (0+255),w,b
 21285  006B7A  6ED9               	movwf	fsr2l,c
 21286  006B7C  0E00               	movlw	0
 21287  006B7E  0100               	movlb	0	; () banked
 21288  006B80  21A0               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21289  006B82  6EDA               	movwf	fsr2h,c
 21290  006B84  0100               	movlb	0	; () banked
 21291  006B86  51A1               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21292  006B88  ECB8  F048         	call	_GetMemoryChar
 21293  006B8C  0100               	movlb	0	; () banked
 21294  006B8E  517C               	movf	?_GetMemoryChar& (0+255),w,b
 21295  006B90  6EDF               	movwf	indf2,c
 21296                           
 21297                           ; BSR set to: 0
 21298  006B92  0100               	movlb	0	; () banked
 21299  006B94  2BA1               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21300                           
 21301                           ; BSR set to: 0
 21302  006B96  0100               	movlb	0	; () banked
 21303  006B98  2BA2               	incf	GetEEPROM@k& (0+255),f,b
 21304  006B9A  D7C8               	goto	l13908
 21305  006B9C                     l13920:
 21306                           
 21307                           ; BSR set to: 0
 21308  006B9C  0100               	movlb	0	; () banked
 21309  006B9E  2BA4               	incf	GetEEPROM@j& (0+255),f,b
 21310  006BA0  D7BD               	goto	l13902
 21311  006BA2                     l13924:
 21312                           
 21313                           ; BSR set to: 0
 21314  006BA2  0100               	movlb	0	; () banked
 21315  006BA4  2BA3               	incf	GetEEPROM@i& (0+255),f,b
 21316                           
 21317                           ; BSR set to: 0
 21318  006BA6  0E0E               	movlw	14
 21319  006BA8  0100               	movlb	0	; () banked
 21320  006BAA  65A3               	cpfsgt	GetEEPROM@i& (0+255),b
 21321  006BAC  D7B4               	goto	l13900
 21322  006BAE  0012               	return	
 21323                           
 21324                           ; BSR set to: 0
 21325                           
 21326                           ; BSR set to: 0
 21327  006BB0  0012               	return		;funcret
 21328  006BB2                     __end_of_GetEEPROM:
 21329                           	opt stack 0
 21330                           tblptru	equ	0xFF8
 21331                           tblptrh	equ	0xFF7
 21332                           tblptrl	equ	0xFF6
 21333                           tablat	equ	0xFF5
 21334                           prodh	equ	0xFF4
 21335                           prodl	equ	0xFF3
 21336                           intcon	equ	0xFF2
 21337                           intcon2	equ	0xFF1
 21338                           indf0	equ	0xFEF
 21339                           postinc0	equ	0xFEE
 21340                           fsr0h	equ	0xFEA
 21341                           fsr0l	equ	0xFE9
 21342                           wreg	equ	0xFE8
 21343                           indf1	equ	0xFE7
 21344                           postdec1	equ	0xFE5
 21345                           fsr1h	equ	0xFE2
 21346                           fsr1l	equ	0xFE1
 21347                           indf2	equ	0xFDF
 21348                           postinc2	equ	0xFDE
 21349                           postdec2	equ	0xFDD
 21350                           fsr2h	equ	0xFDA
 21351                           fsr2l	equ	0xFD9
 21352                           status	equ	0xFD8
 21353                           
 21354 ;; *************** function _SetEEPROMdefault *****************
 21355 ;; Defined at:
 21356 ;;		line 241 in file "EEPROM.c"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;		None
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;  j               1   93[BANK0 ] unsigned char 
 21361 ;;  i               1   92[BANK0 ] unsigned char 
 21362 ;;  k               1   91[BANK0 ] unsigned char 
 21363 ;; Return value:  Size  Location     Type
 21364 ;;		None               void
 21365 ;; Registers used:
 21366 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21373 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21374 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21375 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21376 ;;Total ram usage:        5 bytes
 21377 ;; Hardware stack levels used:    1
 21378 ;; Hardware stack levels required when called:   11
 21379 ;; This function calls:
 21380 ;;		_SyncGlobalToEEPROM
 21381 ;; This function is called by:
 21382 ;;		_Init_System
 21383 ;; This function uses a non-reentrant model
 21384 ;;
 21385                           
 21386                           	psect	text40
 21387  007280                     __ptext40:
 21388                           	opt stack 0
 21389  007280                     _SetEEPROMdefault:
 21390                           	opt stack 18
 21391                           
 21392                           ;EEPROM.c: 243: unsigned char i,j,k;
 21393                           ;EEPROM.c: 245: Global.BlueToothFlag = 0;
 21394                           
 21395                           ; BSR set to: 0
 21396                           ;incstack = 0
 21397  007280  0E00               	movlw	0
 21398  007282  0104               	movlb	4	; () banked
 21399  007284  6F00               	movwf	_Global& (0+255),b
 21400                           
 21401                           ;EEPROM.c: 246: Global.SWNECcode = 0x00FF00FF;
 21402  007286  0EFF               	movlw	255
 21403  007288  0104               	movlb	4	; () banked
 21404  00728A  6F01               	movwf	(_Global+1)& (0+255),b
 21405  00728C  0E00               	movlw	0
 21406  00728E  6F02               	movwf	(_Global+2)& (0+255),b
 21407  007290  0EFF               	movlw	255
 21408  007292  6F03               	movwf	(_Global+3)& (0+255),b
 21409  007294  0E00               	movlw	0
 21410  007296  6F04               	movwf	(_Global+4)& (0+255),b
 21411                           
 21412                           ;EEPROM.c: 247: Global.EEPROMinitFlag = 0;
 21413  007298  0E00               	movlw	0
 21414  00729A  0104               	movlb	4	; () banked
 21415  00729C  6F2D               	movwf	(_Global+45)& (0+255),b
 21416                           
 21417                           ;EEPROM.c: 248: for(i=0; i< 20; i++)
 21418  00729E  0E00               	movlw	0
 21419  0072A0  0100               	movlb	0	; () banked
 21420  0072A2  6FBC               	movwf	SetEEPROMdefault@i& (0+255),b
 21421  0072A4                     l14260:
 21422                           
 21423                           ; BSR set to: 0
 21424  0072A4  0E13               	movlw	19
 21425  0072A6  0100               	movlb	0	; () banked
 21426  0072A8  65BC               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21427  0072AA  D001               	goto	l14264
 21428                           
 21429                           ; BSR set to: 0
 21430  0072AC  D02F               	goto	l14280
 21431  0072AE                     l14264:
 21432                           
 21433                           ; BSR set to: 0
 21434                           ;EEPROM.c: 249: {
 21435                           ;EEPROM.c: 250: for(j=0; j < 2; j++)
 21436  0072AE  0E00               	movlw	0
 21437  0072B0  0100               	movlb	0	; () banked
 21438  0072B2  6FBD               	movwf	SetEEPROMdefault@j& (0+255),b
 21439  0072B4                     l14266:
 21440                           
 21441                           ; BSR set to: 0
 21442  0072B4  0E01               	movlw	1
 21443  0072B6  0100               	movlb	0	; () banked
 21444  0072B8  65BD               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21445  0072BA  D001               	goto	l14270
 21446                           
 21447                           ; BSR set to: 0
 21448  0072BC  D024               	goto	l14276
 21449  0072BE                     l14270:
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;EEPROM.c: 251: {
 21453                           ;EEPROM.c: 252: Global.RemoteButtonNEC[i][j] = 0x00;
 21454  0072BE  0100               	movlb	0	; () banked
 21455  0072C0  51BC               	movf	SetEEPROMdefault@i& (0+255),w,b
 21456  0072C2  0D02               	mullw	2
 21457  0072C4  0E00               	movlw	low _Global
 21458  0072C6  0100               	movlb	0	; () banked
 21459  0072C8  6FB9               	movwf	??_SetEEPROMdefault& (0+255),b
 21460  0072CA  0E04               	movlw	high _Global
 21461  0072CC  0100               	movlb	0	; () banked
 21462  0072CE  6FBA               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21463  0072D0  0E05               	movlw	5
 21464  0072D2  0100               	movlb	0	; () banked
 21465  0072D4  27B9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21466  0072D6  0E00               	movlw	0
 21467  0072D8  23BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21468  0072DA  50F3               	movf	prodl,w,c
 21469  0072DC  0100               	movlb	0	; () banked
 21470  0072DE  27B9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21471  0072E0  50F4               	movf	prodh,w,c
 21472  0072E2  0100               	movlb	0	; () banked
 21473  0072E4  23BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21474  0072E6  0100               	movlb	0	; () banked
 21475  0072E8  51BD               	movf	SetEEPROMdefault@j& (0+255),w,b
 21476  0072EA  0D01               	mullw	1
 21477  0072EC  50F3               	movf	prodl,w,c
 21478  0072EE  0100               	movlb	0	; () banked
 21479  0072F0  25B9               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21480  0072F2  6ED9               	movwf	fsr2l,c
 21481  0072F4  50F4               	movf	prodh,w,c
 21482  0072F6  0100               	movlb	0	; () banked
 21483  0072F8  21BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21484  0072FA  6EDA               	movwf	fsr2h,c
 21485  0072FC  0E00               	movlw	0
 21486  0072FE  6EDF               	movwf	indf2,c
 21487                           
 21488                           ; BSR set to: 0
 21489  007300  0100               	movlb	0	; () banked
 21490  007302  2BBD               	incf	SetEEPROMdefault@j& (0+255),f,b
 21491  007304  D7D7               	goto	l14266
 21492  007306                     l14276:
 21493                           
 21494                           ; BSR set to: 0
 21495  007306  0100               	movlb	0	; () banked
 21496  007308  2BBC               	incf	SetEEPROMdefault@i& (0+255),f,b
 21497  00730A  D7CC               	goto	l14260
 21498  00730C                     l14280:
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;EEPROM.c: 253: }
 21502                           ;EEPROM.c: 254: }
 21503                           ;EEPROM.c: 255: for(i=0; i< 15; i++)
 21504  00730C  0E00               	movlw	0
 21505  00730E  0100               	movlb	0	; () banked
 21506  007310  6FBC               	movwf	SetEEPROMdefault@i& (0+255),b
 21507  007312                     l14282:
 21508                           
 21509                           ; BSR set to: 0
 21510  007312  0E0E               	movlw	14
 21511  007314  0100               	movlb	0	; () banked
 21512  007316  65BC               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21513  007318  D001               	goto	l14286
 21514                           
 21515                           ; BSR set to: 0
 21516  00731A  D043               	goto	l14312
 21517  00731C                     l14286:
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;EEPROM.c: 256: {
 21521                           ;EEPROM.c: 257: for(j=0; j < 3; j++)
 21522  00731C  0E00               	movlw	0
 21523  00731E  0100               	movlb	0	; () banked
 21524  007320  6FBD               	movwf	SetEEPROMdefault@j& (0+255),b
 21525  007322                     l14288:
 21526                           
 21527                           ; BSR set to: 0
 21528  007322  0E02               	movlw	2
 21529  007324  0100               	movlb	0	; () banked
 21530  007326  65BD               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21531  007328  D001               	goto	l14292
 21532                           
 21533                           ; BSR set to: 0
 21534  00732A  D038               	goto	l14308
 21535  00732C                     l14292:
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;EEPROM.c: 258: {
 21539                           ;EEPROM.c: 259: for(k=0; k < 2; k++)
 21540  00732C  0E00               	movlw	0
 21541  00732E  0100               	movlb	0	; () banked
 21542  007330  6FBB               	movwf	SetEEPROMdefault@k& (0+255),b
 21543  007332                     l14294:
 21544                           
 21545                           ; BSR set to: 0
 21546  007332  0E01               	movlw	1
 21547  007334  0100               	movlb	0	; () banked
 21548  007336  65BB               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 21549  007338  D001               	goto	l14298
 21550                           
 21551                           ; BSR set to: 0
 21552  00733A  D02D               	goto	l14304
 21553  00733C                     l14298:
 21554                           
 21555                           ; BSR set to: 0
 21556                           ;EEPROM.c: 260: {
 21557                           ;EEPROM.c: 261: Global.RemoteButtonRF[i][j][k] = 0x00;
 21558  00733C  0100               	movlb	0	; () banked
 21559  00733E  51BC               	movf	SetEEPROMdefault@i& (0+255),w,b
 21560  007340  0D06               	mullw	6
 21561  007342  0E00               	movlw	low _Global
 21562  007344  0100               	movlb	0	; () banked
 21563  007346  6FB9               	movwf	??_SetEEPROMdefault& (0+255),b
 21564  007348  0E04               	movlw	high _Global
 21565  00734A  0100               	movlb	0	; () banked
 21566  00734C  6FBA               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21567  00734E  0E2E               	movlw	46
 21568  007350  0100               	movlb	0	; () banked
 21569  007352  27B9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21570  007354  0E00               	movlw	0
 21571  007356  23BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21572  007358  50F3               	movf	prodl,w,c
 21573  00735A  0100               	movlb	0	; () banked
 21574  00735C  27B9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21575  00735E  50F4               	movf	prodh,w,c
 21576  007360  0100               	movlb	0	; () banked
 21577  007362  23BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21578  007364  0100               	movlb	0	; () banked
 21579  007366  51BD               	movf	SetEEPROMdefault@j& (0+255),w,b
 21580  007368  0D02               	mullw	2
 21581  00736A  50F3               	movf	prodl,w,c
 21582  00736C  0100               	movlb	0	; () banked
 21583  00736E  27B9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21584  007370  50F4               	movf	prodh,w,c
 21585  007372  0100               	movlb	0	; () banked
 21586  007374  23BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21587  007376  0100               	movlb	0	; () banked
 21588  007378  51BB               	movf	SetEEPROMdefault@k& (0+255),w,b
 21589  00737A  0D01               	mullw	1
 21590  00737C  50F3               	movf	prodl,w,c
 21591  00737E  0100               	movlb	0	; () banked
 21592  007380  25B9               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21593  007382  6ED9               	movwf	fsr2l,c
 21594  007384  50F4               	movf	prodh,w,c
 21595  007386  0100               	movlb	0	; () banked
 21596  007388  21BA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21597  00738A  6EDA               	movwf	fsr2h,c
 21598  00738C  0E00               	movlw	0
 21599  00738E  6EDF               	movwf	indf2,c
 21600                           
 21601                           ; BSR set to: 0
 21602  007390  0100               	movlb	0	; () banked
 21603  007392  2BBB               	incf	SetEEPROMdefault@k& (0+255),f,b
 21604  007394  D7CE               	goto	l14294
 21605  007396                     l14304:
 21606                           
 21607                           ; BSR set to: 0
 21608  007396  0100               	movlb	0	; () banked
 21609  007398  2BBD               	incf	SetEEPROMdefault@j& (0+255),f,b
 21610  00739A  D7C3               	goto	l14288
 21611  00739C                     l14308:
 21612                           
 21613                           ; BSR set to: 0
 21614  00739C  0100               	movlb	0	; () banked
 21615  00739E  2BBC               	incf	SetEEPROMdefault@i& (0+255),f,b
 21616  0073A0  D7B8               	goto	l14282
 21617  0073A2                     l14312:
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;EEPROM.c: 262: }
 21621                           ;EEPROM.c: 263: }
 21622                           ;EEPROM.c: 264: }
 21623                           ;EEPROM.c: 265: SyncGlobalToEEPROM();
 21624  0073A2  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
 21625  0073A6  0012               	return		;funcret
 21626  0073A8                     __end_of_SetEEPROMdefault:
 21627                           	opt stack 0
 21628                           tblptru	equ	0xFF8
 21629                           tblptrh	equ	0xFF7
 21630                           tblptrl	equ	0xFF6
 21631                           tablat	equ	0xFF5
 21632                           prodh	equ	0xFF4
 21633                           prodl	equ	0xFF3
 21634                           intcon	equ	0xFF2
 21635                           intcon2	equ	0xFF1
 21636                           indf0	equ	0xFEF
 21637                           postinc0	equ	0xFEE
 21638                           fsr0h	equ	0xFEA
 21639                           fsr0l	equ	0xFE9
 21640                           wreg	equ	0xFE8
 21641                           indf1	equ	0xFE7
 21642                           postdec1	equ	0xFE5
 21643                           fsr1h	equ	0xFE2
 21644                           fsr1l	equ	0xFE1
 21645                           indf2	equ	0xFDF
 21646                           postinc2	equ	0xFDE
 21647                           postdec2	equ	0xFDD
 21648                           fsr2h	equ	0xFDA
 21649                           fsr2l	equ	0xFD9
 21650                           status	equ	0xFD8
 21651                           
 21652 ;; *************** function _InitUART *****************
 21653 ;; Defined at:
 21654 ;;		line 80 in file "UART.c"
 21655 ;; Parameters:    Size  Location     Type
 21656 ;;  Baud            4  110[BANK0 ] unsigned long 
 21657 ;; Auto vars:     Size  Location     Type
 21658 ;;  temp            4    6[BANK1 ] unsigned long 
 21659 ;;  spbrg           2    3[BANK1 ] unsigned int 
 21660 ;;  config          1    5[BANK1 ] unsigned char 
 21661 ;; Return value:  Size  Location     Type
 21662 ;;		None               void
 21663 ;; Registers used:
 21664 ;;		wreg, status,2, status,0, cstack
 21665 ;; Tracked objects:
 21666 ;;		On entry : 0/0
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21670 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21671 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21672 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21673 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21674 ;;Total ram usage:       18 bytes
 21675 ;; Hardware stack levels used:    1
 21676 ;; Hardware stack levels required when called:    9
 21677 ;; This function calls:
 21678 ;;		_ClearUSART
 21679 ;;		_Local_CloseUSART
 21680 ;;		_OpenUSART
 21681 ;;		_Round
 21682 ;;		___fttol
 21683 ;;		___lldiv
 21684 ;;		___lltoft
 21685 ;; This function is called by:
 21686 ;;		_Init_System
 21687 ;; This function uses a non-reentrant model
 21688 ;;
 21689                           
 21690                           	psect	text41
 21691  00782A                     __ptext41:
 21692                           	opt stack 0
 21693  00782A                     _InitUART:
 21694                           	opt stack 20
 21695                           
 21696                           ;UART.c: 82: unsigned long temp;
 21697                           ;UART.c: 83: unsigned char config = 0;
 21698                           
 21699                           ;incstack = 0
 21700  00782A  0E00               	movlw	0
 21701  00782C  0101               	movlb	1	; () banked
 21702  00782E  6F05               	movwf	InitUART@config& (0+255),b
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;UART.c: 84: unsigned int spbrg;
 21706                           ;UART.c: 86: Local_CloseUSART();
 21707  007830  EC87  F049         	call	_Local_CloseUSART	;wreg free
 21708                           
 21709                           ;UART.c: 91: config |= 0b00001000;
 21710  007834  0101               	movlb	1	; () banked
 21711  007836  8705               	bsf	InitUART@config& (0+255),3,b
 21712                           
 21713                           ; BSR set to: 1
 21714                           ;UART.c: 92: config |= 0b00010000;
 21715  007838  0101               	movlb	1	; () banked
 21716  00783A  8905               	bsf	InitUART@config& (0+255),4,b
 21717                           
 21718                           ; BSR set to: 1
 21719                           ;UART.c: 93: config &= ~0b00000010;
 21720  00783C  0101               	movlb	1	; () banked
 21721  00783E  9305               	bcf	InitUART@config& (0+255),1,b
 21722                           
 21723                           ; BSR set to: 1
 21724                           ;UART.c: 96: temp = (64000000L / Baud) - 1;
 21725  007840  0E00               	movlw	0
 21726  007842  0100               	movlb	0	; () banked
 21727  007844  6F79               	movwf	___lldiv@dividend& (0+255),b
 21728  007846  0E90               	movlw	144
 21729  007848  6F7A               	movwf	(___lldiv@dividend+1)& (0+255),b
 21730  00784A  0ED0               	movlw	208
 21731  00784C  6F7B               	movwf	(___lldiv@dividend+2)& (0+255),b
 21732  00784E  0E03               	movlw	3
 21733  007850  6F7C               	movwf	(___lldiv@dividend+3)& (0+255),b
 21734  007852  C0CE  F07D         	movff	InitUART@Baud,___lldiv@divisor
 21735  007856  C0CF  F07E         	movff	InitUART@Baud+1,___lldiv@divisor+1
 21736  00785A  C0D0  F07F         	movff	InitUART@Baud+2,___lldiv@divisor+2
 21737  00785E  C0D1  F080         	movff	InitUART@Baud+3,___lldiv@divisor+3
 21738  007862  EC36  F03F         	call	___lldiv	;wreg free
 21739  007866  0EFF               	movlw	255
 21740  007868  0100               	movlb	0	; () banked
 21741  00786A  2579               	addwf	?___lldiv& (0+255),w,b
 21742  00786C  0101               	movlb	1	; () banked
 21743  00786E  6F06               	movwf	InitUART@temp& (0+255),b
 21744  007870  0EFF               	movlw	255
 21745  007872  0100               	movlb	0	; () banked
 21746  007874  217A               	addwfc	(?___lldiv+1)& (0+255),w,b
 21747  007876  0101               	movlb	1	; () banked
 21748  007878  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 21749  00787A  0EFF               	movlw	255
 21750  00787C  0100               	movlb	0	; () banked
 21751  00787E  217B               	addwfc	(?___lldiv+2)& (0+255),w,b
 21752  007880  0101               	movlb	1	; () banked
 21753  007882  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 21754  007884  0EFF               	movlw	255
 21755  007886  0100               	movlb	0	; () banked
 21756  007888  217C               	addwfc	(?___lldiv+3)& (0+255),w,b
 21757  00788A  0101               	movlb	1	; () banked
 21758  00788C  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;UART.c: 97: temp = (temp >> 2) - 1;
 21762  00788E  C106  F0D2         	movff	InitUART@temp,??_InitUART
 21763  007892  C107  F0D3         	movff	InitUART@temp+1,??_InitUART+1
 21764  007896  C108  F0D4         	movff	InitUART@temp+2,??_InitUART+2
 21765  00789A  C109  F0D5         	movff	InitUART@temp+3,??_InitUART+3
 21766  00789E  0E03               	movlw	3
 21767  0078A0  D006               	goto	u17530
 21768  0078A2                     u17535:
 21769  0078A2  0100               	movlb	0	; () banked
 21770  0078A4  90D8               	bcf	status,0,c
 21771  0078A6  33D5               	rrcf	(??_InitUART+3)& (0+255),f,b
 21772  0078A8  33D4               	rrcf	(??_InitUART+2)& (0+255),f,b
 21773  0078AA  33D3               	rrcf	(??_InitUART+1)& (0+255),f,b
 21774  0078AC  33D2               	rrcf	??_InitUART& (0+255),f,b
 21775  0078AE                     u17530:
 21776  0078AE  2EE8               	decfsz	wreg,f,c
 21777  0078B0  D7F8               	goto	u17535
 21778  0078B2  0EFF               	movlw	255
 21779  0078B4  0100               	movlb	0	; () banked
 21780  0078B6  25D2               	addwf	??_InitUART& (0+255),w,b
 21781  0078B8  0101               	movlb	1	; () banked
 21782  0078BA  6F06               	movwf	InitUART@temp& (0+255),b
 21783  0078BC  0EFF               	movlw	255
 21784  0078BE  0100               	movlb	0	; () banked
 21785  0078C0  21D3               	addwfc	(??_InitUART+1)& (0+255),w,b
 21786  0078C2  0101               	movlb	1	; () banked
 21787  0078C4  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 21788  0078C6  0EFF               	movlw	255
 21789  0078C8  0100               	movlb	0	; () banked
 21790  0078CA  21D4               	addwfc	(??_InitUART+2)& (0+255),w,b
 21791  0078CC  0101               	movlb	1	; () banked
 21792  0078CE  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 21793  0078D0  0EFF               	movlw	255
 21794  0078D2  0100               	movlb	0	; () banked
 21795  0078D4  21D5               	addwfc	(??_InitUART+3)& (0+255),w,b
 21796  0078D6  0101               	movlb	1	; () banked
 21797  0078D8  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 21798                           
 21799                           ; BSR set to: 1
 21800                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 21801  0078DA  C106  F081         	movff	InitUART@temp,___lltoft@c
 21802  0078DE  C107  F082         	movff	InitUART@temp+1,___lltoft@c+1
 21803  0078E2  C108  F083         	movff	InitUART@temp+2,___lltoft@c+2
 21804  0078E6  C109  F084         	movff	InitUART@temp+3,___lltoft@c+3
 21805  0078EA  ECFA  F043         	call	___lltoft	;wreg free
 21806  0078EE  C081  F0C7         	movff	?___lltoft,Round@input
 21807  0078F2  C082  F0C8         	movff	?___lltoft+1,Round@input+1
 21808  0078F6  C083  F0C9         	movff	?___lltoft+2,Round@input+2
 21809  0078FA  EC26  F045         	call	_Round	;wreg free
 21810  0078FE  C0C7  F100         	movff	?_Round,_InitUART$3783
 21811  007902  C0C8  F101         	movff	?_Round+1,_InitUART$3783+1
 21812  007906  C0C9  F102         	movff	?_Round+2,_InitUART$3783+2
 21813                           
 21814                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 21815  00790A  C100  F0B8         	movff	_InitUART$3783,___fttol@f1
 21816  00790E  C101  F0B9         	movff	_InitUART$3783+1,___fttol@f1+1
 21817  007912  C102  F0BA         	movff	_InitUART$3783+2,___fttol@f1+2
 21818  007916  ECF0  F037         	call	___fttol	;wreg free
 21819  00791A  C0B8  F103         	movff	?___fttol,InitUART@spbrg
 21820  00791E  C0B9  F104         	movff	?___fttol+1,InitUART@spbrg+1
 21821                           
 21822                           ;UART.c: 100: BAUDCONbits.BRG16 = 1;
 21823  007922  86B8               	bsf	4024,3,c	;volatile
 21824                           
 21825                           ;UART.c: 102: ClearUSART();
 21826  007924  EC8E  F049         	call	_ClearUSART	;wreg free
 21827                           
 21828                           ;UART.c: 103: OpenUSART(config, spbrg);
 21829  007928  C103  F079         	movff	InitUART@spbrg,OpenUSART@spbrg
 21830  00792C  C104  F07A         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 21831  007930  0101               	movlb	1	; () banked
 21832  007932  5105               	movf	InitUART@config& (0+255),w,b
 21833  007934  EC3A  F044         	call	_OpenUSART
 21834                           
 21835                           ;UART.c: 105: PIR1bits.RCIF = 0;
 21836  007938  9A9E               	bcf	3998,5,c	;volatile
 21837                           
 21838                           ;UART.c: 106: PIE1bits.RCIE = 1;
 21839  00793A  8A9D               	bsf	3997,5,c	;volatile
 21840                           
 21841                           ;UART.c: 107: INTCONbits.PEIE = 1;
 21842  00793C  8CF2               	bsf	intcon,6,c	;volatile
 21843  00793E  0012               	return		;funcret
 21844  007940                     __end_of_InitUART:
 21845                           	opt stack 0
 21846                           tblptru	equ	0xFF8
 21847                           tblptrh	equ	0xFF7
 21848                           tblptrl	equ	0xFF6
 21849                           tablat	equ	0xFF5
 21850                           prodh	equ	0xFF4
 21851                           prodl	equ	0xFF3
 21852                           intcon	equ	0xFF2
 21853                           intcon2	equ	0xFF1
 21854                           indf0	equ	0xFEF
 21855                           postinc0	equ	0xFEE
 21856                           fsr0h	equ	0xFEA
 21857                           fsr0l	equ	0xFE9
 21858                           wreg	equ	0xFE8
 21859                           indf1	equ	0xFE7
 21860                           postdec1	equ	0xFE5
 21861                           fsr1h	equ	0xFE2
 21862                           fsr1l	equ	0xFE1
 21863                           indf2	equ	0xFDF
 21864                           postinc2	equ	0xFDE
 21865                           postdec2	equ	0xFDD
 21866                           fsr2h	equ	0xFDA
 21867                           fsr2l	equ	0xFD9
 21868                           status	equ	0xFD8
 21869                           
 21870 ;; *************** function _Round *****************
 21871 ;; Defined at:
 21872 ;;		line 155 in file "MISC.c"
 21873 ;; Parameters:    Size  Location     Type
 21874 ;;  input           3  103[BANK0 ] unsigned char 
 21875 ;; Auto vars:     Size  Location     Type
 21876 ;;  temp            4  106[BANK0 ] long 
 21877 ;; Return value:  Size  Location     Type
 21878 ;;                  3  103[BANK0 ] long 
 21879 ;; Registers used:
 21880 ;;		wreg, status,2, status,0, cstack
 21881 ;; Tracked objects:
 21882 ;;		On entry : 0/0
 21883 ;;		On exit  : 0/0
 21884 ;;		Unchanged: 0/0
 21885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21886 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21887 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21889 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21890 ;;Total ram usage:        7 bytes
 21891 ;; Hardware stack levels used:    1
 21892 ;; Hardware stack levels required when called:    8
 21893 ;; This function calls:
 21894 ;;		___altoft
 21895 ;;		___ftadd
 21896 ;;		___fttol
 21897 ;; This function is called by:
 21898 ;;		_InitUART
 21899 ;; This function uses a non-reentrant model
 21900 ;;
 21901                           
 21902                           	psect	text42
 21903  008A4C                     __ptext42:
 21904                           	opt stack 0
 21905  008A4C                     _Round:
 21906                           	opt stack 20
 21907                           
 21908                           ;MISC.c: 157: long temp = (long)(input + 0.5);
 21909                           
 21910                           ;incstack = 0
 21911  008A4C  0E00               	movlw	0
 21912  008A4E  0100               	movlb	0	; () banked
 21913  008A50  6FAF               	movwf	___ftadd@f2& (0+255),b
 21914  008A52  0E00               	movlw	0
 21915  008A54  0100               	movlb	0	; () banked
 21916  008A56  6FB0               	movwf	(___ftadd@f2+1)& (0+255),b
 21917  008A58  0E3F               	movlw	63
 21918  008A5A  0100               	movlb	0	; () banked
 21919  008A5C  6FB1               	movwf	(___ftadd@f2+2)& (0+255),b
 21920  008A5E  C0C7  F0AC         	movff	Round@input,___ftadd@f1
 21921  008A62  C0C8  F0AD         	movff	Round@input+1,___ftadd@f1+1
 21922  008A66  C0C9  F0AE         	movff	Round@input+2,___ftadd@f1+2
 21923  008A6A  EC1E  F02D         	call	___ftadd	;wreg free
 21924  008A6E  C0AC  F0B8         	movff	?___ftadd,___fttol@f1
 21925  008A72  C0AD  F0B9         	movff	?___ftadd+1,___fttol@f1+1
 21926  008A76  C0AE  F0BA         	movff	?___ftadd+2,___fttol@f1+2
 21927  008A7A  ECF0  F037         	call	___fttol	;wreg free
 21928  008A7E  C0B8  F0CA         	movff	?___fttol,Round@temp
 21929  008A82  C0B9  F0CB         	movff	?___fttol+1,Round@temp+1
 21930  008A86  C0BA  F0CC         	movff	?___fttol+2,Round@temp+2
 21931  008A8A  C0BB  F0CD         	movff	?___fttol+3,Round@temp+3
 21932                           
 21933                           ;MISC.c: 159: return temp;
 21934  008A8E  C0CA  F081         	movff	Round@temp,___altoft@c
 21935  008A92  C0CB  F082         	movff	Round@temp+1,___altoft@c+1
 21936  008A96  C0CC  F083         	movff	Round@temp+2,___altoft@c+2
 21937  008A9A  C0CD  F084         	movff	Round@temp+3,___altoft@c+3
 21938  008A9E  ECFD  F041         	call	___altoft	;wreg free
 21939  008AA2  C081  F0C7         	movff	?___altoft,?_Round
 21940  008AA6  C082  F0C8         	movff	?___altoft+1,?_Round+1
 21941  008AAA  C083  F0C9         	movff	?___altoft+2,?_Round+2
 21942  008AAE  0012               	return	
 21943  008AB0  0012               	return		;funcret
 21944  008AB2                     __end_of_Round:
 21945                           	opt stack 0
 21946                           tblptru	equ	0xFF8
 21947                           tblptrh	equ	0xFF7
 21948                           tblptrl	equ	0xFF6
 21949                           tablat	equ	0xFF5
 21950                           prodh	equ	0xFF4
 21951                           prodl	equ	0xFF3
 21952                           intcon	equ	0xFF2
 21953                           intcon2	equ	0xFF1
 21954                           indf0	equ	0xFEF
 21955                           postinc0	equ	0xFEE
 21956                           fsr0h	equ	0xFEA
 21957                           fsr0l	equ	0xFE9
 21958                           wreg	equ	0xFE8
 21959                           indf1	equ	0xFE7
 21960                           postdec1	equ	0xFE5
 21961                           fsr1h	equ	0xFE2
 21962                           fsr1l	equ	0xFE1
 21963                           indf2	equ	0xFDF
 21964                           postinc2	equ	0xFDE
 21965                           postdec2	equ	0xFDD
 21966                           fsr2h	equ	0xFDA
 21967                           fsr2l	equ	0xFD9
 21968                           status	equ	0xFD8
 21969                           
 21970 ;; *************** function ___altoft *****************
 21971 ;; Defined at:
 21972 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 21973 ;; Parameters:    Size  Location     Type
 21974 ;;  c               4   33[BANK0 ] long 
 21975 ;; Auto vars:     Size  Location     Type
 21976 ;;  sign            1   42[BANK0 ] unsigned char 
 21977 ;;  exp             1   41[BANK0 ] unsigned char 
 21978 ;; Return value:  Size  Location     Type
 21979 ;;                  3   33[BANK0 ] float 
 21980 ;; Registers used:
 21981 ;;		wreg, status,2, status,0, cstack
 21982 ;; Tracked objects:
 21983 ;;		On entry : 0/0
 21984 ;;		On exit  : 0/0
 21985 ;;		Unchanged: 0/0
 21986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21987 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21990 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21991 ;;Total ram usage:       10 bytes
 21992 ;; Hardware stack levels used:    1
 21993 ;; Hardware stack levels required when called:    7
 21994 ;; This function calls:
 21995 ;;		___ftpack
 21996 ;; This function is called by:
 21997 ;;		_Round
 21998 ;; This function uses a non-reentrant model
 21999 ;;
 22000                           
 22001                           	psect	text43
 22002  0083FA                     __ptext43:
 22003                           	opt stack 0
 22004  0083FA                     ___altoft:
 22005                           	opt stack 20
 22006                           
 22007                           ;incstack = 0
 22008  0083FA  0E00               	movlw	0
 22009  0083FC  0100               	movlb	0	; () banked
 22010  0083FE  6F8A               	movwf	___altoft@sign& (0+255),b
 22011  008400  0E8E               	movlw	142
 22012  008402  0100               	movlb	0	; () banked
 22013  008404  6F89               	movwf	___altoft@exp& (0+255),b
 22014                           
 22015                           ; BSR set to: 0
 22016  008406  0100               	movlb	0	; () banked
 22017  008408  AF84               	btfss	(___altoft@c+3)& (0+255),7,b
 22018  00840A  D016               	goto	l13654
 22019                           
 22020                           ; BSR set to: 0
 22021  00840C  0100               	movlb	0	; () banked
 22022  00840E  1F84               	comf	(___altoft@c+3)& (0+255),f,b
 22023  008410  1F83               	comf	(___altoft@c+2)& (0+255),f,b
 22024  008412  1F82               	comf	(___altoft@c+1)& (0+255),f,b
 22025  008414  6D81               	negf	___altoft@c& (0+255),b
 22026  008416  0E00               	movlw	0
 22027  008418  2382               	addwfc	(___altoft@c+1)& (0+255),f,b
 22028  00841A  2383               	addwfc	(___altoft@c+2)& (0+255),f,b
 22029  00841C  2384               	addwfc	(___altoft@c+3)& (0+255),f,b
 22030                           
 22031                           ; BSR set to: 0
 22032  00841E  0E01               	movlw	1
 22033  008420  0100               	movlb	0	; () banked
 22034  008422  6F8A               	movwf	___altoft@sign& (0+255),b
 22035                           
 22036                           ; BSR set to: 0
 22037  008424  D009               	goto	l13654
 22038  008426                     l13652:
 22039                           
 22040                           ; BSR set to: 0
 22041  008426  0100               	movlb	0	; () banked
 22042  008428  90D8               	bcf	status,0,c
 22043  00842A  3384               	rrcf	(___altoft@c+3)& (0+255),f,b
 22044  00842C  3383               	rrcf	(___altoft@c+2)& (0+255),f,b
 22045  00842E  3382               	rrcf	(___altoft@c+1)& (0+255),f,b
 22046  008430  3381               	rrcf	___altoft@c& (0+255),f,b
 22047  008432  0100               	movlb	0	; () banked
 22048  008434  2B89               	incf	___altoft@exp& (0+255),f,b
 22049  008436  D000               	goto	l13654
 22050  008438                     l13654:
 22051                           
 22052                           ; BSR set to: 0
 22053  008438  0E00               	movlw	0
 22054  00843A  0100               	movlb	0	; () banked
 22055  00843C  1581               	andwf	___altoft@c& (0+255),w,b
 22056  00843E  0100               	movlb	0	; () banked
 22057  008440  6F85               	movwf	??___altoft& (0+255),b
 22058  008442  0E00               	movlw	0
 22059  008444  0100               	movlb	0	; () banked
 22060  008446  1582               	andwf	(___altoft@c+1)& (0+255),w,b
 22061  008448  0100               	movlb	0	; () banked
 22062  00844A  6F86               	movwf	(??___altoft+1)& (0+255),b
 22063  00844C  0E00               	movlw	0
 22064  00844E  0100               	movlb	0	; () banked
 22065  008450  1583               	andwf	(___altoft@c+2)& (0+255),w,b
 22066  008452  0100               	movlb	0	; () banked
 22067  008454  6F87               	movwf	(??___altoft+2)& (0+255),b
 22068  008456  0EFF               	movlw	255
 22069  008458  0100               	movlb	0	; () banked
 22070  00845A  1584               	andwf	(___altoft@c+3)& (0+255),w,b
 22071  00845C  0100               	movlb	0	; () banked
 22072  00845E  6F88               	movwf	(??___altoft+3)& (0+255),b
 22073  008460  0100               	movlb	0	; () banked
 22074  008462  5185               	movf	??___altoft& (0+255),w,b
 22075  008464  0100               	movlb	0	; () banked
 22076  008466  1186               	iorwf	(??___altoft+1)& (0+255),w,b
 22077  008468  0100               	movlb	0	; () banked
 22078  00846A  1187               	iorwf	(??___altoft+2)& (0+255),w,b
 22079  00846C  0100               	movlb	0	; () banked
 22080  00846E  1188               	iorwf	(??___altoft+3)& (0+255),w,b
 22081  008470  A4D8               	btfss	status,2,c
 22082  008472  D7D9               	goto	l13652
 22083                           
 22084                           ; BSR set to: 0
 22085                           
 22086                           ; BSR set to: 0
 22087  008474  C081  F079         	movff	___altoft@c,___ftpack@arg
 22088  008478  C082  F07A         	movff	___altoft@c+1,___ftpack@arg+1
 22089  00847C  C083  F07B         	movff	___altoft@c+2,___ftpack@arg+2
 22090  008480  C089  F07C         	movff	___altoft@exp,___ftpack@exp
 22091  008484  C08A  F07D         	movff	___altoft@sign,___ftpack@sign
 22092  008488  EC67  F03A         	call	___ftpack	;wreg free
 22093  00848C  C079  F081         	movff	?___ftpack,?___altoft
 22094  008490  C07A  F082         	movff	?___ftpack+1,?___altoft+1
 22095  008494  C07B  F083         	movff	?___ftpack+2,?___altoft+2
 22096  008498  0012               	return	
 22097  00849A  0012               	return		;funcret
 22098  00849C                     __end_of___altoft:
 22099                           	opt stack 0
 22100                           tblptru	equ	0xFF8
 22101                           tblptrh	equ	0xFF7
 22102                           tblptrl	equ	0xFF6
 22103                           tablat	equ	0xFF5
 22104                           prodh	equ	0xFF4
 22105                           prodl	equ	0xFF3
 22106                           intcon	equ	0xFF2
 22107                           intcon2	equ	0xFF1
 22108                           indf0	equ	0xFEF
 22109                           postinc0	equ	0xFEE
 22110                           fsr0h	equ	0xFEA
 22111                           fsr0l	equ	0xFE9
 22112                           wreg	equ	0xFE8
 22113                           indf1	equ	0xFE7
 22114                           postdec1	equ	0xFE5
 22115                           fsr1h	equ	0xFE2
 22116                           fsr1l	equ	0xFE1
 22117                           indf2	equ	0xFDF
 22118                           postinc2	equ	0xFDE
 22119                           postdec2	equ	0xFDD
 22120                           fsr2h	equ	0xFDA
 22121                           fsr2l	equ	0xFD9
 22122                           status	equ	0xFD8
 22123                           
 22124 ;; *************** function _OpenUSART *****************
 22125 ;; Defined at:
 22126 ;;		line 115 in file "UART.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;  config          1    wreg     unsigned char 
 22129 ;;  spbrg           2   25[BANK0 ] unsigned int 
 22130 ;; Auto vars:     Size  Location     Type
 22131 ;;  config          1   27[BANK0 ] unsigned char 
 22132 ;; Return value:  Size  Location     Type
 22133 ;;		None               void
 22134 ;; Registers used:
 22135 ;;		wreg, status,2
 22136 ;; Tracked objects:
 22137 ;;		On entry : 0/0
 22138 ;;		On exit  : 0/0
 22139 ;;		Unchanged: 0/0
 22140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22145 ;;Total ram usage:        3 bytes
 22146 ;; Hardware stack levels used:    1
 22147 ;; Hardware stack levels required when called:    6
 22148 ;; This function calls:
 22149 ;;		Nothing
 22150 ;; This function is called by:
 22151 ;;		_InitUART
 22152 ;; This function uses a non-reentrant model
 22153 ;;
 22154                           
 22155                           	psect	text44
 22156  008874                     __ptext44:
 22157                           	opt stack 0
 22158  008874                     _OpenUSART:
 22159                           	opt stack 22
 22160                           
 22161                           ;incstack = 0
 22162                           ;OpenUSART@config stored from wreg
 22163  008874  0100               	movlb	0	; () banked
 22164  008876  6F7B               	movwf	OpenUSART@config& (0+255),b
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;UART.c: 117: TXSTA = 0;
 22168  008878  0E00               	movlw	0
 22169  00887A  6EAC               	movwf	4012,c	;volatile
 22170                           
 22171                           ;UART.c: 118: RCSTA = 0;
 22172  00887C  0E00               	movlw	0
 22173  00887E  6EAB               	movwf	4011,c	;volatile
 22174                           
 22175                           ; BSR set to: 0
 22176                           ;UART.c: 120: if(config&0x01)
 22177  008880  0100               	movlb	0	; () banked
 22178  008882  A17B               	btfss	OpenUSART@config& (0+255),0,b
 22179  008884  D002               	goto	l13752
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;UART.c: 121: {
 22183                           ;UART.c: 122: TXSTAbits.SYNC = 1;
 22184  008886  88AC               	bsf	4012,4,c	;volatile
 22185  008888  D000               	goto	l13752
 22186  00888A                     l13752:
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;UART.c: 123: }
 22190                           ;UART.c: 125: if(config&0x02)
 22191  00888A  0100               	movlb	0	; () banked
 22192  00888C  A37B               	btfss	OpenUSART@config& (0+255),1,b
 22193  00888E  D003               	goto	l13756
 22194                           
 22195                           ; BSR set to: 0
 22196                           ;UART.c: 126: {
 22197                           ;UART.c: 127: TXSTAbits.TX9 = 1;
 22198  008890  8CAC               	bsf	4012,6,c	;volatile
 22199                           
 22200                           ;UART.c: 128: RCSTAbits.RX9 = 1;
 22201  008892  8CAB               	bsf	4011,6,c	;volatile
 22202  008894  D000               	goto	l13756
 22203  008896                     l13756:
 22204                           
 22205                           ; BSR set to: 0
 22206                           ;UART.c: 129: }
 22207                           ;UART.c: 131: if(config&0x04)
 22208  008896  0100               	movlb	0	; () banked
 22209  008898  A57B               	btfss	OpenUSART@config& (0+255),2,b
 22210  00889A  D002               	goto	l13760
 22211                           
 22212                           ; BSR set to: 0
 22213                           ;UART.c: 132: {
 22214                           ;UART.c: 133: TXSTAbits.CSRC = 1;
 22215  00889C  8EAC               	bsf	4012,7,c	;volatile
 22216  00889E  D000               	goto	l13760
 22217  0088A0                     l13760:
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;UART.c: 134: }
 22221                           ;UART.c: 136: if(config&0x08)
 22222  0088A0  0100               	movlb	0	; () banked
 22223  0088A2  A77B               	btfss	OpenUSART@config& (0+255),3,b
 22224  0088A4  D002               	goto	l628
 22225                           
 22226                           ; BSR set to: 0
 22227                           ;UART.c: 137: {
 22228                           ;UART.c: 138: RCSTAbits.CREN = 1;
 22229  0088A6  88AB               	bsf	4011,4,c	;volatile
 22230                           
 22231                           ;UART.c: 139: }
 22232  0088A8  D002               	goto	l13764
 22233  0088AA                     l628:
 22234                           
 22235                           ; BSR set to: 0
 22236                           ;UART.c: 140: else
 22237                           ;UART.c: 141: {
 22238                           ;UART.c: 142: RCSTAbits.SREN = 1;
 22239  0088AA  8AAB               	bsf	4011,5,c	;volatile
 22240  0088AC  D000               	goto	l13764
 22241  0088AE                     l13764:
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;UART.c: 143: }
 22245                           ;UART.c: 145: if(config&0x10)
 22246  0088AE  0100               	movlb	0	; () banked
 22247  0088B0  A97B               	btfss	OpenUSART@config& (0+255),4,b
 22248  0088B2  D002               	goto	l13768
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;UART.c: 146: {
 22252                           ;UART.c: 147: TXSTAbits.BRGH = 1;
 22253  0088B4  84AC               	bsf	4012,2,c	;volatile
 22254  0088B6  D000               	goto	l13768
 22255  0088B8                     l13768:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;UART.c: 148: }
 22259                           ;UART.c: 150: if(config&0x20)
 22260  0088B8  0100               	movlb	0	; () banked
 22261  0088BA  AB7B               	btfss	OpenUSART@config& (0+255),5,b
 22262  0088BC  D002               	goto	l13772
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;UART.c: 151: {
 22266                           ;UART.c: 152: RCSTAbits.ADEN = 1;
 22267  0088BE  86AB               	bsf	4011,3,c	;volatile
 22268  0088C0  D000               	goto	l13772
 22269  0088C2                     l13772:
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;UART.c: 153: }
 22273                           ;UART.c: 155: if(config&0x40)
 22274  0088C2  0100               	movlb	0	; () banked
 22275  0088C4  AD7B               	btfss	OpenUSART@config& (0+255),6,b
 22276  0088C6  D003               	goto	l632
 22277                           
 22278                           ; BSR set to: 0
 22279                           ;UART.c: 156: {
 22280                           ;UART.c: 157: PIR1bits.RCIF = 0;
 22281  0088C8  9A9E               	bcf	3998,5,c	;volatile
 22282                           
 22283                           ;UART.c: 158: PIE1bits.RCIE = 1;
 22284  0088CA  8A9D               	bsf	3997,5,c	;volatile
 22285                           
 22286                           ;UART.c: 160: }
 22287  0088CC  D002               	goto	l13776
 22288  0088CE                     l632:
 22289                           
 22290                           ; BSR set to: 0
 22291                           ;UART.c: 161: else
 22292                           ;UART.c: 162: {
 22293                           ;UART.c: 163: PIE1bits.RCIE = 0;
 22294  0088CE  9A9D               	bcf	3997,5,c	;volatile
 22295  0088D0  D000               	goto	l13776
 22296  0088D2                     l13776:
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;UART.c: 164: }
 22300                           ;UART.c: 166: if(config&0x80)
 22301  0088D2  0100               	movlb	0	; () banked
 22302  0088D4  AF7B               	btfss	OpenUSART@config& (0+255),7,b
 22303  0088D6  D003               	goto	l634
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;UART.c: 167: {
 22307                           ;UART.c: 168: PIR1bits.TXIF = 0;
 22308  0088D8  989E               	bcf	3998,4,c	;volatile
 22309                           
 22310                           ;UART.c: 169: PIE1bits.TXIE = 1;
 22311  0088DA  889D               	bsf	3997,4,c	;volatile
 22312                           
 22313                           ;UART.c: 170: }
 22314  0088DC  D001               	goto	l635
 22315  0088DE                     l634:
 22316                           
 22317                           ; BSR set to: 0
 22318                           ;UART.c: 171: else
 22319                           ;UART.c: 172: {
 22320                           ;UART.c: 173: PIE1bits.TXIE = 0;
 22321  0088DE  989D               	bcf	3997,4,c	;volatile
 22322  0088E0                     l635:
 22323                           
 22324                           ; BSR set to: 0
 22325                           ;UART.c: 174: }
 22326                           ;UART.c: 176: SPBRG = spbrg;
 22327  0088E0  C079  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;UART.c: 177: SPBRGH = spbrg >> 8;
 22331  0088E4  0100               	movlb	0	; () banked
 22332  0088E6  517A               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 22333  0088E8  6EB0               	movwf	4016,c	;volatile
 22334                           
 22335                           ; BSR set to: 0
 22336                           ;UART.c: 179: TXSTAbits.TXEN = 1;
 22337  0088EA  8AAC               	bsf	4012,5,c	;volatile
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;UART.c: 180: RCSTAbits.SPEN = 1;
 22341  0088EC  8EAB               	bsf	4011,7,c	;volatile
 22342                           
 22343                           ; BSR set to: 0
 22344  0088EE  0012               	return		;funcret
 22345  0088F0                     __end_of_OpenUSART:
 22346                           	opt stack 0
 22347                           tblptru	equ	0xFF8
 22348                           tblptrh	equ	0xFF7
 22349                           tblptrl	equ	0xFF6
 22350                           tablat	equ	0xFF5
 22351                           prodh	equ	0xFF4
 22352                           prodl	equ	0xFF3
 22353                           intcon	equ	0xFF2
 22354                           intcon2	equ	0xFF1
 22355                           indf0	equ	0xFEF
 22356                           postinc0	equ	0xFEE
 22357                           fsr0h	equ	0xFEA
 22358                           fsr0l	equ	0xFE9
 22359                           wreg	equ	0xFE8
 22360                           indf1	equ	0xFE7
 22361                           postdec1	equ	0xFE5
 22362                           fsr1h	equ	0xFE2
 22363                           fsr1l	equ	0xFE1
 22364                           indf2	equ	0xFDF
 22365                           postinc2	equ	0xFDE
 22366                           postdec2	equ	0xFDD
 22367                           fsr2h	equ	0xFDA
 22368                           fsr2l	equ	0xFD9
 22369                           status	equ	0xFD8
 22370                           
 22371 ;; *************** function _Local_CloseUSART *****************
 22372 ;; Defined at:
 22373 ;;		line 64 in file "UART.c"
 22374 ;; Parameters:    Size  Location     Type
 22375 ;;		None
 22376 ;; Auto vars:     Size  Location     Type
 22377 ;;		None
 22378 ;; Return value:  Size  Location     Type
 22379 ;;		None               void
 22380 ;; Registers used:
 22381 ;;		None
 22382 ;; Tracked objects:
 22383 ;;		On entry : 0/0
 22384 ;;		On exit  : 0/0
 22385 ;;		Unchanged: 0/0
 22386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22391 ;;Total ram usage:        0 bytes
 22392 ;; Hardware stack levels used:    1
 22393 ;; Hardware stack levels required when called:    6
 22394 ;; This function calls:
 22395 ;;		Nothing
 22396 ;; This function is called by:
 22397 ;;		_InitUART
 22398 ;; This function uses a non-reentrant model
 22399 ;;
 22400                           
 22401                           	psect	text45
 22402  00930E                     __ptext45:
 22403                           	opt stack 0
 22404  00930E                     _Local_CloseUSART:
 22405                           	opt stack 22
 22406                           
 22407                           ;UART.c: 66: PIE1bits.RCIE = 0;
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;incstack = 0
 22411  00930E  9A9D               	bcf	3997,5,c	;volatile
 22412                           
 22413                           ;UART.c: 67: PIE1bits.TXIE = 0;
 22414  009310  989D               	bcf	3997,4,c	;volatile
 22415                           
 22416                           ;UART.c: 68: RCSTAbits.SPEN = 0;
 22417  009312  9EAB               	bcf	4011,7,c	;volatile
 22418                           
 22419                           ;UART.c: 69: RCSTAbits.CREN = 0;
 22420  009314  98AB               	bcf	4011,4,c	;volatile
 22421                           
 22422                           ;UART.c: 70: RCSTAbits.FERR = 0;
 22423  009316  94AB               	bcf	4011,2,c	;volatile
 22424                           
 22425                           ;UART.c: 71: TXSTAbits.TXEN = 0;
 22426  009318  9AAC               	bcf	4012,5,c	;volatile
 22427  00931A  0012               	return		;funcret
 22428  00931C                     __end_of_Local_CloseUSART:
 22429                           	opt stack 0
 22430                           tblptru	equ	0xFF8
 22431                           tblptrh	equ	0xFF7
 22432                           tblptrl	equ	0xFF6
 22433                           tablat	equ	0xFF5
 22434                           prodh	equ	0xFF4
 22435                           prodl	equ	0xFF3
 22436                           intcon	equ	0xFF2
 22437                           intcon2	equ	0xFF1
 22438                           indf0	equ	0xFEF
 22439                           postinc0	equ	0xFEE
 22440                           fsr0h	equ	0xFEA
 22441                           fsr0l	equ	0xFE9
 22442                           wreg	equ	0xFE8
 22443                           indf1	equ	0xFE7
 22444                           postdec1	equ	0xFE5
 22445                           fsr1h	equ	0xFE2
 22446                           fsr1l	equ	0xFE1
 22447                           indf2	equ	0xFDF
 22448                           postinc2	equ	0xFDE
 22449                           postdec2	equ	0xFDD
 22450                           fsr2h	equ	0xFDA
 22451                           fsr2l	equ	0xFD9
 22452                           status	equ	0xFD8
 22453                           
 22454 ;; *************** function _ClearUSART *****************
 22455 ;; Defined at:
 22456 ;;		line 216 in file "UART.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;		None
 22459 ;; Auto vars:     Size  Location     Type
 22460 ;;		None
 22461 ;; Return value:  Size  Location     Type
 22462 ;;		None               void
 22463 ;; Registers used:
 22464 ;;		wreg, status,2, cstack
 22465 ;; Tracked objects:
 22466 ;;		On entry : 0/0
 22467 ;;		On exit  : 0/0
 22468 ;;		Unchanged: 0/0
 22469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22474 ;;Total ram usage:        0 bytes
 22475 ;; Hardware stack levels used:    1
 22476 ;; Hardware stack levels required when called:    7
 22477 ;; This function calls:
 22478 ;;		_ReadUSART
 22479 ;; This function is called by:
 22480 ;;		_main
 22481 ;;		_InitUART
 22482 ;;		_UseBluetooth
 22483 ;; This function uses a non-reentrant model
 22484 ;;
 22485                           
 22486                           	psect	text46
 22487  00931C                     __ptext46:
 22488                           	opt stack 0
 22489  00931C                     _ClearUSART:
 22490                           	opt stack 22
 22491                           
 22492                           ;UART.c: 218: ReadUSART();
 22493                           
 22494                           ;incstack = 0
 22495  00931C  EC0D  F049         	call	_ReadUSART	;wreg free
 22496                           
 22497                           ;UART.c: 219: ReadUSART();
 22498  009320  EC0D  F049         	call	_ReadUSART	;wreg free
 22499                           
 22500                           ;UART.c: 220: ReadUSART();
 22501  009324  EC0D  F049         	call	_ReadUSART	;wreg free
 22502  009328  0012               	return		;funcret
 22503  00932A                     __end_of_ClearUSART:
 22504                           	opt stack 0
 22505                           tblptru	equ	0xFF8
 22506                           tblptrh	equ	0xFF7
 22507                           tblptrl	equ	0xFF6
 22508                           tablat	equ	0xFF5
 22509                           prodh	equ	0xFF4
 22510                           prodl	equ	0xFF3
 22511                           intcon	equ	0xFF2
 22512                           intcon2	equ	0xFF1
 22513                           indf0	equ	0xFEF
 22514                           postinc0	equ	0xFEE
 22515                           fsr0h	equ	0xFEA
 22516                           fsr0l	equ	0xFE9
 22517                           wreg	equ	0xFE8
 22518                           indf1	equ	0xFE7
 22519                           postdec1	equ	0xFE5
 22520                           fsr1h	equ	0xFE2
 22521                           fsr1l	equ	0xFE1
 22522                           indf2	equ	0xFDF
 22523                           postinc2	equ	0xFDE
 22524                           postdec2	equ	0xFDD
 22525                           fsr2h	equ	0xFDA
 22526                           fsr2l	equ	0xFD9
 22527                           status	equ	0xFD8
 22528                           
 22529 ;; *************** function _ReadUSART *****************
 22530 ;; Defined at:
 22531 ;;		line 227 in file "UART.c"
 22532 ;; Parameters:    Size  Location     Type
 22533 ;;		None
 22534 ;; Auto vars:     Size  Location     Type
 22535 ;;  data            1   25[BANK0 ] unsigned char 
 22536 ;; Return value:  Size  Location     Type
 22537 ;;                  1    wreg      unsigned char 
 22538 ;; Registers used:
 22539 ;;		wreg, status,2
 22540 ;; Tracked objects:
 22541 ;;		On entry : 0/0
 22542 ;;		On exit  : 0/0
 22543 ;;		Unchanged: 0/0
 22544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22549 ;;Total ram usage:        1 bytes
 22550 ;; Hardware stack levels used:    1
 22551 ;; Hardware stack levels required when called:    6
 22552 ;; This function calls:
 22553 ;;		Nothing
 22554 ;; This function is called by:
 22555 ;;		_ClearUSART
 22556 ;; This function uses a non-reentrant model
 22557 ;;
 22558                           
 22559                           	psect	text47
 22560  00921A                     __ptext47:
 22561                           	opt stack 0
 22562  00921A                     _ReadUSART:
 22563                           	opt stack 22
 22564                           
 22565                           ;UART.c: 229: unsigned char data;
 22566                           ;UART.c: 231: if(RCSTAbits.OERR)
 22567                           
 22568                           ;incstack = 0
 22569  00921A  A2AB               	btfss	4011,1,c	;volatile
 22570  00921C  D004               	goto	l655
 22571                           
 22572                           ;UART.c: 232: {
 22573                           ;UART.c: 234: RCSTAbits.CREN = 0;
 22574  00921E  98AB               	bcf	4011,4,c	;volatile
 22575                           
 22576                           ;UART.c: 235: RCSTAbits.CREN = 1;
 22577  009220  88AB               	bsf	4011,4,c	;volatile
 22578                           
 22579                           ;UART.c: 236: return 0;
 22580  009222  0E00               	movlw	0
 22581  009224  0012               	return	
 22582  009226                     l655:
 22583                           
 22584                           ;UART.c: 237: }
 22585                           ;UART.c: 239: data = RCREG;
 22586  009226  CFAE F079          	movff	4014,ReadUSART@data	;volatile
 22587                           
 22588                           ;UART.c: 240: return (data);
 22589  00922A  0100               	movlb	0	; () banked
 22590  00922C  5179               	movf	ReadUSART@data& (0+255),w,b
 22591  00922E  0012               	return	
 22592                           
 22593                           ; BSR set to: 0
 22594  009230  0012               	return		;funcret
 22595  009232                     __end_of_ReadUSART:
 22596                           	opt stack 0
 22597                           tblptru	equ	0xFF8
 22598                           tblptrh	equ	0xFF7
 22599                           tblptrl	equ	0xFF6
 22600                           tablat	equ	0xFF5
 22601                           prodh	equ	0xFF4
 22602                           prodl	equ	0xFF3
 22603                           intcon	equ	0xFF2
 22604                           intcon2	equ	0xFF1
 22605                           indf0	equ	0xFEF
 22606                           postinc0	equ	0xFEE
 22607                           fsr0h	equ	0xFEA
 22608                           fsr0l	equ	0xFE9
 22609                           wreg	equ	0xFE8
 22610                           indf1	equ	0xFE7
 22611                           postdec1	equ	0xFE5
 22612                           fsr1h	equ	0xFE2
 22613                           fsr1l	equ	0xFE1
 22614                           indf2	equ	0xFDF
 22615                           postinc2	equ	0xFDE
 22616                           postdec2	equ	0xFDD
 22617                           fsr2h	equ	0xFDA
 22618                           fsr2l	equ	0xFD9
 22619                           status	equ	0xFD8
 22620                           
 22621 ;; *************** function _InitTimers *****************
 22622 ;; Defined at:
 22623 ;;		line 51 in file "Timer.c"
 22624 ;; Parameters:    Size  Location     Type
 22625 ;;		None
 22626 ;; Auto vars:     Size  Location     Type
 22627 ;;		None
 22628 ;; Return value:  Size  Location     Type
 22629 ;;		None               void
 22630 ;; Registers used:
 22631 ;;		wreg, status,2, cstack
 22632 ;; Tracked objects:
 22633 ;;		On entry : 0/0
 22634 ;;		On exit  : 0/0
 22635 ;;		Unchanged: 0/0
 22636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22641 ;;Total ram usage:        0 bytes
 22642 ;; Hardware stack levels used:    1
 22643 ;; Hardware stack levels required when called:    7
 22644 ;; This function calls:
 22645 ;;		_InitTimer1
 22646 ;;		_InitTimer2
 22647 ;;		_InitTimer3
 22648 ;; This function is called by:
 22649 ;;		_Init_System
 22650 ;; This function uses a non-reentrant model
 22651 ;;
 22652                           
 22653                           	psect	text48
 22654  0092A4                     __ptext48:
 22655                           	opt stack 0
 22656  0092A4                     _InitTimers:
 22657                           	opt stack 22
 22658                           
 22659                           ;Timer.c: 53: InitTimer1();
 22660                           
 22661                           ;incstack = 0
 22662  0092A4  EC9C  F049         	call	_InitTimer1	;wreg free
 22663                           
 22664                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 22665  0092A8  809D               	bsf	3997,0,c	;volatile
 22666                           
 22667                           ;Timer.c: 55: InitTimer2();
 22668  0092AA  EC95  F049         	call	_InitTimer2	;wreg free
 22669                           
 22670                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 22671  0092AE  829D               	bsf	3997,1,c	;volatile
 22672                           
 22673                           ;Timer.c: 57: InitTimer3();
 22674  0092B0  ECCB  F049         	call	_InitTimer3	;wreg free
 22675                           
 22676                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 22677  0092B4  82A0               	bsf	4000,1,c	;volatile
 22678  0092B6  0012               	return		;funcret
 22679  0092B8                     __end_of_InitTimers:
 22680                           	opt stack 0
 22681                           tblptru	equ	0xFF8
 22682                           tblptrh	equ	0xFF7
 22683                           tblptrl	equ	0xFF6
 22684                           tablat	equ	0xFF5
 22685                           prodh	equ	0xFF4
 22686                           prodl	equ	0xFF3
 22687                           intcon	equ	0xFF2
 22688                           intcon2	equ	0xFF1
 22689                           indf0	equ	0xFEF
 22690                           postinc0	equ	0xFEE
 22691                           fsr0h	equ	0xFEA
 22692                           fsr0l	equ	0xFE9
 22693                           wreg	equ	0xFE8
 22694                           indf1	equ	0xFE7
 22695                           postdec1	equ	0xFE5
 22696                           fsr1h	equ	0xFE2
 22697                           fsr1l	equ	0xFE1
 22698                           indf2	equ	0xFDF
 22699                           postinc2	equ	0xFDE
 22700                           postdec2	equ	0xFDD
 22701                           fsr2h	equ	0xFDA
 22702                           fsr2l	equ	0xFD9
 22703                           status	equ	0xFD8
 22704                           
 22705 ;; *************** function _InitTimer3 *****************
 22706 ;; Defined at:
 22707 ;;		line 148 in file "Timer.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;		None
 22710 ;; Auto vars:     Size  Location     Type
 22711 ;;		None
 22712 ;; Return value:  Size  Location     Type
 22713 ;;		None               void
 22714 ;; Registers used:
 22715 ;;		wreg, status,2
 22716 ;; Tracked objects:
 22717 ;;		On entry : 0/0
 22718 ;;		On exit  : 0/0
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22725 ;;Total ram usage:        0 bytes
 22726 ;; Hardware stack levels used:    1
 22727 ;; Hardware stack levels required when called:    6
 22728 ;; This function calls:
 22729 ;;		Nothing
 22730 ;; This function is called by:
 22731 ;;		_InitTimers
 22732 ;; This function uses a non-reentrant model
 22733 ;;
 22734                           
 22735                           	psect	text49
 22736  009396                     __ptext49:
 22737                           	opt stack 0
 22738  009396                     _InitTimer3:
 22739                           	opt stack 22
 22740                           
 22741                           ;Timer.c: 150: T3CONbits.RD16 = TRUE;
 22742                           
 22743                           ;incstack = 0
 22744  009396  8EB1               	bsf	4017,7,c	;volatile
 22745                           
 22746                           ;Timer.c: 151: T3CONbits.T3CKPS = 0x3;
 22747  009398  0E30               	movlw	48
 22748  00939A  12B1               	iorwf	4017,f,c	;volatile
 22749                           
 22750                           ;Timer.c: 152: T3CONbits.TMR3CS = FALSE;
 22751  00939C  92B1               	bcf	4017,1,c	;volatile
 22752  00939E  0012               	return		;funcret
 22753  0093A0                     __end_of_InitTimer3:
 22754                           	opt stack 0
 22755                           tblptru	equ	0xFF8
 22756                           tblptrh	equ	0xFF7
 22757                           tblptrl	equ	0xFF6
 22758                           tablat	equ	0xFF5
 22759                           prodh	equ	0xFF4
 22760                           prodl	equ	0xFF3
 22761                           intcon	equ	0xFF2
 22762                           intcon2	equ	0xFF1
 22763                           indf0	equ	0xFEF
 22764                           postinc0	equ	0xFEE
 22765                           fsr0h	equ	0xFEA
 22766                           fsr0l	equ	0xFE9
 22767                           wreg	equ	0xFE8
 22768                           indf1	equ	0xFE7
 22769                           postdec1	equ	0xFE5
 22770                           fsr1h	equ	0xFE2
 22771                           fsr1l	equ	0xFE1
 22772                           indf2	equ	0xFDF
 22773                           postinc2	equ	0xFDE
 22774                           postdec2	equ	0xFDD
 22775                           fsr2h	equ	0xFDA
 22776                           fsr2l	equ	0xFD9
 22777                           status	equ	0xFD8
 22778                           
 22779 ;; *************** function _InitTimer2 *****************
 22780 ;; Defined at:
 22781 ;;		line 123 in file "Timer.c"
 22782 ;; Parameters:    Size  Location     Type
 22783 ;;		None
 22784 ;; Auto vars:     Size  Location     Type
 22785 ;;		None
 22786 ;; Return value:  Size  Location     Type
 22787 ;;		None               void
 22788 ;; Registers used:
 22789 ;;		wreg, status,2
 22790 ;; Tracked objects:
 22791 ;;		On entry : 0/0
 22792 ;;		On exit  : 0/0
 22793 ;;		Unchanged: 0/0
 22794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22799 ;;Total ram usage:        0 bytes
 22800 ;; Hardware stack levels used:    1
 22801 ;; Hardware stack levels required when called:    6
 22802 ;; This function calls:
 22803 ;;		Nothing
 22804 ;; This function is called by:
 22805 ;;		_InitTimers
 22806 ;; This function uses a non-reentrant model
 22807 ;;
 22808                           
 22809                           	psect	text50
 22810  00932A                     __ptext50:
 22811                           	opt stack 0
 22812  00932A                     _InitTimer2:
 22813                           	opt stack 22
 22814                           
 22815                           ;Timer.c: 125: T2CONbits.T2OUTPS = 0xE;
 22816                           
 22817                           ;incstack = 0
 22818  00932A  50CA               	movf	4042,w,c	;volatile
 22819  00932C  0B87               	andlw	-121
 22820  00932E  0970               	iorlw	112
 22821  009330  6ECA               	movwf	4042,c	;volatile
 22822                           
 22823                           ;Timer.c: 126: T2CONbits.T2CKPS = 0x3;
 22824  009332  0E03               	movlw	3
 22825  009334  12CA               	iorwf	4042,f,c	;volatile
 22826  009336  0012               	return		;funcret
 22827  009338                     __end_of_InitTimer2:
 22828                           	opt stack 0
 22829                           tblptru	equ	0xFF8
 22830                           tblptrh	equ	0xFF7
 22831                           tblptrl	equ	0xFF6
 22832                           tablat	equ	0xFF5
 22833                           prodh	equ	0xFF4
 22834                           prodl	equ	0xFF3
 22835                           intcon	equ	0xFF2
 22836                           intcon2	equ	0xFF1
 22837                           indf0	equ	0xFEF
 22838                           postinc0	equ	0xFEE
 22839                           fsr0h	equ	0xFEA
 22840                           fsr0l	equ	0xFE9
 22841                           wreg	equ	0xFE8
 22842                           indf1	equ	0xFE7
 22843                           postdec1	equ	0xFE5
 22844                           fsr1h	equ	0xFE2
 22845                           fsr1l	equ	0xFE1
 22846                           indf2	equ	0xFDF
 22847                           postinc2	equ	0xFDE
 22848                           postdec2	equ	0xFDD
 22849                           fsr2h	equ	0xFDA
 22850                           fsr2l	equ	0xFD9
 22851                           status	equ	0xFD8
 22852                           
 22853 ;; *************** function _InitTimer1 *****************
 22854 ;; Defined at:
 22855 ;;		line 94 in file "Timer.c"
 22856 ;; Parameters:    Size  Location     Type
 22857 ;;		None
 22858 ;; Auto vars:     Size  Location     Type
 22859 ;;		None
 22860 ;; Return value:  Size  Location     Type
 22861 ;;		None               void
 22862 ;; Registers used:
 22863 ;;		wreg, status,2
 22864 ;; Tracked objects:
 22865 ;;		On entry : 0/0
 22866 ;;		On exit  : 0/0
 22867 ;;		Unchanged: 0/0
 22868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22873 ;;Total ram usage:        0 bytes
 22874 ;; Hardware stack levels used:    1
 22875 ;; Hardware stack levels required when called:    6
 22876 ;; This function calls:
 22877 ;;		Nothing
 22878 ;; This function is called by:
 22879 ;;		_InitTimers
 22880 ;; This function uses a non-reentrant model
 22881 ;;
 22882                           
 22883                           	psect	text51
 22884  009338                     __ptext51:
 22885                           	opt stack 0
 22886  009338                     _InitTimer1:
 22887                           	opt stack 22
 22888                           
 22889                           ;Timer.c: 96: T1CONbits.RD16 = TRUE;
 22890                           
 22891                           ;incstack = 0
 22892  009338  8ECD               	bsf	4045,7,c	;volatile
 22893                           
 22894                           ;Timer.c: 97: T1CONbits.T1RUN = FALSE;
 22895  00933A  9CCD               	bcf	4045,6,c	;volatile
 22896                           
 22897                           ;Timer.c: 98: T1CONbits.T1CKPS = 0x3;
 22898  00933C  0E30               	movlw	48
 22899  00933E  12CD               	iorwf	4045,f,c	;volatile
 22900                           
 22901                           ;Timer.c: 99: T1CONbits.T1OSCEN = FALSE;
 22902  009340  96CD               	bcf	4045,3,c	;volatile
 22903                           
 22904                           ;Timer.c: 100: T1CONbits.TMR1CS = FALSE;
 22905  009342  92CD               	bcf	4045,1,c	;volatile
 22906  009344  0012               	return		;funcret
 22907  009346                     __end_of_InitTimer1:
 22908                           	opt stack 0
 22909                           tblptru	equ	0xFF8
 22910                           tblptrh	equ	0xFF7
 22911                           tblptrl	equ	0xFF6
 22912                           tablat	equ	0xFF5
 22913                           prodh	equ	0xFF4
 22914                           prodl	equ	0xFF3
 22915                           intcon	equ	0xFF2
 22916                           intcon2	equ	0xFF1
 22917                           indf0	equ	0xFEF
 22918                           postinc0	equ	0xFEE
 22919                           fsr0h	equ	0xFEA
 22920                           fsr0l	equ	0xFE9
 22921                           wreg	equ	0xFE8
 22922                           indf1	equ	0xFE7
 22923                           postdec1	equ	0xFE5
 22924                           fsr1h	equ	0xFE2
 22925                           fsr1l	equ	0xFE1
 22926                           indf2	equ	0xFDF
 22927                           postinc2	equ	0xFDE
 22928                           postdec2	equ	0xFDD
 22929                           fsr2h	equ	0xFDA
 22930                           fsr2l	equ	0xFD9
 22931                           status	equ	0xFD8
 22932                           
 22933 ;; *************** function _InitIR *****************
 22934 ;; Defined at:
 22935 ;;		line 80 in file "IR.c"
 22936 ;; Parameters:    Size  Location     Type
 22937 ;;		None
 22938 ;; Auto vars:     Size  Location     Type
 22939 ;;		None
 22940 ;; Return value:  Size  Location     Type
 22941 ;;		None               void
 22942 ;; Registers used:
 22943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22944 ;; Tracked objects:
 22945 ;;		On entry : 0/0
 22946 ;;		On exit  : 0/0
 22947 ;;		Unchanged: 0/0
 22948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22953 ;;Total ram usage:        0 bytes
 22954 ;; Hardware stack levels used:    1
 22955 ;; Hardware stack levels required when called:    7
 22956 ;; This function calls:
 22957 ;;		_InitTimer0
 22958 ;;		_ReadIRpin
 22959 ;;		_ResetTimer0
 22960 ;;		_cleanBuffer16bit
 22961 ;; This function is called by:
 22962 ;;		_Init_System
 22963 ;; This function uses a non-reentrant model
 22964 ;;
 22965                           
 22966                           	psect	text52
 22967  008DD0                     __ptext52:
 22968                           	opt stack 0
 22969  008DD0                     _InitIR:
 22970                           	opt stack 22
 22971                           
 22972                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 22973                           
 22974                           ;incstack = 0
 22975  008DD0  887D               	bsf	3965,4,c	;volatile
 22976                           
 22977                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 22978  008DD2  ECA3  F049         	call	_ReadIRpin	;wreg free
 22979  008DD6  6E31               	movwf	_IRpinOLD,c
 22980                           
 22981                           ;IR.c: 87: InitTimer0();
 22982  008DD8  EC78  F049         	call	_InitTimer0	;wreg free
 22983                           
 22984                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 72);
 22985  008DDC  0E00               	movlw	low _IRRawCode
 22986  008DDE  0100               	movlb	0	; () banked
 22987  008DE0  6F79               	movwf	cleanBuffer16bit@data& (0+255),b
 22988  008DE2  0E07               	movlw	high _IRRawCode
 22989  008DE4  0100               	movlb	0	; () banked
 22990  008DE6  6F7A               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 22991  008DE8  0E00               	movlw	0
 22992  008DEA  0100               	movlb	0	; () banked
 22993  008DEC  6F7C               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 22994  008DEE  0E48               	movlw	72
 22995  008DF0  6F7B               	movwf	cleanBuffer16bit@count& (0+255),b
 22996  008DF2  EC8B  F045         	call	_cleanBuffer16bit	;wreg free
 22997                           
 22998                           ;IR.c: 90: IR_NEC = 0;
 22999  008DF6  0E00               	movlw	0
 23000  008DF8  0100               	movlb	0	; () banked
 23001  008DFA  6FE1               	movwf	_IR_NEC& (0+255),b
 23002  008DFC  0E00               	movlw	0
 23003  008DFE  6FE2               	movwf	(_IR_NEC+1)& (0+255),b
 23004  008E00  0E00               	movlw	0
 23005  008E02  6FE3               	movwf	(_IR_NEC+2)& (0+255),b
 23006  008E04  0E00               	movlw	0
 23007  008E06  6FE4               	movwf	(_IR_NEC+3)& (0+255),b
 23008                           
 23009                           ; BSR set to: 0
 23010                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 23011  008E08  9ED5               	bcf	4053,7,c	;volatile
 23012                           
 23013                           ; BSR set to: 0
 23014                           ;IR.c: 93: ResetTimer0();
 23015  008E0A  ECD0  F049         	call	_ResetTimer0	;wreg free
 23016                           
 23017                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 23018  008E0E  9AF2               	bcf	intcon,5,c	;volatile
 23019                           
 23020                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 23021  008E10  94F2               	bcf	intcon,2,c	;volatile
 23022                           
 23023                           ;IR.c: 98: INTCONbits.RBIF = 0;
 23024  008E12  90F2               	bcf	intcon,0,c	;volatile
 23025                           
 23026                           ;IR.c: 99: INTCONbits.RBIE = 1;
 23027  008E14  86F2               	bsf	intcon,3,c	;volatile
 23028  008E16  0012               	return		;funcret
 23029  008E18                     __end_of_InitIR:
 23030                           	opt stack 0
 23031                           tblptru	equ	0xFF8
 23032                           tblptrh	equ	0xFF7
 23033                           tblptrl	equ	0xFF6
 23034                           tablat	equ	0xFF5
 23035                           prodh	equ	0xFF4
 23036                           prodl	equ	0xFF3
 23037                           intcon	equ	0xFF2
 23038                           intcon2	equ	0xFF1
 23039                           indf0	equ	0xFEF
 23040                           postinc0	equ	0xFEE
 23041                           fsr0h	equ	0xFEA
 23042                           fsr0l	equ	0xFE9
 23043                           wreg	equ	0xFE8
 23044                           indf1	equ	0xFE7
 23045                           postdec1	equ	0xFE5
 23046                           fsr1h	equ	0xFE2
 23047                           fsr1l	equ	0xFE1
 23048                           indf2	equ	0xFDF
 23049                           postinc2	equ	0xFDE
 23050                           postdec2	equ	0xFDD
 23051                           fsr2h	equ	0xFDA
 23052                           fsr2l	equ	0xFD9
 23053                           status	equ	0xFD8
 23054                           
 23055 ;; *************** function _cleanBuffer16bit *****************
 23056 ;; Defined at:
 23057 ;;		line 141 in file "MISC.c"
 23058 ;; Parameters:    Size  Location     Type
 23059 ;;  data            2   25[BANK0 ] PTR unsigned int 
 23060 ;;		 -> IRRawCode(144), 
 23061 ;;  count           2   27[BANK0 ] int 
 23062 ;; Auto vars:     Size  Location     Type
 23063 ;;  i               1   32[BANK0 ] unsigned char 
 23064 ;; Return value:  Size  Location     Type
 23065 ;;		None               void
 23066 ;; Registers used:
 23067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23068 ;; Tracked objects:
 23069 ;;		On entry : 0/0
 23070 ;;		On exit  : 0/0
 23071 ;;		Unchanged: 0/0
 23072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23073 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23075 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23076 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23077 ;;Total ram usage:        8 bytes
 23078 ;; Hardware stack levels used:    1
 23079 ;; Hardware stack levels required when called:    6
 23080 ;; This function calls:
 23081 ;;		Nothing
 23082 ;; This function is called by:
 23083 ;;		_InitIR
 23084 ;; This function uses a non-reentrant model
 23085 ;;
 23086                           
 23087                           	psect	text53
 23088  008B16                     __ptext53:
 23089                           	opt stack 0
 23090  008B16                     _cleanBuffer16bit:
 23091                           	opt stack 22
 23092                           
 23093                           ;MISC.c: 143: unsigned char i=0;
 23094                           
 23095                           ;incstack = 0
 23096  008B16  0E00               	movlw	0
 23097  008B18  0100               	movlb	0	; () banked
 23098  008B1A  6F80               	movwf	cleanBuffer16bit@i& (0+255),b
 23099                           
 23100                           ;MISC.c: 144: for(i=0; i<count;i++)
 23101  008B1C  0E00               	movlw	0
 23102  008B1E  0100               	movlb	0	; () banked
 23103  008B20  6F80               	movwf	cleanBuffer16bit@i& (0+255),b
 23104  008B22  D012               	goto	l13710
 23105  008B24                     l13706:
 23106                           
 23107                           ; BSR set to: 0
 23108                           ;MISC.c: 145: {
 23109                           ;MISC.c: 146: data[i]= 0;
 23110  008B24  0100               	movlb	0	; () banked
 23111  008B26  5180               	movf	cleanBuffer16bit@i& (0+255),w,b
 23112  008B28  0D02               	mullw	2
 23113  008B2A  50F3               	movf	prodl,w,c
 23114  008B2C  0100               	movlb	0	; () banked
 23115  008B2E  2579               	addwf	cleanBuffer16bit@data& (0+255),w,b
 23116  008B30  6ED9               	movwf	fsr2l,c
 23117  008B32  50F4               	movf	prodh,w,c
 23118  008B34  0100               	movlb	0	; () banked
 23119  008B36  217A               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 23120  008B38  6EDA               	movwf	fsr2h,c
 23121  008B3A  0E00               	movlw	0
 23122  008B3C  6EDE               	movwf	postinc2,c
 23123  008B3E  0E00               	movlw	0
 23124  008B40  6EDD               	movwf	postdec2,c
 23125                           
 23126                           ; BSR set to: 0
 23127  008B42  0100               	movlb	0	; () banked
 23128  008B44  2B80               	incf	cleanBuffer16bit@i& (0+255),f,b
 23129  008B46  D000               	goto	l13710
 23130  008B48                     l13710:
 23131                           
 23132                           ; BSR set to: 0
 23133  008B48  0100               	movlb	0	; () banked
 23134  008B4A  5180               	movf	cleanBuffer16bit@i& (0+255),w,b
 23135  008B4C  0100               	movlb	0	; () banked
 23136  008B4E  6F7D               	movwf	??_cleanBuffer16bit& (0+255),b
 23137  008B50  6B7E               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 23138  008B52  0100               	movlb	0	; () banked
 23139  008B54  517B               	movf	cleanBuffer16bit@count& (0+255),w,b
 23140  008B56  0100               	movlb	0	; () banked
 23141  008B58  5D7D               	subwf	??_cleanBuffer16bit& (0+255),w,b
 23142  008B5A  0100               	movlb	0	; () banked
 23143  008B5C  517E               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 23144  008B5E  0A80               	xorlw	128
 23145  008B60  0100               	movlb	0	; () banked
 23146  008B62  6F7F               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 23147  008B64  0100               	movlb	0	; () banked
 23148  008B66  517C               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 23149  008B68  0A80               	xorlw	128
 23150  008B6A  0100               	movlb	0	; () banked
 23151  008B6C  597F               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 23152  008B6E  A0D8               	btfss	status,0,c
 23153  008B70  D7D9               	goto	l13706
 23154                           
 23155                           ; BSR set to: 0
 23156                           
 23157                           ; BSR set to: 0
 23158  008B72  0012               	return		;funcret
 23159  008B74                     __end_of_cleanBuffer16bit:
 23160                           	opt stack 0
 23161                           tblptru	equ	0xFF8
 23162                           tblptrh	equ	0xFF7
 23163                           tblptrl	equ	0xFF6
 23164                           tablat	equ	0xFF5
 23165                           prodh	equ	0xFF4
 23166                           prodl	equ	0xFF3
 23167                           intcon	equ	0xFF2
 23168                           intcon2	equ	0xFF1
 23169                           indf0	equ	0xFEF
 23170                           postinc0	equ	0xFEE
 23171                           fsr0h	equ	0xFEA
 23172                           fsr0l	equ	0xFE9
 23173                           wreg	equ	0xFE8
 23174                           indf1	equ	0xFE7
 23175                           postdec1	equ	0xFE5
 23176                           fsr1h	equ	0xFE2
 23177                           fsr1l	equ	0xFE1
 23178                           indf2	equ	0xFDF
 23179                           postinc2	equ	0xFDE
 23180                           postdec2	equ	0xFDD
 23181                           fsr2h	equ	0xFDA
 23182                           fsr2l	equ	0xFD9
 23183                           status	equ	0xFD8
 23184                           
 23185 ;; *************** function _ResetTimer0 *****************
 23186 ;; Defined at:
 23187 ;;		line 79 in file "Timer.c"
 23188 ;; Parameters:    Size  Location     Type
 23189 ;;		None
 23190 ;; Auto vars:     Size  Location     Type
 23191 ;;		None
 23192 ;; Return value:  Size  Location     Type
 23193 ;;		None               void
 23194 ;; Registers used:
 23195 ;;		wreg, status,2
 23196 ;; Tracked objects:
 23197 ;;		On entry : 0/0
 23198 ;;		On exit  : 0/0
 23199 ;;		Unchanged: 0/0
 23200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23205 ;;Total ram usage:        0 bytes
 23206 ;; Hardware stack levels used:    1
 23207 ;; Hardware stack levels required when called:    6
 23208 ;; This function calls:
 23209 ;;		Nothing
 23210 ;; This function is called by:
 23211 ;;		_InitIR
 23212 ;; This function uses a non-reentrant model
 23213 ;;
 23214                           
 23215                           	psect	text54
 23216  0093A0                     __ptext54:
 23217                           	opt stack 0
 23218  0093A0                     _ResetTimer0:
 23219                           	opt stack 22
 23220                           
 23221                           ;Timer.c: 85: TMR0H = 0;
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;incstack = 0
 23225  0093A0  0E00               	movlw	0
 23226  0093A2  6ED7               	movwf	4055,c	;volatile
 23227                           
 23228                           ;Timer.c: 86: TMR0L = 2;
 23229  0093A4  0E02               	movlw	2
 23230  0093A6  6ED6               	movwf	4054,c	;volatile
 23231  0093A8  0012               	return		;funcret
 23232  0093AA                     __end_of_ResetTimer0:
 23233                           	opt stack 0
 23234                           tblptru	equ	0xFF8
 23235                           tblptrh	equ	0xFF7
 23236                           tblptrl	equ	0xFF6
 23237                           tablat	equ	0xFF5
 23238                           prodh	equ	0xFF4
 23239                           prodl	equ	0xFF3
 23240                           intcon	equ	0xFF2
 23241                           intcon2	equ	0xFF1
 23242                           indf0	equ	0xFEF
 23243                           postinc0	equ	0xFEE
 23244                           fsr0h	equ	0xFEA
 23245                           fsr0l	equ	0xFE9
 23246                           wreg	equ	0xFE8
 23247                           indf1	equ	0xFE7
 23248                           postdec1	equ	0xFE5
 23249                           fsr1h	equ	0xFE2
 23250                           fsr1l	equ	0xFE1
 23251                           indf2	equ	0xFDF
 23252                           postinc2	equ	0xFDE
 23253                           postdec2	equ	0xFDD
 23254                           fsr2h	equ	0xFDA
 23255                           fsr2l	equ	0xFD9
 23256                           status	equ	0xFD8
 23257                           
 23258 ;; *************** function _ReadIRpin *****************
 23259 ;; Defined at:
 23260 ;;		line 107 in file "IR.c"
 23261 ;; Parameters:    Size  Location     Type
 23262 ;;		None
 23263 ;; Auto vars:     Size  Location     Type
 23264 ;;		None
 23265 ;; Return value:  Size  Location     Type
 23266 ;;                  1    wreg      unsigned char 
 23267 ;; Registers used:
 23268 ;;		wreg
 23269 ;; Tracked objects:
 23270 ;;		On entry : 0/0
 23271 ;;		On exit  : 0/0
 23272 ;;		Unchanged: 0/0
 23273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23278 ;;Total ram usage:        0 bytes
 23279 ;; Hardware stack levels used:    1
 23280 ;; Hardware stack levels required when called:    6
 23281 ;; This function calls:
 23282 ;;		Nothing
 23283 ;; This function is called by:
 23284 ;;		_main
 23285 ;;		_InitIR
 23286 ;;		_UseIRCode
 23287 ;;		_SendNEC_wait
 23288 ;;		_SendRF_wait
 23289 ;; This function uses a non-reentrant model
 23290 ;;
 23291                           
 23292                           	psect	text55
 23293  009346                     __ptext55:
 23294                           	opt stack 0
 23295  009346                     _ReadIRpin:
 23296                           	opt stack 21
 23297                           
 23298                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 23299                           
 23300                           ;incstack = 0
 23301  009346  A881               	btfss	3969,4,c	;volatile
 23302  009348  D002               	goto	l13076
 23303                           
 23304                           ;IR.c: 111: {
 23305                           ;IR.c: 112: return (1);
 23306  00934A  0E01               	movlw	1
 23307                           
 23308                           ;IR.c: 113: }
 23309  00934C  0012               	return	
 23310  00934E                     l13076:
 23311                           
 23312                           ;IR.c: 114: else
 23313                           ;IR.c: 115: {
 23314                           ;IR.c: 116: return 0;
 23315  00934E  0E00               	movlw	0
 23316  009350  0012               	return	
 23317  009352  0012               	return		;funcret
 23318  009354                     __end_of_ReadIRpin:
 23319                           	opt stack 0
 23320                           tblptru	equ	0xFF8
 23321                           tblptrh	equ	0xFF7
 23322                           tblptrl	equ	0xFF6
 23323                           tablat	equ	0xFF5
 23324                           prodh	equ	0xFF4
 23325                           prodl	equ	0xFF3
 23326                           intcon	equ	0xFF2
 23327                           intcon2	equ	0xFF1
 23328                           indf0	equ	0xFEF
 23329                           postinc0	equ	0xFEE
 23330                           fsr0h	equ	0xFEA
 23331                           fsr0l	equ	0xFE9
 23332                           wreg	equ	0xFE8
 23333                           indf1	equ	0xFE7
 23334                           postdec1	equ	0xFE5
 23335                           fsr1h	equ	0xFE2
 23336                           fsr1l	equ	0xFE1
 23337                           indf2	equ	0xFDF
 23338                           postinc2	equ	0xFDE
 23339                           postdec2	equ	0xFDD
 23340                           fsr2h	equ	0xFDA
 23341                           fsr2l	equ	0xFD9
 23342                           status	equ	0xFD8
 23343                           
 23344 ;; *************** function _InitTimer0 *****************
 23345 ;; Defined at:
 23346 ;;		line 66 in file "Timer.c"
 23347 ;; Parameters:    Size  Location     Type
 23348 ;;		None
 23349 ;; Auto vars:     Size  Location     Type
 23350 ;;		None
 23351 ;; Return value:  Size  Location     Type
 23352 ;;		None               void
 23353 ;; Registers used:
 23354 ;;		wreg, status,2
 23355 ;; Tracked objects:
 23356 ;;		On entry : 0/0
 23357 ;;		On exit  : 0/0
 23358 ;;		Unchanged: 0/0
 23359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23364 ;;Total ram usage:        0 bytes
 23365 ;; Hardware stack levels used:    1
 23366 ;; Hardware stack levels required when called:    6
 23367 ;; This function calls:
 23368 ;;		Nothing
 23369 ;; This function is called by:
 23370 ;;		_InitIR
 23371 ;; This function uses a non-reentrant model
 23372 ;;
 23373                           
 23374                           	psect	text56
 23375  0092F0                     __ptext56:
 23376                           	opt stack 0
 23377  0092F0                     _InitTimer0:
 23378                           	opt stack 22
 23379                           
 23380                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 23381                           
 23382                           ;incstack = 0
 23383  0092F0  9CD5               	bcf	4053,6,c	;volatile
 23384                           
 23385                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 23386  0092F2  9AD5               	bcf	4053,5,c	;volatile
 23387                           
 23388                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 23389  0092F4  96D5               	bcf	4053,3,c	;volatile
 23390                           
 23391                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 23392  0092F6  50D5               	movf	4053,w,c	;volatile
 23393  0092F8  0BF8               	andlw	-8
 23394  0092FA  0904               	iorlw	4
 23395  0092FC  6ED5               	movwf	4053,c	;volatile
 23396  0092FE  0012               	return		;funcret
 23397  009300                     __end_of_InitTimer0:
 23398                           	opt stack 0
 23399                           tblptru	equ	0xFF8
 23400                           tblptrh	equ	0xFF7
 23401                           tblptrl	equ	0xFF6
 23402                           tablat	equ	0xFF5
 23403                           prodh	equ	0xFF4
 23404                           prodl	equ	0xFF3
 23405                           intcon	equ	0xFF2
 23406                           intcon2	equ	0xFF1
 23407                           indf0	equ	0xFEF
 23408                           postinc0	equ	0xFEE
 23409                           fsr0h	equ	0xFEA
 23410                           fsr0l	equ	0xFE9
 23411                           wreg	equ	0xFE8
 23412                           indf1	equ	0xFE7
 23413                           postdec1	equ	0xFE5
 23414                           fsr1h	equ	0xFE2
 23415                           fsr1l	equ	0xFE1
 23416                           indf2	equ	0xFDF
 23417                           postinc2	equ	0xFDE
 23418                           postdec2	equ	0xFDD
 23419                           fsr2h	equ	0xFDA
 23420                           fsr2l	equ	0xFD9
 23421                           status	equ	0xFD8
 23422                           
 23423 ;; *************** function _InitBluetooth *****************
 23424 ;; Defined at:
 23425 ;;		line 65 in file "Bluetooth.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;		None
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;		None
 23430 ;; Return value:  Size  Location     Type
 23431 ;;		None               void
 23432 ;; Registers used:
 23433 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23434 ;; Tracked objects:
 23435 ;;		On entry : 0/0
 23436 ;;		On exit  : 0/0
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23443 ;;Total ram usage:        0 bytes
 23444 ;; Hardware stack levels used:    1
 23445 ;; Hardware stack levels required when called:   12
 23446 ;; This function calls:
 23447 ;;		_BluetoothConfigured
 23448 ;;		_BluetoothInitialSetup
 23449 ;;		_ResetBlue
 23450 ;;		_cleanBuffer
 23451 ;; This function is called by:
 23452 ;;		_Init_System
 23453 ;; This function uses a non-reentrant model
 23454 ;;
 23455                           
 23456                           	psect	text57
 23457  008C80                     __ptext57:
 23458                           	opt stack 0
 23459  008C80                     _InitBluetooth:
 23460                           	opt stack 17
 23461                           
 23462                           ;Bluetooth.c: 67: cleanBuffer(ReceivedString,255);
 23463                           
 23464                           ;incstack = 0
 23465  008C80  0E00               	movlw	low _ReceivedString
 23466  008C82  0100               	movlb	0	; () banked
 23467  008C84  6F79               	movwf	cleanBuffer@data& (0+255),b
 23468  008C86  0E06               	movlw	high _ReceivedString
 23469  008C88  0100               	movlb	0	; () banked
 23470  008C8A  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23471  008C8C  0E00               	movlw	0
 23472  008C8E  0100               	movlb	0	; () banked
 23473  008C90  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23474  008C92  697B               	setf	cleanBuffer@count& (0+255),b
 23475  008C94  ECBA  F045         	call	_cleanBuffer	;wreg free
 23476                           
 23477                           ;Bluetooth.c: 68: ReceivedStringPos = 0;
 23478  008C98  0E00               	movlw	0
 23479  008C9A  0100               	movlb	0	; () banked
 23480  008C9C  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;Bluetooth.c: 69: cleanBuffer(CommandString,255);
 23484  008C9E  0E00               	movlw	low _CommandString
 23485  008CA0  0100               	movlb	0	; () banked
 23486  008CA2  6F79               	movwf	cleanBuffer@data& (0+255),b
 23487  008CA4  0E05               	movlw	high _CommandString
 23488  008CA6  0100               	movlb	0	; () banked
 23489  008CA8  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23490  008CAA  0E00               	movlw	0
 23491  008CAC  0100               	movlb	0	; () banked
 23492  008CAE  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23493  008CB0  697B               	setf	cleanBuffer@count& (0+255),b
 23494  008CB2  ECBA  F045         	call	_cleanBuffer	;wreg free
 23495                           
 23496                           ;Bluetooth.c: 70: CommandStringPos = 0;
 23497  008CB6  0E00               	movlw	0
 23498  008CB8  6E29               	movwf	_CommandStringPos,c
 23499                           
 23500                           ;Bluetooth.c: 72: LATA &= ~0x10;
 23501  008CBA  9889               	bcf	3977,4,c	;volatile
 23502                           
 23503                           ;Bluetooth.c: 73: LATA |= 0x08;
 23504  008CBC  8689               	bsf	3977,3,c	;volatile
 23505                           
 23506                           ;Bluetooth.c: 74: LATA &= ~0x10;
 23507  008CBE  9889               	bcf	3977,4,c	;volatile
 23508                           
 23509                           ;Bluetooth.c: 75: if(!BluetoothConfigured())
 23510  008CC0  ECFF  F048         	call	_BluetoothConfigured	;wreg free
 23511  008CC4  0900               	iorlw	0
 23512  008CC6  A4D8               	btfss	status,2,c
 23513  008CC8  0012               	return	
 23514                           
 23515                           ;Bluetooth.c: 76: {
 23516                           ;Bluetooth.c: 77: BluetoothInitialSetup();
 23517  008CCA  ECD3  F025         	call	_BluetoothInitialSetup	;wreg free
 23518                           
 23519                           ;Bluetooth.c: 78: ResetBlue();
 23520  008CCE  EC44  F048         	call	_ResetBlue	;wreg free
 23521  008CD2  0012               	return	
 23522  008CD4  0012               	return		;funcret
 23523  008CD6                     __end_of_InitBluetooth:
 23524                           	opt stack 0
 23525                           tblptru	equ	0xFF8
 23526                           tblptrh	equ	0xFF7
 23527                           tblptrl	equ	0xFF6
 23528                           tablat	equ	0xFF5
 23529                           prodh	equ	0xFF4
 23530                           prodl	equ	0xFF3
 23531                           intcon	equ	0xFF2
 23532                           intcon2	equ	0xFF1
 23533                           indf0	equ	0xFEF
 23534                           postinc0	equ	0xFEE
 23535                           fsr0h	equ	0xFEA
 23536                           fsr0l	equ	0xFE9
 23537                           wreg	equ	0xFE8
 23538                           indf1	equ	0xFE7
 23539                           postdec1	equ	0xFE5
 23540                           fsr1h	equ	0xFE2
 23541                           fsr1l	equ	0xFE1
 23542                           indf2	equ	0xFDF
 23543                           postinc2	equ	0xFDE
 23544                           postdec2	equ	0xFDD
 23545                           fsr2h	equ	0xFDA
 23546                           fsr2l	equ	0xFD9
 23547                           status	equ	0xFD8
 23548                           
 23549 ;; *************** function _BluetoothInitialSetup *****************
 23550 ;; Defined at:
 23551 ;;		line 148 in file "Bluetooth.c"
 23552 ;; Parameters:    Size  Location     Type
 23553 ;;		None
 23554 ;; Auto vars:     Size  Location     Type
 23555 ;;  buf            50   40[BANK1 ] unsigned char [50]
 23556 ;;  RFchannel      10   30[BANK1 ] unsigned char [10]
 23557 ;;  ok              1   90[BANK1 ] unsigned char 
 23558 ;; Return value:  Size  Location     Type
 23559 ;;                  1    wreg      unsigned char 
 23560 ;; Registers used:
 23561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23562 ;; Tracked objects:
 23563 ;;		On entry : 0/0
 23564 ;;		On exit  : 0/0
 23565 ;;		Unchanged: 0/0
 23566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23568 ;;      Locals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23570 ;;      Totals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23571 ;;Total ram usage:       61 bytes
 23572 ;; Hardware stack levels used:    1
 23573 ;; Hardware stack levels required when called:   10
 23574 ;; This function calls:
 23575 ;;		_EnterCommandMode
 23576 ;;		_StringContains
 23577 ;;		_UARTstring
 23578 ;;		_cleanBuffer
 23579 ;;		_delayUS
 23580 ;;		_sprintf
 23581 ;; This function is called by:
 23582 ;;		_InitBluetooth
 23583 ;; This function uses a non-reentrant model
 23584 ;;
 23585                           
 23586                           	psect	text58
 23587  004BA6                     __ptext58:
 23588                           	opt stack 0
 23589  004BA6                     _BluetoothInitialSetup:
 23590                           	opt stack 18
 23591                           
 23592                           ;Bluetooth.c: 150: unsigned char buf[50];
 23593                           ;Bluetooth.c: 151: unsigned char ok = 1;
 23594                           
 23595                           ;incstack = 0
 23596  004BA6  0E01               	movlw	1
 23597  004BA8  0101               	movlb	1	; () banked
 23598  004BAA  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23599                           
 23600                           ; BSR set to: 1
 23601                           ;Bluetooth.c: 152: unsigned char RFchannel[10];
 23602                           ;Bluetooth.c: 154: cleanBuffer(buf,50);
 23603  004BAC  0E28               	movlw	low BluetoothInitialSetup@buf
 23604  004BAE  0100               	movlb	0	; () banked
 23605  004BB0  6F79               	movwf	cleanBuffer@data& (0+255),b
 23606  004BB2  0E01               	movlw	high BluetoothInitialSetup@buf
 23607  004BB4  0100               	movlb	0	; () banked
 23608  004BB6  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23609  004BB8  0E00               	movlw	0
 23610  004BBA  0100               	movlb	0	; () banked
 23611  004BBC  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23612  004BBE  0E32               	movlw	50
 23613  004BC0  6F7B               	movwf	cleanBuffer@count& (0+255),b
 23614  004BC2  ECBA  F045         	call	_cleanBuffer	;wreg free
 23615                           
 23616                           ;Bluetooth.c: 155: cleanBuffer(RFchannel,10);
 23617  004BC6  0E1E               	movlw	low BluetoothInitialSetup@RFchannel
 23618  004BC8  0100               	movlb	0	; () banked
 23619  004BCA  6F79               	movwf	cleanBuffer@data& (0+255),b
 23620  004BCC  0E01               	movlw	high BluetoothInitialSetup@RFchannel
 23621  004BCE  0100               	movlb	0	; () banked
 23622  004BD0  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23623  004BD2  0E00               	movlw	0
 23624  004BD4  0100               	movlb	0	; () banked
 23625  004BD6  6F7C               	movwf	(cleanBuffer@count+1)& (0+255),b
 23626  004BD8  0E0A               	movlw	10
 23627  004BDA  6F7B               	movwf	cleanBuffer@count& (0+255),b
 23628  004BDC  ECBA  F045         	call	_cleanBuffer	;wreg free
 23629                           
 23630                           ;Bluetooth.c: 157: if(!EnterCommandMode())
 23631  004BE0  ECD2  F03E         	call	_EnterCommandMode	;wreg free
 23632  004BE4  0900               	iorlw	0
 23633  004BE6  B4D8               	btfsc	status,2,c
 23634  004BE8  0012               	return	
 23635  004BEA  D001               	goto	l13982
 23636                           
 23637                           ;Bluetooth.c: 158: {
 23638                           ;Bluetooth.c: 159: return 0;
 23639                           ;	Return value of _BluetoothInitialSetup is never used
 23640  004BEC  0012               	return	
 23641  004BEE                     l13982:
 23642                           
 23643                           ;Bluetooth.c: 160: }
 23644                           ;Bluetooth.c: 161: sprintf(buf,"SN,Home Automation %ld\r",SN);
 23645  004BEE  0E28               	movlw	low BluetoothInitialSetup@buf
 23646  004BF0  0100               	movlb	0	; () banked
 23647  004BF2  6FC7               	movwf	sprintf@sp& (0+255),b
 23648  004BF4  0E01               	movlw	high BluetoothInitialSetup@buf
 23649  004BF6  0100               	movlb	0	; () banked
 23650  004BF8  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 23651  004BFA  0E33               	movlw	low STR_4
 23652  004BFC  0100               	movlb	0	; () banked
 23653  004BFE  6FC9               	movwf	sprintf@f& (0+255),b
 23654  004C00  0EFC               	movlw	high STR_4
 23655  004C02  0100               	movlb	0	; () banked
 23656  004C04  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 23657  004C06  C1D2  F0CB         	movff	_SN,?_sprintf+4
 23658  004C0A  C1D3  F0CC         	movff	_SN+1,?_sprintf+5
 23659  004C0E  C1D4  F0CD         	movff	_SN+2,?_sprintf+6
 23660  004C12  C1D5  F0CE         	movff	_SN+3,?_sprintf+7
 23661  004C16  EC7B  F010         	call	_sprintf	;wreg free
 23662                           
 23663                           ;Bluetooth.c: 162: UARTstring(buf);
 23664  004C1A  0E28               	movlw	low BluetoothInitialSetup@buf
 23665  004C1C  0100               	movlb	0	; () banked
 23666  004C1E  6F7A               	movwf	UARTstring@data& (0+255),b
 23667  004C20  0E01               	movlw	high BluetoothInitialSetup@buf
 23668  004C22  0100               	movlb	0	; () banked
 23669  004C24  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23670  004C26  ECE7  F045         	call	_UARTstring	;wreg free
 23671                           
 23672                           ;Bluetooth.c: 163: delayUS(50000);
 23673  004C2A  0E50               	movlw	80
 23674  004C2C  0100               	movlb	0	; () banked
 23675  004C2E  6F79               	movwf	delayUS@US& (0+255),b
 23676  004C30  0EC3               	movlw	195
 23677  004C32  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23678  004C34  0E00               	movlw	0
 23679  004C36  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23680  004C38  0E00               	movlw	0
 23681  004C3A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23682  004C3C  EC6B  F046         	call	_delayUS	;wreg free
 23683                           
 23684                           ;Bluetooth.c: 164: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23685  004C40  0E00               	movlw	low _CommandString
 23686  004C42  0100               	movlb	0	; () banked
 23687  004C44  6F79               	movwf	StringContains@This& (0+255),b
 23688  004C46  0E05               	movlw	high _CommandString
 23689  004C48  0100               	movlb	0	; () banked
 23690  004C4A  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23691  004C4C  0EFB               	movlw	low STR_5
 23692  004C4E  0100               	movlb	0	; () banked
 23693  004C50  6F7B               	movwf	StringContains@That& (0+255),b
 23694  004C52  0EFF               	movlw	high STR_5
 23695  004C54  0100               	movlb	0	; () banked
 23696  004C56  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23697  004C58  ECAA  F040         	call	_StringContains	;wreg free
 23698  004C5C  0900               	iorlw	0
 23699  004C5E  A4D8               	btfss	status,2,c
 23700  004C60  D004               	goto	l13992
 23701                           
 23702                           ;Bluetooth.c: 165: {
 23703                           ;Bluetooth.c: 166: ok = 0;
 23704  004C62  0E00               	movlw	0
 23705  004C64  0101               	movlb	1	; () banked
 23706  004C66  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23707  004C68  D000               	goto	l13992
 23708  004C6A                     l13992:
 23709                           
 23710                           ;Bluetooth.c: 167: }
 23711                           ;Bluetooth.c: 168: cleanBuffer(CommandString,CommandStringPos);
 23712  004C6A  0E00               	movlw	low _CommandString
 23713  004C6C  0100               	movlb	0	; () banked
 23714  004C6E  6F79               	movwf	cleanBuffer@data& (0+255),b
 23715  004C70  0E05               	movlw	high _CommandString
 23716  004C72  0100               	movlb	0	; () banked
 23717  004C74  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23718  004C76  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 23719  004C7A  0100               	movlb	0	; () banked
 23720  004C7C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 23721  004C7E  ECBA  F045         	call	_cleanBuffer	;wreg free
 23722                           
 23723                           ;Bluetooth.c: 169: CommandStringPos = 0;
 23724  004C82  0E00               	movlw	0
 23725  004C84  6E29               	movwf	_CommandStringPos,c
 23726                           
 23727                           ;Bluetooth.c: 171: if(ok)
 23728  004C86  0101               	movlb	1	; () banked
 23729  004C88  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23730  004C8A  0101               	movlb	1	; () banked
 23731  004C8C  B4D8               	btfsc	status,2,c
 23732  004C8E  D028               	goto	l1804
 23733                           
 23734                           ; BSR set to: 1
 23735                           ;Bluetooth.c: 172: {
 23736                           ;Bluetooth.c: 173: UARTstring((unsigned char *)"SU, 115K\r");
 23737  004C90  0E74               	movlw	low STR_6
 23738  004C92  0100               	movlb	0	; () banked
 23739  004C94  6F7A               	movwf	UARTstring@data& (0+255),b
 23740  004C96  0EFF               	movlw	high STR_6
 23741  004C98  0100               	movlb	0	; () banked
 23742  004C9A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23743  004C9C  ECE7  F045         	call	_UARTstring	;wreg free
 23744                           
 23745                           ;Bluetooth.c: 174: delayUS(50000);
 23746  004CA0  0E50               	movlw	80
 23747  004CA2  0100               	movlb	0	; () banked
 23748  004CA4  6F79               	movwf	delayUS@US& (0+255),b
 23749  004CA6  0EC3               	movlw	195
 23750  004CA8  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23751  004CAA  0E00               	movlw	0
 23752  004CAC  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23753  004CAE  0E00               	movlw	0
 23754  004CB0  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23755  004CB2  EC6B  F046         	call	_delayUS	;wreg free
 23756                           
 23757                           ;Bluetooth.c: 175: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23758  004CB6  0E00               	movlw	low _CommandString
 23759  004CB8  0100               	movlb	0	; () banked
 23760  004CBA  6F79               	movwf	StringContains@This& (0+255),b
 23761  004CBC  0E05               	movlw	high _CommandString
 23762  004CBE  0100               	movlb	0	; () banked
 23763  004CC0  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23764  004CC2  0EFB               	movlw	low STR_5
 23765  004CC4  0100               	movlb	0	; () banked
 23766  004CC6  6F7B               	movwf	StringContains@That& (0+255),b
 23767  004CC8  0EFF               	movlw	high STR_5
 23768  004CCA  0100               	movlb	0	; () banked
 23769  004CCC  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23770  004CCE  ECAA  F040         	call	_StringContains	;wreg free
 23771  004CD2  0900               	iorlw	0
 23772  004CD4  A4D8               	btfss	status,2,c
 23773  004CD6  D004               	goto	l1804
 23774                           
 23775                           ;Bluetooth.c: 176: {
 23776                           ;Bluetooth.c: 177: ok = 0;
 23777  004CD8  0E00               	movlw	0
 23778  004CDA  0101               	movlb	1	; () banked
 23779  004CDC  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23780  004CDE  D000               	goto	l1804
 23781  004CE0                     l1804:
 23782                           
 23783                           ;Bluetooth.c: 178: }
 23784                           ;Bluetooth.c: 179: }
 23785                           ;Bluetooth.c: 181: if(ok)
 23786  004CE0  0101               	movlb	1	; () banked
 23787  004CE2  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23788  004CE4  0101               	movlb	1	; () banked
 23789  004CE6  B4D8               	btfsc	status,2,c
 23790  004CE8  D028               	goto	l14014
 23791                           
 23792                           ; BSR set to: 1
 23793                           ;Bluetooth.c: 182: {
 23794                           ;Bluetooth.c: 183: UARTstring((unsigned char *)"SS, Home Automation\r");
 23795  004CEA  0EBD               	movlw	low STR_8
 23796  004CEC  0100               	movlb	0	; () banked
 23797  004CEE  6F7A               	movwf	UARTstring@data& (0+255),b
 23798  004CF0  0EFC               	movlw	high STR_8
 23799  004CF2  0100               	movlb	0	; () banked
 23800  004CF4  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23801  004CF6  ECE7  F045         	call	_UARTstring	;wreg free
 23802                           
 23803                           ;Bluetooth.c: 184: delayUS(50000);
 23804  004CFA  0E50               	movlw	80
 23805  004CFC  0100               	movlb	0	; () banked
 23806  004CFE  6F79               	movwf	delayUS@US& (0+255),b
 23807  004D00  0EC3               	movlw	195
 23808  004D02  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23809  004D04  0E00               	movlw	0
 23810  004D06  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23811  004D08  0E00               	movlw	0
 23812  004D0A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23813  004D0C  EC6B  F046         	call	_delayUS	;wreg free
 23814                           
 23815                           ;Bluetooth.c: 185: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23816  004D10  0E00               	movlw	low _CommandString
 23817  004D12  0100               	movlb	0	; () banked
 23818  004D14  6F79               	movwf	StringContains@This& (0+255),b
 23819  004D16  0E05               	movlw	high _CommandString
 23820  004D18  0100               	movlb	0	; () banked
 23821  004D1A  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23822  004D1C  0EFB               	movlw	low STR_5
 23823  004D1E  0100               	movlb	0	; () banked
 23824  004D20  6F7B               	movwf	StringContains@That& (0+255),b
 23825  004D22  0EFF               	movlw	high STR_5
 23826  004D24  0100               	movlb	0	; () banked
 23827  004D26  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23828  004D28  ECAA  F040         	call	_StringContains	;wreg free
 23829  004D2C  0900               	iorlw	0
 23830  004D2E  A4D8               	btfss	status,2,c
 23831  004D30  D004               	goto	l14014
 23832                           
 23833                           ;Bluetooth.c: 186: {
 23834                           ;Bluetooth.c: 187: ok = 0;
 23835  004D32  0E00               	movlw	0
 23836  004D34  0101               	movlb	1	; () banked
 23837  004D36  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23838                           
 23839                           ; BSR set to: 1
 23840  004D38  D000               	goto	l14014
 23841  004D3A                     l14014:
 23842                           
 23843                           ;Bluetooth.c: 188: }
 23844                           ;Bluetooth.c: 189: }
 23845                           ;Bluetooth.c: 190: cleanBuffer(CommandString,CommandStringPos);
 23846  004D3A  0E00               	movlw	low _CommandString
 23847  004D3C  0100               	movlb	0	; () banked
 23848  004D3E  6F79               	movwf	cleanBuffer@data& (0+255),b
 23849  004D40  0E05               	movlw	high _CommandString
 23850  004D42  0100               	movlb	0	; () banked
 23851  004D44  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23852  004D46  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 23853  004D4A  0100               	movlb	0	; () banked
 23854  004D4C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 23855  004D4E  ECBA  F045         	call	_cleanBuffer	;wreg free
 23856                           
 23857                           ;Bluetooth.c: 191: CommandStringPos = 0;
 23858  004D52  0E00               	movlw	0
 23859  004D54  6E29               	movwf	_CommandStringPos,c
 23860                           
 23861                           ;Bluetooth.c: 193: if(ok)
 23862  004D56  0101               	movlb	1	; () banked
 23863  004D58  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23864  004D5A  0101               	movlb	1	; () banked
 23865  004D5C  B4D8               	btfsc	status,2,c
 23866  004D5E  D028               	goto	l14028
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;Bluetooth.c: 194: {
 23870                           ;Bluetooth.c: 195: UARTstring((unsigned char *)"SY,0010\r");
 23871  004D60  0E88               	movlw	low STR_10
 23872  004D62  0100               	movlb	0	; () banked
 23873  004D64  6F7A               	movwf	UARTstring@data& (0+255),b
 23874  004D66  0EFF               	movlw	high STR_10
 23875  004D68  0100               	movlb	0	; () banked
 23876  004D6A  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23877  004D6C  ECE7  F045         	call	_UARTstring	;wreg free
 23878                           
 23879                           ;Bluetooth.c: 196: delayUS(50000);
 23880  004D70  0E50               	movlw	80
 23881  004D72  0100               	movlb	0	; () banked
 23882  004D74  6F79               	movwf	delayUS@US& (0+255),b
 23883  004D76  0EC3               	movlw	195
 23884  004D78  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23885  004D7A  0E00               	movlw	0
 23886  004D7C  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23887  004D7E  0E00               	movlw	0
 23888  004D80  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23889  004D82  EC6B  F046         	call	_delayUS	;wreg free
 23890                           
 23891                           ;Bluetooth.c: 197: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23892  004D86  0E00               	movlw	low _CommandString
 23893  004D88  0100               	movlb	0	; () banked
 23894  004D8A  6F79               	movwf	StringContains@This& (0+255),b
 23895  004D8C  0E05               	movlw	high _CommandString
 23896  004D8E  0100               	movlb	0	; () banked
 23897  004D90  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23898  004D92  0EFB               	movlw	low STR_5
 23899  004D94  0100               	movlb	0	; () banked
 23900  004D96  6F7B               	movwf	StringContains@That& (0+255),b
 23901  004D98  0EFF               	movlw	high STR_5
 23902  004D9A  0100               	movlb	0	; () banked
 23903  004D9C  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23904  004D9E  ECAA  F040         	call	_StringContains	;wreg free
 23905  004DA2  0900               	iorlw	0
 23906  004DA4  A4D8               	btfss	status,2,c
 23907  004DA6  D004               	goto	l14028
 23908                           
 23909                           ;Bluetooth.c: 198: {
 23910                           ;Bluetooth.c: 199: ok = 0;
 23911  004DA8  0E00               	movlw	0
 23912  004DAA  0101               	movlb	1	; () banked
 23913  004DAC  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23914                           
 23915                           ; BSR set to: 1
 23916  004DAE  D000               	goto	l14028
 23917  004DB0                     l14028:
 23918                           
 23919                           ;Bluetooth.c: 200: }
 23920                           ;Bluetooth.c: 201: }
 23921                           ;Bluetooth.c: 202: cleanBuffer(CommandString,CommandStringPos);
 23922  004DB0  0E00               	movlw	low _CommandString
 23923  004DB2  0100               	movlb	0	; () banked
 23924  004DB4  6F79               	movwf	cleanBuffer@data& (0+255),b
 23925  004DB6  0E05               	movlw	high _CommandString
 23926  004DB8  0100               	movlb	0	; () banked
 23927  004DBA  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 23928  004DBC  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 23929  004DC0  0100               	movlb	0	; () banked
 23930  004DC2  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 23931  004DC4  ECBA  F045         	call	_cleanBuffer	;wreg free
 23932                           
 23933                           ;Bluetooth.c: 203: CommandStringPos = 0;
 23934  004DC8  0E00               	movlw	0
 23935  004DCA  6E29               	movwf	_CommandStringPos,c
 23936                           
 23937                           ;Bluetooth.c: 205: if(ok)
 23938  004DCC  0101               	movlb	1	; () banked
 23939  004DCE  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 23940  004DD0  0101               	movlb	1	; () banked
 23941  004DD2  B4D8               	btfsc	status,2,c
 23942  004DD4  D028               	goto	l14042
 23943                           
 23944                           ; BSR set to: 1
 23945                           ;Bluetooth.c: 206: {
 23946                           ;Bluetooth.c: 207: UARTstring((unsigned char *)"S~,0\r");
 23947  004DD6  0EC0               	movlw	low STR_12
 23948  004DD8  0100               	movlb	0	; () banked
 23949  004DDA  6F7A               	movwf	UARTstring@data& (0+255),b
 23950  004DDC  0EFF               	movlw	high STR_12
 23951  004DDE  0100               	movlb	0	; () banked
 23952  004DE0  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 23953  004DE2  ECE7  F045         	call	_UARTstring	;wreg free
 23954                           
 23955                           ;Bluetooth.c: 208: delayUS(50000);
 23956  004DE6  0E50               	movlw	80
 23957  004DE8  0100               	movlb	0	; () banked
 23958  004DEA  6F79               	movwf	delayUS@US& (0+255),b
 23959  004DEC  0EC3               	movlw	195
 23960  004DEE  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 23961  004DF0  0E00               	movlw	0
 23962  004DF2  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 23963  004DF4  0E00               	movlw	0
 23964  004DF6  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 23965  004DF8  EC6B  F046         	call	_delayUS	;wreg free
 23966                           
 23967                           ;Bluetooth.c: 209: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 23968  004DFC  0E00               	movlw	low _CommandString
 23969  004DFE  0100               	movlb	0	; () banked
 23970  004E00  6F79               	movwf	StringContains@This& (0+255),b
 23971  004E02  0E05               	movlw	high _CommandString
 23972  004E04  0100               	movlb	0	; () banked
 23973  004E06  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 23974  004E08  0EFB               	movlw	low STR_5
 23975  004E0A  0100               	movlb	0	; () banked
 23976  004E0C  6F7B               	movwf	StringContains@That& (0+255),b
 23977  004E0E  0EFF               	movlw	high STR_5
 23978  004E10  0100               	movlb	0	; () banked
 23979  004E12  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 23980  004E14  ECAA  F040         	call	_StringContains	;wreg free
 23981  004E18  0900               	iorlw	0
 23982  004E1A  A4D8               	btfss	status,2,c
 23983  004E1C  D004               	goto	l14042
 23984                           
 23985                           ;Bluetooth.c: 210: {
 23986                           ;Bluetooth.c: 211: ok = 0;
 23987  004E1E  0E00               	movlw	0
 23988  004E20  0101               	movlb	1	; () banked
 23989  004E22  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 23990                           
 23991                           ; BSR set to: 1
 23992  004E24  D000               	goto	l14042
 23993  004E26                     l14042:
 23994                           
 23995                           ;Bluetooth.c: 212: }
 23996                           ;Bluetooth.c: 213: }
 23997                           ;Bluetooth.c: 214: cleanBuffer(CommandString,CommandStringPos);
 23998  004E26  0E00               	movlw	low _CommandString
 23999  004E28  0100               	movlb	0	; () banked
 24000  004E2A  6F79               	movwf	cleanBuffer@data& (0+255),b
 24001  004E2C  0E05               	movlw	high _CommandString
 24002  004E2E  0100               	movlb	0	; () banked
 24003  004E30  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24004  004E32  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24005  004E36  0100               	movlb	0	; () banked
 24006  004E38  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24007  004E3A  ECBA  F045         	call	_cleanBuffer	;wreg free
 24008                           
 24009                           ;Bluetooth.c: 215: CommandStringPos = 0;
 24010  004E3E  0E00               	movlw	0
 24011  004E40  6E29               	movwf	_CommandStringPos,c
 24012                           
 24013                           ;Bluetooth.c: 217: if(ok)
 24014  004E42  0101               	movlb	1	; () banked
 24015  004E44  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24016  004E46  0101               	movlb	1	; () banked
 24017  004E48  B4D8               	btfsc	status,2,c
 24018  004E4A  D028               	goto	l14056
 24019                           
 24020                           ; BSR set to: 1
 24021                           ;Bluetooth.c: 218: {
 24022                           ;Bluetooth.c: 219: UARTstring((unsigned char *)"S~,0\r");
 24023  004E4C  0EC0               	movlw	low STR_12
 24024  004E4E  0100               	movlb	0	; () banked
 24025  004E50  6F7A               	movwf	UARTstring@data& (0+255),b
 24026  004E52  0EFF               	movlw	high STR_12
 24027  004E54  0100               	movlb	0	; () banked
 24028  004E56  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24029  004E58  ECE7  F045         	call	_UARTstring	;wreg free
 24030                           
 24031                           ;Bluetooth.c: 220: delayUS(50000);
 24032  004E5C  0E50               	movlw	80
 24033  004E5E  0100               	movlb	0	; () banked
 24034  004E60  6F79               	movwf	delayUS@US& (0+255),b
 24035  004E62  0EC3               	movlw	195
 24036  004E64  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24037  004E66  0E00               	movlw	0
 24038  004E68  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24039  004E6A  0E00               	movlw	0
 24040  004E6C  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24041  004E6E  EC6B  F046         	call	_delayUS	;wreg free
 24042                           
 24043                           ;Bluetooth.c: 221: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24044  004E72  0E00               	movlw	low _CommandString
 24045  004E74  0100               	movlb	0	; () banked
 24046  004E76  6F79               	movwf	StringContains@This& (0+255),b
 24047  004E78  0E05               	movlw	high _CommandString
 24048  004E7A  0100               	movlb	0	; () banked
 24049  004E7C  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24050  004E7E  0EFB               	movlw	low STR_5
 24051  004E80  0100               	movlb	0	; () banked
 24052  004E82  6F7B               	movwf	StringContains@That& (0+255),b
 24053  004E84  0EFF               	movlw	high STR_5
 24054  004E86  0100               	movlb	0	; () banked
 24055  004E88  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24056  004E8A  ECAA  F040         	call	_StringContains	;wreg free
 24057  004E8E  0900               	iorlw	0
 24058  004E90  A4D8               	btfss	status,2,c
 24059  004E92  D004               	goto	l14056
 24060                           
 24061                           ;Bluetooth.c: 222: {
 24062                           ;Bluetooth.c: 223: ok = 0;
 24063  004E94  0E00               	movlw	0
 24064  004E96  0101               	movlb	1	; () banked
 24065  004E98  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24066                           
 24067                           ; BSR set to: 1
 24068  004E9A  D000               	goto	l14056
 24069  004E9C                     l14056:
 24070                           
 24071                           ;Bluetooth.c: 224: }
 24072                           ;Bluetooth.c: 225: }
 24073                           ;Bluetooth.c: 226: cleanBuffer(CommandString,CommandStringPos);
 24074  004E9C  0E00               	movlw	low _CommandString
 24075  004E9E  0100               	movlb	0	; () banked
 24076  004EA0  6F79               	movwf	cleanBuffer@data& (0+255),b
 24077  004EA2  0E05               	movlw	high _CommandString
 24078  004EA4  0100               	movlb	0	; () banked
 24079  004EA6  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24080  004EA8  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24081  004EAC  0100               	movlb	0	; () banked
 24082  004EAE  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24083  004EB0  ECBA  F045         	call	_cleanBuffer	;wreg free
 24084                           
 24085                           ;Bluetooth.c: 227: CommandStringPos = 0;
 24086  004EB4  0E00               	movlw	0
 24087  004EB6  6E29               	movwf	_CommandStringPos,c
 24088                           
 24089                           ;Bluetooth.c: 229: if(ok)
 24090  004EB8  0101               	movlb	1	; () banked
 24091  004EBA  515A               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24092  004EBC  0101               	movlb	1	; () banked
 24093  004EBE  B4D8               	btfsc	status,2,c
 24094  004EC0  D03E               	goto	l14072
 24095                           
 24096                           ; BSR set to: 1
 24097                           ;Bluetooth.c: 230: {
 24098                           ;Bluetooth.c: 231: UARTstring((unsigned char *)"D,0\r");
 24099  004EC2  0EDD               	movlw	low STR_16
 24100  004EC4  0100               	movlb	0	; () banked
 24101  004EC6  6F7A               	movwf	UARTstring@data& (0+255),b
 24102  004EC8  0EFF               	movlw	high STR_16
 24103  004ECA  0100               	movlb	0	; () banked
 24104  004ECC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24105  004ECE  ECE7  F045         	call	_UARTstring	;wreg free
 24106                           
 24107                           ;Bluetooth.c: 232: delayUS(50000);
 24108  004ED2  0E50               	movlw	80
 24109  004ED4  0100               	movlb	0	; () banked
 24110  004ED6  6F79               	movwf	delayUS@US& (0+255),b
 24111  004ED8  0EC3               	movlw	195
 24112  004EDA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24113  004EDC  0E00               	movlw	0
 24114  004EDE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24115  004EE0  0E00               	movlw	0
 24116  004EE2  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24117  004EE4  EC6B  F046         	call	_delayUS	;wreg free
 24118                           
 24119                           ;Bluetooth.c: 233: sprintf(buf,"BTName=Home Automation %ld\r",SN);
 24120  004EE8  0E28               	movlw	low BluetoothInitialSetup@buf
 24121  004EEA  0100               	movlb	0	; () banked
 24122  004EEC  6FC7               	movwf	sprintf@sp& (0+255),b
 24123  004EEE  0E01               	movlw	high BluetoothInitialSetup@buf
 24124  004EF0  0100               	movlb	0	; () banked
 24125  004EF2  6FC8               	movwf	(sprintf@sp+1)& (0+255),b
 24126  004EF4  0E91               	movlw	low STR_17
 24127  004EF6  0100               	movlb	0	; () banked
 24128  004EF8  6FC9               	movwf	sprintf@f& (0+255),b
 24129  004EFA  0EFB               	movlw	high STR_17
 24130  004EFC  0100               	movlb	0	; () banked
 24131  004EFE  6FCA               	movwf	(sprintf@f+1)& (0+255),b
 24132  004F00  C1D2  F0CB         	movff	_SN,?_sprintf+4
 24133  004F04  C1D3  F0CC         	movff	_SN+1,?_sprintf+5
 24134  004F08  C1D4  F0CD         	movff	_SN+2,?_sprintf+6
 24135  004F0C  C1D5  F0CE         	movff	_SN+3,?_sprintf+7
 24136  004F10  EC7B  F010         	call	_sprintf	;wreg free
 24137                           
 24138                           ;Bluetooth.c: 234: if(!StringContains(CommandString, buf))
 24139  004F14  0E00               	movlw	low _CommandString
 24140  004F16  0100               	movlb	0	; () banked
 24141  004F18  6F79               	movwf	StringContains@This& (0+255),b
 24142  004F1A  0E05               	movlw	high _CommandString
 24143  004F1C  0100               	movlb	0	; () banked
 24144  004F1E  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24145  004F20  0E28               	movlw	low BluetoothInitialSetup@buf
 24146  004F22  0100               	movlb	0	; () banked
 24147  004F24  6F7B               	movwf	StringContains@That& (0+255),b
 24148  004F26  0E01               	movlw	high BluetoothInitialSetup@buf
 24149  004F28  0100               	movlb	0	; () banked
 24150  004F2A  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24151  004F2C  ECAA  F040         	call	_StringContains	;wreg free
 24152  004F30  0900               	iorlw	0
 24153  004F32  A4D8               	btfss	status,2,c
 24154  004F34  D004               	goto	l14072
 24155                           
 24156                           ;Bluetooth.c: 235: {
 24157                           ;Bluetooth.c: 236: ok = 0;
 24158  004F36  0E00               	movlw	0
 24159  004F38  0101               	movlb	1	; () banked
 24160  004F3A  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24161                           
 24162                           ; BSR set to: 1
 24163  004F3C  D000               	goto	l14072
 24164  004F3E                     l14072:
 24165                           
 24166                           ;Bluetooth.c: 237: }
 24167                           ;Bluetooth.c: 238: }
 24168                           ;Bluetooth.c: 239: cleanBuffer(CommandString,CommandStringPos);
 24169  004F3E  0E00               	movlw	low _CommandString
 24170  004F40  0100               	movlb	0	; () banked
 24171  004F42  6F79               	movwf	cleanBuffer@data& (0+255),b
 24172  004F44  0E05               	movlw	high _CommandString
 24173  004F46  0100               	movlb	0	; () banked
 24174  004F48  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24175  004F4A  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24176  004F4E  0100               	movlb	0	; () banked
 24177  004F50  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24178  004F52  ECBA  F045         	call	_cleanBuffer	;wreg free
 24179                           
 24180                           ;Bluetooth.c: 240: CommandStringPos = 0;
 24181  004F56  0E00               	movlw	0
 24182  004F58  6E29               	movwf	_CommandStringPos,c
 24183                           
 24184                           ;Bluetooth.c: 242: UARTstring((unsigned char *)"---\r");
 24185  004F5A  0ED8               	movlw	low STR_18
 24186  004F5C  0100               	movlb	0	; () banked
 24187  004F5E  6F7A               	movwf	UARTstring@data& (0+255),b
 24188  004F60  0EFF               	movlw	high STR_18
 24189  004F62  0100               	movlb	0	; () banked
 24190  004F64  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 24191  004F66  ECE7  F045         	call	_UARTstring	;wreg free
 24192                           
 24193                           ;Bluetooth.c: 243: delayUS(50000);
 24194  004F6A  0E50               	movlw	80
 24195  004F6C  0100               	movlb	0	; () banked
 24196  004F6E  6F79               	movwf	delayUS@US& (0+255),b
 24197  004F70  0EC3               	movlw	195
 24198  004F72  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 24199  004F74  0E00               	movlw	0
 24200  004F76  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 24201  004F78  0E00               	movlw	0
 24202  004F7A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 24203  004F7C  EC6B  F046         	call	_delayUS	;wreg free
 24204                           
 24205                           ;Bluetooth.c: 244: if(!StringContains(CommandString,(unsigned char *)"END"))
 24206  004F80  0E00               	movlw	low _CommandString
 24207  004F82  0100               	movlb	0	; () banked
 24208  004F84  6F79               	movwf	StringContains@This& (0+255),b
 24209  004F86  0E05               	movlw	high _CommandString
 24210  004F88  0100               	movlb	0	; () banked
 24211  004F8A  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 24212  004F8C  0EF7               	movlw	low STR_19
 24213  004F8E  0100               	movlb	0	; () banked
 24214  004F90  6F7B               	movwf	StringContains@That& (0+255),b
 24215  004F92  0EFF               	movlw	high STR_19
 24216  004F94  0100               	movlb	0	; () banked
 24217  004F96  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 24218  004F98  ECAA  F040         	call	_StringContains	;wreg free
 24219  004F9C  0900               	iorlw	0
 24220  004F9E  A4D8               	btfss	status,2,c
 24221  004FA0  D004               	goto	l14084
 24222                           
 24223                           ;Bluetooth.c: 245: {
 24224                           ;Bluetooth.c: 246: ok = 0;
 24225  004FA2  0E00               	movlw	0
 24226  004FA4  0101               	movlb	1	; () banked
 24227  004FA6  6F5A               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24228  004FA8  D000               	goto	l14084
 24229  004FAA                     l14084:
 24230                           
 24231                           ;Bluetooth.c: 247: }
 24232                           ;Bluetooth.c: 248: cleanBuffer(CommandString,CommandStringPos);
 24233  004FAA  0E00               	movlw	low _CommandString
 24234  004FAC  0100               	movlb	0	; () banked
 24235  004FAE  6F79               	movwf	cleanBuffer@data& (0+255),b
 24236  004FB0  0E05               	movlw	high _CommandString
 24237  004FB2  0100               	movlb	0	; () banked
 24238  004FB4  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 24239  004FB6  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 24240  004FBA  0100               	movlb	0	; () banked
 24241  004FBC  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 24242  004FBE  ECBA  F045         	call	_cleanBuffer	;wreg free
 24243                           
 24244                           ;Bluetooth.c: 249: CommandStringPos = 0;
 24245  004FC2  0E00               	movlw	0
 24246  004FC4  6E29               	movwf	_CommandStringPos,c
 24247                           
 24248                           ;Bluetooth.c: 252: {
 24249                           ;Bluetooth.c: 253: return 1;
 24250                           ;	Return value of _BluetoothInitialSetup is never used
 24251  004FC6  0012               	return	
 24252                           
 24253                           ;Bluetooth.c: 254: }
 24254                           ;Bluetooth.c: 255: return 0;
 24255                           ;	Return value of _BluetoothInitialSetup is never used
 24256  004FC8  0012               	return		;funcret
 24257  004FCA                     __end_of_BluetoothInitialSetup:
 24258                           	opt stack 0
 24259                           tblptru	equ	0xFF8
 24260                           tblptrh	equ	0xFF7
 24261                           tblptrl	equ	0xFF6
 24262                           tablat	equ	0xFF5
 24263                           prodh	equ	0xFF4
 24264                           prodl	equ	0xFF3
 24265                           intcon	equ	0xFF2
 24266                           intcon2	equ	0xFF1
 24267                           indf0	equ	0xFEF
 24268                           postinc0	equ	0xFEE
 24269                           fsr0h	equ	0xFEA
 24270                           fsr0l	equ	0xFE9
 24271                           wreg	equ	0xFE8
 24272                           indf1	equ	0xFE7
 24273                           postdec1	equ	0xFE5
 24274                           fsr1h	equ	0xFE2
 24275                           fsr1l	equ	0xFE1
 24276                           indf2	equ	0xFDF
 24277                           postinc2	equ	0xFDE
 24278                           postdec2	equ	0xFDD
 24279                           fsr2h	equ	0xFDA
 24280                           fsr2l	equ	0xFD9
 24281                           status	equ	0xFD8
 24282                           
 24283 ;; *************** function _sprintf *****************
 24284 ;; Defined at:
 24285 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 24286 ;; Parameters:    Size  Location     Type
 24287 ;;  sp              2  103[BANK0 ] PTR unsigned char 
 24288 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), 
 24289 ;;  f               2  105[BANK0 ] PTR const unsigned char 
 24290 ;;		 -> STR_101(19), STR_99(15), STR_85(21), STR_83(20), 
 24291 ;;		 -> STR_75(44), STR_74(54), STR_73(54), STR_72(63), 
 24292 ;;		 -> STR_50(44), STR_49(46), STR_47(44), STR_46(21), 
 24293 ;;		 -> STR_33(17), STR_32(17), STR_31(20), STR_29(23), 
 24294 ;;		 -> STR_28(21), STR_27(21), STR_17(28), STR_4(24), 
 24295 ;; Auto vars:     Size  Location     Type
 24296 ;;  idx             1    3[BANK1 ] unsigned char 
 24297 ;;  val             4   18[BANK1 ] unsigned long 
 24298 ;;  tmpval          4   12[BANK1 ] struct .
 24299 ;;  fval            3   22[BANK1 ] struct .
 24300 ;;  flag            2   27[BANK1 ] unsigned short 
 24301 ;;  width           2   25[BANK1 ] int 
 24302 ;;  exp             2   16[BANK1 ] int 
 24303 ;;  prec            2   10[BANK1 ] int 
 24304 ;;  ap              2    8[BANK1 ] PTR void [1]
 24305 ;;		 -> ?_sprintf(2), 
 24306 ;;  len             2    6[BANK1 ] unsigned int 
 24307 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
 24308 ;;		 -> STR_146(7), sprintf@c(1), Version(9), GetNumber@temp(4), 
 24309 ;;  c               1   29[BANK1 ] char 
 24310 ;;  d               1    0        unsigned char 
 24311 ;; Return value:  Size  Location     Type
 24312 ;;                  2  103[BANK0 ] int 
 24313 ;; Registers used:
 24314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24315 ;; Tracked objects:
 24316 ;;		On entry : 0/0
 24317 ;;		On exit  : 0/0
 24318 ;;		Unchanged: 0/0
 24319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24320 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24321 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24322 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24323 ;;      Totals:         0      20      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24324 ;;Total ram usage:       50 bytes
 24325 ;; Hardware stack levels used:    1
 24326 ;; Hardware stack levels required when called:    9
 24327 ;; This function calls:
 24328 ;;		___awdiv
 24329 ;;		___ftadd
 24330 ;;		___ftge
 24331 ;;		___ftmul
 24332 ;;		___ftneg
 24333 ;;		___ftsub
 24334 ;;		___fttol
 24335 ;;		___lldiv
 24336 ;;		___llmod
 24337 ;;		___lltoft
 24338 ;;		___wmul
 24339 ;;		__div_to_l_
 24340 ;;		__tdiv_to_l_
 24341 ;;		_fround
 24342 ;;		_isdigit
 24343 ;;		_scale
 24344 ;; This function is called by:
 24345 ;;		_BluetoothInitialSetup
 24346 ;;		_UseBluetooth
 24347 ;; This function uses a non-reentrant model
 24348 ;;
 24349                           
 24350                           	psect	text59
 24351  0020F6                     __ptext59:
 24352                           	opt stack 0
 24353  0020F6                     _sprintf:
 24354                           	opt stack 20
 24355                           
 24356                           ;doprnt.c: 494: va_list ap;
 24357                           ;doprnt.c: 499: signed char c;
 24358                           ;doprnt.c: 501: int width;
 24359                           ;doprnt.c: 504: int prec;
 24360                           ;doprnt.c: 508: unsigned short flag;
 24361                           ;doprnt.c: 515: char d;
 24362                           ;doprnt.c: 516: double fval;
 24363                           ;doprnt.c: 517: int exp;
 24364                           ;doprnt.c: 523: union {
 24365                           ;doprnt.c: 524: unsigned long vd;
 24366                           ;doprnt.c: 525: double integ;
 24367                           ;doprnt.c: 526: } tmpval;
 24368                           ;doprnt.c: 528: unsigned long val;
 24369                           ;doprnt.c: 529: unsigned len;
 24370                           ;doprnt.c: 530: const char * cp;
 24371                           ;doprnt.c: 533: *ap = __va_start();
 24372                           
 24373                           ;incstack = 0
 24374  0020F6  0ECB               	movlw	low (?_sprintf+4)
 24375  0020F8  0101               	movlb	1	; () banked
 24376  0020FA  6F08               	movwf	sprintf@ap& (0+255),b
 24377  0020FC  0E00               	movlw	high (?_sprintf+4)
 24378  0020FE  0101               	movlb	1	; () banked
 24379  002100  6F09               	movwf	(sprintf@ap+1)& (0+255),b
 24380                           
 24381                           ;doprnt.c: 536: while(c = *f++) {
 24382  002102  EF03  F018         	goto	l13594
 24383  002106                     l13222:
 24384                           
 24385                           ; BSR set to: 1
 24386                           ;doprnt.c: 538: if(c != '%')
 24387  002106  0E25               	movlw	37
 24388  002108  0101               	movlb	1	; () banked
 24389  00210A  191D               	xorwf	sprintf@c& (0+255),w,b
 24390  00210C  B4D8               	btfsc	status,2,c
 24391  00210E  D00B               	goto	l13228
 24392                           
 24393                           ; BSR set to: 1
 24394                           ;doprnt.c: 540: {
 24395                           ;doprnt.c: 541: ((*sp++ = (c)));
 24396  002110  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24397  002114  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24398  002118  C11D  FFDF         	movff	sprintf@c,indf2
 24399                           
 24400                           ; BSR set to: 1
 24401  00211C  0100               	movlb	0	; () banked
 24402  00211E  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24403  002120  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24404                           
 24405                           ;doprnt.c: 542: continue;
 24406  002122  EF03  F018         	goto	l13594
 24407  002126                     l13228:
 24408                           
 24409                           ;doprnt.c: 543: }
 24410                           ;doprnt.c: 546: width = 0;
 24411  002126  0E00               	movlw	0
 24412  002128  0101               	movlb	1	; () banked
 24413  00212A  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24414  00212C  0E00               	movlw	0
 24415  00212E  6F19               	movwf	sprintf@width& (0+255),b
 24416                           
 24417                           ;doprnt.c: 548: flag = 0;
 24418  002130  0E00               	movlw	0
 24419  002132  0101               	movlb	1	; () banked
 24420  002134  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
 24421  002136  0E00               	movlw	0
 24422  002138  6F1B               	movwf	sprintf@flag& (0+255),b
 24423                           
 24424                           ; BSR set to: 1
 24425                           ;doprnt.c: 551: switch(*f) {
 24426                           
 24427                           ;doprnt.c: 550: for(;;) {
 24428  00213A  D007               	goto	l13234
 24429  00213C                     l13230:
 24430                           
 24431                           ;doprnt.c: 580: flag |= 0x04;
 24432  00213C  0101               	movlb	1	; () banked
 24433  00213E  851B               	bsf	sprintf@flag& (0+255),2,b
 24434                           
 24435                           ;doprnt.c: 581: f++;
 24436  002140  0100               	movlb	0	; () banked
 24437  002142  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24438  002144  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24439                           
 24440                           ;doprnt.c: 582: continue;
 24441  002146  D001               	goto	l13234
 24442                           
 24443                           ; BSR set to: 0
 24444                           ;doprnt.c: 584: }
 24445  002148  D00C               	goto	l13236
 24446  00214A                     l13234:
 24447  00214A  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24448  00214E  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24449  002152                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24450  002152  6AF8               	clrf	tblptru,c
 24451  002154                     	endif
 24452  002154                     	if	0	;tblptru may be non-zero
 24453  002154                     	endif
 24454  002154  0008               	tblrd		*
 24455  002156  50F5               	movf	tablat,w,c
 24456                           
 24457                           ; Switch size 1, requested type "space"
 24458                           ; Number of cases is 1, Range of values is 48 to 48
 24459                           ; switch strategies available:
 24460                           ; Name         Instructions Cycles
 24461                           ; simple_byte            4     3 (average)
 24462                           ;	Chosen strategy is simple_byte
 24463  002158  0A30               	xorlw	48	; case 48
 24464  00215A  B4D8               	btfsc	status,2,c
 24465  00215C  D7EF               	goto	l13230
 24466                           
 24467                           ;doprnt.c: 585: break;
 24468  00215E  D001               	goto	l13236
 24469                           
 24470                           ;doprnt.c: 586: }
 24471  002160  D7F4               	goto	l13234
 24472  002162                     l13236:
 24473                           
 24474                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 24475  002162  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24476  002166  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24477  00216A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24478  00216A  6AF8               	clrf	tblptru,c
 24479  00216C                     	endif
 24480  00216C                     	if	0	;tblptru may be non-zero
 24481  00216C                     	endif
 24482  00216C  0008               	tblrd		*
 24483  00216E  50F5               	movf	tablat,w,c
 24484  002170  EC75  F048         	call	_isdigit
 24485  002174  A0D8               	btfss	status,0,c
 24486  002176  D10D               	goto	l13298
 24487                           
 24488                           ;doprnt.c: 598: width = 0;
 24489  002178  0E00               	movlw	0
 24490  00217A  0101               	movlb	1	; () banked
 24491  00217C  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24492  00217E  0E00               	movlw	0
 24493  002180  6F19               	movwf	sprintf@width& (0+255),b
 24494  002182  D000               	goto	l13240
 24495  002184                     l13240:
 24496                           
 24497                           ;doprnt.c: 600: width *= 10;
 24498  002184  C119  F087         	movff	sprintf@width,___wmul@multiplier
 24499  002188  C11A  F088         	movff	sprintf@width+1,___wmul@multiplier+1
 24500  00218C  0E00               	movlw	0
 24501  00218E  0100               	movlb	0	; () banked
 24502  002190  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24503  002192  0E0A               	movlw	10
 24504  002194  6F89               	movwf	___wmul@multiplicand& (0+255),b
 24505  002196  EC0D  F048         	call	___wmul	;wreg free
 24506  00219A  C087  F119         	movff	?___wmul,sprintf@width
 24507  00219E  C088  F11A         	movff	?___wmul+1,sprintf@width+1
 24508                           
 24509                           ;doprnt.c: 601: width += *f++ - '0';
 24510  0021A2  0ED0               	movlw	208
 24511  0021A4  0100               	movlb	0	; () banked
 24512  0021A6  6FD5               	movwf	??_sprintf& (0+255),b
 24513  0021A8  0EFF               	movlw	255
 24514  0021AA  0100               	movlb	0	; () banked
 24515  0021AC  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24516  0021AE  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24517  0021B2  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24518  0021B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24519  0021B6  6AF8               	clrf	tblptru,c
 24520  0021B8                     	endif
 24521  0021B8                     	if	0	;tblptru may be non-zero
 24522  0021B8                     	endif
 24523  0021B8  0008               	tblrd		*
 24524  0021BA  50F5               	movf	tablat,w,c
 24525  0021BC  0100               	movlb	0	; () banked
 24526  0021BE  6FD7               	movwf	(??_sprintf+2)& (0+255),b
 24527  0021C0  6BD8               	clrf	(??_sprintf+3)& (0+255),b
 24528  0021C2  0100               	movlb	0	; () banked
 24529  0021C4  51D5               	movf	??_sprintf& (0+255),w,b
 24530  0021C6  0100               	movlb	0	; () banked
 24531  0021C8  27D7               	addwf	(??_sprintf+2)& (0+255),f,b
 24532  0021CA  0100               	movlb	0	; () banked
 24533  0021CC  51D6               	movf	(??_sprintf+1)& (0+255),w,b
 24534  0021CE  0100               	movlb	0	; () banked
 24535  0021D0  23D8               	addwfc	(??_sprintf+3)& (0+255),f,b
 24536  0021D2  0100               	movlb	0	; () banked
 24537  0021D4  51D7               	movf	(??_sprintf+2)& (0+255),w,b
 24538  0021D6  0101               	movlb	1	; () banked
 24539  0021D8  2719               	addwf	sprintf@width& (0+255),f,b
 24540  0021DA  0100               	movlb	0	; () banked
 24541  0021DC  51D8               	movf	(??_sprintf+3)& (0+255),w,b
 24542  0021DE  0101               	movlb	1	; () banked
 24543  0021E0  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
 24544                           
 24545                           ; BSR set to: 1
 24546  0021E2  0100               	movlb	0	; () banked
 24547  0021E4  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24548  0021E6  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24549                           
 24550                           ; BSR set to: 0
 24551                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 24552  0021E8  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24553  0021EC  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24554  0021F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24555  0021F0  6AF8               	clrf	tblptru,c
 24556  0021F2                     	endif
 24557  0021F2                     	if	0	;tblptru may be non-zero
 24558  0021F2                     	endif
 24559  0021F2  0008               	tblrd		*
 24560  0021F4  50F5               	movf	tablat,w,c
 24561  0021F6  EC75  F048         	call	_isdigit
 24562  0021FA  A0D8               	btfss	status,0,c
 24563  0021FC  D0CA               	goto	l13298
 24564  0021FE  D7C2               	goto	l13240
 24565                           
 24566                           ;doprnt.c: 635: switch(c = *f++) {
 24567                           
 24568                           ;doprnt.c: 608: }
 24569                           ;doprnt.c: 633: loop:
 24570  002200  D0C8               	goto	l13298
 24571                           
 24572                           ;doprnt.c: 638: goto alldone;
 24573                           
 24574                           ;doprnt.c: 637: case 0:
 24575  002202  EF15  F018         	goto	l13596
 24576  002206                     l13248:
 24577                           
 24578                           ;doprnt.c: 643: flag |= 0x10;
 24579  002206  0101               	movlb	1	; () banked
 24580  002208  891B               	bsf	sprintf@flag& (0+255),4,b
 24581                           
 24582                           ;doprnt.c: 644: goto loop;
 24583  00220A  D0C3               	goto	l13298
 24584  00220C                     l13250:
 24585                           
 24586                           ; BSR set to: 1
 24587                           ;doprnt.c: 663: flag |= 0x400;
 24588  00220C  0101               	movlb	1	; () banked
 24589  00220E  851C               	bsf	(sprintf@flag+1)& (0+255),2,b
 24590                           
 24591                           ; BSR set to: 1
 24592                           ;doprnt.c: 698: case 'i':
 24593                           ;doprnt.c: 699: break;
 24594                           
 24595                           ; BSR set to: 1
 24596                           
 24597                           ;doprnt.c: 697: case 'd':
 24598                           
 24599                           ;doprnt.c: 664: break;
 24600  002210  D0EA               	goto	l13300
 24601                           
 24602                           ; BSR set to: 1
 24603                           
 24604                           ;doprnt.c: 712: case 'X':
 24605  002212  D000               	goto	l13252
 24606  002214                     l13252:
 24607                           
 24608                           ; BSR set to: 1
 24609                           ;doprnt.c: 718: case 'x':
 24610                           ;doprnt.c: 721: flag |= 0x80;
 24611  002214  0101               	movlb	1	; () banked
 24612  002216  8F1B               	bsf	sprintf@flag& (0+255),7,b
 24613                           
 24614                           ;doprnt.c: 723: break;
 24615  002218  D0E6               	goto	l13300
 24616  00221A                     l13254:
 24617                           
 24618                           ; BSR set to: 1
 24619                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24620  00221A  C108  FFD9         	movff	sprintf@ap,fsr2l
 24621  00221E  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 24622  002222  CFDE F104          	movff	postinc2,sprintf@cp
 24623  002226  CFDD F105          	movff	postdec2,sprintf@cp+1
 24624                           
 24625                           ; BSR set to: 1
 24626  00222A  0E02               	movlw	2
 24627  00222C  0101               	movlb	1	; () banked
 24628  00222E  2708               	addwf	sprintf@ap& (0+255),f,b
 24629  002230  0E00               	movlw	0
 24630  002232  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 24631                           
 24632                           ; BSR set to: 1
 24633                           ;doprnt.c: 740: if(!cp)
 24634  002234  0101               	movlb	1	; () banked
 24635  002236  5104               	movf	sprintf@cp& (0+255),w,b
 24636  002238  0101               	movlb	1	; () banked
 24637  00223A  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
 24638  00223C  A4D8               	btfss	status,2,c
 24639  00223E  D007               	goto	l13262
 24640                           
 24641                           ; BSR set to: 1
 24642                           ;doprnt.c: 741: cp = "(null)";
 24643  002240  0EAB               	movlw	low STR_146
 24644  002242  0101               	movlb	1	; () banked
 24645  002244  6F04               	movwf	sprintf@cp& (0+255),b
 24646  002246  0EFF               	movlw	high STR_146
 24647  002248  0101               	movlb	1	; () banked
 24648  00224A  6F05               	movwf	(sprintf@cp+1)& (0+255),b
 24649  00224C  D000               	goto	l13262
 24650  00224E                     l13262:
 24651                           
 24652                           ; BSR set to: 1
 24653                           ;doprnt.c: 745: len = 0;
 24654  00224E  0E00               	movlw	0
 24655  002250  0101               	movlb	1	; () banked
 24656  002252  6F07               	movwf	(sprintf@len+1)& (0+255),b
 24657  002254  0E00               	movlw	0
 24658  002256  6F06               	movwf	sprintf@len& (0+255),b
 24659                           
 24660                           ;doprnt.c: 746: while(cp[len])
 24661  002258  D004               	goto	l13266
 24662  00225A                     l13264:
 24663                           
 24664                           ;doprnt.c: 747: len++;
 24665  00225A  0101               	movlb	1	; () banked
 24666  00225C  4B06               	infsnz	sprintf@len& (0+255),f,b
 24667  00225E  2B07               	incf	(sprintf@len+1)& (0+255),f,b
 24668  002260  D000               	goto	l13266
 24669  002262                     l13266:
 24670                           
 24671                           ; BSR set to: 1
 24672  002262  0101               	movlb	1	; () banked
 24673  002264  5106               	movf	sprintf@len& (0+255),w,b
 24674  002266  0101               	movlb	1	; () banked
 24675  002268  2504               	addwf	sprintf@cp& (0+255),w,b
 24676  00226A  0100               	movlb	0	; () banked
 24677  00226C  6FD5               	movwf	??_sprintf& (0+255),b
 24678  00226E  0101               	movlb	1	; () banked
 24679  002270  5107               	movf	(sprintf@len+1)& (0+255),w,b
 24680  002272  0101               	movlb	1	; () banked
 24681  002274  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
 24682  002276  0100               	movlb	0	; () banked
 24683  002278  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24684  00227A  C0D5  FFF6         	movff	??_sprintf,tblptrl
 24685  00227E  C0D6  FFF7         	movff	??_sprintf+1,tblptrh
 24686  002282  0E00               	movlw	low (__mediumconst shr (0+16))
 24687  002284  6EF8               	movwf	tblptru,c
 24688  002286  0E0F               	movlw	(high __ramtop+-1)
 24689  002288  64F7               	cpfsgt	tblptrh,c
 24690  00228A  D003               	bra	u16017
 24691  00228C  0008               	tblrd		*
 24692  00228E  50F5               	movf	tablat,w,c
 24693  002290  D005               	bra	u16010
 24694  002292                     u16017:
 24695  002292  CFF6 FFE9          	movff	tblptrl,fsr0l
 24696  002296  CFF7 FFEA          	movff	tblptrh,fsr0h
 24697  00229A  50EF               	movf	indf0,w,c
 24698  00229C                     u16010:
 24699  00229C  0900               	iorlw	0
 24700  00229E  B4D8               	btfsc	status,2,c
 24701  0022A0  D002               	goto	l13268
 24702  0022A2  D7DB               	goto	l13264
 24703  0022A4  D000               	goto	l13268
 24704  0022A6                     l13268:
 24705                           
 24706                           ;doprnt.c: 757: if(width > len)
 24707  0022A6  0101               	movlb	1	; () banked
 24708  0022A8  5119               	movf	sprintf@width& (0+255),w,b
 24709  0022AA  0101               	movlb	1	; () banked
 24710  0022AC  5D06               	subwf	sprintf@len& (0+255),w,b
 24711  0022AE  0101               	movlb	1	; () banked
 24712  0022B0  511A               	movf	(sprintf@width+1)& (0+255),w,b
 24713  0022B2  0101               	movlb	1	; () banked
 24714  0022B4  5907               	subwfb	(sprintf@len+1)& (0+255),w,b
 24715  0022B6  B0D8               	btfsc	status,0,c
 24716  0022B8  D009               	goto	l13272
 24717                           
 24718                           ; BSR set to: 1
 24719                           ;doprnt.c: 758: width -= len;
 24720  0022BA  0101               	movlb	1	; () banked
 24721  0022BC  5106               	movf	sprintf@len& (0+255),w,b
 24722  0022BE  0101               	movlb	1	; () banked
 24723  0022C0  5F19               	subwf	sprintf@width& (0+255),f,b
 24724  0022C2  0101               	movlb	1	; () banked
 24725  0022C4  5107               	movf	(sprintf@len+1)& (0+255),w,b
 24726  0022C6  0101               	movlb	1	; () banked
 24727  0022C8  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 24728  0022CA  D010               	goto	l13278
 24729  0022CC                     l13272:
 24730                           
 24731                           ; BSR set to: 1
 24732                           ;doprnt.c: 759: else
 24733                           ;doprnt.c: 760: width = 0;
 24734  0022CC  0E00               	movlw	0
 24735  0022CE  0101               	movlb	1	; () banked
 24736  0022D0  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 24737  0022D2  0E00               	movlw	0
 24738  0022D4  6F19               	movwf	sprintf@width& (0+255),b
 24739                           
 24740                           ; BSR set to: 1
 24741                           ;doprnt.c: 764: while(width--)
 24742  0022D6  D00A               	goto	l13278
 24743  0022D8                     l13274:
 24744                           
 24745                           ; BSR set to: 1
 24746                           ;doprnt.c: 765: ((*sp++ = (' ')));
 24747  0022D8  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24748  0022DC  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24749  0022E0  0E20               	movlw	32
 24750  0022E2  6EDF               	movwf	indf2,c
 24751                           
 24752                           ; BSR set to: 1
 24753  0022E4  0100               	movlb	0	; () banked
 24754  0022E6  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24755  0022E8  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24756  0022EA  D000               	goto	l13278
 24757  0022EC                     l13278:
 24758  0022EC  0101               	movlb	1	; () banked
 24759  0022EE  0719               	decf	sprintf@width& (0+255),f,b
 24760  0022F0  A0D8               	btfss	status,0,c
 24761  0022F2  071A               	decf	(sprintf@width+1)& (0+255),f,b
 24762  0022F4  0101               	movlb	1	; () banked
 24763  0022F6  2919               	incf	sprintf@width& (0+255),w,b
 24764  0022F8  E1EF               	bnz	l13274
 24765  0022FA  0101               	movlb	1	; () banked
 24766  0022FC  291A               	incf	(sprintf@width+1)& (0+255),w,b
 24767  0022FE  B4D8               	btfsc	status,2,c
 24768  002300  D01F               	goto	l13286
 24769  002302  D7EA               	goto	l13274
 24770                           
 24771                           ; BSR set to: 1
 24772                           ;doprnt.c: 767: while(len--)
 24773  002304  D01D               	goto	l13286
 24774  002306                     l13280:
 24775                           
 24776                           ; BSR set to: 1
 24777                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 24778  002306  C104  FFF6         	movff	sprintf@cp,tblptrl
 24779  00230A  C105  FFF7         	movff	sprintf@cp+1,tblptrh
 24780  00230E  0E00               	movlw	low (__mediumconst shr (0+16))
 24781  002310  6EF8               	movwf	tblptru,c
 24782  002312  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 24783  002316  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 24784  00231A  0E0F               	movlw	(high __ramtop+-1)
 24785  00231C  64F7               	cpfsgt	tblptrh,c
 24786  00231E  D003               	bra	u16057
 24787  002320  0008               	tblrd		*
 24788  002322  50F5               	movf	tablat,w,c
 24789  002324  D005               	bra	u16050
 24790  002326                     u16057:
 24791  002326  CFF6 FFE9          	movff	tblptrl,fsr0l
 24792  00232A  CFF7 FFEA          	movff	tblptrh,fsr0h
 24793  00232E  50EF               	movf	indf0,w,c
 24794  002330                     u16050:
 24795  002330  6EDF               	movwf	indf2,c
 24796  002332  0101               	movlb	1	; () banked
 24797  002334  4B04               	infsnz	sprintf@cp& (0+255),f,b
 24798  002336  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
 24799                           
 24800                           ; BSR set to: 1
 24801  002338  0100               	movlb	0	; () banked
 24802  00233A  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 24803  00233C  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 24804  00233E  D000               	goto	l13286
 24805  002340                     l13286:
 24806  002340  0101               	movlb	1	; () banked
 24807  002342  0706               	decf	sprintf@len& (0+255),f,b
 24808  002344  A0D8               	btfss	status,0,c
 24809  002346  0707               	decf	(sprintf@len+1)& (0+255),f,b
 24810  002348  0101               	movlb	1	; () banked
 24811  00234A  2906               	incf	sprintf@len& (0+255),w,b
 24812  00234C  E1DC               	bnz	l13280
 24813  00234E  0101               	movlb	1	; () banked
 24814  002350  2907               	incf	(sprintf@len+1)& (0+255),w,b
 24815  002352  B4D8               	btfsc	status,2,c
 24816  002354  EF03  F018         	goto	l13594
 24817  002358  D7D6               	goto	l13280
 24818                           
 24819                           ; BSR set to: 1
 24820                           ;doprnt.c: 774: continue;
 24821  00235A  EF03  F018         	goto	l13594
 24822  00235E                     l13288:
 24823                           
 24824                           ; BSR set to: 1
 24825                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24826  00235E  C108  FFD9         	movff	sprintf@ap,fsr2l
 24827  002362  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 24828  002366  50DF               	movf	indf2,w,c
 24829  002368  0101               	movlb	1	; () banked
 24830  00236A  6F1D               	movwf	sprintf@c& (0+255),b
 24831                           
 24832                           ; BSR set to: 1
 24833  00236C  0E02               	movlw	2
 24834  00236E  0101               	movlb	1	; () banked
 24835  002370  2708               	addwf	sprintf@ap& (0+255),f,b
 24836  002372  0E00               	movlw	0
 24837  002374  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 24838  002376  D000               	goto	l13292
 24839  002378                     l13292:
 24840                           
 24841                           ; BSR set to: 1
 24842                           ;doprnt.c: 805: cp = (char *)&c;
 24843  002378  0E1D               	movlw	low sprintf@c
 24844  00237A  0101               	movlb	1	; () banked
 24845  00237C  6F04               	movwf	sprintf@cp& (0+255),b
 24846  00237E  0E01               	movlw	high sprintf@c
 24847  002380  0101               	movlb	1	; () banked
 24848  002382  6F05               	movwf	(sprintf@cp+1)& (0+255),b
 24849                           
 24850                           ; BSR set to: 1
 24851                           ;doprnt.c: 806: len = 1;
 24852  002384  0E00               	movlw	0
 24853  002386  0101               	movlb	1	; () banked
 24854  002388  6F07               	movwf	(sprintf@len+1)& (0+255),b
 24855  00238A  0E01               	movlw	1
 24856  00238C  6F06               	movwf	sprintf@len& (0+255),b
 24857                           
 24858                           ;doprnt.c: 807: goto dostring;
 24859  00238E  D78B               	goto	l13268
 24860                           
 24861                           ; BSR set to: 1
 24862                           ;doprnt.c: 822: }
 24863  002390  D02A               	goto	l13300
 24864  002392                     l13298:
 24865  002392  C0C9  FFF6         	movff	sprintf@f,tblptrl
 24866  002396  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 24867  00239A  0100               	movlb	0	; () banked
 24868  00239C  4BC9               	infsnz	sprintf@f& (0+255),f,b
 24869  00239E  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 24870  0023A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24871  0023A0  6AF8               	clrf	tblptru,c
 24872  0023A2                     	endif
 24873  0023A2                     	if	0	;tblptru may be non-zero
 24874  0023A2                     	endif
 24875  0023A2  0008               	tblrd		*
 24876  0023A4  CFF5 F11D          	movff	tablat,sprintf@c
 24877  0023A8  0101               	movlb	1	; () banked
 24878  0023AA  511D               	movf	sprintf@c& (0+255),w,b
 24879                           
 24880                           ; Switch size 1, requested type "space"
 24881                           ; Number of cases is 9, Range of values is 0 to 120
 24882                           ; switch strategies available:
 24883                           ; Name         Instructions Cycles
 24884                           ; simple_byte           28    15 (average)
 24885                           ;	Chosen strategy is simple_byte
 24886  0023AC  0A00               	xorlw	0	; case 0
 24887  0023AE  B4D8               	btfsc	status,2,c
 24888  0023B0  EF15  F018         	goto	l13596
 24889  0023B4  0A58               	xorlw	88	; case 88
 24890  0023B6  B4D8               	btfsc	status,2,c
 24891  0023B8  D72D               	goto	l13252
 24892  0023BA  0A3B               	xorlw	59	; case 99
 24893  0023BC  B4D8               	btfsc	status,2,c
 24894  0023BE  D7CF               	goto	l13288
 24895  0023C0  0A07               	xorlw	7	; case 100
 24896  0023C2  B4D8               	btfsc	status,2,c
 24897  0023C4  D010               	goto	l13300
 24898  0023C6  0A02               	xorlw	2	; case 102
 24899  0023C8  B4D8               	btfsc	status,2,c
 24900  0023CA  D720               	goto	l13250
 24901  0023CC  0A0F               	xorlw	15	; case 105
 24902  0023CE  B4D8               	btfsc	status,2,c
 24903  0023D0  D00A               	goto	l13300
 24904  0023D2  0A05               	xorlw	5	; case 108
 24905  0023D4  B4D8               	btfsc	status,2,c
 24906  0023D6  D717               	goto	l13248
 24907  0023D8  0A1F               	xorlw	31	; case 115
 24908  0023DA  B4D8               	btfsc	status,2,c
 24909  0023DC  D71E               	goto	l13254
 24910  0023DE  0A0B               	xorlw	11	; case 120
 24911  0023E0  B4D8               	btfsc	status,2,c
 24912  0023E2  D718               	goto	l13252
 24913  0023E4  D7C9               	goto	l13292
 24914  0023E6                     l13300:
 24915                           
 24916                           ; BSR set to: 1
 24917                           ;doprnt.c: 825: if(flag & (0x700)) {
 24918  0023E6  0E07               	movlw	7
 24919  0023E8  0101               	movlb	1	; () banked
 24920  0023EA  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 24921  0023EC  B4D8               	btfsc	status,2,c
 24922  0023EE  D3ED               	goto	l2219
 24923                           
 24924                           ; BSR set to: 1
 24925                           ;doprnt.c: 829: prec = 6;
 24926  0023F0  0E00               	movlw	0
 24927  0023F2  0101               	movlb	1	; () banked
 24928  0023F4  6F0B               	movwf	(sprintf@prec+1)& (0+255),b
 24929  0023F6  0E06               	movlw	6
 24930  0023F8  6F0A               	movwf	sprintf@prec& (0+255),b
 24931                           
 24932                           ; BSR set to: 1
 24933                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24934  0023FA  C108  FFD9         	movff	sprintf@ap,fsr2l
 24935  0023FE  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 24936  002402  CFDE F116          	movff	postinc2,sprintf@fval
 24937  002406  CFDE F117          	movff	postinc2,sprintf@fval+1
 24938  00240A  CFDD F118          	movff	postdec2,sprintf@fval+2
 24939                           
 24940                           ; BSR set to: 1
 24941  00240E  0E03               	movlw	3
 24942  002410  0101               	movlb	1	; () banked
 24943  002412  2708               	addwf	sprintf@ap& (0+255),f,b
 24944  002414  0E00               	movlw	0
 24945  002416  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 24946                           
 24947                           ; BSR set to: 1
 24948                           ;doprnt.c: 831: if(fval < 0.0) {
 24949  002418  0101               	movlb	1	; () banked
 24950  00241A  AF18               	btfss	(sprintf@fval+2)& (0+255),7,b
 24951  00241C  D012               	goto	l13314
 24952                           
 24953                           ; BSR set to: 1
 24954                           ;doprnt.c: 832: fval = -fval;
 24955  00241E  C116  F079         	movff	sprintf@fval,___ftneg@f1
 24956  002422  C117  F07A         	movff	sprintf@fval+1,___ftneg@f1+1
 24957  002426  C118  F07B         	movff	sprintf@fval+2,___ftneg@f1+2
 24958  00242A  EC5D  F048         	call	___ftneg	;wreg free
 24959  00242E  C079  F116         	movff	?___ftneg,sprintf@fval
 24960  002432  C07A  F117         	movff	?___ftneg+1,sprintf@fval+1
 24961  002436  C07B  F118         	movff	?___ftneg+2,sprintf@fval+2
 24962                           
 24963                           ;doprnt.c: 833: flag |= 0x03;
 24964  00243A  0E03               	movlw	3
 24965  00243C  0101               	movlb	1	; () banked
 24966  00243E  131B               	iorwf	sprintf@flag& (0+255),f,b
 24967  002440  D000               	goto	l13314
 24968  002442                     l13314:
 24969                           
 24970                           ; BSR set to: 1
 24971                           ;doprnt.c: 834: }
 24972                           ;doprnt.c: 835: exp = 0;
 24973  002442  0E00               	movlw	0
 24974  002444  0101               	movlb	1	; () banked
 24975  002446  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 24976  002448  0E00               	movlw	0
 24977  00244A  6F10               	movwf	sprintf@exp& (0+255),b
 24978                           
 24979                           ; BSR set to: 1
 24980                           ;doprnt.c: 836: if( fval!=0) {
 24981  00244C  0101               	movlb	1	; () banked
 24982  00244E  5116               	movf	sprintf@fval& (0+255),w,b
 24983  002450  0101               	movlb	1	; () banked
 24984  002452  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 24985  002454  0101               	movlb	1	; () banked
 24986  002456  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 24987  002458  B4D8               	btfsc	status,2,c
 24988  00245A  D09D               	goto	l13342
 24989                           
 24990                           ; BSR set to: 1
 24991                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 24992  00245C  0E82               	movlw	130
 24993  00245E  0100               	movlb	0	; () banked
 24994  002460  6FD5               	movwf	??_sprintf& (0+255),b
 24995  002462  0EFF               	movlw	255
 24996  002464  0100               	movlb	0	; () banked
 24997  002466  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 24998  002468  C116  F0D7         	movff	sprintf@fval,??_sprintf+2
 24999  00246C  C117  F0D8         	movff	sprintf@fval+1,??_sprintf+3
 25000  002470  C118  F0D9         	movff	sprintf@fval+2,??_sprintf+4
 25001  002474  C119  F0DA         	movff	sprintf@fval+3,??_sprintf+5
 25002  002478  0E10               	movlw	16
 25003  00247A  D006               	goto	u16100
 25004  00247C                     u16105:
 25005  00247C  0100               	movlb	0	; () banked
 25006  00247E  90D8               	bcf	status,0,c
 25007  002480  33DA               	rrcf	(??_sprintf+5)& (0+255),f,b
 25008  002482  33D9               	rrcf	(??_sprintf+4)& (0+255),f,b
 25009  002484  33D8               	rrcf	(??_sprintf+3)& (0+255),f,b
 25010  002486  33D7               	rrcf	(??_sprintf+2)& (0+255),f,b
 25011  002488                     u16100:
 25012  002488  2EE8               	decfsz	wreg,f,c
 25013  00248A  D7F8               	goto	u16105
 25014  00248C  0100               	movlb	0	; () banked
 25015  00248E  51D7               	movf	(??_sprintf+2)& (0+255),w,b
 25016  002490  0100               	movlb	0	; () banked
 25017  002492  25D5               	addwf	??_sprintf& (0+255),w,b
 25018  002494  0101               	movlb	1	; () banked
 25019  002496  6F10               	movwf	sprintf@exp& (0+255),b
 25020  002498  0E00               	movlw	0
 25021  00249A  0100               	movlb	0	; () banked
 25022  00249C  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 25023  00249E  0101               	movlb	1	; () banked
 25024  0024A0  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25025                           
 25026                           ; BSR set to: 1
 25027                           ;doprnt.c: 838: exp--;
 25028  0024A2  0101               	movlb	1	; () banked
 25029  0024A4  0710               	decf	sprintf@exp& (0+255),f,b
 25030  0024A6  A0D8               	btfss	status,0,c
 25031  0024A8  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25032                           
 25033                           ; BSR set to: 1
 25034                           ;doprnt.c: 839: exp *= 3;
 25035  0024AA  C110  F087         	movff	sprintf@exp,___wmul@multiplier
 25036  0024AE  C111  F088         	movff	sprintf@exp+1,___wmul@multiplier+1
 25037  0024B2  0E00               	movlw	0
 25038  0024B4  0100               	movlb	0	; () banked
 25039  0024B6  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25040  0024B8  0E03               	movlw	3
 25041  0024BA  6F89               	movwf	___wmul@multiplicand& (0+255),b
 25042  0024BC  EC0D  F048         	call	___wmul	;wreg free
 25043  0024C0  C087  F110         	movff	?___wmul,sprintf@exp
 25044  0024C4  C088  F111         	movff	?___wmul+1,sprintf@exp+1
 25045                           
 25046                           ;doprnt.c: 840: exp /= 10;
 25047  0024C8  C110  F07F         	movff	sprintf@exp,___awdiv@dividend
 25048  0024CC  C111  F080         	movff	sprintf@exp+1,___awdiv@dividend+1
 25049  0024D0  0E00               	movlw	0
 25050  0024D2  0100               	movlb	0	; () banked
 25051  0024D4  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 25052  0024D6  0E0A               	movlw	10
 25053  0024D8  6F81               	movwf	___awdiv@divisor& (0+255),b
 25054  0024DA  EC03  F03E         	call	___awdiv	;wreg free
 25055  0024DE  C07F  F110         	movff	?___awdiv,sprintf@exp
 25056  0024E2  C080  F111         	movff	?___awdiv+1,sprintf@exp+1
 25057                           
 25058                           ;doprnt.c: 841: if(exp < 0)
 25059  0024E6  0101               	movlb	1	; () banked
 25060  0024E8  AF11               	btfss	(sprintf@exp+1)& (0+255),7,b
 25061  0024EA  D005               	goto	l13330
 25062                           
 25063                           ; BSR set to: 1
 25064                           ;doprnt.c: 842: exp--;
 25065  0024EC  0101               	movlb	1	; () banked
 25066  0024EE  0710               	decf	sprintf@exp& (0+255),f,b
 25067  0024F0  A0D8               	btfss	status,0,c
 25068  0024F2  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25069  0024F4  D000               	goto	l13330
 25070  0024F6                     l13330:
 25071                           
 25072                           ; BSR set to: 1
 25073                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25074  0024F6  0101               	movlb	1	; () banked
 25075  0024F8  5110               	movf	sprintf@exp& (0+255),w,b
 25076  0024FA  0800               	sublw	0
 25077  0024FC  EC0E  F021         	call	_scale
 25078  002500  C0A2  F10C         	movff	?_scale,sprintf@tmpval
 25079  002504  C0A3  F10D         	movff	?_scale+1,sprintf@tmpval+1
 25080  002508  C0A4  F10E         	movff	?_scale+2,sprintf@tmpval+2
 25081                           
 25082                           ;doprnt.c: 847: tmpval.integ *= fval;
 25083  00250C  C10C  F093         	movff	sprintf@tmpval,___ftmul@f1
 25084  002510  C10D  F094         	movff	sprintf@tmpval+1,___ftmul@f1+1
 25085  002514  C10E  F095         	movff	sprintf@tmpval+2,___ftmul@f1+2
 25086  002518  C116  F096         	movff	sprintf@fval,___ftmul@f2
 25087  00251C  C117  F097         	movff	sprintf@fval+1,___ftmul@f2+1
 25088  002520  C118  F098         	movff	sprintf@fval+2,___ftmul@f2+2
 25089  002524  EC91  F036         	call	___ftmul	;wreg free
 25090  002528  C093  F10C         	movff	?___ftmul,sprintf@tmpval
 25091  00252C  C094  F10D         	movff	?___ftmul+1,sprintf@tmpval+1
 25092  002530  C095  F10E         	movff	?___ftmul+2,sprintf@tmpval+2
 25093                           
 25094                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25095  002534  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25096  002538  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25097  00253C  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25098  002540  0E00               	movlw	0
 25099  002542  0100               	movlb	0	; () banked
 25100  002544  6F7C               	movwf	___ftge@ff2& (0+255),b
 25101  002546  0E80               	movlw	128
 25102  002548  0100               	movlb	0	; () banked
 25103  00254A  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25104  00254C  0E3F               	movlw	63
 25105  00254E  0100               	movlb	0	; () banked
 25106  002550  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25107  002552  EC6B  F03E         	call	___ftge	;wreg free
 25108  002556  0100               	movlb	0	; () banked
 25109  002558  B0D8               	btfsc	status,0,c
 25110  00255A  D005               	goto	l13338
 25111                           
 25112                           ; BSR set to: 0
 25113                           ;doprnt.c: 849: exp--;
 25114  00255C  0101               	movlb	1	; () banked
 25115  00255E  0710               	decf	sprintf@exp& (0+255),f,b
 25116  002560  A0D8               	btfss	status,0,c
 25117  002562  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25118  002564  D018               	goto	l13342
 25119  002566                     l13338:
 25120                           
 25121                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25122  002566  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25123  00256A  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25124  00256E  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25125  002572  0E00               	movlw	0
 25126  002574  0100               	movlb	0	; () banked
 25127  002576  6F7C               	movwf	___ftge@ff2& (0+255),b
 25128  002578  0E20               	movlw	32
 25129  00257A  0100               	movlb	0	; () banked
 25130  00257C  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25131  00257E  0E41               	movlw	65
 25132  002580  0100               	movlb	0	; () banked
 25133  002582  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25134  002584  EC6B  F03E         	call	___ftge	;wreg free
 25135  002588  0100               	movlb	0	; () banked
 25136  00258A  A0D8               	btfss	status,0,c
 25137  00258C  D004               	goto	l13342
 25138                           
 25139                           ; BSR set to: 0
 25140                           ;doprnt.c: 851: exp++;
 25141  00258E  0101               	movlb	1	; () banked
 25142  002590  4B10               	infsnz	sprintf@exp& (0+255),f,b
 25143  002592  2B11               	incf	(sprintf@exp+1)& (0+255),f,b
 25144                           
 25145                           ; BSR set to: 1
 25146                           
 25147                           ; BSR set to: 1
 25148  002594  D000               	goto	l13342
 25149  002596                     l13342:
 25150                           
 25151                           ;doprnt.c: 852: }
 25152                           ;doprnt.c: 1112: if(prec <= 12)
 25153  002596  0101               	movlb	1	; () banked
 25154  002598  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25155  00259A  D008               	goto	l13344
 25156  00259C  0101               	movlb	1	; () banked
 25157  00259E  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25158  0025A0  E11E               	bnz	l13346
 25159  0025A2  0E0D               	movlw	13
 25160  0025A4  0101               	movlb	1	; () banked
 25161  0025A6  5D0A               	subwf	sprintf@prec& (0+255),w,b
 25162  0025A8  B0D8               	btfsc	status,0,c
 25163  0025AA  D019               	goto	l13346
 25164  0025AC                     l13344:
 25165                           
 25166                           ; BSR set to: 1
 25167                           ;doprnt.c: 1113: fval += fround(prec);
 25168  0025AC  C116  F0AC         	movff	sprintf@fval,___ftadd@f1
 25169  0025B0  C117  F0AD         	movff	sprintf@fval+1,___ftadd@f1+1
 25170  0025B4  C118  F0AE         	movff	sprintf@fval+2,___ftadd@f1+2
 25171  0025B8  0101               	movlb	1	; () banked
 25172  0025BA  510A               	movf	sprintf@prec& (0+255),w,b
 25173  0025BC  ECB2  F02B         	call	_fround
 25174  0025C0  C0A2  F0AF         	movff	?_fround,___ftadd@f2
 25175  0025C4  C0A3  F0B0         	movff	?_fround+1,___ftadd@f2+1
 25176  0025C8  C0A4  F0B1         	movff	?_fround+2,___ftadd@f2+2
 25177  0025CC  EC1E  F02D         	call	___ftadd	;wreg free
 25178  0025D0  C0AC  F116         	movff	?___ftadd,sprintf@fval
 25179  0025D4  C0AD  F117         	movff	?___ftadd+1,sprintf@fval+1
 25180  0025D8  C0AE  F118         	movff	?___ftadd+2,sprintf@fval+2
 25181  0025DC  D000               	goto	l13346
 25182  0025DE                     l13346:
 25183                           
 25184                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25185  0025DE  0101               	movlb	1	; () banked
 25186  0025E0  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25187  0025E2  D008               	goto	l13348
 25188  0025E4  0101               	movlb	1	; () banked
 25189  0025E6  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25190  0025E8  E12C               	bnz	l13354
 25191  0025EA  0E0A               	movlw	10
 25192  0025EC  0101               	movlb	1	; () banked
 25193  0025EE  5D10               	subwf	sprintf@exp& (0+255),w,b
 25194  0025F0  B0D8               	btfsc	status,0,c
 25195  0025F2  D027               	goto	l13354
 25196  0025F4                     l13348:
 25197                           
 25198                           ; BSR set to: 1
 25199  0025F4  0101               	movlb	1	; () banked
 25200  0025F6  5116               	movf	sprintf@fval& (0+255),w,b
 25201  0025F8  0101               	movlb	1	; () banked
 25202  0025FA  1117               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25203  0025FC  0101               	movlb	1	; () banked
 25204  0025FE  1118               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25205  002600  B4D8               	btfsc	status,2,c
 25206  002602  D07F               	goto	l13368
 25207                           
 25208                           ; BSR set to: 1
 25209  002604  C116  F0B8         	movff	sprintf@fval,___fttol@f1
 25210  002608  C117  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
 25211  00260C  C118  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
 25212  002610  ECF0  F037         	call	___fttol	;wreg free
 25213  002614  0100               	movlb	0	; () banked
 25214  002616  51B8               	movf	?___fttol& (0+255),w,b
 25215  002618  0100               	movlb	0	; () banked
 25216  00261A  11B9               	iorwf	(?___fttol+1)& (0+255),w,b
 25217  00261C  0100               	movlb	0	; () banked
 25218  00261E  11BA               	iorwf	(?___fttol+2)& (0+255),w,b
 25219  002620  0100               	movlb	0	; () banked
 25220  002622  11BB               	iorwf	(?___fttol+3)& (0+255),w,b
 25221  002624  A4D8               	btfss	status,2,c
 25222  002626  D06D               	goto	l13368
 25223                           
 25224                           ; BSR set to: 0
 25225  002628  0101               	movlb	1	; () banked
 25226  00262A  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25227  00262C  D06A               	goto	l13368
 25228  00262E  0101               	movlb	1	; () banked
 25229  002630  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25230  002632  E107               	bnz	l13354
 25231  002634  0E02               	movlw	2
 25232  002636  0101               	movlb	1	; () banked
 25233  002638  5D10               	subwf	sprintf@exp& (0+255),w,b
 25234  00263A  B0D8               	btfsc	status,0,c
 25235  00263C  D002               	goto	l13354
 25236  00263E  D061               	goto	l13368
 25237  002640  D000               	goto	l13354
 25238  002642                     l13354:
 25239                           
 25240                           ; BSR set to: 1
 25241                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25242  002642  C10C  F079         	movff	sprintf@tmpval,___ftge@ff1
 25243  002646  C10D  F07A         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25244  00264A  C10E  F07B         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25245  00264E  0E70               	movlw	112
 25246  002650  0100               	movlb	0	; () banked
 25247  002652  6F7C               	movwf	___ftge@ff2& (0+255),b
 25248  002654  0E89               	movlw	137
 25249  002656  0100               	movlb	0	; () banked
 25250  002658  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 25251  00265A  0E40               	movlw	64
 25252  00265C  0100               	movlb	0	; () banked
 25253  00265E  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 25254  002660  EC6B  F03E         	call	___ftge	;wreg free
 25255  002664  0100               	movlb	0	; () banked
 25256  002666  B0D8               	btfsc	status,0,c
 25257  002668  D003               	goto	l13358
 25258                           
 25259                           ; BSR set to: 0
 25260                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25261  00266A  0101               	movlb	1	; () banked
 25262  00266C  0EF7               	movlw	247
 25263  00266E  D002               	goto	L17
 25264  002670                     l13358:
 25265                           
 25266                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25267  002670  0101               	movlb	1	; () banked
 25268  002672  0EF8               	movlw	248
 25269  002674                     L17:
 25270  002674  2710               	addwf	sprintf@exp& (0+255),f,b
 25271  002676  0EFF               	movlw	255
 25272  002678  2311               	addwfc	(sprintf@exp+1)& (0+255),f,b
 25273  00267A  D000               	goto	l13360
 25274  00267C                     l13360:
 25275                           
 25276                           ; BSR set to: 1
 25277                           ;doprnt.c: 1124: }
 25278                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 25279  00267C  0101               	movlb	1	; () banked
 25280  00267E  5110               	movf	sprintf@exp& (0+255),w,b
 25281  002680  EC0E  F021         	call	_scale
 25282  002684  C0A2  F10C         	movff	?_scale,sprintf@tmpval
 25283  002688  C0A3  F10D         	movff	?_scale+1,sprintf@tmpval+1
 25284  00268C  C0A4  F10E         	movff	?_scale+2,sprintf@tmpval+2
 25285                           
 25286                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25287  002690  D017               	goto	l13364
 25288  002692  C116  F079         	movff	sprintf@fval,__div_to_l_@f1
 25289  002696  C117  F07A         	movff	sprintf@fval+1,__div_to_l_@f1+1
 25290  00269A  C118  F07B         	movff	sprintf@fval+2,__div_to_l_@f1+2
 25291  00269E  C10C  F07C         	movff	sprintf@tmpval,__div_to_l_@f2
 25292  0026A2  C10D  F07D         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 25293  0026A6  C10E  F07E         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 25294  0026AA  EC48  F034         	call	__div_to_l_	;wreg free
 25295  0026AE  C079  F112         	movff	?__div_to_l_,sprintf@val
 25296  0026B2  C07A  F113         	movff	?__div_to_l_+1,sprintf@val+1
 25297  0026B6  C07B  F114         	movff	?__div_to_l_+2,sprintf@val+2
 25298  0026BA  C07C  F115         	movff	?__div_to_l_+3,sprintf@val+3
 25299  0026BE  D017               	goto	l13366
 25300  0026C0                     l13364:
 25301  0026C0  C116  F079         	movff	sprintf@fval,__tdiv_to_l_@f1
 25302  0026C4  C117  F07A         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 25303  0026C8  C118  F07B         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 25304  0026CC  C10C  F07C         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 25305  0026D0  C10D  F07D         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 25306  0026D4  C10E  F07E         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 25307  0026D8  EC75  F033         	call	__tdiv_to_l_	;wreg free
 25308  0026DC  C079  F112         	movff	?__tdiv_to_l_,sprintf@val
 25309  0026E0  C07A  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
 25310  0026E4  C07B  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
 25311  0026E8  C07C  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
 25312  0026EC  D000               	goto	l13366
 25313  0026EE                     l13366:
 25314                           
 25315                           ;doprnt.c: 1129: fval = 0.0;
 25316  0026EE  0E00               	movlw	0
 25317  0026F0  0101               	movlb	1	; () banked
 25318  0026F2  6F16               	movwf	sprintf@fval& (0+255),b
 25319  0026F4  0E00               	movlw	0
 25320  0026F6  0101               	movlb	1	; () banked
 25321  0026F8  6F17               	movwf	(sprintf@fval+1)& (0+255),b
 25322  0026FA  0E00               	movlw	0
 25323  0026FC  0101               	movlb	1	; () banked
 25324  0026FE  6F18               	movwf	(sprintf@fval+2)& (0+255),b
 25325                           
 25326                           ;doprnt.c: 1130: } else {
 25327  002700  D034               	goto	l13372
 25328  002702                     l13368:
 25329                           
 25330                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25331  002702  C116  F0B8         	movff	sprintf@fval,___fttol@f1
 25332  002706  C117  F0B9         	movff	sprintf@fval+1,___fttol@f1+1
 25333  00270A  C118  F0BA         	movff	sprintf@fval+2,___fttol@f1+2
 25334  00270E  ECF0  F037         	call	___fttol	;wreg free
 25335  002712  C0B8  F112         	movff	?___fttol,sprintf@val
 25336  002716  C0B9  F113         	movff	?___fttol+1,sprintf@val+1
 25337  00271A  C0BA  F114         	movff	?___fttol+2,sprintf@val+2
 25338  00271E  C0BB  F115         	movff	?___fttol+3,sprintf@val+3
 25339                           
 25340                           ;doprnt.c: 1132: fval -= (double)val;
 25341  002722  C116  F0B8         	movff	sprintf@fval,___ftsub@f1
 25342  002726  C117  F0B9         	movff	sprintf@fval+1,___ftsub@f1+1
 25343  00272A  C118  F0BA         	movff	sprintf@fval+2,___ftsub@f1+2
 25344  00272E  C112  F081         	movff	sprintf@val,___lltoft@c
 25345  002732  C113  F082         	movff	sprintf@val+1,___lltoft@c+1
 25346  002736  C114  F083         	movff	sprintf@val+2,___lltoft@c+2
 25347  00273A  C115  F084         	movff	sprintf@val+3,___lltoft@c+3
 25348  00273E  ECFA  F043         	call	___lltoft	;wreg free
 25349  002742  C081  F0BB         	movff	?___lltoft,___ftsub@f2
 25350  002746  C082  F0BC         	movff	?___lltoft+1,___ftsub@f2+1
 25351  00274A  C083  F0BD         	movff	?___lltoft+2,___ftsub@f2+2
 25352  00274E  ECC0  F046         	call	___ftsub	;wreg free
 25353  002752  C0B8  F116         	movff	?___ftsub,sprintf@fval
 25354  002756  C0B9  F117         	movff	?___ftsub+1,sprintf@fval+1
 25355  00275A  C0BA  F118         	movff	?___ftsub+2,sprintf@fval+2
 25356                           
 25357                           ;doprnt.c: 1133: exp = 0;
 25358  00275E  0E00               	movlw	0
 25359  002760  0101               	movlb	1	; () banked
 25360  002762  6F11               	movwf	(sprintf@exp+1)& (0+255),b
 25361  002764  0E00               	movlw	0
 25362  002766  6F10               	movwf	sprintf@exp& (0+255),b
 25363  002768  D000               	goto	l13372
 25364  00276A                     l13372:
 25365                           
 25366                           ; BSR set to: 1
 25367                           ;doprnt.c: 1134: }
 25368                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25369  00276A  0E01               	movlw	1
 25370  00276C  0101               	movlb	1	; () banked
 25371  00276E  6F1D               	movwf	sprintf@c& (0+255),b
 25372  002770                     l13374:
 25373                           
 25374                           ; BSR set to: 1
 25375  002770  0E0A               	movlw	10
 25376  002772  0101               	movlb	1	; () banked
 25377  002774  191D               	xorwf	sprintf@c& (0+255),w,b
 25378  002776  B4D8               	btfsc	status,2,c
 25379  002778  D025               	goto	l13386
 25380  00277A  D001               	goto	l13378
 25381                           
 25382                           ; BSR set to: 1
 25383  00277C  D023               	goto	l13386
 25384  00277E                     l13378:
 25385                           
 25386                           ; BSR set to: 1
 25387                           ;doprnt.c: 1137: if(val < dpowers[c])
 25388  00277E  0101               	movlb	1	; () banked
 25389  002780  511D               	movf	sprintf@c& (0+255),w,b
 25390  002782  0D04               	mullw	4
 25391  002784  0E93               	movlw	low _dpowers
 25392  002786  24F3               	addwf	prodl,w,c
 25393  002788  6EF6               	movwf	tblptrl,c
 25394  00278A  0EF1               	movlw	high _dpowers
 25395  00278C  20F4               	addwfc	prodh,w,c
 25396  00278E  6EF7               	movwf	tblptrh,c
 25397  002790                     	if	1	;There are 3 active tblptr bytes
 25398  002790  6AF8               	clrf	tblptru,c
 25399  002792  0E00               	movlw	low (__mediumconst shr (0+16))
 25400  002794  22F8               	addwfc	tblptru,f,c
 25401  002796                     	endif
 25402  002796  0009               	tblrd		*+
 25403  002798  50F5               	movf	tablat,w,c
 25404  00279A  0101               	movlb	1	; () banked
 25405  00279C  5D12               	subwf	sprintf@val& (0+255),w,b
 25406  00279E  0009               	tblrd		*+
 25407  0027A0  50F5               	movf	tablat,w,c
 25408  0027A2  0101               	movlb	1	; () banked
 25409  0027A4  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 25410  0027A6  0009               	tblrd		*+
 25411  0027A8  50F5               	movf	tablat,w,c
 25412  0027AA  0101               	movlb	1	; () banked
 25413  0027AC  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 25414  0027AE  0009               	tblrd		*+
 25415  0027B0  50F5               	movf	tablat,w,c
 25416  0027B2  0101               	movlb	1	; () banked
 25417  0027B4  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 25418  0027B6  A0D8               	btfss	status,0,c
 25419  0027B8  D005               	goto	l13386
 25420  0027BA  D001               	goto	l13382
 25421                           
 25422                           ; BSR set to: 1
 25423                           ;doprnt.c: 1138: break;
 25424  0027BC  D003               	goto	l13386
 25425  0027BE                     l13382:
 25426                           
 25427                           ; BSR set to: 1
 25428  0027BE  0101               	movlb	1	; () banked
 25429  0027C0  2B1D               	incf	sprintf@c& (0+255),f,b
 25430  0027C2  D7D6               	goto	l13374
 25431  0027C4                     l13386:
 25432                           
 25433                           ; BSR set to: 1
 25434                           ;doprnt.c: 1142: width -= prec + c + exp;
 25435  0027C4  C11D  F0D5         	movff	sprintf@c,??_sprintf
 25436  0027C8  0100               	movlb	0	; () banked
 25437  0027CA  6BD6               	clrf	(??_sprintf+1)& (0+255),b
 25438  0027CC  BFD5               	btfsc	??_sprintf& (0+255),7,b
 25439  0027CE  07D6               	decf	(??_sprintf+1)& (0+255),f,b
 25440  0027D0  0101               	movlb	1	; () banked
 25441  0027D2  510A               	movf	sprintf@prec& (0+255),w,b
 25442  0027D4  0100               	movlb	0	; () banked
 25443  0027D6  27D5               	addwf	??_sprintf& (0+255),f,b
 25444  0027D8  0101               	movlb	1	; () banked
 25445  0027DA  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25446  0027DC  0100               	movlb	0	; () banked
 25447  0027DE  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
 25448  0027E0  0101               	movlb	1	; () banked
 25449  0027E2  5110               	movf	sprintf@exp& (0+255),w,b
 25450  0027E4  0100               	movlb	0	; () banked
 25451  0027E6  27D5               	addwf	??_sprintf& (0+255),f,b
 25452  0027E8  0101               	movlb	1	; () banked
 25453  0027EA  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25454  0027EC  0100               	movlb	0	; () banked
 25455  0027EE  23D6               	addwfc	(??_sprintf+1)& (0+255),f,b
 25456  0027F0  0100               	movlb	0	; () banked
 25457  0027F2  51D5               	movf	??_sprintf& (0+255),w,b
 25458  0027F4  0101               	movlb	1	; () banked
 25459  0027F6  5F19               	subwf	sprintf@width& (0+255),f,b
 25460  0027F8  0100               	movlb	0	; () banked
 25461  0027FA  51D6               	movf	(??_sprintf+1)& (0+255),w,b
 25462  0027FC  0101               	movlb	1	; () banked
 25463  0027FE  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 25464                           
 25465                           ;doprnt.c: 1143: if(
 25466                           ;doprnt.c: 1147: prec)
 25467  002800  0101               	movlb	1	; () banked
 25468  002802  510A               	movf	sprintf@prec& (0+255),w,b
 25469  002804  0101               	movlb	1	; () banked
 25470  002806  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25471  002808  B4D8               	btfsc	status,2,c
 25472  00280A  D005               	goto	l13390
 25473                           
 25474                           ; BSR set to: 1
 25475                           ;doprnt.c: 1148: width--;
 25476  00280C  0101               	movlb	1	; () banked
 25477  00280E  0719               	decf	sprintf@width& (0+255),f,b
 25478  002810  A0D8               	btfss	status,0,c
 25479  002812  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25480  002814  D000               	goto	l13390
 25481  002816                     l13390:
 25482                           
 25483                           ; BSR set to: 1
 25484                           ;doprnt.c: 1149: if(flag & 0x03)
 25485  002816  0E03               	movlw	3
 25486  002818  0101               	movlb	1	; () banked
 25487  00281A  151B               	andwf	sprintf@flag& (0+255),w,b
 25488  00281C  0100               	movlb	0	; () banked
 25489  00281E  6FD5               	movwf	??_sprintf& (0+255),b
 25490  002820  0E00               	movlw	0
 25491  002822  0101               	movlb	1	; () banked
 25492  002824  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25493  002826  0100               	movlb	0	; () banked
 25494  002828  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25495  00282A  0100               	movlb	0	; () banked
 25496  00282C  51D5               	movf	??_sprintf& (0+255),w,b
 25497  00282E  0100               	movlb	0	; () banked
 25498  002830  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25499  002832  B4D8               	btfsc	status,2,c
 25500  002834  D005               	goto	l13394
 25501                           
 25502                           ; BSR set to: 0
 25503                           ;doprnt.c: 1150: width--;
 25504  002836  0101               	movlb	1	; () banked
 25505  002838  0719               	decf	sprintf@width& (0+255),f,b
 25506  00283A  A0D8               	btfss	status,0,c
 25507  00283C  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25508  00283E  D000               	goto	l13394
 25509  002840                     l13394:
 25510                           
 25511                           ;doprnt.c: 1153: if(flag & 0x04) {
 25512  002840  0101               	movlb	1	; () banked
 25513  002842  A51B               	btfss	sprintf@flag& (0+255),2,b
 25514  002844  D043               	goto	l13416
 25515                           
 25516                           ; BSR set to: 1
 25517                           ;doprnt.c: 1157: if(flag & 0x03)
 25518  002846  0E03               	movlw	3
 25519  002848  0101               	movlb	1	; () banked
 25520  00284A  151B               	andwf	sprintf@flag& (0+255),w,b
 25521  00284C  0100               	movlb	0	; () banked
 25522  00284E  6FD5               	movwf	??_sprintf& (0+255),b
 25523  002850  0E00               	movlw	0
 25524  002852  0101               	movlb	1	; () banked
 25525  002854  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25526  002856  0100               	movlb	0	; () banked
 25527  002858  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25528  00285A  0100               	movlb	0	; () banked
 25529  00285C  51D5               	movf	??_sprintf& (0+255),w,b
 25530  00285E  0100               	movlb	0	; () banked
 25531  002860  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25532  002862  B4D8               	btfsc	status,2,c
 25533  002864  D018               	goto	l13408
 25534                           
 25535                           ; BSR set to: 0
 25536                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 25537  002866  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25538  00286A  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25539  00286E  0E2D               	movlw	45
 25540  002870  6EDF               	movwf	indf2,c
 25541                           
 25542                           ; BSR set to: 0
 25543  002872  0100               	movlb	0	; () banked
 25544  002874  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25545  002876  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25546                           
 25547                           ; BSR set to: 0
 25548                           ;doprnt.c: 1168: while(width > 0) {
 25549  002878  D00E               	goto	l13408
 25550  00287A                     l13402:
 25551                           
 25552                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 25553  00287A  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25554  00287E  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25555  002882  0E30               	movlw	48
 25556  002884  6EDF               	movwf	indf2,c
 25557  002886  0100               	movlb	0	; () banked
 25558  002888  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25559  00288A  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;doprnt.c: 1170: width--;
 25563  00288C  0101               	movlb	1	; () banked
 25564  00288E  0719               	decf	sprintf@width& (0+255),f,b
 25565  002890  A0D8               	btfss	status,0,c
 25566  002892  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25567  002894  D000               	goto	l13408
 25568  002896                     l13408:
 25569  002896  0101               	movlb	1	; () banked
 25570  002898  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 25571  00289A  D08A               	goto	l13432
 25572  00289C  0101               	movlb	1	; () banked
 25573  00289E  511A               	movf	(sprintf@width+1)& (0+255),w,b
 25574  0028A0  E1EC               	bnz	l13402
 25575  0028A2  0101               	movlb	1	; () banked
 25576  0028A4  0519               	decf	sprintf@width& (0+255),w,b
 25577  0028A6  A0D8               	btfss	status,0,c
 25578  0028A8  D083               	goto	l13432
 25579  0028AA  D7E7               	goto	l13402
 25580                           
 25581                           ; BSR set to: 1
 25582                           ;doprnt.c: 1171: }
 25583                           ;doprnt.c: 1173: } else
 25584  0028AC  D081               	goto	l13432
 25585                           
 25586                           ; BSR set to: 1
 25587                           ;doprnt.c: 1175: {
 25588                           ;doprnt.c: 1180: while(width > 0) {
 25589  0028AE  D00E               	goto	l13416
 25590  0028B0                     l13410:
 25591                           
 25592                           ; BSR set to: 1
 25593                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 25594  0028B0  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25595  0028B4  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25596  0028B8  0E20               	movlw	32
 25597  0028BA  6EDF               	movwf	indf2,c
 25598                           
 25599                           ; BSR set to: 1
 25600  0028BC  0100               	movlb	0	; () banked
 25601  0028BE  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25602  0028C0  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;doprnt.c: 1182: width--;
 25606  0028C2  0101               	movlb	1	; () banked
 25607  0028C4  0719               	decf	sprintf@width& (0+255),f,b
 25608  0028C6  A0D8               	btfss	status,0,c
 25609  0028C8  071A               	decf	(sprintf@width+1)& (0+255),f,b
 25610  0028CA  D000               	goto	l13416
 25611  0028CC                     l13416:
 25612                           
 25613                           ; BSR set to: 1
 25614  0028CC  0101               	movlb	1	; () banked
 25615  0028CE  BF1A               	btfsc	(sprintf@width+1)& (0+255),7,b
 25616  0028D0  D007               	goto	l13418
 25617  0028D2  0101               	movlb	1	; () banked
 25618  0028D4  511A               	movf	(sprintf@width+1)& (0+255),w,b
 25619  0028D6  E1EC               	bnz	l13410
 25620  0028D8  0101               	movlb	1	; () banked
 25621  0028DA  0519               	decf	sprintf@width& (0+255),w,b
 25622  0028DC  B0D8               	btfsc	status,0,c
 25623  0028DE  D7E8               	goto	l13410
 25624  0028E0                     l13418:
 25625                           
 25626                           ; BSR set to: 1
 25627                           ;doprnt.c: 1183: }
 25628                           ;doprnt.c: 1188: if(flag & 0x03)
 25629  0028E0  0E03               	movlw	3
 25630  0028E2  0101               	movlb	1	; () banked
 25631  0028E4  151B               	andwf	sprintf@flag& (0+255),w,b
 25632  0028E6  0100               	movlb	0	; () banked
 25633  0028E8  6FD5               	movwf	??_sprintf& (0+255),b
 25634  0028EA  0E00               	movlw	0
 25635  0028EC  0101               	movlb	1	; () banked
 25636  0028EE  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 25637  0028F0  0100               	movlb	0	; () banked
 25638  0028F2  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 25639  0028F4  0100               	movlb	0	; () banked
 25640  0028F6  51D5               	movf	??_sprintf& (0+255),w,b
 25641  0028F8  0100               	movlb	0	; () banked
 25642  0028FA  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 25643  0028FC  B4D8               	btfsc	status,2,c
 25644  0028FE  D058               	goto	l13432
 25645                           
 25646                           ; BSR set to: 0
 25647                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 25648  002900  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25649  002904  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25650  002908  0E2D               	movlw	45
 25651  00290A  D050               	goto	L18
 25652  00290C                     l13422:
 25653                           
 25654                           ; BSR set to: 0
 25655  00290C  0100               	movlb	0	; () banked
 25656  00290E  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25657  002910  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25658                           
 25659                           ; BSR set to: 0
 25660                           ;doprnt.c: 1195: }
 25661                           ;doprnt.c: 1196: while(c--) {
 25662                           
 25663                           ; BSR set to: 0
 25664  002912  D04E               	goto	l13432
 25665  002914                     l13424:
 25666                           
 25667                           ;doprnt.c: 1200: {
 25668                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25669  002914  C112  F079         	movff	sprintf@val,___lldiv@dividend
 25670  002918  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 25671  00291C  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 25672  002920  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 25673  002924  0101               	movlb	1	; () banked
 25674  002926  511D               	movf	sprintf@c& (0+255),w,b
 25675  002928  0D04               	mullw	4
 25676  00292A  0E93               	movlw	low _dpowers
 25677  00292C  24F3               	addwf	prodl,w,c
 25678  00292E  6EF6               	movwf	tblptrl,c
 25679  002930  0EF1               	movlw	high _dpowers
 25680  002932  20F4               	addwfc	prodh,w,c
 25681  002934  6EF7               	movwf	tblptrh,c
 25682  002936                     	if	1	;There are 3 active tblptr bytes
 25683  002936  6AF8               	clrf	tblptru,c
 25684  002938  0E00               	movlw	low (__mediumconst shr (0+16))
 25685  00293A  22F8               	addwfc	tblptru,f,c
 25686  00293C                     	endif
 25687  00293C  0009               	tblrd		*+
 25688  00293E  CFF5 F07D          	movff	tablat,___lldiv@divisor
 25689  002942  0009               	tblrd		*+
 25690  002944  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 25691  002948  0009               	tblrd		*+
 25692  00294A  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 25693  00294E  000A               	tblrd		*-
 25694  002950  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 25695  002954  EC36  F03F         	call	___lldiv	;wreg free
 25696  002958  C079  F10C         	movff	?___lldiv,sprintf@tmpval
 25697  00295C  C07A  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 25698  002960  C07B  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 25699  002964  C07C  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 25700                           
 25701                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25702  002968  C10C  F086         	movff	sprintf@tmpval,___llmod@dividend
 25703  00296C  C10D  F087         	movff	sprintf@tmpval+1,___llmod@dividend+1
 25704  002970  C10E  F088         	movff	sprintf@tmpval+2,___llmod@dividend+2
 25705  002974  C10F  F089         	movff	sprintf@tmpval+3,___llmod@dividend+3
 25706  002978  0E0A               	movlw	10
 25707  00297A  0100               	movlb	0	; () banked
 25708  00297C  6F8A               	movwf	___llmod@divisor& (0+255),b
 25709  00297E  0E00               	movlw	0
 25710  002980  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 25711  002982  0E00               	movlw	0
 25712  002984  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 25713  002986  0E00               	movlw	0
 25714  002988  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 25715  00298A  EC5A  F041         	call	___llmod	;wreg free
 25716  00298E  C086  F10C         	movff	?___llmod,sprintf@tmpval
 25717  002992  C087  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 25718  002996  C088  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 25719  00299A  C089  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 25720                           
 25721                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 25722  00299E  0101               	movlb	1	; () banked
 25723  0029A0  510C               	movf	sprintf@tmpval& (0+255),w,b
 25724  0029A2  0F30               	addlw	48
 25725  0029A4  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25726  0029A8  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25727  0029AC                     L18:
 25728  0029AC  6EDF               	movwf	indf2,c
 25729  0029AE  D7AE               	goto	l13422
 25730  0029B0                     l13432:
 25731  0029B0  0101               	movlb	1	; () banked
 25732  0029B2  071D               	decf	sprintf@c& (0+255),f,b
 25733  0029B4  0101               	movlb	1	; () banked
 25734  0029B6  291D               	incf	sprintf@c& (0+255),w,b
 25735  0029B8  B4D8               	btfsc	status,2,c
 25736  0029BA  D010               	goto	l13440
 25737  0029BC  D7AB               	goto	l13424
 25738                           
 25739                           ; BSR set to: 1
 25740                           ;doprnt.c: 1204: }
 25741                           ;doprnt.c: 1206: }
 25742                           ;doprnt.c: 1207: while(exp > 0) {
 25743  0029BE  D00E               	goto	l13440
 25744  0029C0                     l13434:
 25745                           
 25746                           ; BSR set to: 1
 25747                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 25748  0029C0  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25749  0029C4  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25750  0029C8  0E30               	movlw	48
 25751  0029CA  6EDF               	movwf	indf2,c
 25752                           
 25753                           ; BSR set to: 1
 25754  0029CC  0100               	movlb	0	; () banked
 25755  0029CE  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25756  0029D0  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25757                           
 25758                           ; BSR set to: 0
 25759                           ;doprnt.c: 1209: exp--;
 25760  0029D2  0101               	movlb	1	; () banked
 25761  0029D4  0710               	decf	sprintf@exp& (0+255),f,b
 25762  0029D6  A0D8               	btfss	status,0,c
 25763  0029D8  0711               	decf	(sprintf@exp+1)& (0+255),f,b
 25764  0029DA  D000               	goto	l13440
 25765  0029DC                     l13440:
 25766                           
 25767                           ; BSR set to: 1
 25768  0029DC  0101               	movlb	1	; () banked
 25769  0029DE  BF11               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25770  0029E0  D007               	goto	l13442
 25771  0029E2  0101               	movlb	1	; () banked
 25772  0029E4  5111               	movf	(sprintf@exp+1)& (0+255),w,b
 25773  0029E6  E1EC               	bnz	l13434
 25774  0029E8  0101               	movlb	1	; () banked
 25775  0029EA  0510               	decf	sprintf@exp& (0+255),w,b
 25776  0029EC  B0D8               	btfsc	status,0,c
 25777  0029EE  D7E8               	goto	l13434
 25778  0029F0                     l13442:
 25779                           
 25780                           ; BSR set to: 1
 25781                           ;doprnt.c: 1210: }
 25782                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25783  0029F0  0101               	movlb	1	; () banked
 25784  0029F2  BF0B               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25785  0029F4  D00C               	goto	l2258
 25786  0029F6  0101               	movlb	1	; () banked
 25787  0029F8  510B               	movf	(sprintf@prec+1)& (0+255),w,b
 25788  0029FA  E105               	bnz	u16320
 25789  0029FC  0E09               	movlw	9
 25790  0029FE  0101               	movlb	1	; () banked
 25791  002A00  5D0A               	subwf	sprintf@prec& (0+255),w,b
 25792  002A02  A0D8               	btfss	status,0,c
 25793  002A04  D004               	goto	l2258
 25794  002A06                     u16320:
 25795                           
 25796                           ; BSR set to: 1
 25797                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25798  002A06  0E08               	movlw	8
 25799  002A08  0101               	movlb	1	; () banked
 25800  002A0A  6F1D               	movwf	sprintf@c& (0+255),b
 25801  002A0C  D003               	goto	l13446
 25802  002A0E                     l2258:
 25803                           
 25804                           ; BSR set to: 1
 25805                           ;doprnt.c: 1213: else
 25806                           ;doprnt.c: 1214: c = prec;
 25807  002A0E  C10A  F11D         	movff	sprintf@prec,sprintf@c
 25808  002A12  D000               	goto	l13446
 25809  002A14                     l13446:
 25810                           
 25811                           ; BSR set to: 1
 25812                           ;doprnt.c: 1215: prec -= c;
 25813  002A14  0101               	movlb	1	; () banked
 25814  002A16  511D               	movf	sprintf@c& (0+255),w,b
 25815  002A18  0101               	movlb	1	; () banked
 25816  002A1A  5F0A               	subwf	sprintf@prec& (0+255),f,b
 25817  002A1C  0E00               	movlw	0
 25818  002A1E  0101               	movlb	1	; () banked
 25819  002A20  BF1D               	btfsc	sprintf@c& (0+255),7,b
 25820  002A22  0EFF               	movlw	255
 25821  002A24  0101               	movlb	1	; () banked
 25822  002A26  5B0B               	subwfb	(sprintf@prec+1)& (0+255),f,b
 25823                           
 25824                           ; BSR set to: 1
 25825                           ;doprnt.c: 1219: if(c)
 25826  002A28  0101               	movlb	1	; () banked
 25827  002A2A  511D               	movf	sprintf@c& (0+255),w,b
 25828  002A2C  0101               	movlb	1	; () banked
 25829  002A2E  B4D8               	btfsc	status,2,c
 25830  002A30  D00A               	goto	l13454
 25831                           
 25832                           ; BSR set to: 1
 25833                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 25834  002A32  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25835  002A36  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25836  002A3A  0E2E               	movlw	46
 25837  002A3C  6EDF               	movwf	indf2,c
 25838                           
 25839                           ; BSR set to: 1
 25840  002A3E  0100               	movlb	0	; () banked
 25841  002A40  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25842  002A42  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25843  002A44  D000               	goto	l13454
 25844  002A46                     l13454:
 25845                           
 25846                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25847  002A46  0101               	movlb	1	; () banked
 25848  002A48  511D               	movf	sprintf@c& (0+255),w,b
 25849  002A4A  EC0E  F021         	call	_scale
 25850  002A4E  C0A2  F100         	movff	?_scale,_sprintf$3787
 25851  002A52  C0A3  F101         	movff	?_scale+1,_sprintf$3787+1
 25852  002A56  C0A4  F102         	movff	?_scale+2,_sprintf$3787+2
 25853                           
 25854                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25855  002A5A  C116  F096         	movff	sprintf@fval,___ftmul@f2
 25856  002A5E  C117  F097         	movff	sprintf@fval+1,___ftmul@f2+1
 25857  002A62  C118  F098         	movff	sprintf@fval+2,___ftmul@f2+2
 25858  002A66  C100  F093         	movff	_sprintf$3787,___ftmul@f1
 25859  002A6A  C101  F094         	movff	_sprintf$3787+1,___ftmul@f1+1
 25860  002A6E  C102  F095         	movff	_sprintf$3787+2,___ftmul@f1+2
 25861  002A72  EC91  F036         	call	___ftmul	;wreg free
 25862  002A76  C093  F0B8         	movff	?___ftmul,___fttol@f1
 25863  002A7A  C094  F0B9         	movff	?___ftmul+1,___fttol@f1+1
 25864  002A7E  C095  F0BA         	movff	?___ftmul+2,___fttol@f1+2
 25865  002A82  ECF0  F037         	call	___fttol	;wreg free
 25866  002A86  C0B8  F112         	movff	?___fttol,sprintf@val
 25867  002A8A  C0B9  F113         	movff	?___fttol+1,sprintf@val+1
 25868  002A8E  C0BA  F114         	movff	?___fttol+2,sprintf@val+2
 25869  002A92  C0BB  F115         	movff	?___fttol+3,sprintf@val+3
 25870                           
 25871                           ;doprnt.c: 1228: while(c--) {
 25872  002A96  D07B               	goto	l13468
 25873  002A98                     l13458:
 25874                           
 25875                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25876  002A98  C112  F079         	movff	sprintf@val,___lldiv@dividend
 25877  002A9C  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 25878  002AA0  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 25879  002AA4  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 25880  002AA8  0101               	movlb	1	; () banked
 25881  002AAA  511D               	movf	sprintf@c& (0+255),w,b
 25882  002AAC  0D04               	mullw	4
 25883  002AAE  0E93               	movlw	low _dpowers
 25884  002AB0  24F3               	addwf	prodl,w,c
 25885  002AB2  6EF6               	movwf	tblptrl,c
 25886  002AB4  0EF1               	movlw	high _dpowers
 25887  002AB6  20F4               	addwfc	prodh,w,c
 25888  002AB8  6EF7               	movwf	tblptrh,c
 25889  002ABA                     	if	1	;There are 3 active tblptr bytes
 25890  002ABA  6AF8               	clrf	tblptru,c
 25891  002ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 25892  002ABE  22F8               	addwfc	tblptru,f,c
 25893  002AC0                     	endif
 25894  002AC0  0009               	tblrd		*+
 25895  002AC2  CFF5 F07D          	movff	tablat,___lldiv@divisor
 25896  002AC6  0009               	tblrd		*+
 25897  002AC8  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 25898  002ACC  0009               	tblrd		*+
 25899  002ACE  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 25900  002AD2  000A               	tblrd		*-
 25901  002AD4  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 25902  002AD8  EC36  F03F         	call	___lldiv	;wreg free
 25903  002ADC  C079  F10C         	movff	?___lldiv,sprintf@tmpval
 25904  002AE0  C07A  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
 25905  002AE4  C07B  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
 25906  002AE8  C07C  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
 25907                           
 25908                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25909  002AEC  C10C  F086         	movff	sprintf@tmpval,___llmod@dividend
 25910  002AF0  C10D  F087         	movff	sprintf@tmpval+1,___llmod@dividend+1
 25911  002AF4  C10E  F088         	movff	sprintf@tmpval+2,___llmod@dividend+2
 25912  002AF8  C10F  F089         	movff	sprintf@tmpval+3,___llmod@dividend+3
 25913  002AFC  0E0A               	movlw	10
 25914  002AFE  0100               	movlb	0	; () banked
 25915  002B00  6F8A               	movwf	___llmod@divisor& (0+255),b
 25916  002B02  0E00               	movlw	0
 25917  002B04  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 25918  002B06  0E00               	movlw	0
 25919  002B08  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 25920  002B0A  0E00               	movlw	0
 25921  002B0C  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 25922  002B0E  EC5A  F041         	call	___llmod	;wreg free
 25923  002B12  C086  F10C         	movff	?___llmod,sprintf@tmpval
 25924  002B16  C087  F10D         	movff	?___llmod+1,sprintf@tmpval+1
 25925  002B1A  C088  F10E         	movff	?___llmod+2,sprintf@tmpval+2
 25926  002B1E  C089  F10F         	movff	?___llmod+3,sprintf@tmpval+3
 25927                           
 25928                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 25929  002B22  0101               	movlb	1	; () banked
 25930  002B24  510C               	movf	sprintf@tmpval& (0+255),w,b
 25931  002B26  0F30               	addlw	48
 25932  002B28  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25933  002B2C  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25934  002B30  6EDF               	movwf	indf2,c
 25935                           
 25936                           ; BSR set to: 1
 25937  002B32  0100               	movlb	0	; () banked
 25938  002B34  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 25939  002B36  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 25940                           
 25941                           ; BSR set to: 0
 25942                           ;doprnt.c: 1232: val %= dpowers[c];
 25943  002B38  C112  F086         	movff	sprintf@val,___llmod@dividend
 25944  002B3C  C113  F087         	movff	sprintf@val+1,___llmod@dividend+1
 25945  002B40  C114  F088         	movff	sprintf@val+2,___llmod@dividend+2
 25946  002B44  C115  F089         	movff	sprintf@val+3,___llmod@dividend+3
 25947  002B48  0101               	movlb	1	; () banked
 25948  002B4A  511D               	movf	sprintf@c& (0+255),w,b
 25949  002B4C  0D04               	mullw	4
 25950  002B4E  0E93               	movlw	low _dpowers
 25951  002B50  24F3               	addwf	prodl,w,c
 25952  002B52  6EF6               	movwf	tblptrl,c
 25953  002B54  0EF1               	movlw	high _dpowers
 25954  002B56  20F4               	addwfc	prodh,w,c
 25955  002B58  6EF7               	movwf	tblptrh,c
 25956  002B5A                     	if	1	;There are 3 active tblptr bytes
 25957  002B5A  6AF8               	clrf	tblptru,c
 25958  002B5C  0E00               	movlw	low (__mediumconst shr (0+16))
 25959  002B5E  22F8               	addwfc	tblptru,f,c
 25960  002B60                     	endif
 25961  002B60  0009               	tblrd		*+
 25962  002B62  CFF5 F08A          	movff	tablat,___llmod@divisor
 25963  002B66  0009               	tblrd		*+
 25964  002B68  CFF5 F08B          	movff	tablat,___llmod@divisor+1
 25965  002B6C  0009               	tblrd		*+
 25966  002B6E  CFF5 F08C          	movff	tablat,___llmod@divisor+2
 25967  002B72  000A               	tblrd		*-
 25968  002B74  CFF5 F08D          	movff	tablat,___llmod@divisor+3
 25969  002B78  EC5A  F041         	call	___llmod	;wreg free
 25970  002B7C  C086  F112         	movff	?___llmod,sprintf@val
 25971  002B80  C087  F113         	movff	?___llmod+1,sprintf@val+1
 25972  002B84  C088  F114         	movff	?___llmod+2,sprintf@val+2
 25973  002B88  C089  F115         	movff	?___llmod+3,sprintf@val+3
 25974  002B8C  D000               	goto	l13468
 25975  002B8E                     l13468:
 25976  002B8E  0101               	movlb	1	; () banked
 25977  002B90  071D               	decf	sprintf@c& (0+255),f,b
 25978  002B92  0101               	movlb	1	; () banked
 25979  002B94  291D               	incf	sprintf@c& (0+255),w,b
 25980  002B96  B4D8               	btfsc	status,2,c
 25981  002B98  D010               	goto	l13476
 25982  002B9A  D77E               	goto	l13458
 25983                           
 25984                           ; BSR set to: 1
 25985                           ;doprnt.c: 1233: }
 25986                           ;doprnt.c: 1235: while(prec) {
 25987  002B9C  D00E               	goto	l13476
 25988  002B9E                     l13470:
 25989                           
 25990                           ; BSR set to: 1
 25991                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 25992  002B9E  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 25993  002BA2  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 25994  002BA6  0E30               	movlw	48
 25995  002BA8  6EDF               	movwf	indf2,c
 25996                           
 25997                           ; BSR set to: 1
 25998  002BAA  0100               	movlb	0	; () banked
 25999  002BAC  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26000  002BAE  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26001                           
 26002                           ; BSR set to: 0
 26003                           ;doprnt.c: 1237: prec--;
 26004  002BB0  0101               	movlb	1	; () banked
 26005  002BB2  070A               	decf	sprintf@prec& (0+255),f,b
 26006  002BB4  A0D8               	btfss	status,0,c
 26007  002BB6  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26008  002BB8  D000               	goto	l13476
 26009  002BBA                     l13476:
 26010                           
 26011                           ; BSR set to: 1
 26012  002BBA  0101               	movlb	1	; () banked
 26013  002BBC  510A               	movf	sprintf@prec& (0+255),w,b
 26014  002BBE  0101               	movlb	1	; () banked
 26015  002BC0  110B               	iorwf	(sprintf@prec+1)& (0+255),w,b
 26016  002BC2  B4D8               	btfsc	status,2,c
 26017  002BC4  D220               	goto	l13594
 26018  002BC6  D7EB               	goto	l13470
 26019                           
 26020                           ; BSR set to: 1
 26021                           ;doprnt.c: 1238: }
 26022                           ;doprnt.c: 1245: continue;
 26023  002BC8  D21E               	goto	l13594
 26024  002BCA                     l2219:
 26025                           
 26026                           ; BSR set to: 1
 26027                           ;doprnt.c: 1246: }
 26028                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 26029  002BCA  0101               	movlb	1	; () banked
 26030  002BCC  BF1B               	btfsc	sprintf@flag& (0+255),7,b
 26031  002BCE  D035               	goto	l2267
 26032                           
 26033                           ; BSR set to: 1
 26034                           ;doprnt.c: 1253: {
 26035                           ;doprnt.c: 1255: if(flag & 0x10)
 26036  002BD0  0101               	movlb	1	; () banked
 26037  002BD2  A91B               	btfss	sprintf@flag& (0+255),4,b
 26038  002BD4  D00E               	goto	l13484
 26039                           
 26040                           ; BSR set to: 1
 26041                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 26042  002BD6  C108  FFD9         	movff	sprintf@ap,fsr2l
 26043  002BDA  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26044  002BDE  CFDE F112          	movff	postinc2,sprintf@val
 26045  002BE2  CFDE F113          	movff	postinc2,sprintf@val+1
 26046  002BE6  CFDE F114          	movff	postinc2,sprintf@val+2
 26047  002BEA  CFDE F115          	movff	postinc2,sprintf@val+3
 26048                           
 26049                           ; BSR set to: 1
 26050  002BEE  0E04               	movlw	4
 26051  002BF0  D00F               	goto	L19
 26052  002BF2                     l13484:
 26053                           
 26054                           ; BSR set to: 1
 26055                           ;doprnt.c: 1257: else
 26056                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 26057  002BF2  C108  FFD9         	movff	sprintf@ap,fsr2l
 26058  002BF6  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26059  002BFA  CFDE F112          	movff	postinc2,sprintf@val
 26060  002BFE  CFDD F113          	movff	postdec2,sprintf@val+1
 26061  002C02  0101               	movlb	1	; () banked
 26062  002C04  0E00               	movlw	0
 26063  002C06  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
 26064  002C08  0EFF               	movlw	-1
 26065  002C0A  6F14               	movwf	(sprintf@val+2)& (0+255),b
 26066  002C0C  6F15               	movwf	(sprintf@val+3)& (0+255),b
 26067                           
 26068                           ; BSR set to: 1
 26069  002C0E  0E02               	movlw	2
 26070  002C10                     L19:
 26071  002C10  0101               	movlb	1	; () banked
 26072  002C12  2708               	addwf	sprintf@ap& (0+255),f,b
 26073  002C14  0E00               	movlw	0
 26074  002C16  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26075  002C18  D000               	goto	l13488
 26076  002C1A                     l13488:
 26077                           
 26078                           ; BSR set to: 1
 26079                           ;doprnt.c: 1261: if((long)val < 0) {
 26080  002C1A  0101               	movlb	1	; () banked
 26081  002C1C  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
 26082  002C1E  D08F               	goto	l13532
 26083                           
 26084                           ; BSR set to: 1
 26085                           ;doprnt.c: 1262: flag |= 0x03;
 26086  002C20  0E03               	movlw	3
 26087  002C22  0101               	movlb	1	; () banked
 26088  002C24  131B               	iorwf	sprintf@flag& (0+255),f,b
 26089                           
 26090                           ; BSR set to: 1
 26091                           ;doprnt.c: 1263: val = -val;
 26092  002C26  0101               	movlb	1	; () banked
 26093  002C28  1F15               	comf	(sprintf@val+3)& (0+255),f,b
 26094  002C2A  1F14               	comf	(sprintf@val+2)& (0+255),f,b
 26095  002C2C  1F13               	comf	(sprintf@val+1)& (0+255),f,b
 26096  002C2E  6D12               	negf	sprintf@val& (0+255),b
 26097  002C30  0E00               	movlw	0
 26098  002C32  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
 26099  002C34  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
 26100  002C36  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
 26101                           
 26102                           ; BSR set to: 1
 26103                           ;doprnt.c: 1264: }
 26104                           ;doprnt.c: 1266: }
 26105  002C38  D082               	goto	l13532
 26106  002C3A                     l2267:
 26107                           
 26108                           ; BSR set to: 1
 26109                           ;doprnt.c: 1268: else
 26110                           ;doprnt.c: 1273: {
 26111                           ;doprnt.c: 1281: if(flag & 0x10)
 26112  002C3A  0101               	movlb	1	; () banked
 26113  002C3C  A91B               	btfss	sprintf@flag& (0+255),4,b
 26114  002C3E  D00E               	goto	l13498
 26115                           
 26116                           ; BSR set to: 1
 26117                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 26118  002C40  C108  FFD9         	movff	sprintf@ap,fsr2l
 26119  002C44  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26120  002C48  CFDE F112          	movff	postinc2,sprintf@val
 26121  002C4C  CFDE F113          	movff	postinc2,sprintf@val+1
 26122  002C50  CFDE F114          	movff	postinc2,sprintf@val+2
 26123  002C54  CFDE F115          	movff	postinc2,sprintf@val+3
 26124                           
 26125                           ; BSR set to: 1
 26126  002C58  0E04               	movlw	4
 26127  002C5A  D010               	goto	L20
 26128  002C5C                     l13498:
 26129                           
 26130                           ; BSR set to: 1
 26131                           ;doprnt.c: 1283: else
 26132                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 26133  002C5C  C108  FFD9         	movff	sprintf@ap,fsr2l
 26134  002C60  C109  FFDA         	movff	sprintf@ap+1,fsr2h
 26135  002C64  CFDE F0D5          	movff	postinc2,??_sprintf
 26136  002C68  CFDD F0D6          	movff	postdec2,??_sprintf+1
 26137  002C6C  C0D5  F112         	movff	??_sprintf,sprintf@val
 26138  002C70  C0D6  F113         	movff	??_sprintf+1,sprintf@val+1
 26139  002C74  0101               	movlb	1	; () banked
 26140  002C76  6B14               	clrf	(sprintf@val+2)& (0+255),b
 26141  002C78  6B15               	clrf	(sprintf@val+3)& (0+255),b
 26142                           
 26143                           ; BSR set to: 1
 26144  002C7A  0E02               	movlw	2
 26145  002C7C                     L20:
 26146  002C7C  0101               	movlb	1	; () banked
 26147  002C7E  2708               	addwf	sprintf@ap& (0+255),f,b
 26148  002C80  0E00               	movlw	0
 26149  002C82  2309               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26150                           
 26151                           ; BSR set to: 1
 26152                           ;doprnt.c: 1287: }
 26153                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 26154                           
 26155                           ; BSR set to: 1
 26156  002C84  D05C               	goto	l13532
 26157  002C86                     l13502:
 26158                           
 26159                           ; BSR set to: 1
 26160                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 26161  002C86  0E01               	movlw	1
 26162  002C88  0101               	movlb	1	; () banked
 26163  002C8A  6F1D               	movwf	sprintf@c& (0+255),b
 26164  002C8C                     l13504:
 26165                           
 26166                           ; BSR set to: 1
 26167  002C8C  0E0A               	movlw	10
 26168  002C8E  0101               	movlb	1	; () banked
 26169  002C90  191D               	xorwf	sprintf@c& (0+255),w,b
 26170  002C92  B4D8               	btfsc	status,2,c
 26171  002C94  D05E               	goto	l13534
 26172  002C96  D001               	goto	l13508
 26173                           
 26174                           ; BSR set to: 1
 26175  002C98  D05C               	goto	l13534
 26176  002C9A                     l13508:
 26177                           
 26178                           ; BSR set to: 1
 26179                           ;doprnt.c: 1306: if(val < dpowers[c])
 26180  002C9A  0101               	movlb	1	; () banked
 26181  002C9C  511D               	movf	sprintf@c& (0+255),w,b
 26182  002C9E  0D04               	mullw	4
 26183  002CA0  0E93               	movlw	low _dpowers
 26184  002CA2  24F3               	addwf	prodl,w,c
 26185  002CA4  6EF6               	movwf	tblptrl,c
 26186  002CA6  0EF1               	movlw	high _dpowers
 26187  002CA8  20F4               	addwfc	prodh,w,c
 26188  002CAA  6EF7               	movwf	tblptrh,c
 26189  002CAC                     	if	1	;There are 3 active tblptr bytes
 26190  002CAC  6AF8               	clrf	tblptru,c
 26191  002CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 26192  002CB0  22F8               	addwfc	tblptru,f,c
 26193  002CB2                     	endif
 26194  002CB2  0009               	tblrd		*+
 26195  002CB4  50F5               	movf	tablat,w,c
 26196  002CB6  0101               	movlb	1	; () banked
 26197  002CB8  5D12               	subwf	sprintf@val& (0+255),w,b
 26198  002CBA  0009               	tblrd		*+
 26199  002CBC  50F5               	movf	tablat,w,c
 26200  002CBE  0101               	movlb	1	; () banked
 26201  002CC0  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 26202  002CC2  0009               	tblrd		*+
 26203  002CC4  50F5               	movf	tablat,w,c
 26204  002CC6  0101               	movlb	1	; () banked
 26205  002CC8  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 26206  002CCA  0009               	tblrd		*+
 26207  002CCC  50F5               	movf	tablat,w,c
 26208  002CCE  0101               	movlb	1	; () banked
 26209  002CD0  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 26210  002CD2  A0D8               	btfss	status,0,c
 26211  002CD4  D03E               	goto	l13534
 26212  002CD6  D001               	goto	l13512
 26213                           
 26214                           ; BSR set to: 1
 26215                           ;doprnt.c: 1307: break;
 26216  002CD8  D03C               	goto	l13534
 26217  002CDA                     l13512:
 26218                           
 26219                           ; BSR set to: 1
 26220  002CDA  0101               	movlb	1	; () banked
 26221  002CDC  2B1D               	incf	sprintf@c& (0+255),f,b
 26222  002CDE  D7D6               	goto	l13504
 26223                           
 26224                           ; BSR set to: 1
 26225                           ;doprnt.c: 1309: break;
 26226                           
 26227                           ; BSR set to: 1
 26228  002CE0  D038               	goto	l13534
 26229  002CE2                     l13516:
 26230                           
 26231                           ; BSR set to: 1
 26232                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26233  002CE2  0E01               	movlw	1
 26234  002CE4  0101               	movlb	1	; () banked
 26235  002CE6  6F1D               	movwf	sprintf@c& (0+255),b
 26236  002CE8                     l13518:
 26237                           
 26238                           ; BSR set to: 1
 26239  002CE8  0E08               	movlw	8
 26240  002CEA  0101               	movlb	1	; () banked
 26241  002CEC  191D               	xorwf	sprintf@c& (0+255),w,b
 26242  002CEE  B4D8               	btfsc	status,2,c
 26243  002CF0  D030               	goto	l13534
 26244  002CF2  D001               	goto	l13522
 26245                           
 26246                           ; BSR set to: 1
 26247  002CF4  D02E               	goto	l13534
 26248  002CF6                     l13522:
 26249                           
 26250                           ; BSR set to: 1
 26251                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26252  002CF6  0101               	movlb	1	; () banked
 26253  002CF8  511D               	movf	sprintf@c& (0+255),w,b
 26254  002CFA  0D04               	mullw	4
 26255  002CFC  0E09               	movlw	low _hexpowers
 26256  002CFE  24F3               	addwf	prodl,w,c
 26257  002D00  6EF6               	movwf	tblptrl,c
 26258  002D02  0EF2               	movlw	high _hexpowers
 26259  002D04  20F4               	addwfc	prodh,w,c
 26260  002D06  6EF7               	movwf	tblptrh,c
 26261  002D08                     	if	1	;There are 3 active tblptr bytes
 26262  002D08  6AF8               	clrf	tblptru,c
 26263  002D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 26264  002D0C  22F8               	addwfc	tblptru,f,c
 26265  002D0E                     	endif
 26266  002D0E  0009               	tblrd		*+
 26267  002D10  50F5               	movf	tablat,w,c
 26268  002D12  0101               	movlb	1	; () banked
 26269  002D14  5D12               	subwf	sprintf@val& (0+255),w,b
 26270  002D16  0009               	tblrd		*+
 26271  002D18  50F5               	movf	tablat,w,c
 26272  002D1A  0101               	movlb	1	; () banked
 26273  002D1C  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
 26274  002D1E  0009               	tblrd		*+
 26275  002D20  50F5               	movf	tablat,w,c
 26276  002D22  0101               	movlb	1	; () banked
 26277  002D24  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
 26278  002D26  0009               	tblrd		*+
 26279  002D28  50F5               	movf	tablat,w,c
 26280  002D2A  0101               	movlb	1	; () banked
 26281  002D2C  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
 26282  002D2E  A0D8               	btfss	status,0,c
 26283  002D30  D010               	goto	l13534
 26284  002D32  D001               	goto	l13526
 26285                           
 26286                           ; BSR set to: 1
 26287                           ;doprnt.c: 1318: break;
 26288  002D34  D00E               	goto	l13534
 26289  002D36                     l13526:
 26290                           
 26291                           ; BSR set to: 1
 26292  002D36  0101               	movlb	1	; () banked
 26293  002D38  2B1D               	incf	sprintf@c& (0+255),f,b
 26294  002D3A  D7D6               	goto	l13518
 26295                           
 26296                           ; BSR set to: 1
 26297                           ;doprnt.c: 1336: }
 26298                           
 26299                           ; BSR set to: 1
 26300                           ;doprnt.c: 1320: break;
 26301                           
 26302                           ; BSR set to: 1
 26303  002D3C  D00A               	goto	l13534
 26304  002D3E                     l13532:
 26305                           
 26306                           ; BSR set to: 1
 26307  002D3E  0101               	movlb	1	; () banked
 26308  002D40  511B               	movf	sprintf@flag& (0+255),w,b
 26309  002D42  0B80               	andlw	128
 26310                           
 26311                           ; Switch size 1, requested type "space"
 26312                           ; Number of cases is 2, Range of values is 0 to 128
 26313                           ; switch strategies available:
 26314                           ; Name         Instructions Cycles
 26315                           ; simple_byte            7     4 (average)
 26316                           ;	Chosen strategy is simple_byte
 26317  002D44  0A00               	xorlw	0	; case 0
 26318  002D46  B4D8               	btfsc	status,2,c
 26319  002D48  D79E               	goto	l13502
 26320  002D4A  0A80               	xorlw	128	; case 128
 26321  002D4C  B4D8               	btfsc	status,2,c
 26322  002D4E  D7C9               	goto	l13516
 26323  002D50  D000               	goto	l13534
 26324  002D52                     l13534:
 26325                           
 26326                           ; BSR set to: 1
 26327                           ;doprnt.c: 1345: if(width && flag & 0x03)
 26328  002D52  0101               	movlb	1	; () banked
 26329  002D54  5119               	movf	sprintf@width& (0+255),w,b
 26330  002D56  0101               	movlb	1	; () banked
 26331  002D58  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26332  002D5A  B4D8               	btfsc	status,2,c
 26333  002D5C  D015               	goto	l13540
 26334                           
 26335                           ; BSR set to: 1
 26336  002D5E  0E03               	movlw	3
 26337  002D60  0101               	movlb	1	; () banked
 26338  002D62  151B               	andwf	sprintf@flag& (0+255),w,b
 26339  002D64  0100               	movlb	0	; () banked
 26340  002D66  6FD5               	movwf	??_sprintf& (0+255),b
 26341  002D68  0E00               	movlw	0
 26342  002D6A  0101               	movlb	1	; () banked
 26343  002D6C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26344  002D6E  0100               	movlb	0	; () banked
 26345  002D70  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26346  002D72  0100               	movlb	0	; () banked
 26347  002D74  51D5               	movf	??_sprintf& (0+255),w,b
 26348  002D76  0100               	movlb	0	; () banked
 26349  002D78  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26350  002D7A  B4D8               	btfsc	status,2,c
 26351  002D7C  D005               	goto	l13540
 26352                           
 26353                           ; BSR set to: 0
 26354                           ;doprnt.c: 1346: width--;
 26355  002D7E  0101               	movlb	1	; () banked
 26356  002D80  0719               	decf	sprintf@width& (0+255),f,b
 26357  002D82  A0D8               	btfss	status,0,c
 26358  002D84  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26359  002D86  D000               	goto	l13540
 26360  002D88                     l13540:
 26361                           
 26362                           ;doprnt.c: 1381: if(width > c)
 26363  002D88  0E80               	movlw	128
 26364  002D8A  0101               	movlb	1	; () banked
 26365  002D8C  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26366  002D8E  0E7F               	movlw	127
 26367  002D90  0100               	movlb	0	; () banked
 26368  002D92  6FD5               	movwf	??_sprintf& (0+255),b
 26369  002D94  0101               	movlb	1	; () banked
 26370  002D96  5119               	movf	sprintf@width& (0+255),w,b
 26371  002D98  0101               	movlb	1	; () banked
 26372  002D9A  5D1D               	subwf	sprintf@c& (0+255),w,b
 26373  002D9C  0101               	movlb	1	; () banked
 26374  002D9E  511A               	movf	(sprintf@width+1)& (0+255),w,b
 26375  002DA0  0A80               	xorlw	128
 26376  002DA2  0100               	movlb	0	; () banked
 26377  002DA4  59D5               	subwfb	??_sprintf& (0+255),w,b
 26378  002DA6  B0D8               	btfsc	status,0,c
 26379  002DA8  D00B               	goto	l13544
 26380                           
 26381                           ; BSR set to: 0
 26382                           ;doprnt.c: 1382: width -= c;
 26383  002DAA  0101               	movlb	1	; () banked
 26384  002DAC  511D               	movf	sprintf@c& (0+255),w,b
 26385  002DAE  0101               	movlb	1	; () banked
 26386  002DB0  5F19               	subwf	sprintf@width& (0+255),f,b
 26387  002DB2  0E00               	movlw	0
 26388  002DB4  0101               	movlb	1	; () banked
 26389  002DB6  BF1D               	btfsc	sprintf@c& (0+255),7,b
 26390  002DB8  0EFF               	movlw	255
 26391  002DBA  0101               	movlb	1	; () banked
 26392  002DBC  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
 26393  002DBE  D006               	goto	l13546
 26394  002DC0                     l13544:
 26395                           
 26396                           ;doprnt.c: 1383: else
 26397                           ;doprnt.c: 1384: width = 0;
 26398  002DC0  0E00               	movlw	0
 26399  002DC2  0101               	movlb	1	; () banked
 26400  002DC4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
 26401  002DC6  0E00               	movlw	0
 26402  002DC8  6F19               	movwf	sprintf@width& (0+255),b
 26403  002DCA  D000               	goto	l13546
 26404  002DCC                     l13546:
 26405                           
 26406                           ; BSR set to: 1
 26407                           ;doprnt.c: 1387: if(flag & 0x04) {
 26408  002DCC  0101               	movlb	1	; () banked
 26409  002DCE  A51B               	btfss	sprintf@flag& (0+255),2,b
 26410  002DD0  D035               	goto	l13562
 26411                           
 26412                           ; BSR set to: 1
 26413                           ;doprnt.c: 1392: if(flag & 0x03)
 26414  002DD2  0E03               	movlw	3
 26415  002DD4  0101               	movlb	1	; () banked
 26416  002DD6  151B               	andwf	sprintf@flag& (0+255),w,b
 26417  002DD8  0100               	movlb	0	; () banked
 26418  002DDA  6FD5               	movwf	??_sprintf& (0+255),b
 26419  002DDC  0E00               	movlw	0
 26420  002DDE  0101               	movlb	1	; () banked
 26421  002DE0  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26422  002DE2  0100               	movlb	0	; () banked
 26423  002DE4  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26424  002DE6  0100               	movlb	0	; () banked
 26425  002DE8  51D5               	movf	??_sprintf& (0+255),w,b
 26426  002DEA  0100               	movlb	0	; () banked
 26427  002DEC  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26428  002DEE  B4D8               	btfsc	status,2,c
 26429  002DF0  D00A               	goto	l13554
 26430                           
 26431                           ; BSR set to: 0
 26432                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 26433  002DF2  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26434  002DF6  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26435  002DFA  0E2D               	movlw	45
 26436  002DFC  6EDF               	movwf	indf2,c
 26437                           
 26438                           ; BSR set to: 0
 26439  002DFE  0100               	movlb	0	; () banked
 26440  002E00  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26441  002E02  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26442  002E04  D000               	goto	l13554
 26443  002E06                     l13554:
 26444                           
 26445                           ; BSR set to: 0
 26446                           ;doprnt.c: 1415: if(width)
 26447  002E06  0101               	movlb	1	; () banked
 26448  002E08  5119               	movf	sprintf@width& (0+255),w,b
 26449  002E0A  0101               	movlb	1	; () banked
 26450  002E0C  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26451  002E0E  B4D8               	btfsc	status,2,c
 26452  002E10  D04A               	goto	l13576
 26453  002E12                     l13556:
 26454                           
 26455                           ; BSR set to: 1
 26456                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 26457  002E12  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26458  002E16  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26459  002E1A  0E30               	movlw	48
 26460  002E1C  6EDF               	movwf	indf2,c
 26461                           
 26462                           ; BSR set to: 1
 26463  002E1E  0100               	movlb	0	; () banked
 26464  002E20  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26465  002E22  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26466                           
 26467                           ; BSR set to: 0
 26468                           ;doprnt.c: 1418: while(--width);
 26469  002E24  0101               	movlb	1	; () banked
 26470  002E26  0719               	decf	sprintf@width& (0+255),f,b
 26471  002E28  A0D8               	btfss	status,0,c
 26472  002E2A  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26473  002E2C  0101               	movlb	1	; () banked
 26474  002E2E  5119               	movf	sprintf@width& (0+255),w,b
 26475  002E30  0101               	movlb	1	; () banked
 26476  002E32  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26477  002E34  B4D8               	btfsc	status,2,c
 26478  002E36  D037               	goto	l13576
 26479  002E38  D7EC               	goto	l13556
 26480                           
 26481                           ; BSR set to: 1
 26482                           ;doprnt.c: 1420: } else
 26483                           
 26484                           ; BSR set to: 1
 26485  002E3A  D035               	goto	l13576
 26486  002E3C                     l13562:
 26487                           
 26488                           ; BSR set to: 1
 26489                           ;doprnt.c: 1422: {
 26490                           ;doprnt.c: 1424: if(width
 26491                           ;doprnt.c: 1428: )
 26492  002E3C  0101               	movlb	1	; () banked
 26493  002E3E  5119               	movf	sprintf@width& (0+255),w,b
 26494  002E40  0101               	movlb	1	; () banked
 26495  002E42  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26496  002E44  B4D8               	btfsc	status,2,c
 26497  002E46  D015               	goto	l13570
 26498  002E48                     l13564:
 26499                           
 26500                           ; BSR set to: 1
 26501                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 26502  002E48  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26503  002E4C  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26504  002E50  0E20               	movlw	32
 26505  002E52  6EDF               	movwf	indf2,c
 26506                           
 26507                           ; BSR set to: 1
 26508  002E54  0100               	movlb	0	; () banked
 26509  002E56  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26510  002E58  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26511                           
 26512                           ; BSR set to: 0
 26513                           ;doprnt.c: 1431: while(--width);
 26514  002E5A  0101               	movlb	1	; () banked
 26515  002E5C  0719               	decf	sprintf@width& (0+255),f,b
 26516  002E5E  A0D8               	btfss	status,0,c
 26517  002E60  071A               	decf	(sprintf@width+1)& (0+255),f,b
 26518  002E62  0101               	movlb	1	; () banked
 26519  002E64  5119               	movf	sprintf@width& (0+255),w,b
 26520  002E66  0101               	movlb	1	; () banked
 26521  002E68  111A               	iorwf	(sprintf@width+1)& (0+255),w,b
 26522  002E6A  B4D8               	btfsc	status,2,c
 26523  002E6C  D002               	goto	l13570
 26524  002E6E  D7EC               	goto	l13564
 26525                           
 26526                           ; BSR set to: 1
 26527  002E70  D000               	goto	l13570
 26528  002E72                     l13570:
 26529                           
 26530                           ; BSR set to: 1
 26531                           ;doprnt.c: 1438: if(flag & 0x03)
 26532  002E72  0E03               	movlw	3
 26533  002E74  0101               	movlb	1	; () banked
 26534  002E76  151B               	andwf	sprintf@flag& (0+255),w,b
 26535  002E78  0100               	movlb	0	; () banked
 26536  002E7A  6FD5               	movwf	??_sprintf& (0+255),b
 26537  002E7C  0E00               	movlw	0
 26538  002E7E  0101               	movlb	1	; () banked
 26539  002E80  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
 26540  002E82  0100               	movlb	0	; () banked
 26541  002E84  6FD6               	movwf	(??_sprintf+1)& (0+255),b
 26542  002E86  0100               	movlb	0	; () banked
 26543  002E88  51D5               	movf	??_sprintf& (0+255),w,b
 26544  002E8A  0100               	movlb	0	; () banked
 26545  002E8C  11D6               	iorwf	(??_sprintf+1)& (0+255),w,b
 26546  002E8E  B4D8               	btfsc	status,2,c
 26547  002E90  D00A               	goto	l13576
 26548                           
 26549                           ; BSR set to: 0
 26550                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 26551  002E92  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26552  002E96  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26553  002E9A  0E2D               	movlw	45
 26554  002E9C  6EDF               	movwf	indf2,c
 26555                           
 26556                           ; BSR set to: 0
 26557  002E9E  0100               	movlb	0	; () banked
 26558  002EA0  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26559  002EA2  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26560                           
 26561                           ; BSR set to: 0
 26562  002EA4  D000               	goto	l13576
 26563  002EA6                     l13576:
 26564                           
 26565                           ;doprnt.c: 1469: }
 26566                           ;doprnt.c: 1472: prec = c;
 26567  002EA6  0101               	movlb	1	; () banked
 26568  002EA8  511D               	movf	sprintf@c& (0+255),w,b
 26569  002EAA  0101               	movlb	1	; () banked
 26570  002EAC  6F0A               	movwf	sprintf@prec& (0+255),b
 26571  002EAE  6B0B               	clrf	(sprintf@prec+1)& (0+255),b
 26572  002EB0  BF0A               	btfsc	sprintf@prec& (0+255),7,b
 26573  002EB2  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26574                           
 26575                           ;doprnt.c: 1474: while(prec--) {
 26576  002EB4  D09B               	goto	l13592
 26577                           
 26578                           ; BSR set to: 1
 26579                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 26580  002EB6  D086               	goto	l13586
 26581  002EB8                     l13578:
 26582                           
 26583                           ; BSR set to: 1
 26584                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26585  002EB8  C10A  F0D5         	movff	sprintf@prec,??_sprintf
 26586  002EBC  C10B  F0D6         	movff	sprintf@prec+1,??_sprintf+1
 26587  002EC0  0100               	movlb	0	; () banked
 26588  002EC2  90D8               	bcf	status,0,c
 26589  002EC4  37D5               	rlcf	??_sprintf& (0+255),f,b
 26590  002EC6  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26591  002EC8  0100               	movlb	0	; () banked
 26592  002ECA  90D8               	bcf	status,0,c
 26593  002ECC  37D5               	rlcf	??_sprintf& (0+255),f,b
 26594  002ECE  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26595  002ED0  0E93               	movlw	low _dpowers
 26596  002ED2  0100               	movlb	0	; () banked
 26597  002ED4  25D5               	addwf	??_sprintf& (0+255),w,b
 26598  002ED6  6EF6               	movwf	tblptrl,c
 26599  002ED8  0EF1               	movlw	high _dpowers
 26600  002EDA  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 26601  002EDC  6EF7               	movwf	tblptrh,c
 26602  002EDE                     	if	1	;There are 3 active tblptr bytes
 26603  002EDE  6AF8               	clrf	tblptru,c
 26604  002EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 26605  002EE2  22F8               	addwfc	tblptru,f,c
 26606  002EE4                     	endif
 26607  002EE4  0009               	tblrd		*+
 26608  002EE6  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26609  002EEA  0009               	tblrd		*+
 26610  002EEC  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26611  002EF0  0009               	tblrd		*+
 26612  002EF2  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26613  002EF6  000A               	tblrd		*-
 26614  002EF8  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26615  002EFC  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26616  002F00  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26617  002F04  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26618  002F08  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26619  002F0C  EC36  F03F         	call	___lldiv	;wreg free
 26620  002F10  C079  F086         	movff	?___lldiv,___llmod@dividend
 26621  002F14  C07A  F087         	movff	?___lldiv+1,___llmod@dividend+1
 26622  002F18  C07B  F088         	movff	?___lldiv+2,___llmod@dividend+2
 26623  002F1C  C07C  F089         	movff	?___lldiv+3,___llmod@dividend+3
 26624  002F20  0E0A               	movlw	10
 26625  002F22  0100               	movlb	0	; () banked
 26626  002F24  6F8A               	movwf	___llmod@divisor& (0+255),b
 26627  002F26  0E00               	movlw	0
 26628  002F28  6F8B               	movwf	(___llmod@divisor+1)& (0+255),b
 26629  002F2A  0E00               	movlw	0
 26630  002F2C  6F8C               	movwf	(___llmod@divisor+2)& (0+255),b
 26631  002F2E  0E00               	movlw	0
 26632  002F30  6F8D               	movwf	(___llmod@divisor+3)& (0+255),b
 26633  002F32  EC5A  F041         	call	___llmod	;wreg free
 26634  002F36  0100               	movlb	0	; () banked
 26635  002F38  5186               	movf	?___llmod& (0+255),w,b
 26636  002F3A  0F30               	addlw	48
 26637  002F3C  0101               	movlb	1	; () banked
 26638  002F3E  6F1D               	movwf	sprintf@c& (0+255),b
 26639                           
 26640                           ;doprnt.c: 1491: break;
 26641  002F40  D04B               	goto	l13588
 26642  002F42                     l13580:
 26643                           
 26644                           ; BSR set to: 1
 26645                           ;doprnt.c: 1499: {
 26646                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26647  002F42  C112  F079         	movff	sprintf@val,___lldiv@dividend
 26648  002F46  C113  F07A         	movff	sprintf@val+1,___lldiv@dividend+1
 26649  002F4A  C114  F07B         	movff	sprintf@val+2,___lldiv@dividend+2
 26650  002F4E  C115  F07C         	movff	sprintf@val+3,___lldiv@dividend+3
 26651  002F52  C10A  F0D5         	movff	sprintf@prec,??_sprintf
 26652  002F56  C10B  F0D6         	movff	sprintf@prec+1,??_sprintf+1
 26653  002F5A  0100               	movlb	0	; () banked
 26654  002F5C  90D8               	bcf	status,0,c
 26655  002F5E  37D5               	rlcf	??_sprintf& (0+255),f,b
 26656  002F60  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26657  002F62  0100               	movlb	0	; () banked
 26658  002F64  90D8               	bcf	status,0,c
 26659  002F66  37D5               	rlcf	??_sprintf& (0+255),f,b
 26660  002F68  37D6               	rlcf	(??_sprintf+1)& (0+255),f,b
 26661  002F6A  0E09               	movlw	low _hexpowers
 26662  002F6C  0100               	movlb	0	; () banked
 26663  002F6E  25D5               	addwf	??_sprintf& (0+255),w,b
 26664  002F70  6EF6               	movwf	tblptrl,c
 26665  002F72  0EF2               	movlw	high _hexpowers
 26666  002F74  21D6               	addwfc	(??_sprintf+1)& (0+255),w,b
 26667  002F76  6EF7               	movwf	tblptrh,c
 26668  002F78                     	if	1	;There are 3 active tblptr bytes
 26669  002F78  6AF8               	clrf	tblptru,c
 26670  002F7A  0E00               	movlw	low (__mediumconst shr (0+16))
 26671  002F7C  22F8               	addwfc	tblptru,f,c
 26672  002F7E                     	endif
 26673  002F7E  0009               	tblrd		*+
 26674  002F80  CFF5 F07D          	movff	tablat,___lldiv@divisor
 26675  002F84  0009               	tblrd		*+
 26676  002F86  CFF5 F07E          	movff	tablat,___lldiv@divisor+1
 26677  002F8A  0009               	tblrd		*+
 26678  002F8C  CFF5 F07F          	movff	tablat,___lldiv@divisor+2
 26679  002F90  000A               	tblrd		*-
 26680  002F92  CFF5 F080          	movff	tablat,___lldiv@divisor+3
 26681  002F96  EC36  F03F         	call	___lldiv	;wreg free
 26682  002F9A  0100               	movlb	0	; () banked
 26683  002F9C  5179               	movf	?___lldiv& (0+255),w,b
 26684  002F9E  0B0F               	andlw	15
 26685  002FA0  0101               	movlb	1	; () banked
 26686  002FA2  6F03               	movwf	sprintf@idx& (0+255),b
 26687                           
 26688                           ; BSR set to: 1
 26689                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26690  002FA4  0101               	movlb	1	; () banked
 26691  002FA6  5103               	movf	sprintf@idx& (0+255),w,b
 26692  002FA8  0D01               	mullw	1
 26693  002FAA  0E34               	movlw	low STR_147
 26694  002FAC  24F3               	addwf	prodl,w,c
 26695  002FAE  6EF6               	movwf	tblptrl,c
 26696  002FB0  0EFE               	movlw	high STR_147
 26697  002FB2  20F4               	addwfc	prodh,w,c
 26698  002FB4  6EF7               	movwf	tblptrh,c
 26699  002FB6                     	if	1	;There are 3 active tblptr bytes
 26700  002FB6  6AF8               	clrf	tblptru,c
 26701  002FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 26702  002FBA  22F8               	addwfc	tblptru,f,c
 26703  002FBC                     	endif
 26704  002FBC  0008               	tblrd		*
 26705  002FBE  CFF5 F11D          	movff	tablat,sprintf@c
 26706                           
 26707                           ; BSR set to: 1
 26708                           ;doprnt.c: 1523: }
 26709                           
 26710                           ;doprnt.c: 1508: }
 26711                           ;doprnt.c: 1510: break;
 26712  002FC2  D00A               	goto	l13588
 26713  002FC4                     l13586:
 26714                           
 26715                           ; BSR set to: 1
 26716  002FC4  0101               	movlb	1	; () banked
 26717  002FC6  511B               	movf	sprintf@flag& (0+255),w,b
 26718  002FC8  0B80               	andlw	128
 26719                           
 26720                           ; Switch size 1, requested type "space"
 26721                           ; Number of cases is 2, Range of values is 0 to 128
 26722                           ; switch strategies available:
 26723                           ; Name         Instructions Cycles
 26724                           ; simple_byte            7     4 (average)
 26725                           ;	Chosen strategy is simple_byte
 26726  002FCA  0A00               	xorlw	0	; case 0
 26727  002FCC  B4D8               	btfsc	status,2,c
 26728  002FCE  D774               	goto	l13578
 26729  002FD0  0A80               	xorlw	128	; case 128
 26730  002FD2  B4D8               	btfsc	status,2,c
 26731  002FD4  D7B6               	goto	l13580
 26732  002FD6  D000               	goto	l13588
 26733  002FD8                     l13588:
 26734                           
 26735                           ; BSR set to: 1
 26736                           ;doprnt.c: 1524: ((*sp++ = (c)));
 26737  002FD8  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26738  002FDC  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26739  002FE0  C11D  FFDF         	movff	sprintf@c,indf2
 26740                           
 26741                           ; BSR set to: 1
 26742  002FE4  0100               	movlb	0	; () banked
 26743  002FE6  4BC7               	infsnz	sprintf@sp& (0+255),f,b
 26744  002FE8  2BC8               	incf	(sprintf@sp+1)& (0+255),f,b
 26745  002FEA  D000               	goto	l13592
 26746  002FEC                     l13592:
 26747  002FEC  0101               	movlb	1	; () banked
 26748  002FEE  070A               	decf	sprintf@prec& (0+255),f,b
 26749  002FF0  A0D8               	btfss	status,0,c
 26750  002FF2  070B               	decf	(sprintf@prec+1)& (0+255),f,b
 26751  002FF4  0101               	movlb	1	; () banked
 26752  002FF6  290A               	incf	sprintf@prec& (0+255),w,b
 26753  002FF8  E1E5               	bnz	l13586
 26754  002FFA  0101               	movlb	1	; () banked
 26755  002FFC  290B               	incf	(sprintf@prec+1)& (0+255),w,b
 26756  002FFE  B4D8               	btfsc	status,2,c
 26757  003000  D002               	goto	l13594
 26758  003002  D7E0               	goto	l13586
 26759                           
 26760                           ; BSR set to: 1
 26761  003004  D000               	goto	l13594
 26762  003006                     l13594:
 26763  003006  C0C9  FFF6         	movff	sprintf@f,tblptrl
 26764  00300A  C0CA  FFF7         	movff	sprintf@f+1,tblptrh
 26765  00300E  0100               	movlb	0	; () banked
 26766  003010  4BC9               	infsnz	sprintf@f& (0+255),f,b
 26767  003012  2BCA               	incf	(sprintf@f+1)& (0+255),f,b
 26768  003014                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 26769  003014  6AF8               	clrf	tblptru,c
 26770  003016                     	endif
 26771  003016                     	if	0	;tblptru may be non-zero
 26772  003016                     	endif
 26773  003016  0008               	tblrd		*
 26774  003018  CFF5 F11D          	movff	tablat,sprintf@c
 26775  00301C  0101               	movlb	1	; () banked
 26776  00301E  511D               	movf	sprintf@c& (0+255),w,b
 26777  003020  B4D8               	btfsc	status,2,c
 26778  003022  D003               	goto	l13596
 26779  003024  EF83  F010         	goto	l13222
 26780                           
 26781                           ; BSR set to: 1
 26782  003028  D000               	goto	l13596
 26783  00302A                     l13596:
 26784                           
 26785                           ;doprnt.c: 1538: *sp = 0;
 26786  00302A  C0C7  FFD9         	movff	sprintf@sp,fsr2l
 26787  00302E  C0C8  FFDA         	movff	sprintf@sp+1,fsr2h
 26788  003032  0E00               	movlw	0
 26789  003034  6EDF               	movwf	indf2,c
 26790  003036  0012               	return	
 26791                           
 26792                           ;doprnt.c: 1540: return 0;
 26793                           ;	Return value of _sprintf is never used
 26794  003038  0012               	return		;funcret
 26795  00303A                     __end_of_sprintf:
 26796                           	opt stack 0
 26797                           tblptru	equ	0xFF8
 26798                           tblptrh	equ	0xFF7
 26799                           tblptrl	equ	0xFF6
 26800                           tablat	equ	0xFF5
 26801                           prodh	equ	0xFF4
 26802                           prodl	equ	0xFF3
 26803                           intcon	equ	0xFF2
 26804                           intcon2	equ	0xFF1
 26805                           indf0	equ	0xFEF
 26806                           postinc0	equ	0xFEE
 26807                           fsr0h	equ	0xFEA
 26808                           fsr0l	equ	0xFE9
 26809                           wreg	equ	0xFE8
 26810                           indf1	equ	0xFE7
 26811                           postdec1	equ	0xFE5
 26812                           fsr1h	equ	0xFE2
 26813                           fsr1l	equ	0xFE1
 26814                           indf2	equ	0xFDF
 26815                           postinc2	equ	0xFDE
 26816                           postdec2	equ	0xFDD
 26817                           fsr2h	equ	0xFDA
 26818                           fsr2l	equ	0xFD9
 26819                           status	equ	0xFD8
 26820                           
 26821 ;; *************** function _scale *****************
 26822 ;; Defined at:
 26823 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 26824 ;; Parameters:    Size  Location     Type
 26825 ;;  scl             1    wreg     char 
 26826 ;; Auto vars:     Size  Location     Type
 26827 ;;  scl             1   72[BANK0 ] char 
 26828 ;; Return value:  Size  Location     Type
 26829 ;;                  3   66[BANK0 ] char 
 26830 ;; Registers used:
 26831 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26832 ;; Tracked objects:
 26833 ;;		On entry : 0/0
 26834 ;;		On exit  : 0/0
 26835 ;;		Unchanged: 0/0
 26836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26837 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26838 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26840 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26841 ;;Total ram usage:        7 bytes
 26842 ;; Hardware stack levels used:    1
 26843 ;; Hardware stack levels required when called:    8
 26844 ;; This function calls:
 26845 ;;		___awdiv
 26846 ;;		___awmod
 26847 ;;		___ftmul
 26848 ;;		___wmul
 26849 ;; This function is called by:
 26850 ;;		_sprintf
 26851 ;; This function uses a non-reentrant model
 26852 ;;
 26853                           
 26854                           	psect	text60
 26855  00421C                     __ptext60:
 26856                           	opt stack 0
 26857  00421C                     _scale:
 26858                           	opt stack 20
 26859                           
 26860                           ;incstack = 0
 26861                           ;scale@scl stored from wreg
 26862  00421C  0100               	movlb	0	; () banked
 26863  00421E  6FA8               	movwf	scale@scl& (0+255),b
 26864                           
 26865                           ; BSR set to: 0
 26866                           ;doprnt.c: 428: if(scl < 0) {
 26867  004220  0100               	movlb	0	; () banked
 26868  004222  AFA8               	btfss	scale@scl& (0+255),7,b
 26869  004224  D13F               	goto	l12798
 26870                           
 26871                           ; BSR set to: 0
 26872                           ;doprnt.c: 429: scl = -scl;
 26873  004226  0100               	movlb	0	; () banked
 26874  004228  6DA8               	negf	scale@scl& (0+255),b
 26875                           
 26876                           ;doprnt.c: 430: if(scl>=110)
 26877  00422A  0100               	movlb	0	; () banked
 26878  00422C  51A8               	movf	scale@scl& (0+255),w,b
 26879  00422E  0A80               	xorlw	128
 26880  004230  0F12               	addlw	-238
 26881  004232  A0D8               	btfss	status,0,c
 26882  004234  D0B6               	goto	l12788
 26883                           
 26884                           ; BSR set to: 0
 26885                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26886  004236  0E00               	movlw	0
 26887  004238  0100               	movlb	0	; () banked
 26888  00423A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26889  00423C  0E03               	movlw	3
 26890  00423E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 26891  004240  0E00               	movlw	0
 26892  004242  0100               	movlb	0	; () banked
 26893  004244  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 26894  004246  0E0A               	movlw	10
 26895  004248  6F81               	movwf	___awdiv@divisor& (0+255),b
 26896  00424A  0E00               	movlw	0
 26897  00424C  0100               	movlb	0	; () banked
 26898  00424E  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 26899  004250  0E64               	movlw	100
 26900  004252  6F7B               	movwf	___awmod@divisor& (0+255),b
 26901  004254  0100               	movlb	0	; () banked
 26902  004256  51A8               	movf	scale@scl& (0+255),w,b
 26903  004258  0100               	movlb	0	; () banked
 26904  00425A  6F79               	movwf	___awmod@dividend& (0+255),b
 26905  00425C  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 26906  00425E  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 26907  004260  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 26908  004262  EC50  F040         	call	___awmod	;wreg free
 26909  004266  C079  F07F         	movff	?___awmod,___awdiv@dividend
 26910  00426A  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 26911  00426E  EC03  F03E         	call	___awdiv	;wreg free
 26912  004272  0E09               	movlw	9
 26913  004274  0100               	movlb	0	; () banked
 26914  004276  257F               	addwf	?___awdiv& (0+255),w,b
 26915  004278  0100               	movlb	0	; () banked
 26916  00427A  6F87               	movwf	___wmul@multiplier& (0+255),b
 26917  00427C  0E00               	movlw	0
 26918  00427E  0100               	movlb	0	; () banked
 26919  004280  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 26920  004282  0100               	movlb	0	; () banked
 26921  004284  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 26922  004286  EC0D  F048         	call	___wmul	;wreg free
 26923  00428A  0EBB               	movlw	low __npowers_
 26924  00428C  0100               	movlb	0	; () banked
 26925  00428E  2587               	addwf	?___wmul& (0+255),w,b
 26926  004290  6EF6               	movwf	tblptrl,c
 26927  004292  0EF1               	movlw	high __npowers_
 26928  004294  0100               	movlb	0	; () banked
 26929  004296  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 26930  004298  6EF7               	movwf	tblptrh,c
 26931  00429A                     	if	1	;There are 3 active tblptr bytes
 26932  00429A  6AF8               	clrf	tblptru,c
 26933  00429C  0E00               	movlw	low (__mediumconst shr (0+16))
 26934  00429E  22F8               	addwfc	tblptru,f,c
 26935  0042A0                     	endif
 26936  0042A0  0009               	tblrd		*+
 26937  0042A2  CFF5 F096          	movff	tablat,___ftmul@f2
 26938  0042A6  0009               	tblrd		*+
 26939  0042A8  CFF5 F097          	movff	tablat,___ftmul@f2+1
 26940  0042AC  000A               	tblrd		*-
 26941  0042AE  CFF5 F098          	movff	tablat,___ftmul@f2+2
 26942  0042B2  0E00               	movlw	0
 26943  0042B4  0100               	movlb	0	; () banked
 26944  0042B6  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 26945  0042B8  0E64               	movlw	100
 26946  0042BA  6F81               	movwf	___awdiv@divisor& (0+255),b
 26947  0042BC  0100               	movlb	0	; () banked
 26948  0042BE  51A8               	movf	scale@scl& (0+255),w,b
 26949  0042C0  0100               	movlb	0	; () banked
 26950  0042C2  6F7F               	movwf	___awdiv@dividend& (0+255),b
 26951  0042C4  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 26952  0042C6  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 26953  0042C8  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26954  0042CA  EC03  F03E         	call	___awdiv	;wreg free
 26955  0042CE  0E12               	movlw	18
 26956  0042D0  0100               	movlb	0	; () banked
 26957  0042D2  257F               	addwf	?___awdiv& (0+255),w,b
 26958  0042D4  0100               	movlb	0	; () banked
 26959  0042D6  6F87               	movwf	___wmul@multiplier& (0+255),b
 26960  0042D8  0E00               	movlw	0
 26961  0042DA  0100               	movlb	0	; () banked
 26962  0042DC  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 26963  0042DE  0100               	movlb	0	; () banked
 26964  0042E0  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 26965  0042E2  0E00               	movlw	0
 26966  0042E4  0100               	movlb	0	; () banked
 26967  0042E6  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26968  0042E8  0E03               	movlw	3
 26969  0042EA  6F89               	movwf	___wmul@multiplicand& (0+255),b
 26970  0042EC  EC0D  F048         	call	___wmul	;wreg free
 26971  0042F0  0EBB               	movlw	low __npowers_
 26972  0042F2  0100               	movlb	0	; () banked
 26973  0042F4  2587               	addwf	?___wmul& (0+255),w,b
 26974  0042F6  6EF6               	movwf	tblptrl,c
 26975  0042F8  0EF1               	movlw	high __npowers_
 26976  0042FA  0100               	movlb	0	; () banked
 26977  0042FC  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 26978  0042FE  6EF7               	movwf	tblptrh,c
 26979  004300                     	if	1	;There are 3 active tblptr bytes
 26980  004300  6AF8               	clrf	tblptru,c
 26981  004302  0E00               	movlw	low (__mediumconst shr (0+16))
 26982  004304  22F8               	addwfc	tblptru,f,c
 26983  004306                     	endif
 26984  004306  0009               	tblrd		*+
 26985  004308  CFF5 F093          	movff	tablat,___ftmul@f1
 26986  00430C  0009               	tblrd		*+
 26987  00430E  CFF5 F094          	movff	tablat,___ftmul@f1+1
 26988  004312  000A               	tblrd		*-
 26989  004314  CFF5 F095          	movff	tablat,___ftmul@f1+2
 26990  004318  EC91  F036         	call	___ftmul	;wreg free
 26991  00431C  C093  F0A5         	movff	?___ftmul,_scale$3786
 26992  004320  C094  F0A6         	movff	?___ftmul+1,_scale$3786+1
 26993  004324  C095  F0A7         	movff	?___ftmul+2,_scale$3786+2
 26994                           
 26995                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26996  004328  C0A5  F093         	movff	_scale$3786,___ftmul@f1
 26997  00432C  C0A6  F094         	movff	_scale$3786+1,___ftmul@f1+1
 26998  004330  C0A7  F095         	movff	_scale$3786+2,___ftmul@f1+2
 26999  004334  0E00               	movlw	0
 27000  004336  0100               	movlb	0	; () banked
 27001  004338  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27002  00433A  0E03               	movlw	3
 27003  00433C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27004  00433E  0E00               	movlw	0
 27005  004340  0100               	movlb	0	; () banked
 27006  004342  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27007  004344  0E0A               	movlw	10
 27008  004346  6F7B               	movwf	___awmod@divisor& (0+255),b
 27009  004348  0100               	movlb	0	; () banked
 27010  00434A  51A8               	movf	scale@scl& (0+255),w,b
 27011  00434C  0100               	movlb	0	; () banked
 27012  00434E  6F79               	movwf	___awmod@dividend& (0+255),b
 27013  004350  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27014  004352  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27015  004354  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27016  004356  EC50  F040         	call	___awmod	;wreg free
 27017  00435A  C079  F087         	movff	?___awmod,___wmul@multiplier
 27018  00435E  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27019  004362  EC0D  F048         	call	___wmul	;wreg free
 27020  004366  0EBB               	movlw	low __npowers_
 27021  004368  0100               	movlb	0	; () banked
 27022  00436A  2587               	addwf	?___wmul& (0+255),w,b
 27023  00436C  6EF6               	movwf	tblptrl,c
 27024  00436E  0EF1               	movlw	high __npowers_
 27025  004370  0100               	movlb	0	; () banked
 27026  004372  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27027  004374  6EF7               	movwf	tblptrh,c
 27028  004376                     	if	1	;There are 3 active tblptr bytes
 27029  004376  6AF8               	clrf	tblptru,c
 27030  004378  0E00               	movlw	low (__mediumconst shr (0+16))
 27031  00437A  22F8               	addwfc	tblptru,f,c
 27032  00437C                     	endif
 27033  00437C  0009               	tblrd		*+
 27034  00437E  CFF5 F096          	movff	tablat,___ftmul@f2
 27035  004382  0009               	tblrd		*+
 27036  004384  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27037  004388  000A               	tblrd		*-
 27038  00438A  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27039  00438E  EC91  F036         	call	___ftmul	;wreg free
 27040  004392  C093  F0A2         	movff	?___ftmul,?_scale
 27041  004396  C094  F0A3         	movff	?___ftmul+1,?_scale+1
 27042  00439A  C095  F0A4         	movff	?___ftmul+2,?_scale+2
 27043  00439E  0012               	return	
 27044  0043A0  D06B               	goto	l12794
 27045  0043A2                     l12788:
 27046                           
 27047                           ;doprnt.c: 432: else if(scl > 10)
 27048  0043A2  0100               	movlb	0	; () banked
 27049  0043A4  51A8               	movf	scale@scl& (0+255),w,b
 27050  0043A6  0A80               	xorlw	128
 27051  0043A8  0F75               	addlw	-139
 27052  0043AA  A0D8               	btfss	status,0,c
 27053  0043AC  D065               	goto	l12794
 27054                           
 27055                           ; BSR set to: 0
 27056                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27057  0043AE  0E00               	movlw	0
 27058  0043B0  0100               	movlb	0	; () banked
 27059  0043B2  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27060  0043B4  0E0A               	movlw	10
 27061  0043B6  6F81               	movwf	___awdiv@divisor& (0+255),b
 27062  0043B8  0100               	movlb	0	; () banked
 27063  0043BA  51A8               	movf	scale@scl& (0+255),w,b
 27064  0043BC  0100               	movlb	0	; () banked
 27065  0043BE  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27066  0043C0  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27067  0043C2  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27068  0043C4  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27069  0043C6  EC03  F03E         	call	___awdiv	;wreg free
 27070  0043CA  0E09               	movlw	9
 27071  0043CC  0100               	movlb	0	; () banked
 27072  0043CE  257F               	addwf	?___awdiv& (0+255),w,b
 27073  0043D0  0100               	movlb	0	; () banked
 27074  0043D2  6F87               	movwf	___wmul@multiplier& (0+255),b
 27075  0043D4  0E00               	movlw	0
 27076  0043D6  0100               	movlb	0	; () banked
 27077  0043D8  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27078  0043DA  0100               	movlb	0	; () banked
 27079  0043DC  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27080  0043DE  0E00               	movlw	0
 27081  0043E0  0100               	movlb	0	; () banked
 27082  0043E2  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27083  0043E4  0E03               	movlw	3
 27084  0043E6  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27085  0043E8  EC0D  F048         	call	___wmul	;wreg free
 27086  0043EC  0EBB               	movlw	low __npowers_
 27087  0043EE  0100               	movlb	0	; () banked
 27088  0043F0  2587               	addwf	?___wmul& (0+255),w,b
 27089  0043F2  6EF6               	movwf	tblptrl,c
 27090  0043F4  0EF1               	movlw	high __npowers_
 27091  0043F6  0100               	movlb	0	; () banked
 27092  0043F8  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27093  0043FA  6EF7               	movwf	tblptrh,c
 27094  0043FC                     	if	1	;There are 3 active tblptr bytes
 27095  0043FC  6AF8               	clrf	tblptru,c
 27096  0043FE  0E00               	movlw	low (__mediumconst shr (0+16))
 27097  004400  22F8               	addwfc	tblptru,f,c
 27098  004402                     	endif
 27099  004402  0009               	tblrd		*+
 27100  004404  CFF5 F093          	movff	tablat,___ftmul@f1
 27101  004408  0009               	tblrd		*+
 27102  00440A  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27103  00440E  000A               	tblrd		*-
 27104  004410  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27105  004414  0E00               	movlw	0
 27106  004416  0100               	movlb	0	; () banked
 27107  004418  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27108  00441A  0E03               	movlw	3
 27109  00441C  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27110  00441E  0E00               	movlw	0
 27111  004420  0100               	movlb	0	; () banked
 27112  004422  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27113  004424  0E0A               	movlw	10
 27114  004426  6F7B               	movwf	___awmod@divisor& (0+255),b
 27115  004428  0100               	movlb	0	; () banked
 27116  00442A  51A8               	movf	scale@scl& (0+255),w,b
 27117  00442C  0100               	movlb	0	; () banked
 27118  00442E  6F79               	movwf	___awmod@dividend& (0+255),b
 27119  004430  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27120  004432  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27121  004434  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27122  004436  EC50  F040         	call	___awmod	;wreg free
 27123  00443A  C079  F087         	movff	?___awmod,___wmul@multiplier
 27124  00443E  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27125  004442  EC0D  F048         	call	___wmul	;wreg free
 27126  004446  0EBB               	movlw	low __npowers_
 27127  004448  0100               	movlb	0	; () banked
 27128  00444A  2587               	addwf	?___wmul& (0+255),w,b
 27129  00444C  6EF6               	movwf	tblptrl,c
 27130  00444E  0EF1               	movlw	high __npowers_
 27131  004450  0100               	movlb	0	; () banked
 27132  004452  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27133  004454  6EF7               	movwf	tblptrh,c
 27134  004456                     	if	1	;There are 3 active tblptr bytes
 27135  004456  6AF8               	clrf	tblptru,c
 27136  004458  0E00               	movlw	low (__mediumconst shr (0+16))
 27137  00445A  22F8               	addwfc	tblptru,f,c
 27138  00445C                     	endif
 27139  00445C  0009               	tblrd		*+
 27140  00445E  CFF5 F096          	movff	tablat,___ftmul@f2
 27141  004462  0009               	tblrd		*+
 27142  004464  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27143  004468  000A               	tblrd		*-
 27144  00446A  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27145  00446E  EC91  F036         	call	___ftmul	;wreg free
 27146  004472  D78F               	goto	L21
 27147  004474  0012               	return	
 27148  004476  D000               	goto	l12794
 27149  004478                     l12794:
 27150                           
 27151                           ;doprnt.c: 434: return _npowers_[scl];
 27152  004478  0100               	movlb	0	; () banked
 27153  00447A  51A8               	movf	scale@scl& (0+255),w,b
 27154  00447C  0D03               	mullw	3
 27155  00447E  0EBB               	movlw	low __npowers_
 27156  004480  24F3               	addwf	prodl,w,c
 27157  004482  6EF6               	movwf	tblptrl,c
 27158  004484  0EF1               	movlw	high __npowers_
 27159  004486  20F4               	addwfc	prodh,w,c
 27160  004488  6EF7               	movwf	tblptrh,c
 27161  00448A                     	if	1	;There are 3 active tblptr bytes
 27162  00448A  6AF8               	clrf	tblptru,c
 27163  00448C  0E00               	movlw	low (__mediumconst shr (0+16))
 27164  00448E  22F8               	addwfc	tblptru,f,c
 27165  004490                     	endif
 27166  004490  0009               	tblrd		*+
 27167  004492  CFF5 F0A2          	movff	tablat,?_scale
 27168  004496  0009               	tblrd		*+
 27169  004498  CFF5 F0A3          	movff	tablat,?_scale+1
 27170  00449C  000A               	tblrd		*-
 27171  00449E  CFF5 F0A4          	movff	tablat,?_scale+2
 27172                           
 27173                           ; BSR set to: 0
 27174  0044A2  0012               	return	
 27175  0044A4                     l12798:
 27176                           
 27177                           ; BSR set to: 0
 27178                           ;doprnt.c: 435: }
 27179                           ;doprnt.c: 436: if(scl>=110)
 27180  0044A4  0100               	movlb	0	; () banked
 27181  0044A6  51A8               	movf	scale@scl& (0+255),w,b
 27182  0044A8  0A80               	xorlw	128
 27183  0044AA  0F12               	addlw	-238
 27184  0044AC  A0D8               	btfss	status,0,c
 27185  0044AE  D0B6               	goto	l12806
 27186                           
 27187                           ; BSR set to: 0
 27188                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27189  0044B0  0E00               	movlw	0
 27190  0044B2  0100               	movlb	0	; () banked
 27191  0044B4  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27192  0044B6  0E03               	movlw	3
 27193  0044B8  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27194  0044BA  0E00               	movlw	0
 27195  0044BC  0100               	movlb	0	; () banked
 27196  0044BE  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27197  0044C0  0E0A               	movlw	10
 27198  0044C2  6F81               	movwf	___awdiv@divisor& (0+255),b
 27199  0044C4  0E00               	movlw	0
 27200  0044C6  0100               	movlb	0	; () banked
 27201  0044C8  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27202  0044CA  0E64               	movlw	100
 27203  0044CC  6F7B               	movwf	___awmod@divisor& (0+255),b
 27204  0044CE  0100               	movlb	0	; () banked
 27205  0044D0  51A8               	movf	scale@scl& (0+255),w,b
 27206  0044D2  0100               	movlb	0	; () banked
 27207  0044D4  6F79               	movwf	___awmod@dividend& (0+255),b
 27208  0044D6  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27209  0044D8  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27210  0044DA  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27211  0044DC  EC50  F040         	call	___awmod	;wreg free
 27212  0044E0  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27213  0044E4  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27214  0044E8  EC03  F03E         	call	___awdiv	;wreg free
 27215  0044EC  0E09               	movlw	9
 27216  0044EE  0100               	movlb	0	; () banked
 27217  0044F0  257F               	addwf	?___awdiv& (0+255),w,b
 27218  0044F2  0100               	movlb	0	; () banked
 27219  0044F4  6F87               	movwf	___wmul@multiplier& (0+255),b
 27220  0044F6  0E00               	movlw	0
 27221  0044F8  0100               	movlb	0	; () banked
 27222  0044FA  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27223  0044FC  0100               	movlb	0	; () banked
 27224  0044FE  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27225  004500  EC0D  F048         	call	___wmul	;wreg free
 27226  004504  0EE2               	movlw	low __powers_
 27227  004506  0100               	movlb	0	; () banked
 27228  004508  2587               	addwf	?___wmul& (0+255),w,b
 27229  00450A  6EF6               	movwf	tblptrl,c
 27230  00450C  0EF1               	movlw	high __powers_
 27231  00450E  0100               	movlb	0	; () banked
 27232  004510  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27233  004512  6EF7               	movwf	tblptrh,c
 27234  004514                     	if	1	;There are 3 active tblptr bytes
 27235  004514  6AF8               	clrf	tblptru,c
 27236  004516  0E00               	movlw	low (__mediumconst shr (0+16))
 27237  004518  22F8               	addwfc	tblptru,f,c
 27238  00451A                     	endif
 27239  00451A  0009               	tblrd		*+
 27240  00451C  CFF5 F096          	movff	tablat,___ftmul@f2
 27241  004520  0009               	tblrd		*+
 27242  004522  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27243  004526  000A               	tblrd		*-
 27244  004528  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27245  00452C  0E00               	movlw	0
 27246  00452E  0100               	movlb	0	; () banked
 27247  004530  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27248  004532  0E64               	movlw	100
 27249  004534  6F81               	movwf	___awdiv@divisor& (0+255),b
 27250  004536  0100               	movlb	0	; () banked
 27251  004538  51A8               	movf	scale@scl& (0+255),w,b
 27252  00453A  0100               	movlb	0	; () banked
 27253  00453C  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27254  00453E  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27255  004540  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27256  004542  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27257  004544  EC03  F03E         	call	___awdiv	;wreg free
 27258  004548  0E12               	movlw	18
 27259  00454A  0100               	movlb	0	; () banked
 27260  00454C  257F               	addwf	?___awdiv& (0+255),w,b
 27261  00454E  0100               	movlb	0	; () banked
 27262  004550  6F87               	movwf	___wmul@multiplier& (0+255),b
 27263  004552  0E00               	movlw	0
 27264  004554  0100               	movlb	0	; () banked
 27265  004556  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27266  004558  0100               	movlb	0	; () banked
 27267  00455A  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27268  00455C  0E00               	movlw	0
 27269  00455E  0100               	movlb	0	; () banked
 27270  004560  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27271  004562  0E03               	movlw	3
 27272  004564  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27273  004566  EC0D  F048         	call	___wmul	;wreg free
 27274  00456A  0EE2               	movlw	low __powers_
 27275  00456C  0100               	movlb	0	; () banked
 27276  00456E  2587               	addwf	?___wmul& (0+255),w,b
 27277  004570  6EF6               	movwf	tblptrl,c
 27278  004572  0EF1               	movlw	high __powers_
 27279  004574  0100               	movlb	0	; () banked
 27280  004576  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27281  004578  6EF7               	movwf	tblptrh,c
 27282  00457A                     	if	1	;There are 3 active tblptr bytes
 27283  00457A  6AF8               	clrf	tblptru,c
 27284  00457C  0E00               	movlw	low (__mediumconst shr (0+16))
 27285  00457E  22F8               	addwfc	tblptru,f,c
 27286  004580                     	endif
 27287  004580  0009               	tblrd		*+
 27288  004582  CFF5 F093          	movff	tablat,___ftmul@f1
 27289  004586  0009               	tblrd		*+
 27290  004588  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27291  00458C  000A               	tblrd		*-
 27292  00458E  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27293  004592  EC91  F036         	call	___ftmul	;wreg free
 27294  004596  C093  F0A5         	movff	?___ftmul,_scale$3786
 27295  00459A  C094  F0A6         	movff	?___ftmul+1,_scale$3786+1
 27296  00459E  C095  F0A7         	movff	?___ftmul+2,_scale$3786+2
 27297                           
 27298                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27299  0045A2  C0A5  F093         	movff	_scale$3786,___ftmul@f1
 27300  0045A6  C0A6  F094         	movff	_scale$3786+1,___ftmul@f1+1
 27301  0045AA  C0A7  F095         	movff	_scale$3786+2,___ftmul@f1+2
 27302  0045AE  0E00               	movlw	0
 27303  0045B0  0100               	movlb	0	; () banked
 27304  0045B2  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27305  0045B4  0E03               	movlw	3
 27306  0045B6  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27307  0045B8  0E00               	movlw	0
 27308  0045BA  0100               	movlb	0	; () banked
 27309  0045BC  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27310  0045BE  0E0A               	movlw	10
 27311  0045C0  6F7B               	movwf	___awmod@divisor& (0+255),b
 27312  0045C2  0100               	movlb	0	; () banked
 27313  0045C4  51A8               	movf	scale@scl& (0+255),w,b
 27314  0045C6  0100               	movlb	0	; () banked
 27315  0045C8  6F79               	movwf	___awmod@dividend& (0+255),b
 27316  0045CA  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27317  0045CC  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27318  0045CE  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27319  0045D0  EC50  F040         	call	___awmod	;wreg free
 27320  0045D4  C079  F087         	movff	?___awmod,___wmul@multiplier
 27321  0045D8  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27322  0045DC  EC0D  F048         	call	___wmul	;wreg free
 27323  0045E0  0EE2               	movlw	low __powers_
 27324  0045E2  0100               	movlb	0	; () banked
 27325  0045E4  2587               	addwf	?___wmul& (0+255),w,b
 27326  0045E6  6EF6               	movwf	tblptrl,c
 27327  0045E8  0EF1               	movlw	high __powers_
 27328  0045EA  0100               	movlb	0	; () banked
 27329  0045EC  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27330  0045EE  6EF7               	movwf	tblptrh,c
 27331  0045F0                     	if	1	;There are 3 active tblptr bytes
 27332  0045F0  6AF8               	clrf	tblptru,c
 27333  0045F2  0E00               	movlw	low (__mediumconst shr (0+16))
 27334  0045F4  22F8               	addwfc	tblptru,f,c
 27335  0045F6                     	endif
 27336  0045F6  0009               	tblrd		*+
 27337  0045F8  CFF5 F096          	movff	tablat,___ftmul@f2
 27338  0045FC  0009               	tblrd		*+
 27339  0045FE  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27340  004602  000A               	tblrd		*-
 27341  004604  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27342  004608  EC91  F036         	call	___ftmul	;wreg free
 27343  00460C  C093  F0A2         	movff	?___ftmul,?_scale
 27344  004610  C094  F0A3         	movff	?___ftmul+1,?_scale+1
 27345  004614  C095  F0A4         	movff	?___ftmul+2,?_scale+2
 27346  004618  0012               	return	
 27347  00461A  D06B               	goto	l12812
 27348  00461C                     l12806:
 27349                           
 27350                           ;doprnt.c: 438: else if(scl > 10)
 27351  00461C  0100               	movlb	0	; () banked
 27352  00461E  51A8               	movf	scale@scl& (0+255),w,b
 27353  004620  0A80               	xorlw	128
 27354  004622  0F75               	addlw	-139
 27355  004624  A0D8               	btfss	status,0,c
 27356  004626  D065               	goto	l12812
 27357                           
 27358                           ; BSR set to: 0
 27359                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27360  004628  0E00               	movlw	0
 27361  00462A  0100               	movlb	0	; () banked
 27362  00462C  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27363  00462E  0E0A               	movlw	10
 27364  004630  6F81               	movwf	___awdiv@divisor& (0+255),b
 27365  004632  0100               	movlb	0	; () banked
 27366  004634  51A8               	movf	scale@scl& (0+255),w,b
 27367  004636  0100               	movlb	0	; () banked
 27368  004638  6F7F               	movwf	___awdiv@dividend& (0+255),b
 27369  00463A  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27370  00463C  BF7F               	btfsc	___awdiv@dividend& (0+255),7,b
 27371  00463E  0780               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27372  004640  EC03  F03E         	call	___awdiv	;wreg free
 27373  004644  0E09               	movlw	9
 27374  004646  0100               	movlb	0	; () banked
 27375  004648  257F               	addwf	?___awdiv& (0+255),w,b
 27376  00464A  0100               	movlb	0	; () banked
 27377  00464C  6F87               	movwf	___wmul@multiplier& (0+255),b
 27378  00464E  0E00               	movlw	0
 27379  004650  0100               	movlb	0	; () banked
 27380  004652  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27381  004654  0100               	movlb	0	; () banked
 27382  004656  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27383  004658  0E00               	movlw	0
 27384  00465A  0100               	movlb	0	; () banked
 27385  00465C  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27386  00465E  0E03               	movlw	3
 27387  004660  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27388  004662  EC0D  F048         	call	___wmul	;wreg free
 27389  004666  0EE2               	movlw	low __powers_
 27390  004668  0100               	movlb	0	; () banked
 27391  00466A  2587               	addwf	?___wmul& (0+255),w,b
 27392  00466C  6EF6               	movwf	tblptrl,c
 27393  00466E  0EF1               	movlw	high __powers_
 27394  004670  0100               	movlb	0	; () banked
 27395  004672  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27396  004674  6EF7               	movwf	tblptrh,c
 27397  004676                     	if	1	;There are 3 active tblptr bytes
 27398  004676  6AF8               	clrf	tblptru,c
 27399  004678  0E00               	movlw	low (__mediumconst shr (0+16))
 27400  00467A  22F8               	addwfc	tblptru,f,c
 27401  00467C                     	endif
 27402  00467C  0009               	tblrd		*+
 27403  00467E  CFF5 F093          	movff	tablat,___ftmul@f1
 27404  004682  0009               	tblrd		*+
 27405  004684  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27406  004688  000A               	tblrd		*-
 27407  00468A  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27408  00468E  0E00               	movlw	0
 27409  004690  0100               	movlb	0	; () banked
 27410  004692  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27411  004694  0E03               	movlw	3
 27412  004696  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27413  004698  0E00               	movlw	0
 27414  00469A  0100               	movlb	0	; () banked
 27415  00469C  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27416  00469E  0E0A               	movlw	10
 27417  0046A0  6F7B               	movwf	___awmod@divisor& (0+255),b
 27418  0046A2  0100               	movlb	0	; () banked
 27419  0046A4  51A8               	movf	scale@scl& (0+255),w,b
 27420  0046A6  0100               	movlb	0	; () banked
 27421  0046A8  6F79               	movwf	___awmod@dividend& (0+255),b
 27422  0046AA  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27423  0046AC  BF79               	btfsc	___awmod@dividend& (0+255),7,b
 27424  0046AE  077A               	decf	(___awmod@dividend+1)& (0+255),f,b
 27425  0046B0  EC50  F040         	call	___awmod	;wreg free
 27426  0046B4  C079  F087         	movff	?___awmod,___wmul@multiplier
 27427  0046B8  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27428  0046BC  EC0D  F048         	call	___wmul	;wreg free
 27429  0046C0  0EE2               	movlw	low __powers_
 27430  0046C2  0100               	movlb	0	; () banked
 27431  0046C4  2587               	addwf	?___wmul& (0+255),w,b
 27432  0046C6  6EF6               	movwf	tblptrl,c
 27433  0046C8  0EF1               	movlw	high __powers_
 27434  0046CA  0100               	movlb	0	; () banked
 27435  0046CC  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27436  0046CE  6EF7               	movwf	tblptrh,c
 27437  0046D0                     	if	1	;There are 3 active tblptr bytes
 27438  0046D0  6AF8               	clrf	tblptru,c
 27439  0046D2  0E00               	movlw	low (__mediumconst shr (0+16))
 27440  0046D4  22F8               	addwfc	tblptru,f,c
 27441  0046D6                     	endif
 27442  0046D6  0009               	tblrd		*+
 27443  0046D8  CFF5 F096          	movff	tablat,___ftmul@f2
 27444  0046DC  0009               	tblrd		*+
 27445  0046DE  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27446  0046E2  000A               	tblrd		*-
 27447  0046E4  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27448  0046E8  EC91  F036         	call	___ftmul	;wreg free
 27449  0046EC  D78F               	goto	L22
 27450  0046EE  0012               	return	
 27451  0046F0  D000               	goto	l12812
 27452  0046F2                     l12812:
 27453                           
 27454                           ;doprnt.c: 440: return _powers_[scl];
 27455  0046F2  0100               	movlb	0	; () banked
 27456  0046F4  51A8               	movf	scale@scl& (0+255),w,b
 27457  0046F6  0D03               	mullw	3
 27458  0046F8  0EE2               	movlw	low __powers_
 27459  0046FA  24F3               	addwf	prodl,w,c
 27460  0046FC  6EF6               	movwf	tblptrl,c
 27461  0046FE  0EF1               	movlw	high __powers_
 27462  004700  20F4               	addwfc	prodh,w,c
 27463  004702  6EF7               	movwf	tblptrh,c
 27464  004704                     	if	1	;There are 3 active tblptr bytes
 27465  004704  6AF8               	clrf	tblptru,c
 27466  004706  0E00               	movlw	low (__mediumconst shr (0+16))
 27467  004708  22F8               	addwfc	tblptru,f,c
 27468  00470A                     	endif
 27469  00470A  0009               	tblrd		*+
 27470  00470C  CFF5 F0A2          	movff	tablat,?_scale
 27471  004710  0009               	tblrd		*+
 27472  004712  CFF5 F0A3          	movff	tablat,?_scale+1
 27473  004716  000A               	tblrd		*-
 27474  004718  CFF5 F0A4          	movff	tablat,?_scale+2
 27475  00471C  0012               	return	
 27476                           
 27477                           ; BSR set to: 0
 27478  00471E  0012               	return		;funcret
 27479  004720                     __end_of_scale:
 27480                           	opt stack 0
 27481                           tblptru	equ	0xFF8
 27482                           tblptrh	equ	0xFF7
 27483                           tblptrl	equ	0xFF6
 27484                           tablat	equ	0xFF5
 27485                           prodh	equ	0xFF4
 27486                           prodl	equ	0xFF3
 27487                           intcon	equ	0xFF2
 27488                           intcon2	equ	0xFF1
 27489                           indf0	equ	0xFEF
 27490                           postinc0	equ	0xFEE
 27491                           fsr0h	equ	0xFEA
 27492                           fsr0l	equ	0xFE9
 27493                           wreg	equ	0xFE8
 27494                           indf1	equ	0xFE7
 27495                           postdec1	equ	0xFE5
 27496                           fsr1h	equ	0xFE2
 27497                           fsr1l	equ	0xFE1
 27498                           indf2	equ	0xFDF
 27499                           postinc2	equ	0xFDE
 27500                           postdec2	equ	0xFDD
 27501                           fsr2h	equ	0xFDA
 27502                           fsr2l	equ	0xFD9
 27503                           status	equ	0xFD8
 27504                           
 27505 ;; *************** function _isdigit *****************
 27506 ;; Defined at:
 27507 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 27508 ;; Parameters:    Size  Location     Type
 27509 ;;  c               1    wreg     unsigned char 
 27510 ;; Auto vars:     Size  Location     Type
 27511 ;;  c               1   27[BANK0 ] unsigned char 
 27512 ;; Return value:  Size  Location     Type
 27513 ;;		None               void
 27514 ;; Registers used:
 27515 ;;		wreg, status,2, status,0
 27516 ;; Tracked objects:
 27517 ;;		On entry : 0/0
 27518 ;;		On exit  : 0/0
 27519 ;;		Unchanged: 0/0
 27520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27524 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27525 ;;Total ram usage:        3 bytes
 27526 ;; Hardware stack levels used:    1
 27527 ;; Hardware stack levels required when called:    6
 27528 ;; This function calls:
 27529 ;;		Nothing
 27530 ;; This function is called by:
 27531 ;;		_sprintf
 27532 ;; This function uses a non-reentrant model
 27533 ;;
 27534                           
 27535                           	psect	text61
 27536  0090EA                     __ptext61:
 27537                           	opt stack 0
 27538  0090EA                     _isdigit:
 27539                           	opt stack 22
 27540                           
 27541                           ;incstack = 0
 27542                           ;isdigit@c stored from wreg
 27543  0090EA  0100               	movlb	0	; () banked
 27544  0090EC  6F7B               	movwf	isdigit@c& (0+255),b
 27545                           
 27546                           ; BSR set to: 0
 27547  0090EE  0E00               	movlw	0
 27548  0090F0  0100               	movlb	0	; () banked
 27549  0090F2  6F7A               	movwf	_isdigit$3462& (0+255),b
 27550                           
 27551                           ; BSR set to: 0
 27552  0090F4  0E3A               	movlw	58
 27553  0090F6  0100               	movlb	0	; () banked
 27554  0090F8  617B               	cpfslt	isdigit@c& (0+255),b
 27555  0090FA  D008               	goto	l12824
 27556                           
 27557                           ; BSR set to: 0
 27558  0090FC  0E2F               	movlw	47
 27559  0090FE  0100               	movlb	0	; () banked
 27560  009100  657B               	cpfsgt	isdigit@c& (0+255),b
 27561  009102  D004               	goto	l12824
 27562                           
 27563                           ; BSR set to: 0
 27564  009104  0E01               	movlw	1
 27565  009106  0100               	movlb	0	; () banked
 27566  009108  6F7A               	movwf	_isdigit$3462& (0+255),b
 27567  00910A  D000               	goto	l12824
 27568  00910C                     l12824:
 27569                           
 27570                           ; BSR set to: 0
 27571  00910C  C07A  F079         	movff	_isdigit$3462,??_isdigit
 27572  009110  0100               	movlb	0	; () banked
 27573  009112  3179               	rrcf	??_isdigit& (0+255),w,b
 27574  009114  0012               	return	
 27575                           
 27576                           ; BSR set to: 0
 27577                           
 27578                           ; BSR set to: 0
 27579  009116  0012               	return		;funcret
 27580  009118                     __end_of_isdigit:
 27581                           	opt stack 0
 27582                           tblptru	equ	0xFF8
 27583                           tblptrh	equ	0xFF7
 27584                           tblptrl	equ	0xFF6
 27585                           tablat	equ	0xFF5
 27586                           prodh	equ	0xFF4
 27587                           prodl	equ	0xFF3
 27588                           intcon	equ	0xFF2
 27589                           intcon2	equ	0xFF1
 27590                           indf0	equ	0xFEF
 27591                           postinc0	equ	0xFEE
 27592                           fsr0h	equ	0xFEA
 27593                           fsr0l	equ	0xFE9
 27594                           wreg	equ	0xFE8
 27595                           indf1	equ	0xFE7
 27596                           postdec1	equ	0xFE5
 27597                           fsr1h	equ	0xFE2
 27598                           fsr1l	equ	0xFE1
 27599                           indf2	equ	0xFDF
 27600                           postinc2	equ	0xFDE
 27601                           postdec2	equ	0xFDD
 27602                           fsr2h	equ	0xFDA
 27603                           fsr2l	equ	0xFD9
 27604                           status	equ	0xFD8
 27605                           
 27606 ;; *************** function _fround *****************
 27607 ;; Defined at:
 27608 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27609 ;; Parameters:    Size  Location     Type
 27610 ;;  prec            1    wreg     unsigned char 
 27611 ;; Auto vars:     Size  Location     Type
 27612 ;;  prec            1   75[BANK0 ] unsigned char 
 27613 ;; Return value:  Size  Location     Type
 27614 ;;                  3   66[BANK0 ] unsigned char 
 27615 ;; Registers used:
 27616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27617 ;; Tracked objects:
 27618 ;;		On entry : 0/0
 27619 ;;		On exit  : 0/0
 27620 ;;		Unchanged: 0/0
 27621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27622 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27623 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27625 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27626 ;;Total ram usage:       10 bytes
 27627 ;; Hardware stack levels used:    1
 27628 ;; Hardware stack levels required when called:    8
 27629 ;; This function calls:
 27630 ;;		___awdiv
 27631 ;;		___awmod
 27632 ;;		___ftmul
 27633 ;;		___wmul
 27634 ;; This function is called by:
 27635 ;;		_sprintf
 27636 ;; This function uses a non-reentrant model
 27637 ;;
 27638                           
 27639                           	psect	text62
 27640  005764                     __ptext62:
 27641                           	opt stack 0
 27642  005764                     _fround:
 27643                           	opt stack 20
 27644                           
 27645                           ; BSR set to: 0
 27646                           ;incstack = 0
 27647                           ;fround@prec stored from wreg
 27648  005764  0100               	movlb	0	; () banked
 27649  005766  6FAB               	movwf	fround@prec& (0+255),b
 27650                           
 27651                           ; BSR set to: 0
 27652                           ;doprnt.c: 413: if(prec>=110)
 27653  005768  0E6D               	movlw	109
 27654  00576A  0100               	movlb	0	; () banked
 27655  00576C  65AB               	cpfsgt	fround@prec& (0+255),b
 27656  00576E  D0C4               	goto	l12766
 27657                           
 27658                           ; BSR set to: 0
 27659                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27660  005770  0E00               	movlw	0
 27661  005772  0100               	movlb	0	; () banked
 27662  005774  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27663  005776  0E03               	movlw	3
 27664  005778  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27665  00577A  0E00               	movlw	0
 27666  00577C  0100               	movlb	0	; () banked
 27667  00577E  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27668  005780  0E0A               	movlw	10
 27669  005782  6F81               	movwf	___awdiv@divisor& (0+255),b
 27670  005784  0E00               	movlw	0
 27671  005786  0100               	movlb	0	; () banked
 27672  005788  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27673  00578A  0E64               	movlw	100
 27674  00578C  6F7B               	movwf	___awmod@divisor& (0+255),b
 27675  00578E  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27676  005792  0100               	movlb	0	; () banked
 27677  005794  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27678  005796  EC50  F040         	call	___awmod	;wreg free
 27679  00579A  C079  F07F         	movff	?___awmod,___awdiv@dividend
 27680  00579E  C07A  F080         	movff	?___awmod+1,___awdiv@dividend+1
 27681  0057A2  EC03  F03E         	call	___awdiv	;wreg free
 27682  0057A6  0E09               	movlw	9
 27683  0057A8  0100               	movlb	0	; () banked
 27684  0057AA  257F               	addwf	?___awdiv& (0+255),w,b
 27685  0057AC  0100               	movlb	0	; () banked
 27686  0057AE  6F87               	movwf	___wmul@multiplier& (0+255),b
 27687  0057B0  0E00               	movlw	0
 27688  0057B2  0100               	movlb	0	; () banked
 27689  0057B4  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27690  0057B6  0100               	movlb	0	; () banked
 27691  0057B8  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27692  0057BA  EC0D  F048         	call	___wmul	;wreg free
 27693  0057BE  0EBB               	movlw	low __npowers_
 27694  0057C0  0100               	movlb	0	; () banked
 27695  0057C2  2587               	addwf	?___wmul& (0+255),w,b
 27696  0057C4  6EF6               	movwf	tblptrl,c
 27697  0057C6  0EF1               	movlw	high __npowers_
 27698  0057C8  0100               	movlb	0	; () banked
 27699  0057CA  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27700  0057CC  6EF7               	movwf	tblptrh,c
 27701  0057CE                     	if	1	;There are 3 active tblptr bytes
 27702  0057CE  6AF8               	clrf	tblptru,c
 27703  0057D0  0E00               	movlw	low (__mediumconst shr (0+16))
 27704  0057D2  22F8               	addwfc	tblptru,f,c
 27705  0057D4                     	endif
 27706  0057D4  0009               	tblrd		*+
 27707  0057D6  CFF5 F096          	movff	tablat,___ftmul@f2
 27708  0057DA  0009               	tblrd		*+
 27709  0057DC  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27710  0057E0  000A               	tblrd		*-
 27711  0057E2  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27712  0057E6  0E00               	movlw	0
 27713  0057E8  0100               	movlb	0	; () banked
 27714  0057EA  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27715  0057EC  0E64               	movlw	100
 27716  0057EE  6F81               	movwf	___awdiv@divisor& (0+255),b
 27717  0057F0  C0AB  F07F         	movff	fround@prec,___awdiv@dividend
 27718  0057F4  0100               	movlb	0	; () banked
 27719  0057F6  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27720  0057F8  EC03  F03E         	call	___awdiv	;wreg free
 27721  0057FC  0E12               	movlw	18
 27722  0057FE  0100               	movlb	0	; () banked
 27723  005800  257F               	addwf	?___awdiv& (0+255),w,b
 27724  005802  0100               	movlb	0	; () banked
 27725  005804  6F87               	movwf	___wmul@multiplier& (0+255),b
 27726  005806  0E00               	movlw	0
 27727  005808  0100               	movlb	0	; () banked
 27728  00580A  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27729  00580C  0100               	movlb	0	; () banked
 27730  00580E  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27731  005810  0E00               	movlw	0
 27732  005812  0100               	movlb	0	; () banked
 27733  005814  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27734  005816  0E03               	movlw	3
 27735  005818  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27736  00581A  EC0D  F048         	call	___wmul	;wreg free
 27737  00581E  0EBB               	movlw	low __npowers_
 27738  005820  0100               	movlb	0	; () banked
 27739  005822  2587               	addwf	?___wmul& (0+255),w,b
 27740  005824  6EF6               	movwf	tblptrl,c
 27741  005826  0EF1               	movlw	high __npowers_
 27742  005828  0100               	movlb	0	; () banked
 27743  00582A  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27744  00582C  6EF7               	movwf	tblptrh,c
 27745  00582E                     	if	1	;There are 3 active tblptr bytes
 27746  00582E  6AF8               	clrf	tblptru,c
 27747  005830  0E00               	movlw	low (__mediumconst shr (0+16))
 27748  005832  22F8               	addwfc	tblptru,f,c
 27749  005834                     	endif
 27750  005834  0009               	tblrd		*+
 27751  005836  CFF5 F093          	movff	tablat,___ftmul@f1
 27752  00583A  0009               	tblrd		*+
 27753  00583C  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27754  005840  000A               	tblrd		*-
 27755  005842  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27756  005846  EC91  F036         	call	___ftmul	;wreg free
 27757  00584A  C093  F0A8         	movff	?___ftmul,_fround$3784
 27758  00584E  C094  F0A9         	movff	?___ftmul+1,_fround$3784+1
 27759  005852  C095  F0AA         	movff	?___ftmul+2,_fround$3784+2
 27760                           
 27761                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27762  005856  0E00               	movlw	0
 27763  005858  0100               	movlb	0	; () banked
 27764  00585A  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27765  00585C  0E03               	movlw	3
 27766  00585E  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27767  005860  0E00               	movlw	0
 27768  005862  0100               	movlb	0	; () banked
 27769  005864  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27770  005866  0E0A               	movlw	10
 27771  005868  6F7B               	movwf	___awmod@divisor& (0+255),b
 27772  00586A  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27773  00586E  0100               	movlb	0	; () banked
 27774  005870  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27775  005872  EC50  F040         	call	___awmod	;wreg free
 27776  005876  C079  F087         	movff	?___awmod,___wmul@multiplier
 27777  00587A  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27778  00587E  EC0D  F048         	call	___wmul	;wreg free
 27779  005882  0EBB               	movlw	low __npowers_
 27780  005884  0100               	movlb	0	; () banked
 27781  005886  2587               	addwf	?___wmul& (0+255),w,b
 27782  005888  6EF6               	movwf	tblptrl,c
 27783  00588A  0EF1               	movlw	high __npowers_
 27784  00588C  0100               	movlb	0	; () banked
 27785  00588E  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27786  005890  6EF7               	movwf	tblptrh,c
 27787  005892                     	if	1	;There are 3 active tblptr bytes
 27788  005892  6AF8               	clrf	tblptru,c
 27789  005894  0E00               	movlw	low (__mediumconst shr (0+16))
 27790  005896  22F8               	addwfc	tblptru,f,c
 27791  005898                     	endif
 27792  005898  0009               	tblrd		*+
 27793  00589A  CFF5 F096          	movff	tablat,___ftmul@f2
 27794  00589E  0009               	tblrd		*+
 27795  0058A0  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27796  0058A4  000A               	tblrd		*-
 27797  0058A6  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27798  0058AA  C0A8  F093         	movff	_fround$3784,___ftmul@f1
 27799  0058AE  C0A9  F094         	movff	_fround$3784+1,___ftmul@f1+1
 27800  0058B2  C0AA  F095         	movff	_fround$3784+2,___ftmul@f1+2
 27801  0058B6  EC91  F036         	call	___ftmul	;wreg free
 27802  0058BA  C093  F0A5         	movff	?___ftmul,_fround$3785
 27803  0058BE  C094  F0A6         	movff	?___ftmul+1,_fround$3785+1
 27804  0058C2  C095  F0A7         	movff	?___ftmul+2,_fround$3785+2
 27805                           
 27806                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27807  0058C6  C0A5  F093         	movff	_fround$3785,___ftmul@f1
 27808  0058CA  C0A6  F094         	movff	_fround$3785+1,___ftmul@f1+1
 27809  0058CE  C0A7  F095         	movff	_fround$3785+2,___ftmul@f1+2
 27810  0058D2  0E00               	movlw	0
 27811  0058D4  0100               	movlb	0	; () banked
 27812  0058D6  6F96               	movwf	___ftmul@f2& (0+255),b
 27813  0058D8  0E00               	movlw	0
 27814  0058DA  0100               	movlb	0	; () banked
 27815  0058DC  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 27816  0058DE  0E3F               	movlw	63
 27817  0058E0  0100               	movlb	0	; () banked
 27818  0058E2  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 27819  0058E4  EC91  F036         	call	___ftmul	;wreg free
 27820  0058E8  C093  F0A2         	movff	?___ftmul,?_fround
 27821  0058EC  C094  F0A3         	movff	?___ftmul+1,?_fround+1
 27822  0058F0  C095  F0A4         	movff	?___ftmul+2,?_fround+2
 27823  0058F4  0012               	return	
 27824  0058F6  D07A               	goto	l12774
 27825  0058F8                     l12766:
 27826                           
 27827                           ;doprnt.c: 415: else if(prec > 10)
 27828  0058F8  0E0A               	movlw	10
 27829  0058FA  0100               	movlb	0	; () banked
 27830  0058FC  65AB               	cpfsgt	fround@prec& (0+255),b
 27831  0058FE  D076               	goto	l12774
 27832                           
 27833                           ; BSR set to: 0
 27834                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27835  005900  0E00               	movlw	0
 27836  005902  0100               	movlb	0	; () banked
 27837  005904  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27838  005906  0E03               	movlw	3
 27839  005908  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27840  00590A  0E00               	movlw	0
 27841  00590C  0100               	movlb	0	; () banked
 27842  00590E  6F7C               	movwf	(___awmod@divisor+1)& (0+255),b
 27843  005910  0E0A               	movlw	10
 27844  005912  6F7B               	movwf	___awmod@divisor& (0+255),b
 27845  005914  C0AB  F079         	movff	fround@prec,___awmod@dividend
 27846  005918  0100               	movlb	0	; () banked
 27847  00591A  6B7A               	clrf	(___awmod@dividend+1)& (0+255),b
 27848  00591C  EC50  F040         	call	___awmod	;wreg free
 27849  005920  C079  F087         	movff	?___awmod,___wmul@multiplier
 27850  005924  C07A  F088         	movff	?___awmod+1,___wmul@multiplier+1
 27851  005928  EC0D  F048         	call	___wmul	;wreg free
 27852  00592C  0EBB               	movlw	low __npowers_
 27853  00592E  0100               	movlb	0	; () banked
 27854  005930  2587               	addwf	?___wmul& (0+255),w,b
 27855  005932  6EF6               	movwf	tblptrl,c
 27856  005934  0EF1               	movlw	high __npowers_
 27857  005936  0100               	movlb	0	; () banked
 27858  005938  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27859  00593A  6EF7               	movwf	tblptrh,c
 27860  00593C                     	if	1	;There are 3 active tblptr bytes
 27861  00593C  6AF8               	clrf	tblptru,c
 27862  00593E  0E00               	movlw	low (__mediumconst shr (0+16))
 27863  005940  22F8               	addwfc	tblptru,f,c
 27864  005942                     	endif
 27865  005942  0009               	tblrd		*+
 27866  005944  CFF5 F096          	movff	tablat,___ftmul@f2
 27867  005948  0009               	tblrd		*+
 27868  00594A  CFF5 F097          	movff	tablat,___ftmul@f2+1
 27869  00594E  000A               	tblrd		*-
 27870  005950  CFF5 F098          	movff	tablat,___ftmul@f2+2
 27871  005954  0E00               	movlw	0
 27872  005956  0100               	movlb	0	; () banked
 27873  005958  6F82               	movwf	(___awdiv@divisor+1)& (0+255),b
 27874  00595A  0E0A               	movlw	10
 27875  00595C  6F81               	movwf	___awdiv@divisor& (0+255),b
 27876  00595E  C0AB  F07F         	movff	fround@prec,___awdiv@dividend
 27877  005962  0100               	movlb	0	; () banked
 27878  005964  6B80               	clrf	(___awdiv@dividend+1)& (0+255),b
 27879  005966  EC03  F03E         	call	___awdiv	;wreg free
 27880  00596A  0E09               	movlw	9
 27881  00596C  0100               	movlb	0	; () banked
 27882  00596E  257F               	addwf	?___awdiv& (0+255),w,b
 27883  005970  0100               	movlb	0	; () banked
 27884  005972  6F87               	movwf	___wmul@multiplier& (0+255),b
 27885  005974  0E00               	movlw	0
 27886  005976  0100               	movlb	0	; () banked
 27887  005978  2180               	addwfc	(?___awdiv+1)& (0+255),w,b
 27888  00597A  0100               	movlb	0	; () banked
 27889  00597C  6F88               	movwf	(___wmul@multiplier+1)& (0+255),b
 27890  00597E  0E00               	movlw	0
 27891  005980  0100               	movlb	0	; () banked
 27892  005982  6F8A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27893  005984  0E03               	movlw	3
 27894  005986  6F89               	movwf	___wmul@multiplicand& (0+255),b
 27895  005988  EC0D  F048         	call	___wmul	;wreg free
 27896  00598C  0EBB               	movlw	low __npowers_
 27897  00598E  0100               	movlb	0	; () banked
 27898  005990  2587               	addwf	?___wmul& (0+255),w,b
 27899  005992  6EF6               	movwf	tblptrl,c
 27900  005994  0EF1               	movlw	high __npowers_
 27901  005996  0100               	movlb	0	; () banked
 27902  005998  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 27903  00599A  6EF7               	movwf	tblptrh,c
 27904  00599C                     	if	1	;There are 3 active tblptr bytes
 27905  00599C  6AF8               	clrf	tblptru,c
 27906  00599E  0E00               	movlw	low (__mediumconst shr (0+16))
 27907  0059A0  22F8               	addwfc	tblptru,f,c
 27908  0059A2                     	endif
 27909  0059A2  0009               	tblrd		*+
 27910  0059A4  CFF5 F093          	movff	tablat,___ftmul@f1
 27911  0059A8  0009               	tblrd		*+
 27912  0059AA  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27913  0059AE  000A               	tblrd		*-
 27914  0059B0  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27915  0059B4  EC91  F036         	call	___ftmul	;wreg free
 27916  0059B8  C093  F0A8         	movff	?___ftmul,_fround$3784
 27917  0059BC  C094  F0A9         	movff	?___ftmul+1,_fround$3784+1
 27918  0059C0  C095  F0AA         	movff	?___ftmul+2,_fround$3784+2
 27919                           
 27920                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27921  0059C4  C0A8  F093         	movff	_fround$3784,___ftmul@f1
 27922  0059C8  C0A9  F094         	movff	_fround$3784+1,___ftmul@f1+1
 27923  0059CC  C0AA  F095         	movff	_fround$3784+2,___ftmul@f1+2
 27924  0059D0  0E00               	movlw	0
 27925  0059D2  0100               	movlb	0	; () banked
 27926  0059D4  6F96               	movwf	___ftmul@f2& (0+255),b
 27927  0059D6  0E00               	movlw	0
 27928  0059D8  0100               	movlb	0	; () banked
 27929  0059DA  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 27930  0059DC  0E3F               	movlw	63
 27931  0059DE  0100               	movlb	0	; () banked
 27932  0059E0  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 27933  0059E2  EC91  F036         	call	___ftmul	;wreg free
 27934  0059E6  D780               	goto	L23
 27935  0059E8  0012               	return	
 27936  0059EA  D000               	goto	l12774
 27937  0059EC                     l12774:
 27938                           
 27939                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27940  0059EC  0100               	movlb	0	; () banked
 27941  0059EE  51AB               	movf	fround@prec& (0+255),w,b
 27942  0059F0  0D03               	mullw	3
 27943  0059F2  0EBB               	movlw	low __npowers_
 27944  0059F4  24F3               	addwf	prodl,w,c
 27945  0059F6  6EF6               	movwf	tblptrl,c
 27946  0059F8  0EF1               	movlw	high __npowers_
 27947  0059FA  20F4               	addwfc	prodh,w,c
 27948  0059FC  6EF7               	movwf	tblptrh,c
 27949  0059FE                     	if	1	;There are 3 active tblptr bytes
 27950  0059FE  6AF8               	clrf	tblptru,c
 27951  005A00  0E00               	movlw	low (__mediumconst shr (0+16))
 27952  005A02  22F8               	addwfc	tblptru,f,c
 27953  005A04                     	endif
 27954  005A04  0009               	tblrd		*+
 27955  005A06  CFF5 F093          	movff	tablat,___ftmul@f1
 27956  005A0A  0009               	tblrd		*+
 27957  005A0C  CFF5 F094          	movff	tablat,___ftmul@f1+1
 27958  005A10  000A               	tblrd		*-
 27959  005A12  CFF5 F095          	movff	tablat,___ftmul@f1+2
 27960  005A16  0E00               	movlw	0
 27961  005A18  0100               	movlb	0	; () banked
 27962  005A1A  6F96               	movwf	___ftmul@f2& (0+255),b
 27963  005A1C  0E00               	movlw	0
 27964  005A1E  0100               	movlb	0	; () banked
 27965  005A20  6F97               	movwf	(___ftmul@f2+1)& (0+255),b
 27966  005A22  0E3F               	movlw	63
 27967  005A24  0100               	movlb	0	; () banked
 27968  005A26  6F98               	movwf	(___ftmul@f2+2)& (0+255),b
 27969  005A28  EC91  F036         	call	___ftmul	;wreg free
 27970  005A2C  C093  F0A2         	movff	?___ftmul,?_fround
 27971  005A30  C094  F0A3         	movff	?___ftmul+1,?_fround+1
 27972  005A34  C095  F0A4         	movff	?___ftmul+2,?_fround+2
 27973  005A38  0012               	return	
 27974  005A3A  0012               	return		;funcret
 27975  005A3C                     __end_of_fround:
 27976                           	opt stack 0
 27977                           tblptru	equ	0xFF8
 27978                           tblptrh	equ	0xFF7
 27979                           tblptrl	equ	0xFF6
 27980                           tablat	equ	0xFF5
 27981                           prodh	equ	0xFF4
 27982                           prodl	equ	0xFF3
 27983                           intcon	equ	0xFF2
 27984                           intcon2	equ	0xFF1
 27985                           indf0	equ	0xFEF
 27986                           postinc0	equ	0xFEE
 27987                           fsr0h	equ	0xFEA
 27988                           fsr0l	equ	0xFE9
 27989                           wreg	equ	0xFE8
 27990                           indf1	equ	0xFE7
 27991                           postdec1	equ	0xFE5
 27992                           fsr1h	equ	0xFE2
 27993                           fsr1l	equ	0xFE1
 27994                           indf2	equ	0xFDF
 27995                           postinc2	equ	0xFDE
 27996                           postdec2	equ	0xFDD
 27997                           fsr2h	equ	0xFDA
 27998                           fsr2l	equ	0xFD9
 27999                           status	equ	0xFD8
 28000                           
 28001 ;; *************** function ___wmul *****************
 28002 ;; Defined at:
 28003 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 28004 ;; Parameters:    Size  Location     Type
 28005 ;;  multiplier      2   39[BANK0 ] unsigned int 
 28006 ;;  multiplicand    2   41[BANK0 ] unsigned int 
 28007 ;; Auto vars:     Size  Location     Type
 28008 ;;  product         2   43[BANK0 ] unsigned int 
 28009 ;; Return value:  Size  Location     Type
 28010 ;;                  2   39[BANK0 ] unsigned int 
 28011 ;; Registers used:
 28012 ;;		wreg, status,2, status,0, prodl, prodh
 28013 ;; Tracked objects:
 28014 ;;		On entry : 0/0
 28015 ;;		On exit  : 0/0
 28016 ;;		Unchanged: 0/0
 28017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28021 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28022 ;;Total ram usage:        6 bytes
 28023 ;; Hardware stack levels used:    1
 28024 ;; Hardware stack levels required when called:    6
 28025 ;; This function calls:
 28026 ;;		Nothing
 28027 ;; This function is called by:
 28028 ;;		_fround
 28029 ;;		_scale
 28030 ;;		_sprintf
 28031 ;; This function uses a non-reentrant model
 28032 ;;
 28033                           
 28034                           	psect	text63
 28035  00901A                     __ptext63:
 28036                           	opt stack 0
 28037  00901A                     ___wmul:
 28038                           	opt stack 21
 28039                           
 28040                           ;incstack = 0
 28041  00901A  0100               	movlb	0	; () banked
 28042  00901C  5187               	movf	___wmul@multiplier& (0+255),w,b
 28043  00901E  0100               	movlb	0	; () banked
 28044  009020  0389               	mulwf	___wmul@multiplicand& (0+255),b
 28045  009022  CFF3 F08B          	movff	prodl,___wmul@product
 28046  009026  CFF4 F08C          	movff	prodh,___wmul@product+1
 28047  00902A  0100               	movlb	0	; () banked
 28048  00902C  5187               	movf	___wmul@multiplier& (0+255),w,b
 28049  00902E  0100               	movlb	0	; () banked
 28050  009030  038A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28051  009032  50F3               	movf	prodl,w,c
 28052  009034  0100               	movlb	0	; () banked
 28053  009036  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 28054  009038  0100               	movlb	0	; () banked
 28055  00903A  5188               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28056  00903C  0100               	movlb	0	; () banked
 28057  00903E  0389               	mulwf	___wmul@multiplicand& (0+255),b
 28058  009040  50F3               	movf	prodl,w,c
 28059  009042  0100               	movlb	0	; () banked
 28060  009044  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 28061                           
 28062                           ; BSR set to: 0
 28063  009046  C08B  F087         	movff	___wmul@product,?___wmul
 28064  00904A  C08C  F088         	movff	___wmul@product+1,?___wmul+1
 28065  00904E  0012               	return	
 28066                           
 28067                           ; BSR set to: 0
 28068                           
 28069                           ; BSR set to: 0
 28070  009050  0012               	return		;funcret
 28071  009052                     __end_of___wmul:
 28072                           	opt stack 0
 28073                           tblptru	equ	0xFF8
 28074                           tblptrh	equ	0xFF7
 28075                           tblptrl	equ	0xFF6
 28076                           tablat	equ	0xFF5
 28077                           prodh	equ	0xFF4
 28078                           prodl	equ	0xFF3
 28079                           intcon	equ	0xFF2
 28080                           intcon2	equ	0xFF1
 28081                           indf0	equ	0xFEF
 28082                           postinc0	equ	0xFEE
 28083                           fsr0h	equ	0xFEA
 28084                           fsr0l	equ	0xFE9
 28085                           wreg	equ	0xFE8
 28086                           indf1	equ	0xFE7
 28087                           postdec1	equ	0xFE5
 28088                           fsr1h	equ	0xFE2
 28089                           fsr1l	equ	0xFE1
 28090                           indf2	equ	0xFDF
 28091                           postinc2	equ	0xFDE
 28092                           postdec2	equ	0xFDD
 28093                           fsr2h	equ	0xFDA
 28094                           fsr2l	equ	0xFD9
 28095                           status	equ	0xFD8
 28096                           
 28097 ;; *************** function ___ftmul *****************
 28098 ;; Defined at:
 28099 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 28100 ;; Parameters:    Size  Location     Type
 28101 ;;  f1              3   51[BANK0 ] float 
 28102 ;;  f2              3   54[BANK0 ] float 
 28103 ;; Auto vars:     Size  Location     Type
 28104 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
 28105 ;;  sign            1   65[BANK0 ] unsigned char 
 28106 ;;  cntr            1   64[BANK0 ] unsigned char 
 28107 ;;  exp             1   60[BANK0 ] unsigned char 
 28108 ;; Return value:  Size  Location     Type
 28109 ;;                  3   51[BANK0 ] float 
 28110 ;; Registers used:
 28111 ;;		wreg, status,2, status,0, cstack
 28112 ;; Tracked objects:
 28113 ;;		On entry : 0/0
 28114 ;;		On exit  : 0/0
 28115 ;;		Unchanged: 0/0
 28116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28117 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28118 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28119 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28120 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28121 ;;Total ram usage:       15 bytes
 28122 ;; Hardware stack levels used:    1
 28123 ;; Hardware stack levels required when called:    7
 28124 ;; This function calls:
 28125 ;;		___ftpack
 28126 ;; This function is called by:
 28127 ;;		_ReadVoltage
 28128 ;;		_fround
 28129 ;;		_scale
 28130 ;;		_sprintf
 28131 ;; This function uses a non-reentrant model
 28132 ;;
 28133                           
 28134                           	psect	text64
 28135  006D22                     __ptext64:
 28136                           	opt stack 0
 28137  006D22                     ___ftmul:
 28138                           	opt stack 20
 28139                           
 28140                           ; BSR set to: 0
 28141                           ;incstack = 0
 28142  006D22  C095  F099         	movff	___ftmul@f1+2,??___ftmul
 28143  006D26  0100               	movlb	0	; () banked
 28144  006D28  6B9A               	clrf	(??___ftmul+1)& (0+255),b
 28145  006D2A  6B9B               	clrf	(??___ftmul+2)& (0+255),b
 28146  006D2C  0100               	movlb	0	; () banked
 28147  006D2E  3594               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 28148  006D30  0100               	movlb	0	; () banked
 28149  006D32  3799               	rlcf	??___ftmul& (0+255),f,b
 28150  006D34  E301               	bnc	u14651
 28151  006D36  819A               	bsf	(??___ftmul+1)& (0+255),0,b
 28152  006D38                     u14651:
 28153  006D38  0100               	movlb	0	; () banked
 28154  006D3A  5199               	movf	??___ftmul& (0+255),w,b
 28155  006D3C  0100               	movlb	0	; () banked
 28156  006D3E  6F9C               	movwf	___ftmul@exp& (0+255),b
 28157  006D40  0100               	movlb	0	; () banked
 28158  006D42  519C               	movf	___ftmul@exp& (0+255),w,b
 28159  006D44  A4D8               	btfss	status,2,c
 28160  006D46  D00A               	goto	l12486
 28161                           
 28162                           ; BSR set to: 0
 28163  006D48  0E00               	movlw	0
 28164  006D4A  0100               	movlb	0	; () banked
 28165  006D4C  6F93               	movwf	?___ftmul& (0+255),b
 28166  006D4E  0E00               	movlw	0
 28167  006D50  0100               	movlb	0	; () banked
 28168  006D52  6F94               	movwf	(?___ftmul+1)& (0+255),b
 28169  006D54  0E00               	movlw	0
 28170  006D56  0100               	movlb	0	; () banked
 28171  006D58  6F95               	movwf	(?___ftmul+2)& (0+255),b
 28172                           
 28173                           ; BSR set to: 0
 28174  006D5A  0012               	return	
 28175  006D5C                     l12486:
 28176                           
 28177                           ; BSR set to: 0
 28178  006D5C  C098  F099         	movff	___ftmul@f2+2,??___ftmul
 28179  006D60  0100               	movlb	0	; () banked
 28180  006D62  6B9A               	clrf	(??___ftmul+1)& (0+255),b
 28181  006D64  6B9B               	clrf	(??___ftmul+2)& (0+255),b
 28182  006D66  0100               	movlb	0	; () banked
 28183  006D68  3597               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 28184  006D6A  0100               	movlb	0	; () banked
 28185  006D6C  3799               	rlcf	??___ftmul& (0+255),f,b
 28186  006D6E  E301               	bnc	u14671
 28187  006D70  819A               	bsf	(??___ftmul+1)& (0+255),0,b
 28188  006D72                     u14671:
 28189  006D72  0100               	movlb	0	; () banked
 28190  006D74  5199               	movf	??___ftmul& (0+255),w,b
 28191  006D76  0100               	movlb	0	; () banked
 28192  006D78  6FA1               	movwf	___ftmul@sign& (0+255),b
 28193  006D7A  0100               	movlb	0	; () banked
 28194  006D7C  51A1               	movf	___ftmul@sign& (0+255),w,b
 28195  006D7E  A4D8               	btfss	status,2,c
 28196  006D80  D00A               	goto	l12492
 28197                           
 28198                           ; BSR set to: 0
 28199  006D82  0E00               	movlw	0
 28200  006D84  0100               	movlb	0	; () banked
 28201  006D86  6F93               	movwf	?___ftmul& (0+255),b
 28202  006D88  0E00               	movlw	0
 28203  006D8A  0100               	movlb	0	; () banked
 28204  006D8C  6F94               	movwf	(?___ftmul+1)& (0+255),b
 28205  006D8E  0E00               	movlw	0
 28206  006D90  0100               	movlb	0	; () banked
 28207  006D92  6F95               	movwf	(?___ftmul+2)& (0+255),b
 28208                           
 28209                           ; BSR set to: 0
 28210  006D94  0012               	return	
 28211  006D96                     l12492:
 28212                           
 28213                           ; BSR set to: 0
 28214  006D96  0100               	movlb	0	; () banked
 28215  006D98  51A1               	movf	___ftmul@sign& (0+255),w,b
 28216  006D9A  0F7B               	addlw	123
 28217  006D9C  0100               	movlb	0	; () banked
 28218  006D9E  279C               	addwf	___ftmul@exp& (0+255),f,b
 28219                           
 28220                           ; BSR set to: 0
 28221  006DA0  C095  F0A1         	movff	___ftmul@f1+2,___ftmul@sign
 28222  006DA4  0100               	movlb	0	; () banked
 28223  006DA6  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28224  006DA8  0100               	movlb	0	; () banked
 28225  006DAA  1BA1               	xorwf	___ftmul@sign& (0+255),f,b
 28226  006DAC  0E80               	movlw	128
 28227  006DAE  0100               	movlb	0	; () banked
 28228  006DB0  17A1               	andwf	___ftmul@sign& (0+255),f,b
 28229                           
 28230                           ; BSR set to: 0
 28231  006DB2  0100               	movlb	0	; () banked
 28232  006DB4  8F94               	bsf	(___ftmul@f1+1)& (0+255),7,b
 28233                           
 28234                           ; BSR set to: 0
 28235  006DB6  0100               	movlb	0	; () banked
 28236  006DB8  8F97               	bsf	(___ftmul@f2+1)& (0+255),7,b
 28237                           
 28238                           ; BSR set to: 0
 28239  006DBA  0EFF               	movlw	255
 28240  006DBC  0100               	movlb	0	; () banked
 28241  006DBE  1796               	andwf	___ftmul@f2& (0+255),f,b
 28242  006DC0  0EFF               	movlw	255
 28243  006DC2  0100               	movlb	0	; () banked
 28244  006DC4  1797               	andwf	(___ftmul@f2+1)& (0+255),f,b
 28245  006DC6  0E00               	movlw	0
 28246  006DC8  0100               	movlb	0	; () banked
 28247  006DCA  1798               	andwf	(___ftmul@f2+2)& (0+255),f,b
 28248                           
 28249                           ; BSR set to: 0
 28250  006DCC  0E00               	movlw	0
 28251  006DCE  0100               	movlb	0	; () banked
 28252  006DD0  6F9D               	movwf	___ftmul@f3_as_product& (0+255),b
 28253  006DD2  0E00               	movlw	0
 28254  006DD4  0100               	movlb	0	; () banked
 28255  006DD6  6F9E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 28256  006DD8  0E00               	movlw	0
 28257  006DDA  0100               	movlb	0	; () banked
 28258  006DDC  6F9F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 28259                           
 28260                           ; BSR set to: 0
 28261  006DDE  0E07               	movlw	7
 28262  006DE0  0100               	movlb	0	; () banked
 28263  006DE2  6FA0               	movwf	___ftmul@cntr& (0+255),b
 28264  006DE4  D000               	goto	l12506
 28265  006DE6                     l12506:
 28266                           
 28267                           ; BSR set to: 0
 28268  006DE6  0100               	movlb	0	; () banked
 28269  006DE8  A193               	btfss	___ftmul@f1& (0+255),0,b
 28270  006DEA  D00D               	goto	l12510
 28271                           
 28272                           ; BSR set to: 0
 28273  006DEC  0100               	movlb	0	; () banked
 28274  006DEE  5196               	movf	___ftmul@f2& (0+255),w,b
 28275  006DF0  0100               	movlb	0	; () banked
 28276  006DF2  279D               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28277  006DF4  0100               	movlb	0	; () banked
 28278  006DF6  5197               	movf	(___ftmul@f2+1)& (0+255),w,b
 28279  006DF8  0100               	movlb	0	; () banked
 28280  006DFA  239E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28281  006DFC  0100               	movlb	0	; () banked
 28282  006DFE  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28283  006E00  0100               	movlb	0	; () banked
 28284  006E02  239F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28285  006E04  D000               	goto	l12510
 28286  006E06                     l12510:
 28287                           
 28288                           ; BSR set to: 0
 28289  006E06  0100               	movlb	0	; () banked
 28290  006E08  90D8               	bcf	status,0,c
 28291  006E0A  3395               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28292  006E0C  3394               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28293  006E0E  3393               	rrcf	___ftmul@f1& (0+255),f,b
 28294  006E10  0100               	movlb	0	; () banked
 28295  006E12  90D8               	bcf	status,0,c
 28296  006E14  3796               	rlcf	___ftmul@f2& (0+255),f,b
 28297  006E16  3797               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 28298  006E18  3798               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 28299                           
 28300                           ; BSR set to: 0
 28301  006E1A  0100               	movlb	0	; () banked
 28302  006E1C  2FA0               	decfsz	___ftmul@cntr& (0+255),f,b
 28303  006E1E  D7E3               	goto	l12506
 28304  006E20  D000               	goto	l12514
 28305  006E22                     l12514:
 28306                           
 28307                           ; BSR set to: 0
 28308  006E22  0E09               	movlw	9
 28309  006E24  0100               	movlb	0	; () banked
 28310  006E26  6FA0               	movwf	___ftmul@cntr& (0+255),b
 28311  006E28  D000               	goto	l12516
 28312  006E2A                     l12516:
 28313                           
 28314                           ; BSR set to: 0
 28315  006E2A  0100               	movlb	0	; () banked
 28316  006E2C  A193               	btfss	___ftmul@f1& (0+255),0,b
 28317  006E2E  D00D               	goto	l12520
 28318                           
 28319                           ; BSR set to: 0
 28320  006E30  0100               	movlb	0	; () banked
 28321  006E32  5196               	movf	___ftmul@f2& (0+255),w,b
 28322  006E34  0100               	movlb	0	; () banked
 28323  006E36  279D               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28324  006E38  0100               	movlb	0	; () banked
 28325  006E3A  5197               	movf	(___ftmul@f2+1)& (0+255),w,b
 28326  006E3C  0100               	movlb	0	; () banked
 28327  006E3E  239E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28328  006E40  0100               	movlb	0	; () banked
 28329  006E42  5198               	movf	(___ftmul@f2+2)& (0+255),w,b
 28330  006E44  0100               	movlb	0	; () banked
 28331  006E46  239F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28332  006E48  D000               	goto	l12520
 28333  006E4A                     l12520:
 28334                           
 28335                           ; BSR set to: 0
 28336  006E4A  0100               	movlb	0	; () banked
 28337  006E4C  90D8               	bcf	status,0,c
 28338  006E4E  3395               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28339  006E50  3394               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28340  006E52  3393               	rrcf	___ftmul@f1& (0+255),f,b
 28341  006E54  0100               	movlb	0	; () banked
 28342  006E56  90D8               	bcf	status,0,c
 28343  006E58  339F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 28344  006E5A  339E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 28345  006E5C  339D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 28346                           
 28347                           ; BSR set to: 0
 28348  006E5E  0100               	movlb	0	; () banked
 28349  006E60  2FA0               	decfsz	___ftmul@cntr& (0+255),f,b
 28350  006E62  D7E3               	goto	l12516
 28351  006E64  D000               	goto	l12524
 28352  006E66                     l12524:
 28353                           
 28354                           ; BSR set to: 0
 28355  006E66  C09D  F079         	movff	___ftmul@f3_as_product,___ftpack@arg
 28356  006E6A  C09E  F07A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 28357  006E6E  C09F  F07B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 28358  006E72  C09C  F07C         	movff	___ftmul@exp,___ftpack@exp
 28359  006E76  C0A1  F07D         	movff	___ftmul@sign,___ftpack@sign
 28360  006E7A  EC67  F03A         	call	___ftpack	;wreg free
 28361  006E7E  C079  F093         	movff	?___ftpack,?___ftmul
 28362  006E82  C07A  F094         	movff	?___ftpack+1,?___ftmul+1
 28363  006E86  C07B  F095         	movff	?___ftpack+2,?___ftmul+2
 28364  006E8A  0012               	return	
 28365  006E8C  0012               	return		;funcret
 28366  006E8E                     __end_of___ftmul:
 28367                           	opt stack 0
 28368                           tblptru	equ	0xFF8
 28369                           tblptrh	equ	0xFF7
 28370                           tblptrl	equ	0xFF6
 28371                           tablat	equ	0xFF5
 28372                           prodh	equ	0xFF4
 28373                           prodl	equ	0xFF3
 28374                           intcon	equ	0xFF2
 28375                           intcon2	equ	0xFF1
 28376                           indf0	equ	0xFEF
 28377                           postinc0	equ	0xFEE
 28378                           fsr0h	equ	0xFEA
 28379                           fsr0l	equ	0xFE9
 28380                           wreg	equ	0xFE8
 28381                           indf1	equ	0xFE7
 28382                           postdec1	equ	0xFE5
 28383                           fsr1h	equ	0xFE2
 28384                           fsr1l	equ	0xFE1
 28385                           indf2	equ	0xFDF
 28386                           postinc2	equ	0xFDE
 28387                           postdec2	equ	0xFDD
 28388                           fsr2h	equ	0xFDA
 28389                           fsr2l	equ	0xFD9
 28390                           status	equ	0xFD8
 28391                           
 28392 ;; *************** function ___awmod *****************
 28393 ;; Defined at:
 28394 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 28395 ;; Parameters:    Size  Location     Type
 28396 ;;  dividend        2   25[BANK0 ] int 
 28397 ;;  divisor         2   27[BANK0 ] int 
 28398 ;; Auto vars:     Size  Location     Type
 28399 ;;  sign            1   30[BANK0 ] unsigned char 
 28400 ;;  counter         1   29[BANK0 ] unsigned char 
 28401 ;; Return value:  Size  Location     Type
 28402 ;;                  2   25[BANK0 ] int 
 28403 ;; Registers used:
 28404 ;;		wreg, status,2, status,0
 28405 ;; Tracked objects:
 28406 ;;		On entry : 0/0
 28407 ;;		On exit  : 0/0
 28408 ;;		Unchanged: 0/0
 28409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28413 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28414 ;;Total ram usage:        6 bytes
 28415 ;; Hardware stack levels used:    1
 28416 ;; Hardware stack levels required when called:    6
 28417 ;; This function calls:
 28418 ;;		Nothing
 28419 ;; This function is called by:
 28420 ;;		_fround
 28421 ;;		_scale
 28422 ;; This function uses a non-reentrant model
 28423 ;;
 28424                           
 28425                           	psect	text65
 28426  0080A0                     __ptext65:
 28427                           	opt stack 0
 28428  0080A0                     ___awmod:
 28429                           	opt stack 21
 28430                           
 28431                           ;incstack = 0
 28432  0080A0  0E00               	movlw	0
 28433  0080A2  0100               	movlb	0	; () banked
 28434  0080A4  6F7E               	movwf	___awmod@sign& (0+255),b
 28435                           
 28436                           ; BSR set to: 0
 28437  0080A6  0100               	movlb	0	; () banked
 28438  0080A8  AF7A               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28439  0080AA  D009               	goto	l12580
 28440                           
 28441                           ; BSR set to: 0
 28442  0080AC  0100               	movlb	0	; () banked
 28443  0080AE  6D79               	negf	___awmod@dividend& (0+255),b
 28444  0080B0  1F7A               	comf	(___awmod@dividend+1)& (0+255),f,b
 28445  0080B2  B0D8               	btfsc	status,0,c
 28446  0080B4  2B7A               	incf	(___awmod@dividend+1)& (0+255),f,b
 28447                           
 28448                           ; BSR set to: 0
 28449  0080B6  0E01               	movlw	1
 28450  0080B8  0100               	movlb	0	; () banked
 28451  0080BA  6F7E               	movwf	___awmod@sign& (0+255),b
 28452  0080BC  D000               	goto	l12580
 28453  0080BE                     l12580:
 28454                           
 28455                           ; BSR set to: 0
 28456  0080BE  0100               	movlb	0	; () banked
 28457  0080C0  AF7C               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28458  0080C2  D006               	goto	l12584
 28459                           
 28460                           ; BSR set to: 0
 28461  0080C4  0100               	movlb	0	; () banked
 28462  0080C6  6D7B               	negf	___awmod@divisor& (0+255),b
 28463  0080C8  1F7C               	comf	(___awmod@divisor+1)& (0+255),f,b
 28464  0080CA  B0D8               	btfsc	status,0,c
 28465  0080CC  2B7C               	incf	(___awmod@divisor+1)& (0+255),f,b
 28466  0080CE  D000               	goto	l12584
 28467  0080D0                     l12584:
 28468                           
 28469                           ; BSR set to: 0
 28470  0080D0  0100               	movlb	0	; () banked
 28471  0080D2  517B               	movf	___awmod@divisor& (0+255),w,b
 28472  0080D4  0100               	movlb	0	; () banked
 28473  0080D6  117C               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28474  0080D8  B4D8               	btfsc	status,2,c
 28475  0080DA  D02B               	goto	l12600
 28476                           
 28477                           ; BSR set to: 0
 28478  0080DC  0E01               	movlw	1
 28479  0080DE  0100               	movlb	0	; () banked
 28480  0080E0  6F7D               	movwf	___awmod@counter& (0+255),b
 28481  0080E2  D007               	goto	l12590
 28482  0080E4                     l12588:
 28483                           
 28484                           ; BSR set to: 0
 28485  0080E4  0100               	movlb	0	; () banked
 28486  0080E6  90D8               	bcf	status,0,c
 28487  0080E8  377B               	rlcf	___awmod@divisor& (0+255),f,b
 28488  0080EA  377C               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28489  0080EC  0100               	movlb	0	; () banked
 28490  0080EE  2B7D               	incf	___awmod@counter& (0+255),f,b
 28491  0080F0  D000               	goto	l12590
 28492  0080F2                     l12590:
 28493                           
 28494                           ; BSR set to: 0
 28495  0080F2  0100               	movlb	0	; () banked
 28496  0080F4  BF7C               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 28497  0080F6  D002               	goto	l12592
 28498  0080F8  D7F5               	goto	l12588
 28499                           
 28500                           ; BSR set to: 0
 28501  0080FA  D000               	goto	l12592
 28502  0080FC                     l12592:
 28503                           
 28504                           ; BSR set to: 0
 28505  0080FC  0100               	movlb	0	; () banked
 28506  0080FE  517B               	movf	___awmod@divisor& (0+255),w,b
 28507  008100  0100               	movlb	0	; () banked
 28508  008102  5D79               	subwf	___awmod@dividend& (0+255),w,b
 28509  008104  0100               	movlb	0	; () banked
 28510  008106  517C               	movf	(___awmod@divisor+1)& (0+255),w,b
 28511  008108  0100               	movlb	0	; () banked
 28512  00810A  597A               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28513  00810C  A0D8               	btfss	status,0,c
 28514  00810E  D009               	goto	l12596
 28515                           
 28516                           ; BSR set to: 0
 28517  008110  0100               	movlb	0	; () banked
 28518  008112  517B               	movf	___awmod@divisor& (0+255),w,b
 28519  008114  0100               	movlb	0	; () banked
 28520  008116  5F79               	subwf	___awmod@dividend& (0+255),f,b
 28521  008118  0100               	movlb	0	; () banked
 28522  00811A  517C               	movf	(___awmod@divisor+1)& (0+255),w,b
 28523  00811C  0100               	movlb	0	; () banked
 28524  00811E  5B7A               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28525  008120  D000               	goto	l12596
 28526  008122                     l12596:
 28527                           
 28528                           ; BSR set to: 0
 28529  008122  0100               	movlb	0	; () banked
 28530  008124  90D8               	bcf	status,0,c
 28531  008126  337C               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28532  008128  337B               	rrcf	___awmod@divisor& (0+255),f,b
 28533                           
 28534                           ; BSR set to: 0
 28535  00812A  0100               	movlb	0	; () banked
 28536  00812C  2F7D               	decfsz	___awmod@counter& (0+255),f,b
 28537  00812E  D7E6               	goto	l12592
 28538                           
 28539                           ; BSR set to: 0
 28540  008130  D000               	goto	l12600
 28541  008132                     l12600:
 28542                           
 28543                           ; BSR set to: 0
 28544  008132  0100               	movlb	0	; () banked
 28545  008134  517E               	movf	___awmod@sign& (0+255),w,b
 28546  008136  0100               	movlb	0	; () banked
 28547  008138  B4D8               	btfsc	status,2,c
 28548  00813A  D006               	goto	l12604
 28549                           
 28550                           ; BSR set to: 0
 28551  00813C  0100               	movlb	0	; () banked
 28552  00813E  6D79               	negf	___awmod@dividend& (0+255),b
 28553  008140  1F7A               	comf	(___awmod@dividend+1)& (0+255),f,b
 28554  008142  B0D8               	btfsc	status,0,c
 28555  008144  2B7A               	incf	(___awmod@dividend+1)& (0+255),f,b
 28556  008146  D000               	goto	l12604
 28557  008148                     l12604:
 28558                           
 28559                           ; BSR set to: 0
 28560  008148  C079  F079         	movff	___awmod@dividend,?___awmod
 28561  00814C  C07A  F07A         	movff	___awmod@dividend+1,?___awmod+1
 28562  008150  0012               	return	
 28563                           
 28564                           ; BSR set to: 0
 28565                           
 28566                           ; BSR set to: 0
 28567  008152  0012               	return		;funcret
 28568  008154                     __end_of___awmod:
 28569                           	opt stack 0
 28570                           tblptru	equ	0xFF8
 28571                           tblptrh	equ	0xFF7
 28572                           tblptrl	equ	0xFF6
 28573                           tablat	equ	0xFF5
 28574                           prodh	equ	0xFF4
 28575                           prodl	equ	0xFF3
 28576                           intcon	equ	0xFF2
 28577                           intcon2	equ	0xFF1
 28578                           indf0	equ	0xFEF
 28579                           postinc0	equ	0xFEE
 28580                           fsr0h	equ	0xFEA
 28581                           fsr0l	equ	0xFE9
 28582                           wreg	equ	0xFE8
 28583                           indf1	equ	0xFE7
 28584                           postdec1	equ	0xFE5
 28585                           fsr1h	equ	0xFE2
 28586                           fsr1l	equ	0xFE1
 28587                           indf2	equ	0xFDF
 28588                           postinc2	equ	0xFDE
 28589                           postdec2	equ	0xFDD
 28590                           fsr2h	equ	0xFDA
 28591                           fsr2l	equ	0xFD9
 28592                           status	equ	0xFD8
 28593                           
 28594 ;; *************** function ___awdiv *****************
 28595 ;; Defined at:
 28596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 28597 ;; Parameters:    Size  Location     Type
 28598 ;;  dividend        2   31[BANK0 ] int 
 28599 ;;  divisor         2   33[BANK0 ] int 
 28600 ;; Auto vars:     Size  Location     Type
 28601 ;;  quotient        2   37[BANK0 ] int 
 28602 ;;  sign            1   36[BANK0 ] unsigned char 
 28603 ;;  counter         1   35[BANK0 ] unsigned char 
 28604 ;; Return value:  Size  Location     Type
 28605 ;;                  2   31[BANK0 ] int 
 28606 ;; Registers used:
 28607 ;;		wreg, status,2, status,0
 28608 ;; Tracked objects:
 28609 ;;		On entry : 0/0
 28610 ;;		On exit  : 0/0
 28611 ;;		Unchanged: 0/0
 28612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28616 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28617 ;;Total ram usage:        8 bytes
 28618 ;; Hardware stack levels used:    1
 28619 ;; Hardware stack levels required when called:    6
 28620 ;; This function calls:
 28621 ;;		Nothing
 28622 ;; This function is called by:
 28623 ;;		_fround
 28624 ;;		_scale
 28625 ;;		_sprintf
 28626 ;; This function uses a non-reentrant model
 28627 ;;
 28628                           
 28629                           	psect	text66
 28630  007C06                     __ptext66:
 28631                           	opt stack 0
 28632  007C06                     ___awdiv:
 28633                           	opt stack 21
 28634                           
 28635                           ; BSR set to: 0
 28636                           ;incstack = 0
 28637  007C06  0E00               	movlw	0
 28638  007C08  0100               	movlb	0	; () banked
 28639  007C0A  6F84               	movwf	___awdiv@sign& (0+255),b
 28640                           
 28641                           ; BSR set to: 0
 28642  007C0C  0100               	movlb	0	; () banked
 28643  007C0E  AF82               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28644  007C10  D009               	goto	l12536
 28645                           
 28646                           ; BSR set to: 0
 28647  007C12  0100               	movlb	0	; () banked
 28648  007C14  6D81               	negf	___awdiv@divisor& (0+255),b
 28649  007C16  1F82               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28650  007C18  B0D8               	btfsc	status,0,c
 28651  007C1A  2B82               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28652                           
 28653                           ; BSR set to: 0
 28654  007C1C  0E01               	movlw	1
 28655  007C1E  0100               	movlb	0	; () banked
 28656  007C20  6F84               	movwf	___awdiv@sign& (0+255),b
 28657  007C22  D000               	goto	l12536
 28658  007C24                     l12536:
 28659                           
 28660                           ; BSR set to: 0
 28661  007C24  0100               	movlb	0	; () banked
 28662  007C26  AF80               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28663  007C28  D009               	goto	l12542
 28664                           
 28665                           ; BSR set to: 0
 28666  007C2A  0100               	movlb	0	; () banked
 28667  007C2C  6D7F               	negf	___awdiv@dividend& (0+255),b
 28668  007C2E  1F80               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28669  007C30  B0D8               	btfsc	status,0,c
 28670  007C32  2B80               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28671                           
 28672                           ; BSR set to: 0
 28673  007C34  0E01               	movlw	1
 28674  007C36  0100               	movlb	0	; () banked
 28675  007C38  1B84               	xorwf	___awdiv@sign& (0+255),f,b
 28676  007C3A  D000               	goto	l12542
 28677  007C3C                     l12542:
 28678                           
 28679                           ; BSR set to: 0
 28680  007C3C  0E00               	movlw	0
 28681  007C3E  0100               	movlb	0	; () banked
 28682  007C40  6F86               	movwf	(___awdiv@quotient+1)& (0+255),b
 28683  007C42  0E00               	movlw	0
 28684  007C44  6F85               	movwf	___awdiv@quotient& (0+255),b
 28685                           
 28686                           ; BSR set to: 0
 28687  007C46  0100               	movlb	0	; () banked
 28688  007C48  5181               	movf	___awdiv@divisor& (0+255),w,b
 28689  007C4A  0100               	movlb	0	; () banked
 28690  007C4C  1182               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28691  007C4E  B4D8               	btfsc	status,2,c
 28692  007C50  D031               	goto	l12564
 28693                           
 28694                           ; BSR set to: 0
 28695  007C52  0E01               	movlw	1
 28696  007C54  0100               	movlb	0	; () banked
 28697  007C56  6F83               	movwf	___awdiv@counter& (0+255),b
 28698  007C58  D007               	goto	l12550
 28699  007C5A                     l12548:
 28700                           
 28701                           ; BSR set to: 0
 28702  007C5A  0100               	movlb	0	; () banked
 28703  007C5C  90D8               	bcf	status,0,c
 28704  007C5E  3781               	rlcf	___awdiv@divisor& (0+255),f,b
 28705  007C60  3782               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28706  007C62  0100               	movlb	0	; () banked
 28707  007C64  2B83               	incf	___awdiv@counter& (0+255),f,b
 28708  007C66  D000               	goto	l12550
 28709  007C68                     l12550:
 28710                           
 28711                           ; BSR set to: 0
 28712  007C68  0100               	movlb	0	; () banked
 28713  007C6A  BF82               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 28714  007C6C  D002               	goto	l12552
 28715  007C6E  D7F5               	goto	l12548
 28716                           
 28717                           ; BSR set to: 0
 28718  007C70  D000               	goto	l12552
 28719  007C72                     l12552:
 28720                           
 28721                           ; BSR set to: 0
 28722  007C72  0100               	movlb	0	; () banked
 28723  007C74  90D8               	bcf	status,0,c
 28724  007C76  3785               	rlcf	___awdiv@quotient& (0+255),f,b
 28725  007C78  3786               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28726                           
 28727                           ; BSR set to: 0
 28728  007C7A  0100               	movlb	0	; () banked
 28729  007C7C  5181               	movf	___awdiv@divisor& (0+255),w,b
 28730  007C7E  0100               	movlb	0	; () banked
 28731  007C80  5D7F               	subwf	___awdiv@dividend& (0+255),w,b
 28732  007C82  0100               	movlb	0	; () banked
 28733  007C84  5182               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28734  007C86  0100               	movlb	0	; () banked
 28735  007C88  5980               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28736  007C8A  A0D8               	btfss	status,0,c
 28737  007C8C  D00B               	goto	l12560
 28738                           
 28739                           ; BSR set to: 0
 28740  007C8E  0100               	movlb	0	; () banked
 28741  007C90  5181               	movf	___awdiv@divisor& (0+255),w,b
 28742  007C92  0100               	movlb	0	; () banked
 28743  007C94  5F7F               	subwf	___awdiv@dividend& (0+255),f,b
 28744  007C96  0100               	movlb	0	; () banked
 28745  007C98  5182               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28746  007C9A  0100               	movlb	0	; () banked
 28747  007C9C  5B80               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28748                           
 28749                           ; BSR set to: 0
 28750  007C9E  0100               	movlb	0	; () banked
 28751  007CA0  8185               	bsf	___awdiv@quotient& (0+255),0,b
 28752  007CA2  D000               	goto	l12560
 28753  007CA4                     l12560:
 28754                           
 28755                           ; BSR set to: 0
 28756  007CA4  0100               	movlb	0	; () banked
 28757  007CA6  90D8               	bcf	status,0,c
 28758  007CA8  3382               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28759  007CAA  3381               	rrcf	___awdiv@divisor& (0+255),f,b
 28760                           
 28761                           ; BSR set to: 0
 28762  007CAC  0100               	movlb	0	; () banked
 28763  007CAE  2F83               	decfsz	___awdiv@counter& (0+255),f,b
 28764  007CB0  D7E0               	goto	l12552
 28765                           
 28766                           ; BSR set to: 0
 28767  007CB2  D000               	goto	l12564
 28768  007CB4                     l12564:
 28769                           
 28770                           ; BSR set to: 0
 28771  007CB4  0100               	movlb	0	; () banked
 28772  007CB6  5184               	movf	___awdiv@sign& (0+255),w,b
 28773  007CB8  0100               	movlb	0	; () banked
 28774  007CBA  B4D8               	btfsc	status,2,c
 28775  007CBC  D006               	goto	l12568
 28776                           
 28777                           ; BSR set to: 0
 28778  007CBE  0100               	movlb	0	; () banked
 28779  007CC0  6D85               	negf	___awdiv@quotient& (0+255),b
 28780  007CC2  1F86               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28781  007CC4  B0D8               	btfsc	status,0,c
 28782  007CC6  2B86               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28783  007CC8  D000               	goto	l12568
 28784  007CCA                     l12568:
 28785                           
 28786                           ; BSR set to: 0
 28787  007CCA  C085  F07F         	movff	___awdiv@quotient,?___awdiv
 28788  007CCE  C086  F080         	movff	___awdiv@quotient+1,?___awdiv+1
 28789  007CD2  0012               	return	
 28790                           
 28791                           ; BSR set to: 0
 28792                           
 28793                           ; BSR set to: 0
 28794  007CD4  0012               	return		;funcret
 28795  007CD6                     __end_of___awdiv:
 28796                           	opt stack 0
 28797                           tblptru	equ	0xFF8
 28798                           tblptrh	equ	0xFF7
 28799                           tblptrl	equ	0xFF6
 28800                           tablat	equ	0xFF5
 28801                           prodh	equ	0xFF4
 28802                           prodl	equ	0xFF3
 28803                           intcon	equ	0xFF2
 28804                           intcon2	equ	0xFF1
 28805                           indf0	equ	0xFEF
 28806                           postinc0	equ	0xFEE
 28807                           fsr0h	equ	0xFEA
 28808                           fsr0l	equ	0xFE9
 28809                           wreg	equ	0xFE8
 28810                           indf1	equ	0xFE7
 28811                           postdec1	equ	0xFE5
 28812                           fsr1h	equ	0xFE2
 28813                           fsr1l	equ	0xFE1
 28814                           indf2	equ	0xFDF
 28815                           postinc2	equ	0xFDE
 28816                           postdec2	equ	0xFDD
 28817                           fsr2h	equ	0xFDA
 28818                           fsr2l	equ	0xFD9
 28819                           status	equ	0xFD8
 28820                           
 28821 ;; *************** function __tdiv_to_l_ *****************
 28822 ;; Defined at:
 28823 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 28824 ;; Parameters:    Size  Location     Type
 28825 ;;  f1              3   25[BANK0 ] float 
 28826 ;;  f2              3   28[BANK0 ] float 
 28827 ;; Auto vars:     Size  Location     Type
 28828 ;;  quot            4   34[BANK0 ] unsigned long 
 28829 ;;  exp1            1   39[BANK0 ] unsigned char 
 28830 ;;  cntr            1   38[BANK0 ] unsigned char 
 28831 ;; Return value:  Size  Location     Type
 28832 ;;                  4   25[BANK0 ] unsigned long 
 28833 ;; Registers used:
 28834 ;;		wreg, status,2, status,0
 28835 ;; Tracked objects:
 28836 ;;		On entry : 0/0
 28837 ;;		On exit  : 0/0
 28838 ;;		Unchanged: 0/0
 28839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28840 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28841 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28842 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28843 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28844 ;;Total ram usage:       15 bytes
 28845 ;; Hardware stack levels used:    1
 28846 ;; Hardware stack levels required when called:    6
 28847 ;; This function calls:
 28848 ;;		Nothing
 28849 ;; This function is called by:
 28850 ;;		_sprintf
 28851 ;; This function uses a non-reentrant model
 28852 ;;
 28853                           
 28854                           	psect	text67
 28855  0066EA                     __ptext67:
 28856                           	opt stack 0
 28857  0066EA                     __tdiv_to_l_:
 28858                           	opt stack 22
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;incstack = 0
 28862  0066EA  C07B  F07F         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 28863  0066EE  0100               	movlb	0	; () banked
 28864  0066F0  6B80               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 28865  0066F2  6B81               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 28866  0066F4  0100               	movlb	0	; () banked
 28867  0066F6  357A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 28868  0066F8  0100               	movlb	0	; () banked
 28869  0066FA  377F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 28870  0066FC  E301               	bnc	u15241
 28871  0066FE  8180               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 28872  006700                     u15241:
 28873  006700  0100               	movlb	0	; () banked
 28874  006702  517F               	movf	??__tdiv_to_l_& (0+255),w,b
 28875  006704  0100               	movlb	0	; () banked
 28876  006706  6F87               	movwf	__tdiv_to_l_@exp1& (0+255),b
 28877  006708  0100               	movlb	0	; () banked
 28878  00670A  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28879  00670C  A4D8               	btfss	status,2,c
 28880  00670E  D00A               	goto	l12834
 28881                           
 28882                           ; BSR set to: 0
 28883  006710  0E00               	movlw	0
 28884  006712  0100               	movlb	0	; () banked
 28885  006714  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 28886  006716  0E00               	movlw	0
 28887  006718  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 28888  00671A  0E00               	movlw	0
 28889  00671C  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 28890  00671E  0E00               	movlw	0
 28891  006720  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 28892                           
 28893                           ; BSR set to: 0
 28894  006722  0012               	return	
 28895  006724                     l12834:
 28896                           
 28897                           ; BSR set to: 0
 28898  006724  C07E  F07F         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 28899  006728  0100               	movlb	0	; () banked
 28900  00672A  6B80               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 28901  00672C  6B81               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 28902  00672E  0100               	movlb	0	; () banked
 28903  006730  357D               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 28904  006732  0100               	movlb	0	; () banked
 28905  006734  377F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 28906  006736  E301               	bnc	u15261
 28907  006738  8180               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 28908  00673A                     u15261:
 28909  00673A  0100               	movlb	0	; () banked
 28910  00673C  517F               	movf	??__tdiv_to_l_& (0+255),w,b
 28911  00673E  0100               	movlb	0	; () banked
 28912  006740  6F86               	movwf	__tdiv_to_l_@cntr& (0+255),b
 28913  006742  0100               	movlb	0	; () banked
 28914  006744  5186               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 28915  006746  A4D8               	btfss	status,2,c
 28916  006748  D00A               	goto	l12840
 28917                           
 28918                           ; BSR set to: 0
 28919  00674A  0E00               	movlw	0
 28920  00674C  0100               	movlb	0	; () banked
 28921  00674E  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 28922  006750  0E00               	movlw	0
 28923  006752  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 28924  006754  0E00               	movlw	0
 28925  006756  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 28926  006758  0E00               	movlw	0
 28927  00675A  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 28928                           
 28929                           ; BSR set to: 0
 28930  00675C  0012               	return	
 28931  00675E                     l12840:
 28932                           
 28933                           ; BSR set to: 0
 28934  00675E  0100               	movlb	0	; () banked
 28935  006760  8F7A               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 28936                           
 28937                           ; BSR set to: 0
 28938  006762  0EFF               	movlw	255
 28939  006764  0100               	movlb	0	; () banked
 28940  006766  1779               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 28941  006768  0EFF               	movlw	255
 28942  00676A  0100               	movlb	0	; () banked
 28943  00676C  177A               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 28944  00676E  0E00               	movlw	0
 28945  006770  0100               	movlb	0	; () banked
 28946  006772  177B               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 28947  006774  0100               	movlb	0	; () banked
 28948  006776  8F7D               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 28949                           
 28950                           ; BSR set to: 0
 28951  006778  0EFF               	movlw	255
 28952  00677A  0100               	movlb	0	; () banked
 28953  00677C  177C               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 28954  00677E  0EFF               	movlw	255
 28955  006780  0100               	movlb	0	; () banked
 28956  006782  177D               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 28957  006784  0E00               	movlw	0
 28958  006786  0100               	movlb	0	; () banked
 28959  006788  177E               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 28960                           
 28961                           ; BSR set to: 0
 28962  00678A  0E00               	movlw	0
 28963  00678C  0100               	movlb	0	; () banked
 28964  00678E  6F82               	movwf	__tdiv_to_l_@quot& (0+255),b
 28965  006790  0E00               	movlw	0
 28966  006792  6F83               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 28967  006794  0E00               	movlw	0
 28968  006796  6F84               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 28969  006798  0E00               	movlw	0
 28970  00679A  6F85               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 28971                           
 28972                           ; BSR set to: 0
 28973  00679C  0E7F               	movlw	127
 28974  00679E  0100               	movlb	0	; () banked
 28975  0067A0  5F87               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 28976                           
 28977                           ; BSR set to: 0
 28978  0067A2  0100               	movlb	0	; () banked
 28979  0067A4  5186               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 28980  0067A6  0F98               	addlw	152
 28981  0067A8  0100               	movlb	0	; () banked
 28982  0067AA  5F87               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 28983                           
 28984                           ; BSR set to: 0
 28985  0067AC  0E18               	movlw	24
 28986  0067AE  0100               	movlb	0	; () banked
 28987  0067B0  6F86               	movwf	__tdiv_to_l_@cntr& (0+255),b
 28988  0067B2                     l2715:
 28989                           
 28990                           ; BSR set to: 0
 28991  0067B2  0100               	movlb	0	; () banked
 28992  0067B4  90D8               	bcf	status,0,c
 28993  0067B6  3782               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 28994  0067B8  3783               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 28995  0067BA  3784               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 28996  0067BC  3785               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 28997                           
 28998                           ; BSR set to: 0
 28999  0067BE  0100               	movlb	0	; () banked
 29000  0067C0  517C               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29001  0067C2  0100               	movlb	0	; () banked
 29002  0067C4  5D79               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29003  0067C6  0100               	movlb	0	; () banked
 29004  0067C8  517D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29005  0067CA  0100               	movlb	0	; () banked
 29006  0067CC  597A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29007  0067CE  0100               	movlb	0	; () banked
 29008  0067D0  517E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29009  0067D2  0100               	movlb	0	; () banked
 29010  0067D4  597B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29011  0067D6  A0D8               	btfss	status,0,c
 29012  0067D8  D00E               	goto	l2716
 29013                           
 29014                           ; BSR set to: 0
 29015  0067DA  0100               	movlb	0	; () banked
 29016  0067DC  517C               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29017  0067DE  0100               	movlb	0	; () banked
 29018  0067E0  5F79               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29019  0067E2  0100               	movlb	0	; () banked
 29020  0067E4  517D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29021  0067E6  0100               	movlb	0	; () banked
 29022  0067E8  5B7A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29023  0067EA  0100               	movlb	0	; () banked
 29024  0067EC  517E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29025  0067EE  0100               	movlb	0	; () banked
 29026  0067F0  5B7B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29027                           
 29028                           ; BSR set to: 0
 29029  0067F2  0100               	movlb	0	; () banked
 29030  0067F4  8182               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29031  0067F6                     l2716:
 29032                           
 29033                           ; BSR set to: 0
 29034  0067F6  0100               	movlb	0	; () banked
 29035  0067F8  90D8               	bcf	status,0,c
 29036  0067FA  3779               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29037  0067FC  377A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29038  0067FE  377B               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29039                           
 29040                           ; BSR set to: 0
 29041  006800  0100               	movlb	0	; () banked
 29042  006802  2F86               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29043  006804  D7D6               	goto	l2715
 29044  006806  D000               	goto	l12862
 29045  006808                     l12862:
 29046                           
 29047                           ; BSR set to: 0
 29048  006808  0100               	movlb	0	; () banked
 29049  00680A  AF87               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29050  00680C  D01B               	goto	l12874
 29051                           
 29052                           ; BSR set to: 0
 29053  00680E  0100               	movlb	0	; () banked
 29054  006810  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29055  006812  0A80               	xorlw	128
 29056  006814  0F97               	addlw	151
 29057  006816  B0D8               	btfsc	status,0,c
 29058  006818  D00B               	goto	l12870
 29059                           
 29060                           ; BSR set to: 0
 29061  00681A  0E00               	movlw	0
 29062  00681C  0100               	movlb	0	; () banked
 29063  00681E  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29064  006820  0E00               	movlw	0
 29065  006822  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29066  006824  0E00               	movlw	0
 29067  006826  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29068  006828  0E00               	movlw	0
 29069  00682A  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29070                           
 29071                           ; BSR set to: 0
 29072  00682C  0012               	return	
 29073                           
 29074                           ; BSR set to: 0
 29075  00682E  D000               	goto	l12870
 29076  006830                     l12870:
 29077                           
 29078                           ; BSR set to: 0
 29079  006830  0100               	movlb	0	; () banked
 29080  006832  90D8               	bcf	status,0,c
 29081  006834  3385               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29082  006836  3384               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29083  006838  3383               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29084  00683A  3382               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29085                           
 29086                           ; BSR set to: 0
 29087  00683C  0100               	movlb	0	; () banked
 29088  00683E  3F87               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29089  006840  D7F7               	goto	l12870
 29090                           
 29091                           ; BSR set to: 0
 29092  006842  D01D               	goto	l2722
 29093  006844                     l12874:
 29094                           
 29095                           ; BSR set to: 0
 29096  006844  0E17               	movlw	23
 29097  006846  0100               	movlb	0	; () banked
 29098  006848  6587               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29099  00684A  D014               	goto	l12882
 29100                           
 29101                           ; BSR set to: 0
 29102  00684C  0E00               	movlw	0
 29103  00684E  0100               	movlb	0	; () banked
 29104  006850  6F79               	movwf	?__tdiv_to_l_& (0+255),b
 29105  006852  0E00               	movlw	0
 29106  006854  6F7A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29107  006856  0E00               	movlw	0
 29108  006858  6F7B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29109  00685A  0E00               	movlw	0
 29110  00685C  6F7C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29111                           
 29112                           ; BSR set to: 0
 29113  00685E  0012               	return	
 29114                           
 29115                           ; BSR set to: 0
 29116  006860  D009               	goto	l12882
 29117  006862                     l12880:
 29118                           
 29119                           ; BSR set to: 0
 29120  006862  0100               	movlb	0	; () banked
 29121  006864  90D8               	bcf	status,0,c
 29122  006866  3782               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29123  006868  3783               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29124  00686A  3784               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29125  00686C  3785               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29126  00686E  0100               	movlb	0	; () banked
 29127  006870  0787               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29128  006872  D000               	goto	l12882
 29129  006874                     l12882:
 29130                           
 29131                           ; BSR set to: 0
 29132  006874  0100               	movlb	0	; () banked
 29133  006876  5187               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29134  006878  0100               	movlb	0	; () banked
 29135  00687A  A4D8               	btfss	status,2,c
 29136  00687C  D7F2               	goto	l12880
 29137  00687E                     l2722:
 29138                           
 29139                           ; BSR set to: 0
 29140  00687E  C082  F079         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29141  006882  C083  F07A         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29142  006886  C084  F07B         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29143  00688A  C085  F07C         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29144                           
 29145                           ; BSR set to: 0
 29146  00688E  0012               	return		;funcret
 29147  006890                     __end_of__tdiv_to_l_:
 29148                           	opt stack 0
 29149                           tblptru	equ	0xFF8
 29150                           tblptrh	equ	0xFF7
 29151                           tblptrl	equ	0xFF6
 29152                           tablat	equ	0xFF5
 29153                           prodh	equ	0xFF4
 29154                           prodl	equ	0xFF3
 29155                           intcon	equ	0xFF2
 29156                           intcon2	equ	0xFF1
 29157                           indf0	equ	0xFEF
 29158                           postinc0	equ	0xFEE
 29159                           fsr0h	equ	0xFEA
 29160                           fsr0l	equ	0xFE9
 29161                           wreg	equ	0xFE8
 29162                           indf1	equ	0xFE7
 29163                           postdec1	equ	0xFE5
 29164                           fsr1h	equ	0xFE2
 29165                           fsr1l	equ	0xFE1
 29166                           indf2	equ	0xFDF
 29167                           postinc2	equ	0xFDE
 29168                           postdec2	equ	0xFDD
 29169                           fsr2h	equ	0xFDA
 29170                           fsr2l	equ	0xFD9
 29171                           status	equ	0xFD8
 29172                           
 29173 ;; *************** function __div_to_l_ *****************
 29174 ;; Defined at:
 29175 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 29176 ;; Parameters:    Size  Location     Type
 29177 ;;  f1              3   25[BANK0 ] unsigned long 
 29178 ;;  f2              3   28[BANK0 ] unsigned long 
 29179 ;; Auto vars:     Size  Location     Type
 29180 ;;  quot            4   31[BANK0 ] unsigned long 
 29181 ;;  exp1            1   36[BANK0 ] unsigned char 
 29182 ;;  cntr            1   35[BANK0 ] unsigned char 
 29183 ;; Return value:  Size  Location     Type
 29184 ;;                  4   25[BANK0 ] unsigned long 
 29185 ;; Registers used:
 29186 ;;		wreg, status,2, status,0
 29187 ;; Tracked objects:
 29188 ;;		On entry : 0/0
 29189 ;;		On exit  : 0/0
 29190 ;;		Unchanged: 0/0
 29191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29192 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29193 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29195 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29196 ;;Total ram usage:       12 bytes
 29197 ;; Hardware stack levels used:    1
 29198 ;; Hardware stack levels required when called:    6
 29199 ;; This function calls:
 29200 ;;		Nothing
 29201 ;; This function is called by:
 29202 ;;		_sprintf
 29203 ;; This function uses a non-reentrant model
 29204 ;;
 29205                           
 29206                           	psect	text68
 29207  006890                     __ptext68:
 29208                           	opt stack 0
 29209  006890                     __div_to_l_:
 29210                           	opt stack 22
 29211                           
 29212                           ; BSR set to: 0
 29213                           ;incstack = 0
 29214  006890  0100               	movlb	0	; () banked
 29215  006892  357B               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29216  006894  357C               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29217  006896  0100               	movlb	0	; () banked
 29218  006898  6F84               	movwf	__div_to_l_@exp1& (0+255),b
 29219  00689A  0100               	movlb	0	; () banked
 29220  00689C  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29221  00689E  A4D8               	btfss	status,2,c
 29222  0068A0  D00A               	goto	l12890
 29223                           
 29224                           ; BSR set to: 0
 29225  0068A2  0E00               	movlw	0
 29226  0068A4  0100               	movlb	0	; () banked
 29227  0068A6  6F79               	movwf	?__div_to_l_& (0+255),b
 29228  0068A8  0E00               	movlw	0
 29229  0068AA  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29230  0068AC  0E00               	movlw	0
 29231  0068AE  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29232  0068B0  0E00               	movlw	0
 29233  0068B2  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29234                           
 29235                           ; BSR set to: 0
 29236  0068B4  0012               	return	
 29237  0068B6                     l12890:
 29238                           
 29239                           ; BSR set to: 0
 29240  0068B6  0100               	movlb	0	; () banked
 29241  0068B8  357E               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29242  0068BA  357F               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29243  0068BC  0100               	movlb	0	; () banked
 29244  0068BE  6F83               	movwf	__div_to_l_@cntr& (0+255),b
 29245  0068C0  0100               	movlb	0	; () banked
 29246  0068C2  5183               	movf	__div_to_l_@cntr& (0+255),w,b
 29247  0068C4  A4D8               	btfss	status,2,c
 29248  0068C6  D00A               	goto	l12896
 29249                           
 29250                           ; BSR set to: 0
 29251  0068C8  0E00               	movlw	0
 29252  0068CA  0100               	movlb	0	; () banked
 29253  0068CC  6F79               	movwf	?__div_to_l_& (0+255),b
 29254  0068CE  0E00               	movlw	0
 29255  0068D0  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29256  0068D2  0E00               	movlw	0
 29257  0068D4  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29258  0068D6  0E00               	movlw	0
 29259  0068D8  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29260                           
 29261                           ; BSR set to: 0
 29262  0068DA  0012               	return	
 29263  0068DC                     l12896:
 29264                           
 29265                           ; BSR set to: 0
 29266  0068DC  0100               	movlb	0	; () banked
 29267  0068DE  8F7B               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29268                           
 29269                           ; BSR set to: 0
 29270  0068E0  0EFF               	movlw	255
 29271  0068E2  0100               	movlb	0	; () banked
 29272  0068E4  1779               	andwf	__div_to_l_@f1& (0+255),f,b
 29273  0068E6  0EFF               	movlw	255
 29274  0068E8  177A               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29275  0068EA  0EFF               	movlw	255
 29276  0068EC  177B               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29277  0068EE  0E00               	movlw	0
 29278  0068F0  177C               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29279                           
 29280                           ; BSR set to: 0
 29281  0068F2  0100               	movlb	0	; () banked
 29282  0068F4  8F7E               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29283  0068F6  0EFF               	movlw	255
 29284  0068F8  0100               	movlb	0	; () banked
 29285  0068FA  177C               	andwf	__div_to_l_@f2& (0+255),f,b
 29286  0068FC  0EFF               	movlw	255
 29287  0068FE  177D               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29288  006900  0EFF               	movlw	255
 29289  006902  177E               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29290  006904  0E00               	movlw	0
 29291  006906  177F               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29292                           
 29293                           ; BSR set to: 0
 29294  006908  0E00               	movlw	0
 29295  00690A  0100               	movlb	0	; () banked
 29296  00690C  6F7F               	movwf	__div_to_l_@quot& (0+255),b
 29297  00690E  0E00               	movlw	0
 29298  006910  6F80               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29299  006912  0E00               	movlw	0
 29300  006914  6F81               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29301  006916  0E00               	movlw	0
 29302  006918  6F82               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29303                           
 29304                           ; BSR set to: 0
 29305  00691A  0E7F               	movlw	127
 29306  00691C  0100               	movlb	0	; () banked
 29307  00691E  5F84               	subwf	__div_to_l_@exp1& (0+255),f,b
 29308                           
 29309                           ; BSR set to: 0
 29310  006920  0100               	movlb	0	; () banked
 29311  006922  5183               	movf	__div_to_l_@cntr& (0+255),w,b
 29312  006924  0FA0               	addlw	160
 29313  006926  0100               	movlb	0	; () banked
 29314  006928  5F84               	subwf	__div_to_l_@exp1& (0+255),f,b
 29315                           
 29316                           ; BSR set to: 0
 29317  00692A  0E20               	movlw	32
 29318  00692C  0100               	movlb	0	; () banked
 29319  00692E  6F83               	movwf	__div_to_l_@cntr& (0+255),b
 29320  006930  D000               	goto	l12910
 29321  006932                     l12910:
 29322                           
 29323                           ; BSR set to: 0
 29324  006932  0100               	movlb	0	; () banked
 29325  006934  90D8               	bcf	status,0,c
 29326  006936  377F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29327  006938  3780               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29328  00693A  3781               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29329  00693C  3782               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29330                           
 29331                           ; BSR set to: 0
 29332  00693E  0100               	movlb	0	; () banked
 29333  006940  517C               	movf	__div_to_l_@f2& (0+255),w,b
 29334  006942  0100               	movlb	0	; () banked
 29335  006944  5D79               	subwf	__div_to_l_@f1& (0+255),w,b
 29336  006946  0100               	movlb	0	; () banked
 29337  006948  517D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29338  00694A  0100               	movlb	0	; () banked
 29339  00694C  597A               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29340  00694E  0100               	movlb	0	; () banked
 29341  006950  517E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29342  006952  0100               	movlb	0	; () banked
 29343  006954  597B               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29344  006956  0100               	movlb	0	; () banked
 29345  006958  517F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29346  00695A  0100               	movlb	0	; () banked
 29347  00695C  597C               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29348  00695E  A0D8               	btfss	status,0,c
 29349  006960  D013               	goto	l12918
 29350                           
 29351                           ; BSR set to: 0
 29352  006962  0100               	movlb	0	; () banked
 29353  006964  517C               	movf	__div_to_l_@f2& (0+255),w,b
 29354  006966  0100               	movlb	0	; () banked
 29355  006968  5F79               	subwf	__div_to_l_@f1& (0+255),f,b
 29356  00696A  0100               	movlb	0	; () banked
 29357  00696C  517D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29358  00696E  0100               	movlb	0	; () banked
 29359  006970  5B7A               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29360  006972  0100               	movlb	0	; () banked
 29361  006974  517E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29362  006976  0100               	movlb	0	; () banked
 29363  006978  5B7B               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29364  00697A  0100               	movlb	0	; () banked
 29365  00697C  517F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29366  00697E  0100               	movlb	0	; () banked
 29367  006980  5B7C               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29368                           
 29369                           ; BSR set to: 0
 29370  006982  0100               	movlb	0	; () banked
 29371  006984  817F               	bsf	__div_to_l_@quot& (0+255),0,b
 29372  006986  D000               	goto	l12918
 29373  006988                     l12918:
 29374                           
 29375                           ; BSR set to: 0
 29376  006988  0100               	movlb	0	; () banked
 29377  00698A  90D8               	bcf	status,0,c
 29378  00698C  3779               	rlcf	__div_to_l_@f1& (0+255),f,b
 29379  00698E  377A               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29380  006990  377B               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29381  006992  377C               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29382                           
 29383                           ; BSR set to: 0
 29384  006994  0100               	movlb	0	; () banked
 29385  006996  2F83               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29386  006998  D7CC               	goto	l12910
 29387  00699A  D000               	goto	l12922
 29388  00699C                     l12922:
 29389                           
 29390                           ; BSR set to: 0
 29391  00699C  0100               	movlb	0	; () banked
 29392  00699E  AF84               	btfss	__div_to_l_@exp1& (0+255),7,b
 29393  0069A0  D01B               	goto	l12934
 29394                           
 29395                           ; BSR set to: 0
 29396  0069A2  0100               	movlb	0	; () banked
 29397  0069A4  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29398  0069A6  0A80               	xorlw	128
 29399  0069A8  0F9F               	addlw	159
 29400  0069AA  B0D8               	btfsc	status,0,c
 29401  0069AC  D00B               	goto	l12930
 29402                           
 29403                           ; BSR set to: 0
 29404  0069AE  0E00               	movlw	0
 29405  0069B0  0100               	movlb	0	; () banked
 29406  0069B2  6F79               	movwf	?__div_to_l_& (0+255),b
 29407  0069B4  0E00               	movlw	0
 29408  0069B6  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29409  0069B8  0E00               	movlw	0
 29410  0069BA  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29411  0069BC  0E00               	movlw	0
 29412  0069BE  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29413                           
 29414                           ; BSR set to: 0
 29415  0069C0  0012               	return	
 29416                           
 29417                           ; BSR set to: 0
 29418  0069C2  D000               	goto	l12930
 29419  0069C4                     l12930:
 29420                           
 29421                           ; BSR set to: 0
 29422  0069C4  0100               	movlb	0	; () banked
 29423  0069C6  90D8               	bcf	status,0,c
 29424  0069C8  3382               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29425  0069CA  3381               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29426  0069CC  3380               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29427  0069CE  337F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29428                           
 29429                           ; BSR set to: 0
 29430  0069D0  0100               	movlb	0	; () banked
 29431  0069D2  3F84               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29432  0069D4  D7F7               	goto	l12930
 29433                           
 29434                           ; BSR set to: 0
 29435  0069D6  D01D               	goto	l2601
 29436  0069D8                     l12934:
 29437                           
 29438                           ; BSR set to: 0
 29439  0069D8  0E1F               	movlw	31
 29440  0069DA  0100               	movlb	0	; () banked
 29441  0069DC  6584               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29442  0069DE  D014               	goto	l12942
 29443                           
 29444                           ; BSR set to: 0
 29445  0069E0  0E00               	movlw	0
 29446  0069E2  0100               	movlb	0	; () banked
 29447  0069E4  6F79               	movwf	?__div_to_l_& (0+255),b
 29448  0069E6  0E00               	movlw	0
 29449  0069E8  6F7A               	movwf	(?__div_to_l_+1)& (0+255),b
 29450  0069EA  0E00               	movlw	0
 29451  0069EC  6F7B               	movwf	(?__div_to_l_+2)& (0+255),b
 29452  0069EE  0E00               	movlw	0
 29453  0069F0  6F7C               	movwf	(?__div_to_l_+3)& (0+255),b
 29454                           
 29455                           ; BSR set to: 0
 29456  0069F2  0012               	return	
 29457                           
 29458                           ; BSR set to: 0
 29459  0069F4  D009               	goto	l12942
 29460  0069F6                     l12940:
 29461                           
 29462                           ; BSR set to: 0
 29463  0069F6  0100               	movlb	0	; () banked
 29464  0069F8  90D8               	bcf	status,0,c
 29465  0069FA  377F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29466  0069FC  3780               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29467  0069FE  3781               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29468  006A00  3782               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29469  006A02  0100               	movlb	0	; () banked
 29470  006A04  0784               	decf	__div_to_l_@exp1& (0+255),f,b
 29471  006A06  D000               	goto	l12942
 29472  006A08                     l12942:
 29473                           
 29474                           ; BSR set to: 0
 29475  006A08  0100               	movlb	0	; () banked
 29476  006A0A  5184               	movf	__div_to_l_@exp1& (0+255),w,b
 29477  006A0C  0100               	movlb	0	; () banked
 29478  006A0E  A4D8               	btfss	status,2,c
 29479  006A10  D7F2               	goto	l12940
 29480  006A12                     l2601:
 29481                           
 29482                           ; BSR set to: 0
 29483  006A12  C07F  F079         	movff	__div_to_l_@quot,?__div_to_l_
 29484  006A16  C080  F07A         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29485  006A1A  C081  F07B         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29486  006A1E  C082  F07C         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29487                           
 29488                           ; BSR set to: 0
 29489  006A22  0012               	return		;funcret
 29490  006A24                     __end_of__div_to_l_:
 29491                           	opt stack 0
 29492                           tblptru	equ	0xFF8
 29493                           tblptrh	equ	0xFF7
 29494                           tblptrl	equ	0xFF6
 29495                           tablat	equ	0xFF5
 29496                           prodh	equ	0xFF4
 29497                           prodl	equ	0xFF3
 29498                           intcon	equ	0xFF2
 29499                           intcon2	equ	0xFF1
 29500                           indf0	equ	0xFEF
 29501                           postinc0	equ	0xFEE
 29502                           fsr0h	equ	0xFEA
 29503                           fsr0l	equ	0xFE9
 29504                           wreg	equ	0xFE8
 29505                           indf1	equ	0xFE7
 29506                           postdec1	equ	0xFE5
 29507                           fsr1h	equ	0xFE2
 29508                           fsr1l	equ	0xFE1
 29509                           indf2	equ	0xFDF
 29510                           postinc2	equ	0xFDE
 29511                           postdec2	equ	0xFDD
 29512                           fsr2h	equ	0xFDA
 29513                           fsr2l	equ	0xFD9
 29514                           status	equ	0xFD8
 29515                           
 29516 ;; *************** function ___lltoft *****************
 29517 ;; Defined at:
 29518 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 29519 ;; Parameters:    Size  Location     Type
 29520 ;;  c               4   33[BANK0 ] unsigned long 
 29521 ;; Auto vars:     Size  Location     Type
 29522 ;;  exp             1   41[BANK0 ] unsigned char 
 29523 ;; Return value:  Size  Location     Type
 29524 ;;                  3   33[BANK0 ] float 
 29525 ;; Registers used:
 29526 ;;		wreg, status,2, status,0, cstack
 29527 ;; Tracked objects:
 29528 ;;		On entry : 0/0
 29529 ;;		On exit  : 0/0
 29530 ;;		Unchanged: 0/0
 29531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29532 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29535 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29536 ;;Total ram usage:        9 bytes
 29537 ;; Hardware stack levels used:    1
 29538 ;; Hardware stack levels required when called:    7
 29539 ;; This function calls:
 29540 ;;		___ftpack
 29541 ;; This function is called by:
 29542 ;;		_InitUART
 29543 ;;		_sprintf
 29544 ;; This function uses a non-reentrant model
 29545 ;;
 29546                           
 29547                           	psect	text69
 29548  0087F4                     __ptext69:
 29549                           	opt stack 0
 29550  0087F4                     ___lltoft:
 29551                           	opt stack 21
 29552                           
 29553                           ; BSR set to: 0
 29554                           ;incstack = 0
 29555  0087F4  0E8E               	movlw	142
 29556  0087F6  0100               	movlb	0	; () banked
 29557  0087F8  6F89               	movwf	___lltoft@exp& (0+255),b
 29558  0087FA  D009               	goto	l13062
 29559  0087FC                     l13060:
 29560                           
 29561                           ; BSR set to: 0
 29562  0087FC  0100               	movlb	0	; () banked
 29563  0087FE  90D8               	bcf	status,0,c
 29564  008800  3384               	rrcf	(___lltoft@c+3)& (0+255),f,b
 29565  008802  3383               	rrcf	(___lltoft@c+2)& (0+255),f,b
 29566  008804  3382               	rrcf	(___lltoft@c+1)& (0+255),f,b
 29567  008806  3381               	rrcf	___lltoft@c& (0+255),f,b
 29568  008808  0100               	movlb	0	; () banked
 29569  00880A  2B89               	incf	___lltoft@exp& (0+255),f,b
 29570  00880C  D000               	goto	l13062
 29571  00880E                     l13062:
 29572                           
 29573                           ; BSR set to: 0
 29574  00880E  0E00               	movlw	0
 29575  008810  0100               	movlb	0	; () banked
 29576  008812  1581               	andwf	___lltoft@c& (0+255),w,b
 29577  008814  0100               	movlb	0	; () banked
 29578  008816  6F85               	movwf	??___lltoft& (0+255),b
 29579  008818  0E00               	movlw	0
 29580  00881A  0100               	movlb	0	; () banked
 29581  00881C  1582               	andwf	(___lltoft@c+1)& (0+255),w,b
 29582  00881E  0100               	movlb	0	; () banked
 29583  008820  6F86               	movwf	(??___lltoft+1)& (0+255),b
 29584  008822  0E00               	movlw	0
 29585  008824  0100               	movlb	0	; () banked
 29586  008826  1583               	andwf	(___lltoft@c+2)& (0+255),w,b
 29587  008828  0100               	movlb	0	; () banked
 29588  00882A  6F87               	movwf	(??___lltoft+2)& (0+255),b
 29589  00882C  0EFF               	movlw	255
 29590  00882E  0100               	movlb	0	; () banked
 29591  008830  1584               	andwf	(___lltoft@c+3)& (0+255),w,b
 29592  008832  0100               	movlb	0	; () banked
 29593  008834  6F88               	movwf	(??___lltoft+3)& (0+255),b
 29594  008836  0100               	movlb	0	; () banked
 29595  008838  5185               	movf	??___lltoft& (0+255),w,b
 29596  00883A  0100               	movlb	0	; () banked
 29597  00883C  1186               	iorwf	(??___lltoft+1)& (0+255),w,b
 29598  00883E  0100               	movlb	0	; () banked
 29599  008840  1187               	iorwf	(??___lltoft+2)& (0+255),w,b
 29600  008842  0100               	movlb	0	; () banked
 29601  008844  1188               	iorwf	(??___lltoft+3)& (0+255),w,b
 29602  008846  A4D8               	btfss	status,2,c
 29603  008848  D7D9               	goto	l13060
 29604                           
 29605                           ; BSR set to: 0
 29606                           
 29607                           ; BSR set to: 0
 29608  00884A  C081  F079         	movff	___lltoft@c,___ftpack@arg
 29609  00884E  C082  F07A         	movff	___lltoft@c+1,___ftpack@arg+1
 29610  008852  C083  F07B         	movff	___lltoft@c+2,___ftpack@arg+2
 29611  008856  C089  F07C         	movff	___lltoft@exp,___ftpack@exp
 29612  00885A  0E00               	movlw	0
 29613  00885C  0100               	movlb	0	; () banked
 29614  00885E  6F7D               	movwf	___ftpack@sign& (0+255),b
 29615  008860  EC67  F03A         	call	___ftpack	;wreg free
 29616  008864  C079  F081         	movff	?___ftpack,?___lltoft
 29617  008868  C07A  F082         	movff	?___ftpack+1,?___lltoft+1
 29618  00886C  C07B  F083         	movff	?___ftpack+2,?___lltoft+2
 29619  008870  0012               	return	
 29620  008872  0012               	return		;funcret
 29621  008874                     __end_of___lltoft:
 29622                           	opt stack 0
 29623                           tblptru	equ	0xFF8
 29624                           tblptrh	equ	0xFF7
 29625                           tblptrl	equ	0xFF6
 29626                           tablat	equ	0xFF5
 29627                           prodh	equ	0xFF4
 29628                           prodl	equ	0xFF3
 29629                           intcon	equ	0xFF2
 29630                           intcon2	equ	0xFF1
 29631                           indf0	equ	0xFEF
 29632                           postinc0	equ	0xFEE
 29633                           fsr0h	equ	0xFEA
 29634                           fsr0l	equ	0xFE9
 29635                           wreg	equ	0xFE8
 29636                           indf1	equ	0xFE7
 29637                           postdec1	equ	0xFE5
 29638                           fsr1h	equ	0xFE2
 29639                           fsr1l	equ	0xFE1
 29640                           indf2	equ	0xFDF
 29641                           postinc2	equ	0xFDE
 29642                           postdec2	equ	0xFDD
 29643                           fsr2h	equ	0xFDA
 29644                           fsr2l	equ	0xFD9
 29645                           status	equ	0xFD8
 29646                           
 29647 ;; *************** function ___llmod *****************
 29648 ;; Defined at:
 29649 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 29650 ;; Parameters:    Size  Location     Type
 29651 ;;  dividend        4   38[BANK0 ] unsigned long 
 29652 ;;  divisor         4   42[BANK0 ] unsigned long 
 29653 ;; Auto vars:     Size  Location     Type
 29654 ;;  counter         1   46[BANK0 ] unsigned char 
 29655 ;; Return value:  Size  Location     Type
 29656 ;;                  4   38[BANK0 ] unsigned long 
 29657 ;; Registers used:
 29658 ;;		wreg, status,2, status,0
 29659 ;; Tracked objects:
 29660 ;;		On entry : 0/0
 29661 ;;		On exit  : 0/0
 29662 ;;		Unchanged: 0/0
 29663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29664 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29667 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29668 ;;Total ram usage:        9 bytes
 29669 ;; Hardware stack levels used:    1
 29670 ;; Hardware stack levels required when called:    6
 29671 ;; This function calls:
 29672 ;;		Nothing
 29673 ;; This function is called by:
 29674 ;;		_sprintf
 29675 ;; This function uses a non-reentrant model
 29676 ;;
 29677                           
 29678                           	psect	text70
 29679  0082B4                     __ptext70:
 29680                           	opt stack 0
 29681  0082B4                     ___llmod:
 29682                           	opt stack 22
 29683                           
 29684                           ;incstack = 0
 29685  0082B4  0100               	movlb	0	; () banked
 29686  0082B6  518A               	movf	___llmod@divisor& (0+255),w,b
 29687  0082B8  0100               	movlb	0	; () banked
 29688  0082BA  118B               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29689  0082BC  0100               	movlb	0	; () banked
 29690  0082BE  118C               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29691  0082C0  0100               	movlb	0	; () banked
 29692  0082C2  118D               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29693  0082C4  B4D8               	btfsc	status,2,c
 29694  0082C6  D03F               	goto	l2812
 29695                           
 29696                           ; BSR set to: 0
 29697  0082C8  0E01               	movlw	1
 29698  0082CA  0100               	movlb	0	; () banked
 29699  0082CC  6F8E               	movwf	___llmod@counter& (0+255),b
 29700  0082CE  D009               	goto	l13048
 29701  0082D0                     l13046:
 29702                           
 29703                           ; BSR set to: 0
 29704  0082D0  0100               	movlb	0	; () banked
 29705  0082D2  90D8               	bcf	status,0,c
 29706  0082D4  378A               	rlcf	___llmod@divisor& (0+255),f,b
 29707  0082D6  378B               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 29708  0082D8  378C               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 29709  0082DA  378D               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 29710  0082DC  0100               	movlb	0	; () banked
 29711  0082DE  2B8E               	incf	___llmod@counter& (0+255),f,b
 29712  0082E0  D000               	goto	l13048
 29713  0082E2                     l13048:
 29714                           
 29715                           ; BSR set to: 0
 29716  0082E2  0100               	movlb	0	; () banked
 29717  0082E4  BF8D               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 29718  0082E6  D002               	goto	l13050
 29719  0082E8  D7F3               	goto	l13046
 29720                           
 29721                           ; BSR set to: 0
 29722  0082EA  D000               	goto	l13050
 29723  0082EC                     l13050:
 29724                           
 29725                           ; BSR set to: 0
 29726  0082EC  0100               	movlb	0	; () banked
 29727  0082EE  518A               	movf	___llmod@divisor& (0+255),w,b
 29728  0082F0  0100               	movlb	0	; () banked
 29729  0082F2  5D86               	subwf	___llmod@dividend& (0+255),w,b
 29730  0082F4  0100               	movlb	0	; () banked
 29731  0082F6  518B               	movf	(___llmod@divisor+1)& (0+255),w,b
 29732  0082F8  0100               	movlb	0	; () banked
 29733  0082FA  5987               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 29734  0082FC  0100               	movlb	0	; () banked
 29735  0082FE  518C               	movf	(___llmod@divisor+2)& (0+255),w,b
 29736  008300  0100               	movlb	0	; () banked
 29737  008302  5988               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 29738  008304  0100               	movlb	0	; () banked
 29739  008306  518D               	movf	(___llmod@divisor+3)& (0+255),w,b
 29740  008308  0100               	movlb	0	; () banked
 29741  00830A  5989               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 29742  00830C  A0D8               	btfss	status,0,c
 29743  00830E  D011               	goto	l13054
 29744                           
 29745                           ; BSR set to: 0
 29746  008310  0100               	movlb	0	; () banked
 29747  008312  518A               	movf	___llmod@divisor& (0+255),w,b
 29748  008314  0100               	movlb	0	; () banked
 29749  008316  5F86               	subwf	___llmod@dividend& (0+255),f,b
 29750  008318  0100               	movlb	0	; () banked
 29751  00831A  518B               	movf	(___llmod@divisor+1)& (0+255),w,b
 29752  00831C  0100               	movlb	0	; () banked
 29753  00831E  5B87               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 29754  008320  0100               	movlb	0	; () banked
 29755  008322  518C               	movf	(___llmod@divisor+2)& (0+255),w,b
 29756  008324  0100               	movlb	0	; () banked
 29757  008326  5B88               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 29758  008328  0100               	movlb	0	; () banked
 29759  00832A  518D               	movf	(___llmod@divisor+3)& (0+255),w,b
 29760  00832C  0100               	movlb	0	; () banked
 29761  00832E  5B89               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 29762  008330  D000               	goto	l13054
 29763  008332                     l13054:
 29764                           
 29765                           ; BSR set to: 0
 29766  008332  0100               	movlb	0	; () banked
 29767  008334  90D8               	bcf	status,0,c
 29768  008336  338D               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 29769  008338  338C               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 29770  00833A  338B               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 29771  00833C  338A               	rrcf	___llmod@divisor& (0+255),f,b
 29772                           
 29773                           ; BSR set to: 0
 29774  00833E  0100               	movlb	0	; () banked
 29775  008340  2F8E               	decfsz	___llmod@counter& (0+255),f,b
 29776  008342  D7D4               	goto	l13050
 29777  008344  D000               	goto	l2812
 29778  008346                     l2812:
 29779                           
 29780                           ; BSR set to: 0
 29781  008346  C086  F086         	movff	___llmod@dividend,?___llmod
 29782  00834A  C087  F087         	movff	___llmod@dividend+1,?___llmod+1
 29783  00834E  C088  F088         	movff	___llmod@dividend+2,?___llmod+2
 29784  008352  C089  F089         	movff	___llmod@dividend+3,?___llmod+3
 29785                           
 29786                           ; BSR set to: 0
 29787  008356  0012               	return		;funcret
 29788  008358                     __end_of___llmod:
 29789                           	opt stack 0
 29790                           tblptru	equ	0xFF8
 29791                           tblptrh	equ	0xFF7
 29792                           tblptrl	equ	0xFF6
 29793                           tablat	equ	0xFF5
 29794                           prodh	equ	0xFF4
 29795                           prodl	equ	0xFF3
 29796                           intcon	equ	0xFF2
 29797                           intcon2	equ	0xFF1
 29798                           indf0	equ	0xFEF
 29799                           postinc0	equ	0xFEE
 29800                           fsr0h	equ	0xFEA
 29801                           fsr0l	equ	0xFE9
 29802                           wreg	equ	0xFE8
 29803                           indf1	equ	0xFE7
 29804                           postdec1	equ	0xFE5
 29805                           fsr1h	equ	0xFE2
 29806                           fsr1l	equ	0xFE1
 29807                           indf2	equ	0xFDF
 29808                           postinc2	equ	0xFDE
 29809                           postdec2	equ	0xFDD
 29810                           fsr2h	equ	0xFDA
 29811                           fsr2l	equ	0xFD9
 29812                           status	equ	0xFD8
 29813                           
 29814 ;; *************** function ___lldiv *****************
 29815 ;; Defined at:
 29816 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 29817 ;; Parameters:    Size  Location     Type
 29818 ;;  dividend        4   25[BANK0 ] unsigned long 
 29819 ;;  divisor         4   29[BANK0 ] unsigned long 
 29820 ;; Auto vars:     Size  Location     Type
 29821 ;;  quotient        4   33[BANK0 ] unsigned long 
 29822 ;;  counter         1   37[BANK0 ] unsigned char 
 29823 ;; Return value:  Size  Location     Type
 29824 ;;                  4   25[BANK0 ] unsigned long 
 29825 ;; Registers used:
 29826 ;;		wreg, status,2, status,0
 29827 ;; Tracked objects:
 29828 ;;		On entry : 0/0
 29829 ;;		On exit  : 0/0
 29830 ;;		Unchanged: 0/0
 29831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29832 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29833 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29835 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29836 ;;Total ram usage:       13 bytes
 29837 ;; Hardware stack levels used:    1
 29838 ;; Hardware stack levels required when called:    6
 29839 ;; This function calls:
 29840 ;;		Nothing
 29841 ;; This function is called by:
 29842 ;;		_InitUART
 29843 ;;		_sprintf
 29844 ;; This function uses a non-reentrant model
 29845 ;;
 29846                           
 29847                           	psect	text71
 29848  007E6C                     __ptext71:
 29849                           	opt stack 0
 29850  007E6C                     ___lldiv:
 29851                           	opt stack 22
 29852                           
 29853                           ; BSR set to: 0
 29854                           ;incstack = 0
 29855  007E6C  0E00               	movlw	0
 29856  007E6E  0100               	movlb	0	; () banked
 29857  007E70  6F81               	movwf	___lldiv@quotient& (0+255),b
 29858  007E72  0E00               	movlw	0
 29859  007E74  6F82               	movwf	(___lldiv@quotient+1)& (0+255),b
 29860  007E76  0E00               	movlw	0
 29861  007E78  6F83               	movwf	(___lldiv@quotient+2)& (0+255),b
 29862  007E7A  0E00               	movlw	0
 29863  007E7C  6F84               	movwf	(___lldiv@quotient+3)& (0+255),b
 29864                           
 29865                           ; BSR set to: 0
 29866  007E7E  0100               	movlb	0	; () banked
 29867  007E80  517D               	movf	___lldiv@divisor& (0+255),w,b
 29868  007E82  0100               	movlb	0	; () banked
 29869  007E84  117E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29870  007E86  0100               	movlb	0	; () banked
 29871  007E88  117F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29872  007E8A  0100               	movlb	0	; () banked
 29873  007E8C  1180               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29874  007E8E  B4D8               	btfsc	status,2,c
 29875  007E90  D047               	goto	l2802
 29876                           
 29877                           ; BSR set to: 0
 29878  007E92  0E01               	movlw	1
 29879  007E94  0100               	movlb	0	; () banked
 29880  007E96  6F85               	movwf	___lldiv@counter& (0+255),b
 29881  007E98  D009               	goto	l13028
 29882  007E9A                     l13026:
 29883                           
 29884                           ; BSR set to: 0
 29885  007E9A  0100               	movlb	0	; () banked
 29886  007E9C  90D8               	bcf	status,0,c
 29887  007E9E  377D               	rlcf	___lldiv@divisor& (0+255),f,b
 29888  007EA0  377E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29889  007EA2  377F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29890  007EA4  3780               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29891  007EA6  0100               	movlb	0	; () banked
 29892  007EA8  2B85               	incf	___lldiv@counter& (0+255),f,b
 29893  007EAA  D000               	goto	l13028
 29894  007EAC                     l13028:
 29895                           
 29896                           ; BSR set to: 0
 29897  007EAC  0100               	movlb	0	; () banked
 29898  007EAE  BF80               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 29899  007EB0  D002               	goto	l13030
 29900  007EB2  D7F3               	goto	l13026
 29901                           
 29902                           ; BSR set to: 0
 29903  007EB4  D000               	goto	l13030
 29904  007EB6                     l13030:
 29905                           
 29906                           ; BSR set to: 0
 29907  007EB6  0100               	movlb	0	; () banked
 29908  007EB8  90D8               	bcf	status,0,c
 29909  007EBA  3781               	rlcf	___lldiv@quotient& (0+255),f,b
 29910  007EBC  3782               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29911  007EBE  3783               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29912  007EC0  3784               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29913                           
 29914                           ; BSR set to: 0
 29915  007EC2  0100               	movlb	0	; () banked
 29916  007EC4  517D               	movf	___lldiv@divisor& (0+255),w,b
 29917  007EC6  0100               	movlb	0	; () banked
 29918  007EC8  5D79               	subwf	___lldiv@dividend& (0+255),w,b
 29919  007ECA  0100               	movlb	0	; () banked
 29920  007ECC  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29921  007ECE  0100               	movlb	0	; () banked
 29922  007ED0  597A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29923  007ED2  0100               	movlb	0	; () banked
 29924  007ED4  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29925  007ED6  0100               	movlb	0	; () banked
 29926  007ED8  597B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29927  007EDA  0100               	movlb	0	; () banked
 29928  007EDC  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29929  007EDE  0100               	movlb	0	; () banked
 29930  007EE0  597C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29931  007EE2  A0D8               	btfss	status,0,c
 29932  007EE4  D013               	goto	l13038
 29933                           
 29934                           ; BSR set to: 0
 29935  007EE6  0100               	movlb	0	; () banked
 29936  007EE8  517D               	movf	___lldiv@divisor& (0+255),w,b
 29937  007EEA  0100               	movlb	0	; () banked
 29938  007EEC  5F79               	subwf	___lldiv@dividend& (0+255),f,b
 29939  007EEE  0100               	movlb	0	; () banked
 29940  007EF0  517E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29941  007EF2  0100               	movlb	0	; () banked
 29942  007EF4  5B7A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29943  007EF6  0100               	movlb	0	; () banked
 29944  007EF8  517F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29945  007EFA  0100               	movlb	0	; () banked
 29946  007EFC  5B7B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29947  007EFE  0100               	movlb	0	; () banked
 29948  007F00  5180               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29949  007F02  0100               	movlb	0	; () banked
 29950  007F04  5B7C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29951                           
 29952                           ; BSR set to: 0
 29953  007F06  0100               	movlb	0	; () banked
 29954  007F08  8181               	bsf	___lldiv@quotient& (0+255),0,b
 29955  007F0A  D000               	goto	l13038
 29956  007F0C                     l13038:
 29957                           
 29958                           ; BSR set to: 0
 29959  007F0C  0100               	movlb	0	; () banked
 29960  007F0E  90D8               	bcf	status,0,c
 29961  007F10  3380               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29962  007F12  337F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29963  007F14  337E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29964  007F16  337D               	rrcf	___lldiv@divisor& (0+255),f,b
 29965                           
 29966                           ; BSR set to: 0
 29967  007F18  0100               	movlb	0	; () banked
 29968  007F1A  2F85               	decfsz	___lldiv@counter& (0+255),f,b
 29969  007F1C  D7CC               	goto	l13030
 29970  007F1E  D000               	goto	l2802
 29971  007F20                     l2802:
 29972                           
 29973                           ; BSR set to: 0
 29974  007F20  C081  F079         	movff	___lldiv@quotient,?___lldiv
 29975  007F24  C082  F07A         	movff	___lldiv@quotient+1,?___lldiv+1
 29976  007F28  C083  F07B         	movff	___lldiv@quotient+2,?___lldiv+2
 29977  007F2C  C084  F07C         	movff	___lldiv@quotient+3,?___lldiv+3
 29978                           
 29979                           ; BSR set to: 0
 29980  007F30  0012               	return		;funcret
 29981  007F32                     __end_of___lldiv:
 29982                           	opt stack 0
 29983                           tblptru	equ	0xFF8
 29984                           tblptrh	equ	0xFF7
 29985                           tblptrl	equ	0xFF6
 29986                           tablat	equ	0xFF5
 29987                           prodh	equ	0xFF4
 29988                           prodl	equ	0xFF3
 29989                           intcon	equ	0xFF2
 29990                           intcon2	equ	0xFF1
 29991                           indf0	equ	0xFEF
 29992                           postinc0	equ	0xFEE
 29993                           fsr0h	equ	0xFEA
 29994                           fsr0l	equ	0xFE9
 29995                           wreg	equ	0xFE8
 29996                           indf1	equ	0xFE7
 29997                           postdec1	equ	0xFE5
 29998                           fsr1h	equ	0xFE2
 29999                           fsr1l	equ	0xFE1
 30000                           indf2	equ	0xFDF
 30001                           postinc2	equ	0xFDE
 30002                           postdec2	equ	0xFDD
 30003                           fsr2h	equ	0xFDA
 30004                           fsr2l	equ	0xFD9
 30005                           status	equ	0xFD8
 30006                           
 30007 ;; *************** function ___fttol *****************
 30008 ;; Defined at:
 30009 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 30010 ;; Parameters:    Size  Location     Type
 30011 ;;  f1              3   88[BANK0 ] float 
 30012 ;; Auto vars:     Size  Location     Type
 30013 ;;  lval            4   98[BANK0 ] unsigned long 
 30014 ;;  exp1            1  102[BANK0 ] unsigned char 
 30015 ;;  sign1           1   97[BANK0 ] unsigned char 
 30016 ;; Return value:  Size  Location     Type
 30017 ;;                  4   88[BANK0 ] long 
 30018 ;; Registers used:
 30019 ;;		wreg, status,2, status,0
 30020 ;; Tracked objects:
 30021 ;;		On entry : 0/0
 30022 ;;		On exit  : 0/0
 30023 ;;		Unchanged: 0/0
 30024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30026 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30027 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30028 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30029 ;;Total ram usage:       15 bytes
 30030 ;; Hardware stack levels used:    1
 30031 ;; Hardware stack levels required when called:    6
 30032 ;; This function calls:
 30033 ;;		Nothing
 30034 ;; This function is called by:
 30035 ;;		_Round
 30036 ;;		_InitUART
 30037 ;;		_sprintf
 30038 ;; This function uses a non-reentrant model
 30039 ;;
 30040                           
 30041                           	psect	text72
 30042  006FE0                     __ptext72:
 30043                           	opt stack 0
 30044  006FE0                     ___fttol:
 30045                           	opt stack 22
 30046                           
 30047                           ; BSR set to: 0
 30048                           ;incstack = 0
 30049  006FE0  C0BA  F0BC         	movff	___fttol@f1+2,??___fttol
 30050  006FE4  0100               	movlb	0	; () banked
 30051  006FE6  6BBD               	clrf	(??___fttol+1)& (0+255),b
 30052  006FE8  6BBE               	clrf	(??___fttol+2)& (0+255),b
 30053  006FEA  0100               	movlb	0	; () banked
 30054  006FEC  35B9               	rlcf	(___fttol@f1+1)& (0+255),w,b
 30055  006FEE  0100               	movlb	0	; () banked
 30056  006FF0  37BC               	rlcf	??___fttol& (0+255),f,b
 30057  006FF2  E301               	bnc	u15451
 30058  006FF4  81BD               	bsf	(??___fttol+1)& (0+255),0,b
 30059  006FF6                     u15451:
 30060  006FF6  0100               	movlb	0	; () banked
 30061  006FF8  51BC               	movf	??___fttol& (0+255),w,b
 30062  006FFA  0100               	movlb	0	; () banked
 30063  006FFC  6FC6               	movwf	___fttol@exp1& (0+255),b
 30064  006FFE  0100               	movlb	0	; () banked
 30065  007000  51C6               	movf	___fttol@exp1& (0+255),w,b
 30066  007002  A4D8               	btfss	status,2,c
 30067  007004  D00A               	goto	l12980
 30068                           
 30069                           ; BSR set to: 0
 30070  007006  0E00               	movlw	0
 30071  007008  0100               	movlb	0	; () banked
 30072  00700A  6FB8               	movwf	?___fttol& (0+255),b
 30073  00700C  0E00               	movlw	0
 30074  00700E  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30075  007010  0E00               	movlw	0
 30076  007012  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30077  007014  0E00               	movlw	0
 30078  007016  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30079                           
 30080                           ; BSR set to: 0
 30081  007018  0012               	return	
 30082  00701A                     l12980:
 30083                           
 30084                           ; BSR set to: 0
 30085  00701A  0E17               	movlw	23
 30086  00701C  0100               	movlb	0	; () banked
 30087  00701E  6FBC               	movwf	??___fttol& (0+255),b
 30088  007020  C0B8  F0BD         	movff	___fttol@f1,??___fttol+1
 30089  007024  C0B9  F0BE         	movff	___fttol@f1+1,??___fttol+2
 30090  007028  C0BA  F0BF         	movff	___fttol@f1+2,??___fttol+3
 30091  00702C  0100               	movlb	0	; () banked
 30092  00702E  29BC               	incf	??___fttol& (0+255),w,b
 30093  007030  0100               	movlb	0	; () banked
 30094  007032  6FC0               	movwf	(??___fttol+4)& (0+255),b
 30095  007034  D005               	goto	u15470
 30096  007036                     u15475:
 30097  007036  0100               	movlb	0	; () banked
 30098  007038  90D8               	bcf	status,0,c
 30099  00703A  33BF               	rrcf	(??___fttol+3)& (0+255),f,b
 30100  00703C  33BE               	rrcf	(??___fttol+2)& (0+255),f,b
 30101  00703E  33BD               	rrcf	(??___fttol+1)& (0+255),f,b
 30102  007040                     u15470:
 30103  007040  0100               	movlb	0	; () banked
 30104  007042  2FC0               	decfsz	(??___fttol+4)& (0+255),f,b
 30105  007044  D7F8               	goto	u15475
 30106  007046  0100               	movlb	0	; () banked
 30107  007048  51BD               	movf	(??___fttol+1)& (0+255),w,b
 30108  00704A  0100               	movlb	0	; () banked
 30109  00704C  6FC1               	movwf	___fttol@sign1& (0+255),b
 30110                           
 30111                           ; BSR set to: 0
 30112  00704E  0100               	movlb	0	; () banked
 30113  007050  8FB9               	bsf	(___fttol@f1+1)& (0+255),7,b
 30114                           
 30115                           ; BSR set to: 0
 30116  007052  0EFF               	movlw	255
 30117  007054  0100               	movlb	0	; () banked
 30118  007056  17B8               	andwf	___fttol@f1& (0+255),f,b
 30119  007058  0EFF               	movlw	255
 30120  00705A  0100               	movlb	0	; () banked
 30121  00705C  17B9               	andwf	(___fttol@f1+1)& (0+255),f,b
 30122  00705E  0E00               	movlw	0
 30123  007060  0100               	movlb	0	; () banked
 30124  007062  17BA               	andwf	(___fttol@f1+2)& (0+255),f,b
 30125                           
 30126                           ; BSR set to: 0
 30127  007064  0100               	movlb	0	; () banked
 30128  007066  51B8               	movf	___fttol@f1& (0+255),w,b
 30129  007068  0100               	movlb	0	; () banked
 30130  00706A  6FC2               	movwf	___fttol@lval& (0+255),b
 30131  00706C  0100               	movlb	0	; () banked
 30132  00706E  51B9               	movf	(___fttol@f1+1)& (0+255),w,b
 30133  007070  0100               	movlb	0	; () banked
 30134  007072  6FC3               	movwf	(___fttol@lval+1)& (0+255),b
 30135  007074  0100               	movlb	0	; () banked
 30136  007076  51BA               	movf	(___fttol@f1+2)& (0+255),w,b
 30137  007078  0100               	movlb	0	; () banked
 30138  00707A  6FC4               	movwf	(___fttol@lval+2)& (0+255),b
 30139  00707C  0100               	movlb	0	; () banked
 30140  00707E  6BC5               	clrf	(___fttol@lval+3)& (0+255),b
 30141                           
 30142                           ; BSR set to: 0
 30143  007080  0E8E               	movlw	142
 30144  007082  0100               	movlb	0	; () banked
 30145  007084  5FC6               	subwf	___fttol@exp1& (0+255),f,b
 30146                           
 30147                           ; BSR set to: 0
 30148  007086  0100               	movlb	0	; () banked
 30149  007088  AFC6               	btfss	___fttol@exp1& (0+255),7,b
 30150  00708A  D01B               	goto	l13002
 30151                           
 30152                           ; BSR set to: 0
 30153  00708C  0100               	movlb	0	; () banked
 30154  00708E  51C6               	movf	___fttol@exp1& (0+255),w,b
 30155  007090  0A80               	xorlw	128
 30156  007092  0F8F               	addlw	143
 30157  007094  B0D8               	btfsc	status,0,c
 30158  007096  D00B               	goto	l12998
 30159                           
 30160                           ; BSR set to: 0
 30161  007098  0E00               	movlw	0
 30162  00709A  0100               	movlb	0	; () banked
 30163  00709C  6FB8               	movwf	?___fttol& (0+255),b
 30164  00709E  0E00               	movlw	0
 30165  0070A0  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30166  0070A2  0E00               	movlw	0
 30167  0070A4  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30168  0070A6  0E00               	movlw	0
 30169  0070A8  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30170                           
 30171                           ; BSR set to: 0
 30172  0070AA  0012               	return	
 30173                           
 30174                           ; BSR set to: 0
 30175  0070AC  D000               	goto	l12998
 30176  0070AE                     l12998:
 30177                           
 30178                           ; BSR set to: 0
 30179  0070AE  0100               	movlb	0	; () banked
 30180  0070B0  90D8               	bcf	status,0,c
 30181  0070B2  33C5               	rrcf	(___fttol@lval+3)& (0+255),f,b
 30182  0070B4  33C4               	rrcf	(___fttol@lval+2)& (0+255),f,b
 30183  0070B6  33C3               	rrcf	(___fttol@lval+1)& (0+255),f,b
 30184  0070B8  33C2               	rrcf	___fttol@lval& (0+255),f,b
 30185                           
 30186                           ; BSR set to: 0
 30187  0070BA  0100               	movlb	0	; () banked
 30188  0070BC  3FC6               	incfsz	___fttol@exp1& (0+255),f,b
 30189  0070BE  D7F7               	goto	l12998
 30190                           
 30191                           ; BSR set to: 0
 30192  0070C0  D01F               	goto	l13012
 30193  0070C2                     l13002:
 30194                           
 30195                           ; BSR set to: 0
 30196  0070C2  0E17               	movlw	23
 30197  0070C4  0100               	movlb	0	; () banked
 30198  0070C6  65C6               	cpfsgt	___fttol@exp1& (0+255),b
 30199  0070C8  D014               	goto	l13010
 30200                           
 30201                           ; BSR set to: 0
 30202  0070CA  0E00               	movlw	0
 30203  0070CC  0100               	movlb	0	; () banked
 30204  0070CE  6FB8               	movwf	?___fttol& (0+255),b
 30205  0070D0  0E00               	movlw	0
 30206  0070D2  6FB9               	movwf	(?___fttol+1)& (0+255),b
 30207  0070D4  0E00               	movlw	0
 30208  0070D6  6FBA               	movwf	(?___fttol+2)& (0+255),b
 30209  0070D8  0E00               	movlw	0
 30210  0070DA  6FBB               	movwf	(?___fttol+3)& (0+255),b
 30211                           
 30212                           ; BSR set to: 0
 30213  0070DC  0012               	return	
 30214                           
 30215                           ; BSR set to: 0
 30216  0070DE  D009               	goto	l13010
 30217  0070E0                     l13008:
 30218                           
 30219                           ; BSR set to: 0
 30220  0070E0  0100               	movlb	0	; () banked
 30221  0070E2  90D8               	bcf	status,0,c
 30222  0070E4  37C2               	rlcf	___fttol@lval& (0+255),f,b
 30223  0070E6  37C3               	rlcf	(___fttol@lval+1)& (0+255),f,b
 30224  0070E8  37C4               	rlcf	(___fttol@lval+2)& (0+255),f,b
 30225  0070EA  37C5               	rlcf	(___fttol@lval+3)& (0+255),f,b
 30226  0070EC  0100               	movlb	0	; () banked
 30227  0070EE  07C6               	decf	___fttol@exp1& (0+255),f,b
 30228  0070F0  D000               	goto	l13010
 30229  0070F2                     l13010:
 30230                           
 30231                           ; BSR set to: 0
 30232  0070F2  0100               	movlb	0	; () banked
 30233  0070F4  51C6               	movf	___fttol@exp1& (0+255),w,b
 30234  0070F6  0100               	movlb	0	; () banked
 30235  0070F8  B4D8               	btfsc	status,2,c
 30236  0070FA  D002               	goto	l13012
 30237  0070FC  D7F1               	goto	l13008
 30238                           
 30239                           ; BSR set to: 0
 30240  0070FE  D000               	goto	l13012
 30241  007100                     l13012:
 30242                           
 30243                           ; BSR set to: 0
 30244  007100  0100               	movlb	0	; () banked
 30245  007102  51C1               	movf	___fttol@sign1& (0+255),w,b
 30246  007104  0100               	movlb	0	; () banked
 30247  007106  B4D8               	btfsc	status,2,c
 30248  007108  D00A               	goto	l13016
 30249                           
 30250                           ; BSR set to: 0
 30251  00710A  0100               	movlb	0	; () banked
 30252  00710C  1FC5               	comf	(___fttol@lval+3)& (0+255),f,b
 30253  00710E  1FC4               	comf	(___fttol@lval+2)& (0+255),f,b
 30254  007110  1FC3               	comf	(___fttol@lval+1)& (0+255),f,b
 30255  007112  6DC2               	negf	___fttol@lval& (0+255),b
 30256  007114  0E00               	movlw	0
 30257  007116  23C3               	addwfc	(___fttol@lval+1)& (0+255),f,b
 30258  007118  23C4               	addwfc	(___fttol@lval+2)& (0+255),f,b
 30259  00711A  23C5               	addwfc	(___fttol@lval+3)& (0+255),f,b
 30260  00711C  D000               	goto	l13016
 30261  00711E                     l13016:
 30262                           
 30263                           ; BSR set to: 0
 30264  00711E  C0C2  F0B8         	movff	___fttol@lval,?___fttol
 30265  007122  C0C3  F0B9         	movff	___fttol@lval+1,?___fttol+1
 30266  007126  C0C4  F0BA         	movff	___fttol@lval+2,?___fttol+2
 30267  00712A  C0C5  F0BB         	movff	___fttol@lval+3,?___fttol+3
 30268  00712E  0012               	return	
 30269                           
 30270                           ; BSR set to: 0
 30271                           
 30272                           ; BSR set to: 0
 30273  007130  0012               	return		;funcret
 30274  007132                     __end_of___fttol:
 30275                           	opt stack 0
 30276                           tblptru	equ	0xFF8
 30277                           tblptrh	equ	0xFF7
 30278                           tblptrl	equ	0xFF6
 30279                           tablat	equ	0xFF5
 30280                           prodh	equ	0xFF4
 30281                           prodl	equ	0xFF3
 30282                           intcon	equ	0xFF2
 30283                           intcon2	equ	0xFF1
 30284                           indf0	equ	0xFEF
 30285                           postinc0	equ	0xFEE
 30286                           fsr0h	equ	0xFEA
 30287                           fsr0l	equ	0xFE9
 30288                           wreg	equ	0xFE8
 30289                           indf1	equ	0xFE7
 30290                           postdec1	equ	0xFE5
 30291                           fsr1h	equ	0xFE2
 30292                           fsr1l	equ	0xFE1
 30293                           indf2	equ	0xFDF
 30294                           postinc2	equ	0xFDE
 30295                           postdec2	equ	0xFDD
 30296                           fsr2h	equ	0xFDA
 30297                           fsr2l	equ	0xFD9
 30298                           status	equ	0xFD8
 30299                           
 30300 ;; *************** function ___ftsub *****************
 30301 ;; Defined at:
 30302 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 30303 ;; Parameters:    Size  Location     Type
 30304 ;;  f1              3   88[BANK0 ] float 
 30305 ;;  f2              3   91[BANK0 ] float 
 30306 ;; Auto vars:     Size  Location     Type
 30307 ;;		None
 30308 ;; Return value:  Size  Location     Type
 30309 ;;                  3   88[BANK0 ] float 
 30310 ;; Registers used:
 30311 ;;		wreg, status,2, status,0, cstack
 30312 ;; Tracked objects:
 30313 ;;		On entry : 0/0
 30314 ;;		On exit  : 0/0
 30315 ;;		Unchanged: 0/0
 30316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30317 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30320 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30321 ;;Total ram usage:        6 bytes
 30322 ;; Hardware stack levels used:    1
 30323 ;; Hardware stack levels required when called:    8
 30324 ;; This function calls:
 30325 ;;		___ftadd
 30326 ;; This function is called by:
 30327 ;;		_main
 30328 ;;		_sprintf
 30329 ;; This function uses a non-reentrant model
 30330 ;;
 30331                           
 30332                           	psect	text73
 30333  008D80                     __ptext73:
 30334                           	opt stack 0
 30335  008D80                     ___ftsub:
 30336                           	opt stack 22
 30337                           
 30338                           ; BSR set to: 0
 30339                           ;incstack = 0
 30340  008D80  0100               	movlb	0	; () banked
 30341  008D82  51BB               	movf	___ftsub@f2& (0+255),w,b
 30342  008D84  0100               	movlb	0	; () banked
 30343  008D86  11BC               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 30344  008D88  0100               	movlb	0	; () banked
 30345  008D8A  11BD               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 30346  008D8C  B4D8               	btfsc	status,2,c
 30347  008D8E  D00A               	goto	l12948
 30348                           
 30349                           ; BSR set to: 0
 30350  008D90  0E00               	movlw	0
 30351  008D92  0100               	movlb	0	; () banked
 30352  008D94  1BBB               	xorwf	___ftsub@f2& (0+255),f,b
 30353  008D96  0E00               	movlw	0
 30354  008D98  0100               	movlb	0	; () banked
 30355  008D9A  1BBC               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 30356  008D9C  0E80               	movlw	128
 30357  008D9E  0100               	movlb	0	; () banked
 30358  008DA0  1BBD               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 30359  008DA2  D000               	goto	l12948
 30360  008DA4                     l12948:
 30361                           
 30362                           ; BSR set to: 0
 30363  008DA4  C0B8  F0AC         	movff	___ftsub@f1,___ftadd@f1
 30364  008DA8  C0B9  F0AD         	movff	___ftsub@f1+1,___ftadd@f1+1
 30365  008DAC  C0BA  F0AE         	movff	___ftsub@f1+2,___ftadd@f1+2
 30366  008DB0  C0BB  F0AF         	movff	___ftsub@f2,___ftadd@f2
 30367  008DB4  C0BC  F0B0         	movff	___ftsub@f2+1,___ftadd@f2+1
 30368  008DB8  C0BD  F0B1         	movff	___ftsub@f2+2,___ftadd@f2+2
 30369  008DBC  EC1E  F02D         	call	___ftadd	;wreg free
 30370  008DC0  C0AC  F0B8         	movff	?___ftadd,?___ftsub
 30371  008DC4  C0AD  F0B9         	movff	?___ftadd+1,?___ftsub+1
 30372  008DC8  C0AE  F0BA         	movff	?___ftadd+2,?___ftsub+2
 30373  008DCC  0012               	return	
 30374  008DCE  0012               	return		;funcret
 30375  008DD0                     __end_of___ftsub:
 30376                           	opt stack 0
 30377                           tblptru	equ	0xFF8
 30378                           tblptrh	equ	0xFF7
 30379                           tblptrl	equ	0xFF6
 30380                           tablat	equ	0xFF5
 30381                           prodh	equ	0xFF4
 30382                           prodl	equ	0xFF3
 30383                           intcon	equ	0xFF2
 30384                           intcon2	equ	0xFF1
 30385                           indf0	equ	0xFEF
 30386                           postinc0	equ	0xFEE
 30387                           fsr0h	equ	0xFEA
 30388                           fsr0l	equ	0xFE9
 30389                           wreg	equ	0xFE8
 30390                           indf1	equ	0xFE7
 30391                           postdec1	equ	0xFE5
 30392                           fsr1h	equ	0xFE2
 30393                           fsr1l	equ	0xFE1
 30394                           indf2	equ	0xFDF
 30395                           postinc2	equ	0xFDE
 30396                           postdec2	equ	0xFDD
 30397                           fsr2h	equ	0xFDA
 30398                           fsr2l	equ	0xFD9
 30399                           status	equ	0xFD8
 30400                           
 30401 ;; *************** function ___ftadd *****************
 30402 ;; Defined at:
 30403 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 30404 ;; Parameters:    Size  Location     Type
 30405 ;;  f1              3   76[BANK0 ] float 
 30406 ;;  f2              3   79[BANK0 ] float 
 30407 ;; Auto vars:     Size  Location     Type
 30408 ;;  exp1            1   87[BANK0 ] unsigned char 
 30409 ;;  exp2            1   86[BANK0 ] unsigned char 
 30410 ;;  sign            1   85[BANK0 ] unsigned char 
 30411 ;; Return value:  Size  Location     Type
 30412 ;;                  3   76[BANK0 ] float 
 30413 ;; Registers used:
 30414 ;;		wreg, status,2, status,0, cstack
 30415 ;; Tracked objects:
 30416 ;;		On entry : 0/0
 30417 ;;		On exit  : 0/0
 30418 ;;		Unchanged: 0/0
 30419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30420 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30421 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30422 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30424 ;;Total ram usage:       12 bytes
 30425 ;; Hardware stack levels used:    1
 30426 ;; Hardware stack levels required when called:    7
 30427 ;; This function calls:
 30428 ;;		___ftpack
 30429 ;; This function is called by:
 30430 ;;		_main
 30431 ;;		_Round
 30432 ;;		_sprintf
 30433 ;;		___ftsub
 30434 ;; This function uses a non-reentrant model
 30435 ;;
 30436                           
 30437                           	psect	text74
 30438  005A3C                     __ptext74:
 30439                           	opt stack 0
 30440  005A3C                     ___ftadd:
 30441                           	opt stack 22
 30442                           
 30443                           ;incstack = 0
 30444  005A3C  C0AE  F0B2         	movff	___ftadd@f1+2,??___ftadd
 30445  005A40  0100               	movlb	0	; () banked
 30446  005A42  6BB3               	clrf	(??___ftadd+1)& (0+255),b
 30447  005A44  6BB4               	clrf	(??___ftadd+2)& (0+255),b
 30448  005A46  0100               	movlb	0	; () banked
 30449  005A48  35AD               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 30450  005A4A  0100               	movlb	0	; () banked
 30451  005A4C  37B2               	rlcf	??___ftadd& (0+255),f,b
 30452  005A4E  E301               	bnc	u14441
 30453  005A50  81B3               	bsf	(??___ftadd+1)& (0+255),0,b
 30454  005A52                     u14441:
 30455  005A52  0100               	movlb	0	; () banked
 30456  005A54  51B2               	movf	??___ftadd& (0+255),w,b
 30457  005A56  0100               	movlb	0	; () banked
 30458  005A58  6FB7               	movwf	___ftadd@exp1& (0+255),b
 30459  005A5A  C0B1  F0B2         	movff	___ftadd@f2+2,??___ftadd
 30460  005A5E  0100               	movlb	0	; () banked
 30461  005A60  6BB3               	clrf	(??___ftadd+1)& (0+255),b
 30462  005A62  6BB4               	clrf	(??___ftadd+2)& (0+255),b
 30463  005A64  0100               	movlb	0	; () banked
 30464  005A66  35B0               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 30465  005A68  0100               	movlb	0	; () banked
 30466  005A6A  37B2               	rlcf	??___ftadd& (0+255),f,b
 30467  005A6C  E301               	bnc	u14451
 30468  005A6E  81B3               	bsf	(??___ftadd+1)& (0+255),0,b
 30469  005A70                     u14451:
 30470  005A70  0100               	movlb	0	; () banked
 30471  005A72  51B2               	movf	??___ftadd& (0+255),w,b
 30472  005A74  0100               	movlb	0	; () banked
 30473  005A76  6FB6               	movwf	___ftadd@exp2& (0+255),b
 30474                           
 30475                           ; BSR set to: 0
 30476  005A78  0100               	movlb	0	; () banked
 30477  005A7A  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30478  005A7C  0100               	movlb	0	; () banked
 30479  005A7E  B4D8               	btfsc	status,2,c
 30480  005A80  D011               	goto	l2673
 30481                           
 30482                           ; BSR set to: 0
 30483  005A82  0100               	movlb	0	; () banked
 30484  005A84  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30485  005A86  0100               	movlb	0	; () banked
 30486  005A88  5DB7               	subwf	___ftadd@exp1& (0+255),w,b
 30487  005A8A  B0D8               	btfsc	status,0,c
 30488  005A8C  D012               	goto	l12418
 30489                           
 30490                           ; BSR set to: 0
 30491  005A8E  0100               	movlb	0	; () banked
 30492  005A90  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30493  005A92  0800               	sublw	0
 30494  005A94  0100               	movlb	0	; () banked
 30495  005A96  25B6               	addwf	___ftadd@exp2& (0+255),w,b
 30496  005A98  0100               	movlb	0	; () banked
 30497  005A9A  6FB2               	movwf	??___ftadd& (0+255),b
 30498  005A9C  0E18               	movlw	24
 30499  005A9E  0100               	movlb	0	; () banked
 30500  005AA0  65B2               	cpfsgt	??___ftadd& (0+255),b
 30501  005AA2  D007               	goto	l12418
 30502  005AA4                     l2673:
 30503                           
 30504                           ; BSR set to: 0
 30505  005AA4  C0AF  F0AC         	movff	___ftadd@f2,?___ftadd
 30506  005AA8  C0B0  F0AD         	movff	___ftadd@f2+1,?___ftadd+1
 30507  005AAC  C0B1  F0AE         	movff	___ftadd@f2+2,?___ftadd+2
 30508  005AB0  0012               	return	
 30509  005AB2                     l12418:
 30510                           
 30511                           ; BSR set to: 0
 30512  005AB2  0100               	movlb	0	; () banked
 30513  005AB4  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30514  005AB6  0100               	movlb	0	; () banked
 30515  005AB8  B4D8               	btfsc	status,2,c
 30516  005ABA  D011               	goto	l2677
 30517                           
 30518                           ; BSR set to: 0
 30519  005ABC  0100               	movlb	0	; () banked
 30520  005ABE  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30521  005AC0  0100               	movlb	0	; () banked
 30522  005AC2  5DB6               	subwf	___ftadd@exp2& (0+255),w,b
 30523  005AC4  B0D8               	btfsc	status,0,c
 30524  005AC6  D012               	goto	l12424
 30525                           
 30526                           ; BSR set to: 0
 30527  005AC8  0100               	movlb	0	; () banked
 30528  005ACA  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30529  005ACC  0800               	sublw	0
 30530  005ACE  0100               	movlb	0	; () banked
 30531  005AD0  25B7               	addwf	___ftadd@exp1& (0+255),w,b
 30532  005AD2  0100               	movlb	0	; () banked
 30533  005AD4  6FB2               	movwf	??___ftadd& (0+255),b
 30534  005AD6  0E18               	movlw	24
 30535  005AD8  0100               	movlb	0	; () banked
 30536  005ADA  65B2               	cpfsgt	??___ftadd& (0+255),b
 30537  005ADC  D007               	goto	l12424
 30538  005ADE                     l2677:
 30539                           
 30540                           ; BSR set to: 0
 30541  005ADE  C0AC  F0AC         	movff	___ftadd@f1,?___ftadd
 30542  005AE2  C0AD  F0AD         	movff	___ftadd@f1+1,?___ftadd+1
 30543  005AE6  C0AE  F0AE         	movff	___ftadd@f1+2,?___ftadd+2
 30544  005AEA  0012               	return	
 30545  005AEC                     l12424:
 30546                           
 30547                           ; BSR set to: 0
 30548  005AEC  0E06               	movlw	6
 30549  005AEE  0100               	movlb	0	; () banked
 30550  005AF0  6FB5               	movwf	___ftadd@sign& (0+255),b
 30551                           
 30552                           ; BSR set to: 0
 30553  005AF2  0100               	movlb	0	; () banked
 30554  005AF4  AFAE               	btfss	(___ftadd@f1+2)& (0+255),7,b
 30555  005AF6  D003               	goto	l12430
 30556                           
 30557                           ; BSR set to: 0
 30558  005AF8  0100               	movlb	0	; () banked
 30559  005AFA  8FB5               	bsf	___ftadd@sign& (0+255),7,b
 30560  005AFC  D000               	goto	l12430
 30561  005AFE                     l12430:
 30562                           
 30563                           ; BSR set to: 0
 30564  005AFE  0100               	movlb	0	; () banked
 30565  005B00  AFB1               	btfss	(___ftadd@f2+2)& (0+255),7,b
 30566  005B02  D002               	goto	l2679
 30567                           
 30568                           ; BSR set to: 0
 30569  005B04  0100               	movlb	0	; () banked
 30570  005B06  8DB5               	bsf	___ftadd@sign& (0+255),6,b
 30571  005B08                     l2679:
 30572                           
 30573                           ; BSR set to: 0
 30574  005B08  0100               	movlb	0	; () banked
 30575  005B0A  8FAD               	bsf	(___ftadd@f1+1)& (0+255),7,b
 30576                           
 30577                           ; BSR set to: 0
 30578  005B0C  0EFF               	movlw	255
 30579  005B0E  0100               	movlb	0	; () banked
 30580  005B10  17AC               	andwf	___ftadd@f1& (0+255),f,b
 30581  005B12  0EFF               	movlw	255
 30582  005B14  0100               	movlb	0	; () banked
 30583  005B16  17AD               	andwf	(___ftadd@f1+1)& (0+255),f,b
 30584  005B18  0E00               	movlw	0
 30585  005B1A  0100               	movlb	0	; () banked
 30586  005B1C  17AE               	andwf	(___ftadd@f1+2)& (0+255),f,b
 30587  005B1E  0100               	movlb	0	; () banked
 30588  005B20  8FB0               	bsf	(___ftadd@f2+1)& (0+255),7,b
 30589                           
 30590                           ; BSR set to: 0
 30591  005B22  0EFF               	movlw	255
 30592  005B24  0100               	movlb	0	; () banked
 30593  005B26  17AF               	andwf	___ftadd@f2& (0+255),f,b
 30594  005B28  0EFF               	movlw	255
 30595  005B2A  0100               	movlb	0	; () banked
 30596  005B2C  17B0               	andwf	(___ftadd@f2+1)& (0+255),f,b
 30597  005B2E  0E00               	movlw	0
 30598  005B30  0100               	movlb	0	; () banked
 30599  005B32  17B1               	andwf	(___ftadd@f2+2)& (0+255),f,b
 30600                           
 30601                           ; BSR set to: 0
 30602  005B34  0100               	movlb	0	; () banked
 30603  005B36  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30604  005B38  0100               	movlb	0	; () banked
 30605  005B3A  5DB7               	subwf	___ftadd@exp1& (0+255),w,b
 30606  005B3C  B0D8               	btfsc	status,0,c
 30607  005B3E  D028               	goto	l12450
 30608  005B40                     l12440:
 30609                           
 30610                           ; BSR set to: 0
 30611  005B40  0100               	movlb	0	; () banked
 30612  005B42  90D8               	bcf	status,0,c
 30613  005B44  37AF               	rlcf	___ftadd@f2& (0+255),f,b
 30614  005B46  37B0               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 30615  005B48  37B1               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 30616  005B4A  0100               	movlb	0	; () banked
 30617  005B4C  07B6               	decf	___ftadd@exp2& (0+255),f,b
 30618                           
 30619                           ; BSR set to: 0
 30620  005B4E  0100               	movlb	0	; () banked
 30621  005B50  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30622  005B52  0100               	movlb	0	; () banked
 30623  005B54  19B6               	xorwf	___ftadd@exp2& (0+255),w,b
 30624  005B56  B4D8               	btfsc	status,2,c
 30625  005B58  D013               	goto	l12448
 30626                           
 30627                           ; BSR set to: 0
 30628  005B5A  0100               	movlb	0	; () banked
 30629  005B5C  07B5               	decf	___ftadd@sign& (0+255),f,b
 30630  005B5E  C0B5  F0B2         	movff	___ftadd@sign,??___ftadd
 30631  005B62  0E07               	movlw	7
 30632  005B64  0100               	movlb	0	; () banked
 30633  005B66  17B2               	andwf	??___ftadd& (0+255),f,b
 30634  005B68  B4D8               	btfsc	status,2,c
 30635  005B6A  D00A               	goto	l12448
 30636  005B6C  D7E9               	goto	l12440
 30637                           
 30638                           ; BSR set to: 0
 30639                           
 30640                           ; BSR set to: 0
 30641  005B6E  D008               	goto	l12448
 30642  005B70                     l12446:
 30643                           
 30644                           ; BSR set to: 0
 30645  005B70  0100               	movlb	0	; () banked
 30646  005B72  90D8               	bcf	status,0,c
 30647  005B74  33AE               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 30648  005B76  33AD               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 30649  005B78  33AC               	rrcf	___ftadd@f1& (0+255),f,b
 30650  005B7A  0100               	movlb	0	; () banked
 30651  005B7C  2BB7               	incf	___ftadd@exp1& (0+255),f,b
 30652  005B7E  D000               	goto	l12448
 30653  005B80                     l12448:
 30654                           
 30655                           ; BSR set to: 0
 30656  005B80  0100               	movlb	0	; () banked
 30657  005B82  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30658  005B84  0100               	movlb	0	; () banked
 30659  005B86  19B7               	xorwf	___ftadd@exp1& (0+255),w,b
 30660  005B88  B4D8               	btfsc	status,2,c
 30661  005B8A  D030               	goto	l2688
 30662  005B8C  D7F1               	goto	l12446
 30663                           
 30664                           ; BSR set to: 0
 30665  005B8E  D02E               	goto	l2688
 30666  005B90                     l12450:
 30667                           
 30668                           ; BSR set to: 0
 30669  005B90  0100               	movlb	0	; () banked
 30670  005B92  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30671  005B94  0100               	movlb	0	; () banked
 30672  005B96  5DB6               	subwf	___ftadd@exp2& (0+255),w,b
 30673  005B98  B0D8               	btfsc	status,0,c
 30674  005B9A  D028               	goto	l2688
 30675  005B9C                     l12452:
 30676                           
 30677                           ; BSR set to: 0
 30678  005B9C  0100               	movlb	0	; () banked
 30679  005B9E  90D8               	bcf	status,0,c
 30680  005BA0  37AC               	rlcf	___ftadd@f1& (0+255),f,b
 30681  005BA2  37AD               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 30682  005BA4  37AE               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 30683  005BA6  0100               	movlb	0	; () banked
 30684  005BA8  07B7               	decf	___ftadd@exp1& (0+255),f,b
 30685                           
 30686                           ; BSR set to: 0
 30687  005BAA  0100               	movlb	0	; () banked
 30688  005BAC  51B7               	movf	___ftadd@exp1& (0+255),w,b
 30689  005BAE  0100               	movlb	0	; () banked
 30690  005BB0  19B6               	xorwf	___ftadd@exp2& (0+255),w,b
 30691  005BB2  B4D8               	btfsc	status,2,c
 30692  005BB4  D013               	goto	l12460
 30693                           
 30694                           ; BSR set to: 0
 30695  005BB6  0100               	movlb	0	; () banked
 30696  005BB8  07B5               	decf	___ftadd@sign& (0+255),f,b
 30697  005BBA  C0B5  F0B2         	movff	___ftadd@sign,??___ftadd
 30698  005BBE  0E07               	movlw	7
 30699  005BC0  0100               	movlb	0	; () banked
 30700  005BC2  17B2               	andwf	??___ftadd& (0+255),f,b
 30701  005BC4  B4D8               	btfsc	status,2,c
 30702  005BC6  D00A               	goto	l12460
 30703  005BC8  D7E9               	goto	l12452
 30704                           
 30705                           ; BSR set to: 0
 30706                           
 30707                           ; BSR set to: 0
 30708  005BCA  D008               	goto	l12460
 30709  005BCC                     l12458:
 30710                           
 30711                           ; BSR set to: 0
 30712  005BCC  0100               	movlb	0	; () banked
 30713  005BCE  90D8               	bcf	status,0,c
 30714  005BD0  33B1               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 30715  005BD2  33B0               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 30716  005BD4  33AF               	rrcf	___ftadd@f2& (0+255),f,b
 30717  005BD6  0100               	movlb	0	; () banked
 30718  005BD8  2BB6               	incf	___ftadd@exp2& (0+255),f,b
 30719  005BDA  D000               	goto	l12460
 30720  005BDC                     l12460:
 30721                           
 30722                           ; BSR set to: 0
 30723  005BDC  0100               	movlb	0	; () banked
 30724  005BDE  51B6               	movf	___ftadd@exp2& (0+255),w,b
 30725  005BE0  0100               	movlb	0	; () banked
 30726  005BE2  19B7               	xorwf	___ftadd@exp1& (0+255),w,b
 30727  005BE4  B4D8               	btfsc	status,2,c
 30728  005BE6  D002               	goto	l2688
 30729  005BE8  D7F1               	goto	l12458
 30730                           
 30731                           ; BSR set to: 0
 30732  005BEA  D000               	goto	l2688
 30733  005BEC                     l2688:
 30734                           
 30735                           ; BSR set to: 0
 30736  005BEC  0100               	movlb	0	; () banked
 30737  005BEE  AFB5               	btfss	___ftadd@sign& (0+255),7,b
 30738  005BF0  D012               	goto	l2697
 30739                           
 30740                           ; BSR set to: 0
 30741  005BF2  0EFF               	movlw	255
 30742  005BF4  0100               	movlb	0	; () banked
 30743  005BF6  1BAC               	xorwf	___ftadd@f1& (0+255),f,b
 30744  005BF8  0EFF               	movlw	255
 30745  005BFA  0100               	movlb	0	; () banked
 30746  005BFC  1BAD               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 30747  005BFE  0EFF               	movlw	255
 30748  005C00  0100               	movlb	0	; () banked
 30749  005C02  1BAE               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 30750  005C04  0E01               	movlw	1
 30751  005C06  0100               	movlb	0	; () banked
 30752  005C08  27AC               	addwf	___ftadd@f1& (0+255),f,b
 30753  005C0A  0E00               	movlw	0
 30754  005C0C  0100               	movlb	0	; () banked
 30755  005C0E  23AD               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 30756  005C10  0E00               	movlw	0
 30757  005C12  0100               	movlb	0	; () banked
 30758  005C14  23AE               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 30759  005C16                     l2697:
 30760                           
 30761                           ; BSR set to: 0
 30762  005C16  0100               	movlb	0	; () banked
 30763  005C18  ADB5               	btfss	___ftadd@sign& (0+255),6,b
 30764  005C1A  D013               	goto	l12466
 30765                           
 30766                           ; BSR set to: 0
 30767  005C1C  0EFF               	movlw	255
 30768  005C1E  0100               	movlb	0	; () banked
 30769  005C20  1BAF               	xorwf	___ftadd@f2& (0+255),f,b
 30770  005C22  0EFF               	movlw	255
 30771  005C24  0100               	movlb	0	; () banked
 30772  005C26  1BB0               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 30773  005C28  0EFF               	movlw	255
 30774  005C2A  0100               	movlb	0	; () banked
 30775  005C2C  1BB1               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 30776  005C2E  0E01               	movlw	1
 30777  005C30  0100               	movlb	0	; () banked
 30778  005C32  27AF               	addwf	___ftadd@f2& (0+255),f,b
 30779  005C34  0E00               	movlw	0
 30780  005C36  0100               	movlb	0	; () banked
 30781  005C38  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 30782  005C3A  0E00               	movlw	0
 30783  005C3C  0100               	movlb	0	; () banked
 30784  005C3E  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 30785  005C40  D000               	goto	l12466
 30786  005C42                     l12466:
 30787                           
 30788                           ; BSR set to: 0
 30789  005C42  0E00               	movlw	0
 30790  005C44  0100               	movlb	0	; () banked
 30791  005C46  6FB5               	movwf	___ftadd@sign& (0+255),b
 30792                           
 30793                           ; BSR set to: 0
 30794  005C48  0100               	movlb	0	; () banked
 30795  005C4A  51AC               	movf	___ftadd@f1& (0+255),w,b
 30796  005C4C  0100               	movlb	0	; () banked
 30797  005C4E  27AF               	addwf	___ftadd@f2& (0+255),f,b
 30798  005C50  0100               	movlb	0	; () banked
 30799  005C52  51AD               	movf	(___ftadd@f1+1)& (0+255),w,b
 30800  005C54  0100               	movlb	0	; () banked
 30801  005C56  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 30802  005C58  0100               	movlb	0	; () banked
 30803  005C5A  51AE               	movf	(___ftadd@f1+2)& (0+255),w,b
 30804  005C5C  0100               	movlb	0	; () banked
 30805  005C5E  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 30806                           
 30807                           ; BSR set to: 0
 30808  005C60  0100               	movlb	0	; () banked
 30809  005C62  AFB1               	btfss	(___ftadd@f2+2)& (0+255),7,b
 30810  005C64  D016               	goto	l12476
 30811                           
 30812                           ; BSR set to: 0
 30813  005C66  0EFF               	movlw	255
 30814  005C68  0100               	movlb	0	; () banked
 30815  005C6A  1BAF               	xorwf	___ftadd@f2& (0+255),f,b
 30816  005C6C  0EFF               	movlw	255
 30817  005C6E  0100               	movlb	0	; () banked
 30818  005C70  1BB0               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 30819  005C72  0EFF               	movlw	255
 30820  005C74  0100               	movlb	0	; () banked
 30821  005C76  1BB1               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 30822  005C78  0E01               	movlw	1
 30823  005C7A  0100               	movlb	0	; () banked
 30824  005C7C  27AF               	addwf	___ftadd@f2& (0+255),f,b
 30825  005C7E  0E00               	movlw	0
 30826  005C80  0100               	movlb	0	; () banked
 30827  005C82  23B0               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 30828  005C84  0E00               	movlw	0
 30829  005C86  0100               	movlb	0	; () banked
 30830  005C88  23B1               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 30831                           
 30832                           ; BSR set to: 0
 30833  005C8A  0E01               	movlw	1
 30834  005C8C  0100               	movlb	0	; () banked
 30835  005C8E  6FB5               	movwf	___ftadd@sign& (0+255),b
 30836  005C90  D000               	goto	l12476
 30837  005C92                     l12476:
 30838                           
 30839                           ; BSR set to: 0
 30840  005C92  C0AF  F079         	movff	___ftadd@f2,___ftpack@arg
 30841  005C96  C0B0  F07A         	movff	___ftadd@f2+1,___ftpack@arg+1
 30842  005C9A  C0B1  F07B         	movff	___ftadd@f2+2,___ftpack@arg+2
 30843  005C9E  C0B7  F07C         	movff	___ftadd@exp1,___ftpack@exp
 30844  005CA2  C0B5  F07D         	movff	___ftadd@sign,___ftpack@sign
 30845  005CA6  EC67  F03A         	call	___ftpack	;wreg free
 30846  005CAA  C079  F0AC         	movff	?___ftpack,?___ftadd
 30847  005CAE  C07A  F0AD         	movff	?___ftpack+1,?___ftadd+1
 30848  005CB2  C07B  F0AE         	movff	?___ftpack+2,?___ftadd+2
 30849  005CB6  0012               	return	
 30850  005CB8  0012               	return		;funcret
 30851  005CBA                     __end_of___ftadd:
 30852                           	opt stack 0
 30853                           tblptru	equ	0xFF8
 30854                           tblptrh	equ	0xFF7
 30855                           tblptrl	equ	0xFF6
 30856                           tablat	equ	0xFF5
 30857                           prodh	equ	0xFF4
 30858                           prodl	equ	0xFF3
 30859                           intcon	equ	0xFF2
 30860                           intcon2	equ	0xFF1
 30861                           indf0	equ	0xFEF
 30862                           postinc0	equ	0xFEE
 30863                           fsr0h	equ	0xFEA
 30864                           fsr0l	equ	0xFE9
 30865                           wreg	equ	0xFE8
 30866                           indf1	equ	0xFE7
 30867                           postdec1	equ	0xFE5
 30868                           fsr1h	equ	0xFE2
 30869                           fsr1l	equ	0xFE1
 30870                           indf2	equ	0xFDF
 30871                           postinc2	equ	0xFDE
 30872                           postdec2	equ	0xFDD
 30873                           fsr2h	equ	0xFDA
 30874                           fsr2l	equ	0xFD9
 30875                           status	equ	0xFD8
 30876                           
 30877 ;; *************** function ___ftpack *****************
 30878 ;; Defined at:
 30879 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 30880 ;; Parameters:    Size  Location     Type
 30881 ;;  arg             3   25[BANK0 ] unsigned um
 30882 ;;  exp             1   28[BANK0 ] unsigned char 
 30883 ;;  sign            1   29[BANK0 ] unsigned char 
 30884 ;; Auto vars:     Size  Location     Type
 30885 ;;		None
 30886 ;; Return value:  Size  Location     Type
 30887 ;;                  3   25[BANK0 ] float 
 30888 ;; Registers used:
 30889 ;;		wreg, status,2, status,0
 30890 ;; Tracked objects:
 30891 ;;		On entry : 0/0
 30892 ;;		On exit  : 0/0
 30893 ;;		Unchanged: 0/0
 30894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30895 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30897 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30899 ;;Total ram usage:        8 bytes
 30900 ;; Hardware stack levels used:    1
 30901 ;; Hardware stack levels required when called:    6
 30902 ;; This function calls:
 30903 ;;		Nothing
 30904 ;; This function is called by:
 30905 ;;		___altoft
 30906 ;;		___ftadd
 30907 ;;		___ftdiv
 30908 ;;		___ftmul
 30909 ;;		___lltoft
 30910 ;;		___lwtoft
 30911 ;; This function uses a non-reentrant model
 30912 ;;
 30913                           
 30914                           	psect	text75
 30915  0074CE                     __ptext75:
 30916                           	opt stack 0
 30917  0074CE                     ___ftpack:
 30918                           	opt stack 22
 30919                           
 30920                           ;incstack = 0
 30921  0074CE  0100               	movlb	0	; () banked
 30922  0074D0  517C               	movf	___ftpack@exp& (0+255),w,b
 30923  0074D2  0100               	movlb	0	; () banked
 30924  0074D4  B4D8               	btfsc	status,2,c
 30925  0074D6  D008               	goto	l12324
 30926                           
 30927                           ; BSR set to: 0
 30928  0074D8  0100               	movlb	0	; () banked
 30929  0074DA  5179               	movf	___ftpack@arg& (0+255),w,b
 30930  0074DC  0100               	movlb	0	; () banked
 30931  0074DE  117A               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 30932  0074E0  0100               	movlb	0	; () banked
 30933  0074E2  117B               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 30934  0074E4  A4D8               	btfss	status,2,c
 30935  0074E6  D013               	goto	l12330
 30936  0074E8                     l12324:
 30937                           
 30938                           ; BSR set to: 0
 30939  0074E8  0E00               	movlw	0
 30940  0074EA  0100               	movlb	0	; () banked
 30941  0074EC  6F79               	movwf	?___ftpack& (0+255),b
 30942  0074EE  0E00               	movlw	0
 30943  0074F0  0100               	movlb	0	; () banked
 30944  0074F2  6F7A               	movwf	(?___ftpack+1)& (0+255),b
 30945  0074F4  0E00               	movlw	0
 30946  0074F6  0100               	movlb	0	; () banked
 30947  0074F8  6F7B               	movwf	(?___ftpack+2)& (0+255),b
 30948                           
 30949                           ; BSR set to: 0
 30950  0074FA  0012               	return	
 30951                           
 30952                           ; BSR set to: 0
 30953  0074FC  D008               	goto	l12330
 30954  0074FE                     l12328:
 30955                           
 30956                           ; BSR set to: 0
 30957  0074FE  0100               	movlb	0	; () banked
 30958  007500  2B7C               	incf	___ftpack@exp& (0+255),f,b
 30959  007502  0100               	movlb	0	; () banked
 30960  007504  90D8               	bcf	status,0,c
 30961  007506  337B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 30962  007508  337A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 30963  00750A  3379               	rrcf	___ftpack@arg& (0+255),f,b
 30964  00750C  D000               	goto	l12330
 30965  00750E                     l12330:
 30966                           
 30967                           ; BSR set to: 0
 30968  00750E  0E00               	movlw	0
 30969  007510  0100               	movlb	0	; () banked
 30970  007512  1579               	andwf	___ftpack@arg& (0+255),w,b
 30971  007514  0100               	movlb	0	; () banked
 30972  007516  6F7E               	movwf	??___ftpack& (0+255),b
 30973  007518  0E00               	movlw	0
 30974  00751A  0100               	movlb	0	; () banked
 30975  00751C  157A               	andwf	(___ftpack@arg+1)& (0+255),w,b
 30976  00751E  0100               	movlb	0	; () banked
 30977  007520  6F7F               	movwf	(??___ftpack+1)& (0+255),b
 30978  007522  0EFE               	movlw	254
 30979  007524  0100               	movlb	0	; () banked
 30980  007526  157B               	andwf	(___ftpack@arg+2)& (0+255),w,b
 30981  007528  0100               	movlb	0	; () banked
 30982  00752A  6F80               	movwf	(??___ftpack+2)& (0+255),b
 30983  00752C  0100               	movlb	0	; () banked
 30984  00752E  517E               	movf	??___ftpack& (0+255),w,b
 30985  007530  0100               	movlb	0	; () banked
 30986  007532  117F               	iorwf	(??___ftpack+1)& (0+255),w,b
 30987  007534  0100               	movlb	0	; () banked
 30988  007536  1180               	iorwf	(??___ftpack+2)& (0+255),w,b
 30989  007538  B4D8               	btfsc	status,2,c
 30990  00753A  D013               	goto	l12336
 30991  00753C  D7E0               	goto	l12328
 30992                           
 30993                           ; BSR set to: 0
 30994  00753E  D011               	goto	l12336
 30995  007540                     l12332:
 30996                           
 30997                           ; BSR set to: 0
 30998  007540  0100               	movlb	0	; () banked
 30999  007542  2B7C               	incf	___ftpack@exp& (0+255),f,b
 31000                           
 31001                           ; BSR set to: 0
 31002  007544  0E01               	movlw	1
 31003  007546  0100               	movlb	0	; () banked
 31004  007548  2779               	addwf	___ftpack@arg& (0+255),f,b
 31005  00754A  0E00               	movlw	0
 31006  00754C  0100               	movlb	0	; () banked
 31007  00754E  237A               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 31008  007550  0E00               	movlw	0
 31009  007552  0100               	movlb	0	; () banked
 31010  007554  237B               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 31011  007556  0100               	movlb	0	; () banked
 31012  007558  90D8               	bcf	status,0,c
 31013  00755A  337B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31014  00755C  337A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31015  00755E  3379               	rrcf	___ftpack@arg& (0+255),f,b
 31016  007560  D000               	goto	l12336
 31017  007562                     l12336:
 31018                           
 31019                           ; BSR set to: 0
 31020  007562  0E00               	movlw	0
 31021  007564  0100               	movlb	0	; () banked
 31022  007566  1579               	andwf	___ftpack@arg& (0+255),w,b
 31023  007568  0100               	movlb	0	; () banked
 31024  00756A  6F7E               	movwf	??___ftpack& (0+255),b
 31025  00756C  0E00               	movlw	0
 31026  00756E  0100               	movlb	0	; () banked
 31027  007570  157A               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31028  007572  0100               	movlb	0	; () banked
 31029  007574  6F7F               	movwf	(??___ftpack+1)& (0+255),b
 31030  007576  0EFF               	movlw	255
 31031  007578  0100               	movlb	0	; () banked
 31032  00757A  157B               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31033  00757C  0100               	movlb	0	; () banked
 31034  00757E  6F80               	movwf	(??___ftpack+2)& (0+255),b
 31035  007580  0100               	movlb	0	; () banked
 31036  007582  517E               	movf	??___ftpack& (0+255),w,b
 31037  007584  0100               	movlb	0	; () banked
 31038  007586  117F               	iorwf	(??___ftpack+1)& (0+255),w,b
 31039  007588  0100               	movlb	0	; () banked
 31040  00758A  1180               	iorwf	(??___ftpack+2)& (0+255),w,b
 31041  00758C  B4D8               	btfsc	status,2,c
 31042  00758E  D00A               	goto	l12340
 31043  007590  D7D7               	goto	l12332
 31044                           
 31045                           ; BSR set to: 0
 31046  007592  D008               	goto	l12340
 31047  007594                     l12338:
 31048                           
 31049                           ; BSR set to: 0
 31050  007594  0100               	movlb	0	; () banked
 31051  007596  077C               	decf	___ftpack@exp& (0+255),f,b
 31052  007598  0100               	movlb	0	; () banked
 31053  00759A  90D8               	bcf	status,0,c
 31054  00759C  3779               	rlcf	___ftpack@arg& (0+255),f,b
 31055  00759E  377A               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 31056  0075A0  377B               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 31057  0075A2  D000               	goto	l12340
 31058  0075A4                     l12340:
 31059                           
 31060                           ; BSR set to: 0
 31061  0075A4  0100               	movlb	0	; () banked
 31062  0075A6  BF7A               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 31063  0075A8  D005               	goto	l2644
 31064                           
 31065                           ; BSR set to: 0
 31066  0075AA  0E02               	movlw	2
 31067  0075AC  0100               	movlb	0	; () banked
 31068  0075AE  617C               	cpfslt	___ftpack@exp& (0+255),b
 31069  0075B0  D7F1               	goto	l12338
 31070  0075B2  D000               	goto	l2644
 31071  0075B4                     l2644:
 31072                           
 31073                           ; BSR set to: 0
 31074  0075B4  0100               	movlb	0	; () banked
 31075  0075B6  B17C               	btfsc	___ftpack@exp& (0+255),0,b
 31076  0075B8  D003               	goto	l12346
 31077                           
 31078                           ; BSR set to: 0
 31079  0075BA  0100               	movlb	0	; () banked
 31080  0075BC  9F7A               	bcf	(___ftpack@arg+1)& (0+255),7,b
 31081  0075BE  D000               	goto	l12346
 31082  0075C0                     l12346:
 31083                           
 31084                           ; BSR set to: 0
 31085  0075C0  0100               	movlb	0	; () banked
 31086  0075C2  90D8               	bcf	status,0,c
 31087  0075C4  337C               	rrcf	___ftpack@exp& (0+255),f,b
 31088  0075C6  0100               	movlb	0	; () banked
 31089  0075C8  517C               	movf	___ftpack@exp& (0+255),w,b
 31090  0075CA  0100               	movlb	0	; () banked
 31091  0075CC  137B               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 31092                           
 31093                           ; BSR set to: 0
 31094  0075CE  0100               	movlb	0	; () banked
 31095  0075D0  517D               	movf	___ftpack@sign& (0+255),w,b
 31096  0075D2  0100               	movlb	0	; () banked
 31097  0075D4  B4D8               	btfsc	status,2,c
 31098  0075D6  D003               	goto	l12352
 31099                           
 31100                           ; BSR set to: 0
 31101  0075D8  0100               	movlb	0	; () banked
 31102  0075DA  8F7B               	bsf	(___ftpack@arg+2)& (0+255),7,b
 31103  0075DC  D000               	goto	l12352
 31104  0075DE                     l12352:
 31105                           
 31106                           ; BSR set to: 0
 31107  0075DE  C079  F079         	movff	___ftpack@arg,?___ftpack
 31108  0075E2  C07A  F07A         	movff	___ftpack@arg+1,?___ftpack+1
 31109  0075E6  C07B  F07B         	movff	___ftpack@arg+2,?___ftpack+2
 31110  0075EA  0012               	return	
 31111                           
 31112                           ; BSR set to: 0
 31113                           
 31114                           ; BSR set to: 0
 31115  0075EC  0012               	return		;funcret
 31116  0075EE                     __end_of___ftpack:
 31117                           	opt stack 0
 31118                           tblptru	equ	0xFF8
 31119                           tblptrh	equ	0xFF7
 31120                           tblptrl	equ	0xFF6
 31121                           tablat	equ	0xFF5
 31122                           prodh	equ	0xFF4
 31123                           prodl	equ	0xFF3
 31124                           intcon	equ	0xFF2
 31125                           intcon2	equ	0xFF1
 31126                           indf0	equ	0xFEF
 31127                           postinc0	equ	0xFEE
 31128                           fsr0h	equ	0xFEA
 31129                           fsr0l	equ	0xFE9
 31130                           wreg	equ	0xFE8
 31131                           indf1	equ	0xFE7
 31132                           postdec1	equ	0xFE5
 31133                           fsr1h	equ	0xFE2
 31134                           fsr1l	equ	0xFE1
 31135                           indf2	equ	0xFDF
 31136                           postinc2	equ	0xFDE
 31137                           postdec2	equ	0xFDD
 31138                           fsr2h	equ	0xFDA
 31139                           fsr2l	equ	0xFD9
 31140                           status	equ	0xFD8
 31141                           
 31142 ;; *************** function ___ftneg *****************
 31143 ;; Defined at:
 31144 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 31145 ;; Parameters:    Size  Location     Type
 31146 ;;  f1              3   25[BANK0 ] float 
 31147 ;; Auto vars:     Size  Location     Type
 31148 ;;		None
 31149 ;; Return value:  Size  Location     Type
 31150 ;;                  3   25[BANK0 ] float 
 31151 ;; Registers used:
 31152 ;;		wreg, status,2, status,0
 31153 ;; Tracked objects:
 31154 ;;		On entry : 0/0
 31155 ;;		On exit  : 0/0
 31156 ;;		Unchanged: 0/0
 31157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31158 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31161 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31162 ;;Total ram usage:        3 bytes
 31163 ;; Hardware stack levels used:    1
 31164 ;; Hardware stack levels required when called:    6
 31165 ;; This function calls:
 31166 ;;		Nothing
 31167 ;; This function is called by:
 31168 ;;		_sprintf
 31169 ;; This function uses a non-reentrant model
 31170 ;;
 31171                           
 31172                           	psect	text76
 31173  0090BA                     __ptext76:
 31174                           	opt stack 0
 31175  0090BA                     ___ftneg:
 31176                           	opt stack 22
 31177                           
 31178                           ; BSR set to: 0
 31179                           ;incstack = 0
 31180  0090BA  0100               	movlb	0	; () banked
 31181  0090BC  5179               	movf	___ftneg@f1& (0+255),w,b
 31182  0090BE  0100               	movlb	0	; () banked
 31183  0090C0  117A               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 31184  0090C2  0100               	movlb	0	; () banked
 31185  0090C4  117B               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 31186  0090C6  B4D8               	btfsc	status,2,c
 31187  0090C8  D009               	goto	l2747
 31188                           
 31189                           ; BSR set to: 0
 31190  0090CA  0E00               	movlw	0
 31191  0090CC  0100               	movlb	0	; () banked
 31192  0090CE  1B79               	xorwf	___ftneg@f1& (0+255),f,b
 31193  0090D0  0E00               	movlw	0
 31194  0090D2  0100               	movlb	0	; () banked
 31195  0090D4  1B7A               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 31196  0090D6  0E80               	movlw	128
 31197  0090D8  0100               	movlb	0	; () banked
 31198  0090DA  1B7B               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 31199  0090DC                     l2747:
 31200                           
 31201                           ; BSR set to: 0
 31202  0090DC  C079  F079         	movff	___ftneg@f1,?___ftneg
 31203  0090E0  C07A  F07A         	movff	___ftneg@f1+1,?___ftneg+1
 31204  0090E4  C07B  F07B         	movff	___ftneg@f1+2,?___ftneg+2
 31205                           
 31206                           ; BSR set to: 0
 31207  0090E8  0012               	return		;funcret
 31208  0090EA                     __end_of___ftneg:
 31209                           	opt stack 0
 31210                           tblptru	equ	0xFF8
 31211                           tblptrh	equ	0xFF7
 31212                           tblptrl	equ	0xFF6
 31213                           tablat	equ	0xFF5
 31214                           prodh	equ	0xFF4
 31215                           prodl	equ	0xFF3
 31216                           intcon	equ	0xFF2
 31217                           intcon2	equ	0xFF1
 31218                           indf0	equ	0xFEF
 31219                           postinc0	equ	0xFEE
 31220                           fsr0h	equ	0xFEA
 31221                           fsr0l	equ	0xFE9
 31222                           wreg	equ	0xFE8
 31223                           indf1	equ	0xFE7
 31224                           postdec1	equ	0xFE5
 31225                           fsr1h	equ	0xFE2
 31226                           fsr1l	equ	0xFE1
 31227                           indf2	equ	0xFDF
 31228                           postinc2	equ	0xFDE
 31229                           postdec2	equ	0xFDD
 31230                           fsr2h	equ	0xFDA
 31231                           fsr2l	equ	0xFD9
 31232                           status	equ	0xFD8
 31233                           
 31234 ;; *************** function ___ftge *****************
 31235 ;; Defined at:
 31236 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 31237 ;; Parameters:    Size  Location     Type
 31238 ;;  ff1             3   25[BANK0 ] float 
 31239 ;;  ff2             3   28[BANK0 ] float 
 31240 ;; Auto vars:     Size  Location     Type
 31241 ;;		None
 31242 ;; Return value:  Size  Location     Type
 31243 ;;		None               void
 31244 ;; Registers used:
 31245 ;;		wreg, status,2, status,0
 31246 ;; Tracked objects:
 31247 ;;		On entry : 0/0
 31248 ;;		On exit  : 0/0
 31249 ;;		Unchanged: 0/0
 31250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31251 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31253 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31254 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31255 ;;Total ram usage:        9 bytes
 31256 ;; Hardware stack levels used:    1
 31257 ;; Hardware stack levels required when called:    6
 31258 ;; This function calls:
 31259 ;;		Nothing
 31260 ;; This function is called by:
 31261 ;;		_main
 31262 ;;		_sprintf
 31263 ;; This function uses a non-reentrant model
 31264 ;;
 31265                           
 31266                           	psect	text77
 31267  007CD6                     __ptext77:
 31268                           	opt stack 0
 31269  007CD6                     ___ftge:
 31270                           	opt stack 24
 31271                           
 31272                           ; BSR set to: 0
 31273                           ;incstack = 0
 31274  007CD6  0100               	movlb	0	; () banked
 31275  007CD8  AF7B               	btfss	(___ftge@ff1+2)& (0+255),7,b
 31276  007CDA  D01E               	goto	l12956
 31277                           
 31278                           ; BSR set to: 0
 31279  007CDC  C079  F07F         	movff	___ftge@ff1,??___ftge
 31280  007CE0  C07A  F080         	movff	___ftge@ff1+1,??___ftge+1
 31281  007CE4  C07B  F081         	movff	___ftge@ff1+2,??___ftge+2
 31282  007CE8  0100               	movlb	0	; () banked
 31283  007CEA  1F7F               	comf	??___ftge& (0+255),f,b
 31284  007CEC  1F80               	comf	(??___ftge+1)& (0+255),f,b
 31285  007CEE  1F81               	comf	(??___ftge+2)& (0+255),f,b
 31286  007CF0  2B7F               	incf	??___ftge& (0+255),f,b
 31287  007CF2  0E00               	movlw	0
 31288  007CF4  2380               	addwfc	(??___ftge+1)& (0+255),f,b
 31289  007CF6  2381               	addwfc	(??___ftge+2)& (0+255),f,b
 31290  007CF8  0E00               	movlw	0
 31291  007CFA  0100               	movlb	0	; () banked
 31292  007CFC  257F               	addwf	??___ftge& (0+255),w,b
 31293  007CFE  0100               	movlb	0	; () banked
 31294  007D00  6F79               	movwf	___ftge@ff1& (0+255),b
 31295  007D02  0E00               	movlw	0
 31296  007D04  0100               	movlb	0	; () banked
 31297  007D06  2180               	addwfc	(??___ftge+1)& (0+255),w,b
 31298  007D08  0100               	movlb	0	; () banked
 31299  007D0A  6F7A               	movwf	(___ftge@ff1+1)& (0+255),b
 31300  007D0C  0E80               	movlw	128
 31301  007D0E  0100               	movlb	0	; () banked
 31302  007D10  2181               	addwfc	(??___ftge+2)& (0+255),w,b
 31303  007D12  0100               	movlb	0	; () banked
 31304  007D14  6F7B               	movwf	(___ftge@ff1+2)& (0+255),b
 31305  007D16  D000               	goto	l12956
 31306  007D18                     l12956:
 31307                           
 31308                           ; BSR set to: 0
 31309  007D18  0100               	movlb	0	; () banked
 31310  007D1A  AF7E               	btfss	(___ftge@ff2+2)& (0+255),7,b
 31311  007D1C  D01E               	goto	l12960
 31312                           
 31313                           ; BSR set to: 0
 31314  007D1E  C07C  F07F         	movff	___ftge@ff2,??___ftge
 31315  007D22  C07D  F080         	movff	___ftge@ff2+1,??___ftge+1
 31316  007D26  C07E  F081         	movff	___ftge@ff2+2,??___ftge+2
 31317  007D2A  0100               	movlb	0	; () banked
 31318  007D2C  1F7F               	comf	??___ftge& (0+255),f,b
 31319  007D2E  1F80               	comf	(??___ftge+1)& (0+255),f,b
 31320  007D30  1F81               	comf	(??___ftge+2)& (0+255),f,b
 31321  007D32  2B7F               	incf	??___ftge& (0+255),f,b
 31322  007D34  0E00               	movlw	0
 31323  007D36  2380               	addwfc	(??___ftge+1)& (0+255),f,b
 31324  007D38  2381               	addwfc	(??___ftge+2)& (0+255),f,b
 31325  007D3A  0E00               	movlw	0
 31326  007D3C  0100               	movlb	0	; () banked
 31327  007D3E  257F               	addwf	??___ftge& (0+255),w,b
 31328  007D40  0100               	movlb	0	; () banked
 31329  007D42  6F7C               	movwf	___ftge@ff2& (0+255),b
 31330  007D44  0E00               	movlw	0
 31331  007D46  0100               	movlb	0	; () banked
 31332  007D48  2180               	addwfc	(??___ftge+1)& (0+255),w,b
 31333  007D4A  0100               	movlb	0	; () banked
 31334  007D4C  6F7D               	movwf	(___ftge@ff2+1)& (0+255),b
 31335  007D4E  0E80               	movlw	128
 31336  007D50  0100               	movlb	0	; () banked
 31337  007D52  2181               	addwfc	(??___ftge+2)& (0+255),w,b
 31338  007D54  0100               	movlb	0	; () banked
 31339  007D56  6F7E               	movwf	(___ftge@ff2+2)& (0+255),b
 31340  007D58  D000               	goto	l12960
 31341  007D5A                     l12960:
 31342                           
 31343                           ; BSR set to: 0
 31344  007D5A  0E00               	movlw	0
 31345  007D5C  0100               	movlb	0	; () banked
 31346  007D5E  1B79               	xorwf	___ftge@ff1& (0+255),f,b
 31347  007D60  0E00               	movlw	0
 31348  007D62  0100               	movlb	0	; () banked
 31349  007D64  1B7A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 31350  007D66  0E80               	movlw	128
 31351  007D68  0100               	movlb	0	; () banked
 31352  007D6A  1B7B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 31353                           
 31354                           ; BSR set to: 0
 31355  007D6C  0E00               	movlw	0
 31356  007D6E  0100               	movlb	0	; () banked
 31357  007D70  1B7C               	xorwf	___ftge@ff2& (0+255),f,b
 31358  007D72  0E00               	movlw	0
 31359  007D74  0100               	movlb	0	; () banked
 31360  007D76  1B7D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 31361  007D78  0E80               	movlw	128
 31362  007D7A  0100               	movlb	0	; () banked
 31363  007D7C  1B7E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 31364  007D7E  0100               	movlb	0	; () banked
 31365  007D80  517C               	movf	___ftge@ff2& (0+255),w,b
 31366  007D82  0100               	movlb	0	; () banked
 31367  007D84  5D79               	subwf	___ftge@ff1& (0+255),w,b
 31368  007D86  0100               	movlb	0	; () banked
 31369  007D88  517D               	movf	(___ftge@ff2+1)& (0+255),w,b
 31370  007D8A  0100               	movlb	0	; () banked
 31371  007D8C  597A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 31372  007D8E  0100               	movlb	0	; () banked
 31373  007D90  517E               	movf	(___ftge@ff2+2)& (0+255),w,b
 31374  007D92  0100               	movlb	0	; () banked
 31375  007D94  597B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 31376  007D96  B0D8               	btfsc	status,0,c
 31377  007D98  D002               	goto	l12966
 31378                           
 31379                           ; BSR set to: 0
 31380  007D9A  90D8               	bcf	status,0,c
 31381  007D9C  0012               	return	
 31382  007D9E                     l12966:
 31383                           
 31384                           ; BSR set to: 0
 31385  007D9E  80D8               	bsf	status,0,c
 31386                           
 31387                           ; BSR set to: 0
 31388  007DA0  0012               	return	
 31389                           
 31390                           ; BSR set to: 0
 31391                           
 31392                           ; BSR set to: 0
 31393  007DA2  0012               	return		;funcret
 31394  007DA4                     __end_of___ftge:
 31395                           	opt stack 0
 31396                           tblptru	equ	0xFF8
 31397                           tblptrh	equ	0xFF7
 31398                           tblptrl	equ	0xFF6
 31399                           tablat	equ	0xFF5
 31400                           prodh	equ	0xFF4
 31401                           prodl	equ	0xFF3
 31402                           intcon	equ	0xFF2
 31403                           intcon2	equ	0xFF1
 31404                           indf0	equ	0xFEF
 31405                           postinc0	equ	0xFEE
 31406                           fsr0h	equ	0xFEA
 31407                           fsr0l	equ	0xFE9
 31408                           wreg	equ	0xFE8
 31409                           indf1	equ	0xFE7
 31410                           postdec1	equ	0xFE5
 31411                           fsr1h	equ	0xFE2
 31412                           fsr1l	equ	0xFE1
 31413                           indf2	equ	0xFDF
 31414                           postinc2	equ	0xFDE
 31415                           postdec2	equ	0xFDD
 31416                           fsr2h	equ	0xFDA
 31417                           fsr2l	equ	0xFD9
 31418                           status	equ	0xFD8
 31419                           
 31420 ;; *************** function _EnterCommandMode *****************
 31421 ;; Defined at:
 31422 ;;		line 115 in file "Bluetooth.c"
 31423 ;; Parameters:    Size  Location     Type
 31424 ;;		None
 31425 ;; Auto vars:     Size  Location     Type
 31426 ;;  count           1   34[BANK0 ] unsigned char 
 31427 ;; Return value:  Size  Location     Type
 31428 ;;                  1    wreg      unsigned char 
 31429 ;; Registers used:
 31430 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31431 ;; Tracked objects:
 31432 ;;		On entry : 0/0
 31433 ;;		On exit  : 0/0
 31434 ;;		Unchanged: 0/0
 31435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31439 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31440 ;;Total ram usage:        1 bytes
 31441 ;; Hardware stack levels used:    1
 31442 ;; Hardware stack levels required when called:    8
 31443 ;; This function calls:
 31444 ;;		_BlueConnected
 31445 ;;		_ResetBlue
 31446 ;;		_StringContains
 31447 ;;		_UARTstring
 31448 ;;		_cleanBuffer
 31449 ;;		_delayUS
 31450 ;; This function is called by:
 31451 ;;		_BluetoothInitialSetup
 31452 ;; This function uses a non-reentrant model
 31453 ;;
 31454                           
 31455                           	psect	text78
 31456  007DA4                     __ptext78:
 31457                           	opt stack 0
 31458  007DA4                     _EnterCommandMode:
 31459                           	opt stack 19
 31460                           
 31461                           ;Bluetooth.c: 117: unsigned char count = 0;
 31462                           
 31463                           ; BSR set to: 0
 31464                           ;incstack = 0
 31465  007DA4  0E00               	movlw	0
 31466  007DA6  0100               	movlb	0	; () banked
 31467  007DA8  6F82               	movwf	EnterCommandMode@count& (0+255),b
 31468                           
 31469                           ;Bluetooth.c: 118: while(BlueConnected())
 31470  007DAA  D00B               	goto	l13194
 31471  007DAC                     l13184:
 31472                           
 31473                           ;Bluetooth.c: 119: {
 31474                           ;Bluetooth.c: 120: ResetBlue();
 31475  007DAC  EC44  F048         	call	_ResetBlue	;wreg free
 31476                           
 31477                           ;Bluetooth.c: 121: count++;
 31478  007DB0  0100               	movlb	0	; () banked
 31479  007DB2  2B82               	incf	EnterCommandMode@count& (0+255),f,b
 31480                           
 31481                           ; BSR set to: 0
 31482                           ;Bluetooth.c: 122: if(count > 4)
 31483  007DB4  0E04               	movlw	4
 31484  007DB6  0100               	movlb	0	; () banked
 31485  007DB8  6582               	cpfsgt	EnterCommandMode@count& (0+255),b
 31486  007DBA  D003               	goto	l13194
 31487                           
 31488                           ; BSR set to: 0
 31489                           ;Bluetooth.c: 123: {
 31490                           ;Bluetooth.c: 125: return 0;
 31491  007DBC  0E00               	movlw	0
 31492                           
 31493                           ; BSR set to: 0
 31494  007DBE  0012               	return	
 31495                           
 31496                           ; BSR set to: 0
 31497  007DC0  D000               	goto	l13194
 31498  007DC2                     l13194:
 31499                           
 31500                           ; BSR set to: 0
 31501  007DC2  ECAA  F049         	call	_BlueConnected	;wreg free
 31502  007DC6  0900               	iorlw	0
 31503  007DC8  A4D8               	btfss	status,2,c
 31504  007DCA  D7F0               	goto	l13184
 31505                           
 31506                           ;Bluetooth.c: 126: }
 31507                           ;Bluetooth.c: 127: }
 31508                           ;Bluetooth.c: 129: delayUS(50000);
 31509  007DCC  0E50               	movlw	80
 31510  007DCE  0100               	movlb	0	; () banked
 31511  007DD0  6F79               	movwf	delayUS@US& (0+255),b
 31512  007DD2  0EC3               	movlw	195
 31513  007DD4  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 31514  007DD6  0E00               	movlw	0
 31515  007DD8  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 31516  007DDA  0E00               	movlw	0
 31517  007DDC  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 31518  007DDE  EC6B  F046         	call	_delayUS	;wreg free
 31519                           
 31520                           ;Bluetooth.c: 130: UARTstring((unsigned char *)"$$$");
 31521  007DE2  0EE7               	movlw	low STR_2
 31522  007DE4  0100               	movlb	0	; () banked
 31523  007DE6  6F7A               	movwf	UARTstring@data& (0+255),b
 31524  007DE8  0EFF               	movlw	high STR_2
 31525  007DEA  0100               	movlb	0	; () banked
 31526  007DEC  6F7B               	movwf	(UARTstring@data+1)& (0+255),b
 31527  007DEE  ECE7  F045         	call	_UARTstring	;wreg free
 31528                           
 31529                           ;Bluetooth.c: 131: delayUS(50000);
 31530  007DF2  0E50               	movlw	80
 31531  007DF4  0100               	movlb	0	; () banked
 31532  007DF6  6F79               	movwf	delayUS@US& (0+255),b
 31533  007DF8  0EC3               	movlw	195
 31534  007DFA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 31535  007DFC  0E00               	movlw	0
 31536  007DFE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 31537  007E00  0E00               	movlw	0
 31538  007E02  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 31539  007E04  EC6B  F046         	call	_delayUS	;wreg free
 31540                           
 31541                           ;Bluetooth.c: 132: if(StringContains(CommandString,(unsigned char *)"CMD"))
 31542  007E08  0E00               	movlw	low _CommandString
 31543  007E0A  0100               	movlb	0	; () banked
 31544  007E0C  6F79               	movwf	StringContains@This& (0+255),b
 31545  007E0E  0E05               	movlw	high _CommandString
 31546  007E10  0100               	movlb	0	; () banked
 31547  007E12  6F7A               	movwf	(StringContains@This+1)& (0+255),b
 31548  007E14  0EF3               	movlw	low STR_3
 31549  007E16  0100               	movlb	0	; () banked
 31550  007E18  6F7B               	movwf	StringContains@That& (0+255),b
 31551  007E1A  0EFF               	movlw	high STR_3
 31552  007E1C  0100               	movlb	0	; () banked
 31553  007E1E  6F7C               	movwf	(StringContains@That+1)& (0+255),b
 31554  007E20  ECAA  F040         	call	_StringContains	;wreg free
 31555  007E24  0900               	iorlw	0
 31556  007E26  B4D8               	btfsc	status,2,c
 31557  007E28  D010               	goto	l13212
 31558                           
 31559                           ;Bluetooth.c: 133: {
 31560                           ;Bluetooth.c: 134: cleanBuffer(CommandString,CommandStringPos);
 31561  007E2A  0E00               	movlw	low _CommandString
 31562  007E2C  0100               	movlb	0	; () banked
 31563  007E2E  6F79               	movwf	cleanBuffer@data& (0+255),b
 31564  007E30  0E05               	movlw	high _CommandString
 31565  007E32  0100               	movlb	0	; () banked
 31566  007E34  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 31567  007E36  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 31568  007E3A  0100               	movlb	0	; () banked
 31569  007E3C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 31570  007E3E  ECBA  F045         	call	_cleanBuffer	;wreg free
 31571                           
 31572                           ;Bluetooth.c: 135: CommandStringPos = 0;
 31573  007E42  0E00               	movlw	0
 31574  007E44  6E29               	movwf	_CommandStringPos,c
 31575                           
 31576                           ;Bluetooth.c: 136: return 1;
 31577  007E46  0E01               	movlw	1
 31578  007E48  0012               	return	
 31579  007E4A                     l13212:
 31580                           
 31581                           ;Bluetooth.c: 137: }
 31582                           ;Bluetooth.c: 138: cleanBuffer(CommandString,CommandStringPos);
 31583  007E4A  0E00               	movlw	low _CommandString
 31584  007E4C  0100               	movlb	0	; () banked
 31585  007E4E  6F79               	movwf	cleanBuffer@data& (0+255),b
 31586  007E50  0E05               	movlw	high _CommandString
 31587  007E52  0100               	movlb	0	; () banked
 31588  007E54  6F7A               	movwf	(cleanBuffer@data+1)& (0+255),b
 31589  007E56  C029  F07B         	movff	_CommandStringPos,cleanBuffer@count
 31590  007E5A  0100               	movlb	0	; () banked
 31591  007E5C  6B7C               	clrf	(cleanBuffer@count+1)& (0+255),b
 31592  007E5E  ECBA  F045         	call	_cleanBuffer	;wreg free
 31593                           
 31594                           ;Bluetooth.c: 139: CommandStringPos = 0;
 31595  007E62  0E00               	movlw	0
 31596  007E64  6E29               	movwf	_CommandStringPos,c
 31597                           
 31598                           ;Bluetooth.c: 140: return 0;
 31599  007E66  0E00               	movlw	0
 31600  007E68  0012               	return	
 31601  007E6A  0012               	return		;funcret
 31602  007E6C                     __end_of_EnterCommandMode:
 31603                           	opt stack 0
 31604                           tblptru	equ	0xFF8
 31605                           tblptrh	equ	0xFF7
 31606                           tblptrl	equ	0xFF6
 31607                           tablat	equ	0xFF5
 31608                           prodh	equ	0xFF4
 31609                           prodl	equ	0xFF3
 31610                           intcon	equ	0xFF2
 31611                           intcon2	equ	0xFF1
 31612                           indf0	equ	0xFEF
 31613                           postinc0	equ	0xFEE
 31614                           fsr0h	equ	0xFEA
 31615                           fsr0l	equ	0xFE9
 31616                           wreg	equ	0xFE8
 31617                           indf1	equ	0xFE7
 31618                           postdec1	equ	0xFE5
 31619                           fsr1h	equ	0xFE2
 31620                           fsr1l	equ	0xFE1
 31621                           indf2	equ	0xFDF
 31622                           postinc2	equ	0xFDE
 31623                           postdec2	equ	0xFDD
 31624                           fsr2h	equ	0xFDA
 31625                           fsr2l	equ	0xFD9
 31626                           status	equ	0xFD8
 31627                           
 31628 ;; *************** function _cleanBuffer *****************
 31629 ;; Defined at:
 31630 ;;		line 127 in file "MISC.c"
 31631 ;; Parameters:    Size  Location     Type
 31632 ;;  data            2   25[BANK0 ] PTR unsigned char 
 31633 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 31634 ;;		 -> CommandString(255), StringAddEqual@temp(100), ReceivedString(255), main@BluetoothString(255), 
 31635 ;;  count           2   27[BANK0 ] int 
 31636 ;; Auto vars:     Size  Location     Type
 31637 ;;  i               1   32[BANK0 ] unsigned char 
 31638 ;; Return value:  Size  Location     Type
 31639 ;;		None               void
 31640 ;; Registers used:
 31641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31642 ;; Tracked objects:
 31643 ;;		On entry : 0/0
 31644 ;;		On exit  : 0/0
 31645 ;;		Unchanged: 0/0
 31646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31649 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31650 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31651 ;;Total ram usage:        8 bytes
 31652 ;; Hardware stack levels used:    1
 31653 ;; Hardware stack levels required when called:    6
 31654 ;; This function calls:
 31655 ;;		Nothing
 31656 ;; This function is called by:
 31657 ;;		_main
 31658 ;;		_Init_System
 31659 ;;		_BufferCopy
 31660 ;;		_StringAddEqual
 31661 ;;		_InitBluetooth
 31662 ;;		_EnterCommandMode
 31663 ;;		_BluetoothInitialSetup
 31664 ;;		_UseBluetooth
 31665 ;; This function uses a non-reentrant model
 31666 ;;
 31667                           
 31668                           	psect	text79
 31669  008B74                     __ptext79:
 31670                           	opt stack 0
 31671  008B74                     _cleanBuffer:
 31672                           	opt stack 24
 31673                           
 31674                           ;MISC.c: 129: unsigned char i=0;
 31675                           
 31676                           ;incstack = 0
 31677  008B74  0E00               	movlw	0
 31678  008B76  0100               	movlb	0	; () banked
 31679  008B78  6F80               	movwf	cleanBuffer@i& (0+255),b
 31680                           
 31681                           ;MISC.c: 130: for(i=0; i<count;i++)
 31682  008B7A  0E00               	movlw	0
 31683  008B7C  0100               	movlb	0	; () banked
 31684  008B7E  6F80               	movwf	cleanBuffer@i& (0+255),b
 31685  008B80  D010               	goto	l12614
 31686  008B82                     l12610:
 31687                           
 31688                           ; BSR set to: 0
 31689                           ;MISC.c: 131: {
 31690                           ;MISC.c: 132: data[i]= 0;
 31691  008B82  0100               	movlb	0	; () banked
 31692  008B84  5180               	movf	cleanBuffer@i& (0+255),w,b
 31693  008B86  0D01               	mullw	1
 31694  008B88  50F3               	movf	prodl,w,c
 31695  008B8A  0100               	movlb	0	; () banked
 31696  008B8C  2579               	addwf	cleanBuffer@data& (0+255),w,b
 31697  008B8E  6ED9               	movwf	fsr2l,c
 31698  008B90  50F4               	movf	prodh,w,c
 31699  008B92  0100               	movlb	0	; () banked
 31700  008B94  217A               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 31701  008B96  6EDA               	movwf	fsr2h,c
 31702  008B98  0E00               	movlw	0
 31703  008B9A  6EDF               	movwf	indf2,c
 31704                           
 31705                           ; BSR set to: 0
 31706  008B9C  0100               	movlb	0	; () banked
 31707  008B9E  2B80               	incf	cleanBuffer@i& (0+255),f,b
 31708  008BA0  D000               	goto	l12614
 31709  008BA2                     l12614:
 31710                           
 31711                           ; BSR set to: 0
 31712  008BA2  0100               	movlb	0	; () banked
 31713  008BA4  5180               	movf	cleanBuffer@i& (0+255),w,b
 31714  008BA6  0100               	movlb	0	; () banked
 31715  008BA8  6F7D               	movwf	??_cleanBuffer& (0+255),b
 31716  008BAA  6B7E               	clrf	(??_cleanBuffer+1)& (0+255),b
 31717  008BAC  0100               	movlb	0	; () banked
 31718  008BAE  517B               	movf	cleanBuffer@count& (0+255),w,b
 31719  008BB0  0100               	movlb	0	; () banked
 31720  008BB2  5D7D               	subwf	??_cleanBuffer& (0+255),w,b
 31721  008BB4  0100               	movlb	0	; () banked
 31722  008BB6  517E               	movf	(??_cleanBuffer+1)& (0+255),w,b
 31723  008BB8  0A80               	xorlw	128
 31724  008BBA  0100               	movlb	0	; () banked
 31725  008BBC  6F7F               	movwf	(??_cleanBuffer+2)& (0+255),b
 31726  008BBE  0100               	movlb	0	; () banked
 31727  008BC0  517C               	movf	(cleanBuffer@count+1)& (0+255),w,b
 31728  008BC2  0A80               	xorlw	128
 31729  008BC4  0100               	movlb	0	; () banked
 31730  008BC6  597F               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 31731  008BC8  A0D8               	btfss	status,0,c
 31732  008BCA  D7DB               	goto	l12610
 31733                           
 31734                           ; BSR set to: 0
 31735                           
 31736                           ; BSR set to: 0
 31737  008BCC  0012               	return		;funcret
 31738  008BCE                     __end_of_cleanBuffer:
 31739                           	opt stack 0
 31740                           tblptru	equ	0xFF8
 31741                           tblptrh	equ	0xFF7
 31742                           tblptrl	equ	0xFF6
 31743                           tablat	equ	0xFF5
 31744                           prodh	equ	0xFF4
 31745                           prodl	equ	0xFF3
 31746                           intcon	equ	0xFF2
 31747                           intcon2	equ	0xFF1
 31748                           indf0	equ	0xFEF
 31749                           postinc0	equ	0xFEE
 31750                           fsr0h	equ	0xFEA
 31751                           fsr0l	equ	0xFE9
 31752                           wreg	equ	0xFE8
 31753                           indf1	equ	0xFE7
 31754                           postdec1	equ	0xFE5
 31755                           fsr1h	equ	0xFE2
 31756                           fsr1l	equ	0xFE1
 31757                           indf2	equ	0xFDF
 31758                           postinc2	equ	0xFDE
 31759                           postdec2	equ	0xFDD
 31760                           fsr2h	equ	0xFDA
 31761                           fsr2l	equ	0xFD9
 31762                           status	equ	0xFD8
 31763                           
 31764 ;; *************** function _UARTstring *****************
 31765 ;; Defined at:
 31766 ;;		line 202 in file "UART.c"
 31767 ;; Parameters:    Size  Location     Type
 31768 ;;  data            2   26[BANK0 ] PTR unsigned char 
 31769 ;;		 -> STR_144(28), STR_87(13), STR_78(32), STR_67(14), 
 31770 ;;		 -> SYNTAX_ERR(14), STR_18(5), STR_16(5), STR_14(6), 
 31771 ;;		 -> STR_12(6), STR_10(9), STR_8(21), STR_6(10), 
 31772 ;;		 -> BluetoothInitialSetup@buf(50), STR_2(4), CRLN(3), ReceivedString(255), 
 31773 ;; Auto vars:     Size  Location     Type
 31774 ;;		None
 31775 ;; Return value:  Size  Location     Type
 31776 ;;		None               void
 31777 ;; Registers used:
 31778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31779 ;; Tracked objects:
 31780 ;;		On entry : 0/0
 31781 ;;		On exit  : 0/0
 31782 ;;		Unchanged: 0/0
 31783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31788 ;;Total ram usage:        2 bytes
 31789 ;; Hardware stack levels used:    1
 31790 ;; Hardware stack levels required when called:    7
 31791 ;; This function calls:
 31792 ;;		_UARTchar
 31793 ;; This function is called by:
 31794 ;;		_main
 31795 ;;		_Init_System
 31796 ;;		_UARTstringCRLN
 31797 ;;		_UARTcommandMenu
 31798 ;;		_EnterCommandMode
 31799 ;;		_BluetoothInitialSetup
 31800 ;;		_UseBluetooth
 31801 ;;		_WaitForIRsignal
 31802 ;; This function uses a non-reentrant model
 31803 ;;
 31804                           
 31805                           	psect	text80
 31806  008BCE                     __ptext80:
 31807                           	opt stack 0
 31808  008BCE                     _UARTstring:
 31809                           	opt stack 20
 31810                           
 31811                           ;UART.c: 204: while(*data != 0)
 31812                           
 31813                           ; BSR set to: 0
 31814                           ;incstack = 0
 31815  008BCE  D017               	goto	l12622
 31816  008BD0                     l12618:
 31817                           
 31818                           ;UART.c: 205: {
 31819                           ;UART.c: 206: UARTchar(*data);
 31820  008BD0  C07A  FFF6         	movff	UARTstring@data,tblptrl
 31821  008BD4  C07B  FFF7         	movff	UARTstring@data+1,tblptrh
 31822  008BD8  0E00               	movlw	low (__mediumconst shr (0+16))
 31823  008BDA  6EF8               	movwf	tblptru,c
 31824  008BDC  0E0F               	movlw	(high __ramtop+-1)
 31825  008BDE  64F7               	cpfsgt	tblptrh,c
 31826  008BE0  D003               	bra	u14847
 31827  008BE2  0008               	tblrd		*
 31828  008BE4  50F5               	movf	tablat,w,c
 31829  008BE6  D005               	bra	u14840
 31830  008BE8                     u14847:
 31831  008BE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 31832  008BEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 31833  008BF0  50EF               	movf	indf0,w,c
 31834  008BF2                     u14840:
 31835  008BF2  ECF0  F048         	call	_UARTchar
 31836                           
 31837                           ;UART.c: 207: *data++;
 31838  008BF6  0100               	movlb	0	; () banked
 31839  008BF8  4B7A               	infsnz	UARTstring@data& (0+255),f,b
 31840  008BFA  2B7B               	incf	(UARTstring@data+1)& (0+255),f,b
 31841  008BFC  D000               	goto	l12622
 31842  008BFE                     l12622:
 31843  008BFE  C07A  FFF6         	movff	UARTstring@data,tblptrl
 31844  008C02  C07B  FFF7         	movff	UARTstring@data+1,tblptrh
 31845  008C06  0E00               	movlw	low (__mediumconst shr (0+16))
 31846  008C08  6EF8               	movwf	tblptru,c
 31847  008C0A  0E0F               	movlw	(high __ramtop+-1)
 31848  008C0C  64F7               	cpfsgt	tblptrh,c
 31849  008C0E  D003               	bra	u14857
 31850  008C10  0008               	tblrd		*
 31851  008C12  50F5               	movf	tablat,w,c
 31852  008C14  D005               	bra	u14850
 31853  008C16                     u14857:
 31854  008C16  CFF6 FFE9          	movff	tblptrl,fsr0l
 31855  008C1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 31856  008C1E  50EF               	movf	indf0,w,c
 31857  008C20                     u14850:
 31858  008C20  0900               	iorlw	0
 31859  008C22  A4D8               	btfss	status,2,c
 31860  008C24  D7D5               	goto	l12618
 31861  008C26  0012               	return		;funcret
 31862  008C28                     __end_of_UARTstring:
 31863                           	opt stack 0
 31864                           tblptru	equ	0xFF8
 31865                           tblptrh	equ	0xFF7
 31866                           tblptrl	equ	0xFF6
 31867                           tablat	equ	0xFF5
 31868                           prodh	equ	0xFF4
 31869                           prodl	equ	0xFF3
 31870                           intcon	equ	0xFF2
 31871                           intcon2	equ	0xFF1
 31872                           indf0	equ	0xFEF
 31873                           postinc0	equ	0xFEE
 31874                           fsr0h	equ	0xFEA
 31875                           fsr0l	equ	0xFE9
 31876                           wreg	equ	0xFE8
 31877                           indf1	equ	0xFE7
 31878                           postdec1	equ	0xFE5
 31879                           fsr1h	equ	0xFE2
 31880                           fsr1l	equ	0xFE1
 31881                           indf2	equ	0xFDF
 31882                           postinc2	equ	0xFDE
 31883                           postdec2	equ	0xFDD
 31884                           fsr2h	equ	0xFDA
 31885                           fsr2l	equ	0xFD9
 31886                           status	equ	0xFD8
 31887                           
 31888 ;; *************** function _UARTchar *****************
 31889 ;; Defined at:
 31890 ;;		line 188 in file "UART.c"
 31891 ;; Parameters:    Size  Location     Type
 31892 ;;  data            1    wreg     unsigned char 
 31893 ;; Auto vars:     Size  Location     Type
 31894 ;;  data            1   25[BANK0 ] unsigned char 
 31895 ;; Return value:  Size  Location     Type
 31896 ;;		None               void
 31897 ;; Registers used:
 31898 ;;		wreg, status,2
 31899 ;; Tracked objects:
 31900 ;;		On entry : 0/0
 31901 ;;		On exit  : 0/0
 31902 ;;		Unchanged: 0/0
 31903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31908 ;;Total ram usage:        1 bytes
 31909 ;; Hardware stack levels used:    1
 31910 ;; Hardware stack levels required when called:    6
 31911 ;; This function calls:
 31912 ;;		Nothing
 31913 ;; This function is called by:
 31914 ;;		_main
 31915 ;;		_Init_System
 31916 ;;		_UARTstring
 31917 ;;		_UARTstringCRLN
 31918 ;;		_UARTcommandMenu
 31919 ;;		_UseBluetooth
 31920 ;;		_WaitForIRsignal
 31921 ;; This function uses a non-reentrant model
 31922 ;;
 31923                           
 31924                           	psect	text81
 31925  0091E0                     __ptext81:
 31926                           	opt stack 0
 31927  0091E0                     _UARTchar:
 31928                           	opt stack 20
 31929                           
 31930                           ;incstack = 0
 31931                           ;UARTchar@data stored from wreg
 31932  0091E0  0100               	movlb	0	; () banked
 31933  0091E2  6F79               	movwf	UARTchar@data& (0+255),b
 31934                           
 31935                           ; BSR set to: 0
 31936                           ;UART.c: 190: if(data != 0)
 31937  0091E4  0100               	movlb	0	; () banked
 31938  0091E6  5179               	movf	UARTchar@data& (0+255),w,b
 31939  0091E8  0100               	movlb	0	; () banked
 31940  0091EA  B4D8               	btfsc	status,2,c
 31941  0091EC  0012               	return	
 31942                           
 31943                           ; BSR set to: 0
 31944                           ;UART.c: 191: {
 31945                           ;UART.c: 192: TXREG = data;
 31946  0091EE  C079  FFAD         	movff	UARTchar@data,4013	;volatile
 31947                           
 31948                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 31949  0091F2  D000               	goto	l640
 31950  0091F4                     l640:
 31951                           
 31952                           ; BSR set to: 0
 31953  0091F4  B2AC               	btfsc	4012,1,c	;volatile
 31954  0091F6  0012               	return	
 31955  0091F8  D7FD               	goto	l640
 31956                           
 31957                           ; BSR set to: 0
 31958  0091FA  0012               	return	
 31959                           
 31960                           ; BSR set to: 0
 31961                           
 31962                           ; BSR set to: 0
 31963  0091FC  0012               	return		;funcret
 31964  0091FE                     __end_of_UARTchar:
 31965                           	opt stack 0
 31966                           tblptru	equ	0xFF8
 31967                           tblptrh	equ	0xFF7
 31968                           tblptrl	equ	0xFF6
 31969                           tablat	equ	0xFF5
 31970                           prodh	equ	0xFF4
 31971                           prodl	equ	0xFF3
 31972                           intcon	equ	0xFF2
 31973                           intcon2	equ	0xFF1
 31974                           indf0	equ	0xFEF
 31975                           postinc0	equ	0xFEE
 31976                           fsr0h	equ	0xFEA
 31977                           fsr0l	equ	0xFE9
 31978                           wreg	equ	0xFE8
 31979                           indf1	equ	0xFE7
 31980                           postdec1	equ	0xFE5
 31981                           fsr1h	equ	0xFE2
 31982                           fsr1l	equ	0xFE1
 31983                           indf2	equ	0xFDF
 31984                           postinc2	equ	0xFDE
 31985                           postdec2	equ	0xFDD
 31986                           fsr2h	equ	0xFDA
 31987                           fsr2l	equ	0xFD9
 31988                           status	equ	0xFD8
 31989                           
 31990 ;; *************** function _StringContains *****************
 31991 ;; Defined at:
 31992 ;;		line 252 in file "MISC.c"
 31993 ;; Parameters:    Size  Location     Type
 31994 ;;  This            2   25[BANK0 ] PTR unsigned char 
 31995 ;;		 -> CommandString(255), 
 31996 ;;  That            2   27[BANK0 ] PTR const unsigned char 
 31997 ;;		 -> STR_19(4), STR_15(4), STR_13(4), STR_11(4), 
 31998 ;;		 -> STR_9(4), STR_7(4), STR_5(4), BluetoothInitialSetup@buf(50), 
 31999 ;;		 -> STR_3(4), 
 32000 ;; Auto vars:     Size  Location     Type
 32001 ;;  begin           1   30[BANK0 ] unsigned char 
 32002 ;; Return value:  Size  Location     Type
 32003 ;;                  1    wreg      unsigned char 
 32004 ;; Registers used:
 32005 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32006 ;; Tracked objects:
 32007 ;;		On entry : 0/0
 32008 ;;		On exit  : 0/0
 32009 ;;		Unchanged: 0/0
 32010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32014 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32015 ;;Total ram usage:        6 bytes
 32016 ;; Hardware stack levels used:    1
 32017 ;; Hardware stack levels required when called:    6
 32018 ;; This function calls:
 32019 ;;		Nothing
 32020 ;; This function is called by:
 32021 ;;		_EnterCommandMode
 32022 ;;		_BluetoothInitialSetup
 32023 ;; This function uses a non-reentrant model
 32024 ;;
 32025                           
 32026                           	psect	text82
 32027  008154                     __ptext82:
 32028                           	opt stack 0
 32029  008154                     _StringContains:
 32030                           	opt stack 21
 32031                           
 32032                           ;MISC.c: 254: unsigned char begin = 0;
 32033                           
 32034                           ; BSR set to: 0
 32035                           ;incstack = 0
 32036  008154  0E00               	movlw	0
 32037  008156  0100               	movlb	0	; () banked
 32038  008158  6F7E               	movwf	StringContains@begin& (0+255),b
 32039                           
 32040                           ;MISC.c: 256: while(*This != 0)
 32041  00815A  D04B               	goto	l12652
 32042  00815C                     l12626:
 32043                           
 32044                           ; BSR set to: 0
 32045                           ;MISC.c: 257: {
 32046                           ;MISC.c: 258: if(*This == *That)
 32047  00815C  C079  FFD9         	movff	StringContains@This,fsr2l
 32048  008160  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32049  008164  50DF               	movf	indf2,w,c
 32050  008166  0100               	movlb	0	; () banked
 32051  008168  6F7D               	movwf	??_StringContains& (0+255),b
 32052  00816A  C07B  FFF6         	movff	StringContains@That,tblptrl
 32053  00816E  C07C  FFF7         	movff	StringContains@That+1,tblptrh
 32054  008172  0E00               	movlw	low (__mediumconst shr (0+16))
 32055  008174  6EF8               	movwf	tblptru,c
 32056  008176  0E0F               	movlw	(high __ramtop+-1)
 32057  008178  64F7               	cpfsgt	tblptrh,c
 32058  00817A  D003               	bra	u14877
 32059  00817C  0008               	tblrd		*
 32060  00817E  50F5               	movf	tablat,w,c
 32061  008180  D005               	bra	u14870
 32062  008182                     u14877:
 32063  008182  CFF6 FFE9          	movff	tblptrl,fsr0l
 32064  008186  CFF7 FFEA          	movff	tblptrh,fsr0h
 32065  00818A  50EF               	movf	indf0,w,c
 32066  00818C                     u14870:
 32067  00818C  0100               	movlb	0	; () banked
 32068  00818E  197D               	xorwf	??_StringContains& (0+255),w,b
 32069  008190  A4D8               	btfss	status,2,c
 32070  008192  D026               	goto	l12644
 32071                           
 32072                           ; BSR set to: 0
 32073                           ;MISC.c: 259: {
 32074                           ;MISC.c: 260: begin = 1;
 32075  008194  0E01               	movlw	1
 32076  008196  0100               	movlb	0	; () banked
 32077  008198  6F7E               	movwf	StringContains@begin& (0+255),b
 32078                           
 32079                           ; BSR set to: 0
 32080                           ;MISC.c: 261: That++;
 32081  00819A  0100               	movlb	0	; () banked
 32082  00819C  4B7B               	infsnz	StringContains@That& (0+255),f,b
 32083  00819E  2B7C               	incf	(StringContains@That+1)& (0+255),f,b
 32084                           
 32085                           ; BSR set to: 0
 32086                           ;MISC.c: 262: if(*That == 0)
 32087  0081A0  C07B  FFF6         	movff	StringContains@That,tblptrl
 32088  0081A4  C07C  FFF7         	movff	StringContains@That+1,tblptrh
 32089  0081A8  0E00               	movlw	low (__mediumconst shr (0+16))
 32090  0081AA  6EF8               	movwf	tblptru,c
 32091  0081AC  0E0F               	movlw	(high __ramtop+-1)
 32092  0081AE  64F7               	cpfsgt	tblptrh,c
 32093  0081B0  D003               	bra	u14897
 32094  0081B2  0008               	tblrd		*
 32095  0081B4  50F5               	movf	tablat,w,c
 32096  0081B6  D005               	bra	u14890
 32097  0081B8                     u14897:
 32098  0081B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 32099  0081BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 32100  0081C0  50EF               	movf	indf0,w,c
 32101  0081C2                     u14890:
 32102  0081C2  0900               	iorlw	0
 32103  0081C4  A4D8               	btfss	status,2,c
 32104  0081C6  D002               	goto	l12638
 32105                           
 32106                           ;MISC.c: 263: {
 32107                           ;MISC.c: 264: return 1;
 32108  0081C8  0E01               	movlw	1
 32109  0081CA  0012               	return	
 32110  0081CC                     l12638:
 32111                           
 32112                           ;MISC.c: 265: }
 32113                           ;MISC.c: 266: if(*This == 0)
 32114  0081CC  C079  FFD9         	movff	StringContains@This,fsr2l
 32115  0081D0  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32116  0081D4  50DF               	movf	indf2,w,c
 32117  0081D6  A4D8               	btfss	status,2,c
 32118  0081D8  D008               	goto	l12650
 32119                           
 32120                           ;MISC.c: 267: {
 32121                           ;MISC.c: 268: return 0;
 32122  0081DA  0E00               	movlw	0
 32123  0081DC  0012               	return	
 32124                           
 32125                           ;MISC.c: 269: }
 32126                           ;MISC.c: 270: }
 32127  0081DE  D005               	goto	l12650
 32128  0081E0                     l12644:
 32129                           
 32130                           ;MISC.c: 271: else
 32131                           ;MISC.c: 272: {
 32132                           ;MISC.c: 273: if(begin == 1)
 32133  0081E0  0100               	movlb	0	; () banked
 32134  0081E2  057E               	decf	StringContains@begin& (0+255),w,b
 32135  0081E4  D7F8               	goto	L24
 32136                           
 32137                           ; BSR set to: 0
 32138                           
 32139                           ; BSR set to: 0
 32140                           ;MISC.c: 274: {
 32141                           ;MISC.c: 275: return 0;
 32142  0081E6  0012               	return	
 32143                           
 32144                           ; BSR set to: 0
 32145  0081E8  D000               	goto	l12650
 32146  0081EA                     l12650:
 32147                           
 32148                           ;MISC.c: 276: }
 32149                           ;MISC.c: 277: }
 32150                           ;MISC.c: 278: This++;
 32151  0081EA  0100               	movlb	0	; () banked
 32152  0081EC  4B79               	infsnz	StringContains@This& (0+255),f,b
 32153  0081EE  2B7A               	incf	(StringContains@This+1)& (0+255),f,b
 32154  0081F0  D000               	goto	l12652
 32155  0081F2                     l12652:
 32156                           
 32157                           ; BSR set to: 0
 32158  0081F2  C079  FFD9         	movff	StringContains@This,fsr2l
 32159  0081F6  C07A  FFDA         	movff	StringContains@This+1,fsr2h
 32160  0081FA  50DF               	movf	indf2,w,c
 32161  0081FC  A4D8               	btfss	status,2,c
 32162  0081FE  D7AE               	goto	l12626
 32163                           
 32164                           ; BSR set to: 0
 32165                           ;MISC.c: 279: }
 32166                           ;MISC.c: 280: return 0;
 32167                           
 32168                           ; BSR set to: 0
 32169  008200  0E00               	movlw	0
 32170  008202  0012               	return	
 32171                           
 32172                           ; BSR set to: 0
 32173  008204  0012               	return		;funcret
 32174  008206                     __end_of_StringContains:
 32175                           	opt stack 0
 32176                           tblptru	equ	0xFF8
 32177                           tblptrh	equ	0xFF7
 32178                           tblptrl	equ	0xFF6
 32179                           tablat	equ	0xFF5
 32180                           prodh	equ	0xFF4
 32181                           prodl	equ	0xFF3
 32182                           intcon	equ	0xFF2
 32183                           intcon2	equ	0xFF1
 32184                           indf0	equ	0xFEF
 32185                           postinc0	equ	0xFEE
 32186                           fsr0h	equ	0xFEA
 32187                           fsr0l	equ	0xFE9
 32188                           wreg	equ	0xFE8
 32189                           indf1	equ	0xFE7
 32190                           postdec1	equ	0xFE5
 32191                           fsr1h	equ	0xFE2
 32192                           fsr1l	equ	0xFE1
 32193                           indf2	equ	0xFDF
 32194                           postinc2	equ	0xFDE
 32195                           postdec2	equ	0xFDD
 32196                           fsr2h	equ	0xFDA
 32197                           fsr2l	equ	0xFD9
 32198                           status	equ	0xFD8
 32199                           
 32200 ;; *************** function _ResetBlue *****************
 32201 ;; Defined at:
 32202 ;;		line 102 in file "Bluetooth.c"
 32203 ;; Parameters:    Size  Location     Type
 32204 ;;		None
 32205 ;; Auto vars:     Size  Location     Type
 32206 ;;		None
 32207 ;; Return value:  Size  Location     Type
 32208 ;;		None               void
 32209 ;; Registers used:
 32210 ;;		wreg, status,2, status,0, cstack
 32211 ;; Tracked objects:
 32212 ;;		On entry : 0/0
 32213 ;;		On exit  : 0/0
 32214 ;;		Unchanged: 0/0
 32215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32220 ;;Total ram usage:        0 bytes
 32221 ;; Hardware stack levels used:    1
 32222 ;; Hardware stack levels required when called:    7
 32223 ;; This function calls:
 32224 ;;		_delayUS
 32225 ;; This function is called by:
 32226 ;;		_InitBluetooth
 32227 ;;		_EnterCommandMode
 32228 ;; This function uses a non-reentrant model
 32229 ;;
 32230                           
 32231                           	psect	text83
 32232  009088                     __ptext83:
 32233                           	opt stack 0
 32234  009088                     _ResetBlue:
 32235                           	opt stack 21
 32236                           
 32237                           ;Bluetooth.c: 104: LATA &= ~0x04;
 32238                           
 32239                           ;incstack = 0
 32240  009088  9489               	bcf	3977,2,c	;volatile
 32241                           
 32242                           ;Bluetooth.c: 105: delayUS(50000);
 32243  00908A  0E50               	movlw	80
 32244  00908C  0100               	movlb	0	; () banked
 32245  00908E  6F79               	movwf	delayUS@US& (0+255),b
 32246  009090  0EC3               	movlw	195
 32247  009092  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 32248  009094  0E00               	movlw	0
 32249  009096  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 32250  009098  0E00               	movlw	0
 32251  00909A  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 32252  00909C  EC6B  F046         	call	_delayUS	;wreg free
 32253                           
 32254                           ;Bluetooth.c: 106: LATA |= 0x04;
 32255  0090A0  8489               	bsf	3977,2,c	;volatile
 32256                           
 32257                           ;Bluetooth.c: 107: delayUS(50000);
 32258  0090A2  0E50               	movlw	80
 32259  0090A4  0100               	movlb	0	; () banked
 32260  0090A6  6F79               	movwf	delayUS@US& (0+255),b
 32261  0090A8  0EC3               	movlw	195
 32262  0090AA  6F7A               	movwf	(delayUS@US+1)& (0+255),b
 32263  0090AC  0E00               	movlw	0
 32264  0090AE  6F7B               	movwf	(delayUS@US+2)& (0+255),b
 32265  0090B0  0E00               	movlw	0
 32266  0090B2  6F7C               	movwf	(delayUS@US+3)& (0+255),b
 32267  0090B4  EC6B  F046         	call	_delayUS	;wreg free
 32268  0090B8  0012               	return		;funcret
 32269  0090BA                     __end_of_ResetBlue:
 32270                           	opt stack 0
 32271                           tblptru	equ	0xFF8
 32272                           tblptrh	equ	0xFF7
 32273                           tblptrl	equ	0xFF6
 32274                           tablat	equ	0xFF5
 32275                           prodh	equ	0xFF4
 32276                           prodl	equ	0xFF3
 32277                           intcon	equ	0xFF2
 32278                           intcon2	equ	0xFF1
 32279                           indf0	equ	0xFEF
 32280                           postinc0	equ	0xFEE
 32281                           fsr0h	equ	0xFEA
 32282                           fsr0l	equ	0xFE9
 32283                           wreg	equ	0xFE8
 32284                           indf1	equ	0xFE7
 32285                           postdec1	equ	0xFE5
 32286                           fsr1h	equ	0xFE2
 32287                           fsr1l	equ	0xFE1
 32288                           indf2	equ	0xFDF
 32289                           postinc2	equ	0xFDE
 32290                           postdec2	equ	0xFDD
 32291                           fsr2h	equ	0xFDA
 32292                           fsr2l	equ	0xFD9
 32293                           status	equ	0xFD8
 32294                           
 32295 ;; *************** function _delayUS *****************
 32296 ;; Defined at:
 32297 ;;		line 51 in file "MISC.c"
 32298 ;; Parameters:    Size  Location     Type
 32299 ;;  US              4   25[BANK0 ] long 
 32300 ;; Auto vars:     Size  Location     Type
 32301 ;;  i               4   30[BANK0 ] long 
 32302 ;; Return value:  Size  Location     Type
 32303 ;;		None               void
 32304 ;; Registers used:
 32305 ;;		wreg, status,2, status,0
 32306 ;; Tracked objects:
 32307 ;;		On entry : 0/0
 32308 ;;		On exit  : 0/0
 32309 ;;		Unchanged: 0/0
 32310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32314 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32315 ;;Total ram usage:        9 bytes
 32316 ;; Hardware stack levels used:    1
 32317 ;; Hardware stack levels required when called:    6
 32318 ;; This function calls:
 32319 ;;		Nothing
 32320 ;; This function is called by:
 32321 ;;		_main
 32322 ;;		_ReadVoltage
 32323 ;;		_InternalADC_Read
 32324 ;;		_UseIRCode
 32325 ;;		_SendNEC_wait
 32326 ;;		_ReadCodeButtons
 32327 ;;		_ResetBlue
 32328 ;;		_EnterCommandMode
 32329 ;;		_BluetoothInitialSetup
 32330 ;;		_UseBluetooth
 32331 ;;		_WaitForIRsignal
 32332 ;;		_CalibrateDelay
 32333 ;; This function uses a non-reentrant model
 32334 ;;
 32335                           
 32336                           	psect	text84
 32337  008CD6                     __ptext84:
 32338                           	opt stack 0
 32339  008CD6                     _delayUS:
 32340                           	opt stack 24
 32341                           
 32342                           ;MISC.c: 53: long i;
 32343                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 32344                           
 32345                           ;incstack = 0
 32346  008CD6  0E00               	movlw	0
 32347  008CD8  0100               	movlb	0	; () banked
 32348  008CDA  6F7E               	movwf	delayUS@i& (0+255),b
 32349  008CDC  0E00               	movlw	0
 32350  008CDE  6F7F               	movwf	(delayUS@i+1)& (0+255),b
 32351  008CE0  0E00               	movlw	0
 32352  008CE2  6F80               	movwf	(delayUS@i+2)& (0+255),b
 32353  008CE4  0E00               	movlw	0
 32354  008CE6  6F81               	movwf	(delayUS@i+3)& (0+255),b
 32355  008CE8  D008               	goto	l295
 32356  008CEA                     l296:
 32357                           
 32358                           ; BSR set to: 0
 32359                           ;MISC.c: 55: {
 32360                           ;MISC.c: 56: __nop();
 32361  008CEA  F000               	nop	
 32362  008CEC  0E02               	movlw	2
 32363  008CEE  0100               	movlb	0	; () banked
 32364  008CF0  277E               	addwf	delayUS@i& (0+255),f,b
 32365  008CF2  0E00               	movlw	0
 32366  008CF4  237F               	addwfc	(delayUS@i+1)& (0+255),f,b
 32367  008CF6  2380               	addwfc	(delayUS@i+2)& (0+255),f,b
 32368  008CF8  2381               	addwfc	(delayUS@i+3)& (0+255),f,b
 32369  008CFA                     l295:
 32370                           
 32371                           ; BSR set to: 0
 32372  008CFA  0100               	movlb	0	; () banked
 32373  008CFC  5179               	movf	delayUS@US& (0+255),w,b
 32374  008CFE  0100               	movlb	0	; () banked
 32375  008D00  5D7E               	subwf	delayUS@i& (0+255),w,b
 32376  008D02  0100               	movlb	0	; () banked
 32377  008D04  517A               	movf	(delayUS@US+1)& (0+255),w,b
 32378  008D06  0100               	movlb	0	; () banked
 32379  008D08  597F               	subwfb	(delayUS@i+1)& (0+255),w,b
 32380  008D0A  0100               	movlb	0	; () banked
 32381  008D0C  517B               	movf	(delayUS@US+2)& (0+255),w,b
 32382  008D0E  0100               	movlb	0	; () banked
 32383  008D10  5980               	subwfb	(delayUS@i+2)& (0+255),w,b
 32384  008D12  0100               	movlb	0	; () banked
 32385  008D14  5181               	movf	(delayUS@i+3)& (0+255),w,b
 32386  008D16  0A80               	xorlw	128
 32387  008D18  0100               	movlb	0	; () banked
 32388  008D1A  6F7D               	movwf	??_delayUS& (0+255),b
 32389  008D1C  0100               	movlb	0	; () banked
 32390  008D1E  517C               	movf	(delayUS@US+3)& (0+255),w,b
 32391  008D20  0A80               	xorlw	128
 32392  008D22  0100               	movlb	0	; () banked
 32393  008D24  597D               	subwfb	??_delayUS& (0+255),w,b
 32394  008D26  A0D8               	btfss	status,0,c
 32395  008D28  D7E0               	goto	l296
 32396                           
 32397                           ; BSR set to: 0
 32398                           
 32399                           ; BSR set to: 0
 32400  008D2A  0012               	return		;funcret
 32401  008D2C                     __end_of_delayUS:
 32402                           	opt stack 0
 32403                           tblptru	equ	0xFF8
 32404                           tblptrh	equ	0xFF7
 32405                           tblptrl	equ	0xFF6
 32406                           tablat	equ	0xFF5
 32407                           prodh	equ	0xFF4
 32408                           prodl	equ	0xFF3
 32409                           intcon	equ	0xFF2
 32410                           intcon2	equ	0xFF1
 32411                           indf0	equ	0xFEF
 32412                           postinc0	equ	0xFEE
 32413                           fsr0h	equ	0xFEA
 32414                           fsr0l	equ	0xFE9
 32415                           wreg	equ	0xFE8
 32416                           indf1	equ	0xFE7
 32417                           postdec1	equ	0xFE5
 32418                           fsr1h	equ	0xFE2
 32419                           fsr1l	equ	0xFE1
 32420                           indf2	equ	0xFDF
 32421                           postinc2	equ	0xFDE
 32422                           postdec2	equ	0xFDD
 32423                           fsr2h	equ	0xFDA
 32424                           fsr2l	equ	0xFD9
 32425                           status	equ	0xFD8
 32426                           
 32427 ;; *************** function _BlueConnected *****************
 32428 ;; Defined at:
 32429 ;;		line 87 in file "Bluetooth.c"
 32430 ;; Parameters:    Size  Location     Type
 32431 ;;		None
 32432 ;; Auto vars:     Size  Location     Type
 32433 ;;		None
 32434 ;; Return value:  Size  Location     Type
 32435 ;;                  1    wreg      unsigned char 
 32436 ;; Registers used:
 32437 ;;		wreg
 32438 ;; Tracked objects:
 32439 ;;		On entry : 0/0
 32440 ;;		On exit  : 0/0
 32441 ;;		Unchanged: 0/0
 32442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32447 ;;Total ram usage:        0 bytes
 32448 ;; Hardware stack levels used:    1
 32449 ;; Hardware stack levels required when called:    6
 32450 ;; This function calls:
 32451 ;;		Nothing
 32452 ;; This function is called by:
 32453 ;;		_EnterCommandMode
 32454 ;; This function uses a non-reentrant model
 32455 ;;
 32456                           
 32457                           	psect	text85
 32458  009354                     __ptext85:
 32459                           	opt stack 0
 32460  009354                     _BlueConnected:
 32461                           	opt stack 20
 32462                           
 32463                           ;Bluetooth.c: 90: if((PORTA & 0x02) == 0x02)
 32464                           
 32465                           ; BSR set to: 0
 32466                           ;incstack = 0
 32467  009354  A280               	btfss	3968,1,c	;volatile
 32468  009356  D002               	goto	l12746
 32469                           
 32470                           ;Bluetooth.c: 91: {
 32471                           ;Bluetooth.c: 92: return 1;
 32472  009358  0E01               	movlw	1
 32473  00935A  0012               	return	
 32474  00935C                     l12746:
 32475                           
 32476                           ;Bluetooth.c: 93: }
 32477                           ;Bluetooth.c: 94: return 0;
 32478  00935C  0E00               	movlw	0
 32479  00935E  0012               	return	
 32480  009360  0012               	return		;funcret
 32481  009362                     __end_of_BlueConnected:
 32482                           	opt stack 0
 32483                           tblptru	equ	0xFF8
 32484                           tblptrh	equ	0xFF7
 32485                           tblptrl	equ	0xFF6
 32486                           tablat	equ	0xFF5
 32487                           prodh	equ	0xFF4
 32488                           prodl	equ	0xFF3
 32489                           intcon	equ	0xFF2
 32490                           intcon2	equ	0xFF1
 32491                           indf0	equ	0xFEF
 32492                           postinc0	equ	0xFEE
 32493                           fsr0h	equ	0xFEA
 32494                           fsr0l	equ	0xFE9
 32495                           wreg	equ	0xFE8
 32496                           indf1	equ	0xFE7
 32497                           postdec1	equ	0xFE5
 32498                           fsr1h	equ	0xFE2
 32499                           fsr1l	equ	0xFE1
 32500                           indf2	equ	0xFDF
 32501                           postinc2	equ	0xFDE
 32502                           postdec2	equ	0xFDD
 32503                           fsr2h	equ	0xFDA
 32504                           fsr2l	equ	0xFD9
 32505                           status	equ	0xFD8
 32506                           
 32507 ;; *************** function _BluetoothConfigured *****************
 32508 ;; Defined at:
 32509 ;;		line 263 in file "Bluetooth.c"
 32510 ;; Parameters:    Size  Location     Type
 32511 ;;		None
 32512 ;; Auto vars:     Size  Location     Type
 32513 ;;		None
 32514 ;; Return value:  Size  Location     Type
 32515 ;;                  1    wreg      unsigned char 
 32516 ;; Registers used:
 32517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32518 ;; Tracked objects:
 32519 ;;		On entry : 0/0
 32520 ;;		On exit  : 0/0
 32521 ;;		Unchanged: 0/0
 32522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32527 ;;Total ram usage:        0 bytes
 32528 ;; Hardware stack levels used:    1
 32529 ;; Hardware stack levels required when called:   11
 32530 ;; This function calls:
 32531 ;;		_SyncGlobalToEEPROM
 32532 ;; This function is called by:
 32533 ;;		_InitBluetooth
 32534 ;; This function uses a non-reentrant model
 32535 ;;
 32536                           
 32537                           	psect	text86
 32538  0091FE                     __ptext86:
 32539                           	opt stack 0
 32540  0091FE                     _BluetoothConfigured:
 32541                           	opt stack 17
 32542                           
 32543                           ;Bluetooth.c: 265: if(Global.BlueToothFlag != 1)
 32544                           
 32545                           ;incstack = 0
 32546  0091FE  0104               	movlb	4	; () banked
 32547  009200  0500               	decf	_Global& (0+255),w,b
 32548  009202  B4D8               	btfsc	status,2,c
 32549  009204  D007               	goto	l13968
 32550                           
 32551                           ; BSR set to: 4
 32552                           ;Bluetooth.c: 266: {
 32553                           ;Bluetooth.c: 267: Global.BlueToothFlag = 1;
 32554  009206  0E01               	movlw	1
 32555  009208  0104               	movlb	4	; () banked
 32556  00920A  6F00               	movwf	_Global& (0+255),b
 32557                           
 32558                           ; BSR set to: 4
 32559                           ;Bluetooth.c: 268: SyncGlobalToEEPROM();
 32560  00920C  EC0C  F047         	call	_SyncGlobalToEEPROM	;wreg free
 32561                           
 32562                           ;Bluetooth.c: 269: return 0;
 32563  009210  0E00               	movlw	0
 32564  009212  0012               	return	
 32565  009214                     l13968:
 32566                           
 32567                           ;Bluetooth.c: 270: }
 32568                           ;Bluetooth.c: 271: return 1;
 32569  009214  0E01               	movlw	1
 32570  009216  0012               	return	
 32571  009218  0012               	return		;funcret
 32572  00921A                     __end_of_BluetoothConfigured:
 32573                           	opt stack 0
 32574                           tblptru	equ	0xFF8
 32575                           tblptrh	equ	0xFF7
 32576                           tblptrl	equ	0xFF6
 32577                           tablat	equ	0xFF5
 32578                           prodh	equ	0xFF4
 32579                           prodl	equ	0xFF3
 32580                           intcon	equ	0xFF2
 32581                           intcon2	equ	0xFF1
 32582                           indf0	equ	0xFEF
 32583                           postinc0	equ	0xFEE
 32584                           fsr0h	equ	0xFEA
 32585                           fsr0l	equ	0xFE9
 32586                           wreg	equ	0xFE8
 32587                           indf1	equ	0xFE7
 32588                           postdec1	equ	0xFE5
 32589                           fsr1h	equ	0xFE2
 32590                           fsr1l	equ	0xFE1
 32591                           indf2	equ	0xFDF
 32592                           postinc2	equ	0xFDE
 32593                           postdec2	equ	0xFDD
 32594                           fsr2h	equ	0xFDA
 32595                           fsr2l	equ	0xFD9
 32596                           status	equ	0xFD8
 32597                           
 32598 ;; *************** function _SyncGlobalToEEPROM *****************
 32599 ;; Defined at:
 32600 ;;		line 225 in file "EEPROM.c"
 32601 ;; Parameters:    Size  Location     Type
 32602 ;;		None
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  1    wreg      unsigned char 
 32607 ;; Registers used:
 32608 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32609 ;; Tracked objects:
 32610 ;;		On entry : 0/0
 32611 ;;		On exit  : 0/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32618 ;;Total ram usage:        0 bytes
 32619 ;; Hardware stack levels used:    1
 32620 ;; Hardware stack levels required when called:   10
 32621 ;; This function calls:
 32622 ;;		_SetEEPROM
 32623 ;; This function is called by:
 32624 ;;		_Init_System
 32625 ;;		_SetEEPROMdefault
 32626 ;;		_UseIRCode
 32627 ;;		_BluetoothConfigured
 32628 ;;		_UseBluetooth
 32629 ;; This function uses a non-reentrant model
 32630 ;;
 32631                           
 32632                           	psect	text87
 32633  008E18                     __ptext87:
 32634                           	opt stack 0
 32635  008E18                     _SyncGlobalToEEPROM:
 32636                           	opt stack 19
 32637                           
 32638                           ;EEPROM.c: 228: if(!SetEEPROM(Global,0xFFFFFFFF))
 32639                           
 32640                           ;incstack = 0
 32641  008E18  EE24  F000         	lfsr	2,_Global
 32642  008E1C  EE01  F000         	lfsr	0,SetEEPROM@Temp
 32643  008E20  0E87               	movlw	135
 32644  008E22                     u15611:
 32645  008E22  CFDB FFEB          	movff	plusw2,plusw0
 32646  008E26  06E8               	decf	wreg,f,c
 32647  008E28  E2FC               	bc	u15611
 32648  008E2A  0EFF               	movlw	255
 32649  008E2C  0101               	movlb	1	; () banked
 32650  008E2E  6F88               	movwf	SetEEPROM@burn& (0+255),b
 32651  008E30  0EFF               	movlw	255
 32652  008E32  6F89               	movwf	(SetEEPROM@burn+1)& (0+255),b
 32653  008E34  0EFF               	movlw	255
 32654  008E36  6F8A               	movwf	(SetEEPROM@burn+2)& (0+255),b
 32655  008E38  0EFF               	movlw	255
 32656  008E3A  6F8B               	movwf	(SetEEPROM@burn+3)& (0+255),b
 32657  008E3C  ECBE  F030         	call	_SetEEPROM	;wreg free
 32658  008E40  0101               	movlb	1	; () banked
 32659  008E42  5100               	movf	?_SetEEPROM& (0+255),w,b
 32660  008E44  0101               	movlb	1	; () banked
 32661  008E46  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 32662  008E48  0101               	movlb	1	; () banked
 32663  008E4A  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 32664  008E4C  0101               	movlb	1	; () banked
 32665  008E4E  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 32666  008E50  A4D8               	btfss	status,2,c
 32667  008E52  D002               	goto	l13086
 32668                           
 32669                           ; BSR set to: 1
 32670                           ;EEPROM.c: 229: {
 32671                           ;EEPROM.c: 230: return 1;
 32672  008E54  0E01               	movlw	1
 32673                           
 32674                           ; BSR set to: 1
 32675  008E56  0012               	return	
 32676  008E58                     l13086:
 32677                           
 32678                           ; BSR set to: 1
 32679                           ;EEPROM.c: 231: }
 32680                           ;EEPROM.c: 232: return 0;
 32681  008E58  0E00               	movlw	0
 32682  008E5A  0012               	return	
 32683                           
 32684                           ; BSR set to: 1
 32685                           
 32686                           ; BSR set to: 1
 32687  008E5C  0012               	return		;funcret
 32688  008E5E                     __end_of_SyncGlobalToEEPROM:
 32689                           	opt stack 0
 32690                           tblptru	equ	0xFF8
 32691                           tblptrh	equ	0xFF7
 32692                           tblptrl	equ	0xFF6
 32693                           tablat	equ	0xFF5
 32694                           prodh	equ	0xFF4
 32695                           prodl	equ	0xFF3
 32696                           intcon	equ	0xFF2
 32697                           intcon2	equ	0xFF1
 32698                           indf0	equ	0xFEF
 32699                           postinc0	equ	0xFEE
 32700                           plusw0	equ	0xFEB
 32701                           fsr0h	equ	0xFEA
 32702                           fsr0l	equ	0xFE9
 32703                           wreg	equ	0xFE8
 32704                           indf1	equ	0xFE7
 32705                           postdec1	equ	0xFE5
 32706                           fsr1h	equ	0xFE2
 32707                           fsr1l	equ	0xFE1
 32708                           indf2	equ	0xFDF
 32709                           postinc2	equ	0xFDE
 32710                           postdec2	equ	0xFDD
 32711                           plusw2	equ	0xFDB
 32712                           fsr2h	equ	0xFDA
 32713                           fsr2l	equ	0xFD9
 32714                           status	equ	0xFD8
 32715                           
 32716 ;; *************** function _SetEEPROM *****************
 32717 ;; Defined at:
 32718 ;;		line 153 in file "EEPROM.c"
 32719 ;; Parameters:    Size  Location     Type
 32720 ;;  Temp          136    0[BANK1 ] struct EEdata
 32721 ;;  burn            4  136[BANK1 ] unsigned long 
 32722 ;; Auto vars:     Size  Location     Type
 32723 ;;  fail            4   80[BANK0 ] unsigned long 
 32724 ;;  j               1   88[BANK0 ] unsigned char 
 32725 ;;  i               1   87[BANK0 ] unsigned char 
 32726 ;;  k               1   86[BANK0 ] unsigned char 
 32727 ;;  Arrayspot       1   85[BANK0 ] unsigned char 
 32728 ;;  temp            1   84[BANK0 ] unsigned char 
 32729 ;; Return value:  Size  Location     Type
 32730 ;;                  4    0[BANK1 ] unsigned long 
 32731 ;; Registers used:
 32732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32733 ;; Tracked objects:
 32734 ;;		On entry : 0/0
 32735 ;;		On exit  : 0/0
 32736 ;;		Unchanged: 0/0
 32737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32738 ;;      Params:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32739 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32740 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32741 ;;      Totals:         0      11     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32742 ;;Total ram usage:      151 bytes
 32743 ;; Hardware stack levels used:    1
 32744 ;; Hardware stack levels required when called:    9
 32745 ;; This function calls:
 32746 ;;		_SetMemoryChar
 32747 ;;		_SetMemoryLong
 32748 ;; This function is called by:
 32749 ;;		_SyncGlobalToEEPROM
 32750 ;; This function uses a non-reentrant model
 32751 ;;
 32752                           
 32753                           	psect	text88
 32754  00617C                     __ptext88:
 32755                           	opt stack 0
 32756  00617C                     _SetEEPROM:
 32757                           	opt stack 19
 32758                           
 32759                           ;EEPROM.c: 155: unsigned long fail = 0;
 32760                           
 32761                           ; BSR set to: 1
 32762                           ;incstack = 0
 32763  00617C  0E00               	movlw	0
 32764  00617E  0100               	movlb	0	; () banked
 32765  006180  6FB0               	movwf	SetEEPROM@fail& (0+255),b
 32766  006182  0E00               	movlw	0
 32767  006184  6FB1               	movwf	(SetEEPROM@fail+1)& (0+255),b
 32768  006186  0E00               	movlw	0
 32769  006188  6FB2               	movwf	(SetEEPROM@fail+2)& (0+255),b
 32770  00618A  0E00               	movlw	0
 32771  00618C  6FB3               	movwf	(SetEEPROM@fail+3)& (0+255),b
 32772                           
 32773                           ;EEPROM.c: 156: unsigned char i,j,k,temp;
 32774                           ;EEPROM.c: 157: unsigned char Arrayspot=5;
 32775  00618E  0E05               	movlw	5
 32776  006190  0100               	movlb	0	; () banked
 32777  006192  6FB5               	movwf	SetEEPROM@Arrayspot& (0+255),b
 32778                           
 32779                           ; BSR set to: 0
 32780                           ;EEPROM.c: 159: if(burn & 0x00000001)
 32781  006194  0101               	movlb	1	; () banked
 32782  006196  A188               	btfss	SetEEPROM@burn& (0+255),0,b
 32783  006198  D00D               	goto	l12668
 32784                           
 32785                           ; BSR set to: 1
 32786                           ;EEPROM.c: 160: {
 32787                           ;EEPROM.c: 161: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 32788  00619A  0E00               	movlw	0
 32789  00619C  0100               	movlb	0	; () banked
 32790  00619E  6F82               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 32791  0061A0  0101               	movlb	1	; () banked
 32792  0061A2  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 32793  0061A4  ECF0  F047         	call	_SetMemoryChar
 32794  0061A8  0900               	iorlw	0
 32795  0061AA  A4D8               	btfss	status,2,c
 32796  0061AC  D003               	goto	l12668
 32797                           
 32798                           ;EEPROM.c: 162: {
 32799                           ;EEPROM.c: 164: fail |= 0x00000001;
 32800  0061AE  0100               	movlb	0	; () banked
 32801  0061B0  81B0               	bsf	SetEEPROM@fail& (0+255),0,b
 32802                           
 32803                           ; BSR set to: 0
 32804  0061B2  D000               	goto	l12668
 32805  0061B4                     l12668:
 32806                           
 32807                           ;EEPROM.c: 165: }
 32808                           ;EEPROM.c: 166: }
 32809                           ;EEPROM.c: 167: if(burn & 0x00000002)
 32810  0061B4  0101               	movlb	1	; () banked
 32811  0061B6  A388               	btfss	SetEEPROM@burn& (0+255),1,b
 32812  0061B8  D013               	goto	l12674
 32813                           
 32814                           ; BSR set to: 1
 32815                           ;EEPROM.c: 168: {
 32816                           ;EEPROM.c: 169: if(!SetMemoryLong(Temp.SWNECcode,1))
 32817  0061BA  C101  F09D         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 32818  0061BE  C102  F09E         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 32819  0061C2  C103  F09F         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 32820  0061C6  C104  F0A0         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 32821  0061CA  0E01               	movlw	1
 32822  0061CC  0100               	movlb	0	; () banked
 32823  0061CE  6FA1               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 32824  0061D0  ECA0  F03C         	call	_SetMemoryLong	;wreg free
 32825  0061D4  0900               	iorlw	0
 32826  0061D6  A4D8               	btfss	status,2,c
 32827  0061D8  D003               	goto	l12674
 32828                           
 32829                           ;EEPROM.c: 170: {
 32830                           ;EEPROM.c: 172: fail |= 0x00000002;
 32831  0061DA  0100               	movlb	0	; () banked
 32832  0061DC  83B0               	bsf	SetEEPROM@fail& (0+255),1,b
 32833                           
 32834                           ; BSR set to: 0
 32835  0061DE  D000               	goto	l12674
 32836  0061E0                     l12674:
 32837                           
 32838                           ;EEPROM.c: 173: }
 32839                           ;EEPROM.c: 174: }
 32840                           ;EEPROM.c: 175: if(burn & 0x00000004)
 32841  0061E0  0101               	movlb	1	; () banked
 32842  0061E2  A588               	btfss	SetEEPROM@burn& (0+255),2,b
 32843  0061E4  D047               	goto	l942
 32844                           
 32845                           ; BSR set to: 1
 32846                           ;EEPROM.c: 176: {
 32847                           ;EEPROM.c: 177: for(i=0; i< 20; i++)
 32848  0061E6  0E00               	movlw	0
 32849  0061E8  0100               	movlb	0	; () banked
 32850  0061EA  6FB7               	movwf	SetEEPROM@i& (0+255),b
 32851  0061EC                     l12678:
 32852                           
 32853                           ; BSR set to: 0
 32854  0061EC  0E13               	movlw	19
 32855  0061EE  0100               	movlb	0	; () banked
 32856  0061F0  65B7               	cpfsgt	SetEEPROM@i& (0+255),b
 32857  0061F2  D001               	goto	l12682
 32858                           
 32859                           ; BSR set to: 0
 32860  0061F4  D03F               	goto	l942
 32861  0061F6                     l12682:
 32862                           
 32863                           ; BSR set to: 0
 32864                           ;EEPROM.c: 178: {
 32865                           ;EEPROM.c: 179: for(j=0; j < 2; j++)
 32866  0061F6  0E00               	movlw	0
 32867  0061F8  0100               	movlb	0	; () banked
 32868  0061FA  6FB8               	movwf	SetEEPROM@j& (0+255),b
 32869  0061FC                     l12684:
 32870                           
 32871                           ; BSR set to: 0
 32872  0061FC  0E01               	movlw	1
 32873  0061FE  0100               	movlb	0	; () banked
 32874  006200  65B8               	cpfsgt	SetEEPROM@j& (0+255),b
 32875  006202  D001               	goto	l12688
 32876                           
 32877                           ; BSR set to: 0
 32878  006204  D034               	goto	l12696
 32879  006206                     l12688:
 32880                           
 32881                           ; BSR set to: 0
 32882                           ;EEPROM.c: 180: {
 32883                           ;EEPROM.c: 181: temp = Temp.RemoteButtonNEC[i][j];
 32884  006206  0100               	movlb	0	; () banked
 32885  006208  51B7               	movf	SetEEPROM@i& (0+255),w,b
 32886  00620A  0D02               	mullw	2
 32887  00620C  0E00               	movlw	low SetEEPROM@Temp
 32888  00620E  0100               	movlb	0	; () banked
 32889  006210  6FAE               	movwf	??_SetEEPROM& (0+255),b
 32890  006212  0E01               	movlw	high SetEEPROM@Temp
 32891  006214  0100               	movlb	0	; () banked
 32892  006216  6FAF               	movwf	(??_SetEEPROM+1)& (0+255),b
 32893  006218  50F3               	movf	prodl,w,c
 32894  00621A  0100               	movlb	0	; () banked
 32895  00621C  27AE               	addwf	??_SetEEPROM& (0+255),f,b
 32896  00621E  50F4               	movf	prodh,w,c
 32897  006220  0100               	movlb	0	; () banked
 32898  006222  23AF               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 32899  006224  0100               	movlb	0	; () banked
 32900  006226  51B8               	movf	SetEEPROM@j& (0+255),w,b
 32901  006228  0D01               	mullw	1
 32902  00622A  50F3               	movf	prodl,w,c
 32903  00622C  0100               	movlb	0	; () banked
 32904  00622E  27AE               	addwf	??_SetEEPROM& (0+255),f,b
 32905  006230  50F4               	movf	prodh,w,c
 32906  006232  0100               	movlb	0	; () banked
 32907  006234  23AF               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 32908  006236  0E05               	movlw	5
 32909  006238  0100               	movlb	0	; () banked
 32910  00623A  25AE               	addwf	??_SetEEPROM& (0+255),w,b
 32911  00623C  6ED9               	movwf	fsr2l,c
 32912  00623E  0E00               	movlw	0
 32913  006240  0100               	movlb	0	; () banked
 32914  006242  21AF               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 32915  006244  6EDA               	movwf	fsr2h,c
 32916  006246  50DF               	movf	indf2,w,c
 32917  006248  0100               	movlb	0	; () banked
 32918  00624A  6FB4               	movwf	SetEEPROM@temp& (0+255),b
 32919                           
 32920                           ; BSR set to: 0
 32921                           ;EEPROM.c: 182: if(!SetMemoryChar(temp,Arrayspot++))
 32922  00624C  0100               	movlb	0	; () banked
 32923  00624E  2BB5               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 32924  006250  05B5               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 32925  006252  0100               	movlb	0	; () banked
 32926  006254  6F82               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 32927  006256  0100               	movlb	0	; () banked
 32928  006258  51B4               	movf	SetEEPROM@temp& (0+255),w,b
 32929  00625A  ECF0  F047         	call	_SetMemoryChar
 32930  00625E  0900               	iorlw	0
 32931  006260  A4D8               	btfss	status,2,c
 32932  006262  D002               	goto	l947
 32933                           
 32934                           ;EEPROM.c: 183: {
 32935                           ;EEPROM.c: 185: fail |= 0x00000004;
 32936  006264  0100               	movlb	0	; () banked
 32937  006266  85B0               	bsf	SetEEPROM@fail& (0+255),2,b
 32938  006268                     l947:
 32939  006268  0100               	movlb	0	; () banked
 32940  00626A  2BB8               	incf	SetEEPROM@j& (0+255),f,b
 32941  00626C  D7C7               	goto	l12684
 32942  00626E                     l12696:
 32943                           
 32944                           ; BSR set to: 0
 32945  00626E  0100               	movlb	0	; () banked
 32946  006270  2BB7               	incf	SetEEPROM@i& (0+255),f,b
 32947  006272  D7BC               	goto	l12678
 32948  006274                     l942:
 32949                           
 32950                           ;EEPROM.c: 186: }
 32951                           ;EEPROM.c: 187: }
 32952                           ;EEPROM.c: 188: }
 32953                           ;EEPROM.c: 189: }
 32954                           ;EEPROM.c: 190: if(burn & 0x00000008)
 32955  006274  0101               	movlb	1	; () banked
 32956  006276  A788               	btfss	SetEEPROM@burn& (0+255),3,b
 32957  006278  D00D               	goto	l12704
 32958                           
 32959                           ; BSR set to: 1
 32960                           ;EEPROM.c: 191: {
 32961                           ;EEPROM.c: 192: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*20 + 5)))
 32962  00627A  0E2D               	movlw	45
 32963  00627C  0100               	movlb	0	; () banked
 32964  00627E  6F82               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 32965  006280  0101               	movlb	1	; () banked
 32966  006282  512D               	movf	(SetEEPROM@Temp+45)& (0+255),w,b
 32967  006284  ECF0  F047         	call	_SetMemoryChar
 32968  006288  0900               	iorlw	0
 32969  00628A  A4D8               	btfss	status,2,c
 32970  00628C  D003               	goto	l12704
 32971                           
 32972                           ;EEPROM.c: 193: {
 32973                           ;EEPROM.c: 195: fail |= 0x00000008;
 32974  00628E  0100               	movlb	0	; () banked
 32975  006290  87B0               	bsf	SetEEPROM@fail& (0+255),3,b
 32976                           
 32977                           ; BSR set to: 0
 32978  006292  D000               	goto	l12704
 32979  006294                     l12704:
 32980                           
 32981                           ;EEPROM.c: 196: }
 32982                           ;EEPROM.c: 197: }
 32983                           ;EEPROM.c: 198: if(burn & 0x00000010)
 32984  006294  0101               	movlb	1	; () banked
 32985  006296  A988               	btfss	SetEEPROM@burn& (0+255),4,b
 32986  006298  D05E               	goto	l950
 32987                           
 32988                           ; BSR set to: 1
 32989                           ;EEPROM.c: 199: {
 32990                           ;EEPROM.c: 200: Arrayspot=(2*20 + 7);
 32991  00629A  0E2F               	movlw	47
 32992  00629C  0100               	movlb	0	; () banked
 32993  00629E  6FB5               	movwf	SetEEPROM@Arrayspot& (0+255),b
 32994                           
 32995                           ;EEPROM.c: 201: for(i=0; i< 15; i++)
 32996  0062A0  0E00               	movlw	0
 32997  0062A2  0100               	movlb	0	; () banked
 32998  0062A4  6FB7               	movwf	SetEEPROM@i& (0+255),b
 32999  0062A6                     l12708:
 33000                           
 33001                           ; BSR set to: 0
 33002  0062A6  0E0E               	movlw	14
 33003  0062A8  0100               	movlb	0	; () banked
 33004  0062AA  65B7               	cpfsgt	SetEEPROM@i& (0+255),b
 33005  0062AC  D001               	goto	l12712
 33006                           
 33007                           ; BSR set to: 0
 33008  0062AE  D053               	goto	l950
 33009  0062B0                     l12712:
 33010                           
 33011                           ; BSR set to: 0
 33012                           ;EEPROM.c: 202: {
 33013                           ;EEPROM.c: 203: for(j=0; j < 3; j++)
 33014  0062B0  0E00               	movlw	0
 33015  0062B2  0100               	movlb	0	; () banked
 33016  0062B4  6FB8               	movwf	SetEEPROM@j& (0+255),b
 33017  0062B6                     l12714:
 33018                           
 33019                           ; BSR set to: 0
 33020  0062B6  0E02               	movlw	2
 33021  0062B8  0100               	movlb	0	; () banked
 33022  0062BA  65B8               	cpfsgt	SetEEPROM@j& (0+255),b
 33023  0062BC  D001               	goto	l12718
 33024                           
 33025                           ; BSR set to: 0
 33026  0062BE  D048               	goto	l12736
 33027  0062C0                     l12718:
 33028                           
 33029                           ; BSR set to: 0
 33030                           ;EEPROM.c: 204: {
 33031                           ;EEPROM.c: 205: for(k=0; k < 2; k++)
 33032  0062C0  0E00               	movlw	0
 33033  0062C2  0100               	movlb	0	; () banked
 33034  0062C4  6FB6               	movwf	SetEEPROM@k& (0+255),b
 33035  0062C6                     l12720:
 33036                           
 33037                           ; BSR set to: 0
 33038  0062C6  0E01               	movlw	1
 33039  0062C8  0100               	movlb	0	; () banked
 33040  0062CA  65B6               	cpfsgt	SetEEPROM@k& (0+255),b
 33041  0062CC  D001               	goto	l12724
 33042                           
 33043                           ; BSR set to: 0
 33044  0062CE  D03D               	goto	l12732
 33045  0062D0                     l12724:
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;EEPROM.c: 206: {
 33049                           ;EEPROM.c: 207: temp = Temp.RemoteButtonRF[i][j][k];
 33050  0062D0  0100               	movlb	0	; () banked
 33051  0062D2  51B7               	movf	SetEEPROM@i& (0+255),w,b
 33052  0062D4  0D06               	mullw	6
 33053  0062D6  0E00               	movlw	low SetEEPROM@Temp
 33054  0062D8  0100               	movlb	0	; () banked
 33055  0062DA  6FAE               	movwf	??_SetEEPROM& (0+255),b
 33056  0062DC  0E01               	movlw	high SetEEPROM@Temp
 33057  0062DE  0100               	movlb	0	; () banked
 33058  0062E0  6FAF               	movwf	(??_SetEEPROM+1)& (0+255),b
 33059  0062E2  50F3               	movf	prodl,w,c
 33060  0062E4  0100               	movlb	0	; () banked
 33061  0062E6  27AE               	addwf	??_SetEEPROM& (0+255),f,b
 33062  0062E8  50F4               	movf	prodh,w,c
 33063  0062EA  0100               	movlb	0	; () banked
 33064  0062EC  23AF               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33065  0062EE  0100               	movlb	0	; () banked
 33066  0062F0  51B8               	movf	SetEEPROM@j& (0+255),w,b
 33067  0062F2  0D02               	mullw	2
 33068  0062F4  50F3               	movf	prodl,w,c
 33069  0062F6  0100               	movlb	0	; () banked
 33070  0062F8  27AE               	addwf	??_SetEEPROM& (0+255),f,b
 33071  0062FA  50F4               	movf	prodh,w,c
 33072  0062FC  0100               	movlb	0	; () banked
 33073  0062FE  23AF               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33074  006300  0100               	movlb	0	; () banked
 33075  006302  51B6               	movf	SetEEPROM@k& (0+255),w,b
 33076  006304  0D01               	mullw	1
 33077  006306  50F3               	movf	prodl,w,c
 33078  006308  0100               	movlb	0	; () banked
 33079  00630A  27AE               	addwf	??_SetEEPROM& (0+255),f,b
 33080  00630C  50F4               	movf	prodh,w,c
 33081  00630E  0100               	movlb	0	; () banked
 33082  006310  23AF               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33083  006312  0E2E               	movlw	46
 33084  006314  0100               	movlb	0	; () banked
 33085  006316  25AE               	addwf	??_SetEEPROM& (0+255),w,b
 33086  006318  6ED9               	movwf	fsr2l,c
 33087  00631A  0E00               	movlw	0
 33088  00631C  0100               	movlb	0	; () banked
 33089  00631E  21AF               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33090  006320  6EDA               	movwf	fsr2h,c
 33091  006322  50DF               	movf	indf2,w,c
 33092  006324  0100               	movlb	0	; () banked
 33093  006326  6FB4               	movwf	SetEEPROM@temp& (0+255),b
 33094                           
 33095                           ; BSR set to: 0
 33096                           ;EEPROM.c: 208: if(!SetMemoryChar(temp,Arrayspot++))
 33097  006328  0100               	movlb	0	; () banked
 33098  00632A  2BB5               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33099  00632C  05B5               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33100  00632E  0100               	movlb	0	; () banked
 33101  006330  6F82               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33102  006332  0100               	movlb	0	; () banked
 33103  006334  51B4               	movf	SetEEPROM@temp& (0+255),w,b
 33104  006336  ECF0  F047         	call	_SetMemoryChar
 33105  00633A  0900               	iorlw	0
 33106  00633C  A4D8               	btfss	status,2,c
 33107  00633E  D002               	goto	l957
 33108                           
 33109                           ;EEPROM.c: 209: {
 33110                           ;EEPROM.c: 211: fail |= 0x00000010;
 33111  006340  0100               	movlb	0	; () banked
 33112  006342  89B0               	bsf	SetEEPROM@fail& (0+255),4,b
 33113  006344                     l957:
 33114  006344  0100               	movlb	0	; () banked
 33115  006346  2BB6               	incf	SetEEPROM@k& (0+255),f,b
 33116  006348  D7BE               	goto	l12720
 33117  00634A                     l12732:
 33118                           
 33119                           ; BSR set to: 0
 33120  00634A  0100               	movlb	0	; () banked
 33121  00634C  2BB8               	incf	SetEEPROM@j& (0+255),f,b
 33122  00634E  D7B3               	goto	l12714
 33123  006350                     l12736:
 33124                           
 33125                           ; BSR set to: 0
 33126  006350  0100               	movlb	0	; () banked
 33127  006352  2BB7               	incf	SetEEPROM@i& (0+255),f,b
 33128  006354  D7A8               	goto	l12708
 33129  006356                     l950:
 33130                           
 33131                           ;EEPROM.c: 212: }
 33132                           ;EEPROM.c: 213: }
 33133                           ;EEPROM.c: 214: }
 33134                           ;EEPROM.c: 215: }
 33135                           ;EEPROM.c: 216: }
 33136                           ;EEPROM.c: 217: return fail;
 33137  006356  C0B0  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 33138  00635A  C0B1  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 33139  00635E  C0B2  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 33140  006362  C0B3  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 33141  006366  0012               	return		;funcret
 33142  006368                     __end_of_SetEEPROM:
 33143                           	opt stack 0
 33144                           tblptru	equ	0xFF8
 33145                           tblptrh	equ	0xFF7
 33146                           tblptrl	equ	0xFF6
 33147                           tablat	equ	0xFF5
 33148                           prodh	equ	0xFF4
 33149                           prodl	equ	0xFF3
 33150                           intcon	equ	0xFF2
 33151                           intcon2	equ	0xFF1
 33152                           indf0	equ	0xFEF
 33153                           postinc0	equ	0xFEE
 33154                           plusw0	equ	0xFEB
 33155                           fsr0h	equ	0xFEA
 33156                           fsr0l	equ	0xFE9
 33157                           wreg	equ	0xFE8
 33158                           indf1	equ	0xFE7
 33159                           postdec1	equ	0xFE5
 33160                           fsr1h	equ	0xFE2
 33161                           fsr1l	equ	0xFE1
 33162                           indf2	equ	0xFDF
 33163                           postinc2	equ	0xFDE
 33164                           postdec2	equ	0xFDD
 33165                           plusw2	equ	0xFDB
 33166                           fsr2h	equ	0xFDA
 33167                           fsr2l	equ	0xFD9
 33168                           status	equ	0xFD8
 33169                           
 33170 ;; *************** function _SetMemoryLong *****************
 33171 ;; Defined at:
 33172 ;;		line 346 in file "EEPROM.c"
 33173 ;; Parameters:    Size  Location     Type
 33174 ;;  Data            4   61[BANK0 ] unsigned long 
 33175 ;;  AddressFirst    1   65[BANK0 ] unsigned char 
 33176 ;; Auto vars:     Size  Location     Type
 33177 ;;  Test            4   70[BANK0 ] unsigned long 
 33178 ;;  L               1   77[BANK0 ] unsigned char 
 33179 ;;  ML              1   76[BANK0 ] unsigned char 
 33180 ;;  MH              1   75[BANK0 ] unsigned char 
 33181 ;;  H               1   74[BANK0 ] unsigned char 
 33182 ;; Return value:  Size  Location     Type
 33183 ;;                  1    wreg      unsigned char 
 33184 ;; Registers used:
 33185 ;;		wreg, status,2, status,0, cstack
 33186 ;; Tracked objects:
 33187 ;;		On entry : 0/0
 33188 ;;		On exit  : 0/0
 33189 ;;		Unchanged: 0/0
 33190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33191 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33192 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33194 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33195 ;;Total ram usage:       17 bytes
 33196 ;; Hardware stack levels used:    1
 33197 ;; Hardware stack levels required when called:    8
 33198 ;; This function calls:
 33199 ;;		_GetMemoryLong
 33200 ;;		_WriteEEPROM_1Byte
 33201 ;; This function is called by:
 33202 ;;		_SetEEPROM
 33203 ;; This function uses a non-reentrant model
 33204 ;;
 33205                           
 33206                           	psect	text89
 33207  007940                     __ptext89:
 33208                           	opt stack 0
 33209  007940                     _SetMemoryLong:
 33210                           	opt stack 19
 33211                           
 33212                           ;EEPROM.c: 348: unsigned char H;
 33213                           ;EEPROM.c: 349: unsigned char MH;
 33214                           ;EEPROM.c: 350: unsigned char ML;
 33215                           ;EEPROM.c: 351: unsigned char L;
 33216                           ;EEPROM.c: 352: unsigned long Test;
 33217                           ;EEPROM.c: 354: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 33218                           
 33219                           ;incstack = 0
 33220  007940  0E00               	movlw	0
 33221  007942  0100               	movlb	0	; () banked
 33222  007944  159D               	andwf	SetMemoryLong@Data& (0+255),w,b
 33223  007946  0100               	movlb	0	; () banked
 33224  007948  6FA2               	movwf	??_SetMemoryLong& (0+255),b
 33225  00794A  0E00               	movlw	0
 33226  00794C  0100               	movlb	0	; () banked
 33227  00794E  159E               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 33228  007950  0100               	movlb	0	; () banked
 33229  007952  6FA3               	movwf	(??_SetMemoryLong+1)& (0+255),b
 33230  007954  0E00               	movlw	0
 33231  007956  0100               	movlb	0	; () banked
 33232  007958  159F               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 33233  00795A  0100               	movlb	0	; () banked
 33234  00795C  6FA4               	movwf	(??_SetMemoryLong+2)& (0+255),b
 33235  00795E  0EFF               	movlw	255
 33236  007960  0100               	movlb	0	; () banked
 33237  007962  15A0               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 33238  007964  0100               	movlb	0	; () banked
 33239  007966  6FA5               	movwf	(??_SetMemoryLong+3)& (0+255),b
 33240  007968  0E19               	movlw	25
 33241  00796A  D006               	goto	u14420
 33242  00796C                     u14425:
 33243  00796C  0100               	movlb	0	; () banked
 33244  00796E  90D8               	bcf	status,0,c
 33245  007970  33A5               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 33246  007972  33A4               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 33247  007974  33A3               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 33248  007976  33A2               	rrcf	??_SetMemoryLong& (0+255),f,b
 33249  007978                     u14420:
 33250  007978  2EE8               	decfsz	wreg,f,c
 33251  00797A  D7F8               	goto	u14425
 33252  00797C  0100               	movlb	0	; () banked
 33253  00797E  51A2               	movf	??_SetMemoryLong& (0+255),w,b
 33254  007980  0100               	movlb	0	; () banked
 33255  007982  6FAA               	movwf	SetMemoryLong@H& (0+255),b
 33256                           
 33257                           ; BSR set to: 0
 33258                           ;EEPROM.c: 355: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 33259  007984  C09F  F0AB         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 33260                           
 33261                           ; BSR set to: 0
 33262                           ;EEPROM.c: 356: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 33263  007988  C09E  F0AC         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 33264                           
 33265                           ; BSR set to: 0
 33266                           ;EEPROM.c: 357: L = (unsigned char) (Data & 0X000000FF);
 33267  00798C  C09D  F0AD         	movff	SetMemoryLong@Data,SetMemoryLong@L
 33268                           
 33269                           ; BSR set to: 0
 33270                           ;EEPROM.c: 360: WriteEEPROM_1Byte(AddressFirst, H);
 33271  007990  C0A1  F079         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 33272  007994  0100               	movlb	0	; () banked
 33273  007996  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33274  007998  C0AA  F07B         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 33275  00799C  EC74  F047         	call	_WriteEEPROM_1Byte	;wreg free
 33276                           
 33277                           ;EEPROM.c: 361: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 33278  0079A0  0E01               	movlw	1
 33279  0079A2  0100               	movlb	0	; () banked
 33280  0079A4  25A1               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33281  0079A6  0100               	movlb	0	; () banked
 33282  0079A8  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33283  0079AA  0100               	movlb	0	; () banked
 33284  0079AC  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33285  0079AE  0E00               	movlw	0
 33286  0079B0  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33287  0079B2  C0AB  F07B         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 33288  0079B6  EC74  F047         	call	_WriteEEPROM_1Byte	;wreg free
 33289                           
 33290                           ;EEPROM.c: 362: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 33291  0079BA  0E02               	movlw	2
 33292  0079BC  0100               	movlb	0	; () banked
 33293  0079BE  25A1               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33294  0079C0  0100               	movlb	0	; () banked
 33295  0079C2  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33296  0079C4  0100               	movlb	0	; () banked
 33297  0079C6  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33298  0079C8  0E00               	movlw	0
 33299  0079CA  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33300  0079CC  C0AC  F07B         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 33301  0079D0  EC74  F047         	call	_WriteEEPROM_1Byte	;wreg free
 33302                           
 33303                           ;EEPROM.c: 363: WriteEEPROM_1Byte((AddressFirst + 3), L);
 33304  0079D4  0E03               	movlw	3
 33305  0079D6  0100               	movlb	0	; () banked
 33306  0079D8  25A1               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33307  0079DA  0100               	movlb	0	; () banked
 33308  0079DC  6F79               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33309  0079DE  0100               	movlb	0	; () banked
 33310  0079E0  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33311  0079E2  0E00               	movlw	0
 33312  0079E4  237A               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33313  0079E6  C0AD  F07B         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 33314  0079EA  EC74  F047         	call	_WriteEEPROM_1Byte	;wreg free
 33315                           
 33316                           ;EEPROM.c: 366: Test = GetMemoryLong(AddressFirst);
 33317  0079EE  0100               	movlb	0	; () banked
 33318  0079F0  51A1               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 33319  0079F2  ECD9  F035         	call	_GetMemoryLong
 33320  0079F6  C07C  F0A6         	movff	?_GetMemoryLong,SetMemoryLong@Test
 33321  0079FA  C07D  F0A7         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 33322  0079FE  C07E  F0A8         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 33323  007A02  C07F  F0A9         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 33324                           
 33325                           ;EEPROM.c: 368: if(Test == Data)
 33326  007A06  0100               	movlb	0	; () banked
 33327  007A08  519D               	movf	SetMemoryLong@Data& (0+255),w,b
 33328  007A0A  0100               	movlb	0	; () banked
 33329  007A0C  19A6               	xorwf	SetMemoryLong@Test& (0+255),w,b
 33330  007A0E  E112               	bnz	l12400
 33331  007A10  0100               	movlb	0	; () banked
 33332  007A12  519E               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 33333  007A14  0100               	movlb	0	; () banked
 33334  007A16  19A7               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 33335  007A18  E10D               	bnz	l12400
 33336  007A1A  0100               	movlb	0	; () banked
 33337  007A1C  519F               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 33338  007A1E  0100               	movlb	0	; () banked
 33339  007A20  19A8               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 33340  007A22  E108               	bnz	l12400
 33341  007A24  0100               	movlb	0	; () banked
 33342  007A26  51A0               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 33343  007A28  0100               	movlb	0	; () banked
 33344  007A2A  19A9               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 33345  007A2C  A4D8               	btfss	status,2,c
 33346  007A2E  D002               	goto	l12400
 33347                           
 33348                           ; BSR set to: 0
 33349                           ;EEPROM.c: 369: {
 33350                           ;EEPROM.c: 370: return 1;
 33351  007A30  0E01               	movlw	1
 33352                           
 33353                           ; BSR set to: 0
 33354  007A32  0012               	return	
 33355  007A34                     l12400:
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;EEPROM.c: 371: }
 33359                           ;EEPROM.c: 372: return 0;
 33360  007A34  0E00               	movlw	0
 33361  007A36  0012               	return	
 33362                           
 33363                           ; BSR set to: 0
 33364                           
 33365                           ; BSR set to: 0
 33366  007A38  0012               	return		;funcret
 33367  007A3A                     __end_of_SetMemoryLong:
 33368                           	opt stack 0
 33369                           tblptru	equ	0xFF8
 33370                           tblptrh	equ	0xFF7
 33371                           tblptrl	equ	0xFF6
 33372                           tablat	equ	0xFF5
 33373                           prodh	equ	0xFF4
 33374                           prodl	equ	0xFF3
 33375                           intcon	equ	0xFF2
 33376                           intcon2	equ	0xFF1
 33377                           indf0	equ	0xFEF
 33378                           postinc0	equ	0xFEE
 33379                           plusw0	equ	0xFEB
 33380                           fsr0h	equ	0xFEA
 33381                           fsr0l	equ	0xFE9
 33382                           wreg	equ	0xFE8
 33383                           indf1	equ	0xFE7
 33384                           postdec1	equ	0xFE5
 33385                           fsr1h	equ	0xFE2
 33386                           fsr1l	equ	0xFE1
 33387                           indf2	equ	0xFDF
 33388                           postinc2	equ	0xFDE
 33389                           postdec2	equ	0xFDD
 33390                           plusw2	equ	0xFDB
 33391                           fsr2h	equ	0xFDA
 33392                           fsr2l	equ	0xFD9
 33393                           status	equ	0xFD8
 33394                           
 33395 ;; *************** function _GetMemoryLong *****************
 33396 ;; Defined at:
 33397 ;;		line 323 in file "EEPROM.c"
 33398 ;; Parameters:    Size  Location     Type
 33399 ;;  AddressFirst    1    wreg     unsigned char 
 33400 ;; Auto vars:     Size  Location     Type
 33401 ;;  AddressFirst    1   60[BANK0 ] unsigned char 
 33402 ;;  temp            4   52[BANK0 ] unsigned long 
 33403 ;;  L               1   59[BANK0 ] unsigned char 
 33404 ;;  ML              1   58[BANK0 ] unsigned char 
 33405 ;;  MH              1   57[BANK0 ] unsigned char 
 33406 ;;  H               1   56[BANK0 ] unsigned char 
 33407 ;; Return value:  Size  Location     Type
 33408 ;;                  4   28[BANK0 ] unsigned long 
 33409 ;; Registers used:
 33410 ;;		wreg, status,2, status,0, cstack
 33411 ;; Tracked objects:
 33412 ;;		On entry : 0/0
 33413 ;;		On exit  : 0/0
 33414 ;;		Unchanged: 0/0
 33415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33416 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33417 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33418 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33419 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33420 ;;Total ram usage:       33 bytes
 33421 ;; Hardware stack levels used:    1
 33422 ;; Hardware stack levels required when called:    7
 33423 ;; This function calls:
 33424 ;;		_ReadEEPROM_1Byte
 33425 ;; This function is called by:
 33426 ;;		_GetEEPROM
 33427 ;;		_SetMemoryLong
 33428 ;; This function uses a non-reentrant model
 33429 ;;
 33430                           
 33431                           	psect	text90
 33432  006BB2                     __ptext90:
 33433                           	opt stack 0
 33434  006BB2                     _GetMemoryLong:
 33435                           	opt stack 19
 33436                           
 33437                           ; BSR set to: 0
 33438                           ;incstack = 0
 33439                           ;GetMemoryLong@AddressFirst stored from wreg
 33440  006BB2  0100               	movlb	0	; () banked
 33441  006BB4  6F9C               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 33442                           
 33443                           ; BSR set to: 0
 33444                           ;EEPROM.c: 325: unsigned char H;
 33445                           ;EEPROM.c: 326: unsigned char MH;
 33446                           ;EEPROM.c: 327: unsigned char ML;
 33447                           ;EEPROM.c: 328: unsigned char L;
 33448                           ;EEPROM.c: 329: unsigned long temp =0;
 33449  006BB6  0E00               	movlw	0
 33450  006BB8  0100               	movlb	0	; () banked
 33451  006BBA  6F94               	movwf	GetMemoryLong@temp& (0+255),b
 33452  006BBC  0E00               	movlw	0
 33453  006BBE  6F95               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33454  006BC0  0E00               	movlw	0
 33455  006BC2  6F96               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33456  006BC4  0E00               	movlw	0
 33457  006BC6  6F97               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33458                           
 33459                           ; BSR set to: 0
 33460                           ;EEPROM.c: 331: H = ReadEEPROM_1Byte(AddressFirst);
 33461  006BC8  C09C  F079         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 33462  006BCC  0100               	movlb	0	; () banked
 33463  006BCE  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33464  006BD0  ECD2  F047         	call	_ReadEEPROM_1Byte	;wreg free
 33465  006BD4  0100               	movlb	0	; () banked
 33466  006BD6  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33467  006BD8  0100               	movlb	0	; () banked
 33468  006BDA  6F98               	movwf	GetMemoryLong@H& (0+255),b
 33469                           
 33470                           ; BSR set to: 0
 33471                           ;EEPROM.c: 332: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 33472  006BDC  0E01               	movlw	1
 33473  006BDE  0100               	movlb	0	; () banked
 33474  006BE0  259C               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33475  006BE2  0100               	movlb	0	; () banked
 33476  006BE4  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33477  006BE6  0100               	movlb	0	; () banked
 33478  006BE8  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33479  006BEA  0E00               	movlw	0
 33480  006BEC  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33481  006BEE  ECD2  F047         	call	_ReadEEPROM_1Byte	;wreg free
 33482  006BF2  0100               	movlb	0	; () banked
 33483  006BF4  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33484  006BF6  0100               	movlb	0	; () banked
 33485  006BF8  6F99               	movwf	GetMemoryLong@MH& (0+255),b
 33486                           
 33487                           ; BSR set to: 0
 33488                           ;EEPROM.c: 333: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 33489  006BFA  0E02               	movlw	2
 33490  006BFC  0100               	movlb	0	; () banked
 33491  006BFE  259C               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33492  006C00  0100               	movlb	0	; () banked
 33493  006C02  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33494  006C04  0100               	movlb	0	; () banked
 33495  006C06  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33496  006C08  0E00               	movlw	0
 33497  006C0A  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33498  006C0C  ECD2  F047         	call	_ReadEEPROM_1Byte	;wreg free
 33499  006C10  0100               	movlb	0	; () banked
 33500  006C12  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33501  006C14  0100               	movlb	0	; () banked
 33502  006C16  6F9A               	movwf	GetMemoryLong@ML& (0+255),b
 33503                           
 33504                           ; BSR set to: 0
 33505                           ;EEPROM.c: 334: L = ReadEEPROM_1Byte(AddressFirst + 3);
 33506  006C18  0E03               	movlw	3
 33507  006C1A  0100               	movlb	0	; () banked
 33508  006C1C  259C               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33509  006C1E  0100               	movlb	0	; () banked
 33510  006C20  6F79               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33511  006C22  0100               	movlb	0	; () banked
 33512  006C24  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33513  006C26  0E00               	movlw	0
 33514  006C28  237A               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33515  006C2A  ECD2  F047         	call	_ReadEEPROM_1Byte	;wreg free
 33516  006C2E  0100               	movlb	0	; () banked
 33517  006C30  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33518  006C32  0100               	movlb	0	; () banked
 33519  006C34  6F9B               	movwf	GetMemoryLong@L& (0+255),b
 33520                           
 33521                           ; BSR set to: 0
 33522                           ;EEPROM.c: 336: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 33523                           ;EEPROM.c: 337: + ((unsigned long)ML << 8) + (unsigned long)L);
 33524  006C36  C09A  F080         	movff	GetMemoryLong@ML,??_GetMemoryLong
 33525  006C3A  0100               	movlb	0	; () banked
 33526  006C3C  6B81               	clrf	(??_GetMemoryLong+1)& (0+255),b
 33527  006C3E  6B82               	clrf	(??_GetMemoryLong+2)& (0+255),b
 33528  006C40  6B83               	clrf	(??_GetMemoryLong+3)& (0+255),b
 33529  006C42  C082  F083         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 33530  006C46  C081  F082         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 33531  006C4A  C080  F081         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 33532  006C4E  0100               	movlb	0	; () banked
 33533  006C50  6B80               	clrf	??_GetMemoryLong& (0+255),b
 33534  006C52  C099  F084         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 33535  006C56  0100               	movlb	0	; () banked
 33536  006C58  6B85               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33537  006C5A  6B86               	clrf	(??_GetMemoryLong+6)& (0+255),b
 33538  006C5C  6B87               	clrf	(??_GetMemoryLong+7)& (0+255),b
 33539  006C5E  C085  F087         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 33540  006C62  C084  F086         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 33541  006C66  0100               	movlb	0	; () banked
 33542  006C68  6B85               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33543  006C6A  6B84               	clrf	(??_GetMemoryLong+4)& (0+255),b
 33544  006C6C  C098  F088         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 33545  006C70  0100               	movlb	0	; () banked
 33546  006C72  6B89               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33547  006C74  6B8A               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33548  006C76  6B8B               	clrf	(??_GetMemoryLong+11)& (0+255),b
 33549  006C78  C088  F08B         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 33550  006C7C  0100               	movlb	0	; () banked
 33551  006C7E  6B8A               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33552  006C80  6B89               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33553  006C82  6B88               	clrf	(??_GetMemoryLong+8)& (0+255),b
 33554  006C84  0100               	movlb	0	; () banked
 33555  006C86  5184               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 33556  006C88  0100               	movlb	0	; () banked
 33557  006C8A  2588               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 33558  006C8C  0100               	movlb	0	; () banked
 33559  006C8E  6F8C               	movwf	(??_GetMemoryLong+12)& (0+255),b
 33560  006C90  0100               	movlb	0	; () banked
 33561  006C92  5185               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 33562  006C94  0100               	movlb	0	; () banked
 33563  006C96  2189               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 33564  006C98  0100               	movlb	0	; () banked
 33565  006C9A  6F8D               	movwf	(??_GetMemoryLong+13)& (0+255),b
 33566  006C9C  0100               	movlb	0	; () banked
 33567  006C9E  5186               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 33568  006CA0  0100               	movlb	0	; () banked
 33569  006CA2  218A               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 33570  006CA4  0100               	movlb	0	; () banked
 33571  006CA6  6F8E               	movwf	(??_GetMemoryLong+14)& (0+255),b
 33572  006CA8  0100               	movlb	0	; () banked
 33573  006CAA  5187               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 33574  006CAC  0100               	movlb	0	; () banked
 33575  006CAE  218B               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 33576  006CB0  0100               	movlb	0	; () banked
 33577  006CB2  6F8F               	movwf	(??_GetMemoryLong+15)& (0+255),b
 33578  006CB4  0100               	movlb	0	; () banked
 33579  006CB6  5180               	movf	??_GetMemoryLong& (0+255),w,b
 33580  006CB8  0100               	movlb	0	; () banked
 33581  006CBA  258C               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 33582  006CBC  0100               	movlb	0	; () banked
 33583  006CBE  6F90               	movwf	(??_GetMemoryLong+16)& (0+255),b
 33584  006CC0  0100               	movlb	0	; () banked
 33585  006CC2  5181               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 33586  006CC4  0100               	movlb	0	; () banked
 33587  006CC6  218D               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 33588  006CC8  0100               	movlb	0	; () banked
 33589  006CCA  6F91               	movwf	(??_GetMemoryLong+17)& (0+255),b
 33590  006CCC  0100               	movlb	0	; () banked
 33591  006CCE  5182               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 33592  006CD0  0100               	movlb	0	; () banked
 33593  006CD2  218E               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 33594  006CD4  0100               	movlb	0	; () banked
 33595  006CD6  6F92               	movwf	(??_GetMemoryLong+18)& (0+255),b
 33596  006CD8  0100               	movlb	0	; () banked
 33597  006CDA  5183               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 33598  006CDC  0100               	movlb	0	; () banked
 33599  006CDE  218F               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 33600  006CE0  0100               	movlb	0	; () banked
 33601  006CE2  6F93               	movwf	(??_GetMemoryLong+19)& (0+255),b
 33602  006CE4  0100               	movlb	0	; () banked
 33603  006CE6  519B               	movf	GetMemoryLong@L& (0+255),w,b
 33604  006CE8  0100               	movlb	0	; () banked
 33605  006CEA  2590               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 33606  006CEC  0100               	movlb	0	; () banked
 33607  006CEE  6F94               	movwf	GetMemoryLong@temp& (0+255),b
 33608  006CF0  0E00               	movlw	0
 33609  006CF2  0100               	movlb	0	; () banked
 33610  006CF4  2191               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 33611  006CF6  0100               	movlb	0	; () banked
 33612  006CF8  6F95               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33613  006CFA  0E00               	movlw	0
 33614  006CFC  0100               	movlb	0	; () banked
 33615  006CFE  2192               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 33616  006D00  0100               	movlb	0	; () banked
 33617  006D02  6F96               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33618  006D04  0E00               	movlw	0
 33619  006D06  0100               	movlb	0	; () banked
 33620  006D08  2193               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 33621  006D0A  0100               	movlb	0	; () banked
 33622  006D0C  6F97               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33623                           
 33624                           ; BSR set to: 0
 33625                           ;EEPROM.c: 338: return temp;
 33626  006D0E  C094  F07C         	movff	GetMemoryLong@temp,?_GetMemoryLong
 33627  006D12  C095  F07D         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 33628  006D16  C096  F07E         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 33629  006D1A  C097  F07F         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 33630  006D1E  0012               	return	
 33631                           
 33632                           ; BSR set to: 0
 33633                           
 33634                           ; BSR set to: 0
 33635  006D20  0012               	return		;funcret
 33636  006D22                     __end_of_GetMemoryLong:
 33637                           	opt stack 0
 33638                           tblptru	equ	0xFF8
 33639                           tblptrh	equ	0xFF7
 33640                           tblptrl	equ	0xFF6
 33641                           tablat	equ	0xFF5
 33642                           prodh	equ	0xFF4
 33643                           prodl	equ	0xFF3
 33644                           intcon	equ	0xFF2
 33645                           intcon2	equ	0xFF1
 33646                           indf0	equ	0xFEF
 33647                           postinc0	equ	0xFEE
 33648                           plusw0	equ	0xFEB
 33649                           fsr0h	equ	0xFEA
 33650                           fsr0l	equ	0xFE9
 33651                           wreg	equ	0xFE8
 33652                           indf1	equ	0xFE7
 33653                           postdec1	equ	0xFE5
 33654                           fsr1h	equ	0xFE2
 33655                           fsr1l	equ	0xFE1
 33656                           indf2	equ	0xFDF
 33657                           postinc2	equ	0xFDE
 33658                           postdec2	equ	0xFDD
 33659                           plusw2	equ	0xFDB
 33660                           fsr2h	equ	0xFDA
 33661                           fsr2l	equ	0xFD9
 33662                           status	equ	0xFD8
 33663                           
 33664 ;; *************** function _SetMemoryChar *****************
 33665 ;; Defined at:
 33666 ;;		line 440 in file "EEPROM.c"
 33667 ;; Parameters:    Size  Location     Type
 33668 ;;  Data            1    wreg     unsigned char 
 33669 ;;  AddressFirst    1   34[BANK0 ] unsigned char 
 33670 ;; Auto vars:     Size  Location     Type
 33671 ;;  Data            1   36[BANK0 ] unsigned char 
 33672 ;;  Test            1   35[BANK0 ] unsigned char 
 33673 ;; Return value:  Size  Location     Type
 33674 ;;                  1    wreg      unsigned char 
 33675 ;; Registers used:
 33676 ;;		wreg, status,2, status,0, cstack
 33677 ;; Tracked objects:
 33678 ;;		On entry : 0/0
 33679 ;;		On exit  : 0/0
 33680 ;;		Unchanged: 0/0
 33681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33682 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33685 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33686 ;;Total ram usage:        3 bytes
 33687 ;; Hardware stack levels used:    1
 33688 ;; Hardware stack levels required when called:    8
 33689 ;; This function calls:
 33690 ;;		_GetMemoryChar
 33691 ;;		_WriteEEPROM_1Byte
 33692 ;; This function is called by:
 33693 ;;		_SetEEPROM
 33694 ;; This function uses a non-reentrant model
 33695 ;;
 33696                           
 33697                           	psect	text91
 33698  008FE0                     __ptext91:
 33699                           	opt stack 0
 33700  008FE0                     _SetMemoryChar:
 33701                           	opt stack 19
 33702                           
 33703                           ; BSR set to: 0
 33704                           ;incstack = 0
 33705                           ;SetMemoryChar@Data stored from wreg
 33706  008FE0  0100               	movlb	0	; () banked
 33707  008FE2  6F84               	movwf	SetMemoryChar@Data& (0+255),b
 33708                           
 33709                           ; BSR set to: 0
 33710                           ;EEPROM.c: 442: unsigned char Test;
 33711                           ;EEPROM.c: 444: WriteEEPROM_1Byte(AddressFirst, Data);
 33712  008FE4  C082  F079         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 33713  008FE8  0100               	movlb	0	; () banked
 33714  008FEA  6B7A               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33715  008FEC  C084  F07B         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 33716  008FF0  EC74  F047         	call	_WriteEEPROM_1Byte	;wreg free
 33717                           
 33718                           ;EEPROM.c: 447: Test = GetMemoryChar(AddressFirst);
 33719  008FF4  0100               	movlb	0	; () banked
 33720  008FF6  5182               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 33721  008FF8  ECB8  F048         	call	_GetMemoryChar
 33722  008FFC  0100               	movlb	0	; () banked
 33723  008FFE  517C               	movf	?_GetMemoryChar& (0+255),w,b
 33724  009000  0100               	movlb	0	; () banked
 33725  009002  6F83               	movwf	SetMemoryChar@Test& (0+255),b
 33726                           
 33727                           ; BSR set to: 0
 33728                           ;EEPROM.c: 449: if(Test == Data)
 33729  009004  0100               	movlb	0	; () banked
 33730  009006  5184               	movf	SetMemoryChar@Data& (0+255),w,b
 33731  009008  0100               	movlb	0	; () banked
 33732  00900A  1983               	xorwf	SetMemoryChar@Test& (0+255),w,b
 33733  00900C  A4D8               	btfss	status,2,c
 33734  00900E  D002               	goto	l12372
 33735                           
 33736                           ; BSR set to: 0
 33737                           ;EEPROM.c: 450: {
 33738                           ;EEPROM.c: 451: return 1;
 33739  009010  0E01               	movlw	1
 33740                           
 33741                           ; BSR set to: 0
 33742  009012  0012               	return	
 33743  009014                     l12372:
 33744                           
 33745                           ; BSR set to: 0
 33746                           ;EEPROM.c: 452: }
 33747                           ;EEPROM.c: 453: return 0;
 33748  009014  0E00               	movlw	0
 33749  009016  0012               	return	
 33750                           
 33751                           ; BSR set to: 0
 33752                           
 33753                           ; BSR set to: 0
 33754  009018  0012               	return		;funcret
 33755  00901A                     __end_of_SetMemoryChar:
 33756                           	opt stack 0
 33757                           tblptru	equ	0xFF8
 33758                           tblptrh	equ	0xFF7
 33759                           tblptrl	equ	0xFF6
 33760                           tablat	equ	0xFF5
 33761                           prodh	equ	0xFF4
 33762                           prodl	equ	0xFF3
 33763                           intcon	equ	0xFF2
 33764                           intcon2	equ	0xFF1
 33765                           indf0	equ	0xFEF
 33766                           postinc0	equ	0xFEE
 33767                           plusw0	equ	0xFEB
 33768                           fsr0h	equ	0xFEA
 33769                           fsr0l	equ	0xFE9
 33770                           wreg	equ	0xFE8
 33771                           indf1	equ	0xFE7
 33772                           postdec1	equ	0xFE5
 33773                           fsr1h	equ	0xFE2
 33774                           fsr1l	equ	0xFE1
 33775                           indf2	equ	0xFDF
 33776                           postinc2	equ	0xFDE
 33777                           postdec2	equ	0xFDD
 33778                           plusw2	equ	0xFDB
 33779                           fsr2h	equ	0xFDA
 33780                           fsr2l	equ	0xFD9
 33781                           status	equ	0xFD8
 33782                           
 33783 ;; *************** function _WriteEEPROM_1Byte *****************
 33784 ;; Defined at:
 33785 ;;		line 95 in file "EEPROM.c"
 33786 ;; Parameters:    Size  Location     Type
 33787 ;;  address         2   25[BANK0 ] unsigned int 
 33788 ;;  data            1   27[BANK0 ] unsigned char 
 33789 ;; Auto vars:     Size  Location     Type
 33790 ;;  GIEstatus       1   28[BANK0 ] unsigned char 
 33791 ;; Return value:  Size  Location     Type
 33792 ;;		None               void
 33793 ;; Registers used:
 33794 ;;		wreg, status,2, status,0, cstack
 33795 ;; Tracked objects:
 33796 ;;		On entry : 0/0
 33797 ;;		On exit  : 0/0
 33798 ;;		Unchanged: 0/0
 33799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33800 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33804 ;;Total ram usage:        4 bytes
 33805 ;; Hardware stack levels used:    1
 33806 ;; Hardware stack levels required when called:    7
 33807 ;; This function calls:
 33808 ;;		_EEPROM_UNLOCK
 33809 ;; This function is called by:
 33810 ;;		_SetMemoryLong
 33811 ;;		_SetMemoryChar
 33812 ;;		_SetMemoryInt
 33813 ;; This function uses a non-reentrant model
 33814 ;;
 33815                           
 33816                           	psect	text92
 33817  008EE8                     __ptext92:
 33818                           	opt stack 0
 33819  008EE8                     _WriteEEPROM_1Byte:
 33820                           	opt stack 19
 33821                           
 33822                           ;EEPROM.c: 97: unsigned char GIEstatus = INTCONbits.GIE;
 33823                           
 33824                           ; BSR set to: 0
 33825                           ;incstack = 0
 33826  008EE8  0E00               	movlw	0
 33827  008EEA  BEF2               	btfsc	intcon,7,c	;volatile
 33828  008EEC  0E01               	movlw	1
 33829  008EEE  0100               	movlb	0	; () banked
 33830  008EF0  6F7C               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 33831                           
 33832                           ; BSR set to: 0
 33833                           ;EEPROM.c: 98: EEADRH = (unsigned char)((address & 0x300) >> 8);
 33834  008EF2  0100               	movlb	0	; () banked
 33835  008EF4  517A               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 33836  008EF6  0B03               	andlw	3
 33837  008EF8  6EAA               	movwf	4010,c	;volatile
 33838                           
 33839                           ; BSR set to: 0
 33840                           ;EEPROM.c: 99: EEADR = (unsigned char)(address & 0xFF);
 33841  008EFA  C079  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 33842                           
 33843                           ; BSR set to: 0
 33844                           ;EEPROM.c: 100: EEDATA = data;
 33845  008EFE  C07B  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 33846                           
 33847                           ; BSR set to: 0
 33848                           ;EEPROM.c: 101: EECON1bits.EEPGD = 0;
 33849  008F02  9EA6               	bcf	4006,7,c	;volatile
 33850                           
 33851                           ; BSR set to: 0
 33852                           ;EEPROM.c: 102: EECON1bits.CFGS = 0;
 33853  008F04  9CA6               	bcf	4006,6,c	;volatile
 33854                           
 33855                           ; BSR set to: 0
 33856                           ;EEPROM.c: 103: EECON1bits.WREN =1;
 33857  008F06  84A6               	bsf	4006,2,c	;volatile
 33858                           
 33859                           ; BSR set to: 0
 33860                           ;EEPROM.c: 104: INTCONbits.GIE =0;
 33861  008F08  9EF2               	bcf	intcon,7,c	;volatile
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;EEPROM.c: 105: EEPROM_UNLOCK();
 33865  008F0A  EC31  F049         	call	_EEPROM_UNLOCK	;wreg free
 33866                           
 33867                           ;EEPROM.c: 106: EECON1bits.WR =1;
 33868  008F0E  82A6               	bsf	4006,1,c	;volatile
 33869                           
 33870                           ;EEPROM.c: 107: while(EECON1bits.WR);
 33871  008F10  D000               	goto	l918
 33872  008F12                     l918:
 33873  008F12  B2A6               	btfsc	4006,1,c	;volatile
 33874  008F14  D7FE               	goto	l918
 33875                           
 33876                           ;EEPROM.c: 108: EECON1bits.WREN =0;
 33877  008F16  94A6               	bcf	4006,2,c	;volatile
 33878                           
 33879                           ;EEPROM.c: 109: if(GIEstatus)
 33880  008F18  0100               	movlb	0	; () banked
 33881  008F1A  517C               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 33882  008F1C  0100               	movlb	0	; () banked
 33883  008F1E  B4D8               	btfsc	status,2,c
 33884  008F20  0012               	return	
 33885                           
 33886                           ; BSR set to: 0
 33887                           ;EEPROM.c: 110: {
 33888                           ;EEPROM.c: 111: INTCONbits.GIE =1;
 33889  008F22  8EF2               	bsf	intcon,7,c	;volatile
 33890  008F24  0012               	return	
 33891                           
 33892                           ; BSR set to: 0
 33893                           
 33894                           ; BSR set to: 0
 33895  008F26  0012               	return		;funcret
 33896  008F28                     __end_of_WriteEEPROM_1Byte:
 33897                           	opt stack 0
 33898                           tblptru	equ	0xFF8
 33899                           tblptrh	equ	0xFF7
 33900                           tblptrl	equ	0xFF6
 33901                           tablat	equ	0xFF5
 33902                           prodh	equ	0xFF4
 33903                           prodl	equ	0xFF3
 33904                           intcon	equ	0xFF2
 33905                           intcon2	equ	0xFF1
 33906                           indf0	equ	0xFEF
 33907                           postinc0	equ	0xFEE
 33908                           plusw0	equ	0xFEB
 33909                           fsr0h	equ	0xFEA
 33910                           fsr0l	equ	0xFE9
 33911                           wreg	equ	0xFE8
 33912                           indf1	equ	0xFE7
 33913                           postdec1	equ	0xFE5
 33914                           fsr1h	equ	0xFE2
 33915                           fsr1l	equ	0xFE1
 33916                           indf2	equ	0xFDF
 33917                           postinc2	equ	0xFDE
 33918                           postdec2	equ	0xFDD
 33919                           plusw2	equ	0xFDB
 33920                           fsr2h	equ	0xFDA
 33921                           fsr2l	equ	0xFD9
 33922                           status	equ	0xFD8
 33923                           
 33924 ;; *************** function _EEPROM_UNLOCK *****************
 33925 ;; Defined at:
 33926 ;;		line 80 in file "EEPROM.c"
 33927 ;; Parameters:    Size  Location     Type
 33928 ;;		None
 33929 ;; Auto vars:     Size  Location     Type
 33930 ;;		None
 33931 ;; Return value:  Size  Location     Type
 33932 ;;		None               void
 33933 ;; Registers used:
 33934 ;;		wreg, status,2
 33935 ;; Tracked objects:
 33936 ;;		On entry : 0/0
 33937 ;;		On exit  : 0/0
 33938 ;;		Unchanged: 0/0
 33939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33944 ;;Total ram usage:        0 bytes
 33945 ;; Hardware stack levels used:    1
 33946 ;; Hardware stack levels required when called:    6
 33947 ;; This function calls:
 33948 ;;		Nothing
 33949 ;; This function is called by:
 33950 ;;		_WriteEEPROM_1Byte
 33951 ;; This function uses a non-reentrant model
 33952 ;;
 33953                           
 33954                           	psect	text93
 33955  009262                     __ptext93:
 33956                           	opt stack 0
 33957  009262                     _EEPROM_UNLOCK:
 33958                           	opt stack 19
 33959                           
 33960                           ;EEPROM.c: 82: EECON2 = 0x55;
 33961                           
 33962                           ; BSR set to: 0
 33963                           ;incstack = 0
 33964  009262  0E55               	movlw	85
 33965  009264  6EA7               	movwf	4007,c	;volatile
 33966                           
 33967                           ;EEPROM.c: 83: EECON2 = 0xAA;
 33968  009266  0EAA               	movlw	170
 33969  009268  6EA7               	movwf	4007,c	;volatile
 33970                           
 33971                           ;EEPROM.c: 84: EECON1bits.WR =1;
 33972  00926A  82A6               	bsf	4006,1,c	;volatile
 33973                           
 33974                           ;EEPROM.c: 85: while(EECON1bits.WR);
 33975  00926C  D000               	goto	l912
 33976  00926E                     l912:
 33977  00926E  B2A6               	btfsc	4006,1,c	;volatile
 33978  009270  D7FE               	goto	l912
 33979                           
 33980                           ;EEPROM.c: 86: __nop();
 33981  009272  F000               	nop	
 33982                           
 33983                           ;EEPROM.c: 87: __nop();
 33984  009274  F000               	nop	
 33985  009276  0012               	return		;funcret
 33986  009278                     __end_of_EEPROM_UNLOCK:
 33987                           	opt stack 0
 33988                           tblptru	equ	0xFF8
 33989                           tblptrh	equ	0xFF7
 33990                           tblptrl	equ	0xFF6
 33991                           tablat	equ	0xFF5
 33992                           prodh	equ	0xFF4
 33993                           prodl	equ	0xFF3
 33994                           intcon	equ	0xFF2
 33995                           intcon2	equ	0xFF1
 33996                           indf0	equ	0xFEF
 33997                           postinc0	equ	0xFEE
 33998                           plusw0	equ	0xFEB
 33999                           fsr0h	equ	0xFEA
 34000                           fsr0l	equ	0xFE9
 34001                           wreg	equ	0xFE8
 34002                           indf1	equ	0xFE7
 34003                           postdec1	equ	0xFE5
 34004                           fsr1h	equ	0xFE2
 34005                           fsr1l	equ	0xFE1
 34006                           indf2	equ	0xFDF
 34007                           postinc2	equ	0xFDE
 34008                           postdec2	equ	0xFDD
 34009                           plusw2	equ	0xFDB
 34010                           fsr2h	equ	0xFDA
 34011                           fsr2l	equ	0xFD9
 34012                           status	equ	0xFD8
 34013                           
 34014 ;; *************** function _GetMemoryChar *****************
 34015 ;; Defined at:
 34016 ;;		line 426 in file "EEPROM.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;  AddressFirst    1    wreg     unsigned char 
 34019 ;; Auto vars:     Size  Location     Type
 34020 ;;  AddressFirst    1   32[BANK0 ] unsigned char 
 34021 ;;  H               1   33[BANK0 ] unsigned char 
 34022 ;; Return value:  Size  Location     Type
 34023 ;;                  4   28[BANK0 ] unsigned long 
 34024 ;; Registers used:
 34025 ;;		wreg, status,2, status,0, cstack
 34026 ;; Tracked objects:
 34027 ;;		On entry : 0/0
 34028 ;;		On exit  : 0/0
 34029 ;;		Unchanged: 0/0
 34030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34035 ;;Total ram usage:        6 bytes
 34036 ;; Hardware stack levels used:    1
 34037 ;; Hardware stack levels required when called:    7
 34038 ;; This function calls:
 34039 ;;		_ReadEEPROM_1Byte
 34040 ;; This function is called by:
 34041 ;;		_GetEEPROM
 34042 ;;		_SetMemoryChar
 34043 ;; This function uses a non-reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text94
 34047  009170                     __ptext94:
 34048                           	opt stack 0
 34049  009170                     _GetMemoryChar:
 34050                           	opt stack 19
 34051                           
 34052                           ;incstack = 0
 34053                           ;GetMemoryChar@AddressFirst stored from wreg
 34054  009170  0100               	movlb	0	; () banked
 34055  009172  6F80               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 34056                           
 34057                           ; BSR set to: 0
 34058                           ;EEPROM.c: 428: unsigned char H;
 34059                           ;EEPROM.c: 430: H = ReadEEPROM_1Byte(AddressFirst);
 34060  009174  C080  F079         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 34061  009178  0100               	movlb	0	; () banked
 34062  00917A  6B7A               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 34063  00917C  ECD2  F047         	call	_ReadEEPROM_1Byte	;wreg free
 34064  009180  0100               	movlb	0	; () banked
 34065  009182  5179               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 34066  009184  0100               	movlb	0	; () banked
 34067  009186  6F81               	movwf	GetMemoryChar@H& (0+255),b
 34068                           
 34069                           ; BSR set to: 0
 34070                           ;EEPROM.c: 432: return H;
 34071  009188  0100               	movlb	0	; () banked
 34072  00918A  5181               	movf	GetMemoryChar@H& (0+255),w,b
 34073  00918C  0100               	movlb	0	; () banked
 34074  00918E  6F7C               	movwf	?_GetMemoryChar& (0+255),b
 34075  009190  6B7D               	clrf	(?_GetMemoryChar+1)& (0+255),b
 34076  009192  6B7E               	clrf	(?_GetMemoryChar+2)& (0+255),b
 34077  009194  6B7F               	clrf	(?_GetMemoryChar+3)& (0+255),b
 34078  009196  0012               	return	
 34079                           
 34080                           ; BSR set to: 0
 34081                           
 34082                           ; BSR set to: 0
 34083  009198  0012               	return		;funcret
 34084  00919A                     __end_of_GetMemoryChar:
 34085                           	opt stack 0
 34086                           tblptru	equ	0xFF8
 34087                           tblptrh	equ	0xFF7
 34088                           tblptrl	equ	0xFF6
 34089                           tablat	equ	0xFF5
 34090                           prodh	equ	0xFF4
 34091                           prodl	equ	0xFF3
 34092                           intcon	equ	0xFF2
 34093                           intcon2	equ	0xFF1
 34094                           indf0	equ	0xFEF
 34095                           postinc0	equ	0xFEE
 34096                           plusw0	equ	0xFEB
 34097                           fsr0h	equ	0xFEA
 34098                           fsr0l	equ	0xFE9
 34099                           wreg	equ	0xFE8
 34100                           indf1	equ	0xFE7
 34101                           postdec1	equ	0xFE5
 34102                           fsr1h	equ	0xFE2
 34103                           fsr1l	equ	0xFE1
 34104                           indf2	equ	0xFDF
 34105                           postinc2	equ	0xFDE
 34106                           postdec2	equ	0xFDD
 34107                           plusw2	equ	0xFDB
 34108                           fsr2h	equ	0xFDA
 34109                           fsr2l	equ	0xFD9
 34110                           status	equ	0xFD8
 34111                           
 34112 ;; *************** function _ReadEEPROM_1Byte *****************
 34113 ;; Defined at:
 34114 ;;		line 55 in file "EEPROM.c"
 34115 ;; Parameters:    Size  Location     Type
 34116 ;;  address         2   25[BANK0 ] unsigned int 
 34117 ;; Auto vars:     Size  Location     Type
 34118 ;;  GIEstatus       1   27[BANK0 ] unsigned char 
 34119 ;; Return value:  Size  Location     Type
 34120 ;;                  2   25[BANK0 ] unsigned int 
 34121 ;; Registers used:
 34122 ;;		wreg, status,2, status,0
 34123 ;; Tracked objects:
 34124 ;;		On entry : 0/0
 34125 ;;		On exit  : 0/0
 34126 ;;		Unchanged: 0/0
 34127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34131 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34132 ;;Total ram usage:        3 bytes
 34133 ;; Hardware stack levels used:    1
 34134 ;; Hardware stack levels required when called:    6
 34135 ;; This function calls:
 34136 ;;		Nothing
 34137 ;; This function is called by:
 34138 ;;		_GetMemoryLong
 34139 ;;		_GetMemoryChar
 34140 ;;		_GetMemoryInt
 34141 ;; This function uses a non-reentrant model
 34142 ;;
 34143                           
 34144                           	psect	text95
 34145  008FA4                     __ptext95:
 34146                           	opt stack 0
 34147  008FA4                     _ReadEEPROM_1Byte:
 34148                           	opt stack 19
 34149                           
 34150                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 34151                           
 34152                           ; BSR set to: 0
 34153                           ;incstack = 0
 34154  008FA4  0E00               	movlw	0
 34155  008FA6  BEF2               	btfsc	intcon,7,c	;volatile
 34156  008FA8  0E01               	movlw	1
 34157  008FAA  0100               	movlb	0	; () banked
 34158  008FAC  6F7B               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 34159                           
 34160                           ; BSR set to: 0
 34161                           ;EEPROM.c: 58: EECON1bits.EEPGD = 0;
 34162  008FAE  9EA6               	bcf	4006,7,c	;volatile
 34163                           
 34164                           ; BSR set to: 0
 34165                           ;EEPROM.c: 59: EECON1bits.CFGS = 0;
 34166  008FB0  9CA6               	bcf	4006,6,c	;volatile
 34167                           
 34168                           ; BSR set to: 0
 34169                           ;EEPROM.c: 60: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34170  008FB2  0100               	movlb	0	; () banked
 34171  008FB4  517A               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 34172  008FB6  0B03               	andlw	3
 34173  008FB8  6EAA               	movwf	4010,c	;volatile
 34174                           
 34175                           ; BSR set to: 0
 34176                           ;EEPROM.c: 61: EEADR = (unsigned char)(address & 0xFF);
 34177  008FBA  C079  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 34178                           
 34179                           ; BSR set to: 0
 34180                           ;EEPROM.c: 62: INTCONbits.GIE =0;
 34181  008FBE  9EF2               	bcf	intcon,7,c	;volatile
 34182                           
 34183                           ; BSR set to: 0
 34184                           ;EEPROM.c: 63: EECON1bits.RD = 1;
 34185  008FC0  80A6               	bsf	4006,0,c	;volatile
 34186                           
 34187                           ;EEPROM.c: 64: while(EECON1bits.RD);
 34188  008FC2  D000               	goto	l905
 34189  008FC4                     l905:
 34190  008FC4  B0A6               	btfsc	4006,0,c	;volatile
 34191  008FC6  D7FE               	goto	l905
 34192                           
 34193                           ;EEPROM.c: 65: __nop();
 34194  008FC8  F000               	nop	
 34195                           
 34196                           ;EEPROM.c: 66: __nop();
 34197  008FCA  F000               	nop	
 34198                           
 34199                           ;EEPROM.c: 67: if(GIEstatus)
 34200  008FCC  0100               	movlb	0	; () banked
 34201  008FCE  517B               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 34202  008FD0  0100               	movlb	0	; () banked
 34203  008FD2  A4D8               	btfss	status,2,c
 34204                           
 34205                           ; BSR set to: 0
 34206                           ;EEPROM.c: 68: {
 34207                           ;EEPROM.c: 69: INTCONbits.GIE =1;
 34208  008FD4  8EF2               	bsf	intcon,7,c	;volatile
 34209                           
 34210                           ; BSR set to: 0
 34211                           ;EEPROM.c: 70: }
 34212                           ;EEPROM.c: 71: return (EEDATA);
 34213  008FD6  CFA8 F079          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 34214  008FDA  0100               	movlb	0	; () banked
 34215  008FDC  6B7A               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 34216                           
 34217                           ; BSR set to: 0
 34218  008FDE  0012               	return		;funcret
 34219  008FE0                     __end_of_ReadEEPROM_1Byte:
 34220                           	opt stack 0
 34221                           tblptru	equ	0xFF8
 34222                           tblptrh	equ	0xFF7
 34223                           tblptrl	equ	0xFF6
 34224                           tablat	equ	0xFF5
 34225                           prodh	equ	0xFF4
 34226                           prodl	equ	0xFF3
 34227                           intcon	equ	0xFF2
 34228                           intcon2	equ	0xFF1
 34229                           indf0	equ	0xFEF
 34230                           postinc0	equ	0xFEE
 34231                           plusw0	equ	0xFEB
 34232                           fsr0h	equ	0xFEA
 34233                           fsr0l	equ	0xFE9
 34234                           wreg	equ	0xFE8
 34235                           indf1	equ	0xFE7
 34236                           postdec1	equ	0xFE5
 34237                           fsr1h	equ	0xFE2
 34238                           fsr1l	equ	0xFE1
 34239                           indf2	equ	0xFDF
 34240                           postinc2	equ	0xFDE
 34241                           postdec2	equ	0xFDD
 34242                           plusw2	equ	0xFDB
 34243                           fsr2h	equ	0xFDA
 34244                           fsr2l	equ	0xFD9
 34245                           status	equ	0xFD8
 34246                           
 34247 ;; *************** function _InitADC *****************
 34248 ;; Defined at:
 34249 ;;		line 135 in file "ADC.c"
 34250 ;; Parameters:    Size  Location     Type
 34251 ;;		None
 34252 ;; Auto vars:     Size  Location     Type
 34253 ;;		None
 34254 ;; Return value:  Size  Location     Type
 34255 ;;		None               void
 34256 ;; Registers used:
 34257 ;;		wreg, status,2, cstack
 34258 ;; Tracked objects:
 34259 ;;		On entry : 0/0
 34260 ;;		On exit  : 0/0
 34261 ;;		Unchanged: 0/0
 34262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34267 ;;Total ram usage:        0 bytes
 34268 ;; Hardware stack levels used:    1
 34269 ;; Hardware stack levels required when called:    7
 34270 ;; This function calls:
 34271 ;;		_ResetADC
 34272 ;; This function is called by:
 34273 ;;		_Init_System
 34274 ;; This function uses a non-reentrant model
 34275 ;;
 34276                           
 34277                           	psect	text96
 34278  009278                     __ptext96:
 34279                           	opt stack 0
 34280  009278                     _InitADC:
 34281                           	opt stack 22
 34282                           
 34283                           ;ADC.c: 137: ResetADC();
 34284                           
 34285                           ; BSR set to: 0
 34286                           ;incstack = 0
 34287  009278  ECB1  F049         	call	_ResetADC	;wreg free
 34288                           
 34289                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 34290  00927C  8EC0               	bsf	4032,7,c	;volatile
 34291                           
 34292                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 34293  00927E  86C0               	bsf	4032,3,c	;volatile
 34294  009280  88C0               	bsf	4032,4,c	;volatile
 34295  009282  8AC0               	bsf	4032,5,c	;volatile
 34296                           
 34297                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 34298  009284  50C0               	movf	4032,w,c	;volatile
 34299  009286  0BF8               	andlw	-8
 34300  009288  0904               	iorlw	4
 34301  00928A  6EC0               	movwf	4032,c	;volatile
 34302  00928C  0012               	return		;funcret
 34303  00928E                     __end_of_InitADC:
 34304                           	opt stack 0
 34305                           tblptru	equ	0xFF8
 34306                           tblptrh	equ	0xFF7
 34307                           tblptrl	equ	0xFF6
 34308                           tablat	equ	0xFF5
 34309                           prodh	equ	0xFF4
 34310                           prodl	equ	0xFF3
 34311                           intcon	equ	0xFF2
 34312                           intcon2	equ	0xFF1
 34313                           indf0	equ	0xFEF
 34314                           postinc0	equ	0xFEE
 34315                           plusw0	equ	0xFEB
 34316                           fsr0h	equ	0xFEA
 34317                           fsr0l	equ	0xFE9
 34318                           wreg	equ	0xFE8
 34319                           indf1	equ	0xFE7
 34320                           postdec1	equ	0xFE5
 34321                           fsr1h	equ	0xFE2
 34322                           fsr1l	equ	0xFE1
 34323                           indf2	equ	0xFDF
 34324                           postinc2	equ	0xFDE
 34325                           postdec2	equ	0xFDD
 34326                           plusw2	equ	0xFDB
 34327                           fsr2h	equ	0xFDA
 34328                           fsr2l	equ	0xFD9
 34329                           status	equ	0xFD8
 34330                           
 34331 ;; *************** function _ResetADC *****************
 34332 ;; Defined at:
 34333 ;;		line 123 in file "ADC.c"
 34334 ;; Parameters:    Size  Location     Type
 34335 ;;		None
 34336 ;; Auto vars:     Size  Location     Type
 34337 ;;		None
 34338 ;; Return value:  Size  Location     Type
 34339 ;;		None               void
 34340 ;; Registers used:
 34341 ;;		wreg, status,2
 34342 ;; Tracked objects:
 34343 ;;		On entry : 0/0
 34344 ;;		On exit  : 0/0
 34345 ;;		Unchanged: 0/0
 34346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34351 ;;Total ram usage:        0 bytes
 34352 ;; Hardware stack levels used:    1
 34353 ;; Hardware stack levels required when called:    6
 34354 ;; This function calls:
 34355 ;;		Nothing
 34356 ;; This function is called by:
 34357 ;;		_InitADC
 34358 ;; This function uses a non-reentrant model
 34359 ;;
 34360                           
 34361                           	psect	text97
 34362  009362                     __ptext97:
 34363                           	opt stack 0
 34364  009362                     _ResetADC:
 34365                           	opt stack 22
 34366                           
 34367                           ;ADC.c: 125: ADCON0 =0;
 34368                           
 34369                           ;incstack = 0
 34370  009362  0E00               	movlw	0
 34371  009364  6EC2               	movwf	4034,c	;volatile
 34372                           
 34373                           ;ADC.c: 126: ADCON1 =0;
 34374  009366  0E00               	movlw	0
 34375  009368  6EC1               	movwf	4033,c	;volatile
 34376                           
 34377                           ;ADC.c: 127: ADCON2 =0;
 34378  00936A  0E00               	movlw	0
 34379  00936C  6EC0               	movwf	4032,c	;volatile
 34380  00936E  0012               	return		;funcret
 34381  009370                     __end_of_ResetADC:
 34382                           	opt stack 0
 34383                           tblptru	equ	0xFF8
 34384                           tblptrh	equ	0xFF7
 34385                           tblptrl	equ	0xFF6
 34386                           tablat	equ	0xFF5
 34387                           prodh	equ	0xFF4
 34388                           prodl	equ	0xFF3
 34389                           intcon	equ	0xFF2
 34390                           intcon2	equ	0xFF1
 34391                           indf0	equ	0xFEF
 34392                           postinc0	equ	0xFEE
 34393                           plusw0	equ	0xFEB
 34394                           fsr0h	equ	0xFEA
 34395                           fsr0l	equ	0xFE9
 34396                           wreg	equ	0xFE8
 34397                           indf1	equ	0xFE7
 34398                           postdec1	equ	0xFE5
 34399                           fsr1h	equ	0xFE2
 34400                           fsr1l	equ	0xFE1
 34401                           indf2	equ	0xFDF
 34402                           postinc2	equ	0xFDE
 34403                           postdec2	equ	0xFDD
 34404                           plusw2	equ	0xFDB
 34405                           fsr2h	equ	0xFDA
 34406                           fsr2l	equ	0xFD9
 34407                           status	equ	0xFD8
 34408                           
 34409 ;; *************** function _EEPROMinitialized *****************
 34410 ;; Defined at:
 34411 ;;		line 274 in file "EEPROM.c"
 34412 ;; Parameters:    Size  Location     Type
 34413 ;;		None
 34414 ;; Auto vars:     Size  Location     Type
 34415 ;;		None
 34416 ;; Return value:  Size  Location     Type
 34417 ;;                  1    wreg      unsigned char 
 34418 ;; Registers used:
 34419 ;;		wreg, status,2, status,0
 34420 ;; Tracked objects:
 34421 ;;		On entry : 0/0
 34422 ;;		On exit  : 0/0
 34423 ;;		Unchanged: 0/0
 34424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34429 ;;Total ram usage:        0 bytes
 34430 ;; Hardware stack levels used:    1
 34431 ;; Hardware stack levels required when called:    6
 34432 ;; This function calls:
 34433 ;;		Nothing
 34434 ;; This function is called by:
 34435 ;;		_Init_System
 34436 ;; This function uses a non-reentrant model
 34437 ;;
 34438                           
 34439                           	psect	text98
 34440  0092B8                     __ptext98:
 34441                           	opt stack 0
 34442  0092B8                     _EEPROMinitialized:
 34443                           	opt stack 23
 34444                           
 34445                           ;EEPROM.c: 276: if(Global.EEPROMinitFlag == 59)
 34446                           
 34447                           ;incstack = 0
 34448  0092B8  0E3B               	movlw	59
 34449  0092BA  0104               	movlb	4	; () banked
 34450  0092BC  192D               	xorwf	(_Global+45)& (0+255),w,b
 34451  0092BE  A4D8               	btfss	status,2,c
 34452  0092C0  D002               	goto	l14254
 34453                           
 34454                           ; BSR set to: 4
 34455                           ;EEPROM.c: 277: {
 34456                           ;EEPROM.c: 278: return 1;
 34457  0092C2  0E01               	movlw	1
 34458                           
 34459                           ; BSR set to: 4
 34460  0092C4  0012               	return	
 34461  0092C6                     l14254:
 34462                           
 34463                           ; BSR set to: 4
 34464                           ;EEPROM.c: 279: }
 34465                           ;EEPROM.c: 280: return 0;
 34466  0092C6  0E00               	movlw	0
 34467  0092C8  0012               	return	
 34468                           
 34469                           ; BSR set to: 4
 34470                           
 34471                           ; BSR set to: 4
 34472  0092CA  0012               	return		;funcret
 34473  0092CC                     __end_of_EEPROMinitialized:
 34474                           	opt stack 0
 34475                           tblptru	equ	0xFF8
 34476                           tblptrh	equ	0xFF7
 34477                           tblptrl	equ	0xFF6
 34478                           tablat	equ	0xFF5
 34479                           prodh	equ	0xFF4
 34480                           prodl	equ	0xFF3
 34481                           intcon	equ	0xFF2
 34482                           intcon2	equ	0xFF1
 34483                           indf0	equ	0xFEF
 34484                           postinc0	equ	0xFEE
 34485                           plusw0	equ	0xFEB
 34486                           fsr0h	equ	0xFEA
 34487                           fsr0l	equ	0xFE9
 34488                           wreg	equ	0xFE8
 34489                           indf1	equ	0xFE7
 34490                           postdec1	equ	0xFE5
 34491                           fsr1h	equ	0xFE2
 34492                           fsr1l	equ	0xFE1
 34493                           indf2	equ	0xFDF
 34494                           postinc2	equ	0xFDE
 34495                           postdec2	equ	0xFDD
 34496                           plusw2	equ	0xFDB
 34497                           fsr2h	equ	0xFDA
 34498                           fsr2l	equ	0xFD9
 34499                           status	equ	0xFD8
 34500                           
 34501 ;; *************** function _InitApp *****************
 34502 ;; Defined at:
 34503 ;;		line 62 in file "user.c"
 34504 ;; Parameters:    Size  Location     Type
 34505 ;;		None
 34506 ;; Auto vars:     Size  Location     Type
 34507 ;;		None
 34508 ;; Return value:  Size  Location     Type
 34509 ;;		None               void
 34510 ;; Registers used:
 34511 ;;		wreg, status,2, status,0
 34512 ;; Tracked objects:
 34513 ;;		On entry : 0/0
 34514 ;;		On exit  : 0/0
 34515 ;;		Unchanged: 0/0
 34516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34521 ;;Total ram usage:        0 bytes
 34522 ;; Hardware stack levels used:    1
 34523 ;; Hardware stack levels required when called:    6
 34524 ;; This function calls:
 34525 ;;		Nothing
 34526 ;; This function is called by:
 34527 ;;		_main
 34528 ;; This function uses a non-reentrant model
 34529 ;;
 34530                           
 34531                           	psect	text99
 34532  008E5E                     __ptext99:
 34533                           	opt stack 0
 34534  008E5E                     _InitApp:
 34535                           	opt stack 24
 34536                           
 34537                           ;user.c: 64: LATA = 0;
 34538                           
 34539                           ; BSR set to: 4
 34540                           ;incstack = 0
 34541  008E5E  0E00               	movlw	0
 34542  008E60  6E89               	movwf	3977,c	;volatile
 34543                           
 34544                           ;user.c: 65: LATB = 0;
 34545  008E62  0E00               	movlw	0
 34546  008E64  6E8A               	movwf	3978,c	;volatile
 34547                           
 34548                           ;user.c: 66: LATC = 0;
 34549  008E66  0E00               	movlw	0
 34550  008E68  6E8B               	movwf	3979,c	;volatile
 34551                           
 34552                           ;user.c: 67: LATA |= 0x04;
 34553  008E6A  8489               	bsf	3977,2,c	;volatile
 34554                           
 34555                           ;user.c: 69: TRISAbits.TRISA0 = 1;
 34556  008E6C  8092               	bsf	3986,0,c	;volatile
 34557                           
 34558                           ;user.c: 70: TRISAbits.TRISA1 = 1;
 34559  008E6E  8292               	bsf	3986,1,c	;volatile
 34560                           
 34561                           ;user.c: 71: TRISAbits.TRISA2 = 0;
 34562  008E70  9492               	bcf	3986,2,c	;volatile
 34563                           
 34564                           ;user.c: 72: TRISAbits.TRISA3 = 0;
 34565  008E72  9692               	bcf	3986,3,c	;volatile
 34566                           
 34567                           ;user.c: 73: TRISAbits.TRISA4 = 0;
 34568  008E74  9892               	bcf	3986,4,c	;volatile
 34569                           
 34570                           ;user.c: 74: TRISAbits.TRISA5 = 0;
 34571  008E76  9A92               	bcf	3986,5,c	;volatile
 34572                           
 34573                           ;user.c: 75: TRISCbits.TRISC0 = 1;
 34574  008E78  8094               	bsf	3988,0,c	;volatile
 34575                           
 34576                           ;user.c: 76: TRISCbits.TRISC1 = 0;
 34577  008E7A  9294               	bcf	3988,1,c	;volatile
 34578                           
 34579                           ;user.c: 77: TRISCbits.TRISC2 = 0;
 34580  008E7C  9494               	bcf	3988,2,c	;volatile
 34581                           
 34582                           ;user.c: 78: TRISCbits.TRISC3 = 0;
 34583  008E7E  9694               	bcf	3988,3,c	;volatile
 34584                           
 34585                           ;user.c: 79: TRISCbits.TRISC4 = 0;
 34586  008E80  9894               	bcf	3988,4,c	;volatile
 34587                           
 34588                           ;user.c: 80: TRISCbits.TRISC5 = 0;
 34589  008E82  9A94               	bcf	3988,5,c	;volatile
 34590                           
 34591                           ;user.c: 81: TRISCbits.TRISC6 = 0;
 34592  008E84  9C94               	bcf	3988,6,c	;volatile
 34593                           
 34594                           ;user.c: 82: TRISCbits.TRISC7 = 1;
 34595  008E86  8E94               	bsf	3988,7,c	;volatile
 34596                           
 34597                           ;user.c: 83: TRISBbits.TRISB0 = 1;
 34598  008E88  8093               	bsf	3987,0,c	;volatile
 34599                           
 34600                           ;user.c: 84: TRISBbits.TRISB1 = 1;
 34601  008E8A  8293               	bsf	3987,1,c	;volatile
 34602                           
 34603                           ;user.c: 85: TRISBbits.TRISB2 = 1;
 34604  008E8C  8493               	bsf	3987,2,c	;volatile
 34605                           
 34606                           ;user.c: 86: TRISBbits.TRISB3 = 1;
 34607  008E8E  8693               	bsf	3987,3,c	;volatile
 34608                           
 34609                           ;user.c: 87: TRISBbits.TRISB4 = 1;
 34610  008E90  8893               	bsf	3987,4,c	;volatile
 34611                           
 34612                           ;user.c: 88: TRISBbits.TRISB5 = 1;
 34613  008E92  8A93               	bsf	3987,5,c	;volatile
 34614                           
 34615                           ;user.c: 91: ANSEL = 0x01;
 34616  008E94  0E01               	movlw	1
 34617  008E96  6E7E               	movwf	3966,c	;volatile
 34618                           
 34619                           ;user.c: 92: ANSELH = 0x00;
 34620  008E98  0E00               	movlw	0
 34621  008E9A  6E7F               	movwf	3967,c	;volatile
 34622                           
 34623                           ;user.c: 95: INTCON2bits.RBPU = 0;
 34624  008E9C  9EF1               	bcf	intcon2,7,c	;volatile
 34625                           
 34626                           ;user.c: 97: WPUB = 0x0F;
 34627  008E9E  0E0F               	movlw	15
 34628  008EA0  6E7C               	movwf	3964,c	;volatile
 34629  008EA2  0012               	return		;funcret
 34630  008EA4                     __end_of_InitApp:
 34631                           	opt stack 0
 34632                           tblptru	equ	0xFF8
 34633                           tblptrh	equ	0xFF7
 34634                           tblptrl	equ	0xFF6
 34635                           tablat	equ	0xFF5
 34636                           prodh	equ	0xFF4
 34637                           prodl	equ	0xFF3
 34638                           intcon	equ	0xFF2
 34639                           intcon2	equ	0xFF1
 34640                           indf0	equ	0xFEF
 34641                           postinc0	equ	0xFEE
 34642                           plusw0	equ	0xFEB
 34643                           fsr0h	equ	0xFEA
 34644                           fsr0l	equ	0xFE9
 34645                           wreg	equ	0xFE8
 34646                           indf1	equ	0xFE7
 34647                           postdec1	equ	0xFE5
 34648                           fsr1h	equ	0xFE2
 34649                           fsr1l	equ	0xFE1
 34650                           indf2	equ	0xFDF
 34651                           postinc2	equ	0xFDE
 34652                           postdec2	equ	0xFDD
 34653                           plusw2	equ	0xFDB
 34654                           fsr2h	equ	0xFDA
 34655                           fsr2l	equ	0xFD9
 34656                           status	equ	0xFD8
 34657                           
 34658 ;; *************** function _ConfigureOscillator *****************
 34659 ;; Defined at:
 34660 ;;		line 43 in file "system.c"
 34661 ;; Parameters:    Size  Location     Type
 34662 ;;		None
 34663 ;; Auto vars:     Size  Location     Type
 34664 ;;		None
 34665 ;; Return value:  Size  Location     Type
 34666 ;;		None               void
 34667 ;; Registers used:
 34668 ;;		None
 34669 ;; Tracked objects:
 34670 ;;		On entry : 0/0
 34671 ;;		On exit  : 0/0
 34672 ;;		Unchanged: 0/0
 34673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34678 ;;Total ram usage:        0 bytes
 34679 ;; Hardware stack levels used:    1
 34680 ;; Hardware stack levels required when called:    6
 34681 ;; This function calls:
 34682 ;;		Nothing
 34683 ;; This function is called by:
 34684 ;;		_main
 34685 ;; This function uses a non-reentrant model
 34686 ;;
 34687                           
 34688                           	psect	text100
 34689  0093D2                     __ptext100:
 34690                           	opt stack 0
 34691  0093D2                     _ConfigureOscillator:
 34692                           	opt stack 24
 34693                           
 34694                           ;incstack = 0
 34695  0093D2  0012               	return		;funcret
 34696  0093D4                     __end_of_ConfigureOscillator:
 34697                           	opt stack 0
 34698                           tblptru	equ	0xFF8
 34699                           tblptrh	equ	0xFF7
 34700                           tblptrl	equ	0xFF6
 34701                           tablat	equ	0xFF5
 34702                           prodh	equ	0xFF4
 34703                           prodl	equ	0xFF3
 34704                           intcon	equ	0xFF2
 34705                           intcon2	equ	0xFF1
 34706                           indf0	equ	0xFEF
 34707                           postinc0	equ	0xFEE
 34708                           plusw0	equ	0xFEB
 34709                           fsr0h	equ	0xFEA
 34710                           fsr0l	equ	0xFE9
 34711                           wreg	equ	0xFE8
 34712                           indf1	equ	0xFE7
 34713                           postdec1	equ	0xFE5
 34714                           fsr1h	equ	0xFE2
 34715                           fsr1l	equ	0xFE1
 34716                           indf2	equ	0xFDF
 34717                           postinc2	equ	0xFDE
 34718                           postdec2	equ	0xFDD
 34719                           plusw2	equ	0xFDB
 34720                           fsr2h	equ	0xFDA
 34721                           fsr2l	equ	0xFD9
 34722                           status	equ	0xFD8
 34723                           
 34724 ;; *************** function _low_isr *****************
 34725 ;; Defined at:
 34726 ;;		line 592 in file "interrupts.c"
 34727 ;; Parameters:    Size  Location     Type
 34728 ;;		None
 34729 ;; Auto vars:     Size  Location     Type
 34730 ;;  data            1   25[COMRAM] unsigned char 
 34731 ;; Return value:  Size  Location     Type
 34732 ;;		None               void
 34733 ;; Registers used:
 34734 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34735 ;; Tracked objects:
 34736 ;;		On entry : 0/0
 34737 ;;		On exit  : 0/0
 34738 ;;		Unchanged: 0/0
 34739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34742 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34743 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34744 ;;Total ram usage:       18 bytes
 34745 ;; Hardware stack levels used:    1
 34746 ;; Hardware stack levels required when called:    5
 34747 ;; This function calls:
 34748 ;;		_EraseScreen
 34749 ;;		_IsCharacter
 34750 ;;		i1_BlueConnected
 34751 ;;		i1_ReadUSART
 34752 ;;		i1_UARTchar
 34753 ;;		i1_UARTstring
 34754 ;;		i1_UARTstringCRLN
 34755 ;;		i1_cleanBuffer
 34756 ;; This function is called by:
 34757 ;;		Interrupt level 1
 34758 ;; This function uses a non-reentrant model
 34759 ;;
 34760                           
 34761                           	psect	intcodelo
 34762  000018                     __pintcodelo:
 34763                           	opt stack 0
 34764  000018                     _low_isr:
 34765                           	opt stack 17
 34766                           
 34767                           ;incstack = 0
 34768  000018  CFD8 F009          	movff	status,??_low_isr
 34769  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 34770  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 34771  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 34772  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 34773  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 34774  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 34775  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 34776  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 34777  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 34778  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 34779  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 34780  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 34781  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 34782  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 34783  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 34784  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 34785                           
 34786                           ;interrupts.c: 601: char data = 0;
 34787  00005C  0E00               	movlw	0
 34788  00005E  6E1A               	movwf	low_isr@data,c
 34789                           
 34790                           ;interrupts.c: 603: INTCONbits.PEIE = 0;
 34791  000060  9CF2               	bcf	intcon,6,c	;volatile
 34792                           
 34793                           ;interrupts.c: 605: if(PIR1bits.RCIF)
 34794  000062  AA9E               	btfss	3998,5,c	;volatile
 34795  000064  D093               	goto	i1l1323
 34796                           
 34797                           ;interrupts.c: 606: {
 34798                           ;interrupts.c: 608: data = ReadUSART();
 34799  000066  EC47  F049         	call	i1_ReadUSART	;wreg free
 34800  00006A  6E1A               	movwf	low_isr@data,c
 34801                           
 34802                           ;interrupts.c: 610: if(!BlueConnected())
 34803  00006C  ECB8  F049         	call	i1_BlueConnected	;wreg free
 34804  000070  0900               	iorlw	0
 34805  000072  A4D8               	btfss	status,2,c
 34806  000074  D00F               	goto	i1l16662
 34807                           
 34808                           ;interrupts.c: 611: {
 34809                           ;interrupts.c: 612: if(CommandStringPos < 255)
 34810  000076  2829               	incf	_CommandStringPos,w,c
 34811  000078  B4D8               	btfsc	status,2,c
 34812  00007A  D086               	goto	i1l16712
 34813                           
 34814                           ;interrupts.c: 613: {
 34815                           ;interrupts.c: 614: CommandString[CommandStringPos] = data;
 34816  00007C  5029               	movf	_CommandStringPos,w,c
 34817  00007E  0D01               	mullw	1
 34818  000080  0E00               	movlw	low _CommandString
 34819  000082  24F3               	addwf	prodl,w,c
 34820  000084  6ED9               	movwf	fsr2l,c
 34821  000086  0E05               	movlw	high _CommandString
 34822  000088  20F4               	addwfc	prodh,w,c
 34823  00008A  6EDA               	movwf	fsr2h,c
 34824  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 34825                           
 34826                           ;interrupts.c: 615: CommandStringPos++;
 34827  000090  2A29               	incf	_CommandStringPos,f,c
 34828                           
 34829                           ;interrupts.c: 616: }
 34830                           ;interrupts.c: 617: }
 34831  000092  D07A               	goto	i1l16712
 34832  000094                     i1l16662:
 34833                           
 34834                           ;interrupts.c: 618: else
 34835                           ;interrupts.c: 619: {
 34836                           ;interrupts.c: 620: if(data != '\r' && data != '\n')
 34837  000094  0E0D               	movlw	13
 34838  000096  181A               	xorwf	low_isr@data,w,c
 34839  000098  B4D8               	btfsc	status,2,c
 34840  00009A  D063               	goto	i1l16702
 34841  00009C  0E0A               	movlw	10
 34842  00009E  181A               	xorwf	low_isr@data,w,c
 34843  0000A0  B4D8               	btfsc	status,2,c
 34844  0000A2  D05F               	goto	i1l16702
 34845                           
 34846                           ;interrupts.c: 621: {
 34847                           ;interrupts.c: 622: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 34848  0000A4  0E7F               	movlw	127
 34849  0000A6  181A               	xorwf	low_isr@data,w,c
 34850  0000A8  B4D8               	btfsc	status,2,c
 34851  0000AA  D004               	goto	i1l16670
 34852  0000AC  0E08               	movlw	8
 34853  0000AE  181A               	xorwf	low_isr@data,w,c
 34854  0000B0  A4D8               	btfss	status,2,c
 34855  0000B2  D01F               	goto	i1l16682
 34856  0000B4                     i1l16670:
 34857  0000B4  0100               	movlb	0	; () banked
 34858  0000B6  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 34859  0000B8  B4D8               	btfsc	status,2,c
 34860  0000BA  D01B               	goto	i1l16682
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;interrupts.c: 623: {
 34864                           ;interrupts.c: 625: EraseScreen(ReceivedStringPos + 1);
 34865  0000BC  0100               	movlb	0	; () banked
 34866  0000BE  29E0               	incf	_ReceivedStringPos& (0+255),w,b
 34867  0000C0  ECCD  F048         	call	_EraseScreen
 34868                           
 34869                           ;interrupts.c: 626: ReceivedStringPos--;
 34870  0000C4  0100               	movlb	0	; () banked
 34871  0000C6  07E0               	decf	_ReceivedStringPos& (0+255),f,b
 34872                           
 34873                           ; BSR set to: 0
 34874                           ;interrupts.c: 627: ReceivedString[ReceivedStringPos] = '\0';
 34875  0000C8  0100               	movlb	0	; () banked
 34876  0000CA  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 34877  0000CC  0D01               	mullw	1
 34878  0000CE  0E00               	movlw	low _ReceivedString
 34879  0000D0  24F3               	addwf	prodl,w,c
 34880  0000D2  6ED9               	movwf	fsr2l,c
 34881  0000D4  0E06               	movlw	high _ReceivedString
 34882  0000D6  20F4               	addwfc	prodh,w,c
 34883  0000D8  6EDA               	movwf	fsr2h,c
 34884  0000DA  0E00               	movlw	0
 34885  0000DC  6EDF               	movwf	indf2,c
 34886                           
 34887                           ; BSR set to: 0
 34888                           ;interrupts.c: 628: UARTchar('>');
 34889  0000DE  0E3E               	movlw	62
 34890  0000E0  EC25  F049         	call	i1_UARTchar
 34891                           
 34892                           ;interrupts.c: 629: UARTstring(ReceivedString);
 34893  0000E4  0E00               	movlw	low _ReceivedString
 34894  0000E6  6E02               	movwf	i1UARTstring@data,c
 34895  0000E8  0E06               	movlw	high _ReceivedString
 34896  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 34897  0000EC  EC14  F046         	call	i1_UARTstring	;wreg free
 34898                           
 34899                           ;interrupts.c: 630: }
 34900  0000F0  D04B               	goto	i1l16712
 34901  0000F2                     i1l16682:
 34902                           
 34903                           ;interrupts.c: 631: else if(ReceivedStringPos < 255)
 34904  0000F2  0100               	movlb	0	; () banked
 34905  0000F4  29E0               	incf	_ReceivedStringPos& (0+255),w,b
 34906  0000F6  B4D8               	btfsc	status,2,c
 34907  0000F8  D01B               	goto	i1l16694
 34908                           
 34909                           ; BSR set to: 0
 34910                           ;interrupts.c: 632: {
 34911                           ;interrupts.c: 633: if(!NewReceivedString)
 34912  0000FA  0100               	movlb	0	; () banked
 34913  0000FC  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 34914  0000FE  A4D8               	btfss	status,2,c
 34915  000100  D043               	goto	i1l16712
 34916                           
 34917                           ; BSR set to: 0
 34918                           ;interrupts.c: 634: {
 34919                           ;interrupts.c: 635: if(IsCharacter(data))
 34920  000102  501A               	movf	low_isr@data,w,c
 34921  000104  EC19  F049         	call	_IsCharacter
 34922  000108  0900               	iorlw	0
 34923  00010A  B4D8               	btfsc	status,2,c
 34924  00010C  D03D               	goto	i1l16712
 34925                           
 34926                           ;interrupts.c: 636: {
 34927                           ;interrupts.c: 637: UARTchar(data);
 34928  00010E  501A               	movf	low_isr@data,w,c
 34929  000110  EC25  F049         	call	i1_UARTchar
 34930                           
 34931                           ;interrupts.c: 638: ReceivedString[ReceivedStringPos] = data;
 34932  000114  0100               	movlb	0	; () banked
 34933  000116  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 34934  000118  0D01               	mullw	1
 34935  00011A  0E00               	movlw	low _ReceivedString
 34936  00011C  24F3               	addwf	prodl,w,c
 34937  00011E  6ED9               	movwf	fsr2l,c
 34938  000120  0E06               	movlw	high _ReceivedString
 34939  000122  20F4               	addwfc	prodh,w,c
 34940  000124  6EDA               	movwf	fsr2h,c
 34941  000126  C01A  FFDF         	movff	low_isr@data,indf2
 34942                           
 34943                           ; BSR set to: 0
 34944                           ;interrupts.c: 639: ReceivedStringPos++;
 34945  00012A  0100               	movlb	0	; () banked
 34946  00012C  2BE0               	incf	_ReceivedStringPos& (0+255),f,b
 34947                           
 34948                           ; BSR set to: 0
 34949                           ;interrupts.c: 640: }
 34950                           ;interrupts.c: 641: }
 34951                           ;interrupts.c: 642: }
 34952                           
 34953                           ; BSR set to: 0
 34954  00012E  D02C               	goto	i1l16712
 34955  000130                     i1l16694:
 34956                           
 34957                           ; BSR set to: 0
 34958                           ;interrupts.c: 643: else
 34959                           ;interrupts.c: 644: {
 34960                           ;interrupts.c: 645: cleanBuffer(ReceivedString,255);
 34961  000130  0E00               	movlw	low _ReceivedString
 34962  000132  6E01               	movwf	i1cleanBuffer@data,c
 34963  000134  0E06               	movlw	high _ReceivedString
 34964  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 34965  000138  0E00               	movlw	0
 34966  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 34967  00013C  6803               	setf	i1cleanBuffer@count,c
 34968  00013E  ECB3  F047         	call	i1_cleanBuffer	;wreg free
 34969                           
 34970                           ;interrupts.c: 646: ReceivedStringPos = 0;
 34971  000142  0E00               	movlw	0
 34972  000144  0100               	movlb	0	; () banked
 34973  000146  6FE0               	movwf	_ReceivedStringPos& (0+255),b
 34974                           
 34975                           ; BSR set to: 0
 34976                           ;interrupts.c: 647: UARTstring(CRLN);
 34977  000148  0EFE               	movlw	low _CRLN
 34978  00014A  6E02               	movwf	i1UARTstring@data,c
 34979  00014C  0EF3               	movlw	high _CRLN
 34980  00014E  6E03               	movwf	i1UARTstring@data+1,c
 34981  000150  EC14  F046         	call	i1_UARTstring	;wreg free
 34982                           
 34983                           ;interrupts.c: 648: UARTstringCRLN((unsigned char *)"Buffer Overflow");
 34984  000154  0E77               	movlw	low STR_1
 34985  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 34986  000158  0EFE               	movlw	high STR_1
 34987  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 34988  00015C  EC59  F045         	call	i1_UARTstringCRLN	;wreg free
 34989                           
 34990                           ;interrupts.c: 649: }
 34991                           ;interrupts.c: 650: }
 34992  000160  D013               	goto	i1l16712
 34993  000162                     i1l16702:
 34994                           
 34995                           ;interrupts.c: 651: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 34996  000162  0100               	movlb	0	; () banked
 34997  000164  51E0               	movf	_ReceivedStringPos& (0+255),w,b
 34998  000166  B4D8               	btfsc	status,2,c
 34999  000168  D00F               	goto	i1l16712
 35000                           
 35001                           ; BSR set to: 0
 35002  00016A  0100               	movlb	0	; () banked
 35003  00016C  51DF               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35004  00016E  A4D8               	btfss	status,2,c
 35005  000170  D00B               	goto	i1l16712
 35006                           
 35007                           ; BSR set to: 0
 35008                           ;interrupts.c: 652: {
 35009                           ;interrupts.c: 653: PIE1bits.RCIE = 0;
 35010  000172  9A9D               	bcf	3997,5,c	;volatile
 35011                           
 35012                           ; BSR set to: 0
 35013                           ;interrupts.c: 654: UARTstring(CRLN);
 35014  000174  0EFE               	movlw	low _CRLN
 35015  000176  6E02               	movwf	i1UARTstring@data,c
 35016  000178  0EF3               	movlw	high _CRLN
 35017  00017A  6E03               	movwf	i1UARTstring@data+1,c
 35018  00017C  EC14  F046         	call	i1_UARTstring	;wreg free
 35019                           
 35020                           ;interrupts.c: 655: NewReceivedString = 1;
 35021  000180  0E01               	movlw	1
 35022  000182  0100               	movlb	0	; () banked
 35023  000184  6FDF               	movwf	_NewReceivedString& (0+255),b	;volatile
 35024                           
 35025                           ; BSR set to: 0
 35026                           
 35027                           ; BSR set to: 0
 35028  000186  D000               	goto	i1l16712
 35029  000188                     i1l16712:
 35030                           
 35031                           ;interrupts.c: 656: }
 35032                           ;interrupts.c: 657: }
 35033                           ;interrupts.c: 658: PIR1bits.RCIF = 0;
 35034  000188  9A9E               	bcf	3998,5,c	;volatile
 35035                           
 35036                           ;interrupts.c: 659: }
 35037  00018A  D00F               	goto	i1l1338
 35038  00018C                     i1l1323:
 35039                           
 35040                           ;interrupts.c: 660: else if(PIR1bits.TMR1IF)
 35041  00018C  A09E               	btfss	3998,0,c	;volatile
 35042  00018E  D00B               	goto	i1l1339
 35043                           
 35044                           ;interrupts.c: 661: {
 35045                           ;interrupts.c: 662: Timer1_Postscaler++;
 35046  000190  2A3B               	incf	_Timer1_Postscaler,f,c
 35047                           
 35048                           ;interrupts.c: 663: if(Timer1_Postscaler == 3)
 35049  000192  0E03               	movlw	3
 35050  000194  183B               	xorwf	_Timer1_Postscaler,w,c
 35051  000196  A4D8               	btfss	status,2,c
 35052  000198  D004               	goto	i1l16722
 35053                           
 35054                           ;interrupts.c: 664: {
 35055                           ;interrupts.c: 665: (LATC &= ~0x04);
 35056  00019A  948B               	bcf	3979,2,c	;volatile
 35057                           
 35058                           ;interrupts.c: 666: (LATC &= ~0x02);
 35059  00019C  928B               	bcf	3979,1,c	;volatile
 35060                           
 35061                           ;interrupts.c: 667: (T1CONbits.TMR1ON = 0);
 35062  00019E  90CD               	bcf	4045,0,c	;volatile
 35063  0001A0  D000               	goto	i1l16722
 35064  0001A2                     i1l16722:
 35065                           
 35066                           ;interrupts.c: 668: }
 35067                           ;interrupts.c: 669: PIR1bits.TMR1IF = 0;
 35068  0001A2  909E               	bcf	3998,0,c	;volatile
 35069                           
 35070                           ;interrupts.c: 670: }
 35071  0001A4  D002               	goto	i1l1338
 35072  0001A6                     i1l1339:
 35073                           
 35074                           ;interrupts.c: 671: else
 35075                           ;interrupts.c: 672: {
 35076                           ;interrupts.c: 674: __nop();
 35077  0001A6  F000               	nop	
 35078  0001A8  D000               	goto	i1l1338
 35079  0001AA                     i1l1338:
 35080                           
 35081                           ;interrupts.c: 675: }
 35082                           ;interrupts.c: 676: INTCONbits.PEIE = 1;
 35083  0001AA  8CF2               	bsf	intcon,6,c	;volatile
 35084  0001AC  C019  FFF5         	movff	??_low_isr+16,tablat
 35085  0001B0  C018  FFF8         	movff	??_low_isr+15,tblptru
 35086  0001B4  C017  FFF7         	movff	??_low_isr+14,tblptrh
 35087  0001B8  C016  FFF6         	movff	??_low_isr+13,tblptrl
 35088  0001BC  C015  FFF4         	movff	??_low_isr+12,prodh
 35089  0001C0  C014  FFF3         	movff	??_low_isr+11,prodl
 35090  0001C4  C013  FFDA         	movff	??_low_isr+10,fsr2h
 35091  0001C8  C012  FFD9         	movff	??_low_isr+9,fsr2l
 35092  0001CC  C011  FFE2         	movff	??_low_isr+8,fsr1h
 35093  0001D0  C010  FFE1         	movff	??_low_isr+7,fsr1l
 35094  0001D4  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 35095  0001D8  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 35096  0001DC  C00D  FFFB         	movff	??_low_isr+4,pclatu
 35097  0001E0  C00C  FFFA         	movff	??_low_isr+3,pclath
 35098  0001E4  C00B  FFE0         	movff	??_low_isr+2,bsr
 35099  0001E8  C00A  FFE8         	movff	??_low_isr+1,wreg
 35100  0001EC  C009  FFD8         	movff	??_low_isr,status
 35101  0001F0  0010               	retfie	
 35102  0001F2                     __end_of_low_isr:
 35103                           	opt stack 0
 35104                           pclatu	equ	0xFFB
 35105                           pclath	equ	0xFFA
 35106                           tblptru	equ	0xFF8
 35107                           tblptrh	equ	0xFF7
 35108                           tblptrl	equ	0xFF6
 35109                           tablat	equ	0xFF5
 35110                           prodh	equ	0xFF4
 35111                           prodl	equ	0xFF3
 35112                           intcon	equ	0xFF2
 35113                           intcon2	equ	0xFF1
 35114                           indf0	equ	0xFEF
 35115                           postinc0	equ	0xFEE
 35116                           plusw0	equ	0xFEB
 35117                           fsr0h	equ	0xFEA
 35118                           fsr0l	equ	0xFE9
 35119                           wreg	equ	0xFE8
 35120                           indf1	equ	0xFE7
 35121                           postdec1	equ	0xFE5
 35122                           fsr1h	equ	0xFE2
 35123                           fsr1l	equ	0xFE1
 35124                           bsr	equ	0xFE0
 35125                           indf2	equ	0xFDF
 35126                           postinc2	equ	0xFDE
 35127                           postdec2	equ	0xFDD
 35128                           plusw2	equ	0xFDB
 35129                           fsr2h	equ	0xFDA
 35130                           fsr2l	equ	0xFD9
 35131                           status	equ	0xFD8
 35132                           
 35133 ;; *************** function i1_cleanBuffer *****************
 35134 ;; Defined at:
 35135 ;;		line 127 in file "MISC.c"
 35136 ;; Parameters:    Size  Location     Type
 35137 ;;  data            2    0[COMRAM] PTR unsigned char 
 35138 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 35139 ;;		 -> CommandString(255), StringAddEqual@temp(100), ReceivedString(255), main@BluetoothString(255), 
 35140 ;;  count           2    2[COMRAM] int 
 35141 ;; Auto vars:     Size  Location     Type
 35142 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 35143 ;; Return value:  Size  Location     Type
 35144 ;;		None               void
 35145 ;; Registers used:
 35146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35147 ;; Tracked objects:
 35148 ;;		On entry : 0/0
 35149 ;;		On exit  : 0/0
 35150 ;;		Unchanged: 0/0
 35151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35154 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35155 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35156 ;;Total ram usage:        8 bytes
 35157 ;; Hardware stack levels used:    1
 35158 ;; Hardware stack levels required when called:    2
 35159 ;; This function calls:
 35160 ;;		Nothing
 35161 ;; This function is called by:
 35162 ;;		_low_isr
 35163 ;; This function uses a non-reentrant model
 35164 ;;
 35165                           
 35166                           	psect	text102
 35167  008F66                     __ptext102:
 35168                           	opt stack 0
 35169  008F66                     i1_cleanBuffer:
 35170                           	opt stack 19
 35171                           
 35172                           ;MISC.c: 129: unsigned char i=0;
 35173                           
 35174                           ;incstack = 0
 35175  008F66  0E00               	movlw	0
 35176  008F68  6E08               	movwf	i1cleanBuffer@i,c
 35177                           
 35178                           ;MISC.c: 130: for(i=0; i<count;i++)
 35179  008F6A  0E00               	movlw	0
 35180  008F6C  6E08               	movwf	i1cleanBuffer@i,c
 35181  008F6E  D00C               	goto	i1l16058
 35182  008F70                     i1l16054:
 35183                           
 35184                           ;MISC.c: 131: {
 35185                           ;MISC.c: 132: data[i]= 0;
 35186  008F70  5008               	movf	i1cleanBuffer@i,w,c
 35187  008F72  0D01               	mullw	1
 35188  008F74  50F3               	movf	prodl,w,c
 35189  008F76  2401               	addwf	i1cleanBuffer@data,w,c
 35190  008F78  6ED9               	movwf	fsr2l,c
 35191  008F7A  50F4               	movf	prodh,w,c
 35192  008F7C  2002               	addwfc	i1cleanBuffer@data+1,w,c
 35193  008F7E  6EDA               	movwf	fsr2h,c
 35194  008F80  0E00               	movlw	0
 35195  008F82  6EDF               	movwf	indf2,c
 35196  008F84  2A08               	incf	i1cleanBuffer@i,f,c
 35197  008F86  D000               	goto	i1l16058
 35198  008F88                     i1l16058:
 35199  008F88  5008               	movf	i1cleanBuffer@i,w,c
 35200  008F8A  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 35201  008F8C  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 35202  008F8E  5003               	movf	i1cleanBuffer@count,w,c
 35203  008F90  5C05               	subwf	??i1_cleanBuffer,w,c
 35204  008F92  5006               	movf	??i1_cleanBuffer+1,w,c
 35205  008F94  0A80               	xorlw	128
 35206  008F96  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 35207  008F98  5004               	movf	i1cleanBuffer@count+1,w,c
 35208  008F9A  0A80               	xorlw	128
 35209  008F9C  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 35210  008F9E  A0D8               	btfss	status,0,c
 35211  008FA0  D7E7               	goto	i1l16054
 35212  008FA2  0012               	return		;funcret
 35213  008FA4                     __end_ofi1_cleanBuffer:
 35214                           	opt stack 0
 35215                           pclatu	equ	0xFFB
 35216                           pclath	equ	0xFFA
 35217                           tblptru	equ	0xFF8
 35218                           tblptrh	equ	0xFF7
 35219                           tblptrl	equ	0xFF6
 35220                           tablat	equ	0xFF5
 35221                           prodh	equ	0xFF4
 35222                           prodl	equ	0xFF3
 35223                           intcon	equ	0xFF2
 35224                           intcon2	equ	0xFF1
 35225                           indf0	equ	0xFEF
 35226                           postinc0	equ	0xFEE
 35227                           plusw0	equ	0xFEB
 35228                           fsr0h	equ	0xFEA
 35229                           fsr0l	equ	0xFE9
 35230                           wreg	equ	0xFE8
 35231                           indf1	equ	0xFE7
 35232                           postdec1	equ	0xFE5
 35233                           fsr1h	equ	0xFE2
 35234                           fsr1l	equ	0xFE1
 35235                           bsr	equ	0xFE0
 35236                           indf2	equ	0xFDF
 35237                           postinc2	equ	0xFDE
 35238                           postdec2	equ	0xFDD
 35239                           plusw2	equ	0xFDB
 35240                           fsr2h	equ	0xFDA
 35241                           fsr2l	equ	0xFD9
 35242                           status	equ	0xFD8
 35243                           
 35244 ;; *************** function i1_UARTstringCRLN *****************
 35245 ;; Defined at:
 35246 ;;		line 262 in file "UART.c"
 35247 ;; Parameters:    Size  Location     Type
 35248 ;;  data            2    3[COMRAM] PTR unsigned char 
 35249 ;;		 -> STR_145(36), STR_143(27), STR_129(13), STR_98(13), 
 35250 ;;		 -> STR_95(21), STR_88(17), STR_81(29), STR_80(18), 
 35251 ;;		 -> STR_79(29), STR_76(44), STR_71(46), STR_70(42), 
 35252 ;;		 -> STR_69(50), STR_68(50), STR_66(31), STR_65(31), 
 35253 ;;		 -> STR_64(37), STR_63(37), STR_62(37), STR_58(18), 
 35254 ;;		 -> STR_57(14), STR_56(9), STR_55(20), STR_54(16), 
 35255 ;;		 -> STR_53(7), STR_52(35), STR_51(37), STR_48(47), 
 35256 ;;		 -> STR_43(17), STR_42(9), STR_41(18), STR_40(9), 
 35257 ;;		 -> STR_39(22), STR_38(11), STR_37(20), STR_36(7), 
 35258 ;;		 -> STR_35(31), STR_34(33), STR_30(32), STR_26(31), 
 35259 ;;		 -> STR_25(31), STR_23(29), STR_21(29), SYNTAX_ERR(14), 
 35260 ;;		 -> UseBluetooth@buf(100), STR_1(16), 
 35261 ;; Auto vars:     Size  Location     Type
 35262 ;;		None
 35263 ;; Return value:  Size  Location     Type
 35264 ;;		None               void
 35265 ;; Registers used:
 35266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35267 ;; Tracked objects:
 35268 ;;		On entry : 0/0
 35269 ;;		On exit  : 0/0
 35270 ;;		Unchanged: 0/0
 35271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35276 ;;Total ram usage:        2 bytes
 35277 ;; Hardware stack levels used:    1
 35278 ;; Hardware stack levels required when called:    4
 35279 ;; This function calls:
 35280 ;;		i1_UARTchar
 35281 ;;		i1_UARTstring
 35282 ;; This function is called by:
 35283 ;;		_low_isr
 35284 ;; This function uses a non-reentrant model
 35285 ;;
 35286                           
 35287                           	psect	text103
 35288  008AB2                     __ptext103:
 35289                           	opt stack 0
 35290  008AB2                     i1_UARTstringCRLN:
 35291                           	opt stack 17
 35292                           
 35293                           ;UART.c: 264: while(*data != 0)
 35294                           
 35295                           ;incstack = 0
 35296  008AB2  D016               	goto	i1l11556
 35297  008AB4                     i1l11552:
 35298                           
 35299                           ;UART.c: 265: {
 35300                           ;UART.c: 266: UARTchar(*data);
 35301  008AB4  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35302  008AB8  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35303  008ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 35304  008ABE  6EF8               	movwf	tblptru,c
 35305  008AC0  0E0F               	movlw	(high __ramtop+-1)
 35306  008AC2  64F7               	cpfsgt	tblptrh,c
 35307  008AC4  D003               	bra	i1u1322_27
 35308  008AC6  0008               	tblrd		*
 35309  008AC8  50F5               	movf	tablat,w,c
 35310  008ACA  D005               	bra	i1u1322_20
 35311  008ACC                     i1u1322_27:
 35312  008ACC  CFF6 FFE9          	movff	tblptrl,fsr0l
 35313  008AD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 35314  008AD4  50EF               	movf	indf0,w,c
 35315  008AD6                     i1u1322_20:
 35316  008AD6  EC25  F049         	call	i1_UARTchar
 35317                           
 35318                           ;UART.c: 267: *data++;
 35319  008ADA  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 35320  008ADC  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 35321  008ADE  D000               	goto	i1l11556
 35322  008AE0                     i1l11556:
 35323  008AE0  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35324  008AE4  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35325  008AE8  0E00               	movlw	low (__mediumconst shr (0+16))
 35326  008AEA  6EF8               	movwf	tblptru,c
 35327  008AEC  0E0F               	movlw	(high __ramtop+-1)
 35328  008AEE  64F7               	cpfsgt	tblptrh,c
 35329  008AF0  D003               	bra	i1u1323_27
 35330  008AF2  0008               	tblrd		*
 35331  008AF4  50F5               	movf	tablat,w,c
 35332  008AF6  D005               	bra	i1u1323_20
 35333  008AF8                     i1u1323_27:
 35334  008AF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 35335  008AFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 35336  008B00  50EF               	movf	indf0,w,c
 35337  008B02                     i1u1323_20:
 35338  008B02  0900               	iorlw	0
 35339  008B04  A4D8               	btfss	status,2,c
 35340  008B06  D7D6               	goto	i1l11552
 35341                           
 35342                           ;UART.c: 268: }
 35343                           ;UART.c: 269: UARTstring(CRLN);
 35344  008B08  0EFE               	movlw	low _CRLN
 35345  008B0A  6E02               	movwf	i1UARTstring@data,c
 35346  008B0C  0EF3               	movlw	high _CRLN
 35347  008B0E  6E03               	movwf	i1UARTstring@data+1,c
 35348  008B10  EC14  F046         	call	i1_UARTstring	;wreg free
 35349  008B14  0012               	return		;funcret
 35350  008B16                     __end_ofi1_UARTstringCRLN:
 35351                           	opt stack 0
 35352                           pclatu	equ	0xFFB
 35353                           pclath	equ	0xFFA
 35354                           tblptru	equ	0xFF8
 35355                           tblptrh	equ	0xFF7
 35356                           tblptrl	equ	0xFF6
 35357                           tablat	equ	0xFF5
 35358                           prodh	equ	0xFF4
 35359                           prodl	equ	0xFF3
 35360                           intcon	equ	0xFF2
 35361                           intcon2	equ	0xFF1
 35362                           indf0	equ	0xFEF
 35363                           postinc0	equ	0xFEE
 35364                           plusw0	equ	0xFEB
 35365                           fsr0h	equ	0xFEA
 35366                           fsr0l	equ	0xFE9
 35367                           wreg	equ	0xFE8
 35368                           indf1	equ	0xFE7
 35369                           postdec1	equ	0xFE5
 35370                           fsr1h	equ	0xFE2
 35371                           fsr1l	equ	0xFE1
 35372                           bsr	equ	0xFE0
 35373                           indf2	equ	0xFDF
 35374                           postinc2	equ	0xFDE
 35375                           postdec2	equ	0xFDD
 35376                           plusw2	equ	0xFDB
 35377                           fsr2h	equ	0xFDA
 35378                           fsr2l	equ	0xFD9
 35379                           status	equ	0xFD8
 35380                           
 35381 ;; *************** function i1_UARTstring *****************
 35382 ;; Defined at:
 35383 ;;		line 202 in file "UART.c"
 35384 ;; Parameters:    Size  Location     Type
 35385 ;;  data            2    1[COMRAM] PTR unsigned char 
 35386 ;;		 -> STR_144(28), STR_87(13), STR_78(32), STR_67(14), 
 35387 ;;		 -> SYNTAX_ERR(14), STR_18(5), STR_16(5), STR_14(6), 
 35388 ;;		 -> STR_12(6), STR_10(9), STR_8(21), STR_6(10), 
 35389 ;;		 -> BluetoothInitialSetup@buf(50), STR_2(4), CRLN(3), ReceivedString(255), 
 35390 ;; Auto vars:     Size  Location     Type
 35391 ;;		None
 35392 ;; Return value:  Size  Location     Type
 35393 ;;		None               void
 35394 ;; Registers used:
 35395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35396 ;; Tracked objects:
 35397 ;;		On entry : 0/0
 35398 ;;		On exit  : 0/0
 35399 ;;		Unchanged: 0/0
 35400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35405 ;;Total ram usage:        2 bytes
 35406 ;; Hardware stack levels used:    1
 35407 ;; Hardware stack levels required when called:    3
 35408 ;; This function calls:
 35409 ;;		i1_UARTchar
 35410 ;; This function is called by:
 35411 ;;		_low_isr
 35412 ;;		i1_UARTstringCRLN
 35413 ;; This function uses a non-reentrant model
 35414 ;;
 35415                           
 35416                           	psect	text104
 35417  008C28                     __ptext104:
 35418                           	opt stack 0
 35419  008C28                     i1_UARTstring:
 35420                           	opt stack 17
 35421                           
 35422                           ;UART.c: 204: while(*data != 0)
 35423                           
 35424                           ;incstack = 0
 35425  008C28  D016               	goto	i1l10474
 35426  008C2A                     i1l10470:
 35427                           
 35428                           ;UART.c: 205: {
 35429                           ;UART.c: 206: UARTchar(*data);
 35430  008C2A  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35431  008C2E  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35432  008C32  0E00               	movlw	low (__mediumconst shr (0+16))
 35433  008C34  6EF8               	movwf	tblptru,c
 35434  008C36  0E0F               	movlw	(high __ramtop+-1)
 35435  008C38  64F7               	cpfsgt	tblptrh,c
 35436  008C3A  D003               	bra	i1u1163_27
 35437  008C3C  0008               	tblrd		*
 35438  008C3E  50F5               	movf	tablat,w,c
 35439  008C40  D005               	bra	i1u1163_20
 35440  008C42                     i1u1163_27:
 35441  008C42  CFF6 FFE9          	movff	tblptrl,fsr0l
 35442  008C46  CFF7 FFEA          	movff	tblptrh,fsr0h
 35443  008C4A  50EF               	movf	indf0,w,c
 35444  008C4C                     i1u1163_20:
 35445  008C4C  EC25  F049         	call	i1_UARTchar
 35446                           
 35447                           ;UART.c: 207: *data++;
 35448  008C50  4A02               	infsnz	i1UARTstring@data,f,c
 35449  008C52  2A03               	incf	i1UARTstring@data+1,f,c
 35450  008C54  D000               	goto	i1l10474
 35451  008C56                     i1l10474:
 35452  008C56  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35453  008C5A  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35454  008C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 35455  008C60  6EF8               	movwf	tblptru,c
 35456  008C62  0E0F               	movlw	(high __ramtop+-1)
 35457  008C64  64F7               	cpfsgt	tblptrh,c
 35458  008C66  D003               	bra	i1u1164_27
 35459  008C68  0008               	tblrd		*
 35460  008C6A  50F5               	movf	tablat,w,c
 35461  008C6C  D005               	bra	i1u1164_20
 35462  008C6E                     i1u1164_27:
 35463  008C6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 35464  008C72  CFF7 FFEA          	movff	tblptrh,fsr0h
 35465  008C76  50EF               	movf	indf0,w,c
 35466  008C78                     i1u1164_20:
 35467  008C78  0900               	iorlw	0
 35468  008C7A  A4D8               	btfss	status,2,c
 35469  008C7C  D7D6               	goto	i1l10470
 35470  008C7E  0012               	return		;funcret
 35471  008C80                     __end_ofi1_UARTstring:
 35472                           	opt stack 0
 35473                           pclatu	equ	0xFFB
 35474                           pclath	equ	0xFFA
 35475                           tblptru	equ	0xFF8
 35476                           tblptrh	equ	0xFF7
 35477                           tblptrl	equ	0xFF6
 35478                           tablat	equ	0xFF5
 35479                           prodh	equ	0xFF4
 35480                           prodl	equ	0xFF3
 35481                           intcon	equ	0xFF2
 35482                           intcon2	equ	0xFF1
 35483                           indf0	equ	0xFEF
 35484                           postinc0	equ	0xFEE
 35485                           plusw0	equ	0xFEB
 35486                           fsr0h	equ	0xFEA
 35487                           fsr0l	equ	0xFE9
 35488                           wreg	equ	0xFE8
 35489                           indf1	equ	0xFE7
 35490                           postdec1	equ	0xFE5
 35491                           fsr1h	equ	0xFE2
 35492                           fsr1l	equ	0xFE1
 35493                           bsr	equ	0xFE0
 35494                           indf2	equ	0xFDF
 35495                           postinc2	equ	0xFDE
 35496                           postdec2	equ	0xFDD
 35497                           plusw2	equ	0xFDB
 35498                           fsr2h	equ	0xFDA
 35499                           fsr2l	equ	0xFD9
 35500                           status	equ	0xFD8
 35501                           
 35502 ;; *************** function i1_ReadUSART *****************
 35503 ;; Defined at:
 35504 ;;		line 227 in file "UART.c"
 35505 ;; Parameters:    Size  Location     Type
 35506 ;;		None
 35507 ;; Auto vars:     Size  Location     Type
 35508 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 35509 ;; Return value:  Size  Location     Type
 35510 ;;                  1    wreg      unsigned char 
 35511 ;; Registers used:
 35512 ;;		wreg, status,2
 35513 ;; Tracked objects:
 35514 ;;		On entry : 0/0
 35515 ;;		On exit  : 0/0
 35516 ;;		Unchanged: 0/0
 35517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35522 ;;Total ram usage:        1 bytes
 35523 ;; Hardware stack levels used:    1
 35524 ;; Hardware stack levels required when called:    2
 35525 ;; This function calls:
 35526 ;;		Nothing
 35527 ;; This function is called by:
 35528 ;;		_low_isr
 35529 ;; This function uses a non-reentrant model
 35530 ;;
 35531                           
 35532                           	psect	text105
 35533  00928E                     __ptext105:
 35534                           	opt stack 0
 35535  00928E                     i1_ReadUSART:
 35536                           	opt stack 19
 35537                           
 35538                           ;UART.c: 229: unsigned char data;
 35539                           ;UART.c: 231: if(RCSTAbits.OERR)
 35540                           
 35541                           ;incstack = 0
 35542  00928E  A2AB               	btfss	4011,1,c	;volatile
 35543  009290  D004               	goto	i1l655
 35544                           
 35545                           ;UART.c: 232: {
 35546                           ;UART.c: 234: RCSTAbits.CREN = 0;
 35547  009292  98AB               	bcf	4011,4,c	;volatile
 35548                           
 35549                           ;UART.c: 235: RCSTAbits.CREN = 1;
 35550  009294  88AB               	bsf	4011,4,c	;volatile
 35551                           
 35552                           ;UART.c: 236: return 0;
 35553  009296  0E00               	movlw	0
 35554  009298  0012               	return	
 35555  00929A                     i1l655:
 35556                           
 35557                           ;UART.c: 237: }
 35558                           ;UART.c: 239: data = RCREG;
 35559  00929A  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 35560                           
 35561                           ;UART.c: 240: return (data);
 35562  00929E  5001               	movf	i1ReadUSART@data,w,c
 35563  0092A0  0012               	return	
 35564  0092A2  0012               	return		;funcret
 35565  0092A4                     __end_ofi1_ReadUSART:
 35566                           	opt stack 0
 35567                           pclatu	equ	0xFFB
 35568                           pclath	equ	0xFFA
 35569                           tblptru	equ	0xFF8
 35570                           tblptrh	equ	0xFF7
 35571                           tblptrl	equ	0xFF6
 35572                           tablat	equ	0xFF5
 35573                           prodh	equ	0xFF4
 35574                           prodl	equ	0xFF3
 35575                           intcon	equ	0xFF2
 35576                           intcon2	equ	0xFF1
 35577                           indf0	equ	0xFEF
 35578                           postinc0	equ	0xFEE
 35579                           plusw0	equ	0xFEB
 35580                           fsr0h	equ	0xFEA
 35581                           fsr0l	equ	0xFE9
 35582                           wreg	equ	0xFE8
 35583                           indf1	equ	0xFE7
 35584                           postdec1	equ	0xFE5
 35585                           fsr1h	equ	0xFE2
 35586                           fsr1l	equ	0xFE1
 35587                           bsr	equ	0xFE0
 35588                           indf2	equ	0xFDF
 35589                           postinc2	equ	0xFDE
 35590                           postdec2	equ	0xFDD
 35591                           plusw2	equ	0xFDB
 35592                           fsr2h	equ	0xFDA
 35593                           fsr2l	equ	0xFD9
 35594                           status	equ	0xFD8
 35595                           
 35596 ;; *************** function i1_BlueConnected *****************
 35597 ;; Defined at:
 35598 ;;		line 87 in file "Bluetooth.c"
 35599 ;; Parameters:    Size  Location     Type
 35600 ;;		None
 35601 ;; Auto vars:     Size  Location     Type
 35602 ;;		None
 35603 ;; Return value:  Size  Location     Type
 35604 ;;                  1    wreg      unsigned char 
 35605 ;; Registers used:
 35606 ;;		wreg
 35607 ;; Tracked objects:
 35608 ;;		On entry : 0/0
 35609 ;;		On exit  : 0/0
 35610 ;;		Unchanged: 0/0
 35611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35616 ;;Total ram usage:        0 bytes
 35617 ;; Hardware stack levels used:    1
 35618 ;; Hardware stack levels required when called:    2
 35619 ;; This function calls:
 35620 ;;		Nothing
 35621 ;; This function is called by:
 35622 ;;		_low_isr
 35623 ;; This function uses a non-reentrant model
 35624 ;;
 35625                           
 35626                           	psect	text106
 35627  009370                     __ptext106:
 35628                           	opt stack 0
 35629  009370                     i1_BlueConnected:
 35630                           	opt stack 19
 35631                           
 35632                           ;Bluetooth.c: 90: if((PORTA & 0x02) == 0x02)
 35633                           
 35634                           ;incstack = 0
 35635  009370  A280               	btfss	3968,1,c	;volatile
 35636  009372  D002               	goto	i1l11580
 35637                           
 35638                           ;Bluetooth.c: 91: {
 35639                           ;Bluetooth.c: 92: return 1;
 35640  009374  0E01               	movlw	1
 35641  009376  0012               	return	
 35642  009378                     i1l11580:
 35643                           
 35644                           ;Bluetooth.c: 93: }
 35645                           ;Bluetooth.c: 94: return 0;
 35646  009378  0E00               	movlw	0
 35647  00937A  0012               	return	
 35648  00937C  0012               	return		;funcret
 35649  00937E                     __end_ofi1_BlueConnected:
 35650                           	opt stack 0
 35651                           pclatu	equ	0xFFB
 35652                           pclath	equ	0xFFA
 35653                           tblptru	equ	0xFF8
 35654                           tblptrh	equ	0xFF7
 35655                           tblptrl	equ	0xFF6
 35656                           tablat	equ	0xFF5
 35657                           prodh	equ	0xFF4
 35658                           prodl	equ	0xFF3
 35659                           intcon	equ	0xFF2
 35660                           intcon2	equ	0xFF1
 35661                           indf0	equ	0xFEF
 35662                           postinc0	equ	0xFEE
 35663                           plusw0	equ	0xFEB
 35664                           fsr0h	equ	0xFEA
 35665                           fsr0l	equ	0xFE9
 35666                           wreg	equ	0xFE8
 35667                           indf1	equ	0xFE7
 35668                           postdec1	equ	0xFE5
 35669                           fsr1h	equ	0xFE2
 35670                           fsr1l	equ	0xFE1
 35671                           bsr	equ	0xFE0
 35672                           indf2	equ	0xFDF
 35673                           postinc2	equ	0xFDE
 35674                           postdec2	equ	0xFDD
 35675                           plusw2	equ	0xFDB
 35676                           fsr2h	equ	0xFDA
 35677                           fsr2l	equ	0xFD9
 35678                           status	equ	0xFD8
 35679                           
 35680 ;; *************** function _IsCharacter *****************
 35681 ;; Defined at:
 35682 ;;		line 113 in file "MISC.c"
 35683 ;; Parameters:    Size  Location     Type
 35684 ;;  data            1    wreg     unsigned char 
 35685 ;; Auto vars:     Size  Location     Type
 35686 ;;  data            1    0[COMRAM] unsigned char 
 35687 ;; Return value:  Size  Location     Type
 35688 ;;                  1    wreg      unsigned char 
 35689 ;; Registers used:
 35690 ;;		wreg, status,2, status,0
 35691 ;; Tracked objects:
 35692 ;;		On entry : 0/0
 35693 ;;		On exit  : 0/0
 35694 ;;		Unchanged: 0/0
 35695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35700 ;;Total ram usage:        1 bytes
 35701 ;; Hardware stack levels used:    1
 35702 ;; Hardware stack levels required when called:    2
 35703 ;; This function calls:
 35704 ;;		Nothing
 35705 ;; This function is called by:
 35706 ;;		_low_isr
 35707 ;; This function uses a non-reentrant model
 35708 ;;
 35709                           
 35710                           	psect	text107
 35711  009232                     __ptext107:
 35712                           	opt stack 0
 35713  009232                     _IsCharacter:
 35714                           	opt stack 19
 35715                           
 35716                           ;incstack = 0
 35717                           ;IsCharacter@data stored from wreg
 35718  009232  6E01               	movwf	IsCharacter@data,c
 35719                           
 35720                           ;MISC.c: 115: if(data >= 32 && data <= 126)
 35721  009234  0E1F               	movlw	31
 35722  009236  6401               	cpfsgt	IsCharacter@data,c
 35723  009238  D005               	goto	i1l11350
 35724  00923A  0E7F               	movlw	127
 35725  00923C  6001               	cpfslt	IsCharacter@data,c
 35726  00923E  D002               	goto	i1l11350
 35727                           
 35728                           ;MISC.c: 116: {
 35729                           ;MISC.c: 117: return 1;
 35730  009240  0E01               	movlw	1
 35731  009242  0012               	return	
 35732  009244                     i1l11350:
 35733                           
 35734                           ;MISC.c: 118: }
 35735                           ;MISC.c: 119: return 0;
 35736  009244  0E00               	movlw	0
 35737  009246  0012               	return	
 35738  009248  0012               	return		;funcret
 35739  00924A                     __end_of_IsCharacter:
 35740                           	opt stack 0
 35741                           pclatu	equ	0xFFB
 35742                           pclath	equ	0xFFA
 35743                           tblptru	equ	0xFF8
 35744                           tblptrh	equ	0xFF7
 35745                           tblptrl	equ	0xFF6
 35746                           tablat	equ	0xFF5
 35747                           prodh	equ	0xFF4
 35748                           prodl	equ	0xFF3
 35749                           intcon	equ	0xFF2
 35750                           intcon2	equ	0xFF1
 35751                           indf0	equ	0xFEF
 35752                           postinc0	equ	0xFEE
 35753                           plusw0	equ	0xFEB
 35754                           fsr0h	equ	0xFEA
 35755                           fsr0l	equ	0xFE9
 35756                           wreg	equ	0xFE8
 35757                           indf1	equ	0xFE7
 35758                           postdec1	equ	0xFE5
 35759                           fsr1h	equ	0xFE2
 35760                           fsr1l	equ	0xFE1
 35761                           bsr	equ	0xFE0
 35762                           indf2	equ	0xFDF
 35763                           postinc2	equ	0xFDE
 35764                           postdec2	equ	0xFDD
 35765                           plusw2	equ	0xFDB
 35766                           fsr2h	equ	0xFDA
 35767                           fsr2l	equ	0xFD9
 35768                           status	equ	0xFD8
 35769                           
 35770 ;; *************** function _EraseScreen *****************
 35771 ;; Defined at:
 35772 ;;		line 308 in file "UART.c"
 35773 ;; Parameters:    Size  Location     Type
 35774 ;;  characters      1    wreg     unsigned char 
 35775 ;; Auto vars:     Size  Location     Type
 35776 ;;  characters      1    1[COMRAM] unsigned char 
 35777 ;;  i               1    2[COMRAM] unsigned char 
 35778 ;; Return value:  Size  Location     Type
 35779 ;;		None               void
 35780 ;; Registers used:
 35781 ;;		wreg, status,2, status,0, cstack
 35782 ;; Tracked objects:
 35783 ;;		On entry : 0/0
 35784 ;;		On exit  : 0/0
 35785 ;;		Unchanged: 0/0
 35786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35791 ;;Total ram usage:        2 bytes
 35792 ;; Hardware stack levels used:    1
 35793 ;; Hardware stack levels required when called:    3
 35794 ;; This function calls:
 35795 ;;		i1_UARTchar
 35796 ;; This function is called by:
 35797 ;;		_low_isr
 35798 ;; This function uses a non-reentrant model
 35799 ;;
 35800                           
 35801                           	psect	text108
 35802  00919A                     __ptext108:
 35803                           	opt stack 0
 35804  00919A                     _EraseScreen:
 35805                           	opt stack 18
 35806                           
 35807                           ;incstack = 0
 35808                           ;EraseScreen@characters stored from wreg
 35809  00919A  6E02               	movwf	EraseScreen@characters,c
 35810                           
 35811                           ;UART.c: 310: unsigned char i;
 35812                           ;UART.c: 312: UARTchar('\r');
 35813  00919C  0E0D               	movlw	13
 35814  00919E  EC25  F049         	call	i1_UARTchar
 35815                           
 35816                           ;UART.c: 313: for (i = 0; i < characters; i++)
 35817  0091A2  0E00               	movlw	0
 35818  0091A4  6E03               	movwf	EraseScreen@i,c
 35819  0091A6  D005               	goto	i1l11362
 35820  0091A8                     i1l11358:
 35821                           
 35822                           ;UART.c: 314: {
 35823                           ;UART.c: 315: UARTchar(' ');
 35824  0091A8  0E20               	movlw	32
 35825  0091AA  EC25  F049         	call	i1_UARTchar
 35826  0091AE  2A03               	incf	EraseScreen@i,f,c
 35827  0091B0  D000               	goto	i1l11362
 35828  0091B2                     i1l11362:
 35829  0091B2  5002               	movf	EraseScreen@characters,w,c
 35830  0091B4  5C03               	subwf	EraseScreen@i,w,c
 35831  0091B6  A0D8               	btfss	status,0,c
 35832  0091B8  D7F7               	goto	i1l11358
 35833                           
 35834                           ;UART.c: 316: }
 35835                           ;UART.c: 317: UARTchar('\r');
 35836  0091BA  0E0D               	movlw	13
 35837  0091BC  EC25  F049         	call	i1_UARTchar
 35838  0091C0  0012               	return		;funcret
 35839  0091C2                     __end_of_EraseScreen:
 35840                           	opt stack 0
 35841                           pclatu	equ	0xFFB
 35842                           pclath	equ	0xFFA
 35843                           tblptru	equ	0xFF8
 35844                           tblptrh	equ	0xFF7
 35845                           tblptrl	equ	0xFF6
 35846                           tablat	equ	0xFF5
 35847                           prodh	equ	0xFF4
 35848                           prodl	equ	0xFF3
 35849                           intcon	equ	0xFF2
 35850                           intcon2	equ	0xFF1
 35851                           indf0	equ	0xFEF
 35852                           postinc0	equ	0xFEE
 35853                           plusw0	equ	0xFEB
 35854                           fsr0h	equ	0xFEA
 35855                           fsr0l	equ	0xFE9
 35856                           wreg	equ	0xFE8
 35857                           indf1	equ	0xFE7
 35858                           postdec1	equ	0xFE5
 35859                           fsr1h	equ	0xFE2
 35860                           fsr1l	equ	0xFE1
 35861                           bsr	equ	0xFE0
 35862                           indf2	equ	0xFDF
 35863                           postinc2	equ	0xFDE
 35864                           postdec2	equ	0xFDD
 35865                           plusw2	equ	0xFDB
 35866                           fsr2h	equ	0xFDA
 35867                           fsr2l	equ	0xFD9
 35868                           status	equ	0xFD8
 35869                           
 35870 ;; *************** function i1_UARTchar *****************
 35871 ;; Defined at:
 35872 ;;		line 188 in file "UART.c"
 35873 ;; Parameters:    Size  Location     Type
 35874 ;;  data            1    wreg     unsigned char 
 35875 ;; Auto vars:     Size  Location     Type
 35876 ;;  data            1    0[COMRAM] unsigned char 
 35877 ;; Return value:  Size  Location     Type
 35878 ;;		None               void
 35879 ;; Registers used:
 35880 ;;		wreg, status,2
 35881 ;; Tracked objects:
 35882 ;;		On entry : 0/0
 35883 ;;		On exit  : 0/0
 35884 ;;		Unchanged: 0/0
 35885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35890 ;;Total ram usage:        1 bytes
 35891 ;; Hardware stack levels used:    1
 35892 ;; Hardware stack levels required when called:    2
 35893 ;; This function calls:
 35894 ;;		Nothing
 35895 ;; This function is called by:
 35896 ;;		_EraseScreen
 35897 ;;		_low_isr
 35898 ;;		i1_UARTstring
 35899 ;;		i1_UARTstringCRLN
 35900 ;; This function uses a non-reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text109
 35904  00924A                     __ptext109:
 35905                           	opt stack 0
 35906  00924A                     i1_UARTchar:
 35907                           	opt stack 17
 35908                           
 35909                           ;incstack = 0
 35910                           ;i1UARTchar@data stored from wreg
 35911  00924A  6E01               	movwf	i1UARTchar@data,c
 35912                           
 35913                           ;UART.c: 190: if(data != 0)
 35914  00924C  5001               	movf	i1UARTchar@data,w,c
 35915  00924E  B4D8               	btfsc	status,2,c
 35916  009250  0012               	return	
 35917                           
 35918                           ;UART.c: 191: {
 35919                           ;UART.c: 192: TXREG = data;
 35920  009252  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 35921                           
 35922                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 35923  009256  D000               	goto	i1l640
 35924  009258                     i1l640:
 35925  009258  B2AC               	btfsc	4012,1,c	;volatile
 35926  00925A  0012               	return	
 35927  00925C  D7FD               	goto	i1l640
 35928  00925E  0012               	return	
 35929  009260  0012               	return		;funcret
 35930  009262                     __end_ofi1_UARTchar:
 35931                           	opt stack 0
 35932                           pclatu	equ	0xFFB
 35933                           pclath	equ	0xFFA
 35934                           tblptru	equ	0xFF8
 35935                           tblptrh	equ	0xFF7
 35936                           tblptrl	equ	0xFF6
 35937                           tablat	equ	0xFF5
 35938                           prodh	equ	0xFF4
 35939                           prodl	equ	0xFF3
 35940                           intcon	equ	0xFF2
 35941                           intcon2	equ	0xFF1
 35942                           indf0	equ	0xFEF
 35943                           postinc0	equ	0xFEE
 35944                           plusw0	equ	0xFEB
 35945                           fsr0h	equ	0xFEA
 35946                           fsr0l	equ	0xFE9
 35947                           wreg	equ	0xFE8
 35948                           indf1	equ	0xFE7
 35949                           postdec1	equ	0xFE5
 35950                           fsr1h	equ	0xFE2
 35951                           fsr1l	equ	0xFE1
 35952                           bsr	equ	0xFE0
 35953                           indf2	equ	0xFDF
 35954                           postinc2	equ	0xFDE
 35955                           postdec2	equ	0xFDD
 35956                           plusw2	equ	0xFDB
 35957                           fsr2h	equ	0xFDA
 35958                           fsr2l	equ	0xFD9
 35959                           status	equ	0xFD8
 35960                           
 35961 ;; *************** function _high_isr *****************
 35962 ;; Defined at:
 35963 ;;		line 59 in file "interrupts.c"
 35964 ;; Parameters:    Size  Location     Type
 35965 ;;		None
 35966 ;; Auto vars:     Size  Location     Type
 35967 ;;  Time0           2   34[COMRAM] unsigned int 
 35968 ;;  IRpin           1   33[COMRAM] unsigned char 
 35969 ;; Return value:  Size  Location     Type
 35970 ;;		None               void
 35971 ;; Registers used:
 35972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35973 ;; Tracked objects:
 35974 ;;		On entry : 0/0
 35975 ;;		On exit  : 0/0
 35976 ;;		Unchanged: 0/0
 35977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35979 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35980 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35981 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35982 ;;Total ram usage:       21 bytes
 35983 ;; Hardware stack levels used:    1
 35984 ;; Hardware stack levels required when called:    1
 35985 ;; This function calls:
 35986 ;;		_IRrawToNEC
 35987 ;;		_ResetTimer3
 35988 ;;		i2_ReadIRpin
 35989 ;;		i2_ResetTimer0
 35990 ;; This function is called by:
 35991 ;;		Interrupt level 2
 35992 ;; This function uses a non-reentrant model
 35993 ;;
 35994                           
 35995                           	psect	intcode
 35996  000008                     __pintcode:
 35997                           	opt stack 0
 35998  000008                     _high_isr:
 35999                           	opt stack 17
 36000                           
 36001                           ;incstack = 0
 36002  000008  CFFA F06B          	movff	pclath,??_high_isr+4
 36003  00000C  CFFB F06C          	movff	pclatu,??_high_isr+5
 36004  000010  CFE9 F06D          	movff	fsr0l,??_high_isr+6
 36005  000014  EF5C  F01E         	goto	int_func
 36006                           pclatu	equ	0xFFB
 36007                           pclath	equ	0xFFA
 36008                           tblptru	equ	0xFF8
 36009                           tblptrh	equ	0xFF7
 36010                           tblptrl	equ	0xFF6
 36011                           tablat	equ	0xFF5
 36012                           prodh	equ	0xFF4
 36013                           prodl	equ	0xFF3
 36014                           intcon	equ	0xFF2
 36015                           intcon2	equ	0xFF1
 36016                           indf0	equ	0xFEF
 36017                           postinc0	equ	0xFEE
 36018                           plusw0	equ	0xFEB
 36019                           fsr0h	equ	0xFEA
 36020                           fsr0l	equ	0xFE9
 36021                           wreg	equ	0xFE8
 36022                           indf1	equ	0xFE7
 36023                           postdec1	equ	0xFE5
 36024                           fsr1h	equ	0xFE2
 36025                           fsr1l	equ	0xFE1
 36026                           bsr	equ	0xFE0
 36027                           indf2	equ	0xFDF
 36028                           postinc2	equ	0xFDE
 36029                           postdec2	equ	0xFDD
 36030                           plusw2	equ	0xFDB
 36031                           fsr2h	equ	0xFDA
 36032                           fsr2l	equ	0xFD9
 36033                           status	equ	0xFD8
 36034                           
 36035                           	psect	intcode_body
 36036  003CB8                     __pintcode_body:
 36037                           	opt stack 17
 36038  003CB8                     int_func:
 36039                           	opt stack 17
 36040  003CB8  CFEA F06E          	movff	fsr0h,??_high_isr+7
 36041  003CBC  CFE1 F06F          	movff	fsr1l,??_high_isr+8
 36042  003CC0  CFE2 F070          	movff	fsr1h,??_high_isr+9
 36043  003CC4  CFD9 F071          	movff	fsr2l,??_high_isr+10
 36044  003CC8  CFDA F072          	movff	fsr2h,??_high_isr+11
 36045  003CCC  CFF3 F073          	movff	prodl,??_high_isr+12
 36046  003CD0  CFF4 F074          	movff	prodh,??_high_isr+13
 36047  003CD4  CFF6 F075          	movff	tblptrl,??_high_isr+14
 36048  003CD8  CFF7 F076          	movff	tblptrh,??_high_isr+15
 36049  003CDC  CFF8 F077          	movff	tblptru,??_high_isr+16
 36050  003CE0  CFF5 F078          	movff	tablat,??_high_isr+17
 36051                           
 36052                           ;interrupts.c: 68: unsigned char IRpin;
 36053                           ;interrupts.c: 69: unsigned int Time0;
 36054                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 36055  003CE4  9EF2               	bcf	intcon,7,c	;volatile
 36056                           
 36057                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 36058  003CE6  A0F2               	btfss	intcon,0,c	;volatile
 36059  003CE8  D072               	goto	i2l1196
 36060                           
 36061                           ;interrupts.c: 74: {
 36062                           ;interrupts.c: 75: __nop();
 36063  003CEA  F000               	nop	
 36064                           
 36065                           ;interrupts.c: 76: __nop();
 36066  003CEC  F000               	nop	
 36067                           
 36068                           ;interrupts.c: 77: IRtimeout = 0;
 36069  003CEE  0E00               	movlw	0
 36070  003CF0  0102               	movlb	2	; () banked
 36071  003CF2  6F84               	movwf	_IRtimeout& (0+255),b
 36072  003CF4  0E00               	movlw	0
 36073  003CF6  6F85               	movwf	(_IRtimeout+1)& (0+255),b
 36074  003CF8  0E00               	movlw	0
 36075  003CFA  6F86               	movwf	(_IRtimeout+2)& (0+255),b
 36076  003CFC  0E00               	movlw	0
 36077  003CFE  6F87               	movwf	(_IRtimeout+3)& (0+255),b
 36078                           
 36079                           ; BSR set to: 2
 36080                           ;interrupts.c: 78: IRpin = ReadIRpin();
 36081  003D00  ECBF  F049         	call	i2_ReadIRpin	;wreg free
 36082  003D04  6E22               	movwf	high_isr@IRpin,c
 36083                           
 36084                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 36085  003D06  5031               	movf	_IRpinOLD,w,c
 36086  003D08  1822               	xorwf	high_isr@IRpin,w,c
 36087  003D0A  B4D8               	btfsc	status,2,c
 36088  003D0C  D05D               	goto	i2l1197
 36089                           
 36090                           ;interrupts.c: 80: {
 36091                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 36092  003D0E  8ED5               	bsf	4053,7,c	;volatile
 36093                           
 36094                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 36095  003D10  8AF2               	bsf	intcon,5,c	;volatile
 36096                           
 36097                           ;interrupts.c: 83: ReceivingIR = 19;
 36098  003D12  0E13               	movlw	19
 36099  003D14  6E42               	movwf	_ReceivingIR,c	;volatile
 36100                           
 36101                           ;interrupts.c: 84: IR_New_Code = 0;
 36102  003D16  0E00               	movlw	0
 36103  003D18  0100               	movlb	0	; () banked
 36104  003D1A  6FE5               	movwf	_IR_New_Code& (0+255),b
 36105                           
 36106                           ; BSR set to: 0
 36107                           ;interrupts.c: 85: Time0 = TMR0L;
 36108  003D1C  CFD6 F023          	movff	4054,high_isr@Time0	;volatile
 36109  003D20  6A24               	clrf	high_isr@Time0+1,c
 36110                           
 36111                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 36112  003D22  50D7               	movf	4055,w,c	;volatile
 36113  003D24  2624               	addwf	high_isr@Time0+1,f,c
 36114                           
 36115                           ; BSR set to: 0
 36116                           ;interrupts.c: 87: if(IRrawCodeNum < 72)
 36117  003D26  0E48               	movlw	72
 36118  003D28  6032               	cpfslt	_IRrawCodeNum,c
 36119  003D2A  D049               	goto	i2l1198
 36120                           
 36121                           ; BSR set to: 0
 36122                           ;interrupts.c: 88: {
 36123                           ;interrupts.c: 89: if(IRrawCodeNum > 0)
 36124  003D2C  5032               	movf	_IRrawCodeNum,w,c
 36125  003D2E  B4D8               	btfsc	status,2,c
 36126  003D30  D041               	goto	i2l16250
 36127                           
 36128                           ; BSR set to: 0
 36129                           ;interrupts.c: 90: {
 36130                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 36131  003D32  0EFE               	movlw	254
 36132  003D34  0100               	movlb	0	; () banked
 36133  003D36  6F67               	movwf	??_high_isr& (0+255),b
 36134  003D38  0EFF               	movlw	255
 36135  003D3A  0100               	movlb	0	; () banked
 36136  003D3C  6F68               	movwf	(??_high_isr+1)& (0+255),b
 36137  003D3E  5032               	movf	_IRrawCodeNum,w,c
 36138  003D40  0100               	movlb	0	; () banked
 36139  003D42  6F69               	movwf	(??_high_isr+2)& (0+255),b
 36140  003D44  6B6A               	clrf	(??_high_isr+3)& (0+255),b
 36141  003D46  90D8               	bcf	status,0,c
 36142  003D48  0100               	movlb	0	; () banked
 36143  003D4A  3769               	rlcf	(??_high_isr+2)& (0+255),f,b
 36144  003D4C  376A               	rlcf	(??_high_isr+3)& (0+255),f,b
 36145  003D4E  0100               	movlb	0	; () banked
 36146  003D50  5167               	movf	??_high_isr& (0+255),w,b
 36147  003D52  0100               	movlb	0	; () banked
 36148  003D54  2769               	addwf	(??_high_isr+2)& (0+255),f,b
 36149  003D56  0100               	movlb	0	; () banked
 36150  003D58  5168               	movf	(??_high_isr+1)& (0+255),w,b
 36151  003D5A  0100               	movlb	0	; () banked
 36152  003D5C  236A               	addwfc	(??_high_isr+3)& (0+255),f,b
 36153  003D5E  0E00               	movlw	low _IRRawCode
 36154  003D60  0100               	movlb	0	; () banked
 36155  003D62  2569               	addwf	(??_high_isr+2)& (0+255),w,b
 36156  003D64  6ED9               	movwf	fsr2l,c
 36157  003D66  0E07               	movlw	high _IRRawCode
 36158  003D68  0100               	movlb	0	; () banked
 36159  003D6A  216A               	addwfc	(??_high_isr+3)& (0+255),w,b
 36160  003D6C  6EDA               	movwf	fsr2h,c
 36161  003D6E  C023  FFDE         	movff	high_isr@Time0,postinc2
 36162  003D72  C024  FFDD         	movff	high_isr@Time0+1,postdec2
 36163                           
 36164                           ; BSR set to: 0
 36165                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000) ||
 36166                           ;interrupts.c: 93: (Time0 <= 50000 && Time0 >= 45000))
 36167  003D76  0E09               	movlw	9
 36168  003D78  5C23               	subwf	high_isr@Time0,w,c
 36169  003D7A  0E52               	movlw	82
 36170  003D7C  5824               	subwfb	high_isr@Time0+1,w,c
 36171  003D7E  B0D8               	btfsc	status,0,c
 36172  003D80  D006               	goto	i2l16244
 36173                           
 36174                           ; BSR set to: 0
 36175  003D82  0E38               	movlw	56
 36176  003D84  5C23               	subwf	high_isr@Time0,w,c
 36177  003D86  0E4A               	movlw	74
 36178  003D88  5824               	subwfb	high_isr@Time0+1,w,c
 36179  003D8A  B0D8               	btfsc	status,0,c
 36180  003D8C  D00C               	goto	i2l1202
 36181  003D8E                     i2l16244:
 36182                           
 36183                           ; BSR set to: 0
 36184  003D8E  0E51               	movlw	81
 36185  003D90  5C23               	subwf	high_isr@Time0,w,c
 36186  003D92  0EC3               	movlw	195
 36187  003D94  5824               	subwfb	high_isr@Time0+1,w,c
 36188  003D96  B0D8               	btfsc	status,0,c
 36189  003D98  D00A               	goto	i2l16248
 36190                           
 36191                           ; BSR set to: 0
 36192  003D9A  0EC8               	movlw	200
 36193  003D9C  5C23               	subwf	high_isr@Time0,w,c
 36194  003D9E  0EAF               	movlw	175
 36195  003DA0  5824               	subwfb	high_isr@Time0+1,w,c
 36196  003DA2  A0D8               	btfss	status,0,c
 36197  003DA4  D004               	goto	i2l16248
 36198  003DA6                     i2l1202:
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;interrupts.c: 94: {
 36202                           ;interrupts.c: 96: (IOCBbits.IOCB4 = 0);
 36203  003DA6  987D               	bcf	3965,4,c	;volatile
 36204                           
 36205                           ;interrupts.c: 97: INTCONbits.RBIE = 0;
 36206  003DA8  96F2               	bcf	intcon,3,c	;volatile
 36207                           
 36208                           ;interrupts.c: 99: INTCONbits.TMR0IF = 1;
 36209  003DAA  84F2               	bsf	intcon,2,c	;volatile
 36210                           
 36211                           ;interrupts.c: 100: }
 36212  003DAC  D006               	goto	i2l16252
 36213  003DAE                     i2l16248:
 36214                           
 36215                           ; BSR set to: 0
 36216                           ;interrupts.c: 101: else
 36217                           ;interrupts.c: 102: {
 36218                           ;interrupts.c: 103: ResetTimer0();
 36219  003DAE  ECD5  F049         	call	i2_ResetTimer0	;wreg free
 36220                           
 36221                           ;interrupts.c: 104: }
 36222                           ;interrupts.c: 105: }
 36223  003DB2  D003               	goto	i2l16252
 36224  003DB4                     i2l16250:
 36225                           
 36226                           ;interrupts.c: 106: else
 36227                           ;interrupts.c: 107: {
 36228                           ;interrupts.c: 108: ResetTimer0();
 36229  003DB4  ECD5  F049         	call	i2_ResetTimer0	;wreg free
 36230  003DB8  D000               	goto	i2l16252
 36231  003DBA                     i2l16252:
 36232                           
 36233                           ;interrupts.c: 109: }
 36234                           ;interrupts.c: 110: IRrawCodeNum++;
 36235  003DBA  2A32               	incf	_IRrawCodeNum,f,c
 36236                           
 36237                           ;interrupts.c: 111: }
 36238  003DBC  D002               	goto	i2l1207
 36239  003DBE                     i2l1198:
 36240                           
 36241                           ; BSR set to: 0
 36242                           ;interrupts.c: 112: else
 36243                           ;interrupts.c: 113: {
 36244                           ;interrupts.c: 114: (IOCBbits.IOCB4 = 0);
 36245  003DBE  987D               	bcf	3965,4,c	;volatile
 36246                           
 36247                           ;interrupts.c: 115: INTCONbits.RBIE = 0;
 36248  003DC0  96F2               	bcf	intcon,3,c	;volatile
 36249  003DC2                     i2l1207:
 36250                           
 36251                           ;interrupts.c: 116: }
 36252                           ;interrupts.c: 117: IRpinOLD = IRpin;
 36253  003DC2  C022  F031         	movff	high_isr@IRpin,_IRpinOLD
 36254                           
 36255                           ;interrupts.c: 118: }
 36256  003DC6  D001               	goto	i2l1208
 36257  003DC8                     i2l1197:
 36258                           
 36259                           ;interrupts.c: 119: else
 36260                           ;interrupts.c: 120: {
 36261                           ;interrupts.c: 122: __nop();
 36262  003DC8  F000               	nop	
 36263  003DCA                     i2l1208:
 36264                           
 36265                           ;interrupts.c: 123: }
 36266                           ;interrupts.c: 125: INTCONbits.RBIF = 0;
 36267  003DCA  90F2               	bcf	intcon,0,c	;volatile
 36268                           
 36269                           ;interrupts.c: 126: }
 36270  003DCC  D209               	goto	i2l1209
 36271  003DCE                     i2l1196:
 36272                           
 36273                           ;interrupts.c: 127: else if(INTCONbits.TMR0IF)
 36274  003DCE  A4F2               	btfss	intcon,2,c	;volatile
 36275  003DD0  D021               	goto	i2l1210
 36276                           
 36277                           ;interrupts.c: 128: {
 36278                           ;interrupts.c: 130: (INTCONbits.TMR0IE = 0);
 36279  003DD2  9AF2               	bcf	intcon,5,c	;volatile
 36280                           
 36281                           ;interrupts.c: 131: (T0CONbits.TMR0ON = 0);
 36282  003DD4  9ED5               	bcf	4053,7,c	;volatile
 36283                           
 36284                           ;interrupts.c: 132: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 36285  003DD6  0E00               	movlw	low _IRRawCode
 36286  003DD8  6E1B               	movwf	IRrawToNEC@Raw,c
 36287  003DDA  0E07               	movlw	high _IRRawCode
 36288  003DDC  6E1C               	movwf	IRrawToNEC@Raw+1,c
 36289  003DDE  0EE1               	movlw	low _IR_NEC
 36290  003DE0  6E1D               	movwf	IRrawToNEC@NEC,c
 36291  003DE2  0E00               	movlw	high _IR_NEC
 36292  003DE4  6E1E               	movwf	IRrawToNEC@NEC+1,c
 36293  003DE6  0E01               	movlw	1
 36294  003DE8  6E1F               	movwf	IRrawToNEC@Invert,c
 36295  003DEA  ECE5  F027         	call	_IRrawToNEC	;wreg free
 36296  003DEE  0100               	movlb	0	; () banked
 36297  003DF0  6FE5               	movwf	_IR_New_Code& (0+255),b
 36298                           
 36299                           ; BSR set to: 0
 36300                           ;interrupts.c: 133: if(!IR_New_Code)
 36301  003DF2  0100               	movlb	0	; () banked
 36302  003DF4  51E5               	movf	_IR_New_Code& (0+255),w,b
 36303  003DF6  A4D8               	btfss	status,2,c
 36304  003DF8  D007               	goto	i2l16268
 36305                           
 36306                           ; BSR set to: 0
 36307                           ;interrupts.c: 134: {
 36308                           ;interrupts.c: 135: IRpinOLD = ReadIRpin();
 36309  003DFA  ECBF  F049         	call	i2_ReadIRpin	;wreg free
 36310  003DFE  6E31               	movwf	_IRpinOLD,c
 36311                           
 36312                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 36313  003E00  90F2               	bcf	intcon,0,c	;volatile
 36314                           
 36315                           ;interrupts.c: 137: (IOCBbits.IOCB4 = 1);
 36316  003E02  887D               	bsf	3965,4,c	;volatile
 36317                           
 36318                           ;interrupts.c: 138: INTCONbits.RBIE = 1;
 36319  003E04  86F2               	bsf	intcon,3,c	;volatile
 36320  003E06  D000               	goto	i2l16268
 36321  003E08                     i2l16268:
 36322                           
 36323                           ;interrupts.c: 139: }
 36324                           ;interrupts.c: 140: IRrawCodeNum = 0;
 36325  003E08  0E00               	movlw	0
 36326  003E0A  6E32               	movwf	_IRrawCodeNum,c
 36327                           
 36328                           ;interrupts.c: 141: ReceivingIR = 13;
 36329  003E0C  0E0D               	movlw	13
 36330  003E0E  6E42               	movwf	_ReceivingIR,c	;volatile
 36331                           
 36332                           ;interrupts.c: 142: INTCONbits.TMR0IF = 0;
 36333  003E10  94F2               	bcf	intcon,2,c	;volatile
 36334                           
 36335                           ;interrupts.c: 143: }
 36336  003E12  D1E6               	goto	i2l1209
 36337  003E14                     i2l1210:
 36338                           
 36339                           ;interrupts.c: 144: else if(PIR1bits.TMR2IF)
 36340  003E14  A29E               	btfss	3998,1,c	;volatile
 36341  003E16  D1D1               	goto	i2l1213
 36342                           
 36343                           ;interrupts.c: 145: {
 36344                           ;interrupts.c: 148: Timer2_Postscaler++;
 36345  003E18  2A3C               	incf	_Timer2_Postscaler,f,c
 36346                           
 36347                           ;interrupts.c: 149: if(RF_IR == 55)
 36348  003E1A  0E37               	movlw	55
 36349  003E1C  1840               	xorwf	_RF_IR,w,c
 36350  003E1E  A4D8               	btfss	status,2,c
 36351  003E20  D10C               	goto	i2l16508
 36352                           
 36353                           ;interrupts.c: 150: {
 36354                           ;interrupts.c: 152: if(Timer2_Postscaler >= RF_IR_Postscaler)
 36355  003E22  5041               	movf	_RF_IR_Postscaler,w,c	;volatile
 36356  003E24  5C3C               	subwf	_Timer2_Postscaler,w,c
 36357  003E26  A0D8               	btfss	status,0,c
 36358  003E28  D103               	goto	i2l16504
 36359                           
 36360                           ;interrupts.c: 153: {
 36361                           ;interrupts.c: 154: Timer2_Postscaler = 0;
 36362  003E2A  0E00               	movlw	0
 36363  003E2C  6E3C               	movwf	_Timer2_Postscaler,c
 36364                           
 36365                           ;interrupts.c: 155: if(RFsendCode[RFcodeBit] != 99)
 36366  003E2E  5037               	movf	_RFcodeBit,w,c
 36367  003E30  0D01               	mullw	1
 36368  003E32  0ED6               	movlw	low _RFsendCode
 36369  003E34  24F3               	addwf	prodl,w,c
 36370  003E36  6ED9               	movwf	fsr2l,c
 36371  003E38  0E01               	movlw	high _RFsendCode
 36372  003E3A  20F4               	addwfc	prodh,w,c
 36373  003E3C  6EDA               	movwf	fsr2h,c
 36374  003E3E  0E63               	movlw	99
 36375  003E40  18DE               	xorwf	postinc2,w,c
 36376  003E42  B4D8               	btfsc	status,2,c
 36377  003E44  D0B3               	goto	i2l16454
 36378                           
 36379                           ;interrupts.c: 156: {
 36380                           ;interrupts.c: 158: if(RFsendFlag)
 36381  003E46  5039               	movf	_RFsendFlag,w,c	;volatile
 36382  003E48  B4D8               	btfsc	status,2,c
 36383  003E4A  D0F2               	goto	i2l16504
 36384                           
 36385                           ;interrupts.c: 159: {
 36386                           ;interrupts.c: 160: if(RFsendCode[RFcodeBit] == 0)
 36387  003E4C  5037               	movf	_RFcodeBit,w,c
 36388  003E4E  0D01               	mullw	1
 36389  003E50  0ED6               	movlw	low _RFsendCode
 36390  003E52  24F3               	addwf	prodl,w,c
 36391  003E54  6ED9               	movwf	fsr2l,c
 36392  003E56  0E01               	movlw	high _RFsendCode
 36393  003E58  20F4               	addwfc	prodh,w,c
 36394  003E5A  6EDA               	movwf	fsr2h,c
 36395  003E5C  50DF               	movf	indf2,w,c
 36396  003E5E  A4D8               	btfss	status,2,c
 36397  003E60  D03F               	goto	i2l16346
 36398                           
 36399                           ;interrupts.c: 161: {
 36400                           ;interrupts.c: 163: if(RFConfig == 1)
 36401  003E62  0436               	decf	_RFConfig,w,c
 36402  003E64  A4D8               	btfss	status,2,c
 36403  003E66  D025               	goto	i2l16324
 36404                           
 36405                           ;interrupts.c: 164: {
 36406                           ;interrupts.c: 165: if(RFcodePlace == 1)
 36407  003E68  0438               	decf	_RFcodePlace,w,c
 36408  003E6A  A4D8               	btfss	status,2,c
 36409  003E6C  D007               	goto	i2l16298
 36410  003E6E  D077               	goto	i2l16412
 36411  003E70                     i2l16294:
 36412                           
 36413                           ;interrupts.c: 168: (PR2 = 8);
 36414  003E70  0E08               	movlw	8
 36415  003E72                     L26:
 36416  003E72  6ECB               	movwf	4043,c	;volatile
 36417  003E74  D076               	goto	i2l16416
 36418  003E76                     L28:
 36419                           
 36420                           ;interrupts.c: 170: (TMR2 = 0);
 36421  003E76  0E00               	movlw	0
 36422  003E78  6ECC               	movwf	4044,c	;volatile
 36423                           
 36424                           ;interrupts.c: 171: }
 36425  003E7A  D0DA               	goto	i2l16504
 36426  003E7C                     i2l16298:
 36427                           
 36428                           ;interrupts.c: 172: else if(RFcodePlace == 2)
 36429  003E7C  0E02               	movlw	2
 36430  003E7E  1838               	xorwf	_RFcodePlace,w,c
 36431  003E80  A4D8               	btfss	status,2,c
 36432  003E82  D004               	goto	i2l16306
 36433  003E84  D074               	goto	L42
 36434                           
 36435                           ;interrupts.c: 173: {
 36436                           ;interrupts.c: 174: (LATC &= ~0x20);
 36437  003E86  D03E               	goto	i2l16354
 36438  003E88                     i2l16304:
 36439                           
 36440                           ;interrupts.c: 176: RFcodePlace++;
 36441  003E88  2A38               	incf	_RFcodePlace,f,c
 36442                           
 36443                           ;interrupts.c: 177: }
 36444  003E8A  D0D2               	goto	i2l16504
 36445  003E8C                     i2l16306:
 36446                           
 36447                           ;interrupts.c: 178: else if(RFcodePlace == 3)
 36448  003E8C  0E03               	movlw	3
 36449  003E8E  1838               	xorwf	_RFcodePlace,w,c
 36450  003E90  A4D8               	btfss	status,2,c
 36451  003E92  D002               	goto	i2l16314
 36452  003E94  D064               	goto	i2l16412
 36453                           
 36454                           ;interrupts.c: 179: {
 36455                           ;interrupts.c: 180: (LATC |= 0x20);
 36456  003E96  D7EC               	goto	i2l16294
 36457  003E98                     i2l16314:
 36458                           
 36459                           ;interrupts.c: 185: else if(RFcodePlace == 4)
 36460  003E98  0E04               	movlw	4
 36461  003E9A  1838               	xorwf	_RFcodePlace,w,c
 36462  003E9C  A4D8               	btfss	status,2,c
 36463  003E9E  D004               	goto	i2l1226
 36464                           
 36465                           ;interrupts.c: 186: {
 36466                           ;interrupts.c: 187: (LATC &= ~0x20);
 36467  003EA0  9A8B               	bcf	3979,5,c	;volatile
 36468                           
 36469                           ;interrupts.c: 188: (PR2 = 24);
 36470  003EA2  0E18               	movlw	24
 36471  003EA4  D051               	goto	L27
 36472  003EA6  D016               	goto	i2l16340
 36473  003EA8                     i2l1226:
 36474                           
 36475                           ;interrupts.c: 192: else
 36476                           ;interrupts.c: 193: {
 36477                           ;interrupts.c: 195: (T2CONbits.TMR2ON = 0);
 36478  003EA8  94CA               	bcf	4042,2,c	;volatile
 36479  003EAA  D07B               	goto	i2l16452
 36480  003EAC                     L31:
 36481                           
 36482                           ;interrupts.c: 197: RFsendFlag = 0;
 36483  003EAC  0E00               	movlw	0
 36484  003EAE  6E39               	movwf	_RFsendFlag,c	;volatile
 36485                           
 36486                           ; BSR set to: 0
 36487                           ;interrupts.c: 198: }
 36488                           ;interrupts.c: 199: }
 36489                           
 36490                           ; BSR set to: 0
 36491                           
 36492                           ; BSR set to: 0
 36493                           
 36494                           ; BSR set to: 0
 36495  003EB0  D0BF               	goto	i2l16504
 36496  003EB2                     i2l16324:
 36497                           
 36498                           ;interrupts.c: 200: else if(RFConfig == 2)
 36499  003EB2  0E02               	movlw	2
 36500  003EB4  1836               	xorwf	_RFConfig,w,c
 36501  003EB6  A4D8               	btfss	status,2,c
 36502  003EB8  D7F7               	goto	i2l1226
 36503                           
 36504                           ;interrupts.c: 201: {
 36505                           ;interrupts.c: 203: if(RFcodePlace == 1)
 36506  003EBA  0438               	decf	_RFcodePlace,w,c
 36507  003EBC  A4D8               	btfss	status,2,c
 36508  003EBE  D003               	goto	i2l16334
 36509                           
 36510                           ;interrupts.c: 204: {
 36511                           ;interrupts.c: 205: (LATC |= 0x20);
 36512  003EC0  8A8B               	bsf	3979,5,c	;volatile
 36513                           
 36514                           ;interrupts.c: 206: (PR2 = 11);
 36515  003EC2  0E0B               	movlw	11
 36516  003EC4  D7D6               	goto	L26
 36517  003EC6                     i2l16334:
 36518                           
 36519                           ;interrupts.c: 210: else if(RFcodePlace == 2)
 36520  003EC6  0E02               	movlw	2
 36521  003EC8  1838               	xorwf	_RFcodePlace,w,c
 36522  003ECA  A4D8               	btfss	status,2,c
 36523  003ECC  D7ED               	goto	i2l1226
 36524                           
 36525                           ;interrupts.c: 211: {
 36526                           ;interrupts.c: 212: (LATC &= ~0x20);
 36527  003ECE  9A8B               	bcf	3979,5,c	;volatile
 36528                           
 36529                           ;interrupts.c: 213: (PR2 = 29);
 36530  003ED0  0E1D               	movlw	29
 36531  003ED2  D03A               	goto	L27
 36532  003ED4                     i2l16340:
 36533                           
 36534                           ;interrupts.c: 214: RFcodePlace = 1;
 36535  003ED4  0E01               	movlw	1
 36536  003ED6  6E38               	movwf	_RFcodePlace,c
 36537                           
 36538                           ;interrupts.c: 215: RFcodeBit++;
 36539  003ED8  2A37               	incf	_RFcodeBit,f,c
 36540                           
 36541                           ; BSR set to: 0
 36542                           ;interrupts.c: 223: }
 36543                           ;interrupts.c: 224: }
 36544                           
 36545                           ; BSR set to: 0
 36546                           
 36547                           ;interrupts.c: 222: RFsendFlag = 0;
 36548                           
 36549                           ;interrupts.c: 221: Sent = 1;
 36550                           
 36551                           ;interrupts.c: 217: else
 36552                           ;interrupts.c: 218: {
 36553                           ;interrupts.c: 220: (T2CONbits.TMR2ON = 0);
 36554                           
 36555                           ;interrupts.c: 216: }
 36556  003EDA  D0AA               	goto	i2l16504
 36557                           
 36558                           ;interrupts.c: 225: else
 36559                           ;interrupts.c: 226: {
 36560                           ;interrupts.c: 228: (T2CONbits.TMR2ON = 0);
 36561  003EDC  D062               	goto	i2l16452
 36562                           
 36563                           ; BSR set to: 0
 36564                           ;interrupts.c: 231: }
 36565                           ;interrupts.c: 232: }
 36566                           
 36567                           ; BSR set to: 0
 36568                           
 36569                           ;interrupts.c: 230: RFsendFlag = 0;
 36570                           
 36571                           ;interrupts.c: 229: Sent = 1;
 36572  003EDE  D0A8               	goto	i2l16504
 36573  003EE0                     i2l16346:
 36574                           
 36575                           ;interrupts.c: 233: else if(RFsendCode[RFcodeBit] == 1)
 36576  003EE0  5037               	movf	_RFcodeBit,w,c
 36577  003EE2  0D01               	mullw	1
 36578  003EE4  0ED6               	movlw	low _RFsendCode
 36579  003EE6  24F3               	addwf	prodl,w,c
 36580  003EE8  6ED9               	movwf	fsr2l,c
 36581  003EEA  0E01               	movlw	high _RFsendCode
 36582  003EEC  20F4               	addwfc	prodh,w,c
 36583  003EEE  6EDA               	movwf	fsr2h,c
 36584  003EF0  04DE               	decf	postinc2,w,c
 36585  003EF2  A4D8               	btfss	status,2,c
 36586  003EF4  D02E               	goto	i2l16408
 36587                           
 36588                           ;interrupts.c: 234: {
 36589                           ;interrupts.c: 235: if(RFConfig == 1)
 36590  003EF6  0436               	decf	_RFConfig,w,c
 36591  003EF8  A4D8               	btfss	status,2,c
 36592  003EFA  D016               	goto	i2l16386
 36593                           
 36594                           ;interrupts.c: 236: {
 36595                           ;interrupts.c: 237: if(RFcodePlace == 1)
 36596  003EFC  0438               	decf	_RFcodePlace,w,c
 36597  003EFE  A4D8               	btfss	status,2,c
 36598  003F00  D004               	goto	i2l16358
 36599  003F02  D03C               	goto	L43
 36600  003F04                     i2l16354:
 36601                           
 36602                           ;interrupts.c: 240: (PR2 = 24);
 36603  003F04  0E18               	movlw	24
 36604  003F06  6ECB               	movwf	4043,c	;volatile
 36605  003F08  D7BF               	goto	i2l16304
 36606  003F0A                     i2l16358:
 36607                           
 36608                           ;interrupts.c: 243: else if(RFcodePlace == 2)
 36609  003F0A  0E02               	movlw	2
 36610  003F0C  1838               	xorwf	_RFcodePlace,w,c
 36611  003F0E  A4D8               	btfss	status,2,c
 36612  003F10  D031               	goto	i2l16426
 36613                           
 36614                           ;interrupts.c: 244: {
 36615                           ;interrupts.c: 245: (LATC &= ~0x20);
 36616  003F12  9A8B               	bcf	3979,5,c	;volatile
 36617  003F14  D7AD               	goto	i2l16294
 36618                           
 36619                           ;interrupts.c: 249: }
 36620                           
 36621                           ;interrupts.c: 248: (TMR2 = 0);
 36622                           
 36623                           ;interrupts.c: 247: RFcodePlace++;
 36624                           
 36625                           ;interrupts.c: 246: (PR2 = 8);
 36626  003F16  D02E               	goto	i2l16426
 36627                           
 36628                           ;interrupts.c: 251: {
 36629                           ;interrupts.c: 252: (LATC |= 0x20);
 36630                           
 36631                           ;interrupts.c: 250: else if(RFcodePlace == 3)
 36632  003F18  D7F5               	goto	i2l16354
 36633                           
 36634                           ;interrupts.c: 253: (PR2 = 24);
 36635  003F1A  D7B6               	goto	i2l16304
 36636                           
 36637                           ;interrupts.c: 255: }
 36638                           
 36639                           ;interrupts.c: 254: RFcodePlace++;
 36640  003F1C  D032               	goto	i2l16434
 36641  003F1E                     i2l16378:
 36642                           
 36643                           ;interrupts.c: 259: (PR2 = 8);
 36644  003F1E  0E08               	movlw	8
 36645  003F20  6ECB               	movwf	4043,c	;volatile
 36646  003F22  D035               	goto	i2l16440
 36647                           
 36648                           ;interrupts.c: 261: RFcodeBit++;
 36649                           
 36650                           ;interrupts.c: 260: RFcodePlace = 1;
 36651  003F24  D7A8               	goto	L28
 36652                           
 36653                           ; BSR set to: 0
 36654                           ;interrupts.c: 270: }
 36655                           ;interrupts.c: 271: }
 36656                           
 36657                           ; BSR set to: 0
 36658                           
 36659                           ; BSR set to: 0
 36660                           
 36661                           ; BSR set to: 0
 36662                           
 36663                           ;interrupts.c: 269: RFsendFlag = 0;
 36664                           
 36665                           ;interrupts.c: 268: Sent = 1;
 36666                           
 36667                           ;interrupts.c: 264: else
 36668                           ;interrupts.c: 265: {
 36669                           ;interrupts.c: 267: (T2CONbits.TMR2ON = 0);
 36670                           
 36671                           ;interrupts.c: 263: }
 36672                           
 36673                           ;interrupts.c: 262: (TMR2 = 0);
 36674  003F26  D084               	goto	i2l16504
 36675  003F28                     i2l16386:
 36676                           
 36677                           ;interrupts.c: 272: else if(RFConfig == 2)
 36678  003F28  0E02               	movlw	2
 36679  003F2A  1836               	xorwf	_RFConfig,w,c
 36680  003F2C  A4D8               	btfss	status,2,c
 36681  003F2E  D7BC               	goto	i2l1226
 36682                           
 36683                           ;interrupts.c: 273: {
 36684                           ;interrupts.c: 275: if(RFcodePlace == 1)
 36685  003F30  0438               	decf	_RFcodePlace,w,c
 36686  003F32  A4D8               	btfss	status,2,c
 36687  003F34  D003               	goto	i2l16396
 36688                           
 36689                           ;interrupts.c: 276: {
 36690                           ;interrupts.c: 277: (LATC |= 0x20);
 36691  003F36  8A8B               	bsf	3979,5,c	;volatile
 36692                           
 36693                           ;interrupts.c: 278: (PR2 = 29);
 36694  003F38  0E1D               	movlw	29
 36695  003F3A  D79B               	goto	L26
 36696  003F3C                     i2l16396:
 36697                           
 36698                           ;interrupts.c: 282: else if(RFcodePlace == 2)
 36699  003F3C  0E02               	movlw	2
 36700  003F3E  1838               	xorwf	_RFcodePlace,w,c
 36701  003F40  A4D8               	btfss	status,2,c
 36702  003F42  D004               	goto	i2l1250
 36703                           
 36704                           ;interrupts.c: 283: {
 36705                           ;interrupts.c: 284: (LATC &= ~0x20);
 36706  003F44  9A8B               	bcf	3979,5,c	;volatile
 36707                           
 36708                           ;interrupts.c: 285: (PR2 = 11);
 36709  003F46  0E0B               	movlw	11
 36710  003F48                     L27:
 36711  003F48  6ECB               	movwf	4043,c	;volatile
 36712  003F4A  D7C4               	goto	i2l16340
 36713  003F4C                     i2l1250:
 36714                           
 36715                           ;interrupts.c: 289: else
 36716                           ;interrupts.c: 290: {
 36717                           ;interrupts.c: 292: (T2CONbits.TMR2ON = 0);
 36718  003F4C  94CA               	bcf	4042,2,c	;volatile
 36719  003F4E  D029               	goto	i2l16452
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;interrupts.c: 303: }
 36723                           ;interrupts.c: 304: }
 36724                           
 36725                           ; BSR set to: 0
 36726                           
 36727                           ;interrupts.c: 302: RFsendFlag = 0;
 36728                           
 36729                           ;interrupts.c: 301: Sent = 1;
 36730                           
 36731                           ;interrupts.c: 297: else
 36732                           ;interrupts.c: 298: {
 36733                           ;interrupts.c: 300: (T2CONbits.TMR2ON = 0);
 36734                           
 36735                           ; BSR set to: 0
 36736                           ;interrupts.c: 295: }
 36737                           ;interrupts.c: 296: }
 36738                           
 36739                           ; BSR set to: 0
 36740                           
 36741                           ;interrupts.c: 294: RFsendFlag = 0;
 36742                           
 36743                           ;interrupts.c: 293: Sent = 1;
 36744  003F50  D06F               	goto	i2l16504
 36745  003F52                     i2l16408:
 36746                           
 36747                           ;interrupts.c: 305: else
 36748                           ;interrupts.c: 306: {
 36749                           ;interrupts.c: 307: if(RFConfig == 1)
 36750  003F52  0436               	decf	_RFConfig,w,c
 36751  003F54  A4D8               	btfss	status,2,c
 36752  003F56  D020               	goto	i2l16446
 36753                           
 36754                           ;interrupts.c: 308: {
 36755                           ;interrupts.c: 310: if(RFcodePlace == 1)
 36756  003F58  0438               	decf	_RFcodePlace,w,c
 36757  003F5A  A4D8               	btfss	status,2,c
 36758  003F5C  D004               	goto	i2l16418
 36759  003F5E                     i2l16412:
 36760                           
 36761                           ;interrupts.c: 311: {
 36762                           ;interrupts.c: 312: (LATC |= 0x20);
 36763  003F5E  8A8B               	bsf	3979,5,c	;volatile
 36764  003F60  D787               	goto	i2l16294
 36765  003F62                     i2l16416:
 36766                           
 36767                           ;interrupts.c: 314: RFcodePlace++;
 36768  003F62  2A38               	incf	_RFcodePlace,f,c
 36769  003F64  D788               	goto	L28
 36770  003F66                     i2l16418:
 36771                           
 36772                           ;interrupts.c: 317: else if(RFcodePlace == 2)
 36773  003F66  0E02               	movlw	2
 36774  003F68  1838               	xorwf	_RFcodePlace,w,c
 36775  003F6A  A4D8               	btfss	status,2,c
 36776  003F6C  D003               	goto	i2l16426
 36777  003F6E                     L42:
 36778                           
 36779                           ;interrupts.c: 318: {
 36780                           ;interrupts.c: 319: (LATC &= ~0x20);
 36781  003F6E  9A8B               	bcf	3979,5,c	;volatile
 36782  003F70  D7C9               	goto	i2l16354
 36783                           
 36784                           ;interrupts.c: 320: (PR2 = 24);
 36785  003F72  D78A               	goto	i2l16304
 36786  003F74                     i2l16426:
 36787                           
 36788                           ;interrupts.c: 323: else if(RFcodePlace == 3)
 36789  003F74  0E03               	movlw	3
 36790  003F76  1838               	xorwf	_RFcodePlace,w,c
 36791  003F78  A4D8               	btfss	status,2,c
 36792  003F7A  D003               	goto	i2l16434
 36793  003F7C                     L43:
 36794                           
 36795                           ;interrupts.c: 324: {
 36796                           ;interrupts.c: 325: (LATC |= 0x20);
 36797  003F7C  8A8B               	bsf	3979,5,c	;volatile
 36798  003F7E  D7C2               	goto	i2l16354
 36799                           
 36800                           ;interrupts.c: 326: (PR2 = 24);
 36801  003F80  D783               	goto	i2l16304
 36802  003F82                     i2l16434:
 36803                           
 36804                           ;interrupts.c: 329: else if(RFcodePlace == 4)
 36805  003F82  0E04               	movlw	4
 36806  003F84  1838               	xorwf	_RFcodePlace,w,c
 36807  003F86  A4D8               	btfss	status,2,c
 36808  003F88  D78F               	goto	i2l1226
 36809                           
 36810                           ;interrupts.c: 330: {
 36811                           ;interrupts.c: 331: (LATC &= ~0x20);
 36812  003F8A  9A8B               	bcf	3979,5,c	;volatile
 36813  003F8C  D7C8               	goto	i2l16378
 36814  003F8E                     i2l16440:
 36815                           
 36816                           ;interrupts.c: 333: RFcodePlace = 1;
 36817  003F8E  0E01               	movlw	1
 36818  003F90  6E38               	movwf	_RFcodePlace,c
 36819                           
 36820                           ;interrupts.c: 334: RFcodeBit++;
 36821  003F92  2A37               	incf	_RFcodeBit,f,c
 36822  003F94  D770               	goto	L28
 36823                           
 36824                           ; BSR set to: 0
 36825                           ;interrupts.c: 343: }
 36826                           ;interrupts.c: 344: }
 36827                           
 36828                           ; BSR set to: 0
 36829                           
 36830                           ; BSR set to: 0
 36831                           
 36832                           ; BSR set to: 0
 36833                           
 36834                           ;interrupts.c: 342: RFsendFlag = 0;
 36835                           
 36836                           ;interrupts.c: 341: Sent = 1;
 36837                           
 36838                           ;interrupts.c: 337: else
 36839                           ;interrupts.c: 338: {
 36840                           ;interrupts.c: 340: (T2CONbits.TMR2ON = 0);
 36841                           
 36842                           ;interrupts.c: 336: }
 36843                           
 36844                           ;interrupts.c: 335: (TMR2 = 0);
 36845  003F96  D04C               	goto	i2l16504
 36846  003F98                     i2l16446:
 36847                           
 36848                           ;interrupts.c: 345: else if(RFConfig == 2)
 36849  003F98  0E02               	movlw	2
 36850  003F9A  1836               	xorwf	_RFConfig,w,c
 36851  003F9C  A4D8               	btfss	status,2,c
 36852  003F9E  D784               	goto	i2l1226
 36853  003FA0  D783               	goto	i2l1226
 36854  003FA2                     i2l16452:
 36855                           
 36856                           ;interrupts.c: 356: Sent = 1;
 36857  003FA2  0E01               	movlw	1
 36858  003FA4  0100               	movlb	0	; () banked
 36859  003FA6  6FE6               	movwf	_Sent& (0+255),b	;volatile
 36860  003FA8  D781               	goto	L31
 36861                           
 36862                           ; BSR set to: 0
 36863                           ;interrupts.c: 358: }
 36864                           ;interrupts.c: 359: }
 36865                           ;interrupts.c: 360: }
 36866                           ;interrupts.c: 361: }
 36867                           
 36868                           ; BSR set to: 0
 36869                           
 36870                           ; BSR set to: 0
 36871                           
 36872                           ; BSR set to: 0
 36873                           
 36874                           ; BSR set to: 0
 36875                           
 36876                           ;interrupts.c: 357: RFsendFlag = 0;
 36877  003FAA  D042               	goto	i2l16504
 36878  003FAC                     i2l16454:
 36879                           
 36880                           ;interrupts.c: 362: else
 36881                           ;interrupts.c: 363: {
 36882                           ;interrupts.c: 365: if(RFcodePlace == 1)
 36883  003FAC  0438               	decf	_RFcodePlace,w,c
 36884  003FAE  A4D8               	btfss	status,2,c
 36885  003FB0  D016               	goto	i2l16472
 36886                           
 36887                           ;interrupts.c: 366: {
 36888                           ;interrupts.c: 367: if(RFConfig == 1)
 36889  003FB2  0436               	decf	_RFConfig,w,c
 36890  003FB4  A4D8               	btfss	status,2,c
 36891  003FB6  D003               	goto	i2l16462
 36892                           
 36893                           ;interrupts.c: 368: {
 36894                           ;interrupts.c: 369: (LATC |= 0x20);
 36895  003FB8  8A8B               	bsf	3979,5,c	;volatile
 36896                           
 36897                           ;interrupts.c: 370: (PR2 = 8);
 36898  003FBA  0E08               	movlw	8
 36899  003FBC  D006               	goto	L29
 36900  003FBE                     i2l16462:
 36901                           
 36902                           ;interrupts.c: 372: else if(RFConfig == 2)
 36903  003FBE  0E02               	movlw	2
 36904  003FC0  1836               	xorwf	_RFConfig,w,c
 36905  003FC2  A4D8               	btfss	status,2,c
 36906  003FC4  D004               	goto	i2l1270
 36907                           
 36908                           ;interrupts.c: 373: {
 36909                           ;interrupts.c: 374: (LATC &= ~0x20);
 36910  003FC6  9A8B               	bcf	3979,5,c	;volatile
 36911                           
 36912                           ;interrupts.c: 375: (PR2 = 11);
 36913  003FC8  0E0B               	movlw	11
 36914  003FCA                     L29:
 36915  003FCA  6ECB               	movwf	4043,c	;volatile
 36916                           
 36917                           ;interrupts.c: 376: }
 36918  003FCC  D005               	goto	i2l1269
 36919  003FCE                     i2l1270:
 36920                           
 36921                           ;interrupts.c: 377: else
 36922                           ;interrupts.c: 378: {
 36923                           ;interrupts.c: 380: (T2CONbits.TMR2ON = 0);
 36924  003FCE  94CA               	bcf	4042,2,c	;volatile
 36925                           
 36926                           ;interrupts.c: 381: Sent = 1;
 36927  003FD0  0E01               	movlw	1
 36928  003FD2  0100               	movlb	0	; () banked
 36929  003FD4  6FE6               	movwf	_Sent& (0+255),b	;volatile
 36930  003FD6  D000               	goto	i2l1269
 36931  003FD8                     i2l1269:
 36932                           
 36933                           ;interrupts.c: 382: }
 36934                           ;interrupts.c: 383: (TMR2 = 0);
 36935  003FD8  0E00               	movlw	0
 36936  003FDA  6ECC               	movwf	4044,c	;volatile
 36937  003FDC  D755               	goto	i2l16304
 36938  003FDE                     i2l16472:
 36939                           
 36940                           ;interrupts.c: 386: else if( RFcodePlace == 2)
 36941  003FDE  0E02               	movlw	2
 36942  003FE0  1838               	xorwf	_RFcodePlace,w,c
 36943  003FE2  A4D8               	btfss	status,2,c
 36944  003FE4  D01C               	goto	i2l16492
 36945                           
 36946                           ;interrupts.c: 387: {
 36947                           ;interrupts.c: 388: if(RFConfig == 1)
 36948  003FE6  0436               	decf	_RFConfig,w,c
 36949  003FE8  A4D8               	btfss	status,2,c
 36950  003FEA  D003               	goto	i2l16480
 36951                           
 36952                           ;interrupts.c: 389: {
 36953                           ;interrupts.c: 390: (LATC &= ~0x20);
 36954  003FEC  9A8B               	bcf	3979,5,c	;volatile
 36955                           
 36956                           ;interrupts.c: 391: (PR2 = 250);
 36957  003FEE  0EFA               	movlw	250
 36958  003FF0  D005               	goto	L30
 36959  003FF2                     i2l16480:
 36960                           
 36961                           ;interrupts.c: 393: else if(RFConfig == 2)
 36962  003FF2  0E02               	movlw	2
 36963  003FF4  1836               	xorwf	_RFConfig,w,c
 36964  003FF6  A4D8               	btfss	status,2,c
 36965  003FF8  D003               	goto	i2l1276
 36966                           
 36967                           ;interrupts.c: 394: {
 36968                           ;interrupts.c: 395: (PR2 = 187);
 36969  003FFA  0EBB               	movlw	187
 36970  003FFC                     L30:
 36971  003FFC  6ECB               	movwf	4043,c	;volatile
 36972                           
 36973                           ;interrupts.c: 396: }
 36974  003FFE  D005               	goto	i2l16486
 36975  004000                     i2l1276:
 36976                           
 36977                           ;interrupts.c: 397: else
 36978                           ;interrupts.c: 398: {
 36979                           ;interrupts.c: 400: (T2CONbits.TMR2ON = 0);
 36980  004000  94CA               	bcf	4042,2,c	;volatile
 36981                           
 36982                           ;interrupts.c: 401: Sent = 1;
 36983  004002  0E01               	movlw	1
 36984  004004  0100               	movlb	0	; () banked
 36985  004006  6FE6               	movwf	_Sent& (0+255),b	;volatile
 36986                           
 36987                           ; BSR set to: 0
 36988  004008  D000               	goto	i2l16486
 36989  00400A                     i2l16486:
 36990                           
 36991                           ;interrupts.c: 402: }
 36992                           ;interrupts.c: 403: RFcodePlace++;
 36993  00400A  2A38               	incf	_RFcodePlace,f,c
 36994                           
 36995                           ;interrupts.c: 404: Sendcount--;
 36996  00400C  063A               	decf	_Sendcount,f,c	;volatile
 36997                           
 36998                           ;interrupts.c: 405: if(Sendcount)
 36999  00400E  503A               	movf	_Sendcount,w,c	;volatile
 37000  004010  B4D8               	btfsc	status,2,c
 37001  004012  D00E               	goto	i2l16504
 37002                           
 37003                           ;interrupts.c: 406: {
 37004                           ;interrupts.c: 408: RFcodePlace = 1;
 37005  004014  0E01               	movlw	1
 37006  004016  6E38               	movwf	_RFcodePlace,c
 37007                           
 37008                           ;interrupts.c: 409: RFcodeBit = 0;
 37009  004018  0E00               	movlw	0
 37010  00401A  6E37               	movwf	_RFcodeBit,c
 37011                           
 37012                           ;interrupts.c: 410: }
 37013                           ;interrupts.c: 411: }
 37014  00401C  D009               	goto	i2l16504
 37015  00401E                     i2l16492:
 37016                           
 37017                           ;interrupts.c: 412: else
 37018                           ;interrupts.c: 413: {
 37019                           ;interrupts.c: 415: ResetTimer3();
 37020  00401E  ECDA  F049         	call	_ResetTimer3	;wreg free
 37021                           
 37022                           ;interrupts.c: 416: PIR2bits.TMR3IF = 0;
 37023  004022  92A1               	bcf	4001,1,c	;volatile
 37024                           
 37025                           ;interrupts.c: 417: Timer3_Postscaler = 0;
 37026  004024  0E00               	movlw	0
 37027  004026  6E3D               	movwf	_Timer3_Postscaler,c
 37028                           
 37029                           ;interrupts.c: 418: (T3CONbits.TMR3ON = 1);
 37030  004028  80B1               	bsf	4017,0,c	;volatile
 37031                           
 37032                           ;interrupts.c: 419: (T2CONbits.TMR2ON = 0);
 37033  00402A  94CA               	bcf	4042,2,c	;volatile
 37034  00402C  D73F               	goto	L31
 37035                           
 37036                           ;interrupts.c: 420: RFsendFlag = 0;
 37037  00402E  D000               	goto	i2l16504
 37038  004030                     i2l16504:
 37039                           
 37040                           ;interrupts.c: 421: }
 37041                           ;interrupts.c: 422: }
 37042                           ;interrupts.c: 423: }
 37043                           ;interrupts.c: 424: if(RFsendFlag)
 37044  004030  5039               	movf	_RFsendFlag,w,c	;volatile
 37045  004032  B4D8               	btfsc	status,2,c
 37046  004034  D0C0               	goto	i2l16632
 37047                           
 37048                           ;interrupts.c: 425: {
 37049                           ;interrupts.c: 427: (T2CONbits.TMR2ON = 1);
 37050  004036  84CA               	bsf	4042,2,c	;volatile
 37051                           
 37052                           ;interrupts.c: 428: }
 37053                           ;interrupts.c: 429: }
 37054  004038  D0BE               	goto	i2l16632
 37055  00403A                     i2l16508:
 37056                           
 37057                           ;interrupts.c: 430: else
 37058                           ;interrupts.c: 431: {
 37059                           ;interrupts.c: 433: if(Timer2_Postscaler >= RF_IR_Postscaler)
 37060  00403A  5041               	movf	_RF_IR_Postscaler,w,c	;volatile
 37061  00403C  5C3C               	subwf	_Timer2_Postscaler,w,c
 37062  00403E  A0D8               	btfss	status,0,c
 37063  004040  D0BA               	goto	i2l16632
 37064                           
 37065                           ;interrupts.c: 434: {
 37066                           ;interrupts.c: 435: Timer2_Postscaler = 0;
 37067  004042  0E00               	movlw	0
 37068  004044  6E3C               	movwf	_Timer2_Postscaler,c
 37069                           
 37070                           ;interrupts.c: 436: if(IRcodePlace == 7)
 37071  004046  0E07               	movlw	7
 37072  004048  183F               	xorwf	_IRcodePlace,w,c
 37073  00404A  A4D8               	btfss	status,2,c
 37074  00404C  D00D               	goto	i2l16524
 37075                           
 37076                           ;interrupts.c: 437: {
 37077                           ;interrupts.c: 438: IRbitPosition = 32;
 37078  00404E  0E20               	movlw	32
 37079  004050  6E3E               	movwf	_IRbitPosition,c	;volatile
 37080                           
 37081                           ;interrupts.c: 439: (IRmod = 0);
 37082  004052  0E00               	movlw	0
 37083  004054  0100               	movlb	0	; () banked
 37084  004056  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37085                           
 37086                           ; BSR set to: 0
 37087                           ;interrupts.c: 440: (LATC &= ~0x08);
 37088  004058  968B               	bcf	3979,3,c	;volatile
 37089                           
 37090                           ; BSR set to: 0
 37091                           ;interrupts.c: 441: IRcodePlace = 8;
 37092  00405A  0E08               	movlw	8
 37093  00405C  6E3F               	movwf	_IRcodePlace,c
 37094                           
 37095                           ; BSR set to: 0
 37096                           ;interrupts.c: 442: RF_IR_Postscaler = 4;
 37097  00405E  0E04               	movlw	4
 37098  004060  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37099                           
 37100                           ; BSR set to: 0
 37101                           ;interrupts.c: 443: (PR2 = 75);
 37102  004062  0E4B               	movlw	75
 37103  004064  6ECB               	movwf	4043,c	;volatile
 37104                           
 37105                           ;interrupts.c: 444: }
 37106  004066  D0A7               	goto	i2l16632
 37107  004068                     i2l16524:
 37108                           
 37109                           ;interrupts.c: 445: else if(IRcodePlace == 8 || IRcodePlace == 10)
 37110  004068  0E08               	movlw	8
 37111  00406A  183F               	xorwf	_IRcodePlace,w,c
 37112  00406C  B4D8               	btfsc	status,2,c
 37113  00406E  D004               	goto	i2l16528
 37114  004070  0E0A               	movlw	10
 37115  004072  183F               	xorwf	_IRcodePlace,w,c
 37116  004074  A4D8               	btfss	status,2,c
 37117  004076  D011               	goto	i2l16538
 37118  004078                     i2l16528:
 37119                           
 37120                           ;interrupts.c: 446: {
 37121                           ;interrupts.c: 447: (IRmod = 1);
 37122  004078  0E01               	movlw	1
 37123  00407A  0100               	movlb	0	; () banked
 37124  00407C  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37125                           
 37126                           ;interrupts.c: 448: RF_IR_Postscaler = 1;
 37127  00407E  0E01               	movlw	1
 37128  004080  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37129                           
 37130                           ; BSR set to: 0
 37131                           ;interrupts.c: 449: IRbit = (unsigned char) (IRsendCode & 0x01);
 37132  004082  5025               	movf	_IRsendCode,w,c
 37133  004084  0B01               	andlw	1
 37134  004086  6E2F               	movwf	_IRbit,c
 37135                           
 37136                           ; BSR set to: 0
 37137                           ;interrupts.c: 450: IRsendCode >>= 1;
 37138  004088  90D8               	bcf	status,0,c
 37139  00408A  3228               	rrcf	_IRsendCode+3,f,c
 37140  00408C  3227               	rrcf	_IRsendCode+2,f,c
 37141  00408E  3226               	rrcf	_IRsendCode+1,f,c
 37142  004090  3225               	rrcf	_IRsendCode,f,c
 37143                           
 37144                           ; BSR set to: 0
 37145                           ;interrupts.c: 451: (PR2 = 38);
 37146  004092  0E26               	movlw	38
 37147  004094  6ECB               	movwf	4043,c	;volatile
 37148                           
 37149                           ; BSR set to: 0
 37150                           ;interrupts.c: 452: IRcodePlace = 9;
 37151  004096  0E09               	movlw	9
 37152  004098  D07A               	goto	L41
 37153  00409A                     i2l16538:
 37154                           
 37155                           ;interrupts.c: 454: else if(IRcodePlace == 9)
 37156  00409A  0E09               	movlw	9
 37157  00409C  183F               	xorwf	_IRcodePlace,w,c
 37158  00409E  A4D8               	btfss	status,2,c
 37159  0040A0  D017               	goto	i2l16560
 37160                           
 37161                           ;interrupts.c: 455: {
 37162                           ;interrupts.c: 456: (IRmod = 0);
 37163  0040A2  0E00               	movlw	0
 37164  0040A4  0100               	movlb	0	; () banked
 37165  0040A6  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37166                           
 37167                           ; BSR set to: 0
 37168                           ;interrupts.c: 457: (LATC &= ~0x08);
 37169  0040A8  968B               	bcf	3979,3,c	;volatile
 37170                           
 37171                           ; BSR set to: 0
 37172                           ;interrupts.c: 458: RF_IR_Postscaler = 1;
 37173  0040AA  0E01               	movlw	1
 37174  0040AC  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37175                           
 37176                           ; BSR set to: 0
 37177                           ;interrupts.c: 459: if(IRbit)
 37178  0040AE  502F               	movf	_IRbit,w,c
 37179  0040B0  B4D8               	btfsc	status,2,c
 37180  0040B2  D002               	goto	i2l16550
 37181                           
 37182                           ; BSR set to: 0
 37183                           ;interrupts.c: 460: {
 37184                           ;interrupts.c: 462: (PR2 = 113);
 37185  0040B4  0E71               	movlw	113
 37186  0040B6  D001               	goto	L33
 37187  0040B8                     i2l16550:
 37188                           
 37189                           ; BSR set to: 0
 37190                           ;interrupts.c: 464: else
 37191                           ;interrupts.c: 465: {
 37192                           ;interrupts.c: 467: (PR2 = 38);
 37193  0040B8  0E26               	movlw	38
 37194  0040BA                     L33:
 37195  0040BA  6ECB               	movwf	4043,c	;volatile
 37196  0040BC  D000               	goto	i2l16552
 37197  0040BE                     i2l16552:
 37198                           
 37199                           ; BSR set to: 0
 37200                           ;interrupts.c: 468: }
 37201                           ;interrupts.c: 469: IRbitPosition--;
 37202  0040BE  063E               	decf	_IRbitPosition,f,c	;volatile
 37203                           
 37204                           ; BSR set to: 0
 37205                           ;interrupts.c: 470: if(IRbitPosition == 0)
 37206  0040C0  503E               	movf	_IRbitPosition,w,c	;volatile
 37207  0040C2  A4D8               	btfss	status,2,c
 37208  0040C4  D002               	goto	i2l16558
 37209                           
 37210                           ; BSR set to: 0
 37211                           ;interrupts.c: 471: {
 37212                           ;interrupts.c: 472: IRcodePlace = 11;
 37213  0040C6  0E0B               	movlw	11
 37214  0040C8  D062               	goto	L41
 37215  0040CA                     i2l16558:
 37216                           
 37217                           ; BSR set to: 0
 37218                           ;interrupts.c: 474: else
 37219                           ;interrupts.c: 475: {
 37220                           ;interrupts.c: 476: IRcodePlace = 10;
 37221  0040CA  0E0A               	movlw	10
 37222  0040CC  D060               	goto	L41
 37223                           
 37224                           ; BSR set to: 0
 37225                           ;interrupts.c: 477: }
 37226                           ;interrupts.c: 478: }
 37227  0040CE  D073               	goto	i2l16632
 37228  0040D0                     i2l16560:
 37229                           
 37230                           ;interrupts.c: 479: else if(IRcodePlace == 11)
 37231  0040D0  0E0B               	movlw	11
 37232  0040D2  183F               	xorwf	_IRcodePlace,w,c
 37233  0040D4  A4D8               	btfss	status,2,c
 37234  0040D6  D007               	goto	i2l16564
 37235                           
 37236                           ;interrupts.c: 480: {
 37237                           ;interrupts.c: 481: (IRmod = 1);
 37238  0040D8  0E01               	movlw	1
 37239  0040DA  0100               	movlb	0	; () banked
 37240  0040DC  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37241                           
 37242                           ;interrupts.c: 482: (PR2 = 38);
 37243  0040DE  0E26               	movlw	38
 37244  0040E0  6ECB               	movwf	4043,c	;volatile
 37245                           
 37246                           ;interrupts.c: 483: IRcodePlace = 12;
 37247  0040E2  0E0C               	movlw	12
 37248  0040E4  D054               	goto	L41
 37249  0040E6                     i2l16564:
 37250                           
 37251                           ;interrupts.c: 485: else if(IRcodePlace == 12)
 37252  0040E6  0E0C               	movlw	12
 37253  0040E8  183F               	xorwf	_IRcodePlace,w,c
 37254  0040EA  A4D8               	btfss	status,2,c
 37255  0040EC  D011               	goto	i2l16578
 37256                           
 37257                           ;interrupts.c: 486: {
 37258                           ;interrupts.c: 487: (IRmod = 0);
 37259  0040EE  0E00               	movlw	0
 37260  0040F0  0100               	movlb	0	; () banked
 37261  0040F2  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37262                           
 37263                           ; BSR set to: 0
 37264                           ;interrupts.c: 488: (LATC &= ~0x08);
 37265  0040F4  968B               	bcf	3979,3,c	;volatile
 37266                           
 37267                           ; BSR set to: 0
 37268                           ;interrupts.c: 489: if(!IRrepeatflag)
 37269  0040F6  5034               	movf	_IRrepeatflag,w,c
 37270  0040F8  A4D8               	btfss	status,2,c
 37271  0040FA  D003               	goto	i2l16576
 37272                           
 37273                           ; BSR set to: 0
 37274                           ;interrupts.c: 490: {
 37275                           ;interrupts.c: 492: IRcodePlace = 13;
 37276  0040FC  0E0D               	movlw	13
 37277  0040FE  6E3F               	movwf	_IRcodePlace,c
 37278  004100  D057               	goto	i2l16628
 37279  004102                     i2l16576:
 37280                           
 37281                           ; BSR set to: 0
 37282                           ;interrupts.c: 496: else
 37283                           ;interrupts.c: 497: {
 37284                           ;interrupts.c: 498: RF_IR_Postscaler = 11;
 37285  004102  0E0B               	movlw	11
 37286  004104  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37287                           
 37288                           ;interrupts.c: 499: (PR2 = 242);
 37289  004106  0EF2               	movlw	242
 37290  004108  6ECB               	movwf	4043,c	;volatile
 37291                           
 37292                           ;interrupts.c: 500: IRcodePlace = 14;
 37293  00410A  0E0E               	movlw	14
 37294  00410C  D040               	goto	L41
 37295                           
 37296                           ; BSR set to: 0
 37297                           ;interrupts.c: 501: }
 37298                           ;interrupts.c: 502: }
 37299  00410E  D053               	goto	i2l16632
 37300  004110                     i2l16578:
 37301                           
 37302                           ;interrupts.c: 503: else if(IRcodePlace == 14 || IRcodePlace == 18)
 37303  004110  0E0E               	movlw	14
 37304  004112  183F               	xorwf	_IRcodePlace,w,c
 37305  004114  B4D8               	btfsc	status,2,c
 37306  004116  D004               	goto	i2l16582
 37307  004118  0E12               	movlw	18
 37308  00411A  183F               	xorwf	_IRcodePlace,w,c
 37309  00411C  A4D8               	btfss	status,2,c
 37310  00411E  D009               	goto	i2l16584
 37311  004120                     i2l16582:
 37312                           
 37313                           ;interrupts.c: 504: {
 37314                           ;interrupts.c: 505: (IRmod = 1);
 37315  004120  0E01               	movlw	1
 37316  004122  0100               	movlb	0	; () banked
 37317  004124  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37318                           
 37319                           ;interrupts.c: 506: RF_IR_Postscaler = 4;
 37320  004126  0E04               	movlw	4
 37321  004128  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37322                           
 37323                           ;interrupts.c: 507: (PR2 = 150);
 37324  00412A  0E96               	movlw	150
 37325  00412C  6ECB               	movwf	4043,c	;volatile
 37326                           
 37327                           ;interrupts.c: 508: IRcodePlace = 15;
 37328  00412E  0E0F               	movlw	15
 37329  004130  D02E               	goto	L41
 37330  004132                     i2l16584:
 37331                           
 37332                           ;interrupts.c: 510: else if(IRcodePlace == 15)
 37333  004132  0E0F               	movlw	15
 37334  004134  183F               	xorwf	_IRcodePlace,w,c
 37335  004136  A4D8               	btfss	status,2,c
 37336  004138  D00A               	goto	i2l16596
 37337                           
 37338                           ;interrupts.c: 511: {
 37339                           ;interrupts.c: 512: (IRmod = 0);
 37340  00413A  0E00               	movlw	0
 37341  00413C  0100               	movlb	0	; () banked
 37342  00413E  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37343                           
 37344                           ; BSR set to: 0
 37345                           ;interrupts.c: 513: (LATC &= ~0x08);
 37346  004140  968B               	bcf	3979,3,c	;volatile
 37347                           
 37348                           ; BSR set to: 0
 37349                           ;interrupts.c: 514: RF_IR_Postscaler = 1;
 37350  004142  0E01               	movlw	1
 37351  004144  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37352                           
 37353                           ; BSR set to: 0
 37354                           ;interrupts.c: 515: (PR2 = 149);
 37355  004146  0E95               	movlw	149
 37356  004148  6ECB               	movwf	4043,c	;volatile
 37357                           
 37358                           ; BSR set to: 0
 37359                           ;interrupts.c: 516: IRcodePlace = 16;
 37360  00414A  0E10               	movlw	16
 37361  00414C  D020               	goto	L41
 37362  00414E                     i2l16596:
 37363                           
 37364                           ;interrupts.c: 518: else if(IRcodePlace == 16)
 37365  00414E  0E10               	movlw	16
 37366  004150  183F               	xorwf	_IRcodePlace,w,c
 37367  004152  A4D8               	btfss	status,2,c
 37368  004154  D009               	goto	i2l16600
 37369                           
 37370                           ;interrupts.c: 519: {
 37371                           ;interrupts.c: 520: (IRmod = 1);
 37372  004156  0E01               	movlw	1
 37373  004158  0100               	movlb	0	; () banked
 37374  00415A  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37375                           
 37376                           ;interrupts.c: 521: RF_IR_Postscaler = 1;
 37377  00415C  0E01               	movlw	1
 37378  00415E  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37379                           
 37380                           ;interrupts.c: 522: (PR2 = 38);
 37381  004160  0E26               	movlw	38
 37382  004162  6ECB               	movwf	4043,c	;volatile
 37383                           
 37384                           ;interrupts.c: 523: IRcodePlace = 17;
 37385  004164  0E11               	movlw	17
 37386  004166  D013               	goto	L41
 37387  004168                     i2l16600:
 37388                           
 37389                           ;interrupts.c: 525: else if(IRcodePlace == 17)
 37390  004168  0E11               	movlw	17
 37391  00416A  183F               	xorwf	_IRcodePlace,w,c
 37392  00416C  A4D8               	btfss	status,2,c
 37393  00416E  D011               	goto	i2l16616
 37394                           
 37395                           ;interrupts.c: 526: {
 37396                           ;interrupts.c: 527: (IRmod = 0);
 37397  004170  0E00               	movlw	0
 37398  004172  0100               	movlb	0	; () banked
 37399  004174  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37400                           
 37401                           ; BSR set to: 0
 37402                           ;interrupts.c: 528: (LATC &= ~0x08);
 37403  004176  968B               	bcf	3979,3,c	;volatile
 37404                           
 37405                           ; BSR set to: 0
 37406                           ;interrupts.c: 529: RF_IR_Postscaler = 26;
 37407  004178  0E1A               	movlw	26
 37408  00417A  6E41               	movwf	_RF_IR_Postscaler,c	;volatile
 37409                           
 37410                           ; BSR set to: 0
 37411                           ;interrupts.c: 530: (PR2 = 246);
 37412  00417C  0EF6               	movlw	246
 37413  00417E  6ECB               	movwf	4043,c	;volatile
 37414                           
 37415                           ; BSR set to: 0
 37416                           ;interrupts.c: 531: IRrepeatAmount--;
 37417  004180  0633               	decf	_IRrepeatAmount,f,c
 37418                           
 37419                           ;interrupts.c: 532: if(IRrepeatAmount)
 37420  004182  5033               	movf	_IRrepeatAmount,w,c
 37421  004184  B4D8               	btfsc	status,2,c
 37422  004186  D002               	goto	i2l16614
 37423                           
 37424                           ; BSR set to: 0
 37425                           ;interrupts.c: 533: {
 37426                           ;interrupts.c: 534: IRcodePlace = 18;
 37427  004188  0E12               	movlw	18
 37428  00418A  D001               	goto	L41
 37429  00418C                     i2l16614:
 37430                           
 37431                           ; BSR set to: 0
 37432                           ;interrupts.c: 536: else
 37433                           ;interrupts.c: 537: {
 37434                           ;interrupts.c: 538: IRcodePlace = 13;
 37435  00418C  0E0D               	movlw	13
 37436  00418E                     L41:
 37437  00418E  6E3F               	movwf	_IRcodePlace,c
 37438                           
 37439                           ; BSR set to: 0
 37440                           ;interrupts.c: 539: }
 37441                           ;interrupts.c: 540: }
 37442  004190  D012               	goto	i2l16632
 37443  004192                     i2l16616:
 37444                           
 37445                           ;interrupts.c: 541: else if(IRcodePlace == 13)
 37446  004192  0E0D               	movlw	13
 37447  004194  183F               	xorwf	_IRcodePlace,w,c
 37448  004196  A4D8               	btfss	status,2,c
 37449  004198  D005               	goto	i2l16622
 37450  00419A  D00A               	goto	i2l16628
 37451  00419C                     i2l16620:
 37452                           
 37453                           ;interrupts.c: 545: Sent = 1;
 37454  00419C  0E01               	movlw	1
 37455  00419E  0100               	movlb	0	; () banked
 37456  0041A0  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37457                           
 37458                           ;interrupts.c: 546: }
 37459  0041A2  D009               	goto	i2l16632
 37460  0041A4                     i2l16622:
 37461                           
 37462                           ;interrupts.c: 547: else
 37463                           ;interrupts.c: 548: {
 37464                           ;interrupts.c: 550: (IRmod = 0);
 37465  0041A4  0E00               	movlw	0
 37466  0041A6  0100               	movlb	0	; () banked
 37467  0041A8  6FDE               	movwf	_IRmod& (0+255),b	;volatile
 37468                           
 37469                           ; BSR set to: 0
 37470                           ;interrupts.c: 551: (LATC &= ~0x08);
 37471  0041AA  968B               	bcf	3979,3,c	;volatile
 37472                           
 37473                           ; BSR set to: 0
 37474                           ;interrupts.c: 552: IRcodePlace = 0;
 37475  0041AC  0E00               	movlw	0
 37476  0041AE  6E3F               	movwf	_IRcodePlace,c
 37477  0041B0                     i2l16628:
 37478                           
 37479                           ; BSR set to: 0
 37480                           ;interrupts.c: 553: (T2CONbits.TMR2ON = 0);
 37481  0041B0  94CA               	bcf	4042,2,c	;volatile
 37482  0041B2  D7F4               	goto	i2l16620
 37483                           
 37484                           ; BSR set to: 0
 37485                           
 37486                           ; BSR set to: 0
 37487                           
 37488                           ; BSR set to: 0
 37489                           
 37490                           ; BSR set to: 0
 37491                           
 37492                           ; BSR set to: 0
 37493                           
 37494                           ; BSR set to: 0
 37495                           
 37496                           ; BSR set to: 0
 37497                           
 37498                           ; BSR set to: 0
 37499                           
 37500                           ; BSR set to: 0
 37501                           
 37502                           ; BSR set to: 0
 37503                           
 37504                           ; BSR set to: 0
 37505                           
 37506                           ; BSR set to: 0
 37507                           ;interrupts.c: 554: Sent = 1;
 37508  0041B4  D000               	goto	i2l16632
 37509  0041B6                     i2l16632:
 37510                           
 37511                           ;interrupts.c: 555: }
 37512                           ;interrupts.c: 556: }
 37513                           ;interrupts.c: 557: }
 37514                           ;interrupts.c: 558: PIR1bits.TMR2IF = 0;
 37515  0041B6  929E               	bcf	3998,1,c	;volatile
 37516                           
 37517                           ;interrupts.c: 559: }
 37518  0041B8  D013               	goto	i2l1209
 37519  0041BA                     i2l1213:
 37520                           
 37521                           ;interrupts.c: 560: else if(PIR2bits.TMR3IF)
 37522  0041BA  A2A1               	btfss	4001,1,c	;volatile
 37523  0041BC  D00F               	goto	i2l1316
 37524                           
 37525                           ;interrupts.c: 561: {
 37526                           ;interrupts.c: 562: (T3CONbits.TMR3ON = 0);
 37527  0041BE  90B1               	bcf	4017,0,c	;volatile
 37528                           
 37529                           ;interrupts.c: 563: if(Timer3_Postscaler < 4)
 37530  0041C0  0E04               	movlw	4
 37531  0041C2  603D               	cpfslt	_Timer3_Postscaler,c
 37532  0041C4  D005               	goto	i2l16644
 37533                           
 37534                           ;interrupts.c: 564: {
 37535                           ;interrupts.c: 565: ResetTimer3();
 37536  0041C6  ECDA  F049         	call	_ResetTimer3	;wreg free
 37537                           
 37538                           ;interrupts.c: 566: (T3CONbits.TMR3ON = 1);
 37539  0041CA  80B1               	bsf	4017,0,c	;volatile
 37540                           
 37541                           ;interrupts.c: 567: Timer3_Postscaler++;
 37542  0041CC  2A3D               	incf	_Timer3_Postscaler,f,c
 37543                           
 37544                           ;interrupts.c: 568: }
 37545  0041CE  D004               	goto	i2l16646
 37546  0041D0                     i2l16644:
 37547                           
 37548                           ;interrupts.c: 569: else
 37549                           ;interrupts.c: 570: {
 37550                           ;interrupts.c: 575: Sent = 1;
 37551  0041D0  0E01               	movlw	1
 37552  0041D2  0100               	movlb	0	; () banked
 37553  0041D4  6FE6               	movwf	_Sent& (0+255),b	;volatile
 37554  0041D6  D000               	goto	i2l16646
 37555  0041D8                     i2l16646:
 37556                           
 37557                           ;interrupts.c: 576: }
 37558                           ;interrupts.c: 577: PIR2bits.TMR3IF = 0;
 37559  0041D8  92A1               	bcf	4001,1,c	;volatile
 37560                           
 37561                           ;interrupts.c: 578: }
 37562  0041DA  D002               	goto	i2l1209
 37563  0041DC                     i2l1316:
 37564                           
 37565                           ;interrupts.c: 579: else
 37566                           ;interrupts.c: 580: {
 37567                           ;interrupts.c: 582: __nop();
 37568  0041DC  F000               	nop	
 37569  0041DE  D000               	goto	i2l1209
 37570  0041E0                     i2l1209:
 37571                           
 37572                           ;interrupts.c: 583: }
 37573                           ;interrupts.c: 585: INTCONbits.GIE = 1;
 37574  0041E0  8EF2               	bsf	intcon,7,c	;volatile
 37575  0041E2  C078  FFF5         	movff	??_high_isr+17,tablat
 37576  0041E6  C077  FFF8         	movff	??_high_isr+16,tblptru
 37577  0041EA  C076  FFF7         	movff	??_high_isr+15,tblptrh
 37578  0041EE  C075  FFF6         	movff	??_high_isr+14,tblptrl
 37579  0041F2  C074  FFF4         	movff	??_high_isr+13,prodh
 37580  0041F6  C073  FFF3         	movff	??_high_isr+12,prodl
 37581  0041FA  C072  FFDA         	movff	??_high_isr+11,fsr2h
 37582  0041FE  C071  FFD9         	movff	??_high_isr+10,fsr2l
 37583  004202  C070  FFE2         	movff	??_high_isr+9,fsr1h
 37584  004206  C06F  FFE1         	movff	??_high_isr+8,fsr1l
 37585  00420A  C06E  FFEA         	movff	??_high_isr+7,fsr0h
 37586  00420E  C06D  FFE9         	movff	??_high_isr+6,fsr0l
 37587  004212  C06C  FFFB         	movff	??_high_isr+5,pclatu
 37588  004216  C06B  FFFA         	movff	??_high_isr+4,pclath
 37589  00421A  0011               	retfie		f
 37590  00421C                     __end_of_high_isr:
 37591                           	opt stack 0
 37592                           pclatu	equ	0xFFB
 37593                           pclath	equ	0xFFA
 37594                           tblptru	equ	0xFF8
 37595                           tblptrh	equ	0xFF7
 37596                           tblptrl	equ	0xFF6
 37597                           tablat	equ	0xFF5
 37598                           prodh	equ	0xFF4
 37599                           prodl	equ	0xFF3
 37600                           intcon	equ	0xFF2
 37601                           intcon2	equ	0xFF1
 37602                           indf0	equ	0xFEF
 37603                           postinc0	equ	0xFEE
 37604                           plusw0	equ	0xFEB
 37605                           fsr0h	equ	0xFEA
 37606                           fsr0l	equ	0xFE9
 37607                           wreg	equ	0xFE8
 37608                           indf1	equ	0xFE7
 37609                           postdec1	equ	0xFE5
 37610                           fsr1h	equ	0xFE2
 37611                           fsr1l	equ	0xFE1
 37612                           bsr	equ	0xFE0
 37613                           indf2	equ	0xFDF
 37614                           postinc2	equ	0xFDE
 37615                           postdec2	equ	0xFDD
 37616                           plusw2	equ	0xFDB
 37617                           fsr2h	equ	0xFDA
 37618                           fsr2l	equ	0xFD9
 37619                           status	equ	0xFD8
 37620                           
 37621 ;; *************** function i2_ResetTimer0 *****************
 37622 ;; Defined at:
 37623 ;;		line 79 in file "Timer.c"
 37624 ;; Parameters:    Size  Location     Type
 37625 ;;		None
 37626 ;; Auto vars:     Size  Location     Type
 37627 ;;		None
 37628 ;; Return value:  Size  Location     Type
 37629 ;;		None               void
 37630 ;; Registers used:
 37631 ;;		wreg, status,2
 37632 ;; Tracked objects:
 37633 ;;		On entry : 0/0
 37634 ;;		On exit  : 0/0
 37635 ;;		Unchanged: 0/0
 37636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37641 ;;Total ram usage:        0 bytes
 37642 ;; Hardware stack levels used:    1
 37643 ;; This function calls:
 37644 ;;		Nothing
 37645 ;; This function is called by:
 37646 ;;		_high_isr
 37647 ;; This function uses a non-reentrant model
 37648 ;;
 37649                           
 37650                           	psect	text111
 37651  0093AA                     __ptext111:
 37652                           	opt stack 0
 37653  0093AA                     i2_ResetTimer0:
 37654                           	opt stack 17
 37655                           
 37656                           ;Timer.c: 85: TMR0H = 0;
 37657                           
 37658                           ;incstack = 0
 37659  0093AA  0E00               	movlw	0
 37660  0093AC  6ED7               	movwf	4055,c	;volatile
 37661                           
 37662                           ;Timer.c: 86: TMR0L = 2;
 37663  0093AE  0E02               	movlw	2
 37664  0093B0  6ED6               	movwf	4054,c	;volatile
 37665  0093B2  0012               	return		;funcret
 37666  0093B4                     __end_ofi2_ResetTimer0:
 37667                           	opt stack 0
 37668                           pclatu	equ	0xFFB
 37669                           pclath	equ	0xFFA
 37670                           tblptru	equ	0xFF8
 37671                           tblptrh	equ	0xFF7
 37672                           tblptrl	equ	0xFF6
 37673                           tablat	equ	0xFF5
 37674                           prodh	equ	0xFF4
 37675                           prodl	equ	0xFF3
 37676                           intcon	equ	0xFF2
 37677                           intcon2	equ	0xFF1
 37678                           indf0	equ	0xFEF
 37679                           postinc0	equ	0xFEE
 37680                           plusw0	equ	0xFEB
 37681                           fsr0h	equ	0xFEA
 37682                           fsr0l	equ	0xFE9
 37683                           wreg	equ	0xFE8
 37684                           indf1	equ	0xFE7
 37685                           postdec1	equ	0xFE5
 37686                           fsr1h	equ	0xFE2
 37687                           fsr1l	equ	0xFE1
 37688                           bsr	equ	0xFE0
 37689                           indf2	equ	0xFDF
 37690                           postinc2	equ	0xFDE
 37691                           postdec2	equ	0xFDD
 37692                           plusw2	equ	0xFDB
 37693                           fsr2h	equ	0xFDA
 37694                           fsr2l	equ	0xFD9
 37695                           status	equ	0xFD8
 37696                           
 37697 ;; *************** function i2_ReadIRpin *****************
 37698 ;; Defined at:
 37699 ;;		line 107 in file "IR.c"
 37700 ;; Parameters:    Size  Location     Type
 37701 ;;		None
 37702 ;; Auto vars:     Size  Location     Type
 37703 ;;		None
 37704 ;; Return value:  Size  Location     Type
 37705 ;;                  1    wreg      unsigned char 
 37706 ;; Registers used:
 37707 ;;		wreg
 37708 ;; Tracked objects:
 37709 ;;		On entry : 0/0
 37710 ;;		On exit  : 0/0
 37711 ;;		Unchanged: 0/0
 37712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37717 ;;Total ram usage:        0 bytes
 37718 ;; Hardware stack levels used:    1
 37719 ;; This function calls:
 37720 ;;		Nothing
 37721 ;; This function is called by:
 37722 ;;		_high_isr
 37723 ;; This function uses a non-reentrant model
 37724 ;;
 37725                           
 37726                           	psect	text112
 37727  00937E                     __ptext112:
 37728                           	opt stack 0
 37729  00937E                     i2_ReadIRpin:
 37730                           	opt stack 17
 37731                           
 37732                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 37733                           
 37734                           ;incstack = 0
 37735  00937E  A881               	btfss	3969,4,c	;volatile
 37736  009380  D002               	goto	i2l11570
 37737                           
 37738                           ;IR.c: 111: {
 37739                           ;IR.c: 112: return (1);
 37740  009382  0E01               	movlw	1
 37741                           
 37742                           ;IR.c: 113: }
 37743  009384  0012               	return	
 37744  009386                     i2l11570:
 37745                           
 37746                           ;IR.c: 114: else
 37747                           ;IR.c: 115: {
 37748                           ;IR.c: 116: return 0;
 37749  009386  0E00               	movlw	0
 37750  009388  0012               	return	
 37751  00938A  0012               	return		;funcret
 37752  00938C                     __end_ofi2_ReadIRpin:
 37753                           	opt stack 0
 37754                           pclatu	equ	0xFFB
 37755                           pclath	equ	0xFFA
 37756                           tblptru	equ	0xFF8
 37757                           tblptrh	equ	0xFF7
 37758                           tblptrl	equ	0xFF6
 37759                           tablat	equ	0xFF5
 37760                           prodh	equ	0xFF4
 37761                           prodl	equ	0xFF3
 37762                           intcon	equ	0xFF2
 37763                           intcon2	equ	0xFF1
 37764                           indf0	equ	0xFEF
 37765                           postinc0	equ	0xFEE
 37766                           plusw0	equ	0xFEB
 37767                           fsr0h	equ	0xFEA
 37768                           fsr0l	equ	0xFE9
 37769                           wreg	equ	0xFE8
 37770                           indf1	equ	0xFE7
 37771                           postdec1	equ	0xFE5
 37772                           fsr1h	equ	0xFE2
 37773                           fsr1l	equ	0xFE1
 37774                           bsr	equ	0xFE0
 37775                           indf2	equ	0xFDF
 37776                           postinc2	equ	0xFDE
 37777                           postdec2	equ	0xFDD
 37778                           plusw2	equ	0xFDB
 37779                           fsr2h	equ	0xFDA
 37780                           fsr2l	equ	0xFD9
 37781                           status	equ	0xFD8
 37782                           
 37783 ;; *************** function _ResetTimer3 *****************
 37784 ;; Defined at:
 37785 ;;		line 160 in file "Timer.c"
 37786 ;; Parameters:    Size  Location     Type
 37787 ;;		None
 37788 ;; Auto vars:     Size  Location     Type
 37789 ;;		None
 37790 ;; Return value:  Size  Location     Type
 37791 ;;		None               void
 37792 ;; Registers used:
 37793 ;;		wreg, status,2
 37794 ;; Tracked objects:
 37795 ;;		On entry : 0/0
 37796 ;;		On exit  : 0/0
 37797 ;;		Unchanged: 0/0
 37798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37803 ;;Total ram usage:        0 bytes
 37804 ;; Hardware stack levels used:    1
 37805 ;; This function calls:
 37806 ;;		Nothing
 37807 ;; This function is called by:
 37808 ;;		_high_isr
 37809 ;; This function uses a non-reentrant model
 37810 ;;
 37811                           
 37812                           	psect	text113
 37813  0093B4                     __ptext113:
 37814                           	opt stack 0
 37815  0093B4                     _ResetTimer3:
 37816                           	opt stack 17
 37817                           
 37818                           ;Timer.c: 166: TMR3H = 0;
 37819                           
 37820                           ;incstack = 0
 37821  0093B4  0E00               	movlw	0
 37822  0093B6  6EB3               	movwf	4019,c	;volatile
 37823                           
 37824                           ;Timer.c: 167: TMR3L = 2;
 37825  0093B8  0E02               	movlw	2
 37826  0093BA  6EB2               	movwf	4018,c	;volatile
 37827  0093BC  0012               	return		;funcret
 37828  0093BE                     __end_of_ResetTimer3:
 37829                           	opt stack 0
 37830                           pclatu	equ	0xFFB
 37831                           pclath	equ	0xFFA
 37832                           tblptru	equ	0xFF8
 37833                           tblptrh	equ	0xFF7
 37834                           tblptrl	equ	0xFF6
 37835                           tablat	equ	0xFF5
 37836                           prodh	equ	0xFF4
 37837                           prodl	equ	0xFF3
 37838                           intcon	equ	0xFF2
 37839                           intcon2	equ	0xFF1
 37840                           indf0	equ	0xFEF
 37841                           postinc0	equ	0xFEE
 37842                           plusw0	equ	0xFEB
 37843                           fsr0h	equ	0xFEA
 37844                           fsr0l	equ	0xFE9
 37845                           wreg	equ	0xFE8
 37846                           indf1	equ	0xFE7
 37847                           postdec1	equ	0xFE5
 37848                           fsr1h	equ	0xFE2
 37849                           fsr1l	equ	0xFE1
 37850                           bsr	equ	0xFE0
 37851                           indf2	equ	0xFDF
 37852                           postinc2	equ	0xFDE
 37853                           postdec2	equ	0xFDD
 37854                           plusw2	equ	0xFDB
 37855                           fsr2h	equ	0xFDA
 37856                           fsr2l	equ	0xFD9
 37857                           status	equ	0xFD8
 37858                           
 37859 ;; *************** function _IRrawToNEC *****************
 37860 ;; Defined at:
 37861 ;;		line 125 in file "IR.c"
 37862 ;; Parameters:    Size  Location     Type
 37863 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 37864 ;;		 -> IRRawCode(144), 
 37865 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 37866 ;;		 -> IR_NEC(4), 
 37867 ;;  Invert          1   30[COMRAM] unsigned char 
 37868 ;; Auto vars:     Size  Location     Type
 37869 ;;  NECtemp         4    0[BANK0 ] unsigned long 
 37870 ;;  StartBit        1    6[BANK0 ] unsigned char 
 37871 ;;  i               1    5[BANK0 ] unsigned char 
 37872 ;;  first           1    4[BANK0 ] unsigned char 
 37873 ;; Return value:  Size  Location     Type
 37874 ;;                  1    wreg      unsigned char 
 37875 ;; Registers used:
 37876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37877 ;; Tracked objects:
 37878 ;;		On entry : 0/0
 37879 ;;		On exit  : 0/0
 37880 ;;		Unchanged: 0/0
 37881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37882 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37883 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37885 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37886 ;;Total ram usage:       14 bytes
 37887 ;; Hardware stack levels used:    1
 37888 ;; This function calls:
 37889 ;;		Nothing
 37890 ;; This function is called by:
 37891 ;;		_high_isr
 37892 ;; This function uses a non-reentrant model
 37893 ;;
 37894                           
 37895                           	psect	text114
 37896  004FCA                     __ptext114:
 37897                           	opt stack 0
 37898  004FCA                     _IRrawToNEC:
 37899                           	opt stack 17
 37900                           
 37901                           ;IR.c: 153: unsigned char i;
 37902                           ;IR.c: 154: unsigned char first =0;
 37903                           
 37904                           ;incstack = 0
 37905  004FCA  0E00               	movlw	0
 37906  004FCC  0100               	movlb	0	; () banked
 37907  004FCE  6F64               	movwf	IRrawToNEC@first& (0+255),b
 37908                           
 37909                           ;IR.c: 155: unsigned char StartBit=72;
 37910  004FD0  0E48               	movlw	72
 37911  004FD2  0100               	movlb	0	; () banked
 37912  004FD4  6F66               	movwf	IRrawToNEC@StartBit& (0+255),b
 37913                           
 37914                           ;IR.c: 156: unsigned long NECtemp = 0;
 37915  004FD6  0E00               	movlw	0
 37916  004FD8  0100               	movlb	0	; () banked
 37917  004FDA  6F60               	movwf	IRrawToNEC@NECtemp& (0+255),b
 37918  004FDC  0E00               	movlw	0
 37919  004FDE  6F61               	movwf	(IRrawToNEC@NECtemp+1)& (0+255),b
 37920  004FE0  0E00               	movlw	0
 37921  004FE2  6F62               	movwf	(IRrawToNEC@NECtemp+2)& (0+255),b
 37922  004FE4  0E00               	movlw	0
 37923  004FE6  6F63               	movwf	(IRrawToNEC@NECtemp+3)& (0+255),b
 37924                           
 37925                           ;IR.c: 159: for (i =0; i < 72; i++)
 37926  004FE8  0E00               	movlw	0
 37927  004FEA  0100               	movlb	0	; () banked
 37928  004FEC  6F65               	movwf	IRrawToNEC@i& (0+255),b
 37929  004FEE                     i2l15904:
 37930                           
 37931                           ; BSR set to: 0
 37932  004FEE  0E47               	movlw	71
 37933  004FF0  0100               	movlb	0	; () banked
 37934  004FF2  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 37935  004FF4  D001               	goto	i2l15908
 37936                           
 37937                           ; BSR set to: 0
 37938  004FF6  D046               	goto	i2l15928
 37939  004FF8                     i2l15908:
 37940                           
 37941                           ; BSR set to: 0
 37942                           ;IR.c: 160: {
 37943                           ;IR.c: 161: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 37944  004FF8  0100               	movlb	0	; () banked
 37945  004FFA  5165               	movf	IRrawToNEC@i& (0+255),w,b
 37946  004FFC  0D02               	mullw	2
 37947  004FFE  50F3               	movf	prodl,w,c
 37948  005000  241B               	addwf	IRrawToNEC@Raw,w,c
 37949  005002  6ED9               	movwf	fsr2l,c
 37950  005004  50F4               	movf	prodh,w,c
 37951  005006  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 37952  005008  6EDA               	movwf	fsr2h,c
 37953  00500A  0EC8               	movlw	200
 37954  00500C  5CDE               	subwf	postinc2,w,c
 37955  00500E  0EAF               	movlw	175
 37956  005010  58DE               	subwfb	postinc2,w,c
 37957  005012  A0D8               	btfss	status,0,c
 37958  005014  D012               	goto	i2l15918
 37959                           
 37960                           ; BSR set to: 0
 37961  005016  0100               	movlb	0	; () banked
 37962  005018  5165               	movf	IRrawToNEC@i& (0+255),w,b
 37963  00501A  0D02               	mullw	2
 37964  00501C  50F3               	movf	prodl,w,c
 37965  00501E  241B               	addwf	IRrawToNEC@Raw,w,c
 37966  005020  6ED9               	movwf	fsr2l,c
 37967  005022  50F4               	movf	prodh,w,c
 37968  005024  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 37969  005026  6EDA               	movwf	fsr2h,c
 37970  005028  0E51               	movlw	81
 37971  00502A  5CDE               	subwf	postinc2,w,c
 37972  00502C  0EC3               	movlw	195
 37973  00502E  58DE               	subwfb	postinc2,w,c
 37974  005030  B0D8               	btfsc	status,0,c
 37975  005032  D003               	goto	i2l15918
 37976                           
 37977                           ; BSR set to: 0
 37978                           ;IR.c: 162: {
 37979                           ;IR.c: 164: return 2;
 37980  005034  0E02               	movlw	2
 37981                           
 37982                           ; BSR set to: 0
 37983  005036  0012               	return	
 37984                           
 37985                           ; BSR set to: 0
 37986                           ;IR.c: 165: }
 37987  005038  D022               	goto	i2l15924
 37988  00503A                     i2l15918:
 37989                           
 37990                           ; BSR set to: 0
 37991                           ;IR.c: 166: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 37992  00503A  0100               	movlb	0	; () banked
 37993  00503C  5165               	movf	IRrawToNEC@i& (0+255),w,b
 37994  00503E  0D02               	mullw	2
 37995  005040  50F3               	movf	prodl,w,c
 37996  005042  241B               	addwf	IRrawToNEC@Raw,w,c
 37997  005044  6ED9               	movwf	fsr2l,c
 37998  005046  50F4               	movf	prodh,w,c
 37999  005048  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38000  00504A  6EDA               	movwf	fsr2h,c
 38001  00504C  0EA0               	movlw	160
 38002  00504E  5CDE               	subwf	postinc2,w,c
 38003  005050  0E0F               	movlw	15
 38004  005052  58DE               	subwfb	postinc2,w,c
 38005  005054  A0D8               	btfss	status,0,c
 38006  005056  D013               	goto	i2l15924
 38007                           
 38008                           ; BSR set to: 0
 38009  005058  0100               	movlb	0	; () banked
 38010  00505A  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38011  00505C  0D02               	mullw	2
 38012  00505E  50F3               	movf	prodl,w,c
 38013  005060  241B               	addwf	IRrawToNEC@Raw,w,c
 38014  005062  6ED9               	movwf	fsr2l,c
 38015  005064  50F4               	movf	prodh,w,c
 38016  005066  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38017  005068  6EDA               	movwf	fsr2h,c
 38018  00506A  0E89               	movlw	137
 38019  00506C  5CDE               	subwf	postinc2,w,c
 38020  00506E  0E13               	movlw	19
 38021  005070  58DE               	subwfb	postinc2,w,c
 38022  005072  B0D8               	btfsc	status,0,c
 38023  005074  D004               	goto	i2l15924
 38024                           
 38025                           ; BSR set to: 0
 38026                           ;IR.c: 167: {
 38027                           ;IR.c: 169: StartBit = i;
 38028  005076  C065  F066         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 38029                           
 38030                           ;IR.c: 170: break;
 38031  00507A  D004               	goto	i2l15928
 38032                           
 38033                           ; BSR set to: 0
 38034  00507C  D000               	goto	i2l15924
 38035  00507E                     i2l15924:
 38036                           
 38037                           ; BSR set to: 0
 38038  00507E  0100               	movlb	0	; () banked
 38039  005080  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 38040  005082  D7B5               	goto	i2l15904
 38041  005084                     i2l15928:
 38042                           
 38043                           ; BSR set to: 0
 38044                           ;IR.c: 171: }
 38045                           ;IR.c: 172: }
 38046                           ;IR.c: 173: if(72 - StartBit < 72)
 38047  005084  0100               	movlb	0	; () banked
 38048  005086  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38049  005088  6E20               	movwf	??_IRrawToNEC& (0+255),c
 38050  00508A  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 38051  00508C  1E20               	comf	??_IRrawToNEC,f,c
 38052  00508E  1E21               	comf	??_IRrawToNEC+1,f,c
 38053  005090  4A20               	infsnz	??_IRrawToNEC,f,c
 38054  005092  2A21               	incf	??_IRrawToNEC+1,f,c
 38055  005094  0E48               	movlw	72
 38056  005096  2620               	addwf	??_IRrawToNEC,f,c
 38057  005098  0E00               	movlw	0
 38058  00509A  2221               	addwfc	??_IRrawToNEC+1,f,c
 38059  00509C  BE21               	btfsc	??_IRrawToNEC+1,7,c
 38060  00509E  D006               	goto	i2l15930
 38061  0050A0  5021               	movf	??_IRrawToNEC+1,w,c
 38062  0050A2  E106               	bnz	i2l15934
 38063  0050A4  0E48               	movlw	72
 38064  0050A6  5C20               	subwf	??_IRrawToNEC,w,c
 38065  0050A8  B0D8               	btfsc	status,0,c
 38066  0050AA  D002               	goto	i2l15934
 38067  0050AC                     i2l15930:
 38068                           
 38069                           ; BSR set to: 0
 38070                           ;IR.c: 174: {
 38071                           ;IR.c: 176: return 0;
 38072  0050AC  0E00               	movlw	0
 38073                           
 38074                           ; BSR set to: 0
 38075  0050AE  0012               	return	
 38076  0050B0                     i2l15934:
 38077                           
 38078                           ; BSR set to: 0
 38079                           ;IR.c: 177: }
 38080                           ;IR.c: 179: StartBit++;
 38081  0050B0  0100               	movlb	0	; () banked
 38082  0050B2  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38083                           
 38084                           ; BSR set to: 0
 38085                           ;IR.c: 180: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 38086  0050B4  0100               	movlb	0	; () banked
 38087  0050B6  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38088  0050B8  0D02               	mullw	2
 38089  0050BA  50F3               	movf	prodl,w,c
 38090  0050BC  241B               	addwf	IRrawToNEC@Raw,w,c
 38091  0050BE  6ED9               	movwf	fsr2l,c
 38092  0050C0  50F4               	movf	prodh,w,c
 38093  0050C2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38094  0050C4  6EDA               	movwf	fsr2h,c
 38095  0050C6  0E9D               	movlw	157
 38096  0050C8  5CDE               	subwf	postinc2,w,c
 38097  0050CA  0E03               	movlw	3
 38098  0050CC  58DE               	subwfb	postinc2,w,c
 38099  0050CE  A0D8               	btfss	status,0,c
 38100  0050D0  D06E               	goto	i2l15956
 38101                           
 38102                           ; BSR set to: 0
 38103  0050D2  0100               	movlb	0	; () banked
 38104  0050D4  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38105  0050D6  0D02               	mullw	2
 38106  0050D8  50F3               	movf	prodl,w,c
 38107  0050DA  241B               	addwf	IRrawToNEC@Raw,w,c
 38108  0050DC  6ED9               	movwf	fsr2l,c
 38109  0050DE  50F4               	movf	prodh,w,c
 38110  0050E0  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38111  0050E2  6EDA               	movwf	fsr2h,c
 38112  0050E4  0EE3               	movlw	227
 38113  0050E6  5CDE               	subwf	postinc2,w,c
 38114  0050E8  0E04               	movlw	4
 38115  0050EA  58DE               	subwfb	postinc2,w,c
 38116  0050EC  B0D8               	btfsc	status,0,c
 38117  0050EE  D05F               	goto	i2l15956
 38118                           
 38119                           ; BSR set to: 0
 38120                           ;IR.c: 181: {
 38121                           ;IR.c: 183: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38122  0050F0  0100               	movlb	0	; () banked
 38123  0050F2  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38124  0050F4  0D02               	mullw	2
 38125  0050F6  50F3               	movf	prodl,w,c
 38126  0050F8  241B               	addwf	IRrawToNEC@Raw,w,c
 38127  0050FA  6ED9               	movwf	fsr2l,c
 38128  0050FC  50F4               	movf	prodh,w,c
 38129  0050FE  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38130  005100  6EDA               	movwf	fsr2h,c
 38131  005102  0E01               	movlw	1
 38132  005104  50DB               	movf	plusw2,w,c
 38133  005106  E104               	bnz	i2u1992_40
 38134  005108  0E7D               	movlw	125
 38135  00510A  5CDE               	subwf	postinc2,w,c
 38136  00510C  A0D8               	btfss	status,0,c
 38137  00510E  D070               	goto	i2l15964
 38138  005110                     i2u1992_40:
 38139                           
 38140                           ; BSR set to: 0
 38141  005110  0100               	movlb	0	; () banked
 38142  005112  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38143  005114  0D02               	mullw	2
 38144  005116  50F3               	movf	prodl,w,c
 38145  005118  241B               	addwf	IRrawToNEC@Raw,w,c
 38146  00511A  6ED9               	movwf	fsr2l,c
 38147  00511C  50F4               	movf	prodh,w,c
 38148  00511E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38149  005120  6EDA               	movwf	fsr2h,c
 38150  005122  0E59               	movlw	89
 38151  005124  5CDE               	subwf	postinc2,w,c
 38152  005126  0E02               	movlw	2
 38153  005128  58DE               	subwfb	postinc2,w,c
 38154  00512A  B0D8               	btfsc	status,0,c
 38155  00512C  D061               	goto	i2l15964
 38156                           
 38157                           ; BSR set to: 0
 38158                           ;IR.c: 184: {
 38159                           ;IR.c: 186: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38160  00512E  0100               	movlb	0	; () banked
 38161  005130  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38162  005132  0D02               	mullw	2
 38163  005134  50F3               	movf	prodl,w,c
 38164  005136  241B               	addwf	IRrawToNEC@Raw,w,c
 38165  005138  6ED9               	movwf	fsr2l,c
 38166  00513A  50F4               	movf	prodh,w,c
 38167  00513C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38168  00513E  6EDA               	movwf	fsr2h,c
 38169  005140  0E01               	movlw	1
 38170  005142  50DB               	movf	plusw2,w,c
 38171  005144  E104               	bnz	i2u1994_40
 38172  005146  0E7D               	movlw	125
 38173  005148  5CDE               	subwf	postinc2,w,c
 38174  00514A  A0D8               	btfss	status,0,c
 38175  00514C  D051               	goto	i2l15964
 38176  00514E                     i2u1994_40:
 38177                           
 38178                           ; BSR set to: 0
 38179  00514E  0100               	movlb	0	; () banked
 38180  005150  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38181  005152  0D02               	mullw	2
 38182  005154  50F3               	movf	prodl,w,c
 38183  005156  241B               	addwf	IRrawToNEC@Raw,w,c
 38184  005158  6ED9               	movwf	fsr2l,c
 38185  00515A  50F4               	movf	prodh,w,c
 38186  00515C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38187  00515E  6EDA               	movwf	fsr2h,c
 38188  005160  0E59               	movlw	89
 38189  005162  5CDE               	subwf	postinc2,w,c
 38190  005164  0E02               	movlw	2
 38191  005166  58DE               	subwfb	postinc2,w,c
 38192  005168  B0D8               	btfsc	status,0,c
 38193  00516A  D042               	goto	i2l15964
 38194                           
 38195                           ; BSR set to: 0
 38196                           ;IR.c: 187: {
 38197                           ;IR.c: 189: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 38198  00516C  0100               	movlb	0	; () banked
 38199  00516E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38200  005170  0D02               	mullw	2
 38201  005172  50F3               	movf	prodl,w,c
 38202  005174  241B               	addwf	IRrawToNEC@Raw,w,c
 38203  005176  6ED9               	movwf	fsr2l,c
 38204  005178  50F4               	movf	prodh,w,c
 38205  00517A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38206  00517C  6EDA               	movwf	fsr2h,c
 38207  00517E  0EC8               	movlw	200
 38208  005180  5CDE               	subwf	postinc2,w,c
 38209  005182  0EAF               	movlw	175
 38210  005184  58DE               	subwfb	postinc2,w,c
 38211  005186  A0D8               	btfss	status,0,c
 38212  005188  D033               	goto	i2l15964
 38213                           
 38214                           ; BSR set to: 0
 38215  00518A  0100               	movlb	0	; () banked
 38216  00518C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38217  00518E  0D02               	mullw	2
 38218  005190  50F3               	movf	prodl,w,c
 38219  005192  241B               	addwf	IRrawToNEC@Raw,w,c
 38220  005194  6ED9               	movwf	fsr2l,c
 38221  005196  50F4               	movf	prodh,w,c
 38222  005198  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38223  00519A  6EDA               	movwf	fsr2h,c
 38224  00519C  0E51               	movlw	81
 38225  00519E  5CDE               	subwf	postinc2,w,c
 38226  0051A0  0EC3               	movlw	195
 38227  0051A2  58DE               	subwfb	postinc2,w,c
 38228  0051A4  B0D8               	btfsc	status,0,c
 38229  0051A6  D024               	goto	i2l15964
 38230                           
 38231                           ; BSR set to: 0
 38232                           ;IR.c: 190: {
 38233                           ;IR.c: 192: return 2;
 38234  0051A8  0E02               	movlw	2
 38235                           
 38236                           ; BSR set to: 0
 38237  0051AA  0012               	return	
 38238                           
 38239                           ; BSR set to: 0
 38240                           ;IR.c: 193: }
 38241                           ;IR.c: 194: }
 38242                           ;IR.c: 195: }
 38243                           ;IR.c: 197: }
 38244                           
 38245                           ; BSR set to: 0
 38246                           
 38247                           ; BSR set to: 0
 38248  0051AC  D021               	goto	i2l15964
 38249  0051AE                     i2l15956:
 38250                           
 38251                           ; BSR set to: 0
 38252                           ;IR.c: 198: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 38253  0051AE  0100               	movlb	0	; () banked
 38254  0051B0  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38255  0051B2  0D02               	mullw	2
 38256  0051B4  50F3               	movf	prodl,w,c
 38257  0051B6  241B               	addwf	IRrawToNEC@Raw,w,c
 38258  0051B8  6ED9               	movwf	fsr2l,c
 38259  0051BA  50F4               	movf	prodh,w,c
 38260  0051BC  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38261  0051BE  6EDA               	movwf	fsr2h,c
 38262  0051C0  0ED6               	movlw	214
 38263  0051C2  5CDE               	subwf	postinc2,w,c
 38264  0051C4  0E06               	movlw	6
 38265  0051C6  58DE               	subwfb	postinc2,w,c
 38266  0051C8  A0D8               	btfss	status,0,c
 38267  0051CA  D00F               	goto	i2l15960
 38268                           
 38269                           ; BSR set to: 0
 38270  0051CC  0100               	movlb	0	; () banked
 38271  0051CE  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38272  0051D0  0D02               	mullw	2
 38273  0051D2  50F3               	movf	prodl,w,c
 38274  0051D4  241B               	addwf	IRrawToNEC@Raw,w,c
 38275  0051D6  6ED9               	movwf	fsr2l,c
 38276  0051D8  50F4               	movf	prodh,w,c
 38277  0051DA  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38278  0051DC  6EDA               	movwf	fsr2h,c
 38279  0051DE  0EBF               	movlw	191
 38280  0051E0  5CDE               	subwf	postinc2,w,c
 38281  0051E2  0E0A               	movlw	10
 38282  0051E4  58DE               	subwfb	postinc2,w,c
 38283  0051E6  A0D8               	btfss	status,0,c
 38284  0051E8  D003               	goto	i2l15964
 38285  0051EA                     i2l15960:
 38286                           
 38287                           ; BSR set to: 0
 38288                           ;IR.c: 199: {
 38289                           ;IR.c: 201: return 0;
 38290  0051EA  0E00               	movlw	0
 38291                           
 38292                           ; BSR set to: 0
 38293  0051EC  0012               	return	
 38294                           
 38295                           ; BSR set to: 0
 38296  0051EE  D000               	goto	i2l15964
 38297  0051F0                     i2l15964:
 38298                           
 38299                           ; BSR set to: 0
 38300                           ;IR.c: 202: }
 38301                           ;IR.c: 204: StartBit++;
 38302  0051F0  0100               	movlb	0	; () banked
 38303  0051F2  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38304                           
 38305                           ; BSR set to: 0
 38306                           ;IR.c: 205: for(i = StartBit; i < 72;i++)
 38307  0051F4  C066  F065         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 38308  0051F8                     i2l15968:
 38309                           
 38310                           ; BSR set to: 0
 38311  0051F8  0E47               	movlw	71
 38312  0051FA  0100               	movlb	0	; () banked
 38313  0051FC  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38314  0051FE  D001               	goto	i2l15972
 38315                           
 38316                           ; BSR set to: 0
 38317  005200  D0E0               	goto	i2l16048
 38318  005202                     i2l15972:
 38319                           
 38320                           ; BSR set to: 0
 38321                           ;IR.c: 206: {
 38322                           ;IR.c: 207: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38323  005202  0100               	movlb	0	; () banked
 38324  005204  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38325  005206  0D02               	mullw	2
 38326  005208  50F3               	movf	prodl,w,c
 38327  00520A  241B               	addwf	IRrawToNEC@Raw,w,c
 38328  00520C  6ED9               	movwf	fsr2l,c
 38329  00520E  50F4               	movf	prodh,w,c
 38330  005210  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38331  005212  6EDA               	movwf	fsr2h,c
 38332  005214  0E01               	movlw	1
 38333  005216  50DB               	movf	plusw2,w,c
 38334  005218  E104               	bnz	i2u2001_40
 38335  00521A  0E7D               	movlw	125
 38336  00521C  5CDE               	subwf	postinc2,w,c
 38337  00521E  A0D8               	btfss	status,0,c
 38338  005220  D02A               	goto	i2l15988
 38339  005222                     i2u2001_40:
 38340                           
 38341                           ; BSR set to: 0
 38342  005222  0100               	movlb	0	; () banked
 38343  005224  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38344  005226  0D02               	mullw	2
 38345  005228  50F3               	movf	prodl,w,c
 38346  00522A  241B               	addwf	IRrawToNEC@Raw,w,c
 38347  00522C  6ED9               	movwf	fsr2l,c
 38348  00522E  50F4               	movf	prodh,w,c
 38349  005230  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38350  005232  6EDA               	movwf	fsr2h,c
 38351  005234  0E59               	movlw	89
 38352  005236  5CDE               	subwf	postinc2,w,c
 38353  005238  0E02               	movlw	2
 38354  00523A  58DE               	subwfb	postinc2,w,c
 38355  00523C  B0D8               	btfsc	status,0,c
 38356  00523E  D01B               	goto	i2l15988
 38357                           
 38358                           ; BSR set to: 0
 38359                           ;IR.c: 208: {
 38360                           ;IR.c: 209: if(!first)
 38361  005240  0100               	movlb	0	; () banked
 38362  005242  5164               	movf	IRrawToNEC@first& (0+255),w,b
 38363  005244  0100               	movlb	0	; () banked
 38364  005246  A4D8               	btfss	status,2,c
 38365  005248  D002               	goto	i2l15980
 38366                           
 38367                           ; BSR set to: 0
 38368                           ;IR.c: 210: {
 38369                           ;IR.c: 212: first = 1;
 38370  00524A  0E01               	movlw	1
 38371  00524C  D049               	goto	L44
 38372  00524E                     i2l15980:
 38373                           
 38374                           ; BSR set to: 0
 38375                           ;IR.c: 214: else
 38376                           ;IR.c: 215: {
 38377                           ;IR.c: 217: first = 0;
 38378  00524E  0E00               	movlw	0
 38379  005250  0100               	movlb	0	; () banked
 38380  005252  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38381                           
 38382                           ; BSR set to: 0
 38383                           ;IR.c: 218: NECtemp <<= 1;
 38384  005254  0100               	movlb	0	; () banked
 38385  005256  90D8               	bcf	status,0,c
 38386  005258  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 38387  00525A  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38388  00525C  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38389  00525E  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38390                           
 38391                           ; BSR set to: 0
 38392                           ;IR.c: 219: if(!Invert)
 38393  005260  501F               	movf	IRrawToNEC@Invert,w,c
 38394  005262  A4D8               	btfss	status,2,c
 38395  005264  D0A9               	goto	i2l16044
 38396                           
 38397                           ; BSR set to: 0
 38398                           ;IR.c: 220: {
 38399                           ;IR.c: 221: NECtemp++;
 38400  005266  0E01               	movlw	1
 38401  005268  0100               	movlb	0	; () banked
 38402  00526A  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 38403  00526C  0E00               	movlw	0
 38404  00526E  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38405  005270  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38406  005272  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38407                           
 38408                           ; BSR set to: 0
 38409                           ;IR.c: 222: }
 38410                           ;IR.c: 223: }
 38411                           ;IR.c: 224: }
 38412                           
 38413                           ; BSR set to: 0
 38414  005274  D0A1               	goto	i2l16044
 38415  005276                     i2l15988:
 38416                           
 38417                           ; BSR set to: 0
 38418                           ;IR.c: 225: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 38419  005276  0100               	movlb	0	; () banked
 38420  005278  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38421  00527A  0D02               	mullw	2
 38422  00527C  50F3               	movf	prodl,w,c
 38423  00527E  241B               	addwf	IRrawToNEC@Raw,w,c
 38424  005280  6ED9               	movwf	fsr2l,c
 38425  005282  50F4               	movf	prodh,w,c
 38426  005284  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38427  005286  6EDA               	movwf	fsr2h,c
 38428  005288  0EBC               	movlw	188
 38429  00528A  5CDE               	subwf	postinc2,w,c
 38430  00528C  0E02               	movlw	2
 38431  00528E  58DE               	subwfb	postinc2,w,c
 38432  005290  A0D8               	btfss	status,0,c
 38433  005292  D02C               	goto	i2l16006
 38434                           
 38435                           ; BSR set to: 0
 38436  005294  0100               	movlb	0	; () banked
 38437  005296  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38438  005298  0D02               	mullw	2
 38439  00529A  50F3               	movf	prodl,w,c
 38440  00529C  241B               	addwf	IRrawToNEC@Raw,w,c
 38441  00529E  6ED9               	movwf	fsr2l,c
 38442  0052A0  50F4               	movf	prodh,w,c
 38443  0052A2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38444  0052A4  6EDA               	movwf	fsr2h,c
 38445  0052A6  0EB7               	movlw	183
 38446  0052A8  5CDE               	subwf	postinc2,w,c
 38447  0052AA  0E03               	movlw	3
 38448  0052AC  58DE               	subwfb	postinc2,w,c
 38449  0052AE  B0D8               	btfsc	status,0,c
 38450  0052B0  D01D               	goto	i2l16006
 38451                           
 38452                           ; BSR set to: 0
 38453                           ;IR.c: 226: {
 38454                           ;IR.c: 227: if(first)
 38455  0052B2  0100               	movlb	0	; () banked
 38456  0052B4  5164               	movf	IRrawToNEC@first& (0+255),w,b
 38457  0052B6  0100               	movlb	0	; () banked
 38458  0052B8  B4D8               	btfsc	status,2,c
 38459  0052BA  D015               	goto	i2l16002
 38460                           
 38461                           ; BSR set to: 0
 38462                           ;IR.c: 228: {
 38463                           ;IR.c: 230: NECtemp <<= 1;
 38464  0052BC  0100               	movlb	0	; () banked
 38465  0052BE  90D8               	bcf	status,0,c
 38466  0052C0  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 38467  0052C2  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38468  0052C4  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38469  0052C6  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38470                           
 38471                           ; BSR set to: 0
 38472                           ;IR.c: 231: if(Invert)
 38473  0052C8  501F               	movf	IRrawToNEC@Invert,w,c
 38474  0052CA  B4D8               	btfsc	status,2,c
 38475  0052CC  D008               	goto	i2l16000
 38476                           
 38477                           ; BSR set to: 0
 38478                           ;IR.c: 232: {
 38479                           ;IR.c: 233: NECtemp++;
 38480  0052CE  0E01               	movlw	1
 38481  0052D0  0100               	movlb	0	; () banked
 38482  0052D2  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 38483  0052D4  0E00               	movlw	0
 38484  0052D6  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 38485  0052D8  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 38486  0052DA  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 38487  0052DC  D000               	goto	i2l16000
 38488  0052DE                     i2l16000:
 38489                           
 38490                           ; BSR set to: 0
 38491                           ;IR.c: 234: }
 38492                           ;IR.c: 235: first = 0;
 38493  0052DE  0E00               	movlw	0
 38494  0052E0                     L44:
 38495  0052E0  0100               	movlb	0	; () banked
 38496  0052E2  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38497                           
 38498                           ;IR.c: 236: }
 38499  0052E4  D069               	goto	i2l16044
 38500  0052E6                     i2l16002:
 38501                           
 38502                           ; BSR set to: 0
 38503                           ;IR.c: 237: else
 38504                           ;IR.c: 238: {
 38505                           ;IR.c: 240: return 0;
 38506  0052E6  0E00               	movlw	0
 38507                           
 38508                           ; BSR set to: 0
 38509  0052E8  0012               	return	
 38510                           
 38511                           ; BSR set to: 0
 38512                           ;IR.c: 241: }
 38513                           ;IR.c: 242: }
 38514  0052EA  D066               	goto	i2l16044
 38515  0052EC                     i2l16006:
 38516                           
 38517                           ; BSR set to: 0
 38518                           ;IR.c: 243: else if(Raw[StartBit] == 0 && first == 1)
 38519  0052EC  0100               	movlb	0	; () banked
 38520  0052EE  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38521  0052F0  0D02               	mullw	2
 38522  0052F2  50F3               	movf	prodl,w,c
 38523  0052F4  241B               	addwf	IRrawToNEC@Raw,w,c
 38524  0052F6  6ED9               	movwf	fsr2l,c
 38525  0052F8  50F4               	movf	prodh,w,c
 38526  0052FA  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38527  0052FC  6EDA               	movwf	fsr2h,c
 38528  0052FE  50DE               	movf	postinc2,w,c
 38529  005300  10DE               	iorwf	postinc2,w,c
 38530  005302  A4D8               	btfss	status,2,c
 38531  005304  D013               	goto	i2l16018
 38532                           
 38533                           ; BSR set to: 0
 38534  005306  0100               	movlb	0	; () banked
 38535  005308  0564               	decf	IRrawToNEC@first& (0+255),w,b
 38536  00530A  A4D8               	btfss	status,2,c
 38537  00530C  D00F               	goto	i2l16018
 38538  00530E                     i2l16010:
 38539                           
 38540                           ; BSR set to: 0
 38541                           ;IR.c: 244: {
 38542                           ;IR.c: 249: *NEC = NECtemp;
 38543  00530E  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 38544  005312  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 38545  005316  C060  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 38546  00531A  C061  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 38547  00531E  C062  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 38548  005322  C063  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 38549  005326  D021               	goto	i2l16024
 38550                           
 38551                           ; BSR set to: 0
 38552                           
 38553                           ; BSR set to: 0
 38554                           ;IR.c: 250: return 1;
 38555  005328  0012               	return	
 38556                           
 38557                           ; BSR set to: 0
 38558                           ;IR.c: 251: }
 38559  00532A  D046               	goto	i2l16044
 38560  00532C                     i2l16018:
 38561                           
 38562                           ; BSR set to: 0
 38563                           ;IR.c: 252: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 38564  00532C  0100               	movlb	0	; () banked
 38565  00532E  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38566  005330  0D02               	mullw	2
 38567  005332  50F3               	movf	prodl,w,c
 38568  005334  241B               	addwf	IRrawToNEC@Raw,w,c
 38569  005336  6ED9               	movwf	fsr2l,c
 38570  005338  50F4               	movf	prodh,w,c
 38571  00533A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38572  00533C  6EDA               	movwf	fsr2h,c
 38573  00533E  0E38               	movlw	56
 38574  005340  5CDE               	subwf	postinc2,w,c
 38575  005342  0E4A               	movlw	74
 38576  005344  58DE               	subwfb	postinc2,w,c
 38577  005346  A0D8               	btfss	status,0,c
 38578  005348  D013               	goto	i2l16030
 38579                           
 38580                           ; BSR set to: 0
 38581  00534A  0100               	movlb	0	; () banked
 38582  00534C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38583  00534E  0D02               	mullw	2
 38584  005350  50F3               	movf	prodl,w,c
 38585  005352  241B               	addwf	IRrawToNEC@Raw,w,c
 38586  005354  6ED9               	movwf	fsr2l,c
 38587  005356  50F4               	movf	prodh,w,c
 38588  005358  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38589  00535A  6EDA               	movwf	fsr2h,c
 38590  00535C  0E09               	movlw	9
 38591  00535E  5CDE               	subwf	postinc2,w,c
 38592  005360  0E52               	movlw	82
 38593  005362  58DE               	subwfb	postinc2,w,c
 38594  005364  B0D8               	btfsc	status,0,c
 38595  005366  D004               	goto	i2l16030
 38596  005368  D7D2               	goto	i2l16010
 38597  00536A                     i2l16024:
 38598                           
 38599                           ; BSR set to: 0
 38600                           ;IR.c: 256: return 1;
 38601  00536A  0E01               	movlw	1
 38602                           
 38603                           ; BSR set to: 0
 38604  00536C  0012               	return	
 38605                           
 38606                           ; BSR set to: 0
 38607                           ;IR.c: 257: }
 38608  00536E  D024               	goto	i2l16044
 38609  005370                     i2l16030:
 38610                           
 38611                           ; BSR set to: 0
 38612                           ;IR.c: 258: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 38613  005370  0100               	movlb	0	; () banked
 38614  005372  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38615  005374  0D02               	mullw	2
 38616  005376  50F3               	movf	prodl,w,c
 38617  005378  241B               	addwf	IRrawToNEC@Raw,w,c
 38618  00537A  6ED9               	movwf	fsr2l,c
 38619  00537C  50F4               	movf	prodh,w,c
 38620  00537E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38621  005380  6EDA               	movwf	fsr2h,c
 38622  005382  0EC8               	movlw	200
 38623  005384  5CDE               	subwf	postinc2,w,c
 38624  005386  0EAF               	movlw	175
 38625  005388  58DE               	subwfb	postinc2,w,c
 38626  00538A  A0D8               	btfss	status,0,c
 38627  00538C  D012               	goto	i2l16040
 38628                           
 38629                           ; BSR set to: 0
 38630  00538E  0100               	movlb	0	; () banked
 38631  005390  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38632  005392  0D02               	mullw	2
 38633  005394  50F3               	movf	prodl,w,c
 38634  005396  241B               	addwf	IRrawToNEC@Raw,w,c
 38635  005398  6ED9               	movwf	fsr2l,c
 38636  00539A  50F4               	movf	prodh,w,c
 38637  00539C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38638  00539E  6EDA               	movwf	fsr2h,c
 38639  0053A0  0E51               	movlw	81
 38640  0053A2  5CDE               	subwf	postinc2,w,c
 38641  0053A4  0EC3               	movlw	195
 38642  0053A6  58DE               	subwfb	postinc2,w,c
 38643  0053A8  B0D8               	btfsc	status,0,c
 38644  0053AA  D003               	goto	i2l16040
 38645                           
 38646                           ; BSR set to: 0
 38647                           ;IR.c: 259: {
 38648                           ;IR.c: 261: return 2;
 38649  0053AC  0E02               	movlw	2
 38650                           
 38651                           ; BSR set to: 0
 38652  0053AE  0012               	return	
 38653                           
 38654                           ; BSR set to: 0
 38655                           ;IR.c: 262: }
 38656  0053B0  D003               	goto	i2l16044
 38657  0053B2                     i2l16040:
 38658                           
 38659                           ; BSR set to: 0
 38660                           ;IR.c: 263: else
 38661                           ;IR.c: 264: {
 38662                           ;IR.c: 265: return 0;
 38663  0053B2  0E00               	movlw	0
 38664                           
 38665                           ; BSR set to: 0
 38666  0053B4  0012               	return	
 38667                           
 38668                           ; BSR set to: 0
 38669                           
 38670                           ; BSR set to: 0
 38671                           
 38672                           ; BSR set to: 0
 38673                           
 38674                           ; BSR set to: 0
 38675  0053B6  D000               	goto	i2l16044
 38676  0053B8                     i2l16044:
 38677                           
 38678                           ; BSR set to: 0
 38679                           ;IR.c: 266: }
 38680                           ;IR.c: 267: StartBit++;
 38681  0053B8  0100               	movlb	0	; () banked
 38682  0053BA  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38683  0053BC  0100               	movlb	0	; () banked
 38684  0053BE  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 38685  0053C0  D71B               	goto	i2l15968
 38686  0053C2                     i2l16048:
 38687                           
 38688                           ; BSR set to: 0
 38689                           ;IR.c: 268: }
 38690                           ;IR.c: 270: return 0;
 38691  0053C2  0E00               	movlw	0
 38692  0053C4  0012               	return	
 38693                           
 38694                           ; BSR set to: 0
 38695                           
 38696                           ; BSR set to: 0
 38697  0053C6  0012               	return		;funcret
 38698  0053C8                     __end_of_IRrawToNEC:
 38699                           	opt stack 0
 38700                           pclatu	equ	0xFFB
 38701                           pclath	equ	0xFFA
 38702                           tblptru	equ	0xFF8
 38703                           tblptrh	equ	0xFF7
 38704                           tblptrl	equ	0xFF6
 38705                           tablat	equ	0xFF5
 38706                           prodh	equ	0xFF4
 38707                           prodl	equ	0xFF3
 38708                           intcon	equ	0xFF2
 38709                           intcon2	equ	0xFF1
 38710                           indf0	equ	0xFEF
 38711                           postinc0	equ	0xFEE
 38712                           plusw0	equ	0xFEB
 38713                           fsr0h	equ	0xFEA
 38714                           fsr0l	equ	0xFE9
 38715                           wreg	equ	0xFE8
 38716                           indf1	equ	0xFE7
 38717                           postdec1	equ	0xFE5
 38718                           fsr1h	equ	0xFE2
 38719                           fsr1l	equ	0xFE1
 38720                           bsr	equ	0xFE0
 38721                           indf2	equ	0xFDF
 38722                           postinc2	equ	0xFDE
 38723                           postdec2	equ	0xFDD
 38724                           plusw2	equ	0xFDB
 38725                           fsr2h	equ	0xFDA
 38726                           fsr2l	equ	0xFD9
 38727                           status	equ	0xFD8
 38728                           pclatu	equ	0xFFB
 38729                           pclath	equ	0xFFA
 38730                           tblptru	equ	0xFF8
 38731                           tblptrh	equ	0xFF7
 38732                           tblptrl	equ	0xFF6
 38733                           tablat	equ	0xFF5
 38734                           prodh	equ	0xFF4
 38735                           prodl	equ	0xFF3
 38736                           intcon	equ	0xFF2
 38737                           intcon2	equ	0xFF1
 38738                           indf0	equ	0xFEF
 38739                           postinc0	equ	0xFEE
 38740                           plusw0	equ	0xFEB
 38741                           fsr0h	equ	0xFEA
 38742                           fsr0l	equ	0xFE9
 38743                           wreg	equ	0xFE8
 38744                           indf1	equ	0xFE7
 38745                           postdec1	equ	0xFE5
 38746                           fsr1h	equ	0xFE2
 38747                           fsr1l	equ	0xFE1
 38748                           bsr	equ	0xFE0
 38749                           indf2	equ	0xFDF
 38750                           postinc2	equ	0xFDE
 38751                           postdec2	equ	0xFDD
 38752                           plusw2	equ	0xFDB
 38753                           fsr2h	equ	0xFDA
 38754                           fsr2l	equ	0xFD9
 38755                           status	equ	0xFD8
 38756                           
 38757                           	psect	rparam
 38758  0000                     pclatu	equ	0xFFB
 38759                           pclath	equ	0xFFA
 38760                           tblptru	equ	0xFF8
 38761                           tblptrh	equ	0xFF7
 38762                           tblptrl	equ	0xFF6
 38763                           tablat	equ	0xFF5
 38764                           prodh	equ	0xFF4
 38765                           prodl	equ	0xFF3
 38766                           intcon	equ	0xFF2
 38767                           intcon2	equ	0xFF1
 38768                           indf0	equ	0xFEF
 38769                           postinc0	equ	0xFEE
 38770                           plusw0	equ	0xFEB
 38771                           fsr0h	equ	0xFEA
 38772                           fsr0l	equ	0xFE9
 38773                           wreg	equ	0xFE8
 38774                           indf1	equ	0xFE7
 38775                           postdec1	equ	0xFE5
 38776                           fsr1h	equ	0xFE2
 38777                           fsr1l	equ	0xFE1
 38778                           bsr	equ	0xFE0
 38779                           indf2	equ	0xFDF
 38780                           postinc2	equ	0xFDE
 38781                           postdec2	equ	0xFDD
 38782                           plusw2	equ	0xFDB
 38783                           fsr2h	equ	0xFDA
 38784                           fsr2l	equ	0xFD9
 38785                           status	equ	0xFD8


Data Sizes:
    Strings     3070
    Constant    622
    Data        64
    BSS         848
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      66
    BANK0           160    123     135
    BANK1           256    160     236
    BANK2           256    132     136
    BANK3           256    255     255
    BANK4           256      0     136
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0     144
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_146(CODE[7]), sprintf@c(BANK1[1]), Version(CODE[9]), GetNumber@temp(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_101(CODE[19]), STR_99(CODE[15]), STR_85(CODE[21]), STR_83(CODE[20]), 
		 -> STR_75(CODE[44]), STR_74(CODE[54]), STR_73(CODE[54]), STR_72(CODE[63]), 
		 -> STR_50(CODE[44]), STR_49(CODE[46]), STR_47(CODE[44]), STR_46(CODE[21]), 
		 -> STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[20]), STR_29(CODE[23]), 
		 -> STR_28(CODE[21]), STR_27(CODE[21]), STR_17(CODE[28]), STR_4(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK1[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(BANK1[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK7[144]), 

    GetEEPROM@Temp	PTR struct EEdata size(2) Largest target is 136
		 -> SyncEEPROMToGlobal@Temp(BANK1[136]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 49
		 -> STR_142(CODE[32]), STR_141(CODE[31]), STR_140(CODE[32]), STR_139(CODE[31]), 
		 -> STR_138(CODE[32]), STR_137(CODE[31]), STR_136(CODE[20]), STR_135(CODE[19]), 
		 -> STR_134(CODE[23]), STR_133(CODE[22]), STR_132(CODE[19]), STR_131(CODE[19]), 
		 -> STR_130(CODE[19]), STR_128(CODE[40]), STR_126(CODE[46]), STR_124(CODE[46]), 
		 -> STR_122(CODE[46]), STR_120(CODE[46]), STR_118(CODE[46]), STR_116(CODE[46]), 
		 -> STR_114(CODE[49]), STR_112(CODE[49]), STR_110(CODE[49]), STR_108(CODE[49]), 
		 -> STR_106(CODE[49]), STR_104(CODE[49]), STR_102(CODE[24]), STR_100(CODE[25]), 
		 -> STR_97(CODE[28]), STR_94(CODE[26]), STR_92(CODE[32]), STR_90(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 100
		 -> STR_127(CODE[5]), STR_125(CODE[13]), STR_123(CODE[13]), STR_121(CODE[13]), 
		 -> STR_119(CODE[13]), STR_117(CODE[13]), STR_115(CODE[13]), STR_113(CODE[11]), 
		 -> STR_111(CODE[11]), STR_109(CODE[11]), STR_107(CODE[11]), STR_105(CODE[11]), 
		 -> STR_103(CODE[11]), STR_96(CODE[8]), STR_93(CODE[8]), STR_91(CODE[6]), 
		 -> STR_89(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> STR_145(CODE[36]), STR_143(CODE[27]), STR_129(CODE[13]), STR_98(CODE[13]), 
		 -> STR_95(CODE[21]), STR_88(CODE[17]), STR_81(CODE[29]), STR_80(CODE[18]), 
		 -> STR_79(CODE[29]), STR_76(CODE[44]), STR_71(CODE[46]), STR_70(CODE[42]), 
		 -> STR_69(CODE[50]), STR_68(CODE[50]), STR_66(CODE[31]), STR_65(CODE[31]), 
		 -> STR_64(CODE[37]), STR_63(CODE[37]), STR_62(CODE[37]), STR_58(CODE[18]), 
		 -> STR_57(CODE[14]), STR_56(CODE[9]), STR_55(CODE[20]), STR_54(CODE[16]), 
		 -> STR_53(CODE[7]), STR_52(CODE[35]), STR_51(CODE[37]), STR_48(CODE[47]), 
		 -> STR_43(CODE[17]), STR_42(CODE[9]), STR_41(CODE[18]), STR_40(CODE[9]), 
		 -> STR_39(CODE[22]), STR_38(CODE[11]), STR_37(CODE[20]), STR_36(CODE[7]), 
		 -> STR_35(CODE[31]), STR_34(CODE[33]), STR_30(CODE[32]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_23(CODE[29]), STR_21(CODE[29]), SYNTAX_ERR(CODE[14]), 
		 -> UseBluetooth@buf(BANK2[100]), STR_1(CODE[16]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> STR_144(CODE[28]), STR_87(CODE[13]), STR_78(CODE[32]), STR_67(CODE[14]), 
		 -> SYNTAX_ERR(CODE[14]), STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[6]), 
		 -> STR_12(CODE[6]), STR_10(CODE[9]), STR_8(CODE[21]), STR_6(CODE[10]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), STR_2(CODE[4]), CRLN(CODE[3]), ReceivedString(BANK6[255]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_61(CODE[7]), STR_60(CODE[9]), STR_59(CODE[7]), STR_45(CODE[4]), 
		 -> STR_44(CODE[13]), STR_24(CODE[4]), STR_22(CODE[6]), STR_20(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), main@BluetoothString(BANK3[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_19(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> STR_3(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK5[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_84(CODE[8]), STR_82(CODE[8]), STR_77(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_86(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> StringAddEqual@temp(BANK1[100]), ReceivedString(BANK6[255]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK7[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@RFchannel(BANK1[10]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> CommandString(BANK5[255]), StringAddEqual@temp(BANK1[100]), ReceivedString(BANK6[255]), main@BluetoothString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _ClearUSART->_ReadUSART
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UseBluetooth
    _BluetoothInitialSetup->_sprintf
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               260   260      0  397522
                                            155 BANK1      5     5      0
                                              0 BANK3    255   255      0
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   23264
                                             89 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    8911
                                             38 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    2809
                                             34 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       147   144      3  181151
                                            140 BANK1     15    12      3
                                              0 BANK2    132   132      0
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                _GetStringAfterComma
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncGlobalToEEPROM
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     204
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   18478
                                             34 BANK0      1     1      0
                         _LEDTimerON
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN                                       2     0      2   10124
                                             28 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   10751
                                             28 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    3257
                                             28 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     315
                                             25 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    2370
                                             28 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2   10536
                                             40 BANK0      4     2      2
                                              0 BANK1    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    5168
                                             33 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    8880
                                             33 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     748
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    4838
                                             46 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1477
                                             41 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4    1199
                                             25 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   17366
                                             66 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2692
                                             33 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3272
                                             36 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3032
                                             34 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     726
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    3766
                                             37 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     478
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             25 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      62
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     720
                                             29 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1614
                                             29 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     306
                                             25 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0  146471
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                         _UARTstring
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 143   143      0    3333
                                             69 BANK0      4     4      0
                                              0 BANK1    139   139      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                            8     6      2    2433
                                             61 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0    6793
                                             89 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   13617
                                            110 BANK0      8     4      4
                                              0 BANK1     10    10      0
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    8302
                                            103 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2865
                                             33 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     387
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      34
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      34
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     287
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     287
                                             25 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  106371
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               61    61      0   93089
                                             30 BANK1     61    61      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             51    37     14   61595
                                            103 BANK0     20     6     14
                                              0 BANK1     30    30      0
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12847
                                             66 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             25 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12568
                                             66 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2850
                                             39 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5496
                                             51 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             31 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     608
                                             25 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     827
                                             25 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2840
                                             33 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     848
                                             38 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1011
                                             25 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             88 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    5057
                                             88 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4539
                                             76 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2584
                                             25 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                             25 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1276
                                             25 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0   16857
                                             34 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    4221
                                             25 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2    5489
                                             26 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _StringContains                                       6     2      4    1584
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    2763
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    2763
                                             25 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    6298
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    6298
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                          151    11    140    6298
                                             78 BANK0     11    11      0
                                              0 BANK1    140     0    140
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2771
                                             61 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     932
                                             28 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    2371
                                             34 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    4     1      3    1205
                                             25 BANK0      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     700
                                             28 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     3     1      2     635
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1159
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     203
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     308
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     193
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    2433
                                             33 COMRAM     3     3      0
                                              7 BANK0     18    18      0
                         _IRrawToNEC
                        _ResetTimer3
                        i2_ReadIRpin
                      i2_ResetTimer0
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    2207
                                             26 COMRAM     7     2      5
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTstring
       _UARTchar
     _cleanBuffer
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UseBluetooth
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar
       _UARTstring
         _UARTchar
       _UARTstringCRLN
         _UARTchar
         _UARTstring
           _UARTchar
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   i2_ReadIRpin
   i2_ResetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      90      19       56.3%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      88      13       53.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     FF      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     84      88       9       53.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A0      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7B      87       5       84.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      42       1       69.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     652      32        0.0%
DATA                 0      0     652       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 10 00:48:57 2015

                       BufferCopy@shift 0086                      UARTstringCRLN@data 007C  
                __end_of_Conf1_ChannelD F3D5                  __end_of_Conf1_ChannelE F3E1  
                __end_of_Conf1_ChannelF F3ED                   UseBluetooth@StringPos 018E  
                          ___altoft@exp 0089                  __end_of_Conf1_Channels F3FA  
               __size_of_StringContains 00B2                           ??_EraseScreen 0002  
                           _IRcodePlace 003F                           ___altoft@sign 008A  
                  ?_BluetoothConfigured 0001                                      _SN 01D2  
                          ___awdiv@sign 0084                     ?_SyncGlobalToEEPROM 0001  
                                    bsr 000FE0                  __end_of_Conf2_Channels F3FE  
                   ___wmul@multiplicand 0089                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 00B7  
                          ___ftadd@exp2 00B6                             ?_LEDTimerON 0001  
                    lowercaseChar@Input 0079                            ___ftadd@sign 00B5  
                            _SYNTAX_ERR F3BB                                     l132 54FC  
                                   l134 5588                                     l137 55E8  
                                   l295 8CFA                                     l296 8CEA  
                                   l640 91F4                                     l632 88CE  
                                   l473 65BC   StringContainsCaseInsensitive@tempThat 0082  
                                   l634 88DE                                     l635 88E0  
                                   l628 88AA                                     l655 9226  
                                   l735 83C4                                     l912 926E  
                                   l905 8FC4                                     l918 8F12  
                                   l950 6356                                     l942 6274  
 StringContainsCaseInsensitive@tempThis 0081                                     l947 6268  
                                   l957 6344                                     l983 643E  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                          __CFG_CPD$OFF 000000                    lowercaseString@Input 0079  
                            _IRrawToNEC 4FCA                           _IRbitPosition 003E  
                   __end_of_IsCharacter 924A                            __CFG_BORV$27 000000  
                          ___awmod@sign 007E                                     prod 000FF3  
                                   wreg 000FE8                              _IRsendCode 0025  
                            _IRsendFlag 0035                           _InitBluetooth 8C80  
                          __CFG_LVP$OFF 000000                            ___ftdiv@cntr 008D  
                          ___ftdiv@sign 0092                                    l2219 2BCA  
                                  l1630 8D76                                    l2096 7A5C  
                                  l2601 6A12                                    l2258 2A0E  
                                  l2267 2C3A                                    l1804 4CE0  
                                  l2802 7F20                                    l2722 687E  
                                  l2715 67B2                                    l2644 75B4  
                                  l2812 8346                                    l2716 67F6  
                                  l2708 6FA6                                    l1861 0772  
                                  l2673 5AA4                                    l1866 099A  
                                  l2747 90DC                                    l1859 0716  
                                  l2677 5ADE                                    l2679 5B08  
                                  l2688 5BEC                                    l2697 5C16  
                                  l1899 1228                                    STR_1 FE77  
                                  STR_2 FFE7                                    STR_3 FFF3  
                                  STR_4 FC33                                    STR_5 FFFB  
                                  STR_6 FF74                                    STR_7 FFFB  
                                  STR_8 FCBD                                    STR_9 FFFB  
                  ??_SyncGlobalToEEPROM 00B9                                    _CRLN F3FE  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _TMR2 000FCC  
                                  _WPUB 000F7C                          ?i2_ResetTimer0 0001  
                                  _Sent 00E6              WriteEEPROM_1Byte@GIEstatus 007C  
                            _ClearUSART 931C               SetMemoryChar@AddressFirst 0082  
                                  _main 53C8                            ___ftpack@arg 0079  
                          ___ftpack@exp 007C                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  indf1 000FE7                              SetEEPROM@i 00B7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                            SetEEPROM@j 00B8                              SetEEPROM@k 00B6  
                                  fsr2l 000FD9                              _RFsendCode 01D6  
                            _RFsendFlag 0039                                    pclat 000FFA  
                      i1_UARTstringCRLN 8AB2                             _RFcodePlace 0038  
                                  prodh 000FF4                     main@BluetoothString 0300  
                                  prodl 000FF3                                    start 01F2  
                         __CFG_IESO$OFF 000000                        Reverse_Byte@This 007C  
                          _sprintf$3787 0100                        Reverse_Byte@temp 007B  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 00A0  
                        UARTstring@data 007A                             ?i1_UARTchar 0001  
                          ___param_bank 000010                            ___ftmul@sign 00A1  
                       __end_of_InitADC 928E                         __end_of_InitApp 8EA4  
 __end_of_StringContainsCaseInsensitive 74CE  __size_of_StringContainsCaseInsensitive 0126  
         _StringContainsCaseInsensitive 73A8                 __size_of_ReadPushButton 000E  
                 ??_BluetoothConfigured 00B9                            ___fttol@exp1 00C6  
                         ??_Init_System 00DB                            ___fttol@lval 00C2  
                  _Conf2_ChannelH_1_OFF F32E                       IRrawToNEC@NECtemp 0060  
                  _Conf2_ChannelH_2_OFF F34E                    _Conf2_ChannelH_3_OFF F36E  
                                 l13010 70F2                                   l13002 70C2  
                                 l13012 7100                                   l13030 7EB6  
                                 l12400 7A34                                   l13016 711E  
                                 l13008 70E0                                   l12330 750E  
                                 l13026 7E9A                                   l13050 82EC  
                                 l13212 7E4A                                   l12340 75A4  
                                 l12332 7540                                   l12324 74E8  
                                 l13028 7EAC                                   l13060 87FC  
                                 l13300 23E6                                   l14100 8F4E  
                                 l12430 5AFE                                   l13038 7F0C  
                                 l13054 8332                                   l13046 82D0  
                                 l13062 880E                                   l12510 6E06  
                                 l13230 213C                                   l13222 2106  
                                 l14014 4D3A                                   l12352 75DE  
                                 l12336 7562                                   l12328 74FE  
                                 l12440 5B40                                   l12424 5AEC  
                                 l13048 82E2                                   l12600 8132  
                                 l12520 6E4A                                   l13240 2184  
                                 l14200 639A                                   l14112 8904  
                                 l15000 85FC                                   l12610 8B82  
                                 l12346 75C0                                   l12338 7594  
                                 l12450 5B90                                   l12418 5AB2  
                                 l12514 6E22                                   l12506 6DE6  
                                 l13410 28B0                                   l13402 287A  
                                 l13330 24F6                                   l13314 2442  
                                 l13250 220C                                   l13234 214A  
                                 l14042 4E26                                   l14202 63A0  
                                 l12372 9014                                   l12460 5BDC  
                                 l12452 5B9C                                   l12604 8148  
                                 l12524 6E66                                   l12516 6E2A  
                                 l13252 2214                                   l13236 2162  
                                 l13228 2126                                   l14028 4DB0  
                                 l13076 934E                                   l14212 6432  
                                 l14116 892C                                   l14132 6F02  
                                 l13086 8E58                                   l12622 8BFE  
                                 l12614 8BA2                                   l12446 5B70  
                                 l12550 7C68                                   l12542 7C3C  
                                 l13502 2C86                                   l13422 290C  
                                 l13342 2596                                   l13262 224E  
                                 l13254 221A                                   l14230 646A  
                                 l14222 6454                                   l14214 6436  
                                 l14206 63AA                                   l14126 6EC8  
                                 l15014 864A                                   l12720 62C6  
                                 l12712 62B0                                   l12704 6294  
                                 l13184 7DAC                                   l12448 5B80  
                                 l12560 7CA4                                   l12552 7C72  
                                 l12536 7C24                                   l13512 2CDA  
                                 l13504 2C8C                                   l13440 29DC  
                                 l13424 2914                                   l13432 29B0  
                                 l13408 2896                                   l13416 28CC  
                                 l13360 267C                                   l13344 25AC  
                                 l13280 2306                                   l13272 22CC  
                                 l13264 225A                                   l13248 2206  
                                 l14072 4F3E                                   l14056 4E9C  
                                 l14304 7396                                   l14312 73A2  
                                 l14240 6520                                   l14224 645A  
                                 l14152 6F64                                   l14400 896C  
                                 l12714 62B6                                   l12650 81EA  
                                 l12626 815C                                   l12618 8BD0  
                                 l13194 7DC2                                   l12466 5C42  
                                 l12458 5BCC                                   l13522 2CF6  
                                 l13442 29F0                                   l13434 29C0  
                                 l13418 28E0                                   l13354 2642  
                                 l13346 25DE                                   l13338 2566  
                                 l13274 22D8                                   l13266 2262  
                                 l14234 6474                                   l15106 87B6  
                                 l14162 6FB8                                   l13610 7A6C  
                                 l14410 89B6                                   l15202 5EEE  
                                 l15210 5EFC                                   l12732 634A  
                                 l12724 62D0                                   l12708 62A6  
                                 l12644 81E0                                   l12652 81F2  
                                 l12476 5C92                                   l12548 7C5A  
                                 l12564 7CB4                                   l12580 80BE  
                                 l12492 6D96                                   l12812 46F2  
                                 l13540 2D88                                   l13516 2CE2  
                                 l13508 2C9A                                   l13532 2D3E  
                                 l13372 276A                                   l13364 26C0  
                                 l13348 25F4                                   l13292 2378  
                                 l13268 22A6                                   l14084 4FAA  
                                 l14308 739C                                   l14260 72A4  
                                 l14244 6526                                   l14228 6464  
                                 l13700 91DA                                   l14180 7FD6  
                                 l14420 89DC                                   l14404 89A4  
                                 l14500 8EA6                                   l15300 0684  
                                 l16100 54B4                                   l14254 92C6  
                                 l12718 62C0                                   l12638 81CC  
                                 l12910 6932                                   l12590 80F2  
                                 l12486 6D5C                                   l12806 461C  
                                 l13526 2D36                                   l13518 2CE8  
                                 l13534 2D52                                   l13470 2B9E  
                                 l13454 2A46                                   l13446 2A14  
                                 l13390 2816                                   l13382 27BE  
                                 l13374 2770                                   l13366 26EE  
                                 l13358 2670                                   l13286 2340  
                                 l13278 22EC                                   l13710 8B48  
                                 l14270 72BE                                   l13622 7AA2  
                                 l13614 7A80                                   l15206 5EF4  
                                 l15142 5D42                                   l15214 5F0A  
                                 l16102 54BA                                   l12736 6350  
                                 l12840 675E                                   l12568 7CCA  
                                 l12592 80FC                                   l12584 80D0  
                                 l12824 910C                                   l13544 2DC0  
                                 l13368 2702                                   l13288 235E  
                                 l14280 730C                                   l14264 72AE  
                                 l14600 4900                                   l14520 478C  
                                 l14512 4752                                   l13640 7B24  
                                 l13624 7AAA                                   l14408 89A8  
                                 l15400 0D42                                   l15240 032C  
                                 l15152 5D7A                                   l15128 5CE2  
                                 l12682 61F6                                   l12674 61E0  
                                 l12746 935C                                   l12930 69C4  
                                 l12922 699C                                   l12834 6724  
                                 l13570 2E72                                   l13554 2E06  
                                 l13562 2E3C                                   l13546 2DCC  
                                 l13458 2A98                                   l13394 2840  
                                 l13386 27C4                                   l13378 277E  
                                 l13298 2392                                   l13706 8B24  
                                 l14282 7312                                   l14266 72B4  
                                 l13810 837E                                   l14178 7FC2  
                                 l14442 8594                                   l14426 853C  
                                 l14506 8ED0                                   l15410 0D74  
                                 l15306 06A0                                   l15154 5D80  
                                 l15138 5D38                                   l16122 554E  
                                 l16106 54C4                                   l12684 61FC  
                                 l12668 61B4                                   l12940 69F6  
                                 l12596 8122                                   l12588 80E4  
                                 l13580 2F42                                   l13564 2E48  
                                 l13556 2E12                                   l13484 2BF2  
                                 l13476 2BBA                                   l13468 2B8E  
                                 l13652 8426                                   l14292 732C  
                                 l14276 7306                                   l13900 6B16  
                                 l14532 47C2                                   l13628 7AEC  
                                 l14460 73B0                                   l14444 85A2  
                                 l14508 8ED8                                   l15500 11A4  
                                 l15340 0862                                   l15260 040E  
                                 l15244 036E                                   l15236 02EA  
                                 l15180 5E14                                   l16132 55E0  
                                 l12678 61EC                                   l12942 6A08  
                                 l12934 69D8                                   l12918 6988  
                                 l12870 6830                                   l12862 6808  
                                 l12774 59EC                                   l12766 58F8  
                                 l13654 8438                                   l14294 7332  
                                 l14286 731C                                   l13902 6B1C  
                                 l14606 4928                                   l13814 8388  
                                 l13638 7B1E                                   l13670 868A  
                                 l14702 662C                                   l14454 85C8  
                                 l14438 8590                                   l15406 0D66  
                                 l15342 0874                                   l15254 03AE  
                                 l15190 5E2E                                   l15158 5D8A  
                                 l12696 626E                                   l12688 6206  
                                 l12960 7D5A                                   l12880 6862  
                                 l13592 2FEC                                   l13576 2EA6  
                                 l13488 2C1A                                   l13760 88A0  
                                 l13752 888A                                   l14288 7322  
                                 l13920 6B9C                                   l13912 6B36  
                                 l14632 4A24                                   l14624 49E8  
                                 l14560 4866                                   l14552 482C  
                                 l14544 4818                                   l14528 47B6  
                                 l14712 665C                                   l15280 0558  
                                 l15272 04D4                                   l15264 0450  
                                 l15248 0392                                   l15184 5E1E  
                                 l15168 5DC2                                   l16128 55B4  
                                 l12890 68B6                                   l12882 6874  
                                 l12874 6844                                   l12794 4478  
                                 l13578 2EB8                                   l13586 2FC4  
                                 l13498 2C5C                                   l13594 3006  
                                 l14298 733C                                   l13906 6B26  
                                 l14618 49DA                                   l14538 47E6  
                                 l13818 839A                                   l13666 867C  
                                 l14722 66C0                                   l14490 7498  
                                 l14802 7628                                   l15602 13C6  
                                 l15530 126A                                   l15514 11FE  
                                 l15506 11C6                                   l15450 0F7A  
                                 l15186 5E24                                   l15178 5E0E  
                                 l16162 56D2                                   l16138 5628  
                                 l16082 546C                                   l16074 542E  
                                 l12956 7D18                                   l12948 8DA4  
                                 l12980 701A                                   l12788 43A2  
                                 l13588 2FD8                                   l13596 302A  
                                 l13772 88C2                                   l13764 88AE  
                                 l13756 8896                                   l13908 6B2C  
                                 l13924 6BA2                                   l14636 4A42  
                                 l14628 4A06                                   l14556 484C  
                                 l14732 771C                                   l14708 6652  
                                 l14484 748E                                   l14492 74A0  
                                 l14812 766E                                   l15700 17A6  
                                 l15620 1446                                   l15612 13FE  
                                 l15524 1254                                   l15460 106A  
                                 l15436 0F04                                   l15364 09AC  
                                 l15292 061E                                   l15284 059A  
                                 l15276 0516                                   l15268 0492  
                                 l14900 5FC4                                   l16180 5712  
                                 l12966 7D9E                                   l12798 44A4  
                                 l14670 4B88                                   l14646 4AC2  
                                 l14582 48B4                                   l14566 4878  
                                 l14750 777C                                   l13942 8752  
                                 l13934 8708                                   l13678 86A4  
                                 l13686 86CA                                   l14718 66BA  
                                 l14478 7460                                   l14822 76DC  
                                 l14806 765A                                   l15534 1278  
                                 l15606 13E6                                   l15446 0F46  
                                 l15358 098A                                   l14910 601A  
                                 l15198 5EDE                                   l16086 5476  
                                 l16078 545E                                   l12896 68DC  
                                 l13776 88D2                                   l13768 88B8  
                                 l13872 6A7A                                   l14648 4B16  
                                 l14656 4B20                                   l14576 48AE  
                                 l14744 7752                                   l14736 773E  
                                 l14680 6564                                   l14816 76BE  
                                 l14808 7662                                   l13792 8A12  
                                 l15800 1A8E                                   l15712 1880  
                                 l15632 14F0                                   l15624 1450  
                                 l15544 12A2                                   l15480 1106  
                                 l15472 10C8                                   l15464 108C  
                                 l15456 102C                                   l15368 0A7E  
                                 l15296 0660                                   l15288 05DC  
                                 l14920 6070                                   l14904 5FEC  
                                 l16176 56E8                                   l13874 6A80  
                                 l13890 6AE4                                   l14666 4B6A  
                                 l14658 4B28                                   l14586 48CA  
                                 l14594 48E6                                   l14770 77C2  
                                 l14762 77AC                                   l13954 92EA  
                                 l14690 65E4                                   l14826 76FA  
                                 l15810 1B0A                                   l15714 18AE  
                                 l15706 183C                                   l15642 1512  
                                 l15570 1314                                   l15538 128A  
                                 l15466 1094                                   l14930 60C6  
                                 l14914 6042                                   l16098 54B0  
                                 l13868 6A70                                   l14844 8296  
                                 l14836 8230                                   l14588 48D2  
                                 l14756 778E                                   l14684 659E  
                                 l13788 89E4                                   l15820 1B82  
                                 l15724 18E0                                   l15652 15D0  
                                 l15636 14F6                                   l15580 135A  
                                 l15548 12B0                                   l15492 115E  
                                 l15484 1128                                   l14940 611C  
                                 l14924 6098                                   l12998 70AE  
                                 l13982 4BEE                                   l13886 6ADE  
                                 l13878 6A8A                                   l14598 48F8  
                                 l14790 7824                                   l14950 84A4  
                                 l14686 65C2                                   l15830 1BC0  
                                 l15670 16E6                                   l15662 1602  
                                 l15646 152A                                   l15654 15D6  
                                 l15734 1920                                   l14870 8D56  
                                 l14934 60EE                                   l13968 9214  
                                 l13992 4C6A                                   l14776 77D6  
                                 l14784 77FC                                   l14960 84E2  
                                 l14696 65F2                                   l14688 65C8  
                                 l15840 1BE2                                   l15760 19BA  
                                 l15672 1724                                   l15656 15E6  
                                 l15592 1394                                   l15488 113C  
                                 l14856 9308                                   l14954 84CE  
                                 l14698 65FA                                   l15850 1BF8  
                                 l15826 1BB6                                   l15770 1A00  
                                 l15682 1756                                   l15738 1942  
                                 l14874 8D62                                   l14890 5F4E  
                                 l14946 6144                         __end_of_Version F3F6  
                                 l14964 84EE                                   l14972 8506  
                                 l14796 75F6                                   l15844 1BEC  
                                 l15836 1BCC                                   l15588 137C  
                                 l14892 5F72                                   l14966 84F6  
                                 l15870 1D4E                                   l15854 1CDE  
                                 l15790 1A68                                   l15694 1796  
                                 l14878 8D6E                                   l14894 5F96  
                                 l14968 84FC                                   l15696 179C  
                                 l14888 5F2A                                   l15874 1D58  
                                 l15858 1CE8                                   l15778 1A26  
                                 l15884 1DB8                                   l15868 1D48  
                                 l15788 1A46                                   l15886 20C2  
                         ??_ReadVoltage 00A5                                   ?_main 0001  
                __size_ofi1_cleanBuffer 003E                         __end_of___awdiv 7CD6  
                                 _EEADR 000FA9                         __end_of___ftadd 5CBA  
                                 STR_10 FF88                                   STR_11 FFFB  
                                 STR_20 FFC6                                   STR_12 FFC0  
                                 STR_13 FFFB                                   STR_21 FB57  
                                 STR_14 FFC0                                   STR_22 FFCC  
                                 STR_30 FA22                                   STR_15 FFFB  
                                 STR_31 FD63                                   STR_23 FB74  
                                 STR_32 FCEB                                   STR_24 FFEF  
                                 STR_16 FFDD                                   STR_40 FF91  
                                 STR_33 F7F0                                   STR_41 FDFE  
                                 STR_17 FB91                                   STR_25 FA42  
                                 STR_50 F7D5                                   STR_42 FF6B  
                                 STR_18 FFD8                                   STR_26 FA61  
                                 STR_34 F961                                   STR_19 FFF7  
                                 STR_43 FE56                                   STR_27 FCE7  
                                 STR_35 FB1B                                   STR_51 F8F5  
                                 STR_36 FFB2                                   STR_60 FF9A  
                                 STR_44 FF1A                                   STR_28 FCD2  
                                 STR_52 F93E                         __end_of___awmod 8154  
                                 STR_53 FFB2                                   STR_45 FD9B  
                                 STR_61 FFB9                                   STR_37 FD3B  
                                 STR_29 FC63                                   STR_38 FF69  
                                 STR_54 FE67                                   STR_46 FCFC  
                                 STR_62 F8AB                                   STR_70 F859  
                                 STR_63 F8AB                                   STR_55 FD8B  
                                 STR_39 FCA7                                   STR_47 F7D5  
                                 STR_71 F7A7                                   STR_56 FF91  
                                 STR_80 FE22                                   STR_64 F8D0  
                                 STR_48 F636                                   STR_72 F401  
                                 STR_81 FB3A                                   STR_57 FE96  
                                 STR_65 FADD                                   STR_49 F665  
                                 STR_73 F440                                   STR_82 FFA3  
                                 STR_90 FF7E                                   STR_58 FE10  
                                 STR_66 FAFC                                   STR_74 F476  
                                 STR_91 FFD2                                   STR_59 FFB9  
                                 STR_67 FEA4                                   STR_83 FD77  
                                 STR_75 F801                                   STR_84 FC12  
                                 STR_92 F9E2                                   STR_76 F82D  
                                 STR_68 F4AC                                   STR_93 FC12  
                                 STR_77 FFD2                                   STR_85 FD26  
                                 STR_69 F4DE                                   STR_86 FFEB  
                                 STR_94 FC00                                   STR_78 FA02  
                                 STR_87 FBF3                                   STR_95 FD11  
                                 STR_79 FB3A                                   STR_96 FFA3  
                                 STR_88 FE45                                   STR_89 FFEB  
                                 STR_97 FBAD                                   STR_98 FEBF  
                                 STR_99 FE87                         __end_of___ftdiv 6FE0  
                       __end_of___ftneg 90EA                                   _ANSEL 000F7E  
                       __end_of___lldiv 7F32                         __end_of___ftmul 6E8E  
                       ___awdiv@divisor 0081                         __end_of___llmod 8358  
                       __end_of___ftsub 8DD0                                   u20331 572A  
                       __end_of___fttol 7132                 ReadEEPROM_1Byte@address 0079  
                                 u16010 229C                                   u14420 7978  
                                 u16100 2488                                   u14425 796C  
                                 u14441 5A52                                   u15241 6700  
                                 u16105 247C                                   u16017 2292  
                                 u16050 2330                                   u14451 5A70  
                                 u15261 673A                                   u16320 2A06  
                                 u16057 2326                                   u15611 8E22  
                                 u15451 6FF6                                   u14651 6D38  
                                 u15470 7040                                   u14671 6D72  
                                 u14840 8BF2                                   u15800 3758  
                                 u15705 32EC                                   u14850 8C20  
                                 u15810 37C4                                   u15475 7036  
                                 u15715 3346                                   u15635 3076  
                                 u15900 3B90                                   u15820 3830  
                                 u17261 6EA4                                   u15805 374C  
                                 u15725 33A0                                   u15645 30D0  
                                 u14870 818C                                   u15910 3BFC  
                                 u15830 389C                                   u19030 06F4  
                                 u14847 8BE8                                   u15815 37B8  
                                 u15735 33FA                                   u15655 312A  
                                 u19111 0AEC                                   u15920 3C80  
                                 u15840 3908                                   u14857 8C16  
                                 u17281 6EDE                                   u15905 3B84  
                                 u15825 3824                                   u15745 3454  
                                 u15665 3184                                   u14890 81C2  
                                 u17530 78AE                                   u15850 3974  
                                 u19050 0750                                   u15915 3BF0  
                                 u15835 3890                                   u15755 34AE  
                                 u15675 31DE                                   u15860 39E0  
                                 u15780 3680                                   u19140 0BF0  
                                 u14877 8182                                   u18085 4A46  
                                 u15925 3C74                                   u15845 38FC  
                                 u15765 3508                                   u15685 3238  
                                 u15870 3A4C                                   u15790 36EC  
                                 u17710 74C2                                   u17630 73D2  
                                 u17535 78A2                                   u15855 3968  
                                 u15775 3562                                   u15695 3292  
                                 u15880 3AB8                                   u17640 73F8  
                                 u14897 81B8                                   u15865 39D4  
                                 u15785 3674                                   u18450 8276  
                                 u15890 3B24                                   u18370 7618  
                                 u15875 3A40                                   u15795 36E0  
                                 u17660 7456                                   u18380 764A  
                                 u16860 8A06                                   u15885 3AAC  
                                 u17717 74B8                                   u17637 73C8  
                                 u16870 8A34                                   u16775 801E  
                                 u18455 826A                                   u15895 3B18  
                                 u17647 73EE                                   u17680 7482  
                                 u18377 760E                                   u17667 744C  
                                 u18387 7640                                   u16867 89FC  
                                 u16877 8A2A                                   u17687 7478  
                                 i1l640 9258                                   i1l655 929A  
                   __end_of_EraseScreen 91C2                         ___awdiv@counter 0083  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                                 _TMR0H 000FD7                                   _TMR1H 000FCF  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR1L 000FCE                                   _TMR3L 000FB2  
                                 _SPBRG 000FAF                              _BufferCopy 865E  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _RF_IR 0040  
                          InitUART@Baud 00CE                                   _IRbit 002F  
                                 _IRmod 00DE                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                     _ConfigureOscillator 93D2  
                       __end_of_delayUS 8D2C                           __CFG_PWRT$OFF 000000  
                      _InternalADC_Read 8358                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                   ___lmul@multiplicand 007D                           __CFG_WRT3$OFF 000000  
                     _NewReceivedString 00DF                            ___lltoft@exp 0089  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        ?_InitBluetooth 0001                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                            SendRF@Code 0079                            InitUART@temp 0106  
                          _IRrawCodeNum 0032                                   _Round 8A4C  
                         __CFG_WRTB$OFF 000000                   _BluetoothInitialSetup 4BA6  
              __end_of_Local_CloseUSART 931C                           __CFG_WRTC$OFF 000000  
                 __end_of_BlueConnected 9362                           __CFG_WRTD$OFF 000000  
                      ?_lowercaseString 0079                        __end_of_UARTchar 91FE  
                        __CFG_EBTRB$OFF 000000                         __end_of_dpowers F1BB  
                                 _scale 421C                              SendRF@size 007C  
                       __end_of_isdigit 9118                           ___ftpack@sign 007D  
                                 main@i 019F                         __end_of_low_isr 01F2  
                                 tablat 000FF5                        _RF_IR_Postscaler 0041  
                                 plusw0 000FEB                                   plusw2 000FDB  
                           ?_UARTstring 007A                 InternalADC_Read@channel 0087  
                                 status 000FD8                         __end_of_sprintf 303A  
                        __CFG_HFOFST$ON 000000                    __size_of_cleanBuffer 005A  
                   __size_of_LEDTimerON 0012                   __end_of_GetMemoryChar 919A  
                  ?_ConfigureOscillator 0001                   __end_of_GetMemoryLong 6D22  
                         ??_SendRF_wait 0086                      StringContains@That 007B  
                    StringContains@This 0079                            __end_of_CRLN F401  
                         high_isr@IRpin 0022                         __initialization 7B2A  
                    StringAddEqual@temp 0100                   __end_of_EEPROM_UNLOCK 9278  
                      __end_of_IsLetter 91E0                              _InitTimer0 92F0  
                            _InitTimer1 9338                      _Conf1_ChannelD_STR F38E  
                            _InitTimer2 932A                              _InitTimer3 9396  
                    __size_of_GetEEPROM 018E                           high_isr@Time0 0023  
                    _Conf1_ChannelE_STR F39D                      _Conf1_ChannelF_STR F3AC  
      __end_of_Conf2_ChannelH_1_OFF_STR F23E                              _InitTimers 92A4  
                          _IRrepeatflag 0034                      __size_of_DecodeNEC 00AE  
                          __end_of_main 5764                   __end_of_Reverse_4Byte 3CB8  
                      ??_UARTstringCRLN 007E                        __end_of_InitUART 7940  
      __end_of_Conf2_ChannelH_2_OFF_STR F253                  WaitForIRsignal@timeout 0082  
          __size_of_GetStringAfterComma 011E                          GetNumber@count 0091  
      __end_of_Conf2_ChannelH_3_OFF_STR F268                             _IsCharacter 9232  
                                ??_main 00DB                           ___fttol@sign1 00C1  
                      __end_of_ResetADC 9370                       GetNumber@negative 0090  
                         __activetblptr 000003                      SendRF@RepeatAmount 007D  
                           ?_IRrawToNEC 001B                      __size_of_GetNumber 0486  
                       _WaitForIRsignal 85CE                    __size_of__tdiv_to_l_ 01A6  
                    __size_of_EncodeNEC 014E                     __end_of_Init_System 87F4  
                     SetEEPROMdefault@i 00BC                       SetEEPROMdefault@j 00BD  
                     SetEEPROMdefault@k 00BB                   _Conf2_ChannelB_ON_STR F2CA  
                         ?_SendNEC_wait 008E                   _Conf2_ChannelD_ON_STR F2DC  
                __size_of_SendNEC_bytes 0086                                  ?_Round 00C7  
                   __end_of_ReadVoltage 7FEA                       GetNumber@tempThis 0094  
                            UseIRCode@i 00C4                              UseIRCode@j 00C3  
                        _StringAddEqual 6536                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                   __size_ofi1_UARTchar 0018                        __end_of___altoft 849C  
                      ___llmod@dividend 0086                                  ?_scale 00A2  
                                STR_100 FC1A                                  STR_101 FDEB  
                                STR_102 FC4B                                  STR_110 F510  
                                STR_111 FF3D                                  STR_103 FF32  
                                STR_120 F74B                                  STR_112 F572  
                                STR_104 F541                                  STR_113 FF5E  
                                STR_105 FF48                                  STR_121 FECC  
                                STR_130 FD9F                                  STR_122 F693  
                                STR_114 F605                                  STR_106 F5A3  
                                _ADRESH 000FC4                                  STR_107 FF53  
                                STR_123 FEE6                                  STR_115 FED9  
                                STR_131 FDB2                                  STR_132 FDC5  
                                STR_140 F9A2                                  STR_124 F6EF  
                                STR_116 F6C1                                  STR_108 F5D4  
                                _EEADRH 000FAA                                  STR_109 FF27  
                                STR_125 FF0D                                  STR_117 FEF3  
                                STR_133 FC91                                  STR_141 FABE  
                                STR_134 FC7A                                  STR_142 F9C2  
                                STR_126 F779                                  STR_118 F71D  
                                _ADRESL 000FC3                                  STR_127 FFE2  
                                STR_119 FF00                                  STR_135 FDD8  
                                STR_143 FBE5                                  STR_136 FD4F  
                                STR_144 FBC9                                  STR_128 F883  
                                STR_129 FEB2                                  STR_137 FA80  
                                STR_145 F91A                                  STR_146 FFAB  
                                STR_138 F982                                  STR_147 FE34  
                                STR_139 FA9F                                  _EEDATA 000FA8  
                                _EECON2 000FA7                        ___awdiv@dividend 007F  
                       ??i2_ResetTimer0 001B                        __end_of___ftpack 75EE  
                                _ANSELH 000F7F                       ?_VoltageDividerON 0001  
                 _Conf2_ChannelB_Status 002A                           ??_ResetTimer0 0079  
                         ??_ResetTimer1 0079                           ??_ResetTimer3 001B  
                      __end_of___lltoft 8874                                  i1l1323 018C  
                                i1l1338 01AA                                  i1l1339 01A6  
                                i2l1210 3E14                                  i2l1202 3DA6  
                                i2l1213 41BA                                  i2l1207 3DC2  
                                i2l1208 3DCA                                  i2l1209 41E0  
                                i2l1250 3F4C                                  i2l1226 3EA8  
                                i2l1316 41DC                                  i2l1270 3FCE  
                                i2l1276 4000                                  i2l1196 3DCE  
                                i2l1269 3FD8                                  i2l1197 3DC8  
                                i2l1198 3DBE                          __CFG_WDTEN$OFF 000000  
                      __end_of___lwtoft 9144                      __size_of_ReadUSART 0018  
                 _Conf2_ChannelD_Status 002B                                  _IR_NEC 00E1  
                    __size_of_ReadIRpin 000E                                  _SPBRGH 000FB0  
                    ??_VoltageDividerON 0079                           i1_cleanBuffer 8F66  
                           ?_ClearUSART 0001                          SetMemoryLong@H 00AA  
                        SetMemoryLong@L 00AD                      __size_of_SetEEPROM 01EC  
                             ??_InitADC 0079                               ??_InitApp 0079  
                 ??_ConfigureOscillator 0079                                  _Global 0400  
                                _InitIR 8DD0                                  _SendRF 7A3A  
                        __CFG_XINST$OFF 000000                         _UARTcommandMenu 75EE  
              GetStringAfterComma@count 0080                        __end_of__powers_ F209  
                         InitUART@spbrg 0103                        __end_of_high_isr 421C  
                       _ReadCodeButtons 8D2C                      __size_of_OpenUSART 007C  
                        _StringContains 8154                                  ___ftge 7CD6  
                                ___lmul 88F0                SendNEC_wait@RepeatAmount 0092  
                                ___wmul 901A              __end_of_SyncEEPROMToGlobal 6536  
                             ??___awdiv 0083                               ??___ftadd 00B2  
                        __CFG_STVREN$ON 000000                               ??___awmod 007D  
                             ??___ftdiv 008A             ?_StringMatchCaseInsensitive 007C  
                             ??___ftneg 007C                               ??___lldiv 0081  
                             ??___ftmul 0099                             _EraseScreen 919A  
                             ??___llmod 008E                               ??___ftsub 00BE  
                             ??___fttol 00BC                       cleanBuffer16bit@i 0080  
                    __size_of_ResetBlue 0032                     __end_of_SendRF_wait 8F66  
                          ?i1_ReadUSART 0001                                  _fround 5764  
                     ?_SetEEPROMdefault 0001                                  clear_0 7B30  
                                clear_1 7B3E                                  clear_2 7B52  
                                clear_3 7B64                                  clear_4 7B70  
                                clear_5 7B7C                                  clear_6 7B88  
                      ___awdiv@quotient 0085                               ??_delayUS 007D  
                       ___awmod@divisor 007B                      __size_of_UseIRCode 026A  
                       ___awmod@counter 007D                      ??_SetEEPROMdefault 00B9  
                 ___ftmul@f3_as_product 009D                     __size_of_UARTstring 005A  
                       ??_InitBluetooth 00DB                             ?_BufferCopy 0081  
                     ?_cleanBuffer16bit 0079                            __pdataCOMRAM 003E  
                             ??_isdigit 0079                          ??_SendNEC_wait 0093  
                ?_BluetoothInitialSetup 0001                  __end_of_StringAddEqual 66EA  
                          __mediumconst F192                          EncodeNEC@temp1 0095  
                        EncodeNEC@temp2 0099                          EncodeNEC@temp3 009D  
                        EncodeNEC@temp4 00A1                            ?i2_ReadIRpin 0001  
                             ??_low_isr 0009                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                    ??_cleanBuffer16bit 007D                      IRrawToNEC@StartBit 0066  
                SyncEEPROMToGlobal@Temp 0103                        _CommandStringPos 0029  
                     __end_of_GetEEPROM 6BB2                   __end_of_lowercaseChar 9170  
                     __end_of_DecodeNEC 82B4                               ??_sprintf 00D5  
                       __CFG_FOSC$HSPLL 000000                          ?i1_cleanBuffer 0001  
                  UARTcommandMenu@place 0086                      UseBluetooth@String 018C  
                            __accesstop 0060                 __end_of__initialization 7C00  
                            ___altoft@c 0081                              Round@input 00C7  
                       __CFG_PBADEN$OFF 000000                              ___ftadd@f1 00AC  
                            ___ftadd@f2 00AF                              ___ftge@ff1 0079  
                            ___ftge@ff2 007C                      UseBluetooth@device 0275  
                         ___rparam_used 000001                     StringAddEqual@Input 0088  
                            ___ftdiv@f1 0084                              ___ftdiv@f2 0087  
                            ___ftdiv@f3 008E                     StringContains@begin 007E  
                            ___ftneg@f1 0079                       __end_of_GetNumber 4BA6  
                __end_of_StringContains 8206                      UseBluetooth@rfconf 027C  
                     __end_of_EncodeNEC 7280               __size_of_ReadEEPROM_1Byte 003C  
                   __end_of_ResetTimer0 93AA                     __end_of_ResetTimer1 9396  
                   __end_of_ResetTimer3 93BE                     __size_of_IRrawToNEC 03FE  
                            ___ftmul@f1 0093                              ___ftmul@f2 0096  
                         _SendNEC_bytes 86E8                              ___ftsub@f1 00B8  
                            ___ftsub@f2 00BB                              ___fttol@f1 00B8  
                        __pcstackCOMRAM 0001                             ?_InitTimer0 0001  
                           ?_InitTimer1 0001                             ?_InitTimer2 0001  
                           ?_InitTimer3 0001                             ?_InitTimers 0001  
                    _Conf2_ChannelB_OFF F2EE                      _Conf2_ChannelD_OFF F30E  
                         __end_of_Round 8AB2                          _ReadPushButton 9300  
                          __pidataBANK0 93D4                            __pidataBANK1 9052  
                          __pidataBANK2 93C9               __size_of_EnterCommandMode 00C8  
                            ___lltoft@c 0081                               ?_UARTchar 0001  
               __end_of_WaitForIRsignal 865E                           __end_of_scale 4720  
       __end_of_Conf2_ChannelH_1_ON_STR F27C                             _Init_System 876E  
                   SyncEEPROMToGlobal@i 0101                     SyncEEPROMToGlobal@j 0102  
                   SyncEEPROMToGlobal@k 0100         __end_of_Conf2_ChannelH_2_ON_STR F290  
       __end_of_Conf2_ChannelH_3_ON_STR F2A4                _Conf2_ChannelH_1_OFF_STR F229  
                     __end_of_ReadUSART 9232                       __end_of_ReadIRpin 9354  
                         ?i1_UARTstring 0002                            ??_LEDTimerON 0079  
                            ___lwtoft@c 0081               __size_of_CheckReceivingIR 0012  
                           _ReadVoltage 7F32                _Conf2_ChannelH_2_OFF_STR F23E  
                     __end_of_SetEEPROM 6368                         ReadVoltage@temp 00A8  
                   __size_of_ClearUSART 000E                              __div_to_l_ 6890  
              __end_ofi1_UARTstringCRLN 8B16                _Conf2_ChannelH_3_OFF_STR F253  
                       GetNumber@result 0088                         ?_StringAddEqual 0088  
                               ??_Round 00CA                           ReadUSART@data 0079  
                     __end_of_OpenUSART 88F0                         __div_to_l_@exp1 0084  
                       __div_to_l_@cntr 0083                                 ??_scale 00A5  
                             ?_IsLetter 0001                         __div_to_l_@quot 007F  
                          sprintf@width 0119                  __size_of_SetMemoryChar 003A  
                            __pbssBANK0 00DB                              __pbssBANK1 01D6  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                __size_of_SetMemoryLong 00FA                       _EEPROMinitialized 92B8  
                             ?_InitUART 00CE                       __end_of_ResetBlue 90BA  
               __end_of_UARTcommandMenu 770C                  _Conf2_ChannelB_OFF_STR F2A4  
                     __end_of_UseIRCode 5F24                      ReadVoltage@voltage 00A5  
               __end_of_ReadCodeButtons 8D80                             _ReceivingIR 0042  
                    ?_EEPROMinitialized 0001                           ??_StringMatch 007D  
                _Conf2_ChannelD_OFF_STR F2B7                           __div_to_l_@f1 0079  
                         __div_to_l_@f2 007C                __size_ofi1_BlueConnected 000E  
                 WriteEEPROM_1Byte@data 007B                               ?_ResetADC 0001  
                    __end_of_LEDTimerON 92DE                                 ?_InitIR 0001  
                       ?_StringContains 0079                          ?_SendNEC_bytes 0089  
                __end_of_ReadPushButton 930E                __end_of_InternalADC_Read 83FA  
                   __size_of_BufferCopy 008A                                 ?_SendRF 0079  
                           _SendRF_wait 8F28                            ??i1_UARTchar 0001  
                               ?___ftge 0079                     ??_EEPROMinitialized 0079  
                               ?___lmul 0079                                 ?___wmul 0087  
                         ?_Reverse_Byte 0001                              ??_UARTchar 0079  
                     _VoltageDividerOFF 93CE                               ?___altoft 0081  
                               ?_fround 00A2                          ___lmul@product 0081  
                        ??i1_UARTstring 0004                               ?___ftpack 0079  
                 EnterCommandMode@count 0082                   cleanBuffer16bit@count 007B  
                             ?___lltoft 0081                      ?_VoltageDividerOFF 0001  
             SendNEC_bytes@RepeatAmount 008D                               ?___lwtoft 0081  
                               i1l11350 9244                                 i1l10470 8C2A  
                               i1l11362 91B2                                 i1l10474 8C56  
                               i1l11358 91A8                                 i1l11552 8AB4  
                               i1l11580 9378                                 i1l11556 8AE0  
                               i1l16054 8F70                                 i1l16058 8F88  
                               i1l16702 0162                                 i1l16712 0188  
                               i1l16722 01A2                                 i1l16670 00B4  
                               i1l16662 0094                                 i1l16682 00F2  
                               i1l16694 0130                                 i2l11570 9386  
                               i2l16000 52DE                                 i2l16010 530E  
                               i2l16002 52E6                                 i2l16030 5370  
                               i2l16006 52EC                                 i2l16040 53B2  
                               i2l16024 536A                                 i2l16018 532C  
                               i2l16044 53B8                                 i2l16048 53C2  
                               i2l16304 3E88                                 i2l16314 3E98  
                               i2l16306 3E8C                                 i2l16250 3DB4  
                               i2l16412 3F5E                                 i2l16340 3ED4  
                               i2l16324 3EB2                                 i2l16252 3DBA  
                               i2l16244 3D8E                                 i2l16334 3EC6  
                               i2l16600 4168                                 i2l16440 3F8E  
                               i2l16416 3F62                                 i2l16408 3F52  
                               i2l16504 4030                                 i2l16248 3DAE  
                               i2l16434 3F82                                 i2l16426 3F74  
                               i2l16418 3F66                                 i2l16354 3F04  
                               i2l16346 3EE0                                 i2l16620 419C  
                               i2l16524 4068                                 i2l16452 3FA2  
                               i2l16508 403A                                 i2l16268 3E08  
                               i2l16622 41A4                                 i2l16614 418C  
                               i2l16550 40B8                                 i2l16462 3FBE  
                               i2l16446 3F98                                 i2l16358 3F0A  
                               i2l16294 3E70                                 i2l16454 3FAC  
                               i2l15904 4FEE                                 i2l16616 4192  
                               i2l16552 40BE                                 i2l16560 40D0  
                               i2l16528 4078                                 i2l16632 41B6  
                               i2l16480 3FF2                                 i2l16472 3FDE  
                               i2l15930 50AC                                 i2l16538 409A  
                               i2l16378 3F1E                                 i2l16386 3F28  
                               i2l16298 3E7C                                 i2l15924 507E  
                               i2l15908 4FF8                                 i2l16644 41D0  
                               i2l16628 41B0                                 i2l16564 40E6  
                               i2l16492 401E                                 i2l16396 3F3C  
                               i2l15934 50B0                                 i2l15918 503A  
                               i2l16646 41D8                                 i2l16582 4120  
                               i2l16558 40CA                                 i2l16486 400A  
                               i2l15960 51EA                                 i2l15928 5084  
                               i2l16584 4132                                 i2l16576 4102  
                               i2l16578 4110                                 i2l15980 524E  
                               i2l15972 5202                                 i2l15964 51F0  
                               i2l15956 51AE                                 i2l16596 414E  
                               i2l15968 51F8                                 i2l15988 5276  
                      i1UARTstring@data 0002                           UseIRCode@Code 00B9  
                     _ReceivedStringPos 00E0                     ??_VoltageDividerOFF 0079  
                       SetMemoryLong@MH 00AB                         SetMemoryLong@ML 00AC  
                     ?_Local_CloseUSART 0001               __end_of_EEPROMinitialized 92CC  
               BluetoothInitialSetup@ok 015A                     __size_of_InitTimer0 0010  
                   __size_of_InitTimer1 000E                     __size_of_InitTimer2 000E  
                   __size_of_InitTimer3 000A                         ??i1_cleanBuffer 0005  
                            ??_IsLetter 0079                     __size_of_InitTimers 0014  
                             ?_high_isr 0001                      __end_ofi1_UARTchar 9262  
                   _GetStringAfterComma 770C                      ??_Local_CloseUSART 0079  
           __size_of_SyncGlobalToEEPROM 0046                              ??_InitUART 00D2  
                           _ResetTimer0 93A0                             _ResetTimer1 938C  
                           _ResetTimer3 93B4     __size_of_StringMatchCaseInsensitive 0094  
                          ??_UARTstring 007C                                 SendRF@i 0080  
                         ?_UseBluetooth 018C                                 _InitADC 9278  
                               _InitApp 8E5E                          UseBluetooth@ok 027A  
                           low_isr@data 001A             __end_of_BluetoothConfigured 921A  
               UseBluetooth@tempRFArray 027B                              ??_ResetADC 0079  
                        InitUART@config 0105                       __end_of__npowers_ F1E2  
                               __Hparam 0000                         ?_ReadPushButton 0001  
                       __size_of_InitIR 0048                              _scale$3786 00A5  
                               __Lparam 0000                    __end_of_SendNEC_wait 853A  
               __size_of_SendRF_Channel 0258                         __size_of_SendRF 00F0  
                          SendRF@Config 007B               __end_of_VoltageDividerOFF 93D2  
                     i1cleanBuffer@data 0001                          ??_Reverse_Byte 0079  
                               _Version F3ED                         __size_of___ftge 00CE  
                               ___awdiv 7C06                         __size_of___lmul 007A  
                               ___ftadd 5A3C                                 ___awmod 80A0  
                               ___ftdiv 6E8E                                 ___ftneg 90BA  
                               ___lldiv 7E6C                     __end_of_StringMatch 89E2  
                  ?_GetStringAfterComma 0079                         __size_of___wmul 0038  
                               ___ftmul 6D22                                 ___llmod 82B4  
                               ___ftsub 8D80                                 ___fttol 6FE0  
                         _SetMemoryChar 8FE0                            ?_IsCharacter 0001  
                         _SetMemoryLong 7940                        ?_WaitForIRsignal 0001  
                            ??___altoft 0085                                 __pcinit 7B2A  
                               _delayUS 8CD6                              ??___ftpack 007E  
                       __size_of_fround 02D8                                 __ramtop 1000  
                            ??___lltoft 0085                                 __ptext0 53C8  
                               __ptext1 5CBA                                 __ptext2 5F24  
                               __ptext3 9300                                 __ptext4 8D2C  
                               __ptext5 01F6                                 __ptext6 8EA4  
                               __ptext7 85CE                                 __ptext8 89E2  
                               __ptext9 75EE                              ??___lwtoft 0084  
                             _T0CONbits 000FD5                    __size_ofi1_ReadUSART 0016  
                     __end_of_hexpowers F229                               _T1CONbits 000FCD  
                           ?__div_to_l_ 0079                       SetMemoryChar@Data 0084  
                               _dpowers F193                            ??_IRrawToNEC 0020  
                             _T2CONbits 000FCA                      __end_of_UARTstring 8C28  
                     SetMemoryChar@Test 0083                                 _isdigit 90EA  
                             _T3CONbits 000FB1                        ___awmod@dividend 0079  
             GetMemoryLong@AddressFirst 009C                                 _low_isr 0018  
                          DecodeNEC@Nec 007D                           SetEEPROM@Temp 0100  
                         SetEEPROM@fail 00B0                           SetEEPROM@burn 0188  
                         SetEEPROM@temp 00B4                                 _sprintf 20F6  
                  __size_ofi2_ReadIRpin 000E                              ??_high_isr 0067  
                        __pintcode_body 3CB8                    end_of_initialization 7C00  
                      SendNEC_wait@code 008E                           ??_cleanBuffer 007D  
                           _ProductName 01A0                        ?_UARTcommandMenu 007C  
                       i1ReadUSART@data 0001                            ??_ClearUSART 007A  
                        ??_UseBluetooth 018F                               i1u1322_20 8AD6  
                             i1u1322_27 8ACC                               i1u1163_20 8C4C  
                             i1u1323_20 8B02                               i1u1163_27 8C42  
                             i1u1323_27 8AF8                               i1u1164_20 8C78  
                             i1u1164_27 8C6E                                 int_func 3CB8  
                      ?_ReadCodeButtons 0001                         ??_SendNEC_bytes 008E  
                             i2u2001_40 5222                __size_of_lowercaseString 0044  
                       ___lldiv@divisor 007D                               i2u1992_40 5110  
                             i2u1994_40 514E                   EraseScreen@characters 0002  
                    __end_of_SYNTAX_ERR F3C9                        _ReadEEPROM_1Byte 8FA4  
                       ___lldiv@counter 0085                      __end_of_IRrawToNEC 53C8  
                main@BluetoothStringPos 019D                               _RCSTAbits 000FAB  
                               postdec1 000FE5                                 postdec2 000FDD  
                 ??_GetStringAfterComma 007E                        _EnterCommandMode 7DA4  
                               postinc0 000FEE                                 postinc2 000FDE  
                        ?_SetMemoryChar 0082               __size_of_VoltageDividerON 0006  
                __size_of_BlueConnected 000E                            ?_EraseScreen 0001  
                        ?_SetMemoryLong 009D                       ??i1_BlueConnected 0001  
                        __tdiv_to_l_@f1 0079                          __tdiv_to_l_@f2 007C  
                             _IRRawCode 0700                           ??__tdiv_to_l_ 007F  
               ??_BluetoothInitialSetup 00DB                       SetMemoryLong@Data 009D  
                      _CheckReceivingIR 92DE                       SetMemoryLong@Test 00A6  
                     GetMemoryLong@temp 0094                            ??_BufferCopy 0087  
                    __end_of_ClearUSART 932A                               _IRaddress 01EA  
                __size_of_GetMemoryChar 002A                               _TRISAbits 000F92  
                             _TRISBbits 000F93                      _SyncEEPROMToGlobal 6368  
                             _TRISCbits 000F94                          BufferCopy@from 0081  
                            main@IRtask 019B                  __size_of_GetMemoryLong 0170  
                             _IRcodeBit 0030              __size_of_EEPROMinitialized 0014  
                __size_of_EEPROM_UNLOCK 0016       StringContainsCaseInsensitive@That 007E  
     StringContainsCaseInsensitive@This 007C                               _IRcommand 01EB  
           __end_of_ConfigureOscillator 93D4                  __size_of_Reverse_4Byte 0C7E  
             __size_of_SetEEPROMdefault 0128                               _RFcodeBit 0037  
                   ?_SyncEEPROMToGlobal 0001                   __end_ofi2_ResetTimer0 93B4  
                             _GetEEPROM 6A24                       main@Bluetoothtask 019C  
                  __end_ofi1_UARTstring 8C80                               _DecodeNEC 8206  
                           ___ftdiv@exp 0091                               _IRtimeout 0284  
                             _TXSTAbits 000FAC               __size_of_cleanBuffer16bit 005E  
                   UseBluetooth@tempNec 026F                             _StringMatch 896A  
                   __size_of__div_to_l_ 0194                     UseBluetooth@timeout 0273  
    __end_of_StringMatchCaseInsensitive 85CE              _StringMatchCaseInsensitive 853A  
                   __end_of_cleanBuffer 8BCE                       _Timer1_Postscaler 003B  
                        _IRrepeatAmount 0033                      __end_of_BufferCopy 86E8  
                           ___ftmul@exp 009C                            ??_InitTimer0 0079  
                          ??_InitTimer1 0079                            ??_InitTimer2 0079  
                          ??_InitTimer3 0079                          __end_of_InitIR 8E18  
                          ??_InitTimers 0079              __size_of_VoltageDividerOFF 0004  
                        __end_of_SendRF 7B2A                     _Conf2_ChannelH_1_ON F33E  
                   _Conf2_ChannelH_2_ON F35E                     _Conf2_ChannelH_3_ON F37E  
                             _GetNumber 4720                               _EncodeNEC 7132  
        GetStringAfterComma@CommaNumber 007B                          __end_of___ftge 7DA4  
                          ?_Init_System 0001                          __end_of___lmul 896A  
                        _ReceivedString 0600                          __end_of___wmul 9052  
                  ??_SyncEEPROMToGlobal 00A5                             _BAUDCONbits 000FB8  
                         __pidataCOMRAM 93C4                        ??_StringAddEqual 008A  
                     __size_of_UARTchar 001E                            ?_ReadVoltage 00A2  
                        __end_of_fround 5A3C                        IRrawToNEC@Invert 001F  
                     ?i1_UARTstringCRLN 0004                     start_initialization 7B2A  
                             _ReadUSART 921A                 __size_of_UARTstringCRLN 006A  
                     _Timer2_Postscaler 003C                               _ReadIRpin 9346  
                 __end_of_InitBluetooth 8CD6                        UseBluetooth@temp 027F  
                   __end_of__tdiv_to_l_ 6890                               _SetEEPROM 617C  
                         GetNumber@This 0085                      ??i1_UARTstringCRLN 0006  
                         _BlueConnected 9354                           GetNumber@temp 0095  
                  __end_of_Reverse_Byte 80A0                      __end_of_InitTimer0 9300  
                    __end_of_InitTimer1 9346                      __end_of_InitTimer2 9338  
                    __end_of_InitTimer3 93A0                      __end_of_InitTimers 92B8  
                      ??_StringContains 007D                              ?_GetEEPROM 009D  
                             _OpenUSART 8874                       __size_of_IsLetter 001E  
                 __size_of_SendNEC_wait 009E                              ?_DecodeNEC 007D  
                       ___llmod@divisor 008A                       __size_of_InitUART 0116  
                       ___llmod@counter 008E                               _ResetBlue 9088  
                             _Sendcount 003A                                ??_InitIR 0081  
                        _SendRF_Channel 5F24                 GetStringAfterComma@This 0079  
                          ?_SendRF_wait 0081                               _UseIRCode 5CBA  
                         _GetMemoryChar 9170                                ??_SendRF 007E  
                     _Timer3_Postscaler 003D               StringAddEqual@firstnumber 0164  
                       ??_SetMemoryChar 0083                           _GetMemoryLong 6BB2  
                     ?_InternalADC_Read 0082                         ??_SetMemoryLong 00A2  
                              ??___ftge 007F                       __size_of_ResetADC 000E  
                              ??___lmul 0081                           _EEPROM_UNLOCK 9262  
                              ??___wmul 008B      StringContainsCaseInsensitive@begin 0080  
                     ??_lowercaseString 007B                              ?_GetNumber 0085  
                    ??_InternalADC_Read 0084                              ?_EncodeNEC 007D  
                         _Reverse_4Byte 303A      StringMatchCaseInsensitive@tempThat 0081  
    StringMatchCaseInsensitive@tempThis 0080                  __size_of_lowercaseChar 002C  
                           __pdataBANK0 00E6                             __pdataBANK1 01A0  
                           __pdataBANK2 0284                        __CFG_LPT1OSC$OFF 000000  
                              ??_fround 00A5                           sprintf@tmpval 010C  
                   UARTcommandMenu@Desc 007E                    GetNumber@CommaNumber 0087  
              WriteEEPROM_1Byte@address 0079                    __size_of_IsCharacter 0018  
                  __end_of_UseBluetooth 20F6                       __size_of___altoft 00A2  
                            fround@prec 00AB                       __size_of___ftpack 0120  
             SetMemoryLong@AddressFirst 00A1                               Round@temp 00CA  
                      cleanBuffer@count 007B                       __size_of___lltoft 0080  
                           __pbssCOMRAM 0025                              ?_ReadUSART 0001  
        ?_StringContainsCaseInsensitive 007C                       __size_of___lwtoft 002C  
                            ?_ReadIRpin 0001          __end_of_Conf2_ChannelB_OFF_STR F2B7  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                         __pcstackBANK2 0200                           __pcstackBANK3 0300  
                          _SendNEC_wait 849C                              ?_SetEEPROM 0100  
                     _Conf2_ChannelB_ON F2FE                       _Conf2_ChannelD_ON F31E  
                        ?_BlueConnected 0001                            _isdigit$3462 007A  
        __end_of_Conf2_ChannelD_OFF_STR F2CA          StringMatchCaseInsensitive@That 007E  
        StringMatchCaseInsensitive@This 007C                GetNumber@tempCommaNumber 008F  
               _Conf2_ChannelH_1_ON_STR F268                            ?_ResetTimer0 0001  
                          ?_ResetTimer1 0001                            ?_ResetTimer3 0001  
                           _cleanBuffer 8B74                 _Conf2_ChannelH_2_ON_STR F27C  
                      ??_ReadPushButton 0079                              ?_OpenUSART 0079  
               _Conf2_ChannelH_3_ON_STR F290                       __size_of_high_isr 4214  
                           sprintf@flag 011B                             sprintf@fval 0116  
                           sprintf@prec 010A                  __end_of_SendRF_Channel 617C  
                              ?_InitADC 0001                                ?_InitApp 0001  
                            ?_ResetBlue 0001                          ?_GetMemoryChar 007C  
                        ?_GetMemoryLong 007C                 _Conf2_ChannelH_1_Status 002C  
                            ?_UseIRCode 00B9                 _Conf2_ChannelH_2_Status 002D  
                     __CFG_CCP2MX$PORTC 000000                 _Conf2_ChannelH_3_Status 002E  
                        ?_EEPROM_UNLOCK 0001                         SendRF_wait@Code 0081  
             __size_of_Local_CloseUSART 000E                               __pintcode 0008  
                         __pmediumconst F192                          ?_Reverse_4Byte 0079  
                      _VoltageDividerON 93BE                                ?___awdiv 007F  
                             __ptext100 93D2                               __ptext102 8F66  
                             __ptext111 93AA                               __ptext103 8AB2  
                             __ptext112 937E                               __ptext104 8C28  
                             __ptext113 93B4                               __ptext105 928E  
                             __ptext114 4FCA                               __ptext106 9370  
                             __ptext107 9232                               __ptext108 919A  
                             __ptext109 924A                                ?___ftadd 00AC  
                     SendRF_wait@Config 0083                             IRrawToNEC@i 0065  
                              ?___awmod 0079                                ?___ftdiv 0084  
                  cleanBuffer16bit@data 0079                                ?___ftneg 0079  
                       SendRF_wait@size 0084                                ?___lldiv 0079  
                              ?___ftmul 0093                                ?___llmod 0086  
                              ?___ftsub 00B8                               __npowers_ F1BB  
                              ?___fttol 00B8                            UseIRCode@NEC 00BB  
                           __pintcodelo 0018                                ?_delayUS 0079  
                  __size_of_EraseScreen 0028                             __tdiv_to_l_ 66EA  
                          ??__div_to_l_ 007F                       SendRF_wait@amount 0085  
                         IRrawToNEC@NEC 001D                       _WriteEEPROM_1Byte 8EE8  
                              ?_isdigit 0001               __end_of_Conf2_ChannelB_ON F30E  
             __end_of_Conf2_ChannelD_ON F32E                           IRrawToNEC@Raw 001B  
                         UseBluetooth@i 0283                __end_of_ReadEEPROM_1Byte 8FE0  
                              ?_low_isr 0001                      ?_WriteEEPROM_1Byte 0079  
                        __size_of_Round 0066                               _hexpowers F209  
            __end_of_SyncGlobalToEEPROM 8E5E                   __size_ofi1_UARTstring 0058  
              __end_of_EnterCommandMode 7E6C                                ?_sprintf 00C7  
                        __size_of_scale 0504                           _lowercaseChar 9144  
              UseBluetooth@rfchannelSTR 0264                        _SetEEPROMdefault 7280  
                             delayUS@US 0079                   __end_ofi1_cleanBuffer 8FA4  
                       IsCharacter@data 0001                             ??_GetEEPROM 009F  
                   ??_WriteEEPROM_1Byte 007C                             ??_DecodeNEC 0085  
                        ___wmul@product 008B                                _IOCBbits 000F7D  
                       i1_BlueConnected 9370                __end_of_CheckReceivingIR 92F0  
                      _cleanBuffer16bit 8B16                         ?_SendRF_Channel 0001  
                              _IPR1bits 000F9F                                _IPR2bits 000FA2  
                              _PIE1bits 000F9D                                _PIE2bits 000FA0  
                          cleanBuffer@i 0080                                _PIR1bits 000F9E  
                    __end_of__div_to_l_ 6A24                                _PIR2bits 000FA1  
                              _RCONbits 000FD0                    i1UARTstringCRLN@data 0004  
                      __CFG_WDTPS$32768 000000                          UseIRCode@found 00C2  
                           ??_GetNumber 008A                             ??_EncodeNEC 0081  
                        DecodeNEC@temp1 008B                          DecodeNEC@temp2 0089  
                        DecodeNEC@temp3 008A                                _RFConfig 0036  
                              _UARTchar 91E0            ??_StringMatchCaseInsensitive 0080  
                         ??i1_ReadUSART 0001            __size_of_BluetoothConfigured 001C  
              BluetoothInitialSetup@buf 0128               ReadEEPROM_1Byte@GIEstatus 007B  
             __end_of_WriteEEPROM_1Byte 8F28                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0087                            i1_UARTstring 8C28  
                  __size_of_Init_System 0086                                _IRpinOLD 0031  
        __size_of_BluetoothInitialSetup 0424                     ReadCodeButtons@temp 0082  
         __end_of_BluetoothInitialSetup 4FCA                   __size_of_Reverse_Byte 00B6  
                        _UARTstringCRLN 89E2                         ??_BlueConnected 0079  
                           ??_ReadUSART 0079                           ??i2_ReadIRpin 001B  
                  __size_of_ReadVoltage 00B8                             ??_ReadIRpin 0079  
              __size_of_WaitForIRsignal 0090                         StringAddEqual@i 0165  
                       StringAddEqual@j 0166                             ??_SetEEPROM 00AE  
                        ?_lowercaseChar 0079                       ___lmul@multiplier 0079  
                           _INTCON2bits 000FF1                                _IsLetter 91C2  
                             copy_data0 7BA2                               copy_data1 7BC2  
                             copy_data2 7BF4                           _CommandString 0500  
                              _InitUART 782A                         UseBluetooth@buf 0200  
                       UseBluetooth@set 026E                             ??_OpenUSART 007B  
                          GetNumber@Hex 0092                         IRrawToNEC@first 0064  
                       ??_GetMemoryChar 0080                         OpenUSART@config 007B  
                       ??_GetMemoryLong 0080                      SendNEC_wait@toggle 0093  
           __end_of_GetStringAfterComma 782A                              _EECON1bits 000FA6  
                          ?_StringMatch 0079                             ??_ResetBlue 0082  
                      __size_of_InitADC 0016                         ??_EEPROM_UNLOCK 0079  
                              _ResetADC 9362                   __end_of_SendNEC_bytes 876E  
                      __size_of_InitApp 0046                                __Hrparam 0000  
                           ??_UseIRCode 00BF                         ??_Reverse_4Byte 007D  
                              __Lrparam 0000                          i1cleanBuffer@i 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_UARTcommandMenu 011E  
                  __size_of_SendRF_wait 003E                   __size_of_UseBluetooth 1F00  
              __size_of_ReadCodeButtons 0054                            _Reverse_Byte 7FEA  
             InternalADC_Read@ADCcounts 0082                      i1cleanBuffer@count 0003  
                     Reverse_4Byte@This 0079                           GetEEPROM@Temp 009D  
                      __size_of___awdiv 00D0                        __size_of___ftadd 027E  
                      __size_of___awmod 00B4                        __size_of___ftdiv 0152  
                       cleanBuffer@data 0079                        __size_of___ftneg 0030  
                      __size_of___lldiv 00C6                                ___altoft 83FA  
                      __size_of___ftmul 016C                        __size_of___llmod 00A4  
                      __size_of___ftsub 0050                        __size_of___fttol 0152  
                     Reverse_4Byte@temp 0085                                ___ftpack 74CE  
            InternalADC_Read@AnaChanSel 0086                             _fround$3784 00A8  
                           _fround$3785 00A5                                ___lltoft 87F4  
                __end_of_UARTstringCRLN 8A4C                        __size_of_delayUS 0056  
         __end_of_Conf2_ChannelB_ON_STR F2DC                                ___lwtoft 9118  
         __end_of_Conf2_ChannelD_ON_STR F2EE                       main@VoltageStatus 019E  
                            sprintf@idx 0103                              sprintf@len 0106  
                            sprintf@exp 0110                              sprintf@val 0112  
                UseBluetooth@NecAddress 027D                     __end_ofi1_ReadUSART 92A4  
                      __size_of_isdigit 002E                  UseBluetooth@NecCommand 027E  
                      __size_of_low_isr 01DA                                __ptext10 853A  
                              __ptext11 896A                                __ptext20 86E8  
                              __ptext12 73A8                                __ptext21 303A  
                              __ptext13 6536                                __ptext30 4720  
                              __ptext22 92DE                                __ptext14 865E  
                              __ptext31 9144                                __ptext23 7F32  
                              __ptext15 8F28                                __ptext40 7280  
                              __ptext32 88F0                                __ptext24 9118  
                              __ptext16 7A3A                                __ptext41 782A  
                              __ptext33 91C2                                __ptext25 6E8E  
                              __ptext17 92CC                                __ptext50 932A  
                              __ptext42 8A4C                                __ptext34 7132  
                              __ptext26 93BE                                __ptext18 938C  
                              __ptext51 9338                                __ptext43 83FA  
                              __ptext35 8206                                __ptext27 93CE  
                              __ptext19 849C                                __ptext60 421C  
                              __ptext52 8DD0                                __ptext44 8874  
                              __ptext36 7FEA                                __ptext28 8358  
                              __ptext61 90EA                                __ptext53 8B16  
                              __ptext45 930E                                __ptext37 876E  
                              __ptext29 770C                                __ptext70 82B4  
                              __ptext62 5764                                __ptext54 93A0  
                              __ptext46 931C                                __ptext38 6368  
                              __ptext71 7E6C                                __ptext63 901A  
                              __ptext55 9346                                __ptext47 921A  
                              __ptext39 6A24                                __ptext80 8BCE  
                              __ptext72 6FE0                                __ptext64 6D22  
                              __ptext56 92F0                                __ptext48 92A4  
                              __ptext81 91E0                                __ptext73 8D80  
                              __ptext65 80A0                                __ptext57 8C80  
                              __ptext49 9396                                __ptext90 6BB2  
                              __ptext82 8154                                __ptext74 5A3C  
                              __ptext66 7C06                                __ptext58 4BA6  
                              __ptext91 8FE0                                __ptext83 9088  
                              __ptext75 74CE                                __ptext67 66EA  
                              __ptext59 20F6                                __ptext92 8EE8  
                              __ptext84 8CD6                                __ptext76 90BA  
                              __ptext68 6890                                __ptext93 9262  
                              __ptext85 9354                                __ptext77 7CD6  
                              __ptext69 87F4                       SendNEC_bytes@code 0089  
                              __ptext94 9170                                __ptext86 91FE  
                              __ptext78 7DA4                                __ptext95 8FA4  
                              __ptext87 8E18                                __ptext79 8B74  
                              __ptext96 9278                                __ptext88 617C  
                              __ptext97 9362                                __ptext89 7940  
               __end_ofi1_BlueConnected 937E                                __ptext98 92B8  
                              __ptext99 8E5E                                __powers_ F1E2  
                              _high_isr 0008              __end_of_Conf1_ChannelD_STR F39D  
            __end_of_Conf1_ChannelE_STR F3AC              __end_of_Conf1_ChannelF_STR F3BB  
                      __size_of_sprintf 0F44                     __end_ofi2_ReadIRpin 938C  
                       _lowercaseString 8EA4                              GetEEPROM@i 00A3  
                            GetEEPROM@j 00A4                              GetEEPROM@k 00A2  
                         __size_of_main 039C                   SendRF_Channel@channel 0086  
                          _UseBluetooth 01F6                                delayUS@i 007E  
                  __size_of_ResetTimer0 000A                    __size_of_ResetTimer1 000A  
                  __size_of_ResetTimer3 000A               __size_ofi1_UARTstringCRLN 0064  
             GetMemoryChar@AddressFirst 0080            __size_of_ConfigureOscillator 0002  
                UseBluetooth@EnteredNEC 0276                        _Local_CloseUSART 930E  
                       GetMemoryLong@MH 0099                         GetMemoryLong@ML 009A  
                UseBluetooth@EmptyPlace 0274                            BufferCopy@to 0083  
           __size_of_SyncEEPROMToGlobal 01CE              __size_of_WriteEEPROM_1Byte 0040  
                            _LEDTimerON 92CC                         ?_UARTstringCRLN 007C  
                __size_ofi2_ResetTimer0 000A                              _INTCONbits 000FF2  
             __size_of_InternalADC_Read 00A2                          OpenUSART@spbrg 0079  
                       ??_lowercaseChar 007B                            UARTchar@data 0079  
                       StringMatch@That 007B                         StringMatch@This 0079  
                              isdigit@c 007B                                scale@scl 00A8  
                    GetEEPROM@Arrayspot 00A1                      SetEEPROM@Arrayspot 00B5  
                      EncodeNEC@address 00A5                __end_of_VoltageDividerON 93C4  
          __end_of_Conf2_ChannelH_1_OFF F33E            __end_of_Conf2_ChannelH_2_OFF F35E  
          __end_of_Conf2_ChannelH_3_OFF F37E                                intlevel1 0000  
                              intlevel2 0000                               sprintf@ap 0108  
                             sprintf@cp 0104                        __tdiv_to_l_@exp1 0087  
                             sprintf@sp 00C7                        __tdiv_to_l_@cntr 0086  
                          ?_cleanBuffer 0079      GetStringAfterComma@tempCommaNumber 007F  
                      __tdiv_to_l_@quot 0082                       ??_WaitForIRsignal 0082  
                      EncodeNEC@command 007D                        ___lldiv@dividend 0079  
                          IsLetter@data 0079         ??_StringContainsCaseInsensitive 0080  
                        _BatteryVoltage 00DB                          GetMemoryChar@H 0081  
                           _IR_New_Code 00E5                              i1_UARTchar 924A  
                        GetMemoryLong@H 0098                          GetMemoryLong@L 009B  
                __size_of_InitBluetooth 0056                             BufferCopy@i 0087  
                 __end_of_SetMemoryChar 901A                   __end_of_SetMemoryLong 7A3A  
        BluetoothInitialSetup@RFchannel 011E                           ??_IsCharacter 0001  
                         _InitUART$3783 0100                __end_of_SetEEPROMdefault 73A8  
                        _Conf1_ChannelD F3C9                          _Conf1_ChannelE F3D5  
                        _Conf1_ChannelF F3E1                              GetNumber@i 0093  
                        _Conf1_Channels F3F6                             i1_ReadUSART 928E  
                      DecodeNEC@address 0081                            ?__tdiv_to_l_ 0079  
                      UARTcommandMenu@i 0085                  UARTcommandMenu@Command 007C  
                     ??_UARTcommandMenu 0080             __end_of_Conf2_ChannelH_1_ON F34E  
           __end_of_Conf2_ChannelH_2_ON F36E             __end_of_Conf2_ChannelH_3_ON F38E  
                        _Conf2_Channels F3FA                                sprintf@c 011D  
              __end_of_cleanBuffer16bit 8B74                                sprintf@f 00C9  
                      DecodeNEC@command 0083                       ??_ReadCodeButtons 0082  
                      ___lldiv@quotient 0081                             i2_ReadIRpin 937E  
                     ?_ReadEEPROM_1Byte 0079                            EraseScreen@i 0003  
               __end_of_lowercaseString 8EE8                        ?i1_BlueConnected 0001  
               __size_of_StringAddEqual 01B4                          i1UARTchar@data 0001  
                      ??_SendRF_Channel 0086                      ??_ReadEEPROM_1Byte 007B  
                     ?_EnterCommandMode 0001              __end_of_Conf2_ChannelB_OFF F2FE  
            __end_of_Conf2_ChannelD_OFF F31E                     _BluetoothConfigured 91FE  
                    ??_EnterCommandMode 0082                              _UARTstring 8BCE  
                         i2_ResetTimer0 93AA                       ?_CheckReceivingIR 0001  
             GetStringAfterComma@result 007C                      _SyncGlobalToEEPROM 8E18  
                    ??_CheckReceivingIR 0079                         BufferCopy@count 0085  
                  __size_of_StringMatch 0078  
