

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Apr 29 21:24:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	idataBANK5,global,class=CODE,delta=1
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   147                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=2,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=2,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   155                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   156  0000                     
   157                           	psect	idataCOMRAM
   158  00AF1E                     __pidataCOMRAM:
   159                           	opt stack 0
   160                           
   161                           ;initializer for _IRbitPosition
   162  00AF1E  20                 	db	32
   163                           
   164                           ;initializer for _IRcodePlace
   165  00AF1F  01                 	db	1
   166                           
   167                           ;initializer for _RF_IR
   168  00AF20  37                 	db	55
   169                           
   170                           ;initializer for _RF_IR_Postscaler
   171  00AF21  02                 	db	2
   172                           
   173                           ;initializer for _ReceivingIR
   174  00AF22  0D                 	db	13
   175                           
   176                           	psect	idataBANK0
   177  00AF2C                     __pidataBANK0:
   178                           	opt stack 0
   179                           
   180                           ;initializer for _Sent
   181  00AF2C  01                 	db	1
   182                           
   183                           	psect	idataBANK3
   184  00AF23                     __pidataBANK3:
   185                           	opt stack 0
   186                           
   187                           ;initializer for _IRtimeout
   188  00AF23  1389               	dw	5001
   189  00AF25  0000               	dw	0
   190                           
   191                           	psect	idataBANK5
   192  00AACC                     __pidataBANK5:
   193                           	opt stack 0
   194                           
   195                           ;initializer for _ProductName
   196  00AACC  48                 	db	72
   197  00AACD  6F                 	db	111
   198  00AACE  6D                 	db	109
   199  00AACF  65                 	db	101
   200  00AAD0  20                 	db	32
   201  00AAD1  41                 	db	65
   202  00AAD2  75                 	db	117
   203  00AAD3  74                 	db	116
   204  00AAD4  6F                 	db	111
   205  00AAD5  6D                 	db	109
   206  00AAD6  61                 	db	97
   207  00AAD7  74                 	db	116
   208  00AAD8  69                 	db	105
   209  00AAD9  6F                 	db	111
   210  00AADA  6E                 	db	110
   211  00AADB  00                 	db	0
   212  00AADC  00                 	db	0
   213  00AADD  00                 	db	0
   214  00AADE  00                 	db	0
   215  00AADF  00                 	db	0
   216  00AAE0  00                 	db	0
   217  00AAE1  00                 	db	0
   218  00AAE2  00                 	db	0
   219  00AAE3  00                 	db	0
   220  00AAE4  00                 	db	0
   221  00AAE5  00                 	db	0
   222  00AAE6  00                 	db	0
   223  00AAE7  00                 	db	0
   224  00AAE8  00                 	db	0
   225  00AAE9  00                 	db	0
   226  00AAEA  00                 	db	0
   227  00AAEB  00                 	db	0
   228  00AAEC  00                 	db	0
   229  00AAED  00                 	db	0
   230  00AAEE  00                 	db	0
   231  00AAEF  00                 	db	0
   232  00AAF0  00                 	db	0
   233  00AAF1  00                 	db	0
   234  00AAF2  00                 	db	0
   235  00AAF3  00                 	db	0
   236  00AAF4  00                 	db	0
   237  00AAF5  00                 	db	0
   238  00AAF6  00                 	db	0
   239  00AAF7  00                 	db	0
   240  00AAF8  00                 	db	0
   241  00AAF9  00                 	db	0
   242  00AAFA  00                 	db	0
   243  00AAFB  00                 	db	0
   244  00AAFC  00                 	db	0
   245  00AAFD  00                 	db	0
   246                           
   247                           	psect	mediumconst
   248  00EC7E                     __pmediumconst:
   249                           	opt stack 0
   250  00EC7E  00                 	db	0
   251  00EC7F                     _dpowers:
   252                           	opt stack 0
   253  00EC7F  0001               	dw	1
   254  00EC81  0000               	dw	0
   255  00EC83  000A               	dw	10
   256  00EC85  0000               	dw	0
   257  00EC87  0064               	dw	100
   258  00EC89  0000               	dw	0
   259  00EC8B  03E8               	dw	1000
   260  00EC8D  0000               	dw	0
   261  00EC8F  2710               	dw	10000
   262  00EC91  0000               	dw	0
   263  00EC93  86A0               	dw	34464
   264  00EC95  0001               	dw	1
   265  00EC97  4240               	dw	16960
   266  00EC99  000F               	dw	15
   267  00EC9B  9680               	dw	38528
   268  00EC9D  0098               	dw	152
   269  00EC9F  E100               	dw	57600
   270  00ECA1  05F5               	dw	1525
   271  00ECA3  CA00               	dw	51712
   272  00ECA5  3B9A               	dw	15258
   273  00ECA7                     __end_of_dpowers:
   274                           	opt stack 0
   275  00ECA7                     __npowers_:
   276                           	opt stack 0
   277  00ECA7  00                 	db	0
   278  00ECA8  80                 	db	128
   279  00ECA9  3F                 	db	63
   280  00ECAA  CD                 	db	205
   281  00ECAB  CC                 	db	204
   282  00ECAC  3D                 	db	61
   283  00ECAD  D7                 	db	215
   284  00ECAE  23                 	db	35
   285  00ECAF  3C                 	db	60
   286  00ECB0  12                 	db	18
   287  00ECB1  83                 	db	131
   288  00ECB2  3A                 	db	58
   289  00ECB3  B7                 	db	183
   290  00ECB4  D1                 	db	209
   291  00ECB5  38                 	db	56
   292  00ECB6  C6                 	db	198
   293  00ECB7  27                 	db	39
   294  00ECB8  37                 	db	55
   295  00ECB9  38                 	db	56
   296  00ECBA  86                 	db	134
   297  00ECBB  35                 	db	53
   298  00ECBC  C0                 	db	192
   299  00ECBD  D6                 	db	214
   300  00ECBE  33                 	db	51
   301  00ECBF  CC                 	db	204
   302  00ECC0  2B                 	db	43
   303  00ECC1  32                 	db	50
   304  00ECC2  70                 	db	112
   305  00ECC3  89                 	db	137
   306  00ECC4  30                 	db	48
   307  00ECC5  E7                 	db	231
   308  00ECC6  DB                 	db	219
   309  00ECC7  2E                 	db	46
   310  00ECC8  E5                 	db	229
   311  00ECC9  3C                 	db	60
   312  00ECCA  1E                 	db	30
   313  00ECCB  42                 	db	66
   314  00ECCC  A2                 	db	162
   315  00ECCD  0D                 	db	13
   316  00ECCE                     __end_of__npowers_:
   317                           	opt stack 0
   318  00ECCE                     __powers_:
   319                           	opt stack 0
   320  00ECCE  00                 	db	0
   321  00ECCF  80                 	db	128
   322  00ECD0  3F                 	db	63
   323  00ECD1  00                 	db	0
   324  00ECD2  20                 	db	32
   325  00ECD3  41                 	db	65
   326  00ECD4  00                 	db	0
   327  00ECD5  C8                 	db	200
   328  00ECD6  42                 	db	66
   329  00ECD7  00                 	db	0
   330  00ECD8  7A                 	db	122
   331  00ECD9  44                 	db	68
   332  00ECDA  40                 	db	64
   333  00ECDB  1C                 	db	28
   334  00ECDC  46                 	db	70
   335  00ECDD  50                 	db	80
   336  00ECDE  C3                 	db	195
   337  00ECDF  47                 	db	71
   338  00ECE0  24                 	db	36
   339  00ECE1  74                 	db	116
   340  00ECE2  49                 	db	73
   341  00ECE3  97                 	db	151
   342  00ECE4  18                 	db	24
   343  00ECE5  4B                 	db	75
   344  00ECE6  BC                 	db	188
   345  00ECE7  BE                 	db	190
   346  00ECE8  4C                 	db	76
   347  00ECE9  6B                 	db	107
   348  00ECEA  6E                 	db	110
   349  00ECEB  4E                 	db	78
   350  00ECEC  03                 	db	3
   351  00ECED  15                 	db	21
   352  00ECEE  50                 	db	80
   353  00ECEF  79                 	db	121
   354  00ECF0  AD                 	db	173
   355  00ECF1  60                 	db	96
   356  00ECF2  F3                 	db	243
   357  00ECF3  49                 	db	73
   358  00ECF4  71                 	db	113
   359  00ECF5                     __end_of__powers_:
   360                           	opt stack 0
   361  00ECF5                     _hexpowers:
   362                           	opt stack 0
   363  00ECF5  0001               	dw	1
   364  00ECF7  0000               	dw	0
   365  00ECF9  0010               	dw	16
   366  00ECFB  0000               	dw	0
   367  00ECFD  0100               	dw	256
   368  00ECFF  0000               	dw	0
   369  00ED01  1000               	dw	4096
   370  00ED03  0000               	dw	0
   371  00ED05  0000               	dw	0
   372  00ED07  0001               	dw	1
   373  00ED09  0000               	dw	0
   374  00ED0B  0010               	dw	16
   375  00ED0D  0000               	dw	0
   376  00ED0F  0100               	dw	256
   377  00ED11  0000               	dw	0
   378  00ED13  1000               	dw	4096
   379  00ED15                     __end_of_hexpowers:
   380                           	opt stack 0
   381  00ED15                     _ProjectName:
   382                           	opt stack 0
   383  00ED15  48                 	db	72
   384  00ED16  6F                 	db	111
   385  00ED17  6D                 	db	109
   386  00ED18  65                 	db	101
   387  00ED19  20                 	db	32
   388  00ED1A  41                 	db	65
   389  00ED1B  75                 	db	117
   390  00ED1C  74                 	db	116
   391  00ED1D  6F                 	db	111
   392  00ED1E  6D                 	db	109
   393  00ED1F  61                 	db	97
   394  00ED20  74                 	db	116
   395  00ED21  69                 	db	105
   396  00ED22  6F                 	db	111
   397  00ED23  6E                 	db	110
   398  00ED24  20                 	db	32
   399  00ED25  49                 	db	73
   400  00ED26  52                 	db	82
   401  00ED27  2F                 	db	47
   402  00ED28  52                 	db	82
   403  00ED29  46                 	db	70
   404  00ED2A  20                 	db	32
   405  00ED2B  48                 	db	72
   406  00ED2C  75                 	db	117
   407  00ED2D  62                 	db	98
   408  00ED2E  00                 	db	0
   409  00ED2F                     __end_of_ProjectName:
   410                           	opt stack 0
   411  00ED2F                     _Conf2_ChannelH_1_OFF_STR:
   412                           	opt stack 0
   413  00ED2F  43                 	db	67
   414  00ED30  6F                 	db	111
   415  00ED31  6E                 	db	110
   416  00ED32  66                 	db	102
   417  00ED33  32                 	db	50
   418  00ED34  5F                 	db	95
   419  00ED35  43                 	db	67
   420  00ED36  68                 	db	104
   421  00ED37  61                 	db	97
   422  00ED38  6E                 	db	110
   423  00ED39  6E                 	db	110
   424  00ED3A  65                 	db	101
   425  00ED3B  6C                 	db	108
   426  00ED3C  48                 	db	72
   427  00ED3D  5F                 	db	95
   428  00ED3E  31                 	db	49
   429  00ED3F  5F                 	db	95
   430  00ED40  4F                 	db	79
   431  00ED41  46                 	db	70
   432  00ED42  46                 	db	70
   433  00ED43  00                 	db	0
   434  00ED44                     __end_of_Conf2_ChannelH_1_OFF_STR:
   435                           	opt stack 0
   436  00ED44                     _Conf2_ChannelH_2_OFF_STR:
   437                           	opt stack 0
   438  00ED44  43                 	db	67
   439  00ED45  6F                 	db	111
   440  00ED46  6E                 	db	110
   441  00ED47  66                 	db	102
   442  00ED48  32                 	db	50
   443  00ED49  5F                 	db	95
   444  00ED4A  43                 	db	67
   445  00ED4B  68                 	db	104
   446  00ED4C  61                 	db	97
   447  00ED4D  6E                 	db	110
   448  00ED4E  6E                 	db	110
   449  00ED4F  65                 	db	101
   450  00ED50  6C                 	db	108
   451  00ED51  48                 	db	72
   452  00ED52  5F                 	db	95
   453  00ED53  32                 	db	50
   454  00ED54  5F                 	db	95
   455  00ED55  4F                 	db	79
   456  00ED56  46                 	db	70
   457  00ED57  46                 	db	70
   458  00ED58  00                 	db	0
   459  00ED59                     __end_of_Conf2_ChannelH_2_OFF_STR:
   460                           	opt stack 0
   461  00ED59                     _Conf2_ChannelH_3_OFF_STR:
   462                           	opt stack 0
   463  00ED59  43                 	db	67
   464  00ED5A  6F                 	db	111
   465  00ED5B  6E                 	db	110
   466  00ED5C  66                 	db	102
   467  00ED5D  32                 	db	50
   468  00ED5E  5F                 	db	95
   469  00ED5F  43                 	db	67
   470  00ED60  68                 	db	104
   471  00ED61  61                 	db	97
   472  00ED62  6E                 	db	110
   473  00ED63  6E                 	db	110
   474  00ED64  65                 	db	101
   475  00ED65  6C                 	db	108
   476  00ED66  48                 	db	72
   477  00ED67  5F                 	db	95
   478  00ED68  33                 	db	51
   479  00ED69  5F                 	db	95
   480  00ED6A  4F                 	db	79
   481  00ED6B  46                 	db	70
   482  00ED6C  46                 	db	70
   483  00ED6D  00                 	db	0
   484  00ED6E                     __end_of_Conf2_ChannelH_3_OFF_STR:
   485                           	opt stack 0
   486  00ED6E                     _Conf2_ChannelH_1_ON_STR:
   487                           	opt stack 0
   488  00ED6E  43                 	db	67
   489  00ED6F  6F                 	db	111
   490  00ED70  6E                 	db	110
   491  00ED71  66                 	db	102
   492  00ED72  32                 	db	50
   493  00ED73  5F                 	db	95
   494  00ED74  43                 	db	67
   495  00ED75  68                 	db	104
   496  00ED76  61                 	db	97
   497  00ED77  6E                 	db	110
   498  00ED78  6E                 	db	110
   499  00ED79  65                 	db	101
   500  00ED7A  6C                 	db	108
   501  00ED7B  48                 	db	72
   502  00ED7C  5F                 	db	95
   503  00ED7D  31                 	db	49
   504  00ED7E  5F                 	db	95
   505  00ED7F  4F                 	db	79
   506  00ED80  4E                 	db	78
   507  00ED81  00                 	db	0
   508  00ED82                     __end_of_Conf2_ChannelH_1_ON_STR:
   509                           	opt stack 0
   510  00ED82                     _Conf2_ChannelH_2_ON_STR:
   511                           	opt stack 0
   512  00ED82  43                 	db	67
   513  00ED83  6F                 	db	111
   514  00ED84  6E                 	db	110
   515  00ED85  66                 	db	102
   516  00ED86  32                 	db	50
   517  00ED87  5F                 	db	95
   518  00ED88  43                 	db	67
   519  00ED89  68                 	db	104
   520  00ED8A  61                 	db	97
   521  00ED8B  6E                 	db	110
   522  00ED8C  6E                 	db	110
   523  00ED8D  65                 	db	101
   524  00ED8E  6C                 	db	108
   525  00ED8F  48                 	db	72
   526  00ED90  5F                 	db	95
   527  00ED91  32                 	db	50
   528  00ED92  5F                 	db	95
   529  00ED93  4F                 	db	79
   530  00ED94  4E                 	db	78
   531  00ED95  00                 	db	0
   532  00ED96                     __end_of_Conf2_ChannelH_2_ON_STR:
   533                           	opt stack 0
   534  00ED96                     _Conf2_ChannelH_3_ON_STR:
   535                           	opt stack 0
   536  00ED96  43                 	db	67
   537  00ED97  6F                 	db	111
   538  00ED98  6E                 	db	110
   539  00ED99  66                 	db	102
   540  00ED9A  32                 	db	50
   541  00ED9B  5F                 	db	95
   542  00ED9C  43                 	db	67
   543  00ED9D  68                 	db	104
   544  00ED9E  61                 	db	97
   545  00ED9F  6E                 	db	110
   546  00EDA0  6E                 	db	110
   547  00EDA1  65                 	db	101
   548  00EDA2  6C                 	db	108
   549  00EDA3  48                 	db	72
   550  00EDA4  5F                 	db	95
   551  00EDA5  33                 	db	51
   552  00EDA6  5F                 	db	95
   553  00EDA7  4F                 	db	79
   554  00EDA8  4E                 	db	78
   555  00EDA9  00                 	db	0
   556  00EDAA                     __end_of_Conf2_ChannelH_3_ON_STR:
   557                           	opt stack 0
   558  00EDAA                     _Conf2_ChannelB_OFF_STR:
   559                           	opt stack 0
   560  00EDAA  43                 	db	67
   561  00EDAB  6F                 	db	111
   562  00EDAC  6E                 	db	110
   563  00EDAD  66                 	db	102
   564  00EDAE  32                 	db	50
   565  00EDAF  5F                 	db	95
   566  00EDB0  43                 	db	67
   567  00EDB1  68                 	db	104
   568  00EDB2  61                 	db	97
   569  00EDB3  6E                 	db	110
   570  00EDB4  6E                 	db	110
   571  00EDB5  65                 	db	101
   572  00EDB6  6C                 	db	108
   573  00EDB7  42                 	db	66
   574  00EDB8  5F                 	db	95
   575  00EDB9  4F                 	db	79
   576  00EDBA  46                 	db	70
   577  00EDBB  46                 	db	70
   578  00EDBC  00                 	db	0
   579  00EDBD                     __end_of_Conf2_ChannelB_OFF_STR:
   580                           	opt stack 0
   581  00EDBD                     _Conf2_ChannelD_OFF_STR:
   582                           	opt stack 0
   583  00EDBD  43                 	db	67
   584  00EDBE  6F                 	db	111
   585  00EDBF  6E                 	db	110
   586  00EDC0  66                 	db	102
   587  00EDC1  32                 	db	50
   588  00EDC2  5F                 	db	95
   589  00EDC3  43                 	db	67
   590  00EDC4  68                 	db	104
   591  00EDC5  61                 	db	97
   592  00EDC6  6E                 	db	110
   593  00EDC7  6E                 	db	110
   594  00EDC8  65                 	db	101
   595  00EDC9  6C                 	db	108
   596  00EDCA  44                 	db	68
   597  00EDCB  5F                 	db	95
   598  00EDCC  4F                 	db	79
   599  00EDCD  46                 	db	70
   600  00EDCE  46                 	db	70
   601  00EDCF  00                 	db	0
   602  00EDD0                     __end_of_Conf2_ChannelD_OFF_STR:
   603                           	opt stack 0
   604  00EDD0                     _Conf2_ChannelB_ON_STR:
   605                           	opt stack 0
   606  00EDD0  43                 	db	67
   607  00EDD1  6F                 	db	111
   608  00EDD2  6E                 	db	110
   609  00EDD3  66                 	db	102
   610  00EDD4  32                 	db	50
   611  00EDD5  5F                 	db	95
   612  00EDD6  43                 	db	67
   613  00EDD7  68                 	db	104
   614  00EDD8  61                 	db	97
   615  00EDD9  6E                 	db	110
   616  00EDDA  6E                 	db	110
   617  00EDDB  65                 	db	101
   618  00EDDC  6C                 	db	108
   619  00EDDD  42                 	db	66
   620  00EDDE  5F                 	db	95
   621  00EDDF  4F                 	db	79
   622  00EDE0  4E                 	db	78
   623  00EDE1  00                 	db	0
   624  00EDE2                     __end_of_Conf2_ChannelB_ON_STR:
   625                           	opt stack 0
   626  00EDE2                     _Conf2_ChannelD_ON_STR:
   627                           	opt stack 0
   628  00EDE2  43                 	db	67
   629  00EDE3  6F                 	db	111
   630  00EDE4  6E                 	db	110
   631  00EDE5  66                 	db	102
   632  00EDE6  32                 	db	50
   633  00EDE7  5F                 	db	95
   634  00EDE8  43                 	db	67
   635  00EDE9  68                 	db	104
   636  00EDEA  61                 	db	97
   637  00EDEB  6E                 	db	110
   638  00EDEC  6E                 	db	110
   639  00EDED  65                 	db	101
   640  00EDEE  6C                 	db	108
   641  00EDEF  44                 	db	68
   642  00EDF0  5F                 	db	95
   643  00EDF1  4F                 	db	79
   644  00EDF2  4E                 	db	78
   645  00EDF3  00                 	db	0
   646  00EDF4                     __end_of_Conf2_ChannelD_ON_STR:
   647                           	opt stack 0
   648  00EDF4                     _Conf2_ChannelH_1_STR:
   649                           	opt stack 0
   650  00EDF4  43                 	db	67
   651  00EDF5  6F                 	db	111
   652  00EDF6  6E                 	db	110
   653  00EDF7  66                 	db	102
   654  00EDF8  32                 	db	50
   655  00EDF9  5F                 	db	95
   656  00EDFA  43                 	db	67
   657  00EDFB  68                 	db	104
   658  00EDFC  61                 	db	97
   659  00EDFD  6E                 	db	110
   660  00EDFE  6E                 	db	110
   661  00EDFF  65                 	db	101
   662  00EE00  6C                 	db	108
   663  00EE01  48                 	db	72
   664  00EE02  5F                 	db	95
   665  00EE03  31                 	db	49
   666  00EE04  00                 	db	0
   667  00EE05                     __end_of_Conf2_ChannelH_1_STR:
   668                           	opt stack 0
   669  00EE05                     _Conf2_ChannelH_2_STR:
   670                           	opt stack 0
   671  00EE05  43                 	db	67
   672  00EE06  6F                 	db	111
   673  00EE07  6E                 	db	110
   674  00EE08  66                 	db	102
   675  00EE09  32                 	db	50
   676  00EE0A  5F                 	db	95
   677  00EE0B  43                 	db	67
   678  00EE0C  68                 	db	104
   679  00EE0D  61                 	db	97
   680  00EE0E  6E                 	db	110
   681  00EE0F  6E                 	db	110
   682  00EE10  65                 	db	101
   683  00EE11  6C                 	db	108
   684  00EE12  48                 	db	72
   685  00EE13  5F                 	db	95
   686  00EE14  32                 	db	50
   687  00EE15  00                 	db	0
   688  00EE16                     __end_of_Conf2_ChannelH_2_STR:
   689                           	opt stack 0
   690  00EE16                     _Conf2_ChannelH_3_STR:
   691                           	opt stack 0
   692  00EE16  43                 	db	67
   693  00EE17  6F                 	db	111
   694  00EE18  6E                 	db	110
   695  00EE19  66                 	db	102
   696  00EE1A  32                 	db	50
   697  00EE1B  5F                 	db	95
   698  00EE1C  43                 	db	67
   699  00EE1D  68                 	db	104
   700  00EE1E  61                 	db	97
   701  00EE1F  6E                 	db	110
   702  00EE20  6E                 	db	110
   703  00EE21  65                 	db	101
   704  00EE22  6C                 	db	108
   705  00EE23  48                 	db	72
   706  00EE24  5F                 	db	95
   707  00EE25  33                 	db	51
   708  00EE26  00                 	db	0
   709  00EE27                     __end_of_Conf2_ChannelH_3_STR:
   710                           	opt stack 0
   711  00EE27                     _Conf2_ChannelB_OFF:
   712                           	opt stack 0
   713  00EE27  00                 	db	0
   714  00EE28  01                 	db	1
   715  00EE29  01                 	db	1
   716  00EE2A  00                 	db	0
   717  00EE2B  01                 	db	1
   718  00EE2C  00                 	db	0
   719  00EE2D  00                 	db	0
   720  00EE2E  00                 	db	0
   721  00EE2F  00                 	db	0
   722  00EE30  00                 	db	0
   723  00EE31  00                 	db	0
   724  00EE32  01                 	db	1
   725  00EE33  00                 	db	0
   726  00EE34  01                 	db	1
   727  00EE35  00                 	db	0
   728  00EE36  00                 	db	0
   729  00EE37                     __end_of_Conf2_ChannelB_OFF:
   730                           	opt stack 0
   731  00EE37                     _Conf2_ChannelB_ON:
   732                           	opt stack 0
   733  00EE37  00                 	db	0
   734  00EE38  01                 	db	1
   735  00EE39  01                 	db	1
   736  00EE3A  00                 	db	0
   737  00EE3B  01                 	db	1
   738  00EE3C  00                 	db	0
   739  00EE3D  00                 	db	0
   740  00EE3E  00                 	db	0
   741  00EE3F  00                 	db	0
   742  00EE40  00                 	db	0
   743  00EE41  01                 	db	1
   744  00EE42  00                 	db	0
   745  00EE43  00                 	db	0
   746  00EE44  01                 	db	1
   747  00EE45  00                 	db	0
   748  00EE46  00                 	db	0
   749  00EE47                     __end_of_Conf2_ChannelB_ON:
   750                           	opt stack 0
   751  00EE47                     _Conf2_ChannelD_OFF:
   752                           	opt stack 0
   753  00EE47  00                 	db	0
   754  00EE48  01                 	db	1
   755  00EE49  01                 	db	1
   756  00EE4A  00                 	db	0
   757  00EE4B  01                 	db	1
   758  00EE4C  00                 	db	0
   759  00EE4D  00                 	db	0
   760  00EE4E  00                 	db	0
   761  00EE4F  00                 	db	0
   762  00EE50  00                 	db	0
   763  00EE51  00                 	db	0
   764  00EE52  01                 	db	1
   765  00EE53  00                 	db	0
   766  00EE54  00                 	db	0
   767  00EE55  00                 	db	0
   768  00EE56  01                 	db	1
   769  00EE57                     __end_of_Conf2_ChannelD_OFF:
   770                           	opt stack 0
   771  00EE57                     _Conf2_ChannelD_ON:
   772                           	opt stack 0
   773  00EE57  00                 	db	0
   774  00EE58  01                 	db	1
   775  00EE59  01                 	db	1
   776  00EE5A  00                 	db	0
   777  00EE5B  01                 	db	1
   778  00EE5C  00                 	db	0
   779  00EE5D  00                 	db	0
   780  00EE5E  00                 	db	0
   781  00EE5F  00                 	db	0
   782  00EE60  00                 	db	0
   783  00EE61  01                 	db	1
   784  00EE62  00                 	db	0
   785  00EE63  00                 	db	0
   786  00EE64  00                 	db	0
   787  00EE65  00                 	db	0
   788  00EE66  01                 	db	1
   789  00EE67                     __end_of_Conf2_ChannelD_ON:
   790                           	opt stack 0
   791  00EE67                     _Conf2_ChannelH_1_OFF:
   792                           	opt stack 0
   793  00EE67  00                 	db	0
   794  00EE68  01                 	db	1
   795  00EE69  01                 	db	1
   796  00EE6A  00                 	db	0
   797  00EE6B  01                 	db	1
   798  00EE6C  00                 	db	0
   799  00EE6D  00                 	db	0
   800  00EE6E  00                 	db	0
   801  00EE6F  00                 	db	0
   802  00EE70  01                 	db	1
   803  00EE71  00                 	db	0
   804  00EE72  00                 	db	0
   805  00EE73  00                 	db	0
   806  00EE74  00                 	db	0
   807  00EE75  00                 	db	0
   808  00EE76  00                 	db	0
   809  00EE77                     __end_of_Conf2_ChannelH_1_OFF:
   810                           	opt stack 0
   811  00EE77                     _Conf2_ChannelH_1_ON:
   812                           	opt stack 0
   813  00EE77  00                 	db	0
   814  00EE78  01                 	db	1
   815  00EE79  01                 	db	1
   816  00EE7A  00                 	db	0
   817  00EE7B  01                 	db	1
   818  00EE7C  00                 	db	0
   819  00EE7D  00                 	db	0
   820  00EE7E  00                 	db	0
   821  00EE7F  01                 	db	1
   822  00EE80  00                 	db	0
   823  00EE81  00                 	db	0
   824  00EE82  00                 	db	0
   825  00EE83  00                 	db	0
   826  00EE84  00                 	db	0
   827  00EE85  00                 	db	0
   828  00EE86  00                 	db	0
   829  00EE87                     __end_of_Conf2_ChannelH_1_ON:
   830                           	opt stack 0
   831  00EE87                     _Conf2_ChannelH_2_OFF:
   832                           	opt stack 0
   833  00EE87  00                 	db	0
   834  00EE88  01                 	db	1
   835  00EE89  01                 	db	1
   836  00EE8A  00                 	db	0
   837  00EE8B  01                 	db	1
   838  00EE8C  00                 	db	0
   839  00EE8D  00                 	db	0
   840  00EE8E  00                 	db	0
   841  00EE8F  00                 	db	0
   842  00EE90  00                 	db	0
   843  00EE91  00                 	db	0
   844  00EE92  01                 	db	1
   845  00EE93  00                 	db	0
   846  00EE94  00                 	db	0
   847  00EE95  00                 	db	0
   848  00EE96  00                 	db	0
   849  00EE97                     __end_of_Conf2_ChannelH_2_OFF:
   850                           	opt stack 0
   851  00EE97                     _Conf2_ChannelH_2_ON:
   852                           	opt stack 0
   853  00EE97  00                 	db	0
   854  00EE98  01                 	db	1
   855  00EE99  01                 	db	1
   856  00EE9A  00                 	db	0
   857  00EE9B  01                 	db	1
   858  00EE9C  00                 	db	0
   859  00EE9D  00                 	db	0
   860  00EE9E  00                 	db	0
   861  00EE9F  00                 	db	0
   862  00EEA0  00                 	db	0
   863  00EEA1  01                 	db	1
   864  00EEA2  00                 	db	0
   865  00EEA3  00                 	db	0
   866  00EEA4  00                 	db	0
   867  00EEA5  00                 	db	0
   868  00EEA6  00                 	db	0
   869  00EEA7                     __end_of_Conf2_ChannelH_2_ON:
   870                           	opt stack 0
   871  00EEA7                     _Conf2_ChannelH_3_OFF:
   872                           	opt stack 0
   873  00EEA7  00                 	db	0
   874  00EEA8  01                 	db	1
   875  00EEA9  01                 	db	1
   876  00EEAA  00                 	db	0
   877  00EEAB  01                 	db	1
   878  00EEAC  00                 	db	0
   879  00EEAD  01                 	db	1
   880  00EEAE  00                 	db	0
   881  00EEAF  00                 	db	0
   882  00EEB0  00                 	db	0
   883  00EEB1  00                 	db	0
   884  00EEB2  00                 	db	0
   885  00EEB3  00                 	db	0
   886  00EEB4  00                 	db	0
   887  00EEB5  00                 	db	0
   888  00EEB6  00                 	db	0
   889  00EEB7                     __end_of_Conf2_ChannelH_3_OFF:
   890                           	opt stack 0
   891  00EEB7                     _Conf2_ChannelH_3_ON:
   892                           	opt stack 0
   893  00EEB7  00                 	db	0
   894  00EEB8  01                 	db	1
   895  00EEB9  01                 	db	1
   896  00EEBA  00                 	db	0
   897  00EEBB  01                 	db	1
   898  00EEBC  00                 	db	0
   899  00EEBD  00                 	db	0
   900  00EEBE  01                 	db	1
   901  00EEBF  00                 	db	0
   902  00EEC0  00                 	db	0
   903  00EEC1  00                 	db	0
   904  00EEC2  00                 	db	0
   905  00EEC3  00                 	db	0
   906  00EEC4  00                 	db	0
   907  00EEC5  00                 	db	0
   908  00EEC6  00                 	db	0
   909  00EEC7                     __end_of_Conf2_ChannelH_3_ON:
   910                           	opt stack 0
   911  00EEC7                     _Conf1_ChannelD_STR:
   912                           	opt stack 0
   913  00EEC7  43                 	db	67
   914  00EEC8  6F                 	db	111
   915  00EEC9  6E                 	db	110
   916  00EECA  66                 	db	102
   917  00EECB  31                 	db	49
   918  00EECC  5F                 	db	95
   919  00EECD  43                 	db	67
   920  00EECE  68                 	db	104
   921  00EECF  61                 	db	97
   922  00EED0  6E                 	db	110
   923  00EED1  6E                 	db	110
   924  00EED2  65                 	db	101
   925  00EED3  6C                 	db	108
   926  00EED4  44                 	db	68
   927  00EED5  00                 	db	0
   928  00EED6                     __end_of_Conf1_ChannelD_STR:
   929                           	opt stack 0
   930  00EED6                     _Conf1_ChannelE_STR:
   931                           	opt stack 0
   932  00EED6  43                 	db	67
   933  00EED7  6F                 	db	111
   934  00EED8  6E                 	db	110
   935  00EED9  66                 	db	102
   936  00EEDA  31                 	db	49
   937  00EEDB  5F                 	db	95
   938  00EEDC  43                 	db	67
   939  00EEDD  68                 	db	104
   940  00EEDE  61                 	db	97
   941  00EEDF  6E                 	db	110
   942  00EEE0  6E                 	db	110
   943  00EEE1  65                 	db	101
   944  00EEE2  6C                 	db	108
   945  00EEE3  45                 	db	69
   946  00EEE4  00                 	db	0
   947  00EEE5                     __end_of_Conf1_ChannelE_STR:
   948                           	opt stack 0
   949  00EEE5                     _Conf1_ChannelF_STR:
   950                           	opt stack 0
   951  00EEE5  43                 	db	67
   952  00EEE6  6F                 	db	111
   953  00EEE7  6E                 	db	110
   954  00EEE8  66                 	db	102
   955  00EEE9  31                 	db	49
   956  00EEEA  5F                 	db	95
   957  00EEEB  43                 	db	67
   958  00EEEC  68                 	db	104
   959  00EEED  61                 	db	97
   960  00EEEE  6E                 	db	110
   961  00EEEF  6E                 	db	110
   962  00EEF0  65                 	db	101
   963  00EEF1  6C                 	db	108
   964  00EEF2  46                 	db	70
   965  00EEF3  00                 	db	0
   966  00EEF4                     __end_of_Conf1_ChannelF_STR:
   967                           	opt stack 0
   968  00EEF4                     _Conf2_ChannelB_STR:
   969                           	opt stack 0
   970  00EEF4  43                 	db	67
   971  00EEF5  6F                 	db	111
   972  00EEF6  6E                 	db	110
   973  00EEF7  66                 	db	102
   974  00EEF8  32                 	db	50
   975  00EEF9  5F                 	db	95
   976  00EEFA  43                 	db	67
   977  00EEFB  68                 	db	104
   978  00EEFC  61                 	db	97
   979  00EEFD  6E                 	db	110
   980  00EEFE  6E                 	db	110
   981  00EEFF  65                 	db	101
   982  00EF00  6C                 	db	108
   983  00EF01  42                 	db	66
   984  00EF02  00                 	db	0
   985  00EF03                     __end_of_Conf2_ChannelB_STR:
   986                           	opt stack 0
   987  00EF03                     _Conf2_ChannelD_STR:
   988                           	opt stack 0
   989  00EF03  43                 	db	67
   990  00EF04  6F                 	db	111
   991  00EF05  6E                 	db	110
   992  00EF06  66                 	db	102
   993  00EF07  32                 	db	50
   994  00EF08  5F                 	db	95
   995  00EF09  43                 	db	67
   996  00EF0A  68                 	db	104
   997  00EF0B  61                 	db	97
   998  00EF0C  6E                 	db	110
   999  00EF0D  6E                 	db	110
  1000  00EF0E  65                 	db	101
  1001  00EF0F  6C                 	db	108
  1002  00EF10  44                 	db	68
  1003  00EF11  00                 	db	0
  1004  00EF12                     __end_of_Conf2_ChannelD_STR:
  1005                           	opt stack 0
  1006  00EF12                     _SYNTAX_ERR:
  1007                           	opt stack 0
  1008  00EF12  45                 	db	69
  1009  00EF13  72                 	db	114
  1010  00EF14  72                 	db	114
  1011  00EF15  6F                 	db	111
  1012  00EF16  72                 	db	114
  1013  00EF17  3A                 	db	58
  1014  00EF18  20                 	db	32
  1015  00EF19  53                 	db	83
  1016  00EF1A  79                 	db	121
  1017  00EF1B  6E                 	db	110
  1018  00EF1C  74                 	db	116
  1019  00EF1D  61                 	db	97
  1020  00EF1E  78                 	db	120
  1021  00EF1F  00                 	db	0
  1022  00EF20                     __end_of_SYNTAX_ERR:
  1023                           	opt stack 0
  1024  00EF20                     _Conf1_ChannelD:
  1025                           	opt stack 0
  1026  00EF20  03                 	db	3
  1027  00EF21  03                 	db	3
  1028  00EF22  03                 	db	3
  1029  00EF23  03                 	db	3
  1030  00EF24  03                 	db	3
  1031  00EF25  03                 	db	3
  1032  00EF26  00                 	db	0
  1033  00EF27  00                 	db	0
  1034  00EF28  01                 	db	1
  1035  00EF29  00                 	db	0
  1036  00EF2A  00                 	db	0
  1037  00EF2B  00                 	db	0
  1038  00EF2C                     __end_of_Conf1_ChannelD:
  1039                           	opt stack 0
  1040  00EF2C                     _Conf1_ChannelE:
  1041                           	opt stack 0
  1042  00EF2C  00                 	db	0
  1043  00EF2D  03                 	db	3
  1044  00EF2E  03                 	db	3
  1045  00EF2F  03                 	db	3
  1046  00EF30  03                 	db	3
  1047  00EF31  03                 	db	3
  1048  00EF32  00                 	db	0
  1049  00EF33  00                 	db	0
  1050  00EF34  01                 	db	1
  1051  00EF35  00                 	db	0
  1052  00EF36  00                 	db	0
  1053  00EF37  00                 	db	0
  1054  00EF38                     __end_of_Conf1_ChannelE:
  1055                           	opt stack 0
  1056  00EF38                     _Conf1_ChannelF:
  1057                           	opt stack 0
  1058  00EF38  03                 	db	3
  1059  00EF39  00                 	db	0
  1060  00EF3A  03                 	db	3
  1061  00EF3B  03                 	db	3
  1062  00EF3C  03                 	db	3
  1063  00EF3D  03                 	db	3
  1064  00EF3E  00                 	db	0
  1065  00EF3F  00                 	db	0
  1066  00EF40  01                 	db	1
  1067  00EF41  00                 	db	0
  1068  00EF42  00                 	db	0
  1069  00EF43  00                 	db	0
  1070  00EF44                     __end_of_Conf1_ChannelF:
  1071                           	opt stack 0
  1072  00EF44                     _FirmVersion:
  1073                           	opt stack 0
  1074  00EF44  31                 	db	49
  1075  00EF45  2E                 	db	46
  1076  00EF46  30                 	db	48
  1077  00EF47  5F                 	db	95
  1078  00EF48  44                 	db	68
  1079  00EF49  57                 	db	87
  1080  00EF4A  30                 	db	48
  1081  00EF4B  64                 	db	100
  1082  00EF4C  00                 	db	0
  1083  00EF4D                     __end_of_FirmVersion:
  1084                           	opt stack 0
  1085  00EF4D                     _PCBVersion:
  1086                           	opt stack 0
  1087  00EF4D  52                 	db	82
  1088  00EF4E  65                 	db	101
  1089  00EF4F  76                 	db	118
  1090  00EF50  41                 	db	65
  1091  00EF51  00                 	db	0
  1092  00EF52                     __end_of_PCBVersion:
  1093                           	opt stack 0
  1094  00EF52                     _Conf1_Channels:
  1095                           	opt stack 0
  1096  00EF52  44                 	db	68
  1097  00EF53  45                 	db	69
  1098  00EF54  46                 	db	70
  1099  00EF55  00                 	db	0
  1100  00EF56                     __end_of_Conf1_Channels:
  1101                           	opt stack 0
  1102  00EF56                     _Conf2_Channels:
  1103                           	opt stack 0
  1104  00EF56  42                 	db	66
  1105  00EF57  44                 	db	68
  1106  00EF58  48                 	db	72
  1107  00EF59  00                 	db	0
  1108  00EF5A                     __end_of_Conf2_Channels:
  1109                           	opt stack 0
  1110  00EF5A                     _Frequency:
  1111                           	opt stack 0
  1112  00EF5A  33                 	db	51
  1113  00EF5B  31                 	db	49
  1114  00EF5C  35                 	db	53
  1115  00EF5D  00                 	db	0
  1116  00EF5E                     __end_of_Frequency:
  1117                           	opt stack 0
  1118  00EF5E                     _CRLN:
  1119                           	opt stack 0
  1120  00EF5E  0D                 	db	13
  1121  00EF5F  0A                 	db	10
  1122  00EF60  00                 	db	0
  1123  00EF61                     __end_of_CRLN:
  1124                           	opt stack 0
  1125  0000                     _ADCON0	set	4034
  1126  0000                     _ADCON0bits	set	4034
  1127  0000                     _ADCON1	set	4033
  1128  0000                     _ADCON1bits	set	4033
  1129  0000                     _ADCON2	set	4032
  1130  0000                     _ADCON2bits	set	4032
  1131  0000                     _ADRESH	set	4036
  1132  0000                     _ADRESL	set	4035
  1133  0000                     _ANSEL	set	3966
  1134  0000                     _ANSELH	set	3967
  1135  0000                     _BAUDCONbits	set	4024
  1136  0000                     _EEADR	set	4009
  1137  0000                     _EEADRH	set	4010
  1138  0000                     _EECON1bits	set	4006
  1139  0000                     _EECON2	set	4007
  1140  0000                     _EEDATA	set	4008
  1141  0000                     _INTCON2bits	set	4081
  1142  0000                     _INTCONbits	set	4082
  1143  0000                     _IOCBbits	set	3965
  1144  0000                     _IPR1bits	set	3999
  1145  0000                     _IPR2bits	set	4002
  1146  0000                     _LATA	set	3977
  1147  0000                     _LATB	set	3978
  1148  0000                     _LATC	set	3979
  1149  0000                     _PIE1bits	set	3997
  1150  0000                     _PIE2bits	set	4000
  1151  0000                     _PIR1bits	set	3998
  1152  0000                     _PIR2bits	set	4001
  1153  0000                     _PORTA	set	3968
  1154  0000                     _PORTB	set	3969
  1155  0000                     _PORTC	set	3970
  1156  0000                     _PR2	set	4043
  1157  0000                     _RCONbits	set	4048
  1158  0000                     _RCREG	set	4014
  1159  0000                     _RCSTA	set	4011
  1160  0000                     _RCSTAbits	set	4011
  1161  0000                     _SPBRG	set	4015
  1162  0000                     _SPBRGH	set	4016
  1163  0000                     _T0CONbits	set	4053
  1164  0000                     _T1CONbits	set	4045
  1165  0000                     _T2CONbits	set	4042
  1166  0000                     _T3CONbits	set	4017
  1167  0000                     _TABLAT	set	4085
  1168  0000                     _TBLPTRH	set	4087
  1169  0000                     _TBLPTRL	set	4086
  1170  0000                     _TBLPTRU	set	4088
  1171  0000                     _TMR0H	set	4055
  1172  0000                     _TMR0L	set	4054
  1173  0000                     _TMR1H	set	4047
  1174  0000                     _TMR1L	set	4046
  1175  0000                     _TMR2	set	4044
  1176  0000                     _TMR3H	set	4019
  1177  0000                     _TMR3L	set	4018
  1178  0000                     _TRISAbits	set	3986
  1179  0000                     _TRISBbits	set	3987
  1180  0000                     _TRISCbits	set	3988
  1181  0000                     _TXREG	set	4013
  1182  0000                     _TXSTA	set	4012
  1183  0000                     _TXSTAbits	set	4012
  1184  0000                     _WPUB	set	3964
  1185  00EF61                     STR_109:
  1186  00EF61  45                 	db	69	;'E'
  1187  00EF62  6E                 	db	110	;'n'
  1188  00EF63  74                 	db	116	;'t'
  1189  00EF64  65                 	db	101	;'e'
  1190  00EF65  72                 	db	114	;'r'
  1191  00EF66  65                 	db	101	;'e'
  1192  00EF67  64                 	db	100	;'d'
  1193  00EF68  20                 	db	32
  1194  00EF69  4E                 	db	78	;'N'
  1195  00EF6A  61                 	db	97	;'a'
  1196  00EF6B  6D                 	db	109	;'m'
  1197  00EF6C  65                 	db	101	;'e'
  1198  00EF6D  20                 	db	32
  1199  00EF6E  69                 	db	105	;'i'
  1200  00EF6F  73                 	db	115	;'s'
  1201  00EF70  20                 	db	32
  1202  00EF71  74                 	db	116	;'t'
  1203  00EF72  6F                 	db	111	;'o'
  1204  00EF73  6F                 	db	111	;'o'
  1205  00EF74  20                 	db	32
  1206  00EF75  6C                 	db	108	;'l'
  1207  00EF76  6F                 	db	111	;'o'
  1208  00EF77  6E                 	db	110	;'n'
  1209  00EF78  67                 	db	103	;'g'
  1210  00EF79  2E                 	db	46
  1211  00EF7A  20                 	db	32
  1212  00EF7B  4E                 	db	78	;'N'
  1213  00EF7C  61                 	db	97	;'a'
  1214  00EF7D  6D                 	db	109	;'m'
  1215  00EF7E  65                 	db	101	;'e'
  1216  00EF7F  20                 	db	32
  1217  00EF80  6D                 	db	109	;'m'
  1218  00EF81  75                 	db	117	;'u'
  1219  00EF82  73                 	db	115	;'s'
  1220  00EF83  74                 	db	116	;'t'
  1221  00EF84  20                 	db	32
  1222  00EF85  62                 	db	98	;'b'
  1223  00EF86  65                 	db	101	;'e'
  1224  00EF87  20                 	db	32
  1225  00EF88  6C                 	db	108	;'l'
  1226  00EF89  65                 	db	101	;'e'
  1227  00EF8A  73                 	db	115	;'s'
  1228  00EF8B  73                 	db	115	;'s'
  1229  00EF8C  20                 	db	32
  1230  00EF8D  74                 	db	116	;'t'
  1231  00EF8E  68                 	db	104	;'h'
  1232  00EF8F  61                 	db	97	;'a'
  1233  00EF90  6E                 	db	110	;'n'
  1234  00EF91  20                 	db	32
  1235  00EF92  32                 	db	50	;'2'
  1236  00EF93  31                 	db	49	;'1'
  1237  00EF94  20                 	db	32
  1238  00EF95  63                 	db	99	;'c'
  1239  00EF96  68                 	db	104	;'h'
  1240  00EF97  61                 	db	97	;'a'
  1241  00EF98  72                 	db	114	;'r'
  1242  00EF99  61                 	db	97	;'a'
  1243  00EF9A  63                 	db	99	;'c'
  1244  00EF9B  74                 	db	116	;'t'
  1245  00EF9C  65                 	db	101	;'e'
  1246  00EF9D  72                 	db	114	;'r'
  1247  00EF9E  73                 	db	115	;'s'
  1248  00EF9F  21                 	db	33
  1249  00EFA0  00                 	db	0
  1250  00EFA1                     STR_80:
  1251  00EFA1  4E                 	db	78	;'N'
  1252  00EFA2  45                 	db	69	;'E'
  1253  00EFA3  43                 	db	67	;'C'
  1254  00EFA4  20                 	db	32
  1255  00EFA5  63                 	db	99	;'c'
  1256  00EFA6  6F                 	db	111	;'o'
  1257  00EFA7  64                 	db	100	;'d'
  1258  00EFA8  65                 	db	101	;'e'
  1259  00EFA9  20                 	db	32
  1260  00EFAA  30                 	db	48	;'0'
  1261  00EFAB  78                 	db	120	;'x'
  1262  00EFAC  25                 	db	37
  1263  00EFAD  6C                 	db	108	;'l'
  1264  00EFAE  58                 	db	88	;'X'
  1265  00EFAF  20                 	db	32
  1266  00EFB0  6E                 	db	110	;'n'
  1267  00EFB1  6F                 	db	111	;'o'
  1268  00EFB2  77                 	db	119	;'w'
  1269  00EFB3  20                 	db	32
  1270  00EFB4  74                 	db	116	;'t'
  1271  00EFB5  72                 	db	114	;'r'
  1272  00EFB6  61                 	db	97	;'a'
  1273  00EFB7  6E                 	db	110	;'n'
  1274  00EFB8  73                 	db	115	;'s'
  1275  00EFB9  6D                 	db	109	;'m'
  1276  00EFBA  69                 	db	105	;'i'
  1277  00EFBB  74                 	db	116	;'t'
  1278  00EFBC  73                 	db	115	;'s'
  1279  00EFBD  20                 	db	32
  1280  00EFBE  52                 	db	82	;'R'
  1281  00EFBF  46                 	db	70	;'F'
  1282  00EFC0  20                 	db	32
  1283  00EFC1  63                 	db	99	;'c'
  1284  00EFC2  6F                 	db	111	;'o'
  1285  00EFC3  6E                 	db	110	;'n'
  1286  00EFC4  66                 	db	102	;'f'
  1287  00EFC5  69                 	db	105	;'i'
  1288  00EFC6  67                 	db	103	;'g'
  1289  00EFC7  20                 	db	32
  1290  00EFC8  25                 	db	37
  1291  00EFC9  64                 	db	100	;'d'
  1292  00EFCA  20                 	db	32
  1293  00EFCB  63                 	db	99	;'c'
  1294  00EFCC  68                 	db	104	;'h'
  1295  00EFCD  61                 	db	97	;'a'
  1296  00EFCE  6E                 	db	110	;'n'
  1297  00EFCF  6E                 	db	110	;'n'
  1298  00EFD0  65                 	db	101	;'e'
  1299  00EFD1  6C                 	db	108	;'l'
  1300  00EFD2  20                 	db	32
  1301  00EFD3  25                 	db	37
  1302  00EFD4  63                 	db	99	;'c'
  1303  00EFD5  20                 	db	32
  1304  00EFD6  64                 	db	100	;'d'
  1305  00EFD7  65                 	db	101	;'e'
  1306  00EFD8  76                 	db	118	;'v'
  1307  00EFD9  69                 	db	105	;'i'
  1308  00EFDA  63                 	db	99	;'c'
  1309  00EFDB  65                 	db	101	;'e'
  1310  00EFDC  20                 	db	32
  1311  00EFDD  25                 	db	37
  1312  00EFDE  64                 	db	100	;'d'
  1313  00EFDF  00                 	db	0
  1314  00EFE0                     STR_143:
  1315  00EFE0  53                 	db	83	;'S'
  1316  00EFE1  65                 	db	101	;'e'
  1317  00EFE2  74                 	db	116	;'t'
  1318  00EFE3  73                 	db	115	;'s'
  1319  00EFE4  20                 	db	32
  1320  00EFE5  52                 	db	82	;'R'
  1321  00EFE6  65                 	db	101	;'e'
  1322  00EFE7  6D                 	db	109	;'m'
  1323  00EFE8  6F                 	db	111	;'o'
  1324  00EFE9  74                 	db	116	;'t'
  1325  00EFEA  65                 	db	101	;'e'
  1326  00EFEB  20                 	db	32
  1327  00EFEC  62                 	db	98	;'b'
  1328  00EFED  75                 	db	117	;'u'
  1329  00EFEE  74                 	db	116	;'t'
  1330  00EFEF  74                 	db	116	;'t'
  1331  00EFF0  6F                 	db	111	;'o'
  1332  00EFF1  6E                 	db	110	;'n'
  1333  00EFF2  20                 	db	32
  1334  00EFF3  74                 	db	116	;'t'
  1335  00EFF4  6F                 	db	111	;'o'
  1336  00EFF5  20                 	db	32
  1337  00EFF6  73                 	db	115	;'s'
  1338  00EFF7  65                 	db	101	;'e'
  1339  00EFF8  6E                 	db	110	;'n'
  1340  00EFF9  64                 	db	100	;'d'
  1341  00EFFA  20                 	db	32
  1342  00EFFB  61                 	db	97	;'a'
  1343  00EFFC  6C                 	db	108	;'l'
  1344  00EFFD  6C                 	db	108	;'l'
  1345  00EFFE  20                 	db	32
  1346  00EFFF  6F                 	db	111	;'o'
  1347  00F000  66                 	db	102	;'f'
  1348  00F001  20                 	db	32
  1349  00F002  74                 	db	116	;'t'
  1350  00F003  68                 	db	104	;'h'
  1351  00F004  65                 	db	101	;'e'
  1352  00F005  20                 	db	32
  1353  00F006  52                 	db	82	;'R'
  1354  00F007  46                 	db	70	;'F'
  1355  00F008  20                 	db	32
  1356  00F009  63                 	db	99	;'c'
  1357  00F00A  6F                 	db	111	;'o'
  1358  00F00B  64                 	db	100	;'d'
  1359  00F00C  65                 	db	101	;'e'
  1360  00F00D  73                 	db	115	;'s'
  1361  00F00E  20                 	db	32
  1362  00F00F  61                 	db	97	;'a'
  1363  00F010  73                 	db	115	;'s'
  1364  00F011  20                 	db	32
  1365  00F012  73                 	db	115	;'s'
  1366  00F013  74                 	db	116	;'t'
  1367  00F014  61                 	db	97	;'a'
  1368  00F015  74                 	db	116	;'t'
  1369  00F016  65                 	db	101	;'e'
  1370  00F017  64                 	db	100	;'d'
  1371  00F018  20                 	db	32
  1372  00F019  62                 	db	98	;'b'
  1373  00F01A  65                 	db	101	;'e'
  1374  00F01B  6C                 	db	108	;'l'
  1375  00F01C  6F                 	db	111	;'o'
  1376  00F01D  77                 	db	119	;'w'
  1377  00F01E  00                 	db	0
  1378  00F01F                     STR_91:
  1379  00F01F  45                 	db	69	;'E'
  1380  00F020  6E                 	db	110	;'n'
  1381  00F021  74                 	db	116	;'t'
  1382  00F022  65                 	db	101	;'e'
  1383  00F023  72                 	db	114	;'r'
  1384  00F024  20                 	db	32
  1385  00F025  73                 	db	115	;'s'
  1386  00F026  70                 	db	112	;'p'
  1387  00F027  65                 	db	101	;'e'
  1388  00F028  63                 	db	99	;'c'
  1389  00F029  69                 	db	105	;'i'
  1390  00F02A  61                 	db	97	;'a'
  1391  00F02B  6C                 	db	108	;'l'
  1392  00F02C  20                 	db	32
  1393  00F02D  27                 	db	39
  1394  00F02E  43                 	db	67	;'C'
  1395  00F02F  6F                 	db	111	;'o'
  1396  00F030  64                 	db	100	;'d'
  1397  00F031  65                 	db	101	;'e'
  1398  00F032  27                 	db	39
  1399  00F033  20                 	db	32
  1400  00F034  74                 	db	116	;'t'
  1401  00F035  6F                 	db	111	;'o'
  1402  00F036  20                 	db	32
  1403  00F037  63                 	db	99	;'c'
  1404  00F038  68                 	db	104	;'h'
  1405  00F039  61                 	db	97	;'a'
  1406  00F03A  6E                 	db	110	;'n'
  1407  00F03B  67                 	db	103	;'g'
  1408  00F03C  65                 	db	101	;'e'
  1409  00F03D  20                 	db	32
  1410  00F03E  73                 	db	115	;'s'
  1411  00F03F  65                 	db	101	;'e'
  1412  00F040  72                 	db	114	;'r'
  1413  00F041  69                 	db	105	;'i'
  1414  00F042  61                 	db	97	;'a'
  1415  00F043  6C                 	db	108	;'l'
  1416  00F044  20                 	db	32
  1417  00F045  6E                 	db	110	;'n'
  1418  00F046  75                 	db	117	;'u'
  1419  00F047  6D                 	db	109	;'m'
  1420  00F048  62                 	db	98	;'b'
  1421  00F049  65                 	db	101	;'e'
  1422  00F04A  72                 	db	114	;'r'
  1423  00F04B  20                 	db	32
  1424  00F04C  6F                 	db	111	;'o'
  1425  00F04D  72                 	db	114	;'r'
  1426  00F04E  20                 	db	32
  1427  00F04F  4E                 	db	78	;'N'
  1428  00F050  20                 	db	32
  1429  00F051  74                 	db	116	;'t'
  1430  00F052  6F                 	db	111	;'o'
  1431  00F053  20                 	db	32
  1432  00F054  63                 	db	99	;'c'
  1433  00F055  61                 	db	97	;'a'
  1434  00F056  6E                 	db	110	;'n'
  1435  00F057  63                 	db	99	;'c'
  1436  00F058  65                 	db	101	;'e'
  1437  00F059  6C                 	db	108	;'l'
  1438  00F05A  00                 	db	0
  1439  00F05B                     STR_104:
  1440  00F05B  44                 	db	68	;'D'
  1441  00F05C  65                 	db	101	;'e'
  1442  00F05D  76                 	db	118	;'v'
  1443  00F05E  69                 	db	105	;'i'
  1444  00F05F  63                 	db	99	;'c'
  1445  00F060  65                 	db	101	;'e'
  1446  00F061  20                 	db	32
  1447  00F062  72                 	db	114	;'r'
  1448  00F063  65                 	db	101	;'e'
  1449  00F064  73                 	db	115	;'s'
  1450  00F065  75                 	db	117	;'u'
  1451  00F066  6D                 	db	109	;'m'
  1452  00F067  65                 	db	101	;'e'
  1453  00F068  73                 	db	115	;'s'
  1454  00F069  20                 	db	32
  1455  00F06A  77                 	db	119	;'w'
  1456  00F06B  69                 	db	105	;'i'
  1457  00F06C  74                 	db	116	;'t'
  1458  00F06D  68                 	db	104	;'h'
  1459  00F06E  6F                 	db	111	;'o'
  1460  00F06F  75                 	db	117	;'u'
  1461  00F070  74                 	db	116	;'t'
  1462  00F071  20                 	db	32
  1463  00F072  63                 	db	99	;'c'
  1464  00F073  68                 	db	104	;'h'
  1465  00F074  61                 	db	97	;'a'
  1466  00F075  6E                 	db	110	;'n'
  1467  00F076  67                 	db	103	;'g'
  1468  00F077  69                 	db	105	;'i'
  1469  00F078  6E                 	db	110	;'n'
  1470  00F079  67                 	db	103	;'g'
  1471  00F07A  20                 	db	32
  1472  00F07B  42                 	db	66	;'B'
  1473  00F07C  6C                 	db	108	;'l'
  1474  00F07D  75                 	db	117	;'u'
  1475  00F07E  65                 	db	101	;'e'
  1476  00F07F  74                 	db	116	;'t'
  1477  00F080  6F                 	db	111	;'o'
  1478  00F081  6F                 	db	111	;'o'
  1479  00F082  74                 	db	116	;'t'
  1480  00F083  68                 	db	104	;'h'
  1481  00F084  20                 	db	32
  1482  00F085  42                 	db	66	;'B'
  1483  00F086  72                 	db	114	;'r'
  1484  00F087  6F                 	db	111	;'o'
  1485  00F088  61                 	db	97	;'a'
  1486  00F089  64                 	db	100	;'d'
  1487  00F08A  63                 	db	99	;'c'
  1488  00F08B  61                 	db	97	;'a'
  1489  00F08C  73                 	db	115	;'s'
  1490  00F08D  74                 	db	116	;'t'
  1491  00F08E  20                 	db	32
  1492  00F08F  4E                 	db	78	;'N'
  1493  00F090  61                 	db	97	;'a'
  1494  00F091  6D                 	db	109	;'m'
  1495  00F092  65                 	db	101	;'e'
  1496  00F093  00                 	db	0
  1497  00F094                     STR_81:
  1498  00F094  4E                 	db	78	;'N'
  1499  00F095  45                 	db	69	;'E'
  1500  00F096  43                 	db	67	;'C'
  1501  00F097  20                 	db	32
  1502  00F098  63                 	db	99	;'c'
  1503  00F099  6F                 	db	111	;'o'
  1504  00F09A  64                 	db	100	;'d'
  1505  00F09B  65                 	db	101	;'e'
  1506  00F09C  20                 	db	32
  1507  00F09D  30                 	db	48	;'0'
  1508  00F09E  78                 	db	120	;'x'
  1509  00F09F  25                 	db	37
  1510  00F0A0  6C                 	db	108	;'l'
  1511  00F0A1  58                 	db	88	;'X'
  1512  00F0A2  20                 	db	32
  1513  00F0A3  6E                 	db	110	;'n'
  1514  00F0A4  6F                 	db	111	;'o'
  1515  00F0A5  77                 	db	119	;'w'
  1516  00F0A6  20                 	db	32
  1517  00F0A7  74                 	db	116	;'t'
  1518  00F0A8  72                 	db	114	;'r'
  1519  00F0A9  61                 	db	97	;'a'
  1520  00F0AA  6E                 	db	110	;'n'
  1521  00F0AB  73                 	db	115	;'s'
  1522  00F0AC  6D                 	db	109	;'m'
  1523  00F0AD  69                 	db	105	;'i'
  1524  00F0AE  74                 	db	116	;'t'
  1525  00F0AF  73                 	db	115	;'s'
  1526  00F0B0  20                 	db	32
  1527  00F0B1  52                 	db	82	;'R'
  1528  00F0B2  46                 	db	70	;'F'
  1529  00F0B3  20                 	db	32
  1530  00F0B4  63                 	db	99	;'c'
  1531  00F0B5  6F                 	db	111	;'o'
  1532  00F0B6  6E                 	db	110	;'n'
  1533  00F0B7  66                 	db	102	;'f'
  1534  00F0B8  69                 	db	105	;'i'
  1535  00F0B9  67                 	db	103	;'g'
  1536  00F0BA  20                 	db	32
  1537  00F0BB  25                 	db	37
  1538  00F0BC  64                 	db	100	;'d'
  1539  00F0BD  20                 	db	32
  1540  00F0BE  63                 	db	99	;'c'
  1541  00F0BF  68                 	db	104	;'h'
  1542  00F0C0  61                 	db	97	;'a'
  1543  00F0C1  6E                 	db	110	;'n'
  1544  00F0C2  6E                 	db	110	;'n'
  1545  00F0C3  65                 	db	101	;'e'
  1546  00F0C4  6C                 	db	108	;'l'
  1547  00F0C5  20                 	db	32
  1548  00F0C6  25                 	db	37
  1549  00F0C7  63                 	db	99	;'c'
  1550  00F0C8  20                 	db	32
  1551  00F0C9  00                 	db	0
  1552  00F0CA                     STR_82:
  1553  00F0CA  52                 	db	82	;'R'
  1554  00F0CB  46                 	db	70	;'F'
  1555  00F0CC  20                 	db	32
  1556  00F0CD  63                 	db	99	;'c'
  1557  00F0CE  6F                 	db	111	;'o'
  1558  00F0CF  6E                 	db	110	;'n'
  1559  00F0D0  66                 	db	102	;'f'
  1560  00F0D1  69                 	db	105	;'i'
  1561  00F0D2  67                 	db	103	;'g'
  1562  00F0D3  20                 	db	32
  1563  00F0D4  25                 	db	37
  1564  00F0D5  64                 	db	100	;'d'
  1565  00F0D6  20                 	db	32
  1566  00F0D7  63                 	db	99	;'c'
  1567  00F0D8  68                 	db	104	;'h'
  1568  00F0D9  61                 	db	97	;'a'
  1569  00F0DA  6E                 	db	110	;'n'
  1570  00F0DB  6E                 	db	110	;'n'
  1571  00F0DC  65                 	db	101	;'e'
  1572  00F0DD  6C                 	db	108	;'l'
  1573  00F0DE  20                 	db	32
  1574  00F0DF  25                 	db	37
  1575  00F0E0  63                 	db	99	;'c'
  1576  00F0E1  20                 	db	32
  1577  00F0E2  64                 	db	100	;'d'
  1578  00F0E3  65                 	db	101	;'e'
  1579  00F0E4  76                 	db	118	;'v'
  1580  00F0E5  69                 	db	105	;'i'
  1581  00F0E6  63                 	db	99	;'c'
  1582  00F0E7  65                 	db	101	;'e'
  1583  00F0E8  20                 	db	32
  1584  00F0E9  25                 	db	37
  1585  00F0EA  64                 	db	100	;'d'
  1586  00F0EB  20                 	db	32
  1587  00F0EC  73                 	db	115	;'s'
  1588  00F0ED  75                 	db	117	;'u'
  1589  00F0EE  63                 	db	99	;'c'
  1590  00F0EF  63                 	db	99	;'c'
  1591  00F0F0  65                 	db	101	;'e'
  1592  00F0F1  73                 	db	115	;'s'
  1593  00F0F2  73                 	db	115	;'s'
  1594  00F0F3  66                 	db	102	;'f'
  1595  00F0F4  75                 	db	117	;'u'
  1596  00F0F5  6C                 	db	108	;'l'
  1597  00F0F6  6C                 	db	108	;'l'
  1598  00F0F7  79                 	db	121	;'y'
  1599  00F0F8  20                 	db	32
  1600  00F0F9  65                 	db	101	;'e'
  1601  00F0FA  72                 	db	114	;'r'
  1602  00F0FB  61                 	db	97	;'a'
  1603  00F0FC  73                 	db	115	;'s'
  1604  00F0FD  65                 	db	101	;'e'
  1605  00F0FE  64                 	db	100	;'d'
  1606  00F0FF  00                 	db	0
  1607  00F100                     STR_107:
  1608  00F100  42                 	db	66	;'B'
  1609  00F101  6C                 	db	108	;'l'
  1610  00F102  75                 	db	117	;'u'
  1611  00F103  65                 	db	101	;'e'
  1612  00F104  74                 	db	116	;'t'
  1613  00F105  6F                 	db	111	;'o'
  1614  00F106  6F                 	db	111	;'o'
  1615  00F107  74                 	db	116	;'t'
  1616  00F108  68                 	db	104	;'h'
  1617  00F109  20                 	db	32
  1618  00F10A  4D                 	db	77	;'M'
  1619  00F10B  6F                 	db	111	;'o'
  1620  00F10C  64                 	db	100	;'d'
  1621  00F10D  75                 	db	117	;'u'
  1622  00F10E  6C                 	db	108	;'l'
  1623  00F10F  65                 	db	101	;'e'
  1624  00F110  20                 	db	32
  1625  00F111  77                 	db	119	;'w'
  1626  00F112  69                 	db	105	;'i'
  1627  00F113  6C                 	db	108	;'l'
  1628  00F114  6C                 	db	108	;'l'
  1629  00F115  20                 	db	32
  1630  00F116  52                 	db	82	;'R'
  1631  00F117  65                 	db	101	;'e'
  1632  00F118  73                 	db	115	;'s'
  1633  00F119  65                 	db	101	;'e'
  1634  00F11A  74                 	db	116	;'t'
  1635  00F11B  2E                 	db	46
  1636  00F11C  20                 	db	32
  1637  00F11D  50                 	db	80	;'P'
  1638  00F11E  6C                 	db	108	;'l'
  1639  00F11F  65                 	db	101	;'e'
  1640  00F120  61                 	db	97	;'a'
  1641  00F121  73                 	db	115	;'s'
  1642  00F122  65                 	db	101	;'e'
  1643  00F123  20                 	db	32
  1644  00F124  72                 	db	114	;'r'
  1645  00F125  65                 	db	101	;'e'
  1646  00F126  63                 	db	99	;'c'
  1647  00F127  6F                 	db	111	;'o'
  1648  00F128  6E                 	db	110	;'n'
  1649  00F129  6E                 	db	110	;'n'
  1650  00F12A  65                 	db	101	;'e'
  1651  00F12B  63                 	db	99	;'c'
  1652  00F12C  74                 	db	116	;'t'
  1653  00F12D  20                 	db	32
  1654  00F12E  64                 	db	100	;'d'
  1655  00F12F  65                 	db	101	;'e'
  1656  00F130  76                 	db	118	;'v'
  1657  00F131  69                 	db	105	;'i'
  1658  00F132  63                 	db	99	;'c'
  1659  00F133  65                 	db	101	;'e'
  1660  00F134  00                 	db	0
  1661  00F135                     STR_76:
  1662  00F135  45                 	db	69	;'E'
  1663  00F136  72                 	db	114	;'r'
  1664  00F137  72                 	db	114	;'r'
  1665  00F138  6F                 	db	111	;'o'
  1666  00F139  72                 	db	114	;'r'
  1667  00F13A  3A                 	db	58	;':'
  1668  00F13B  20                 	db	32
  1669  00F13C  4E                 	db	78	;'N'
  1670  00F13D  6F                 	db	111	;'o'
  1671  00F13E  20                 	db	32
  1672  00F13F  52                 	db	82	;'R'
  1673  00F140  46                 	db	70	;'F'
  1674  00F141  20                 	db	32
  1675  00F142  63                 	db	99	;'c'
  1676  00F143  6F                 	db	111	;'o'
  1677  00F144  6E                 	db	110	;'n'
  1678  00F145  66                 	db	102	;'f'
  1679  00F146  69                 	db	105	;'i'
  1680  00F147  67                 	db	103	;'g'
  1681  00F148  20                 	db	32
  1682  00F149  32                 	db	50	;'2'
  1683  00F14A  2C                 	db	44
  1684  00F14B  20                 	db	32
  1685  00F14C  63                 	db	99	;'c'
  1686  00F14D  68                 	db	104	;'h'
  1687  00F14E  61                 	db	97	;'a'
  1688  00F14F  6E                 	db	110	;'n'
  1689  00F150  6E                 	db	110	;'n'
  1690  00F151  65                 	db	101	;'e'
  1691  00F152  6C                 	db	108	;'l'
  1692  00F153  20                 	db	32
  1693  00F154  48                 	db	72	;'H'
  1694  00F155  20                 	db	32
  1695  00F156  64                 	db	100	;'d'
  1696  00F157  65                 	db	101	;'e'
  1697  00F158  76                 	db	118	;'v'
  1698  00F159  69                 	db	105	;'i'
  1699  00F15A  63                 	db	99	;'c'
  1700  00F15B  65                 	db	101	;'e'
  1701  00F15C  20                 	db	32
  1702  00F15D  73                 	db	115	;'s'
  1703  00F15E  70                 	db	112	;'p'
  1704  00F15F  65                 	db	101	;'e'
  1705  00F160  63                 	db	99	;'c'
  1706  00F161  69                 	db	105	;'i'
  1707  00F162  66                 	db	102	;'f'
  1708  00F163  69                 	db	105	;'i'
  1709  00F164  65                 	db	101	;'e'
  1710  00F165  64                 	db	100	;'d'
  1711  00F166  00                 	db	0
  1712  00F167                     STR_77:
  1713  00F167  45                 	db	69	;'E'
  1714  00F168  72                 	db	114	;'r'
  1715  00F169  72                 	db	114	;'r'
  1716  00F16A  6F                 	db	111	;'o'
  1717  00F16B  72                 	db	114	;'r'
  1718  00F16C  3A                 	db	58	;':'
  1719  00F16D  20                 	db	32
  1720  00F16E  52                 	db	82	;'R'
  1721  00F16F  46                 	db	70	;'F'
  1722  00F170  20                 	db	32
  1723  00F171  63                 	db	99	;'c'
  1724  00F172  6F                 	db	111	;'o'
  1725  00F173  6E                 	db	110	;'n'
  1726  00F174  66                 	db	102	;'f'
  1727  00F175  69                 	db	105	;'i'
  1728  00F176  67                 	db	103	;'g'
  1729  00F177  20                 	db	32
  1730  00F178  32                 	db	50	;'2'
  1731  00F179  2C                 	db	44
  1732  00F17A  20                 	db	32
  1733  00F17B  63                 	db	99	;'c'
  1734  00F17C  68                 	db	104	;'h'
  1735  00F17D  61                 	db	97	;'a'
  1736  00F17E  6E                 	db	110	;'n'
  1737  00F17F  6E                 	db	110	;'n'
  1738  00F180  65                 	db	101	;'e'
  1739  00F181  6C                 	db	108	;'l'
  1740  00F182  20                 	db	32
  1741  00F183  48                 	db	72	;'H'
  1742  00F184  20                 	db	32
  1743  00F185  64                 	db	100	;'d'
  1744  00F186  65                 	db	101	;'e'
  1745  00F187  76                 	db	118	;'v'
  1746  00F188  69                 	db	105	;'i'
  1747  00F189  63                 	db	99	;'c'
  1748  00F18A  65                 	db	101	;'e'
  1749  00F18B  20                 	db	32
  1750  00F18C  6F                 	db	111	;'o'
  1751  00F18D  75                 	db	117	;'u'
  1752  00F18E  74                 	db	116	;'t'
  1753  00F18F  20                 	db	32
  1754  00F190  6F                 	db	111	;'o'
  1755  00F191  66                 	db	102	;'f'
  1756  00F192  20                 	db	32
  1757  00F193  72                 	db	114	;'r'
  1758  00F194  61                 	db	97	;'a'
  1759  00F195  6E                 	db	110	;'n'
  1760  00F196  67                 	db	103	;'g'
  1761  00F197  65                 	db	101	;'e'
  1762  00F198  00                 	db	0
  1763  00F199                     STR_1:
  1764  00F199  42                 	db	66	;'B'
  1765  00F19A  6C                 	db	108	;'l'
  1766  00F19B  75                 	db	117	;'u'
  1767  00F19C  65                 	db	101	;'e'
  1768  00F19D  74                 	db	116	;'t'
  1769  00F19E  6F                 	db	111	;'o'
  1770  00F19F  6F                 	db	111	;'o'
  1771  00F1A0  74                 	db	116	;'t'
  1772  00F1A1  68                 	db	104	;'h'
  1773  00F1A2  20                 	db	32
  1774  00F1A3  4E                 	db	78	;'N'
  1775  00F1A4  61                 	db	97	;'a'
  1776  00F1A5  6D                 	db	109	;'m'
  1777  00F1A6  65                 	db	101	;'e'
  1778  00F1A7  20                 	db	32
  1779  00F1A8  77                 	db	119	;'w'
  1780  00F1A9  61                 	db	97	;'a'
  1781  00F1AA  73                 	db	115	;'s'
  1782  00F1AB  20                 	db	32
  1783  00F1AC  73                 	db	115	;'s'
  1784  00F1AD  75                 	db	117	;'u'
  1785  00F1AE  63                 	db	99	;'c'
  1786  00F1AF  63                 	db	99	;'c'
  1787  00F1B0  65                 	db	101	;'e'
  1788  00F1B1  73                 	db	115	;'s'
  1789  00F1B2  73                 	db	115	;'s'
  1790  00F1B3  66                 	db	102	;'f'
  1791  00F1B4  75                 	db	117	;'u'
  1792  00F1B5  6C                 	db	108	;'l'
  1793  00F1B6  6C                 	db	108	;'l'
  1794  00F1B7  79                 	db	121	;'y'
  1795  00F1B8  20                 	db	32
  1796  00F1B9  63                 	db	99	;'c'
  1797  00F1BA  68                 	db	104	;'h'
  1798  00F1BB  61                 	db	97	;'a'
  1799  00F1BC  6E                 	db	110	;'n'
  1800  00F1BD  67                 	db	103	;'g'
  1801  00F1BE  65                 	db	101	;'e'
  1802  00F1BF  64                 	db	100	;'d'
  1803  00F1C0  20                 	db	32
  1804  00F1C1  74                 	db	116	;'t'
  1805  00F1C2  6F                 	db	111	;'o'
  1806  00F1C3  20                 	db	32
  1807  00F1C4  22                 	db	34
  1808  00F1C5  20                 	db	32
  1809  00F1C6  25                 	db	37
  1810  00F1C7  73                 	db	115	;'s'
  1811  00F1C8  20                 	db	32
  1812  00F1C9  22                 	db	34
  1813  00F1CA  00                 	db	0
  1814  00F1CB                     STR_151:
  1815  00F1CB  53                 	db	83	;'S'
  1816  00F1CC  65                 	db	101	;'e'
  1817  00F1CD  74                 	db	116	;'t'
  1818  00F1CE  73                 	db	115	;'s'
  1819  00F1CF  20                 	db	32
  1820  00F1D0  52                 	db	82	;'R'
  1821  00F1D1  65                 	db	101	;'e'
  1822  00F1D2  6D                 	db	109	;'m'
  1823  00F1D3  6F                 	db	111	;'o'
  1824  00F1D4  74                 	db	116	;'t'
  1825  00F1D5  65                 	db	101	;'e'
  1826  00F1D6  20                 	db	32
  1827  00F1D7  62                 	db	98	;'b'
  1828  00F1D8  75                 	db	117	;'u'
  1829  00F1D9  74                 	db	116	;'t'
  1830  00F1DA  74                 	db	116	;'t'
  1831  00F1DB  6F                 	db	111	;'o'
  1832  00F1DC  6E                 	db	110	;'n'
  1833  00F1DD  20                 	db	32
  1834  00F1DE  74                 	db	116	;'t'
  1835  00F1DF  6F                 	db	111	;'o'
  1836  00F1E0  20                 	db	32
  1837  00F1E1  73                 	db	115	;'s'
  1838  00F1E2  65                 	db	101	;'e'
  1839  00F1E3  6E                 	db	110	;'n'
  1840  00F1E4  64                 	db	100	;'d'
  1841  00F1E5  20                 	db	32
  1842  00F1E6  52                 	db	82	;'R'
  1843  00F1E7  46                 	db	70	;'F'
  1844  00F1E8  20                 	db	32
  1845  00F1E9  43                 	db	67	;'C'
  1846  00F1EA  6F                 	db	111	;'o'
  1847  00F1EB  6E                 	db	110	;'n'
  1848  00F1EC  66                 	db	102	;'f'
  1849  00F1ED  69                 	db	105	;'i'
  1850  00F1EE  67                 	db	103	;'g'
  1851  00F1EF  20                 	db	32
  1852  00F1F0  32                 	db	50	;'2'
  1853  00F1F1  20                 	db	32
  1854  00F1F2  63                 	db	99	;'c'
  1855  00F1F3  68                 	db	104	;'h'
  1856  00F1F4  61                 	db	97	;'a'
  1857  00F1F5  6E                 	db	110	;'n'
  1858  00F1F6  6E                 	db	110	;'n'
  1859  00F1F7  65                 	db	101	;'e'
  1860  00F1F8  6C                 	db	108	;'l'
  1861  00F1F9  20                 	db	32
  1862  00F1FA  42                 	db	66	;'B'
  1863  00F1FB  00                 	db	0
  1864  00F1FC                     STR_145:
  1865  00F1FC  53                 	db	83	;'S'
  1866  00F1FD  65                 	db	101	;'e'
  1867  00F1FE  74                 	db	116	;'t'
  1868  00F1FF  73                 	db	115	;'s'
  1869  00F200  20                 	db	32
  1870  00F201  52                 	db	82	;'R'
  1871  00F202  65                 	db	101	;'e'
  1872  00F203  6D                 	db	109	;'m'
  1873  00F204  6F                 	db	111	;'o'
  1874  00F205  74                 	db	116	;'t'
  1875  00F206  65                 	db	101	;'e'
  1876  00F207  20                 	db	32
  1877  00F208  62                 	db	98	;'b'
  1878  00F209  75                 	db	117	;'u'
  1879  00F20A  74                 	db	116	;'t'
  1880  00F20B  74                 	db	116	;'t'
  1881  00F20C  6F                 	db	111	;'o'
  1882  00F20D  6E                 	db	110	;'n'
  1883  00F20E  20                 	db	32
  1884  00F20F  74                 	db	116	;'t'
  1885  00F210  6F                 	db	111	;'o'
  1886  00F211  20                 	db	32
  1887  00F212  73                 	db	115	;'s'
  1888  00F213  65                 	db	101	;'e'
  1889  00F214  6E                 	db	110	;'n'
  1890  00F215  64                 	db	100	;'d'
  1891  00F216  20                 	db	32
  1892  00F217  52                 	db	82	;'R'
  1893  00F218  46                 	db	70	;'F'
  1894  00F219  20                 	db	32
  1895  00F21A  43                 	db	67	;'C'
  1896  00F21B  6F                 	db	111	;'o'
  1897  00F21C  6E                 	db	110	;'n'
  1898  00F21D  66                 	db	102	;'f'
  1899  00F21E  69                 	db	105	;'i'
  1900  00F21F  67                 	db	103	;'g'
  1901  00F220  20                 	db	32
  1902  00F221  31                 	db	49	;'1'
  1903  00F222  20                 	db	32
  1904  00F223  63                 	db	99	;'c'
  1905  00F224  68                 	db	104	;'h'
  1906  00F225  61                 	db	97	;'a'
  1907  00F226  6E                 	db	110	;'n'
  1908  00F227  6E                 	db	110	;'n'
  1909  00F228  65                 	db	101	;'e'
  1910  00F229  6C                 	db	108	;'l'
  1911  00F22A  20                 	db	32
  1912  00F22B  44                 	db	68	;'D'
  1913  00F22C  00                 	db	0
  1914  00F22D                     STR_153:
  1915  00F22D  53                 	db	83	;'S'
  1916  00F22E  65                 	db	101	;'e'
  1917  00F22F  74                 	db	116	;'t'
  1918  00F230  73                 	db	115	;'s'
  1919  00F231  20                 	db	32
  1920  00F232  52                 	db	82	;'R'
  1921  00F233  65                 	db	101	;'e'
  1922  00F234  6D                 	db	109	;'m'
  1923  00F235  6F                 	db	111	;'o'
  1924  00F236  74                 	db	116	;'t'
  1925  00F237  65                 	db	101	;'e'
  1926  00F238  20                 	db	32
  1927  00F239  62                 	db	98	;'b'
  1928  00F23A  75                 	db	117	;'u'
  1929  00F23B  74                 	db	116	;'t'
  1930  00F23C  74                 	db	116	;'t'
  1931  00F23D  6F                 	db	111	;'o'
  1932  00F23E  6E                 	db	110	;'n'
  1933  00F23F  20                 	db	32
  1934  00F240  74                 	db	116	;'t'
  1935  00F241  6F                 	db	111	;'o'
  1936  00F242  20                 	db	32
  1937  00F243  73                 	db	115	;'s'
  1938  00F244  65                 	db	101	;'e'
  1939  00F245  6E                 	db	110	;'n'
  1940  00F246  64                 	db	100	;'d'
  1941  00F247  20                 	db	32
  1942  00F248  52                 	db	82	;'R'
  1943  00F249  46                 	db	70	;'F'
  1944  00F24A  20                 	db	32
  1945  00F24B  43                 	db	67	;'C'
  1946  00F24C  6F                 	db	111	;'o'
  1947  00F24D  6E                 	db	110	;'n'
  1948  00F24E  66                 	db	102	;'f'
  1949  00F24F  69                 	db	105	;'i'
  1950  00F250  67                 	db	103	;'g'
  1951  00F251  20                 	db	32
  1952  00F252  32                 	db	50	;'2'
  1953  00F253  20                 	db	32
  1954  00F254  63                 	db	99	;'c'
  1955  00F255  68                 	db	104	;'h'
  1956  00F256  61                 	db	97	;'a'
  1957  00F257  6E                 	db	110	;'n'
  1958  00F258  6E                 	db	110	;'n'
  1959  00F259  65                 	db	101	;'e'
  1960  00F25A  6C                 	db	108	;'l'
  1961  00F25B  20                 	db	32
  1962  00F25C  44                 	db	68	;'D'
  1963  00F25D  00                 	db	0
  1964  00F25E                     STR_147:
  1965  00F25E  53                 	db	83	;'S'
  1966  00F25F  65                 	db	101	;'e'
  1967  00F260  74                 	db	116	;'t'
  1968  00F261  73                 	db	115	;'s'
  1969  00F262  20                 	db	32
  1970  00F263  52                 	db	82	;'R'
  1971  00F264  65                 	db	101	;'e'
  1972  00F265  6D                 	db	109	;'m'
  1973  00F266  6F                 	db	111	;'o'
  1974  00F267  74                 	db	116	;'t'
  1975  00F268  65                 	db	101	;'e'
  1976  00F269  20                 	db	32
  1977  00F26A  62                 	db	98	;'b'
  1978  00F26B  75                 	db	117	;'u'
  1979  00F26C  74                 	db	116	;'t'
  1980  00F26D  74                 	db	116	;'t'
  1981  00F26E  6F                 	db	111	;'o'
  1982  00F26F  6E                 	db	110	;'n'
  1983  00F270  20                 	db	32
  1984  00F271  74                 	db	116	;'t'
  1985  00F272  6F                 	db	111	;'o'
  1986  00F273  20                 	db	32
  1987  00F274  73                 	db	115	;'s'
  1988  00F275  65                 	db	101	;'e'
  1989  00F276  6E                 	db	110	;'n'
  1990  00F277  64                 	db	100	;'d'
  1991  00F278  20                 	db	32
  1992  00F279  52                 	db	82	;'R'
  1993  00F27A  46                 	db	70	;'F'
  1994  00F27B  20                 	db	32
  1995  00F27C  43                 	db	67	;'C'
  1996  00F27D  6F                 	db	111	;'o'
  1997  00F27E  6E                 	db	110	;'n'
  1998  00F27F  66                 	db	102	;'f'
  1999  00F280  69                 	db	105	;'i'
  2000  00F281  67                 	db	103	;'g'
  2001  00F282  20                 	db	32
  2002  00F283  31                 	db	49	;'1'
  2003  00F284  20                 	db	32
  2004  00F285  63                 	db	99	;'c'
  2005  00F286  68                 	db	104	;'h'
  2006  00F287  61                 	db	97	;'a'
  2007  00F288  6E                 	db	110	;'n'
  2008  00F289  6E                 	db	110	;'n'
  2009  00F28A  65                 	db	101	;'e'
  2010  00F28B  6C                 	db	108	;'l'
  2011  00F28C  20                 	db	32
  2012  00F28D  45                 	db	69	;'E'
  2013  00F28E  00                 	db	0
  2014  00F28F                     STR_149:
  2015  00F28F  53                 	db	83	;'S'
  2016  00F290  65                 	db	101	;'e'
  2017  00F291  74                 	db	116	;'t'
  2018  00F292  73                 	db	115	;'s'
  2019  00F293  20                 	db	32
  2020  00F294  52                 	db	82	;'R'
  2021  00F295  65                 	db	101	;'e'
  2022  00F296  6D                 	db	109	;'m'
  2023  00F297  6F                 	db	111	;'o'
  2024  00F298  74                 	db	116	;'t'
  2025  00F299  65                 	db	101	;'e'
  2026  00F29A  20                 	db	32
  2027  00F29B  62                 	db	98	;'b'
  2028  00F29C  75                 	db	117	;'u'
  2029  00F29D  74                 	db	116	;'t'
  2030  00F29E  74                 	db	116	;'t'
  2031  00F29F  6F                 	db	111	;'o'
  2032  00F2A0  6E                 	db	110	;'n'
  2033  00F2A1  20                 	db	32
  2034  00F2A2  74                 	db	116	;'t'
  2035  00F2A3  6F                 	db	111	;'o'
  2036  00F2A4  20                 	db	32
  2037  00F2A5  73                 	db	115	;'s'
  2038  00F2A6  65                 	db	101	;'e'
  2039  00F2A7  6E                 	db	110	;'n'
  2040  00F2A8  64                 	db	100	;'d'
  2041  00F2A9  20                 	db	32
  2042  00F2AA  52                 	db	82	;'R'
  2043  00F2AB  46                 	db	70	;'F'
  2044  00F2AC  20                 	db	32
  2045  00F2AD  43                 	db	67	;'C'
  2046  00F2AE  6F                 	db	111	;'o'
  2047  00F2AF  6E                 	db	110	;'n'
  2048  00F2B0  66                 	db	102	;'f'
  2049  00F2B1  69                 	db	105	;'i'
  2050  00F2B2  67                 	db	103	;'g'
  2051  00F2B3  20                 	db	32
  2052  00F2B4  31                 	db	49	;'1'
  2053  00F2B5  20                 	db	32
  2054  00F2B6  63                 	db	99	;'c'
  2055  00F2B7  68                 	db	104	;'h'
  2056  00F2B8  61                 	db	97	;'a'
  2057  00F2B9  6E                 	db	110	;'n'
  2058  00F2BA  6E                 	db	110	;'n'
  2059  00F2BB  65                 	db	101	;'e'
  2060  00F2BC  6C                 	db	108	;'l'
  2061  00F2BD  20                 	db	32
  2062  00F2BE  46                 	db	70	;'F'
  2063  00F2BF  00                 	db	0
  2064  00F2C0                     STR_155:
  2065  00F2C0  53                 	db	83	;'S'
  2066  00F2C1  65                 	db	101	;'e'
  2067  00F2C2  74                 	db	116	;'t'
  2068  00F2C3  73                 	db	115	;'s'
  2069  00F2C4  20                 	db	32
  2070  00F2C5  52                 	db	82	;'R'
  2071  00F2C6  65                 	db	101	;'e'
  2072  00F2C7  6D                 	db	109	;'m'
  2073  00F2C8  6F                 	db	111	;'o'
  2074  00F2C9  74                 	db	116	;'t'
  2075  00F2CA  65                 	db	101	;'e'
  2076  00F2CB  20                 	db	32
  2077  00F2CC  62                 	db	98	;'b'
  2078  00F2CD  75                 	db	117	;'u'
  2079  00F2CE  74                 	db	116	;'t'
  2080  00F2CF  74                 	db	116	;'t'
  2081  00F2D0  6F                 	db	111	;'o'
  2082  00F2D1  6E                 	db	110	;'n'
  2083  00F2D2  20                 	db	32
  2084  00F2D3  74                 	db	116	;'t'
  2085  00F2D4  6F                 	db	111	;'o'
  2086  00F2D5  20                 	db	32
  2087  00F2D6  73                 	db	115	;'s'
  2088  00F2D7  65                 	db	101	;'e'
  2089  00F2D8  6E                 	db	110	;'n'
  2090  00F2D9  64                 	db	100	;'d'
  2091  00F2DA  20                 	db	32
  2092  00F2DB  52                 	db	82	;'R'
  2093  00F2DC  46                 	db	70	;'F'
  2094  00F2DD  20                 	db	32
  2095  00F2DE  43                 	db	67	;'C'
  2096  00F2DF  6F                 	db	111	;'o'
  2097  00F2E0  6E                 	db	110	;'n'
  2098  00F2E1  66                 	db	102	;'f'
  2099  00F2E2  69                 	db	105	;'i'
  2100  00F2E3  67                 	db	103	;'g'
  2101  00F2E4  20                 	db	32
  2102  00F2E5  32                 	db	50	;'2'
  2103  00F2E6  20                 	db	32
  2104  00F2E7  63                 	db	99	;'c'
  2105  00F2E8  68                 	db	104	;'h'
  2106  00F2E9  61                 	db	97	;'a'
  2107  00F2EA  6E                 	db	110	;'n'
  2108  00F2EB  6E                 	db	110	;'n'
  2109  00F2EC  65                 	db	101	;'e'
  2110  00F2ED  6C                 	db	108	;'l'
  2111  00F2EE  20                 	db	32
  2112  00F2EF  48                 	db	72	;'H'
  2113  00F2F0  00                 	db	0
  2114  00F2F1                     STR_53:
  2115  00F2F1  45                 	db	69	;'E'
  2116  00F2F2  72                 	db	114	;'r'
  2117  00F2F3  72                 	db	114	;'r'
  2118  00F2F4  6F                 	db	111	;'o'
  2119  00F2F5  72                 	db	114	;'r'
  2120  00F2F6  3A                 	db	58	;':'
  2121  00F2F7  20                 	db	32
  2122  00F2F8  4E                 	db	78	;'N'
  2123  00F2F9  6F                 	db	111	;'o'
  2124  00F2FA  20                 	db	32
  2125  00F2FB  4E                 	db	78	;'N'
  2126  00F2FC  45                 	db	69	;'E'
  2127  00F2FD  43                 	db	67	;'C'
  2128  00F2FE  20                 	db	32
  2129  00F2FF  63                 	db	99	;'c'
  2130  00F300  6F                 	db	111	;'o'
  2131  00F301  64                 	db	100	;'d'
  2132  00F302  65                 	db	101	;'e'
  2133  00F303  20                 	db	32
  2134  00F304  73                 	db	115	;'s'
  2135  00F305  61                 	db	97	;'a'
  2136  00F306  76                 	db	118	;'v'
  2137  00F307  65                 	db	101	;'e'
  2138  00F308  64                 	db	100	;'d'
  2139  00F309  20                 	db	32
  2140  00F30A  66                 	db	102	;'f'
  2141  00F30B  6F                 	db	111	;'o'
  2142  00F30C  72                 	db	114	;'r'
  2143  00F30D  20                 	db	32
  2144  00F30E  73                 	db	115	;'s'
  2145  00F30F  70                 	db	112	;'p'
  2146  00F310  65                 	db	101	;'e'
  2147  00F311  63                 	db	99	;'c'
  2148  00F312  69                 	db	105	;'i'
  2149  00F313  66                 	db	102	;'f'
  2150  00F314  69                 	db	105	;'i'
  2151  00F315  65                 	db	101	;'e'
  2152  00F316  64                 	db	100	;'d'
  2153  00F317  20                 	db	32
  2154  00F318  63                 	db	99	;'c'
  2155  00F319  6F                 	db	111	;'o'
  2156  00F31A  6D                 	db	109	;'m'
  2157  00F31B  6D                 	db	109	;'m'
  2158  00F31C  61                 	db	97	;'a'
  2159  00F31D  6E                 	db	110	;'n'
  2160  00F31E  64                 	db	100	;'d'
  2161  00F31F  00                 	db	0
  2162  00F320                     STR_78:
  2163  00F320  45                 	db	69	;'E'
  2164  00F321  72                 	db	114	;'r'
  2165  00F322  72                 	db	114	;'r'
  2166  00F323  6F                 	db	111	;'o'
  2167  00F324  72                 	db	114	;'r'
  2168  00F325  3A                 	db	58	;':'
  2169  00F326  20                 	db	32
  2170  00F327  4E                 	db	78	;'N'
  2171  00F328  6F                 	db	111	;'o'
  2172  00F329  20                 	db	32
  2173  00F32A  73                 	db	115	;'s'
  2174  00F32B  70                 	db	112	;'p'
  2175  00F32C  61                 	db	97	;'a'
  2176  00F32D  63                 	db	99	;'c'
  2177  00F32E  65                 	db	101	;'e'
  2178  00F32F  20                 	db	32
  2179  00F330  61                 	db	97	;'a'
  2180  00F331  76                 	db	118	;'v'
  2181  00F332  61                 	db	97	;'a'
  2182  00F333  69                 	db	105	;'i'
  2183  00F334  6C                 	db	108	;'l'
  2184  00F335  61                 	db	97	;'a'
  2185  00F336  62                 	db	98	;'b'
  2186  00F337  6C                 	db	108	;'l'
  2187  00F338  65                 	db	101	;'e'
  2188  00F339  20                 	db	32
  2189  00F33A  74                 	db	116	;'t'
  2190  00F33B  6F                 	db	111	;'o'
  2191  00F33C  20                 	db	32
  2192  00F33D  73                 	db	115	;'s'
  2193  00F33E  61                 	db	97	;'a'
  2194  00F33F  76                 	db	118	;'v'
  2195  00F340  65                 	db	101	;'e'
  2196  00F341  20                 	db	32
  2197  00F342  74                 	db	116	;'t'
  2198  00F343  68                 	db	104	;'h'
  2199  00F344  69                 	db	105	;'i'
  2200  00F345  73                 	db	115	;'s'
  2201  00F346  20                 	db	32
  2202  00F347  52                 	db	82	;'R'
  2203  00F348  46                 	db	70	;'F'
  2204  00F349  20                 	db	32
  2205  00F34A  63                 	db	99	;'c'
  2206  00F34B  6F                 	db	111	;'o'
  2207  00F34C  64                 	db	100	;'d'
  2208  00F34D  65                 	db	101	;'e'
  2209  00F34E  00                 	db	0
  2210  00F34F                     STR_54:
  2211  00F34F  52                 	db	82	;'R'
  2212  00F350  65                 	db	101	;'e'
  2213  00F351  6D                 	db	109	;'m'
  2214  00F352  6F                 	db	111	;'o'
  2215  00F353  74                 	db	116	;'t'
  2216  00F354  65                 	db	101	;'e'
  2217  00F355  42                 	db	66	;'B'
  2218  00F356  75                 	db	117	;'u'
  2219  00F357  74                 	db	116	;'t'
  2220  00F358  74                 	db	116	;'t'
  2221  00F359  6F                 	db	111	;'o'
  2222  00F35A  6E                 	db	110	;'n'
  2223  00F35B  25                 	db	37
  2224  00F35C  6C                 	db	108	;'l'
  2225  00F35D  75                 	db	117	;'u'
  2226  00F35E  20                 	db	32
  2227  00F35F  6E                 	db	110	;'n'
  2228  00F360  6F                 	db	111	;'o'
  2229  00F361  77                 	db	119	;'w'
  2230  00F362  20                 	db	32
  2231  00F363  74                 	db	116	;'t'
  2232  00F364  72                 	db	114	;'r'
  2233  00F365  61                 	db	97	;'a'
  2234  00F366  6E                 	db	110	;'n'
  2235  00F367  73                 	db	115	;'s'
  2236  00F368  6D                 	db	109	;'m'
  2237  00F369  69                 	db	105	;'i'
  2238  00F36A  74                 	db	116	;'t'
  2239  00F36B  73                 	db	115	;'s'
  2240  00F36C  20                 	db	32
  2241  00F36D  4E                 	db	78	;'N'
  2242  00F36E  45                 	db	69	;'E'
  2243  00F36F  43                 	db	67	;'C'
  2244  00F370  20                 	db	32
  2245  00F371  63                 	db	99	;'c'
  2246  00F372  6F                 	db	111	;'o'
  2247  00F373  64                 	db	100	;'d'
  2248  00F374  65                 	db	101	;'e'
  2249  00F375  20                 	db	32
  2250  00F376  30                 	db	48	;'0'
  2251  00F377  78                 	db	120	;'x'
  2252  00F378  25                 	db	37
  2253  00F379  6C                 	db	108	;'l'
  2254  00F37A  58                 	db	88	;'X'
  2255  00F37B  20                 	db	32
  2256  00F37C  00                 	db	0
  2257  00F37D                     STR_163:
  2258  00F37D  43                 	db	67	;'C'
  2259  00F37E  6C                 	db	108	;'l'
  2260  00F37F  65                 	db	101	;'e'
  2261  00F380  61                 	db	97	;'a'
  2262  00F381  72                 	db	114	;'r'
  2263  00F382  73                 	db	115	;'s'
  2264  00F383  20                 	db	32
  2265  00F384  73                 	db	115	;'s'
  2266  00F385  61                 	db	97	;'a'
  2267  00F386  76                 	db	118	;'v'
  2268  00F387  65                 	db	101	;'e'
  2269  00F388  64                 	db	100	;'d'
  2270  00F389  20                 	db	32
  2271  00F38A  42                 	db	66	;'B'
  2272  00F38B  75                 	db	117	;'u'
  2273  00F38C  74                 	db	116	;'t'
  2274  00F38D  74                 	db	116	;'t'
  2275  00F38E  6F                 	db	111	;'o'
  2276  00F38F  6E                 	db	110	;'n'
  2277  00F390  20                 	db	32
  2278  00F391  66                 	db	102	;'f'
  2279  00F392  6F                 	db	111	;'o'
  2280  00F393  72                 	db	114	;'r'
  2281  00F394  20                 	db	32
  2282  00F395  52                 	db	82	;'R'
  2283  00F396  46                 	db	70	;'F'
  2284  00F397  20                 	db	32
  2285  00F398  43                 	db	67	;'C'
  2286  00F399  6F                 	db	111	;'o'
  2287  00F39A  6E                 	db	110	;'n'
  2288  00F39B  66                 	db	102	;'f'
  2289  00F39C  69                 	db	105	;'i'
  2290  00F39D  67                 	db	103	;'g'
  2291  00F39E  20                 	db	32
  2292  00F39F  32                 	db	50	;'2'
  2293  00F3A0  20                 	db	32
  2294  00F3A1  63                 	db	99	;'c'
  2295  00F3A2  68                 	db	104	;'h'
  2296  00F3A3  61                 	db	97	;'a'
  2297  00F3A4  6E                 	db	110	;'n'
  2298  00F3A5  6E                 	db	110	;'n'
  2299  00F3A6  65                 	db	101	;'e'
  2300  00F3A7  6C                 	db	108	;'l'
  2301  00F3A8  20                 	db	32
  2302  00F3A9  42                 	db	66	;'B'
  2303  00F3AA  00                 	db	0
  2304  00F3AB                     STR_157:
  2305  00F3AB  43                 	db	67	;'C'
  2306  00F3AC  6C                 	db	108	;'l'
  2307  00F3AD  65                 	db	101	;'e'
  2308  00F3AE  61                 	db	97	;'a'
  2309  00F3AF  72                 	db	114	;'r'
  2310  00F3B0  73                 	db	115	;'s'
  2311  00F3B1  20                 	db	32
  2312  00F3B2  73                 	db	115	;'s'
  2313  00F3B3  61                 	db	97	;'a'
  2314  00F3B4  76                 	db	118	;'v'
  2315  00F3B5  65                 	db	101	;'e'
  2316  00F3B6  64                 	db	100	;'d'
  2317  00F3B7  20                 	db	32
  2318  00F3B8  42                 	db	66	;'B'
  2319  00F3B9  75                 	db	117	;'u'
  2320  00F3BA  74                 	db	116	;'t'
  2321  00F3BB  74                 	db	116	;'t'
  2322  00F3BC  6F                 	db	111	;'o'
  2323  00F3BD  6E                 	db	110	;'n'
  2324  00F3BE  20                 	db	32
  2325  00F3BF  66                 	db	102	;'f'
  2326  00F3C0  6F                 	db	111	;'o'
  2327  00F3C1  72                 	db	114	;'r'
  2328  00F3C2  20                 	db	32
  2329  00F3C3  52                 	db	82	;'R'
  2330  00F3C4  46                 	db	70	;'F'
  2331  00F3C5  20                 	db	32
  2332  00F3C6  43                 	db	67	;'C'
  2333  00F3C7  6F                 	db	111	;'o'
  2334  00F3C8  6E                 	db	110	;'n'
  2335  00F3C9  66                 	db	102	;'f'
  2336  00F3CA  69                 	db	105	;'i'
  2337  00F3CB  67                 	db	103	;'g'
  2338  00F3CC  20                 	db	32
  2339  00F3CD  31                 	db	49	;'1'
  2340  00F3CE  20                 	db	32
  2341  00F3CF  63                 	db	99	;'c'
  2342  00F3D0  68                 	db	104	;'h'
  2343  00F3D1  61                 	db	97	;'a'
  2344  00F3D2  6E                 	db	110	;'n'
  2345  00F3D3  6E                 	db	110	;'n'
  2346  00F3D4  65                 	db	101	;'e'
  2347  00F3D5  6C                 	db	108	;'l'
  2348  00F3D6  20                 	db	32
  2349  00F3D7  44                 	db	68	;'D'
  2350  00F3D8  00                 	db	0
  2351  00F3D9                     STR_165:
  2352  00F3D9  43                 	db	67	;'C'
  2353  00F3DA  6C                 	db	108	;'l'
  2354  00F3DB  65                 	db	101	;'e'
  2355  00F3DC  61                 	db	97	;'a'
  2356  00F3DD  72                 	db	114	;'r'
  2357  00F3DE  73                 	db	115	;'s'
  2358  00F3DF  20                 	db	32
  2359  00F3E0  73                 	db	115	;'s'
  2360  00F3E1  61                 	db	97	;'a'
  2361  00F3E2  76                 	db	118	;'v'
  2362  00F3E3  65                 	db	101	;'e'
  2363  00F3E4  64                 	db	100	;'d'
  2364  00F3E5  20                 	db	32
  2365  00F3E6  42                 	db	66	;'B'
  2366  00F3E7  75                 	db	117	;'u'
  2367  00F3E8  74                 	db	116	;'t'
  2368  00F3E9  74                 	db	116	;'t'
  2369  00F3EA  6F                 	db	111	;'o'
  2370  00F3EB  6E                 	db	110	;'n'
  2371  00F3EC  20                 	db	32
  2372  00F3ED  66                 	db	102	;'f'
  2373  00F3EE  6F                 	db	111	;'o'
  2374  00F3EF  72                 	db	114	;'r'
  2375  00F3F0  20                 	db	32
  2376  00F3F1  52                 	db	82	;'R'
  2377  00F3F2  46                 	db	70	;'F'
  2378  00F3F3  20                 	db	32
  2379  00F3F4  43                 	db	67	;'C'
  2380  00F3F5  6F                 	db	111	;'o'
  2381  00F3F6  6E                 	db	110	;'n'
  2382  00F3F7  66                 	db	102	;'f'
  2383  00F3F8  69                 	db	105	;'i'
  2384  00F3F9  67                 	db	103	;'g'
  2385  00F3FA  20                 	db	32
  2386  00F3FB  32                 	db	50	;'2'
  2387  00F3FC  20                 	db	32
  2388  00F3FD  63                 	db	99	;'c'
  2389  00F3FE  68                 	db	104	;'h'
  2390  00F3FF  61                 	db	97	;'a'
  2391  00F400  6E                 	db	110	;'n'
  2392  00F401  6E                 	db	110	;'n'
  2393  00F402  65                 	db	101	;'e'
  2394  00F403  6C                 	db	108	;'l'
  2395  00F404  20                 	db	32
  2396  00F405  44                 	db	68	;'D'
  2397  00F406  00                 	db	0
  2398  00F407                     STR_159:
  2399  00F407  43                 	db	67	;'C'
  2400  00F408  6C                 	db	108	;'l'
  2401  00F409  65                 	db	101	;'e'
  2402  00F40A  61                 	db	97	;'a'
  2403  00F40B  72                 	db	114	;'r'
  2404  00F40C  73                 	db	115	;'s'
  2405  00F40D  20                 	db	32
  2406  00F40E  73                 	db	115	;'s'
  2407  00F40F  61                 	db	97	;'a'
  2408  00F410  76                 	db	118	;'v'
  2409  00F411  65                 	db	101	;'e'
  2410  00F412  64                 	db	100	;'d'
  2411  00F413  20                 	db	32
  2412  00F414  42                 	db	66	;'B'
  2413  00F415  75                 	db	117	;'u'
  2414  00F416  74                 	db	116	;'t'
  2415  00F417  74                 	db	116	;'t'
  2416  00F418  6F                 	db	111	;'o'
  2417  00F419  6E                 	db	110	;'n'
  2418  00F41A  20                 	db	32
  2419  00F41B  66                 	db	102	;'f'
  2420  00F41C  6F                 	db	111	;'o'
  2421  00F41D  72                 	db	114	;'r'
  2422  00F41E  20                 	db	32
  2423  00F41F  52                 	db	82	;'R'
  2424  00F420  46                 	db	70	;'F'
  2425  00F421  20                 	db	32
  2426  00F422  43                 	db	67	;'C'
  2427  00F423  6F                 	db	111	;'o'
  2428  00F424  6E                 	db	110	;'n'
  2429  00F425  66                 	db	102	;'f'
  2430  00F426  69                 	db	105	;'i'
  2431  00F427  67                 	db	103	;'g'
  2432  00F428  20                 	db	32
  2433  00F429  31                 	db	49	;'1'
  2434  00F42A  20                 	db	32
  2435  00F42B  63                 	db	99	;'c'
  2436  00F42C  68                 	db	104	;'h'
  2437  00F42D  61                 	db	97	;'a'
  2438  00F42E  6E                 	db	110	;'n'
  2439  00F42F  6E                 	db	110	;'n'
  2440  00F430  65                 	db	101	;'e'
  2441  00F431  6C                 	db	108	;'l'
  2442  00F432  20                 	db	32
  2443  00F433  45                 	db	69	;'E'
  2444  00F434  00                 	db	0
  2445  00F435                     STR_161:
  2446  00F435  43                 	db	67	;'C'
  2447  00F436  6C                 	db	108	;'l'
  2448  00F437  65                 	db	101	;'e'
  2449  00F438  61                 	db	97	;'a'
  2450  00F439  72                 	db	114	;'r'
  2451  00F43A  73                 	db	115	;'s'
  2452  00F43B  20                 	db	32
  2453  00F43C  73                 	db	115	;'s'
  2454  00F43D  61                 	db	97	;'a'
  2455  00F43E  76                 	db	118	;'v'
  2456  00F43F  65                 	db	101	;'e'
  2457  00F440  64                 	db	100	;'d'
  2458  00F441  20                 	db	32
  2459  00F442  42                 	db	66	;'B'
  2460  00F443  75                 	db	117	;'u'
  2461  00F444  74                 	db	116	;'t'
  2462  00F445  74                 	db	116	;'t'
  2463  00F446  6F                 	db	111	;'o'
  2464  00F447  6E                 	db	110	;'n'
  2465  00F448  20                 	db	32
  2466  00F449  66                 	db	102	;'f'
  2467  00F44A  6F                 	db	111	;'o'
  2468  00F44B  72                 	db	114	;'r'
  2469  00F44C  20                 	db	32
  2470  00F44D  52                 	db	82	;'R'
  2471  00F44E  46                 	db	70	;'F'
  2472  00F44F  20                 	db	32
  2473  00F450  43                 	db	67	;'C'
  2474  00F451  6F                 	db	111	;'o'
  2475  00F452  6E                 	db	110	;'n'
  2476  00F453  66                 	db	102	;'f'
  2477  00F454  69                 	db	105	;'i'
  2478  00F455  67                 	db	103	;'g'
  2479  00F456  20                 	db	32
  2480  00F457  31                 	db	49	;'1'
  2481  00F458  20                 	db	32
  2482  00F459  63                 	db	99	;'c'
  2483  00F45A  68                 	db	104	;'h'
  2484  00F45B  61                 	db	97	;'a'
  2485  00F45C  6E                 	db	110	;'n'
  2486  00F45D  6E                 	db	110	;'n'
  2487  00F45E  65                 	db	101	;'e'
  2488  00F45F  6C                 	db	108	;'l'
  2489  00F460  20                 	db	32
  2490  00F461  46                 	db	70	;'F'
  2491  00F462  00                 	db	0
  2492  00F463                     STR_167:
  2493  00F463  43                 	db	67	;'C'
  2494  00F464  6C                 	db	108	;'l'
  2495  00F465  65                 	db	101	;'e'
  2496  00F466  61                 	db	97	;'a'
  2497  00F467  72                 	db	114	;'r'
  2498  00F468  73                 	db	115	;'s'
  2499  00F469  20                 	db	32
  2500  00F46A  73                 	db	115	;'s'
  2501  00F46B  61                 	db	97	;'a'
  2502  00F46C  76                 	db	118	;'v'
  2503  00F46D  65                 	db	101	;'e'
  2504  00F46E  64                 	db	100	;'d'
  2505  00F46F  20                 	db	32
  2506  00F470  42                 	db	66	;'B'
  2507  00F471  75                 	db	117	;'u'
  2508  00F472  74                 	db	116	;'t'
  2509  00F473  74                 	db	116	;'t'
  2510  00F474  6F                 	db	111	;'o'
  2511  00F475  6E                 	db	110	;'n'
  2512  00F476  20                 	db	32
  2513  00F477  66                 	db	102	;'f'
  2514  00F478  6F                 	db	111	;'o'
  2515  00F479  72                 	db	114	;'r'
  2516  00F47A  20                 	db	32
  2517  00F47B  52                 	db	82	;'R'
  2518  00F47C  46                 	db	70	;'F'
  2519  00F47D  20                 	db	32
  2520  00F47E  43                 	db	67	;'C'
  2521  00F47F  6F                 	db	111	;'o'
  2522  00F480  6E                 	db	110	;'n'
  2523  00F481  66                 	db	102	;'f'
  2524  00F482  69                 	db	105	;'i'
  2525  00F483  67                 	db	103	;'g'
  2526  00F484  20                 	db	32
  2527  00F485  32                 	db	50	;'2'
  2528  00F486  20                 	db	32
  2529  00F487  63                 	db	99	;'c'
  2530  00F488  68                 	db	104	;'h'
  2531  00F489  61                 	db	97	;'a'
  2532  00F48A  6E                 	db	110	;'n'
  2533  00F48B  6E                 	db	110	;'n'
  2534  00F48C  65                 	db	101	;'e'
  2535  00F48D  6C                 	db	108	;'l'
  2536  00F48E  20                 	db	32
  2537  00F48F  48                 	db	72	;'H'
  2538  00F490  00                 	db	0
  2539  00F491                     STR_79:
  2540  00F491  45                 	db	69	;'E'
  2541  00F492  72                 	db	114	;'r'
  2542  00F493  72                 	db	114	;'r'
  2543  00F494  6F                 	db	111	;'o'
  2544  00F495  72                 	db	114	;'r'
  2545  00F496  3A                 	db	58	;':'
  2546  00F497  20                 	db	32
  2547  00F498  4E                 	db	78	;'N'
  2548  00F499  45                 	db	69	;'E'
  2549  00F49A  43                 	db	67	;'C'
  2550  00F49B  20                 	db	32
  2551  00F49C  63                 	db	99	;'c'
  2552  00F49D  6F                 	db	111	;'o'
  2553  00F49E  64                 	db	100	;'d'
  2554  00F49F  65                 	db	101	;'e'
  2555  00F4A0  20                 	db	32
  2556  00F4A1  61                 	db	97	;'a'
  2557  00F4A2  6C                 	db	108	;'l'
  2558  00F4A3  72                 	db	114	;'r'
  2559  00F4A4  65                 	db	101	;'e'
  2560  00F4A5  61                 	db	97	;'a'
  2561  00F4A6  64                 	db	100	;'d'
  2562  00F4A7  79                 	db	121	;'y'
  2563  00F4A8  20                 	db	32
  2564  00F4A9  73                 	db	115	;'s'
  2565  00F4AA  61                 	db	97	;'a'
  2566  00F4AB  76                 	db	118	;'v'
  2567  00F4AC  65                 	db	101	;'e'
  2568  00F4AD  64                 	db	100	;'d'
  2569  00F4AE  20                 	db	32
  2570  00F4AF  74                 	db	116	;'t'
  2571  00F4B0  6F                 	db	111	;'o'
  2572  00F4B1  20                 	db	32
  2573  00F4B2  74                 	db	116	;'t'
  2574  00F4B3  68                 	db	104	;'h'
  2575  00F4B4  69                 	db	105	;'i'
  2576  00F4B5  73                 	db	115	;'s'
  2577  00F4B6  20                 	db	32
  2578  00F4B7  52                 	db	82	;'R'
  2579  00F4B8  46                 	db	70	;'F'
  2580  00F4B9  20                 	db	32
  2581  00F4BA  63                 	db	99	;'c'
  2582  00F4BB  6F                 	db	111	;'o'
  2583  00F4BC  64                 	db	100	;'d'
  2584  00F4BD  65                 	db	101	;'e'
  2585  00F4BE  00                 	db	0
  2586  00F4BF                     STR_92:
  2587  00F4BF  44                 	db	68	;'D'
  2588  00F4C0  65                 	db	101	;'e'
  2589  00F4C1  76                 	db	118	;'v'
  2590  00F4C2  69                 	db	105	;'i'
  2591  00F4C3  63                 	db	99	;'c'
  2592  00F4C4  65                 	db	101	;'e'
  2593  00F4C5  20                 	db	32
  2594  00F4C6  72                 	db	114	;'r'
  2595  00F4C7  65                 	db	101	;'e'
  2596  00F4C8  73                 	db	115	;'s'
  2597  00F4C9  75                 	db	117	;'u'
  2598  00F4CA  6D                 	db	109	;'m'
  2599  00F4CB  65                 	db	101	;'e'
  2600  00F4CC  73                 	db	115	;'s'
  2601  00F4CD  20                 	db	32
  2602  00F4CE  77                 	db	119	;'w'
  2603  00F4CF  69                 	db	105	;'i'
  2604  00F4D0  74                 	db	116	;'t'
  2605  00F4D1  68                 	db	104	;'h'
  2606  00F4D2  6F                 	db	111	;'o'
  2607  00F4D3  75                 	db	117	;'u'
  2608  00F4D4  74                 	db	116	;'t'
  2609  00F4D5  20                 	db	32
  2610  00F4D6  63                 	db	99	;'c'
  2611  00F4D7  68                 	db	104	;'h'
  2612  00F4D8  61                 	db	97	;'a'
  2613  00F4D9  6E                 	db	110	;'n'
  2614  00F4DA  67                 	db	103	;'g'
  2615  00F4DB  69                 	db	105	;'i'
  2616  00F4DC  6E                 	db	110	;'n'
  2617  00F4DD  67                 	db	103	;'g'
  2618  00F4DE  20                 	db	32
  2619  00F4DF  73                 	db	115	;'s'
  2620  00F4E0  65                 	db	101	;'e'
  2621  00F4E1  72                 	db	114	;'r'
  2622  00F4E2  69                 	db	105	;'i'
  2623  00F4E3  61                 	db	97	;'a'
  2624  00F4E4  6C                 	db	108	;'l'
  2625  00F4E5  20                 	db	32
  2626  00F4E6  6E                 	db	110	;'n'
  2627  00F4E7  75                 	db	117	;'u'
  2628  00F4E8  6D                 	db	109	;'m'
  2629  00F4E9  62                 	db	98	;'b'
  2630  00F4EA  65                 	db	101	;'e'
  2631  00F4EB  72                 	db	114	;'r'
  2632  00F4EC  00                 	db	0
  2633  00F4ED                     STR_52:
  2634  00F4ED  4E                 	db	78	;'N'
  2635  00F4EE  45                 	db	69	;'E'
  2636  00F4EF  43                 	db	67	;'C'
  2637  00F4F0  20                 	db	32
  2638  00F4F1  43                 	db	67	;'C'
  2639  00F4F2  6F                 	db	111	;'o'
  2640  00F4F3  64                 	db	100	;'d'
  2641  00F4F4  65                 	db	101	;'e'
  2642  00F4F5  20                 	db	32
  2643  00F4F6  61                 	db	97	;'a'
  2644  00F4F7  64                 	db	100	;'d'
  2645  00F4F8  64                 	db	100	;'d'
  2646  00F4F9  72                 	db	114	;'r'
  2647  00F4FA  65                 	db	101	;'e'
  2648  00F4FB  73                 	db	115	;'s'
  2649  00F4FC  73                 	db	115	;'s'
  2650  00F4FD  3A                 	db	58	;':'
  2651  00F4FE  20                 	db	32
  2652  00F4FF  30                 	db	48	;'0'
  2653  00F500  78                 	db	120	;'x'
  2654  00F501  25                 	db	37
  2655  00F502  30                 	db	48	;'0'
  2656  00F503  32                 	db	50	;'2'
  2657  00F504  58                 	db	88	;'X'
  2658  00F505  20                 	db	32
  2659  00F506  2C                 	db	44
  2660  00F507  20                 	db	32
  2661  00F508  63                 	db	99	;'c'
  2662  00F509  6F                 	db	111	;'o'
  2663  00F50A  6D                 	db	109	;'m'
  2664  00F50B  6D                 	db	109	;'m'
  2665  00F50C  61                 	db	97	;'a'
  2666  00F50D  6E                 	db	110	;'n'
  2667  00F50E  64                 	db	100	;'d'
  2668  00F50F  3A                 	db	58	;':'
  2669  00F510  20                 	db	32
  2670  00F511  30                 	db	48	;'0'
  2671  00F512  78                 	db	120	;'x'
  2672  00F513  25                 	db	37
  2673  00F514  30                 	db	48	;'0'
  2674  00F515  32                 	db	50	;'2'
  2675  00F516  58                 	db	88	;'X'
  2676  00F517  20                 	db	32
  2677  00F518  00                 	db	0
  2678  00F519                     STR_99:
  2679  00F519  53                 	db	83	;'S'
  2680  00F51A  65                 	db	101	;'e'
  2681  00F51B  72                 	db	114	;'r'
  2682  00F51C  69                 	db	105	;'i'
  2683  00F51D  61                 	db	97	;'a'
  2684  00F51E  6C                 	db	108	;'l'
  2685  00F51F  20                 	db	32
  2686  00F520  4E                 	db	78	;'N'
  2687  00F521  75                 	db	117	;'u'
  2688  00F522  6D                 	db	109	;'m'
  2689  00F523  62                 	db	98	;'b'
  2690  00F524  65                 	db	101	;'e'
  2691  00F525  72                 	db	114	;'r'
  2692  00F526  20                 	db	32
  2693  00F527  63                 	db	99	;'c'
  2694  00F528  6F                 	db	111	;'o'
  2695  00F529  75                 	db	117	;'u'
  2696  00F52A  6C                 	db	108	;'l'
  2697  00F52B  64                 	db	100	;'d'
  2698  00F52C  20                 	db	32
  2699  00F52D  6E                 	db	110	;'n'
  2700  00F52E  6F                 	db	111	;'o'
  2701  00F52F  74                 	db	116	;'t'
  2702  00F530  20                 	db	32
  2703  00F531  62                 	db	98	;'b'
  2704  00F532  65                 	db	101	;'e'
  2705  00F533  20                 	db	32
  2706  00F534  62                 	db	98	;'b'
  2707  00F535  75                 	db	117	;'u'
  2708  00F536  72                 	db	114	;'r'
  2709  00F537  6E                 	db	110	;'n'
  2710  00F538  65                 	db	101	;'e'
  2711  00F539  64                 	db	100	;'d'
  2712  00F53A  20                 	db	32
  2713  00F53B  74                 	db	116	;'t'
  2714  00F53C  6F                 	db	111	;'o'
  2715  00F53D  20                 	db	32
  2716  00F53E  45                 	db	69	;'E'
  2717  00F53F  45                 	db	69	;'E'
  2718  00F540  50                 	db	80	;'P'
  2719  00F541  52                 	db	82	;'R'
  2720  00F542  4F                 	db	79	;'O'
  2721  00F543  4D                 	db	77	;'M'
  2722  00F544  00                 	db	0
  2723  00F545                     STR_96:
  2724  00F545  53                 	db	83	;'S'
  2725  00F546  65                 	db	101	;'e'
  2726  00F547  72                 	db	114	;'r'
  2727  00F548  69                 	db	105	;'i'
  2728  00F549  61                 	db	97	;'a'
  2729  00F54A  6C                 	db	108	;'l'
  2730  00F54B  20                 	db	32
  2731  00F54C  4E                 	db	78	;'N'
  2732  00F54D  75                 	db	117	;'u'
  2733  00F54E  6D                 	db	109	;'m'
  2734  00F54F  62                 	db	98	;'b'
  2735  00F550  65                 	db	101	;'e'
  2736  00F551  72                 	db	114	;'r'
  2737  00F552  20                 	db	32
  2738  00F553  73                 	db	115	;'s'
  2739  00F554  75                 	db	117	;'u'
  2740  00F555  63                 	db	99	;'c'
  2741  00F556  63                 	db	99	;'c'
  2742  00F557  65                 	db	101	;'e'
  2743  00F558  73                 	db	115	;'s'
  2744  00F559  73                 	db	115	;'s'
  2745  00F55A  66                 	db	102	;'f'
  2746  00F55B  75                 	db	117	;'u'
  2747  00F55C  6C                 	db	108	;'l'
  2748  00F55D  6C                 	db	108	;'l'
  2749  00F55E  79                 	db	121	;'y'
  2750  00F55F  20                 	db	32
  2751  00F560  62                 	db	98	;'b'
  2752  00F561  75                 	db	117	;'u'
  2753  00F562  72                 	db	114	;'r'
  2754  00F563  6E                 	db	110	;'n'
  2755  00F564  65                 	db	101	;'e'
  2756  00F565  64                 	db	100	;'d'
  2757  00F566  20                 	db	32
  2758  00F567  74                 	db	116	;'t'
  2759  00F568  6F                 	db	111	;'o'
  2760  00F569  20                 	db	32
  2761  00F56A  45                 	db	69	;'E'
  2762  00F56B  45                 	db	69	;'E'
  2763  00F56C  50                 	db	80	;'P'
  2764  00F56D  52                 	db	82	;'R'
  2765  00F56E  4F                 	db	79	;'O'
  2766  00F56F  4D                 	db	77	;'M'
  2767  00F570  00                 	db	0
  2768  00F571                     STR_83:
  2769  00F571  52                 	db	82	;'R'
  2770  00F572  46                 	db	70	;'F'
  2771  00F573  20                 	db	32
  2772  00F574  63                 	db	99	;'c'
  2773  00F575  6F                 	db	111	;'o'
  2774  00F576  6E                 	db	110	;'n'
  2775  00F577  66                 	db	102	;'f'
  2776  00F578  69                 	db	105	;'i'
  2777  00F579  67                 	db	103	;'g'
  2778  00F57A  20                 	db	32
  2779  00F57B  25                 	db	37
  2780  00F57C  64                 	db	100	;'d'
  2781  00F57D  20                 	db	32
  2782  00F57E  63                 	db	99	;'c'
  2783  00F57F  68                 	db	104	;'h'
  2784  00F580  61                 	db	97	;'a'
  2785  00F581  6E                 	db	110	;'n'
  2786  00F582  6E                 	db	110	;'n'
  2787  00F583  65                 	db	101	;'e'
  2788  00F584  6C                 	db	108	;'l'
  2789  00F585  20                 	db	32
  2790  00F586  25                 	db	37
  2791  00F587  63                 	db	99	;'c'
  2792  00F588  20                 	db	32
  2793  00F589  73                 	db	115	;'s'
  2794  00F58A  75                 	db	117	;'u'
  2795  00F58B  63                 	db	99	;'c'
  2796  00F58C  63                 	db	99	;'c'
  2797  00F58D  65                 	db	101	;'e'
  2798  00F58E  73                 	db	115	;'s'
  2799  00F58F  73                 	db	115	;'s'
  2800  00F590  66                 	db	102	;'f'
  2801  00F591  75                 	db	117	;'u'
  2802  00F592  6C                 	db	108	;'l'
  2803  00F593  6C                 	db	108	;'l'
  2804  00F594  79                 	db	121	;'y'
  2805  00F595  20                 	db	32
  2806  00F596  65                 	db	101	;'e'
  2807  00F597  72                 	db	114	;'r'
  2808  00F598  61                 	db	97	;'a'
  2809  00F599  73                 	db	115	;'s'
  2810  00F59A  65                 	db	101	;'e'
  2811  00F59B  64                 	db	100	;'d'
  2812  00F59C  00                 	db	0
  2813  00F59D                     STR_84:
  2814  00F59D  45                 	db	69	;'E'
  2815  00F59E  72                 	db	114	;'r'
  2816  00F59F  72                 	db	114	;'r'
  2817  00F5A0  6F                 	db	111	;'o'
  2818  00F5A1  72                 	db	114	;'r'
  2819  00F5A2  3A                 	db	58	;':'
  2820  00F5A3  20                 	db	32
  2821  00F5A4  52                 	db	82	;'R'
  2822  00F5A5  46                 	db	70	;'F'
  2823  00F5A6  20                 	db	32
  2824  00F5A7  63                 	db	99	;'c'
  2825  00F5A8  68                 	db	104	;'h'
  2826  00F5A9  61                 	db	97	;'a'
  2827  00F5AA  6E                 	db	110	;'n'
  2828  00F5AB  6E                 	db	110	;'n'
  2829  00F5AC  65                 	db	101	;'e'
  2830  00F5AD  6C                 	db	108	;'l'
  2831  00F5AE  20                 	db	32
  2832  00F5AF  6E                 	db	110	;'n'
  2833  00F5B0  65                 	db	101	;'e'
  2834  00F5B1  65                 	db	101	;'e'
  2835  00F5B2  64                 	db	100	;'d'
  2836  00F5B3  73                 	db	115	;'s'
  2837  00F5B4  20                 	db	32
  2838  00F5B5  74                 	db	116	;'t'
  2839  00F5B6  6F                 	db	111	;'o'
  2840  00F5B7  20                 	db	32
  2841  00F5B8  62                 	db	98	;'b'
  2842  00F5B9  65                 	db	101	;'e'
  2843  00F5BA  20                 	db	32
  2844  00F5BB  6F                 	db	111	;'o'
  2845  00F5BC  6E                 	db	110	;'n'
  2846  00F5BD  65                 	db	101	;'e'
  2847  00F5BE  20                 	db	32
  2848  00F5BF  63                 	db	99	;'c'
  2849  00F5C0  68                 	db	104	;'h'
  2850  00F5C1  61                 	db	97	;'a'
  2851  00F5C2  72                 	db	114	;'r'
  2852  00F5C3  61                 	db	97	;'a'
  2853  00F5C4  63                 	db	99	;'c'
  2854  00F5C5  74                 	db	116	;'t'
  2855  00F5C6  65                 	db	101	;'e'
  2856  00F5C7  72                 	db	114	;'r'
  2857  00F5C8  00                 	db	0
  2858  00F5C9                     STR_69:
  2859  00F5C9  4E                 	db	78	;'N'
  2860  00F5CA  45                 	db	69	;'E'
  2861  00F5CB  43                 	db	67	;'C'
  2862  00F5CC  20                 	db	32
  2863  00F5CD  63                 	db	99	;'c'
  2864  00F5CE  6F                 	db	111	;'o'
  2865  00F5CF  64                 	db	100	;'d'
  2866  00F5D0  65                 	db	101	;'e'
  2867  00F5D1  20                 	db	32
  2868  00F5D2  30                 	db	48	;'0'
  2869  00F5D3  78                 	db	120	;'x'
  2870  00F5D4  25                 	db	37
  2871  00F5D5  6C                 	db	108	;'l'
  2872  00F5D6  58                 	db	88	;'X'
  2873  00F5D7  20                 	db	32
  2874  00F5D8  6E                 	db	110	;'n'
  2875  00F5D9  6F                 	db	111	;'o'
  2876  00F5DA  77                 	db	119	;'w'
  2877  00F5DB  20                 	db	32
  2878  00F5DC  74                 	db	116	;'t'
  2879  00F5DD  72                 	db	114	;'r'
  2880  00F5DE  61                 	db	97	;'a'
  2881  00F5DF  6E                 	db	110	;'n'
  2882  00F5E0  73                 	db	115	;'s'
  2883  00F5E1  6D                 	db	109	;'m'
  2884  00F5E2  69                 	db	105	;'i'
  2885  00F5E3  74                 	db	116	;'t'
  2886  00F5E4  73                 	db	115	;'s'
  2887  00F5E5  20                 	db	32
  2888  00F5E6  61                 	db	97	;'a'
  2889  00F5E7  6C                 	db	108	;'l'
  2890  00F5E8  6C                 	db	108	;'l'
  2891  00F5E9  20                 	db	32
  2892  00F5EA  52                 	db	82	;'R'
  2893  00F5EB  46                 	db	70	;'F'
  2894  00F5EC  20                 	db	32
  2895  00F5ED  63                 	db	99	;'c'
  2896  00F5EE  6F                 	db	111	;'o'
  2897  00F5EF  64                 	db	100	;'d'
  2898  00F5F0  65                 	db	101	;'e'
  2899  00F5F1  73                 	db	115	;'s'
  2900  00F5F2  00                 	db	0
  2901  00F5F3                     STR_108:
  2902  00F5F3  4E                 	db	78	;'N'
  2903  00F5F4  61                 	db	97	;'a'
  2904  00F5F5  6D                 	db	109	;'m'
  2905  00F5F6  65                 	db	101	;'e'
  2906  00F5F7  20                 	db	32
  2907  00F5F8  68                 	db	104	;'h'
  2908  00F5F9  61                 	db	97	;'a'
  2909  00F5FA  73                 	db	115	;'s'
  2910  00F5FB  20                 	db	32
  2911  00F5FC  74                 	db	116	;'t'
  2912  00F5FD  6F                 	db	111	;'o'
  2913  00F5FE  20                 	db	32
  2914  00F5FF  62                 	db	98	;'b'
  2915  00F600  65                 	db	101	;'e'
  2916  00F601  20                 	db	32
  2917  00F602  41                 	db	65	;'A'
  2918  00F603  6C                 	db	108	;'l'
  2919  00F604  70                 	db	112	;'p'
  2920  00F605  68                 	db	104	;'h'
  2921  00F606  61                 	db	97	;'a'
  2922  00F607  6E                 	db	110	;'n'
  2923  00F608  75                 	db	117	;'u'
  2924  00F609  6D                 	db	109	;'m'
  2925  00F60A  65                 	db	101	;'e'
  2926  00F60B  72                 	db	114	;'r'
  2927  00F60C  69                 	db	105	;'i'
  2928  00F60D  63                 	db	99	;'c'
  2929  00F60E  2E                 	db	46
  2930  00F60F  20                 	db	32
  2931  00F610  4E                 	db	78	;'N'
  2932  00F611  6F                 	db	111	;'o'
  2933  00F612  20                 	db	32
  2934  00F613  73                 	db	115	;'s'
  2935  00F614  79                 	db	121	;'y'
  2936  00F615  6D                 	db	109	;'m'
  2937  00F616  62                 	db	98	;'b'
  2938  00F617  6F                 	db	111	;'o'
  2939  00F618  6C                 	db	108	;'l'
  2940  00F619  73                 	db	115	;'s'
  2941  00F61A  21                 	db	33
  2942  00F61B  00                 	db	0
  2943  00F61C                     STR_169:
  2944  00F61C  4E                 	db	78	;'N'
  2945  00F61D  45                 	db	69	;'E'
  2946  00F61E  43                 	db	67	;'C'
  2947  00F61F  20                 	db	32
  2948  00F620  64                 	db	100	;'d'
  2949  00F621  65                 	db	101	;'e'
  2950  00F622  73                 	db	115	;'s'
  2951  00F623  63                 	db	99	;'c'
  2952  00F624  72                 	db	114	;'r'
  2953  00F625  69                 	db	105	;'i'
  2954  00F626  70                 	db	112	;'p'
  2955  00F627  74                 	db	116	;'t'
  2956  00F628  69                 	db	105	;'i'
  2957  00F629  6F                 	db	111	;'o'
  2958  00F62A  6E                 	db	110	;'n'
  2959  00F62B  20                 	db	32
  2960  00F62C  66                 	db	102	;'f'
  2961  00F62D  6F                 	db	111	;'o'
  2962  00F62E  72                 	db	114	;'r'
  2963  00F62F  20                 	db	32
  2964  00F630  41                 	db	65	;'A'
  2965  00F631  72                 	db	114	;'r'
  2966  00F632  62                 	db	98	;'b'
  2967  00F633  69                 	db	105	;'i'
  2968  00F634  74                 	db	116	;'t'
  2969  00F635  72                 	db	114	;'r'
  2970  00F636  61                 	db	97	;'a'
  2971  00F637  72                 	db	114	;'r'
  2972  00F638  79                 	db	121	;'y'
  2973  00F639  20                 	db	32
  2974  00F63A  63                 	db	99	;'c'
  2975  00F63B  6F                 	db	111	;'o'
  2976  00F63C  64                 	db	100	;'d'
  2977  00F63D  65                 	db	101	;'e'
  2978  00F63E  20                 	db	32
  2979  00F63F  73                 	db	115	;'s'
  2980  00F640  65                 	db	101	;'e'
  2981  00F641  6E                 	db	110	;'n'
  2982  00F642  64                 	db	100	;'d'
  2983  00F643  00                 	db	0
  2984  00F644                     STR_103:
  2985  00F644  45                 	db	69	;'E'
  2986  00F645  6E                 	db	110	;'n'
  2987  00F646  74                 	db	116	;'t'
  2988  00F647  65                 	db	101	;'e'
  2989  00F648  72                 	db	114	;'r'
  2990  00F649  20                 	db	32
  2991  00F64A  59                 	db	89	;'Y'
  2992  00F64B  20                 	db	32
  2993  00F64C  74                 	db	116	;'t'
  2994  00F64D  6F                 	db	111	;'o'
  2995  00F64E  20                 	db	32
  2996  00F64F  63                 	db	99	;'c'
  2997  00F650  68                 	db	104	;'h'
  2998  00F651  61                 	db	97	;'a'
  2999  00F652  6E                 	db	110	;'n'
  3000  00F653  67                 	db	103	;'g'
  3001  00F654  65                 	db	101	;'e'
  3002  00F655  20                 	db	32
  3003  00F656  4E                 	db	78	;'N'
  3004  00F657  61                 	db	97	;'a'
  3005  00F658  6D                 	db	109	;'m'
  3006  00F659  65                 	db	101	;'e'
  3007  00F65A  20                 	db	32
  3008  00F65B  6F                 	db	111	;'o'
  3009  00F65C  72                 	db	114	;'r'
  3010  00F65D  20                 	db	32
  3011  00F65E  4E                 	db	78	;'N'
  3012  00F65F  20                 	db	32
  3013  00F660  74                 	db	116	;'t'
  3014  00F661  6F                 	db	111	;'o'
  3015  00F662  20                 	db	32
  3016  00F663  63                 	db	99	;'c'
  3017  00F664  61                 	db	97	;'a'
  3018  00F665  6E                 	db	110	;'n'
  3019  00F666  63                 	db	99	;'c'
  3020  00F667  65                 	db	101	;'e'
  3021  00F668  6C                 	db	108	;'l'
  3022  00F669  00                 	db	0
  3023  00F66A                     STR_70:
  3024  00F66A  45                 	db	69	;'E'
  3025  00F66B  72                 	db	114	;'r'
  3026  00F66C  72                 	db	114	;'r'
  3027  00F66D  6F                 	db	111	;'o'
  3028  00F66E  72                 	db	114	;'r'
  3029  00F66F  3A                 	db	58	;':'
  3030  00F670  20                 	db	32
  3031  00F671  4E                 	db	78	;'N'
  3032  00F672  6F                 	db	111	;'o'
  3033  00F673  20                 	db	32
  3034  00F674  52                 	db	82	;'R'
  3035  00F675  46                 	db	70	;'F'
  3036  00F676  20                 	db	32
  3037  00F677  63                 	db	99	;'c'
  3038  00F678  6F                 	db	111	;'o'
  3039  00F679  6E                 	db	110	;'n'
  3040  00F67A  66                 	db	102	;'f'
  3041  00F67B  69                 	db	105	;'i'
  3042  00F67C  67                 	db	103	;'g'
  3043  00F67D  75                 	db	117	;'u'
  3044  00F67E  72                 	db	114	;'r'
  3045  00F67F  61                 	db	97	;'a'
  3046  00F680  74                 	db	116	;'t'
  3047  00F681  69                 	db	105	;'i'
  3048  00F682  6F                 	db	111	;'o'
  3049  00F683  6E                 	db	110	;'n'
  3050  00F684  20                 	db	32
  3051  00F685  73                 	db	115	;'s'
  3052  00F686  70                 	db	112	;'p'
  3053  00F687  65                 	db	101	;'e'
  3054  00F688  63                 	db	99	;'c'
  3055  00F689  69                 	db	105	;'i'
  3056  00F68A  66                 	db	102	;'f'
  3057  00F68B  69                 	db	105	;'i'
  3058  00F68C  65                 	db	101	;'e'
  3059  00F68D  64                 	db	100	;'d'
  3060  00F68E  00                 	db	0
  3061  00F68F                     STR_72:
  3062  00F68F  45                 	db	69	;'E'
  3063  00F690  72                 	db	114	;'r'
  3064  00F691  72                 	db	114	;'r'
  3065  00F692  6F                 	db	111	;'o'
  3066  00F693  72                 	db	114	;'r'
  3067  00F694  3A                 	db	58	;':'
  3068  00F695  20                 	db	32
  3069  00F696  52                 	db	82	;'R'
  3070  00F697  46                 	db	70	;'F'
  3071  00F698  20                 	db	32
  3072  00F699  63                 	db	99	;'c'
  3073  00F69A  6F                 	db	111	;'o'
  3074  00F69B  6E                 	db	110	;'n'
  3075  00F69C  66                 	db	102	;'f'
  3076  00F69D  69                 	db	105	;'i'
  3077  00F69E  67                 	db	103	;'g'
  3078  00F69F  75                 	db	117	;'u'
  3079  00F6A0  72                 	db	114	;'r'
  3080  00F6A1  61                 	db	97	;'a'
  3081  00F6A2  74                 	db	116	;'t'
  3082  00F6A3  69                 	db	105	;'i'
  3083  00F6A4  6F                 	db	111	;'o'
  3084  00F6A5  6E                 	db	110	;'n'
  3085  00F6A6  20                 	db	32
  3086  00F6A7  6F                 	db	111	;'o'
  3087  00F6A8  75                 	db	117	;'u'
  3088  00F6A9  74                 	db	116	;'t'
  3089  00F6AA  20                 	db	32
  3090  00F6AB  6F                 	db	111	;'o'
  3091  00F6AC  66                 	db	102	;'f'
  3092  00F6AD  20                 	db	32
  3093  00F6AE  72                 	db	114	;'r'
  3094  00F6AF  61                 	db	97	;'a'
  3095  00F6B0  6E                 	db	110	;'n'
  3096  00F6B1  67                 	db	103	;'g'
  3097  00F6B2  65                 	db	101	;'e'
  3098  00F6B3  00                 	db	0
  3099  00F6B4                     STR_56:
  3100  00F6B4  45                 	db	69	;'E'
  3101  00F6B5  72                 	db	114	;'r'
  3102  00F6B6  72                 	db	114	;'r'
  3103  00F6B7  6F                 	db	111	;'o'
  3104  00F6B8  72                 	db	114	;'r'
  3105  00F6B9  3A                 	db	58	;':'
  3106  00F6BA  20                 	db	32
  3107  00F6BB  52                 	db	82	;'R'
  3108  00F6BC  65                 	db	101	;'e'
  3109  00F6BD  6D                 	db	109	;'m'
  3110  00F6BE  6F                 	db	111	;'o'
  3111  00F6BF  74                 	db	116	;'t'
  3112  00F6C0  65                 	db	101	;'e'
  3113  00F6C1  20                 	db	32
  3114  00F6C2  62                 	db	98	;'b'
  3115  00F6C3  75                 	db	117	;'u'
  3116  00F6C4  74                 	db	116	;'t'
  3117  00F6C5  74                 	db	116	;'t'
  3118  00F6C6  6F                 	db	111	;'o'
  3119  00F6C7  6E                 	db	110	;'n'
  3120  00F6C8  20                 	db	32
  3121  00F6C9  6E                 	db	110	;'n'
  3122  00F6CA  75                 	db	117	;'u'
  3123  00F6CB  6D                 	db	109	;'m'
  3124  00F6CC  62                 	db	98	;'b'
  3125  00F6CD  65                 	db	101	;'e'
  3126  00F6CE  72                 	db	114	;'r'
  3127  00F6CF  20                 	db	32
  3128  00F6D0  74                 	db	116	;'t'
  3129  00F6D1  6F                 	db	111	;'o'
  3130  00F6D2  6F                 	db	111	;'o'
  3131  00F6D3  20                 	db	32
  3132  00F6D4  68                 	db	104	;'h'
  3133  00F6D5  69                 	db	105	;'i'
  3134  00F6D6  67                 	db	103	;'g'
  3135  00F6D7  68                 	db	104	;'h'
  3136  00F6D8  00                 	db	0
  3137  00F6D9                     STR_188:
  3138  00F6D9  45                 	db	69	;'E'
  3139  00F6DA  72                 	db	114	;'r'
  3140  00F6DB  72                 	db	114	;'r'
  3141  00F6DC  6F                 	db	111	;'o'
  3142  00F6DD  72                 	db	114	;'r'
  3143  00F6DE  3A                 	db	58	;':'
  3144  00F6DF  20                 	db	32
  3145  00F6E0  4E                 	db	78	;'N'
  3146  00F6E1  6F                 	db	111	;'o'
  3147  00F6E2  20                 	db	32
  3148  00F6E3  72                 	db	114	;'r'
  3149  00F6E4  65                 	db	101	;'e'
  3150  00F6E5  6D                 	db	109	;'m'
  3151  00F6E6  6F                 	db	111	;'o'
  3152  00F6E7  74                 	db	116	;'t'
  3153  00F6E8  65                 	db	101	;'e'
  3154  00F6E9  20                 	db	32
  3155  00F6EA  62                 	db	98	;'b'
  3156  00F6EB  75                 	db	117	;'u'
  3157  00F6EC  74                 	db	116	;'t'
  3158  00F6ED  74                 	db	116	;'t'
  3159  00F6EE  6F                 	db	111	;'o'
  3160  00F6EF  6E                 	db	110	;'n'
  3161  00F6F0  20                 	db	32
  3162  00F6F1  77                 	db	119	;'w'
  3163  00F6F2  61                 	db	97	;'a'
  3164  00F6F3  73                 	db	115	;'s'
  3165  00F6F4  20                 	db	32
  3166  00F6F5  70                 	db	112	;'p'
  3167  00F6F6  72                 	db	114	;'r'
  3168  00F6F7  65                 	db	101	;'e'
  3169  00F6F8  73                 	db	115	;'s'
  3170  00F6F9  73                 	db	115	;'s'
  3171  00F6FA  65                 	db	101	;'e'
  3172  00F6FB  64                 	db	100	;'d'
  3173  00F6FC  00                 	db	0
  3174  00F6FD                     STR_67:
  3175  00F6FD  45                 	db	69	;'E'
  3176  00F6FE  72                 	db	114	;'r'
  3177  00F6FF  72                 	db	114	;'r'
  3178  00F700  6F                 	db	111	;'o'
  3179  00F701  72                 	db	114	;'r'
  3180  00F702  3A                 	db	58	;':'
  3181  00F703  20                 	db	32
  3182  00F704  4E                 	db	78	;'N'
  3183  00F705  6F                 	db	111	;'o'
  3184  00F706  20                 	db	32
  3185  00F707  73                 	db	115	;'s'
  3186  00F708  70                 	db	112	;'p'
  3187  00F709  61                 	db	97	;'a'
  3188  00F70A  63                 	db	99	;'c'
  3189  00F70B  65                 	db	101	;'e'
  3190  00F70C  20                 	db	32
  3191  00F70D  61                 	db	97	;'a'
  3192  00F70E  76                 	db	118	;'v'
  3193  00F70F  61                 	db	97	;'a'
  3194  00F710  69                 	db	105	;'i'
  3195  00F711  6C                 	db	108	;'l'
  3196  00F712  61                 	db	97	;'a'
  3197  00F713  62                 	db	98	;'b'
  3198  00F714  6C                 	db	108	;'l'
  3199  00F715  65                 	db	101	;'e'
  3200  00F716  20                 	db	32
  3201  00F717  74                 	db	116	;'t'
  3202  00F718  6F                 	db	111	;'o'
  3203  00F719  20                 	db	32
  3204  00F71A  73                 	db	115	;'s'
  3205  00F71B  61                 	db	97	;'a'
  3206  00F71C  76                 	db	118	;'v'
  3207  00F71D  65                 	db	101	;'e'
  3208  00F71E  20                 	db	32
  3209  00F71F  00                 	db	0
  3210  00F720                     STR_57:
  3211  00F720  45                 	db	69	;'E'
  3212  00F721  72                 	db	114	;'r'
  3213  00F722  72                 	db	114	;'r'
  3214  00F723  6F                 	db	111	;'o'
  3215  00F724  72                 	db	114	;'r'
  3216  00F725  3A                 	db	58	;':'
  3217  00F726  20                 	db	32
  3218  00F727  52                 	db	82	;'R'
  3219  00F728  65                 	db	101	;'e'
  3220  00F729  6D                 	db	109	;'m'
  3221  00F72A  6F                 	db	111	;'o'
  3222  00F72B  74                 	db	116	;'t'
  3223  00F72C  65                 	db	101	;'e'
  3224  00F72D  20                 	db	32
  3225  00F72E  62                 	db	98	;'b'
  3226  00F72F  75                 	db	117	;'u'
  3227  00F730  74                 	db	116	;'t'
  3228  00F731  74                 	db	116	;'t'
  3229  00F732  6F                 	db	111	;'o'
  3230  00F733  6E                 	db	110	;'n'
  3231  00F734  20                 	db	32
  3232  00F735  6E                 	db	110	;'n'
  3233  00F736  6F                 	db	111	;'o'
  3234  00F737  74                 	db	116	;'t'
  3235  00F738  20                 	db	32
  3236  00F739  73                 	db	115	;'s'
  3237  00F73A  70                 	db	112	;'p'
  3238  00F73B  65                 	db	101	;'e'
  3239  00F73C  63                 	db	99	;'c'
  3240  00F73D  69                 	db	105	;'i'
  3241  00F73E  66                 	db	102	;'f'
  3242  00F73F  69                 	db	105	;'i'
  3243  00F740  65                 	db	101	;'e'
  3244  00F741  64                 	db	100	;'d'
  3245  00F742  00                 	db	0
  3246  00F743                     STR_105:
  3247  00F743  45                 	db	69	;'E'
  3248  00F744  6E                 	db	110	;'n'
  3249  00F745  74                 	db	116	;'t'
  3250  00F746  65                 	db	101	;'e'
  3251  00F747  72                 	db	114	;'r'
  3252  00F748  20                 	db	32
  3253  00F749  6E                 	db	110	;'n'
  3254  00F74A  65                 	db	101	;'e'
  3255  00F74B  77                 	db	119	;'w'
  3256  00F74C  20                 	db	32
  3257  00F74D  42                 	db	66	;'B'
  3258  00F74E  6C                 	db	108	;'l'
  3259  00F74F  75                 	db	117	;'u'
  3260  00F750  65                 	db	101	;'e'
  3261  00F751  74                 	db	116	;'t'
  3262  00F752  6F                 	db	111	;'o'
  3263  00F753  6F                 	db	111	;'o'
  3264  00F754  74                 	db	116	;'t'
  3265  00F755  68                 	db	104	;'h'
  3266  00F756  20                 	db	32
  3267  00F757  42                 	db	66	;'B'
  3268  00F758  72                 	db	114	;'r'
  3269  00F759  6F                 	db	111	;'o'
  3270  00F75A  61                 	db	97	;'a'
  3271  00F75B  64                 	db	100	;'d'
  3272  00F75C  63                 	db	99	;'c'
  3273  00F75D  61                 	db	97	;'a'
  3274  00F75E  73                 	db	115	;'s'
  3275  00F75F  74                 	db	116	;'t'
  3276  00F760  20                 	db	32
  3277  00F761  4E                 	db	78	;'N'
  3278  00F762  61                 	db	97	;'a'
  3279  00F763  6D                 	db	109	;'m'
  3280  00F764  65                 	db	101	;'e'
  3281  00F765  00                 	db	0
  3282  00F766                     STR_129:
  3283  00F766  44                 	db	68	;'D'
  3284  00F767  69                 	db	105	;'i'
  3285  00F768  73                 	db	115	;'s'
  3286  00F769  70                 	db	112	;'p'
  3287  00F76A  6C                 	db	108	;'l'
  3288  00F76B  61                 	db	97	;'a'
  3289  00F76C  79                 	db	121	;'y'
  3290  00F76D  73                 	db	115	;'s'
  3291  00F76E  20                 	db	32
  3292  00F76F  46                 	db	70	;'F'
  3293  00F770  69                 	db	105	;'i'
  3294  00F771  72                 	db	114	;'r'
  3295  00F772  6D                 	db	109	;'m'
  3296  00F773  77                 	db	119	;'w'
  3297  00F774  61                 	db	97	;'a'
  3298  00F775  72                 	db	114	;'r'
  3299  00F776  65                 	db	101	;'e'
  3300  00F777  2F                 	db	47
  3301  00F778  48                 	db	72	;'H'
  3302  00F779  61                 	db	97	;'a'
  3303  00F77A  72                 	db	114	;'r'
  3304  00F77B  64                 	db	100	;'d'
  3305  00F77C  77                 	db	119	;'w'
  3306  00F77D  61                 	db	97	;'a'
  3307  00F77E  72                 	db	114	;'r'
  3308  00F77F  65                 	db	101	;'e'
  3309  00F780  20                 	db	32
  3310  00F781  56                 	db	86	;'V'
  3311  00F782  65                 	db	101	;'e'
  3312  00F783  72                 	db	114	;'r'
  3313  00F784  73                 	db	115	;'s'
  3314  00F785  69                 	db	105	;'i'
  3315  00F786  6F                 	db	111	;'o'
  3316  00F787  6E                 	db	110	;'n'
  3317  00F788  00                 	db	0
  3318  00F789                     STR_68:
  3319  00F789  45                 	db	69	;'E'
  3320  00F78A  72                 	db	114	;'r'
  3321  00F78B  72                 	db	114	;'r'
  3322  00F78C  6F                 	db	111	;'o'
  3323  00F78D  72                 	db	114	;'r'
  3324  00F78E  3A                 	db	58	;':'
  3325  00F78F  20                 	db	32
  3326  00F790  4E                 	db	78	;'N'
  3327  00F791  45                 	db	69	;'E'
  3328  00F792  43                 	db	67	;'C'
  3329  00F793  20                 	db	32
  3330  00F794  63                 	db	99	;'c'
  3331  00F795  6F                 	db	111	;'o'
  3332  00F796  64                 	db	100	;'d'
  3333  00F797  65                 	db	101	;'e'
  3334  00F798  20                 	db	32
  3335  00F799  61                 	db	97	;'a'
  3336  00F79A  6C                 	db	108	;'l'
  3337  00F79B  72                 	db	114	;'r'
  3338  00F79C  65                 	db	101	;'e'
  3339  00F79D  61                 	db	97	;'a'
  3340  00F79E  64                 	db	100	;'d'
  3341  00F79F  79                 	db	121	;'y'
  3342  00F7A0  20                 	db	32
  3343  00F7A1  73                 	db	115	;'s'
  3344  00F7A2  61                 	db	97	;'a'
  3345  00F7A3  76                 	db	118	;'v'
  3346  00F7A4  65                 	db	101	;'e'
  3347  00F7A5  64                 	db	100	;'d'
  3348  00F7A6  20                 	db	32
  3349  00F7A7  74                 	db	116	;'t'
  3350  00F7A8  6F                 	db	111	;'o'
  3351  00F7A9  20                 	db	32
  3352  00F7AA  00                 	db	0
  3353  00F7AB                     STR_172:
  3354  00F7AB  53                 	db	83	;'S'
  3355  00F7AC  65                 	db	101	;'e'
  3356  00F7AD  6E                 	db	110	;'n'
  3357  00F7AE  64                 	db	100	;'d'
  3358  00F7AF  20                 	db	32
  3359  00F7B0  61                 	db	97	;'a'
  3360  00F7B1  6C                 	db	108	;'l'
  3361  00F7B2  6C                 	db	108	;'l'
  3362  00F7B3  20                 	db	32
  3363  00F7B4  52                 	db	82	;'R'
  3364  00F7B5  66                 	db	102	;'f'
  3365  00F7B6  20                 	db	32
  3366  00F7B7  63                 	db	99	;'c'
  3367  00F7B8  6F                 	db	111	;'o'
  3368  00F7B9  64                 	db	100	;'d'
  3369  00F7BA  65                 	db	101	;'e'
  3370  00F7BB  73                 	db	115	;'s'
  3371  00F7BC  20                 	db	32
  3372  00F7BD  61                 	db	97	;'a'
  3373  00F7BE  73                 	db	115	;'s'
  3374  00F7BF  20                 	db	32
  3375  00F7C0  73                 	db	115	;'s'
  3376  00F7C1  74                 	db	116	;'t'
  3377  00F7C2  61                 	db	97	;'a'
  3378  00F7C3  74                 	db	116	;'t'
  3379  00F7C4  65                 	db	101	;'e'
  3380  00F7C5  64                 	db	100	;'d'
  3381  00F7C6  20                 	db	32
  3382  00F7C7  62                 	db	98	;'b'
  3383  00F7C8  65                 	db	101	;'e'
  3384  00F7C9  6C                 	db	108	;'l'
  3385  00F7CA  6F                 	db	111	;'o'
  3386  00F7CB  77                 	db	119	;'w'
  3387  00F7CC  00                 	db	0
  3388  00F7CD                     STR_100:
  3389  00F7CD  53                 	db	83	;'S'
  3390  00F7CE  65                 	db	101	;'e'
  3391  00F7CF  72                 	db	114	;'r'
  3392  00F7D0  69                 	db	105	;'i'
  3393  00F7D1  61                 	db	97	;'a'
  3394  00F7D2  6C                 	db	108	;'l'
  3395  00F7D3  20                 	db	32
  3396  00F7D4  4E                 	db	78	;'N'
  3397  00F7D5  75                 	db	117	;'u'
  3398  00F7D6  6D                 	db	109	;'m'
  3399  00F7D7  62                 	db	98	;'b'
  3400  00F7D8  65                 	db	101	;'e'
  3401  00F7D9  72                 	db	114	;'r'
  3402  00F7DA  20                 	db	32
  3403  00F7DB  65                 	db	101	;'e'
  3404  00F7DC  6E                 	db	110	;'n'
  3405  00F7DD  74                 	db	116	;'t'
  3406  00F7DE  65                 	db	101	;'e'
  3407  00F7DF  72                 	db	114	;'r'
  3408  00F7E0  65                 	db	101	;'e'
  3409  00F7E1  64                 	db	100	;'d'
  3410  00F7E2  20                 	db	32
  3411  00F7E3  69                 	db	105	;'i'
  3412  00F7E4  6E                 	db	110	;'n'
  3413  00F7E5  63                 	db	99	;'c'
  3414  00F7E6  6F                 	db	111	;'o'
  3415  00F7E7  72                 	db	114	;'r'
  3416  00F7E8  72                 	db	114	;'r'
  3417  00F7E9  65                 	db	101	;'e'
  3418  00F7EA  63                 	db	99	;'c'
  3419  00F7EB  74                 	db	116	;'t'
  3420  00F7EC  6C                 	db	108	;'l'
  3421  00F7ED  79                 	db	121	;'y'
  3422  00F7EE  00                 	db	0
  3423  00F7EF                     STR_38:
  3424  00F7EF  45                 	db	69	;'E'
  3425  00F7F0  72                 	db	114	;'r'
  3426  00F7F1  72                 	db	114	;'r'
  3427  00F7F2  6F                 	db	111	;'o'
  3428  00F7F3  72                 	db	114	;'r'
  3429  00F7F4  3A                 	db	58	;':'
  3430  00F7F5  20                 	db	32
  3431  00F7F6  63                 	db	99	;'c'
  3432  00F7F7  6F                 	db	111	;'o'
  3433  00F7F8  75                 	db	117	;'u'
  3434  00F7F9  6C                 	db	108	;'l'
  3435  00F7FA  64                 	db	100	;'d'
  3436  00F7FB  20                 	db	32
  3437  00F7FC  6E                 	db	110	;'n'
  3438  00F7FD  6F                 	db	111	;'o'
  3439  00F7FE  74                 	db	116	;'t'
  3440  00F7FF  20                 	db	32
  3441  00F800  64                 	db	100	;'d'
  3442  00F801  65                 	db	101	;'e'
  3443  00F802  63                 	db	99	;'c'
  3444  00F803  6F                 	db	111	;'o'
  3445  00F804  64                 	db	100	;'d'
  3446  00F805  65                 	db	101	;'e'
  3447  00F806  20                 	db	32
  3448  00F807  4E                 	db	78	;'N'
  3449  00F808  45                 	db	69	;'E'
  3450  00F809  43                 	db	67	;'C'
  3451  00F80A  20                 	db	32
  3452  00F80B  63                 	db	99	;'c'
  3453  00F80C  6F                 	db	111	;'o'
  3454  00F80D  64                 	db	100	;'d'
  3455  00F80E  65                 	db	101	;'e'
  3456  00F80F  00                 	db	0
  3457  00F810                     STR_133:
  3458  00F810  43                 	db	67	;'C'
  3459  00F811  68                 	db	104	;'h'
  3460  00F812  61                 	db	97	;'a'
  3461  00F813  6E                 	db	110	;'n'
  3462  00F814  67                 	db	103	;'g'
  3463  00F815  65                 	db	101	;'e'
  3464  00F816  73                 	db	115	;'s'
  3465  00F817  20                 	db	32
  3466  00F818  42                 	db	66	;'B'
  3467  00F819  6C                 	db	108	;'l'
  3468  00F81A  75                 	db	117	;'u'
  3469  00F81B  65                 	db	101	;'e'
  3470  00F81C  74                 	db	116	;'t'
  3471  00F81D  6F                 	db	111	;'o'
  3472  00F81E  6F                 	db	111	;'o'
  3473  00F81F  74                 	db	116	;'t'
  3474  00F820  68                 	db	104	;'h'
  3475  00F821  20                 	db	32
  3476  00F822  42                 	db	66	;'B'
  3477  00F823  72                 	db	114	;'r'
  3478  00F824  6F                 	db	111	;'o'
  3479  00F825  61                 	db	97	;'a'
  3480  00F826  64                 	db	100	;'d'
  3481  00F827  63                 	db	99	;'c'
  3482  00F828  61                 	db	97	;'a'
  3483  00F829  73                 	db	115	;'s'
  3484  00F82A  74                 	db	116	;'t'
  3485  00F82B  20                 	db	32
  3486  00F82C  4E                 	db	78	;'N'
  3487  00F82D  61                 	db	97	;'a'
  3488  00F82E  6D                 	db	109	;'m'
  3489  00F82F  65                 	db	101	;'e'
  3490  00F830  00                 	db	0
  3491  00F831                     STR_181:
  3492  00F831  52                 	db	82	;'R'
  3493  00F832  43                 	db	67	;'C'
  3494  00F833  2D                 	db	45
  3495  00F834  30                 	db	48	;'0'
  3496  00F835  31                 	db	49	;'1'
  3497  00F836  35                 	db	53	;'5'
  3498  00F837  2A                 	db	42
  3499  00F838  33                 	db	51	;'3'
  3500  00F839  20                 	db	32
  3501  00F83A  43                 	db	67	;'C'
  3502  00F83B  68                 	db	104	;'h'
  3503  00F83C  61                 	db	97	;'a'
  3504  00F83D  6E                 	db	110	;'n'
  3505  00F83E  6E                 	db	110	;'n'
  3506  00F83F  65                 	db	101	;'e'
  3507  00F840  6C                 	db	108	;'l'
  3508  00F841  20                 	db	32
  3509  00F842  48                 	db	72	;'H'
  3510  00F843  20                 	db	32
  3511  00F844  64                 	db	100	;'d'
  3512  00F845  65                 	db	101	;'e'
  3513  00F846  76                 	db	118	;'v'
  3514  00F847  69                 	db	105	;'i'
  3515  00F848  63                 	db	99	;'c'
  3516  00F849  65                 	db	101	;'e'
  3517  00F84A  20                 	db	32
  3518  00F84B  31                 	db	49	;'1'
  3519  00F84C  20                 	db	32
  3520  00F84D  4F                 	db	79	;'O'
  3521  00F84E  46                 	db	70	;'F'
  3522  00F84F  46                 	db	70	;'F'
  3523  00F850  00                 	db	0
  3524  00F851                     STR_183:
  3525  00F851  52                 	db	82	;'R'
  3526  00F852  43                 	db	67	;'C'
  3527  00F853  2D                 	db	45
  3528  00F854  30                 	db	48	;'0'
  3529  00F855  31                 	db	49	;'1'
  3530  00F856  35                 	db	53	;'5'
  3531  00F857  2A                 	db	42
  3532  00F858  33                 	db	51	;'3'
  3533  00F859  20                 	db	32
  3534  00F85A  43                 	db	67	;'C'
  3535  00F85B  68                 	db	104	;'h'
  3536  00F85C  61                 	db	97	;'a'
  3537  00F85D  6E                 	db	110	;'n'
  3538  00F85E  6E                 	db	110	;'n'
  3539  00F85F  65                 	db	101	;'e'
  3540  00F860  6C                 	db	108	;'l'
  3541  00F861  20                 	db	32
  3542  00F862  48                 	db	72	;'H'
  3543  00F863  20                 	db	32
  3544  00F864  64                 	db	100	;'d'
  3545  00F865  65                 	db	101	;'e'
  3546  00F866  76                 	db	118	;'v'
  3547  00F867  69                 	db	105	;'i'
  3548  00F868  63                 	db	99	;'c'
  3549  00F869  65                 	db	101	;'e'
  3550  00F86A  20                 	db	32
  3551  00F86B  32                 	db	50	;'2'
  3552  00F86C  20                 	db	32
  3553  00F86D  4F                 	db	79	;'O'
  3554  00F86E  46                 	db	70	;'F'
  3555  00F86F  46                 	db	70	;'F'
  3556  00F870  00                 	db	0
  3557  00F871                     STR_185:
  3558  00F871  52                 	db	82	;'R'
  3559  00F872  43                 	db	67	;'C'
  3560  00F873  2D                 	db	45
  3561  00F874  30                 	db	48	;'0'
  3562  00F875  31                 	db	49	;'1'
  3563  00F876  35                 	db	53	;'5'
  3564  00F877  2A                 	db	42
  3565  00F878  33                 	db	51	;'3'
  3566  00F879  20                 	db	32
  3567  00F87A  43                 	db	67	;'C'
  3568  00F87B  68                 	db	104	;'h'
  3569  00F87C  61                 	db	97	;'a'
  3570  00F87D  6E                 	db	110	;'n'
  3571  00F87E  6E                 	db	110	;'n'
  3572  00F87F  65                 	db	101	;'e'
  3573  00F880  6C                 	db	108	;'l'
  3574  00F881  20                 	db	32
  3575  00F882  48                 	db	72	;'H'
  3576  00F883  20                 	db	32
  3577  00F884  64                 	db	100	;'d'
  3578  00F885  65                 	db	101	;'e'
  3579  00F886  76                 	db	118	;'v'
  3580  00F887  69                 	db	105	;'i'
  3581  00F888  63                 	db	99	;'c'
  3582  00F889  65                 	db	101	;'e'
  3583  00F88A  20                 	db	32
  3584  00F88B  33                 	db	51	;'3'
  3585  00F88C  20                 	db	32
  3586  00F88D  4F                 	db	79	;'O'
  3587  00F88E  46                 	db	70	;'F'
  3588  00F88F  46                 	db	70	;'F'
  3589  00F890  00                 	db	0
  3590  00F891                     STR_127:
  3591  00F891  43                 	db	67	;'C'
  3592  00F892  6C                 	db	108	;'l'
  3593  00F893  65                 	db	101	;'e'
  3594  00F894  61                 	db	97	;'a'
  3595  00F895  72                 	db	114	;'r'
  3596  00F896  73                 	db	115	;'s'
  3597  00F897  20                 	db	32
  3598  00F898  6D                 	db	109	;'m'
  3599  00F899  65                 	db	101	;'e'
  3600  00F89A  6D                 	db	109	;'m'
  3601  00F89B  6F                 	db	111	;'o'
  3602  00F89C  72                 	db	114	;'r'
  3603  00F89D  79                 	db	121	;'y'
  3604  00F89E  20                 	db	32
  3605  00F89F  61                 	db	97	;'a'
  3606  00F8A0  6E                 	db	110	;'n'
  3607  00F8A1  64                 	db	100	;'d'
  3608  00F8A2  20                 	db	32
  3609  00F8A3  72                 	db	114	;'r'
  3610  00F8A4  65                 	db	101	;'e'
  3611  00F8A5  73                 	db	115	;'s'
  3612  00F8A6  65                 	db	101	;'e'
  3613  00F8A7  74                 	db	116	;'t'
  3614  00F8A8  73                 	db	115	;'s'
  3615  00F8A9  20                 	db	32
  3616  00F8AA  64                 	db	100	;'d'
  3617  00F8AB  65                 	db	101	;'e'
  3618  00F8AC  76                 	db	118	;'v'
  3619  00F8AD  69                 	db	105	;'i'
  3620  00F8AE  63                 	db	99	;'c'
  3621  00F8AF  65                 	db	101	;'e'
  3622  00F8B0  00                 	db	0
  3623  00F8B1                     STR_86:
  3624  00F8B1  45                 	db	69	;'E'
  3625  00F8B2  6E                 	db	110	;'n'
  3626  00F8B3  74                 	db	116	;'t'
  3627  00F8B4  65                 	db	101	;'e'
  3628  00F8B5  72                 	db	114	;'r'
  3629  00F8B6  20                 	db	32
  3630  00F8B7  59                 	db	89	;'Y'
  3631  00F8B8  20                 	db	32
  3632  00F8B9  74                 	db	116	;'t'
  3633  00F8BA  6F                 	db	111	;'o'
  3634  00F8BB  20                 	db	32
  3635  00F8BC  72                 	db	114	;'r'
  3636  00F8BD  65                 	db	101	;'e'
  3637  00F8BE  73                 	db	115	;'s'
  3638  00F8BF  65                 	db	101	;'e'
  3639  00F8C0  74                 	db	116	;'t'
  3640  00F8C1  20                 	db	32
  3641  00F8C2  6F                 	db	111	;'o'
  3642  00F8C3  72                 	db	114	;'r'
  3643  00F8C4  20                 	db	32
  3644  00F8C5  4E                 	db	78	;'N'
  3645  00F8C6  20                 	db	32
  3646  00F8C7  74                 	db	116	;'t'
  3647  00F8C8  6F                 	db	111	;'o'
  3648  00F8C9  20                 	db	32
  3649  00F8CA  63                 	db	99	;'c'
  3650  00F8CB  61                 	db	97	;'a'
  3651  00F8CC  6E                 	db	110	;'n'
  3652  00F8CD  63                 	db	99	;'c'
  3653  00F8CE  65                 	db	101	;'e'
  3654  00F8CF  6C                 	db	108	;'l'
  3655  00F8D0  00                 	db	0
  3656  00F8D1                     STR_34:
  3657  00F8D1  45                 	db	69	;'E'
  3658  00F8D2  72                 	db	114	;'r'
  3659  00F8D3  72                 	db	114	;'r'
  3660  00F8D4  6F                 	db	111	;'o'
  3661  00F8D5  72                 	db	114	;'r'
  3662  00F8D6  3A                 	db	58	;':'
  3663  00F8D7  20                 	db	32
  3664  00F8D8  63                 	db	99	;'c'
  3665  00F8D9  6F                 	db	111	;'o'
  3666  00F8DA  75                 	db	117	;'u'
  3667  00F8DB  6C                 	db	108	;'l'
  3668  00F8DC  64                 	db	100	;'d'
  3669  00F8DD  20                 	db	32
  3670  00F8DE  6E                 	db	110	;'n'
  3671  00F8DF  6F                 	db	111	;'o'
  3672  00F8E0  74                 	db	116	;'t'
  3673  00F8E1  20                 	db	32
  3674  00F8E2  64                 	db	100	;'d'
  3675  00F8E3  65                 	db	101	;'e'
  3676  00F8E4  63                 	db	99	;'c'
  3677  00F8E5  6F                 	db	111	;'o'
  3678  00F8E6  64                 	db	100	;'d'
  3679  00F8E7  65                 	db	101	;'e'
  3680  00F8E8  20                 	db	32
  3681  00F8E9  41                 	db	65	;'A'
  3682  00F8EA  64                 	db	100	;'d'
  3683  00F8EB  64                 	db	100	;'d'
  3684  00F8EC  72                 	db	114	;'r'
  3685  00F8ED  65                 	db	101	;'e'
  3686  00F8EE  73                 	db	115	;'s'
  3687  00F8EF  73                 	db	115	;'s'
  3688  00F8F0  00                 	db	0
  3689  00F8F1                     STR_29:
  3690  00F8F1  45                 	db	69	;'E'
  3691  00F8F2  72                 	db	114	;'r'
  3692  00F8F3  72                 	db	114	;'r'
  3693  00F8F4  6F                 	db	111	;'o'
  3694  00F8F5  72                 	db	114	;'r'
  3695  00F8F6  3A                 	db	58	;':'
  3696  00F8F7  20                 	db	32
  3697  00F8F8  43                 	db	67	;'C'
  3698  00F8F9  6F                 	db	111	;'o'
  3699  00F8FA  6D                 	db	109	;'m'
  3700  00F8FB  6D                 	db	109	;'m'
  3701  00F8FC  61                 	db	97	;'a'
  3702  00F8FD  6E                 	db	110	;'n'
  3703  00F8FE  64                 	db	100	;'d'
  3704  00F8FF  20                 	db	32
  3705  00F900  6C                 	db	108	;'l'
  3706  00F901  61                 	db	97	;'a'
  3707  00F902  72                 	db	114	;'r'
  3708  00F903  67                 	db	103	;'g'
  3709  00F904  65                 	db	101	;'e'
  3710  00F905  72                 	db	114	;'r'
  3711  00F906  20                 	db	32
  3712  00F907  74                 	db	116	;'t'
  3713  00F908  68                 	db	104	;'h'
  3714  00F909  61                 	db	97	;'a'
  3715  00F90A  74                 	db	116	;'t'
  3716  00F90B  20                 	db	32
  3717  00F90C  32                 	db	50	;'2'
  3718  00F90D  35                 	db	53	;'5'
  3719  00F90E  35                 	db	53	;'5'
  3720  00F90F  00                 	db	0
  3721  00F910                     STR_30:
  3722  00F910  45                 	db	69	;'E'
  3723  00F911  72                 	db	114	;'r'
  3724  00F912  72                 	db	114	;'r'
  3725  00F913  6F                 	db	111	;'o'
  3726  00F914  72                 	db	114	;'r'
  3727  00F915  3A                 	db	58	;':'
  3728  00F916  20                 	db	32
  3729  00F917  41                 	db	65	;'A'
  3730  00F918  64                 	db	100	;'d'
  3731  00F919  64                 	db	100	;'d'
  3732  00F91A  72                 	db	114	;'r'
  3733  00F91B  65                 	db	101	;'e'
  3734  00F91C  73                 	db	115	;'s'
  3735  00F91D  73                 	db	115	;'s'
  3736  00F91E  20                 	db	32
  3737  00F91F  6C                 	db	108	;'l'
  3738  00F920  61                 	db	97	;'a'
  3739  00F921  72                 	db	114	;'r'
  3740  00F922  67                 	db	103	;'g'
  3741  00F923  65                 	db	101	;'e'
  3742  00F924  72                 	db	114	;'r'
  3743  00F925  20                 	db	32
  3744  00F926  74                 	db	116	;'t'
  3745  00F927  68                 	db	104	;'h'
  3746  00F928  61                 	db	97	;'a'
  3747  00F929  74                 	db	116	;'t'
  3748  00F92A  20                 	db	32
  3749  00F92B  32                 	db	50	;'2'
  3750  00F92C  35                 	db	53	;'5'
  3751  00F92D  35                 	db	53	;'5'
  3752  00F92E  00                 	db	0
  3753  00F92F                     STR_180:
  3754  00F92F  52                 	db	82	;'R'
  3755  00F930  43                 	db	67	;'C'
  3756  00F931  2D                 	db	45
  3757  00F932  30                 	db	48	;'0'
  3758  00F933  31                 	db	49	;'1'
  3759  00F934  35                 	db	53	;'5'
  3760  00F935  2A                 	db	42
  3761  00F936  33                 	db	51	;'3'
  3762  00F937  20                 	db	32
  3763  00F938  43                 	db	67	;'C'
  3764  00F939  68                 	db	104	;'h'
  3765  00F93A  61                 	db	97	;'a'
  3766  00F93B  6E                 	db	110	;'n'
  3767  00F93C  6E                 	db	110	;'n'
  3768  00F93D  65                 	db	101	;'e'
  3769  00F93E  6C                 	db	108	;'l'
  3770  00F93F  20                 	db	32
  3771  00F940  48                 	db	72	;'H'
  3772  00F941  20                 	db	32
  3773  00F942  64                 	db	100	;'d'
  3774  00F943  65                 	db	101	;'e'
  3775  00F944  76                 	db	118	;'v'
  3776  00F945  69                 	db	105	;'i'
  3777  00F946  63                 	db	99	;'c'
  3778  00F947  65                 	db	101	;'e'
  3779  00F948  20                 	db	32
  3780  00F949  31                 	db	49	;'1'
  3781  00F94A  20                 	db	32
  3782  00F94B  4F                 	db	79	;'O'
  3783  00F94C  4E                 	db	78	;'N'
  3784  00F94D  00                 	db	0
  3785  00F94E                     STR_182:
  3786  00F94E  52                 	db	82	;'R'
  3787  00F94F  43                 	db	67	;'C'
  3788  00F950  2D                 	db	45
  3789  00F951  30                 	db	48	;'0'
  3790  00F952  31                 	db	49	;'1'
  3791  00F953  35                 	db	53	;'5'
  3792  00F954  2A                 	db	42
  3793  00F955  33                 	db	51	;'3'
  3794  00F956  20                 	db	32
  3795  00F957  43                 	db	67	;'C'
  3796  00F958  68                 	db	104	;'h'
  3797  00F959  61                 	db	97	;'a'
  3798  00F95A  6E                 	db	110	;'n'
  3799  00F95B  6E                 	db	110	;'n'
  3800  00F95C  65                 	db	101	;'e'
  3801  00F95D  6C                 	db	108	;'l'
  3802  00F95E  20                 	db	32
  3803  00F95F  48                 	db	72	;'H'
  3804  00F960  20                 	db	32
  3805  00F961  64                 	db	100	;'d'
  3806  00F962  65                 	db	101	;'e'
  3807  00F963  76                 	db	118	;'v'
  3808  00F964  69                 	db	105	;'i'
  3809  00F965  63                 	db	99	;'c'
  3810  00F966  65                 	db	101	;'e'
  3811  00F967  20                 	db	32
  3812  00F968  32                 	db	50	;'2'
  3813  00F969  20                 	db	32
  3814  00F96A  4F                 	db	79	;'O'
  3815  00F96B  4E                 	db	78	;'N'
  3816  00F96C  00                 	db	0
  3817  00F96D                     STR_184:
  3818  00F96D  52                 	db	82	;'R'
  3819  00F96E  43                 	db	67	;'C'
  3820  00F96F  2D                 	db	45
  3821  00F970  30                 	db	48	;'0'
  3822  00F971  31                 	db	49	;'1'
  3823  00F972  35                 	db	53	;'5'
  3824  00F973  2A                 	db	42
  3825  00F974  33                 	db	51	;'3'
  3826  00F975  20                 	db	32
  3827  00F976  43                 	db	67	;'C'
  3828  00F977  68                 	db	104	;'h'
  3829  00F978  61                 	db	97	;'a'
  3830  00F979  6E                 	db	110	;'n'
  3831  00F97A  6E                 	db	110	;'n'
  3832  00F97B  65                 	db	101	;'e'
  3833  00F97C  6C                 	db	108	;'l'
  3834  00F97D  20                 	db	32
  3835  00F97E  48                 	db	72	;'H'
  3836  00F97F  20                 	db	32
  3837  00F980  64                 	db	100	;'d'
  3838  00F981  65                 	db	101	;'e'
  3839  00F982  76                 	db	118	;'v'
  3840  00F983  69                 	db	105	;'i'
  3841  00F984  63                 	db	99	;'c'
  3842  00F985  65                 	db	101	;'e'
  3843  00F986  20                 	db	32
  3844  00F987  33                 	db	51	;'3'
  3845  00F988  20                 	db	32
  3846  00F989  4F                 	db	79	;'O'
  3847  00F98A  4E                 	db	78	;'N'
  3848  00F98B  00                 	db	0
  3849  00F98C                     STR_73:
  3850  00F98C  45                 	db	69	;'E'
  3851  00F98D  72                 	db	114	;'r'
  3852  00F98E  72                 	db	114	;'r'
  3853  00F98F  6F                 	db	111	;'o'
  3854  00F990  72                 	db	114	;'r'
  3855  00F991  3A                 	db	58	;':'
  3856  00F992  20                 	db	32
  3857  00F993  4E                 	db	78	;'N'
  3858  00F994  6F                 	db	111	;'o'
  3859  00F995  20                 	db	32
  3860  00F996  52                 	db	82	;'R'
  3861  00F997  46                 	db	70	;'F'
  3862  00F998  20                 	db	32
  3863  00F999  63                 	db	99	;'c'
  3864  00F99A  68                 	db	104	;'h'
  3865  00F99B  61                 	db	97	;'a'
  3866  00F99C  6E                 	db	110	;'n'
  3867  00F99D  6E                 	db	110	;'n'
  3868  00F99E  65                 	db	101	;'e'
  3869  00F99F  6C                 	db	108	;'l'
  3870  00F9A0  20                 	db	32
  3871  00F9A1  73                 	db	115	;'s'
  3872  00F9A2  70                 	db	112	;'p'
  3873  00F9A3  65                 	db	101	;'e'
  3874  00F9A4  63                 	db	99	;'c'
  3875  00F9A5  69                 	db	105	;'i'
  3876  00F9A6  66                 	db	102	;'f'
  3877  00F9A7  69                 	db	105	;'i'
  3878  00F9A8  65                 	db	101	;'e'
  3879  00F9A9  64                 	db	100	;'d'
  3880  00F9AA  00                 	db	0
  3881  00F9AB                     STR_74:
  3882  00F9AB  45                 	db	69	;'E'
  3883  00F9AC  72                 	db	114	;'r'
  3884  00F9AD  72                 	db	114	;'r'
  3885  00F9AE  6F                 	db	111	;'o'
  3886  00F9AF  72                 	db	114	;'r'
  3887  00F9B0  3A                 	db	58	;':'
  3888  00F9B1  20                 	db	32
  3889  00F9B2  52                 	db	82	;'R'
  3890  00F9B3  46                 	db	70	;'F'
  3891  00F9B4  20                 	db	32
  3892  00F9B5  63                 	db	99	;'c'
  3893  00F9B6  68                 	db	104	;'h'
  3894  00F9B7  61                 	db	97	;'a'
  3895  00F9B8  6E                 	db	110	;'n'
  3896  00F9B9  6E                 	db	110	;'n'
  3897  00F9BA  65                 	db	101	;'e'
  3898  00F9BB  6C                 	db	108	;'l'
  3899  00F9BC  20                 	db	32
  3900  00F9BD  6F                 	db	111	;'o'
  3901  00F9BE  75                 	db	117	;'u'
  3902  00F9BF  74                 	db	116	;'t'
  3903  00F9C0  20                 	db	32
  3904  00F9C1  6F                 	db	111	;'o'
  3905  00F9C2  66                 	db	102	;'f'
  3906  00F9C3  20                 	db	32
  3907  00F9C4  72                 	db	114	;'r'
  3908  00F9C5  61                 	db	97	;'a'
  3909  00F9C6  6E                 	db	110	;'n'
  3910  00F9C7  67                 	db	103	;'g'
  3911  00F9C8  65                 	db	101	;'e'
  3912  00F9C9  00                 	db	0
  3913  00F9CA                     STR_40:
  3914  00F9CA  4E                 	db	78	;'N'
  3915  00F9CB  45                 	db	69	;'E'
  3916  00F9CC  43                 	db	67	;'C'
  3917  00F9CD  20                 	db	32
  3918  00F9CE  63                 	db	99	;'c'
  3919  00F9CF  6F                 	db	111	;'o'
  3920  00F9D0  64                 	db	100	;'d'
  3921  00F9D1  65                 	db	101	;'e'
  3922  00F9D2  20                 	db	32
  3923  00F9D3  6E                 	db	110	;'n'
  3924  00F9D4  6F                 	db	111	;'o'
  3925  00F9D5  74                 	db	116	;'t'
  3926  00F9D6  20                 	db	32
  3927  00F9D7  65                 	db	101	;'e'
  3928  00F9D8  6E                 	db	110	;'n'
  3929  00F9D9  74                 	db	116	;'t'
  3930  00F9DA  65                 	db	101	;'e'
  3931  00F9DB  72                 	db	114	;'r'
  3932  00F9DC  65                 	db	101	;'e'
  3933  00F9DD  64                 	db	100	;'d'
  3934  00F9DE  20                 	db	32
  3935  00F9DF  63                 	db	99	;'c'
  3936  00F9E0  6F                 	db	111	;'o'
  3937  00F9E1  72                 	db	114	;'r'
  3938  00F9E2  72                 	db	114	;'r'
  3939  00F9E3  65                 	db	101	;'e'
  3940  00F9E4  63                 	db	99	;'c'
  3941  00F9E5  74                 	db	116	;'t'
  3942  00F9E6  6C                 	db	108	;'l'
  3943  00F9E7  79                 	db	121	;'y'
  3944  00F9E8  00                 	db	0
  3945  00F9E9                     STR_87:
  3946  00F9E9  44                 	db	68	;'D'
  3947  00F9EA  65                 	db	101	;'e'
  3948  00F9EB  76                 	db	118	;'v'
  3949  00F9EC  69                 	db	105	;'i'
  3950  00F9ED  63                 	db	99	;'c'
  3951  00F9EE  65                 	db	101	;'e'
  3952  00F9EF  20                 	db	32
  3953  00F9F0  72                 	db	114	;'r'
  3954  00F9F1  65                 	db	101	;'e'
  3955  00F9F2  73                 	db	115	;'s'
  3956  00F9F3  75                 	db	117	;'u'
  3957  00F9F4  6D                 	db	109	;'m'
  3958  00F9F5  65                 	db	101	;'e'
  3959  00F9F6  73                 	db	115	;'s'
  3960  00F9F7  20                 	db	32
  3961  00F9F8  77                 	db	119	;'w'
  3962  00F9F9  69                 	db	105	;'i'
  3963  00F9FA  74                 	db	116	;'t'
  3964  00F9FB  68                 	db	104	;'h'
  3965  00F9FC  6F                 	db	111	;'o'
  3966  00F9FD  75                 	db	117	;'u'
  3967  00F9FE  74                 	db	116	;'t'
  3968  00F9FF  20                 	db	32
  3969  00FA00  72                 	db	114	;'r'
  3970  00FA01  65                 	db	101	;'e'
  3971  00FA02  73                 	db	115	;'s'
  3972  00FA03  65                 	db	101	;'e'
  3973  00FA04  74                 	db	116	;'t'
  3974  00FA05  00                 	db	0
  3975  00FA06                     STR_25:
  3976  00FA06  43                 	db	67	;'C'
  3977  00FA07  6F                 	db	111	;'o'
  3978  00FA08  6E                 	db	110	;'n'
  3979  00FA09  66                 	db	102	;'f'
  3980  00FA0A  69                 	db	105	;'i'
  3981  00FA0B  67                 	db	103	;'g'
  3982  00FA0C  75                 	db	117	;'u'
  3983  00FA0D  72                 	db	114	;'r'
  3984  00FA0E  61                 	db	97	;'a'
  3985  00FA0F  74                 	db	116	;'t'
  3986  00FA10  69                 	db	105	;'i'
  3987  00FA11  6F                 	db	111	;'o'
  3988  00FA12  6E                 	db	110	;'n'
  3989  00FA13  20                 	db	32
  3990  00FA14  31                 	db	49	;'1'
  3991  00FA15  20                 	db	32
  3992  00FA16  52                 	db	82	;'R'
  3993  00FA17  46                 	db	70	;'F'
  3994  00FA18  20                 	db	32
  3995  00FA19  63                 	db	99	;'c'
  3996  00FA1A  6F                 	db	111	;'o'
  3997  00FA1B  64                 	db	100	;'d'
  3998  00FA1C  65                 	db	101	;'e'
  3999  00FA1D  20                 	db	32
  4000  00FA1E  73                 	db	115	;'s'
  4001  00FA1F  65                 	db	101	;'e'
  4002  00FA20  6E                 	db	110	;'n'
  4003  00FA21  74                 	db	116	;'t'
  4004  00FA22  00                 	db	0
  4005  00FA23                     STR_27:
  4006  00FA23  43                 	db	67	;'C'
  4007  00FA24  6F                 	db	111	;'o'
  4008  00FA25  6E                 	db	110	;'n'
  4009  00FA26  66                 	db	102	;'f'
  4010  00FA27  69                 	db	105	;'i'
  4011  00FA28  67                 	db	103	;'g'
  4012  00FA29  75                 	db	117	;'u'
  4013  00FA2A  72                 	db	114	;'r'
  4014  00FA2B  61                 	db	97	;'a'
  4015  00FA2C  74                 	db	116	;'t'
  4016  00FA2D  69                 	db	105	;'i'
  4017  00FA2E  6F                 	db	111	;'o'
  4018  00FA2F  6E                 	db	110	;'n'
  4019  00FA30  20                 	db	32
  4020  00FA31  32                 	db	50	;'2'
  4021  00FA32  20                 	db	32
  4022  00FA33  52                 	db	82	;'R'
  4023  00FA34  46                 	db	70	;'F'
  4024  00FA35  20                 	db	32
  4025  00FA36  63                 	db	99	;'c'
  4026  00FA37  6F                 	db	111	;'o'
  4027  00FA38  64                 	db	100	;'d'
  4028  00FA39  65                 	db	101	;'e'
  4029  00FA3A  20                 	db	32
  4030  00FA3B  73                 	db	115	;'s'
  4031  00FA3C  65                 	db	101	;'e'
  4032  00FA3D  6E                 	db	110	;'n'
  4033  00FA3E  74                 	db	116	;'t'
  4034  00FA3F  00                 	db	0
  4035  00FA40                     STR_115:
  4036  00FA40  50                 	db	80	;'P'
  4037  00FA41  43                 	db	67	;'C'
  4038  00FA42  42                 	db	66	;'B'
  4039  00FA43  20                 	db	32
  4040  00FA44  68                 	db	104	;'h'
  4041  00FA45  61                 	db	97	;'a'
  4042  00FA46  73                 	db	115	;'s'
  4043  00FA47  20                 	db	32
  4044  00FA48  42                 	db	66	;'B'
  4045  00FA49  6C                 	db	108	;'l'
  4046  00FA4A  75                 	db	117	;'u'
  4047  00FA4B  65                 	db	101	;'e'
  4048  00FA4C  74                 	db	116	;'t'
  4049  00FA4D  6F                 	db	111	;'o'
  4050  00FA4E  6F                 	db	111	;'o'
  4051  00FA4F  74                 	db	116	;'t'
  4052  00FA50  68                 	db	104	;'h'
  4053  00FA51  20                 	db	32
  4054  00FA52  63                 	db	99	;'c'
  4055  00FA53  61                 	db	97	;'a'
  4056  00FA54  70                 	db	112	;'p'
  4057  00FA55  61                 	db	97	;'a'
  4058  00FA56  62                 	db	98	;'b'
  4059  00FA57  69                 	db	105	;'i'
  4060  00FA58  6C                 	db	108	;'l'
  4061  00FA59  69                 	db	105	;'i'
  4062  00FA5A  74                 	db	116	;'t'
  4063  00FA5B  79                 	db	121	;'y'
  4064  00FA5C  00                 	db	0
  4065  00FA5D                     STR_18:
  4066  00FA5D  42                 	db	66	;'B'
  4067  00FA5E  54                 	db	84	;'T'
  4068  00FA5F  4E                 	db	78	;'N'
  4069  00FA60  61                 	db	97	;'a'
  4070  00FA61  6D                 	db	109	;'m'
  4071  00FA62  65                 	db	101	;'e'
  4072  00FA63  3D                 	db	61	;'='
  4073  00FA64  48                 	db	72	;'H'
  4074  00FA65  6F                 	db	111	;'o'
  4075  00FA66  6D                 	db	109	;'m'
  4076  00FA67  65                 	db	101	;'e'
  4077  00FA68  20                 	db	32
  4078  00FA69  41                 	db	65	;'A'
  4079  00FA6A  75                 	db	117	;'u'
  4080  00FA6B  74                 	db	116	;'t'
  4081  00FA6C  6F                 	db	111	;'o'
  4082  00FA6D  6D                 	db	109	;'m'
  4083  00FA6E  61                 	db	97	;'a'
  4084  00FA6F  74                 	db	116	;'t'
  4085  00FA70  69                 	db	105	;'i'
  4086  00FA71  6F                 	db	111	;'o'
  4087  00FA72  6E                 	db	110	;'n'
  4088  00FA73  20                 	db	32
  4089  00FA74  25                 	db	37
  4090  00FA75  6C                 	db	108	;'l'
  4091  00FA76  75                 	db	117	;'u'
  4092  00FA77  0D                 	db	13
  4093  00FA78  00                 	db	0
  4094  00FA79                     STR_136:
  4095  00FA79  44                 	db	68	;'D'
  4096  00FA7A  69                 	db	105	;'i'
  4097  00FA7B  73                 	db	115	;'s'
  4098  00FA7C  70                 	db	112	;'p'
  4099  00FA7D  6C                 	db	108	;'l'
  4100  00FA7E  61                 	db	97	;'a'
  4101  00FA7F  79                 	db	121	;'y'
  4102  00FA80  73                 	db	115	;'s'
  4103  00FA81  20                 	db	32
  4104  00FA82  74                 	db	116	;'t'
  4105  00FA83  68                 	db	104	;'h'
  4106  00FA84  65                 	db	101	;'e'
  4107  00FA85  20                 	db	32
  4108  00FA86  73                 	db	115	;'s'
  4109  00FA87  75                 	db	117	;'u'
  4110  00FA88  70                 	db	112	;'p'
  4111  00FA89  70                 	db	112	;'p'
  4112  00FA8A  6C                 	db	108	;'l'
  4113  00FA8B  79                 	db	121	;'y'
  4114  00FA8C  20                 	db	32
  4115  00FA8D  76                 	db	118	;'v'
  4116  00FA8E  6F                 	db	111	;'o'
  4117  00FA8F  6C                 	db	108	;'l'
  4118  00FA90  74                 	db	116	;'t'
  4119  00FA91  61                 	db	97	;'a'
  4120  00FA92  67                 	db	103	;'g'
  4121  00FA93  65                 	db	101	;'e'
  4122  00FA94  00                 	db	0
  4123  00FA95                     STR_187:
  4124  00FA95  50                 	db	80	;'P'
  4125  00FA96  72                 	db	114	;'r'
  4126  00FA97  65                 	db	101	;'e'
  4127  00FA98  73                 	db	115	;'s'
  4128  00FA99  73                 	db	115	;'s'
  4129  00FA9A  20                 	db	32
  4130  00FA9B  52                 	db	82	;'R'
  4131  00FA9C  65                 	db	101	;'e'
  4132  00FA9D  6D                 	db	109	;'m'
  4133  00FA9E  6F                 	db	111	;'o'
  4134  00FA9F  74                 	db	116	;'t'
  4135  00FAA0  65                 	db	101	;'e'
  4136  00FAA1  20                 	db	32
  4137  00FAA2  43                 	db	67	;'C'
  4138  00FAA3  6F                 	db	111	;'o'
  4139  00FAA4  6E                 	db	110	;'n'
  4140  00FAA5  74                 	db	116	;'t'
  4141  00FAA6  72                 	db	114	;'r'
  4142  00FAA7  6F                 	db	111	;'o'
  4143  00FAA8  6C                 	db	108	;'l'
  4144  00FAA9  20                 	db	32
  4145  00FAAA  62                 	db	98	;'b'
  4146  00FAAB  75                 	db	117	;'u'
  4147  00FAAC  74                 	db	116	;'t'
  4148  00FAAD  74                 	db	116	;'t'
  4149  00FAAE  6F                 	db	111	;'o'
  4150  00FAAF  6E                 	db	110	;'n'
  4151  00FAB0  00                 	db	0
  4152  00FAB1                     STR_97:
  4153  00FAB1  53                 	db	83	;'S'
  4154  00FAB2  65                 	db	101	;'e'
  4155  00FAB3  72                 	db	114	;'r'
  4156  00FAB4  69                 	db	105	;'i'
  4157  00FAB5  61                 	db	97	;'a'
  4158  00FAB6  6C                 	db	108	;'l'
  4159  00FAB7  20                 	db	32
  4160  00FAB8  4E                 	db	78	;'N'
  4161  00FAB9  75                 	db	117	;'u'
  4162  00FABA  6D                 	db	109	;'m'
  4163  00FABB  62                 	db	98	;'b'
  4164  00FABC  65                 	db	101	;'e'
  4165  00FABD  72                 	db	114	;'r'
  4166  00FABE  20                 	db	32
  4167  00FABF  69                 	db	105	;'i'
  4168  00FAC0  73                 	db	115	;'s'
  4169  00FAC1  20                 	db	32
  4170  00FAC2  6E                 	db	110	;'n'
  4171  00FAC3  6F                 	db	111	;'o'
  4172  00FAC4  77                 	db	119	;'w'
  4173  00FAC5  3A                 	db	58	;':'
  4174  00FAC6  20                 	db	32
  4175  00FAC7  25                 	db	37
  4176  00FAC8  6C                 	db	108	;'l'
  4177  00FAC9  75                 	db	117	;'u'
  4178  00FACA  20                 	db	32
  4179  00FACB  00                 	db	0
  4180  00FACC                     STR_118:
  4181  00FACC  54                 	db	84	;'T'
  4182  00FACD  72                 	db	114	;'r'
  4183  00FACE  61                 	db	97	;'a'
  4184  00FACF  6E                 	db	110	;'n'
  4185  00FAD0  73                 	db	115	;'s'
  4186  00FAD1  6D                 	db	109	;'m'
  4187  00FAD2  69                 	db	105	;'i'
  4188  00FAD3  74                 	db	116	;'t'
  4189  00FAD4  74                 	db	116	;'t'
  4190  00FAD5  69                 	db	105	;'i'
  4191  00FAD6  6E                 	db	110	;'n'
  4192  00FAD7  67                 	db	103	;'g'
  4193  00FAD8  20                 	db	32
  4194  00FAD9  46                 	db	70	;'F'
  4195  00FADA  72                 	db	114	;'r'
  4196  00FADB  65                 	db	101	;'e'
  4197  00FADC  71                 	db	113	;'q'
  4198  00FADD  75                 	db	117	;'u'
  4199  00FADE  65                 	db	101	;'e'
  4200  00FADF  6E                 	db	110	;'n'
  4201  00FAE0  63                 	db	99	;'c'
  4202  00FAE1  79                 	db	121	;'y'
  4203  00FAE2  3A                 	db	58	;':'
  4204  00FAE3  20                 	db	32
  4205  00FAE4  25                 	db	37
  4206  00FAE5  73                 	db	115	;'s'
  4207  00FAE6  00                 	db	0
  4208  00FAE7                     STR_186:
  4209  00FAE7  45                 	db	69	;'E'
  4210  00FAE8  6E                 	db	110	;'n'
  4211  00FAE9  74                 	db	116	;'t'
  4212  00FAEA  65                 	db	101	;'e'
  4213  00FAEB  72                 	db	114	;'r'
  4214  00FAEC  20                 	db	32
  4215  00FAED  3F                 	db	63	;'?'
  4216  00FAEE  3F                 	db	63	;'?'
  4217  00FAEF  3F                 	db	63	;'?'
  4218  00FAF0  20                 	db	32
  4219  00FAF1  66                 	db	102	;'f'
  4220  00FAF2  6F                 	db	111	;'o'
  4221  00FAF3  72                 	db	114	;'r'
  4222  00FAF4  20                 	db	32
  4223  00FAF5  43                 	db	67	;'C'
  4224  00FAF6  6F                 	db	111	;'o'
  4225  00FAF7  6D                 	db	109	;'m'
  4226  00FAF8  6D                 	db	109	;'m'
  4227  00FAF9  61                 	db	97	;'a'
  4228  00FAFA  6E                 	db	110	;'n'
  4229  00FAFB  64                 	db	100	;'d'
  4230  00FAFC  20                 	db	32
  4231  00FAFD  4D                 	db	77	;'M'
  4232  00FAFE  65                 	db	101	;'e'
  4233  00FAFF  6E                 	db	110	;'n'
  4234  00FB00  75                 	db	117	;'u'
  4235  00FB01  00                 	db	0
  4236  00FB02                     STR_139:
  4237  00FB02  54                 	db	84	;'T'
  4238  00FB03  72                 	db	114	;'r'
  4239  00FB04  61                 	db	97	;'a'
  4240  00FB05  6E                 	db	110	;'n'
  4241  00FB06  73                 	db	115	;'s'
  4242  00FB07  6D                 	db	109	;'m'
  4243  00FB08  69                 	db	105	;'i'
  4244  00FB09  74                 	db	116	;'t'
  4245  00FB0A  73                 	db	115	;'s'
  4246  00FB0B  20                 	db	32
  4247  00FB0C  73                 	db	115	;'s'
  4248  00FB0D  61                 	db	97	;'a'
  4249  00FB0E  76                 	db	118	;'v'
  4250  00FB0F  65                 	db	101	;'e'
  4251  00FB10  64                 	db	100	;'d'
  4252  00FB11  20                 	db	32
  4253  00FB12  4E                 	db	78	;'N'
  4254  00FB13  45                 	db	69	;'E'
  4255  00FB14  43                 	db	67	;'C'
  4256  00FB15  20                 	db	32
  4257  00FB16  63                 	db	99	;'c'
  4258  00FB17  6F                 	db	111	;'o'
  4259  00FB18  64                 	db	100	;'d'
  4260  00FB19  65                 	db	101	;'e'
  4261  00FB1A  00                 	db	0
  4262  00FB1B                     STR_9:
  4263  00FB1B  53                 	db	83	;'S'
  4264  00FB1C  4E                 	db	78	;'N'
  4265  00FB1D  2C                 	db	44
  4266  00FB1E  48                 	db	72	;'H'
  4267  00FB1F  6F                 	db	111	;'o'
  4268  00FB20  6D                 	db	109	;'m'
  4269  00FB21  65                 	db	101	;'e'
  4270  00FB22  20                 	db	32
  4271  00FB23  41                 	db	65	;'A'
  4272  00FB24  75                 	db	117	;'u'
  4273  00FB25  74                 	db	116	;'t'
  4274  00FB26  6F                 	db	111	;'o'
  4275  00FB27  6D                 	db	109	;'m'
  4276  00FB28  61                 	db	97	;'a'
  4277  00FB29  74                 	db	116	;'t'
  4278  00FB2A  69                 	db	105	;'i'
  4279  00FB2B  6F                 	db	111	;'o'
  4280  00FB2C  6E                 	db	110	;'n'
  4281  00FB2D  20                 	db	32
  4282  00FB2E  25                 	db	37
  4283  00FB2F  6C                 	db	108	;'l'
  4284  00FB30  75                 	db	117	;'u'
  4285  00FB31  0D                 	db	13
  4286  00FB32  00                 	db	0
  4287  00FB33                     STR_101:
  4288  00FB33  54                 	db	84	;'T'
  4289  00FB34  68                 	db	104	;'h'
  4290  00FB35  65                 	db	101	;'e'
  4291  00FB36  20                 	db	32
  4292  00FB37  27                 	db	39
  4293  00FB38  43                 	db	67	;'C'
  4294  00FB39  6F                 	db	111	;'o'
  4295  00FB3A  64                 	db	100	;'d'
  4296  00FB3B  65                 	db	101	;'e'
  4297  00FB3C  27                 	db	39
  4298  00FB3D  20                 	db	32
  4299  00FB3E  77                 	db	119	;'w'
  4300  00FB3F  61                 	db	97	;'a'
  4301  00FB40  73                 	db	115	;'s'
  4302  00FB41  20                 	db	32
  4303  00FB42  77                 	db	119	;'w'
  4304  00FB43  72                 	db	114	;'r'
  4305  00FB44  6F                 	db	111	;'o'
  4306  00FB45  6E                 	db	110	;'n'
  4307  00FB46  67                 	db	103	;'g'
  4308  00FB47  21                 	db	33
  4309  00FB48  21                 	db	33
  4310  00FB49  21                 	db	33
  4311  00FB4A  00                 	db	0
  4312  00FB4B                     STR_94:
  4313  00FB4B  45                 	db	69	;'E'
  4314  00FB4C  6E                 	db	110	;'n'
  4315  00FB4D  74                 	db	116	;'t'
  4316  00FB4E  65                 	db	101	;'e'
  4317  00FB4F  72                 	db	114	;'r'
  4318  00FB50  20                 	db	32
  4319  00FB51  6E                 	db	110	;'n'
  4320  00FB52  65                 	db	101	;'e'
  4321  00FB53  77                 	db	119	;'w'
  4322  00FB54  20                 	db	32
  4323  00FB55  53                 	db	83	;'S'
  4324  00FB56  65                 	db	101	;'e'
  4325  00FB57  72                 	db	114	;'r'
  4326  00FB58  69                 	db	105	;'i'
  4327  00FB59  61                 	db	97	;'a'
  4328  00FB5A  6C                 	db	108	;'l'
  4329  00FB5B  20                 	db	32
  4330  00FB5C  4E                 	db	78	;'N'
  4331  00FB5D  75                 	db	117	;'u'
  4332  00FB5E  6D                 	db	109	;'m'
  4333  00FB5F  62                 	db	98	;'b'
  4334  00FB60  65                 	db	101	;'e'
  4335  00FB61  72                 	db	114	;'r'
  4336  00FB62  00                 	db	0
  4337  00FB63                     STR_141:
  4338  00FB63  41                 	db	65	;'A'
  4339  00FB64  6C                 	db	108	;'l'
  4340  00FB65  6C                 	db	108	;'l'
  4341  00FB66  6F                 	db	111	;'o'
  4342  00FB67  77                 	db	119	;'w'
  4343  00FB68  73                 	db	115	;'s'
  4344  00FB69  20                 	db	32
  4345  00FB6A  73                 	db	115	;'s'
  4346  00FB6B  61                 	db	97	;'a'
  4347  00FB6C  76                 	db	118	;'v'
  4348  00FB6D  69                 	db	105	;'i'
  4349  00FB6E  6E                 	db	110	;'n'
  4350  00FB6F  67                 	db	103	;'g'
  4351  00FB70  20                 	db	32
  4352  00FB71  4E                 	db	78	;'N'
  4353  00FB72  45                 	db	69	;'E'
  4354  00FB73  43                 	db	67	;'C'
  4355  00FB74  20                 	db	32
  4356  00FB75  63                 	db	99	;'c'
  4357  00FB76  6F                 	db	111	;'o'
  4358  00FB77  64                 	db	100	;'d'
  4359  00FB78  65                 	db	101	;'e'
  4360  00FB79  73                 	db	115	;'s'
  4361  00FB7A  00                 	db	0
  4362  00FB7B                     STR_2:
  4363  00FB7B  56                 	db	86	;'V'
  4364  00FB7C  6F                 	db	111	;'o'
  4365  00FB7D  6C                 	db	108	;'l'
  4366  00FB7E  74                 	db	116	;'t'
  4367  00FB7F  61                 	db	97	;'a'
  4368  00FB80  67                 	db	103	;'g'
  4369  00FB81  65                 	db	101	;'e'
  4370  00FB82  20                 	db	32
  4371  00FB83  6F                 	db	111	;'o'
  4372  00FB84  75                 	db	117	;'u'
  4373  00FB85  74                 	db	116	;'t'
  4374  00FB86  20                 	db	32
  4375  00FB87  6F                 	db	111	;'o'
  4376  00FB88  66                 	db	102	;'f'
  4377  00FB89  20                 	db	32
  4378  00FB8A  52                 	db	82	;'R'
  4379  00FB8B  61                 	db	97	;'a'
  4380  00FB8C  6E                 	db	110	;'n'
  4381  00FB8D  67                 	db	103	;'g'
  4382  00FB8E  65                 	db	101	;'e'
  4383  00FB8F  21                 	db	33
  4384  00FB90  21                 	db	33
  4385  00FB91  21                 	db	33
  4386  00FB92  00                 	db	0
  4387  00FB93                     STR_33:
  4388  00FB93  53                 	db	83	;'S'
  4389  00FB94  65                 	db	101	;'e'
  4390  00FB95  6E                 	db	110	;'n'
  4391  00FB96  74                 	db	116	;'t'
  4392  00FB97  20                 	db	32
  4393  00FB98  4E                 	db	78	;'N'
  4394  00FB99  45                 	db	69	;'E'
  4395  00FB9A  43                 	db	67	;'C'
  4396  00FB9B  20                 	db	32
  4397  00FB9C  63                 	db	99	;'c'
  4398  00FB9D  6F                 	db	111	;'o'
  4399  00FB9E  64                 	db	100	;'d'
  4400  00FB9F  65                 	db	101	;'e'
  4401  00FBA0  20                 	db	32
  4402  00FBA1  3D                 	db	61	;'='
  4403  00FBA2  20                 	db	32
  4404  00FBA3  30                 	db	48	;'0'
  4405  00FBA4  78                 	db	120	;'x'
  4406  00FBA5  25                 	db	37
  4407  00FBA6  6C                 	db	108	;'l'
  4408  00FBA7  58                 	db	88	;'X'
  4409  00FBA8  20                 	db	32
  4410  00FBA9  00                 	db	0
  4411  00FBAA                     STR_116:
  4412  00FBAA  42                 	db	66	;'B'
  4413  00FBAB  6C                 	db	108	;'l'
  4414  00FBAC  75                 	db	117	;'u'
  4415  00FBAD  65                 	db	101	;'e'
  4416  00FBAE  74                 	db	116	;'t'
  4417  00FBAF  6F                 	db	111	;'o'
  4418  00FBB0  6F                 	db	111	;'o'
  4419  00FBB1  74                 	db	116	;'t'
  4420  00FBB2  68                 	db	104	;'h'
  4421  00FBB3  20                 	db	32
  4422  00FBB4  66                 	db	102	;'f'
  4423  00FBB5  69                 	db	105	;'i'
  4424  00FBB6  72                 	db	114	;'r'
  4425  00FBB7  6D                 	db	109	;'m'
  4426  00FBB8  77                 	db	119	;'w'
  4427  00FBB9  61                 	db	97	;'a'
  4428  00FBBA  72                 	db	114	;'r'
  4429  00FBBB  65                 	db	101	;'e'
  4430  00FBBC  20                 	db	32
  4431  00FBBD  69                 	db	105	;'i'
  4432  00FBBE  73                 	db	115	;'s'
  4433  00FBBF  3A                 	db	58	;':'
  4434  00FBC0  00                 	db	0
  4435  00FBC1                     STR_177:
  4436  00FBC1  52                 	db	82	;'R'
  4437  00FBC2  46                 	db	70	;'F'
  4438  00FBC3  4B                 	db	75	;'K'
  4439  00FBC4  33                 	db	51	;'3'
  4440  00FBC5  30                 	db	48	;'0'
  4441  00FBC6  36                 	db	54	;'6'
  4442  00FBC7  4C                 	db	76	;'L'
  4443  00FBC8  43                 	db	67	;'C'
  4444  00FBC9  20                 	db	32
  4445  00FBCA  43                 	db	67	;'C'
  4446  00FBCB  68                 	db	104	;'h'
  4447  00FBCC  61                 	db	97	;'a'
  4448  00FBCD  6E                 	db	110	;'n'
  4449  00FBCE  6E                 	db	110	;'n'
  4450  00FBCF  65                 	db	101	;'e'
  4451  00FBD0  6C                 	db	108	;'l'
  4452  00FBD1  20                 	db	32
  4453  00FBD2  42                 	db	66	;'B'
  4454  00FBD3  20                 	db	32
  4455  00FBD4  4F                 	db	79	;'O'
  4456  00FBD5  46                 	db	70	;'F'
  4457  00FBD6  46                 	db	70	;'F'
  4458  00FBD7  00                 	db	0
  4459  00FBD8                     STR_5:
  4460  00FBD8  52                 	db	82	;'R'
  4461  00FBD9  45                 	db	69	;'E'
  4462  00FBDA  53                 	db	83	;'S'
  4463  00FBDB  45                 	db	69	;'E'
  4464  00FBDC  54                 	db	84	;'T'
  4465  00FBDD  20                 	db	32
  4466  00FBDE  74                 	db	116	;'t'
  4467  00FBDF  6F                 	db	111	;'o'
  4468  00FBE0  20                 	db	32
  4469  00FBE1  72                 	db	114	;'r'
  4470  00FBE2  65                 	db	101	;'e'
  4471  00FBE3  61                 	db	97	;'a'
  4472  00FBE4  64                 	db	100	;'d'
  4473  00FBE5  20                 	db	32
  4474  00FBE6  76                 	db	118	;'v'
  4475  00FBE7  65                 	db	101	;'e'
  4476  00FBE8  72                 	db	114	;'r'
  4477  00FBE9  73                 	db	115	;'s'
  4478  00FBEA  69                 	db	105	;'i'
  4479  00FBEB  6F                 	db	111	;'o'
  4480  00FBEC  6E                 	db	110	;'n'
  4481  00FBED  21                 	db	33
  4482  00FBEE  00                 	db	0
  4483  00FBEF                     STR_176:
  4484  00FBEF  52                 	db	82	;'R'
  4485  00FBF0  46                 	db	70	;'F'
  4486  00FBF1  4B                 	db	75	;'K'
  4487  00FBF2  33                 	db	51	;'3'
  4488  00FBF3  30                 	db	48	;'0'
  4489  00FBF4  36                 	db	54	;'6'
  4490  00FBF5  4C                 	db	76	;'L'
  4491  00FBF6  43                 	db	67	;'C'
  4492  00FBF7  20                 	db	32
  4493  00FBF8  43                 	db	67	;'C'
  4494  00FBF9  68                 	db	104	;'h'
  4495  00FBFA  61                 	db	97	;'a'
  4496  00FBFB  6E                 	db	110	;'n'
  4497  00FBFC  6E                 	db	110	;'n'
  4498  00FBFD  65                 	db	101	;'e'
  4499  00FBFE  6C                 	db	108	;'l'
  4500  00FBFF  20                 	db	32
  4501  00FC00  42                 	db	66	;'B'
  4502  00FC01  20                 	db	32
  4503  00FC02  4F                 	db	79	;'O'
  4504  00FC03  4E                 	db	78	;'N'
  4505  00FC04  00                 	db	0
  4506  00FC05                     STR_44:
  4507  00FC05  4E                 	db	78	;'N'
  4508  00FC06  45                 	db	69	;'E'
  4509  00FC07  43                 	db	67	;'C'
  4510  00FC08  20                 	db	32
  4511  00FC09  3D                 	db	61	;'='
  4512  00FC0A  20                 	db	32
  4513  00FC0B  61                 	db	97	;'a'
  4514  00FC0C  64                 	db	100	;'d'
  4515  00FC0D  64                 	db	100	;'d'
  4516  00FC0E  72                 	db	114	;'r'
  4517  00FC0F  65                 	db	101	;'e'
  4518  00FC10  73                 	db	115	;'s'
  4519  00FC11  73                 	db	115	;'s'
  4520  00FC12  2C                 	db	44
  4521  00FC13  63                 	db	99	;'c'
  4522  00FC14  6F                 	db	111	;'o'
  4523  00FC15  6D                 	db	109	;'m'
  4524  00FC16  6D                 	db	109	;'m'
  4525  00FC17  61                 	db	97	;'a'
  4526  00FC18  6E                 	db	110	;'n'
  4527  00FC19  64                 	db	100	;'d'
  4528  00FC1A  00                 	db	0
  4529  00FC1B                     STR_102:
  4530  00FC1B  43                 	db	67	;'C'
  4531  00FC1C  68                 	db	104	;'h'
  4532  00FC1D  61                 	db	97	;'a'
  4533  00FC1E  6E                 	db	110	;'n'
  4534  00FC1F  67                 	db	103	;'g'
  4535  00FC20  65                 	db	101	;'e'
  4536  00FC21  20                 	db	32
  4537  00FC22  42                 	db	66	;'B'
  4538  00FC23  6C                 	db	108	;'l'
  4539  00FC24  75                 	db	117	;'u'
  4540  00FC25  65                 	db	101	;'e'
  4541  00FC26  74                 	db	116	;'t'
  4542  00FC27  6F                 	db	111	;'o'
  4543  00FC28  6F                 	db	111	;'o'
  4544  00FC29  74                 	db	116	;'t'
  4545  00FC2A  68                 	db	104	;'h'
  4546  00FC2B  20                 	db	32
  4547  00FC2C  4E                 	db	78	;'N'
  4548  00FC2D  61                 	db	97	;'a'
  4549  00FC2E  6D                 	db	109	;'m'
  4550  00FC2F  65                 	db	101	;'e'
  4551  00FC30  00                 	db	0
  4552  00FC31                     STR_131:
  4553  00FC31  43                 	db	67	;'C'
  4554  00FC32  68                 	db	104	;'h'
  4555  00FC33  61                 	db	97	;'a'
  4556  00FC34  6E                 	db	110	;'n'
  4557  00FC35  67                 	db	103	;'g'
  4558  00FC36  65                 	db	101	;'e'
  4559  00FC37  73                 	db	115	;'s'
  4560  00FC38  20                 	db	32
  4561  00FC39  53                 	db	83	;'S'
  4562  00FC3A  65                 	db	101	;'e'
  4563  00FC3B  72                 	db	114	;'r'
  4564  00FC3C  69                 	db	105	;'i'
  4565  00FC3D  61                 	db	97	;'a'
  4566  00FC3E  6C                 	db	108	;'l'
  4567  00FC3F  20                 	db	32
  4568  00FC40  4E                 	db	78	;'N'
  4569  00FC41  75                 	db	117	;'u'
  4570  00FC42  6D                 	db	109	;'m'
  4571  00FC43  62                 	db	98	;'b'
  4572  00FC44  65                 	db	101	;'e'
  4573  00FC45  72                 	db	114	;'r'
  4574  00FC46  00                 	db	0
  4575  00FC47                     STR_32:
  4576  00FC47  4E                 	db	78	;'N'
  4577  00FC48  45                 	db	69	;'E'
  4578  00FC49  43                 	db	67	;'C'
  4579  00FC4A  20                 	db	32
  4580  00FC4B  63                 	db	99	;'c'
  4581  00FC4C  6F                 	db	111	;'o'
  4582  00FC4D  6D                 	db	109	;'m'
  4583  00FC4E  6D                 	db	109	;'m'
  4584  00FC4F  61                 	db	97	;'a'
  4585  00FC50  6E                 	db	110	;'n'
  4586  00FC51  64                 	db	100	;'d'
  4587  00FC52  3A                 	db	58	;':'
  4588  00FC53  20                 	db	32
  4589  00FC54  30                 	db	48	;'0'
  4590  00FC55  78                 	db	120	;'x'
  4591  00FC56  25                 	db	37
  4592  00FC57  30                 	db	48	;'0'
  4593  00FC58  32                 	db	50	;'2'
  4594  00FC59  58                 	db	88	;'X'
  4595  00FC5A  20                 	db	32
  4596  00FC5B  00                 	db	0
  4597  00FC5C                     STR_31:
  4598  00FC5C  4E                 	db	78	;'N'
  4599  00FC5D  45                 	db	69	;'E'
  4600  00FC5E  43                 	db	67	;'C'
  4601  00FC5F  20                 	db	32
  4602  00FC60  61                 	db	97	;'a'
  4603  00FC61  64                 	db	100	;'d'
  4604  00FC62  64                 	db	100	;'d'
  4605  00FC63  72                 	db	114	;'r'
  4606  00FC64  65                 	db	101	;'e'
  4607  00FC65  73                 	db	115	;'s'
  4608  00FC66  73                 	db	115	;'s'
  4609  00FC67  3A                 	db	58	;':'
  4610  00FC68  20                 	db	32
  4611  00FC69  30                 	db	48	;'0'
  4612  00FC6A  78                 	db	120	;'x'
  4613  00FC6B  25                 	db	37
  4614  00FC6C  30                 	db	48	;'0'
  4615  00FC6D  32                 	db	50	;'2'
  4616  00FC6E  58                 	db	88	;'X'
  4617  00FC6F  20                 	db	32
  4618  00FC70  00                 	db	0
  4619  00FC71                     STR_51:
  4620  00FC71  53                 	db	83	;'S'
  4621  00FC72  65                 	db	101	;'e'
  4622  00FC73  6E                 	db	110	;'n'
  4623  00FC74  74                 	db	116	;'t'
  4624  00FC75  20                 	db	32
  4625  00FC76  4E                 	db	78	;'N'
  4626  00FC77  45                 	db	69	;'E'
  4627  00FC78  43                 	db	67	;'C'
  4628  00FC79  20                 	db	32
  4629  00FC7A  63                 	db	99	;'c'
  4630  00FC7B  6F                 	db	111	;'o'
  4631  00FC7C  64                 	db	100	;'d'
  4632  00FC7D  65                 	db	101	;'e'
  4633  00FC7E  20                 	db	32
  4634  00FC7F  30                 	db	48	;'0'
  4635  00FC80  78                 	db	120	;'x'
  4636  00FC81  25                 	db	37
  4637  00FC82  6C                 	db	108	;'l'
  4638  00FC83  58                 	db	88	;'X'
  4639  00FC84  20                 	db	32
  4640  00FC85  00                 	db	0
  4641  00FC86                     STR_134:
  4642  00FC86  44                 	db	68	;'D'
  4643  00FC87  69                 	db	105	;'i'
  4644  00FC88  61                 	db	97	;'a'
  4645  00FC89  67                 	db	103	;'g'
  4646  00FC8A  6E                 	db	110	;'n'
  4647  00FC8B  6F                 	db	111	;'o'
  4648  00FC8C  73                 	db	115	;'s'
  4649  00FC8D  74                 	db	116	;'t'
  4650  00FC8E  69                 	db	105	;'i'
  4651  00FC8F  63                 	db	99	;'c'
  4652  00FC90  20                 	db	32
  4653  00FC91  43                 	db	67	;'C'
  4654  00FC92  6F                 	db	111	;'o'
  4655  00FC93  6D                 	db	109	;'m'
  4656  00FC94  6D                 	db	109	;'m'
  4657  00FC95  61                 	db	97	;'a'
  4658  00FC96  6E                 	db	110	;'n'
  4659  00FC97  64                 	db	100	;'d'
  4660  00FC98  73                 	db	115	;'s'
  4661  00FC99  3A                 	db	58	;':'
  4662  00FC9A  00                 	db	0
  4663  00FC9B                     STR_114:
  4664  00FC9B  46                 	db	70	;'F'
  4665  00FC9C  69                 	db	105	;'i'
  4666  00FC9D  72                 	db	114	;'r'
  4667  00FC9E  6D                 	db	109	;'m'
  4668  00FC9F  77                 	db	119	;'w'
  4669  00FCA0  61                 	db	97	;'a'
  4670  00FCA1  72                 	db	114	;'r'
  4671  00FCA2  65                 	db	101	;'e'
  4672  00FCA3  20                 	db	32
  4673  00FCA4  56                 	db	86	;'V'
  4674  00FCA5  65                 	db	101	;'e'
  4675  00FCA6  72                 	db	114	;'r'
  4676  00FCA7  73                 	db	115	;'s'
  4677  00FCA8  69                 	db	105	;'i'
  4678  00FCA9  6F                 	db	111	;'o'
  4679  00FCAA  6E                 	db	110	;'n'
  4680  00FCAB  3A                 	db	58	;':'
  4681  00FCAC  20                 	db	32
  4682  00FCAD  25                 	db	37
  4683  00FCAE  73                 	db	115	;'s'
  4684  00FCAF  00                 	db	0
  4685  00FCB0                     STR_14:
  4686  00FCB0  53                 	db	83	;'S'
  4687  00FCB1  53                 	db	83	;'S'
  4688  00FCB2  2C                 	db	44
  4689  00FCB3  48                 	db	72	;'H'
  4690  00FCB4  6F                 	db	111	;'o'
  4691  00FCB5  6D                 	db	109	;'m'
  4692  00FCB6  65                 	db	101	;'e'
  4693  00FCB7  20                 	db	32
  4694  00FCB8  41                 	db	65	;'A'
  4695  00FCB9  75                 	db	117	;'u'
  4696  00FCBA  74                 	db	116	;'t'
  4697  00FCBB  6F                 	db	111	;'o'
  4698  00FCBC  6D                 	db	109	;'m'
  4699  00FCBD  61                 	db	97	;'a'
  4700  00FCBE  74                 	db	116	;'t'
  4701  00FCBF  69                 	db	105	;'i'
  4702  00FCC0  6F                 	db	111	;'o'
  4703  00FCC1  6E                 	db	110	;'n'
  4704  00FCC2  0D                 	db	13
  4705  00FCC3  00                 	db	0
  4706  00FCC4                     STR_42:
  4707  00FCC4  4E                 	db	78	;'N'
  4708  00FCC5  45                 	db	69	;'E'
  4709  00FCC6  43                 	db	67	;'C'
  4710  00FCC7  20                 	db	32
  4711  00FCC8  3D                 	db	61	;'='
  4712  00FCC9  20                 	db	32
  4713  00FCCA  28                 	db	40
  4714  00FCCB  33                 	db	51	;'3'
  4715  00FCCC  32                 	db	50	;'2'
  4716  00FCCD  20                 	db	32
  4717  00FCCE  62                 	db	98	;'b'
  4718  00FCCF  69                 	db	105	;'i'
  4719  00FCD0  74                 	db	116	;'t'
  4720  00FCD1  20                 	db	32
  4721  00FCD2  63                 	db	99	;'c'
  4722  00FCD3  6F                 	db	111	;'o'
  4723  00FCD4  64                 	db	100	;'d'
  4724  00FCD5  65                 	db	101	;'e'
  4725  00FCD6  29                 	db	41
  4726  00FCD7  00                 	db	0
  4727  00FCD8                     STR_179:
  4728  00FCD8  54                 	db	84	;'T'
  4729  00FCD9  52                 	db	82	;'R'
  4730  00FCDA  30                 	db	48	;'0'
  4731  00FCDB  30                 	db	48	;'0'
  4732  00FCDC  39                 	db	57	;'9'
  4733  00FCDD  20                 	db	32
  4734  00FCDE  43                 	db	67	;'C'
  4735  00FCDF  68                 	db	104	;'h'
  4736  00FCE0  61                 	db	97	;'a'
  4737  00FCE1  6E                 	db	110	;'n'
  4738  00FCE2  6E                 	db	110	;'n'
  4739  00FCE3  65                 	db	101	;'e'
  4740  00FCE4  6C                 	db	108	;'l'
  4741  00FCE5  20                 	db	32
  4742  00FCE6  44                 	db	68	;'D'
  4743  00FCE7  20                 	db	32
  4744  00FCE8  4F                 	db	79	;'O'
  4745  00FCE9  46                 	db	70	;'F'
  4746  00FCEA  46                 	db	70	;'F'
  4747  00FCEB  00                 	db	0
  4748  00FCEC                     STR_35:
  4749  00FCEC  73                 	db	115	;'s'
  4750  00FCED  65                 	db	101	;'e'
  4751  00FCEE  6E                 	db	110	;'n'
  4752  00FCEF  74                 	db	116	;'t'
  4753  00FCF0  20                 	db	32
  4754  00FCF1  4E                 	db	78	;'N'
  4755  00FCF2  45                 	db	69	;'E'
  4756  00FCF3  43                 	db	67	;'C'
  4757  00FCF4  20                 	db	32
  4758  00FCF5  63                 	db	99	;'c'
  4759  00FCF6  6F                 	db	111	;'o'
  4760  00FCF7  64                 	db	100	;'d'
  4761  00FCF8  65                 	db	101	;'e'
  4762  00FCF9  20                 	db	32
  4763  00FCFA  30                 	db	48	;'0'
  4764  00FCFB  78                 	db	120	;'x'
  4765  00FCFC  25                 	db	37
  4766  00FCFD  6C                 	db	108	;'l'
  4767  00FCFE  58                 	db	88	;'X'
  4768  00FCFF  00                 	db	0
  4769  00FD00                     STR_112:
  4770  00FD00  53                 	db	83	;'S'
  4771  00FD01  75                 	db	117	;'u'
  4772  00FD02  70                 	db	112	;'p'
  4773  00FD03  70                 	db	112	;'p'
  4774  00FD04  6C                 	db	108	;'l'
  4775  00FD05  79                 	db	121	;'y'
  4776  00FD06  20                 	db	32
  4777  00FD07  56                 	db	86	;'V'
  4778  00FD08  6F                 	db	111	;'o'
  4779  00FD09  6C                 	db	108	;'l'
  4780  00FD0A  74                 	db	116	;'t'
  4781  00FD0B  61                 	db	97	;'a'
  4782  00FD0C  67                 	db	103	;'g'
  4783  00FD0D  65                 	db	101	;'e'
  4784  00FD0E  20                 	db	32
  4785  00FD0F  3D                 	db	61	;'='
  4786  00FD10  20                 	db	32
  4787  00FD11  25                 	db	37
  4788  00FD12  66                 	db	102	;'f'
  4789  00FD13  00                 	db	0
  4790  00FD14                     STR_60:
  4791  00FD14  52                 	db	82	;'R'
  4792  00FD15  65                 	db	101	;'e'
  4793  00FD16  6D                 	db	109	;'m'
  4794  00FD17  6F                 	db	111	;'o'
  4795  00FD18  74                 	db	116	;'t'
  4796  00FD19  65                 	db	101	;'e'
  4797  00FD1A  42                 	db	66	;'B'
  4798  00FD1B  75                 	db	117	;'u'
  4799  00FD1C  74                 	db	116	;'t'
  4800  00FD1D  74                 	db	116	;'t'
  4801  00FD1E  6F                 	db	111	;'o'
  4802  00FD1F  6E                 	db	110	;'n'
  4803  00FD20  27                 	db	39
  4804  00FD21  78                 	db	120	;'x'
  4805  00FD22  27                 	db	39
  4806  00FD23  20                 	db	32
  4807  00FD24  73                 	db	115	;'s'
  4808  00FD25  65                 	db	101	;'e'
  4809  00FD26  74                 	db	116	;'t'
  4810  00FD27  00                 	db	0
  4811  00FD28                     STR_173:
  4812  00FD28  52                 	db	82	;'R'
  4813  00FD29  46                 	db	70	;'F'
  4814  00FD2A  4B                 	db	75	;'K'
  4815  00FD2B  31                 	db	49	;'1'
  4816  00FD2C  30                 	db	48	;'0'
  4817  00FD2D  30                 	db	48	;'0'
  4818  00FD2E  4C                 	db	76	;'L'
  4819  00FD2F  43                 	db	67	;'C'
  4820  00FD30  20                 	db	32
  4821  00FD31  43                 	db	67	;'C'
  4822  00FD32  68                 	db	104	;'h'
  4823  00FD33  61                 	db	97	;'a'
  4824  00FD34  6E                 	db	110	;'n'
  4825  00FD35  6E                 	db	110	;'n'
  4826  00FD36  65                 	db	101	;'e'
  4827  00FD37  6C                 	db	108	;'l'
  4828  00FD38  20                 	db	32
  4829  00FD39  44                 	db	68	;'D'
  4830  00FD3A  00                 	db	0
  4831  00FD3B                     STR_174:
  4832  00FD3B  52                 	db	82	;'R'
  4833  00FD3C  46                 	db	70	;'F'
  4834  00FD3D  4B                 	db	75	;'K'
  4835  00FD3E  31                 	db	49	;'1'
  4836  00FD3F  30                 	db	48	;'0'
  4837  00FD40  30                 	db	48	;'0'
  4838  00FD41  4C                 	db	76	;'L'
  4839  00FD42  43                 	db	67	;'C'
  4840  00FD43  20                 	db	32
  4841  00FD44  43                 	db	67	;'C'
  4842  00FD45  68                 	db	104	;'h'
  4843  00FD46  61                 	db	97	;'a'
  4844  00FD47  6E                 	db	110	;'n'
  4845  00FD48  6E                 	db	110	;'n'
  4846  00FD49  65                 	db	101	;'e'
  4847  00FD4A  6C                 	db	108	;'l'
  4848  00FD4B  20                 	db	32
  4849  00FD4C  45                 	db	69	;'E'
  4850  00FD4D  00                 	db	0
  4851  00FD4E                     STR_175:
  4852  00FD4E  52                 	db	82	;'R'
  4853  00FD4F  46                 	db	70	;'F'
  4854  00FD50  4B                 	db	75	;'K'
  4855  00FD51  31                 	db	49	;'1'
  4856  00FD52  30                 	db	48	;'0'
  4857  00FD53  30                 	db	48	;'0'
  4858  00FD54  4C                 	db	76	;'L'
  4859  00FD55  43                 	db	67	;'C'
  4860  00FD56  20                 	db	32
  4861  00FD57  43                 	db	67	;'C'
  4862  00FD58  68                 	db	104	;'h'
  4863  00FD59  61                 	db	97	;'a'
  4864  00FD5A  6E                 	db	110	;'n'
  4865  00FD5B  6E                 	db	110	;'n'
  4866  00FD5C  65                 	db	101	;'e'
  4867  00FD5D  6C                 	db	108	;'l'
  4868  00FD5E  20                 	db	32
  4869  00FD5F  46                 	db	70	;'F'
  4870  00FD60  00                 	db	0
  4871  00FD61                     STR_178:
  4872  00FD61  54                 	db	84	;'T'
  4873  00FD62  52                 	db	82	;'R'
  4874  00FD63  30                 	db	48	;'0'
  4875  00FD64  30                 	db	48	;'0'
  4876  00FD65  39                 	db	57	;'9'
  4877  00FD66  20                 	db	32
  4878  00FD67  43                 	db	67	;'C'
  4879  00FD68  68                 	db	104	;'h'
  4880  00FD69  61                 	db	97	;'a'
  4881  00FD6A  6E                 	db	110	;'n'
  4882  00FD6B  6E                 	db	110	;'n'
  4883  00FD6C  65                 	db	101	;'e'
  4884  00FD6D  6C                 	db	108	;'l'
  4885  00FD6E  20                 	db	32
  4886  00FD6F  44                 	db	68	;'D'
  4887  00FD70  20                 	db	32
  4888  00FD71  4F                 	db	79	;'O'
  4889  00FD72  4E                 	db	78	;'N'
  4890  00FD73  00                 	db	0
  4891  00FD74                     STR_140:
  4892  00FD74  52                 	db	82	;'R'
  4893  00FD75  65                 	db	101	;'e'
  4894  00FD76  6D                 	db	109	;'m'
  4895  00FD77  6F                 	db	111	;'o'
  4896  00FD78  74                 	db	116	;'t'
  4897  00FD79  65                 	db	101	;'e'
  4898  00FD7A  42                 	db	66	;'B'
  4899  00FD7B  75                 	db	117	;'u'
  4900  00FD7C  74                 	db	116	;'t'
  4901  00FD7D  74                 	db	116	;'t'
  4902  00FD7E  6F                 	db	111	;'o'
  4903  00FD7F  6E                 	db	110	;'n'
  4904  00FD80  25                 	db	37
  4905  00FD81  64                 	db	100	;'d'
  4906  00FD82  20                 	db	32
  4907  00FD83  73                 	db	115	;'s'
  4908  00FD84  65                 	db	101	;'e'
  4909  00FD85  74                 	db	116	;'t'
  4910  00FD86  00                 	db	0
  4911  00FD87                     STR_120:
  4912  00FD87  53                 	db	83	;'S'
  4913  00FD88  65                 	db	101	;'e'
  4914  00FD89  72                 	db	114	;'r'
  4915  00FD8A  69                 	db	105	;'i'
  4916  00FD8B  61                 	db	97	;'a'
  4917  00FD8C  6C                 	db	108	;'l'
  4918  00FD8D  20                 	db	32
  4919  00FD8E  4E                 	db	78	;'N'
  4920  00FD8F  75                 	db	117	;'u'
  4921  00FD90  6D                 	db	109	;'m'
  4922  00FD91  62                 	db	98	;'b'
  4923  00FD92  65                 	db	101	;'e'
  4924  00FD93  72                 	db	114	;'r'
  4925  00FD94  3A                 	db	58	;':'
  4926  00FD95  20                 	db	32
  4927  00FD96  25                 	db	37
  4928  00FD97  6C                 	db	108	;'l'
  4929  00FD98  75                 	db	117	;'u'
  4930  00FD99  00                 	db	0
  4931  00FD9A                     STR_46:
  4932  00FD9A  4E                 	db	78	;'N'
  4933  00FD9B  45                 	db	69	;'E'
  4934  00FD9C  43                 	db	67	;'C'
  4935  00FD9D  20                 	db	32
  4936  00FD9E  3D                 	db	61	;'='
  4937  00FD9F  20                 	db	32
  4938  00FDA0  30                 	db	48	;'0'
  4939  00FDA1  78                 	db	120	;'x'
  4940  00FDA2  31                 	db	49	;'1'
  4941  00FDA3  43                 	db	67	;'C'
  4942  00FDA4  45                 	db	69	;'E'
  4943  00FDA5  33                 	db	51	;'3'
  4944  00FDA6  35                 	db	53	;'5'
  4945  00FDA7  30                 	db	48	;'0'
  4946  00FDA8  41                 	db	65	;'A'
  4947  00FDA9  46                 	db	70	;'F'
  4948  00FDAA  20                 	db	32
  4949  00FDAB  00                 	db	0
  4950  00FDAC                     STR_63:
  4951  00FDAC  52                 	db	82	;'R'
  4952  00FDAD  65                 	db	101	;'e'
  4953  00FDAE  6D                 	db	109	;'m'
  4954  00FDAF  6F                 	db	111	;'o'
  4955  00FDB0  74                 	db	116	;'t'
  4956  00FDB1  65                 	db	101	;'e'
  4957  00FDB2  42                 	db	66	;'B'
  4958  00FDB3  75                 	db	117	;'u'
  4959  00FDB4  74                 	db	116	;'t'
  4960  00FDB5  74                 	db	116	;'t'
  4961  00FDB6  6F                 	db	111	;'o'
  4962  00FDB7  6E                 	db	110	;'n'
  4963  00FDB8  31                 	db	49	;'1'
  4964  00FDB9  20                 	db	32
  4965  00FDBA  73                 	db	115	;'s'
  4966  00FDBB  65                 	db	101	;'e'
  4967  00FDBC  74                 	db	116	;'t'
  4968  00FDBD  00                 	db	0
  4969  00FDBE                     STR_88:
  4970  00FDBE  53                 	db	83	;'S'
  4971  00FDBF  79                 	db	121	;'y'
  4972  00FDC0  73                 	db	115	;'s'
  4973  00FDC1  74                 	db	116	;'t'
  4974  00FDC2  65                 	db	101	;'e'
  4975  00FDC3  6D                 	db	109	;'m'
  4976  00FDC4  20                 	db	32
  4977  00FDC5  77                 	db	119	;'w'
  4978  00FDC6  69                 	db	105	;'i'
  4979  00FDC7  6C                 	db	108	;'l'
  4980  00FDC8  6C                 	db	108	;'l'
  4981  00FDC9  20                 	db	32
  4982  00FDCA  72                 	db	114	;'r'
  4983  00FDCB  65                 	db	101	;'e'
  4984  00FDCC  73                 	db	115	;'s'
  4985  00FDCD  65                 	db	101	;'e'
  4986  00FDCE  74                 	db	116	;'t'
  4987  00FDCF  00                 	db	0
  4988  00FDD0                     STR_190:
  4989  00FDD0  30                 	db	48	;'0'
  4990  00FDD1  31                 	db	49	;'1'
  4991  00FDD2  32                 	db	50	;'2'
  4992  00FDD3  33                 	db	51	;'3'
  4993  00FDD4  34                 	db	52	;'4'
  4994  00FDD5  35                 	db	53	;'5'
  4995  00FDD6  36                 	db	54	;'6'
  4996  00FDD7  37                 	db	55	;'7'
  4997  00FDD8  38                 	db	56	;'8'
  4998  00FDD9  39                 	db	57	;'9'
  4999  00FDDA  41                 	db	65	;'A'
  5000  00FDDB  42                 	db	66	;'B'
  5001  00FDDC  43                 	db	67	;'C'
  5002  00FDDD  44                 	db	68	;'D'
  5003  00FDDE  45                 	db	69	;'E'
  5004  00FDDF  46                 	db	70	;'F'
  5005  00FDE0  00                 	db	0
  5006  00FDE1                     STR_123:
  5007  00FDE1  53                 	db	83	;'S'
  5008  00FDE2  79                 	db	121	;'y'
  5009  00FDE3  73                 	db	115	;'s'
  5010  00FDE4  74                 	db	116	;'t'
  5011  00FDE5  65                 	db	101	;'e'
  5012  00FDE6  6D                 	db	109	;'m'
  5013  00FDE7  20                 	db	32
  5014  00FDE8  63                 	db	99	;'c'
  5015  00FDE9  6F                 	db	111	;'o'
  5016  00FDEA  6D                 	db	109	;'m'
  5017  00FDEB  6D                 	db	109	;'m'
  5018  00FDEC  61                 	db	97	;'a'
  5019  00FDED  6E                 	db	110	;'n'
  5020  00FDEE  64                 	db	100	;'d'
  5021  00FDEF  73                 	db	115	;'s'
  5022  00FDF0  3A                 	db	58	;':'
  5023  00FDF1  00                 	db	0
  5024  00FDF2                     STR_48:
  5025  00FDF2  4E                 	db	78	;'N'
  5026  00FDF3  45                 	db	69	;'E'
  5027  00FDF4  43                 	db	67	;'C'
  5028  00FDF5  20                 	db	32
  5029  00FDF6  3D                 	db	61	;'='
  5030  00FDF7  20                 	db	32
  5031  00FDF8  30                 	db	48	;'0'
  5032  00FDF9  78                 	db	120	;'x'
  5033  00FDFA  33                 	db	51	;'3'
  5034  00FDFB  38                 	db	56	;'8'
  5035  00FDFC  2C                 	db	44
  5036  00FDFD  20                 	db	32
  5037  00FDFE  30                 	db	48	;'0'
  5038  00FDFF  78                 	db	120	;'x'
  5039  00FE00  30                 	db	48	;'0'
  5040  00FE01  41                 	db	65	;'A'
  5041  00FE02  00                 	db	0
  5042  00FE03                     STR_59:
  5043  00FE03  52                 	db	82	;'R'
  5044  00FE04  65                 	db	101	;'e'
  5045  00FE05  6D                 	db	109	;'m'
  5046  00FE06  6F                 	db	111	;'o'
  5047  00FE07  74                 	db	116	;'t'
  5048  00FE08  65                 	db	101	;'e'
  5049  00FE09  42                 	db	66	;'B'
  5050  00FE0A  75                 	db	117	;'u'
  5051  00FE0B  74                 	db	116	;'t'
  5052  00FE0C  74                 	db	116	;'t'
  5053  00FE0D  6F                 	db	111	;'o'
  5054  00FE0E  6E                 	db	110	;'n'
  5055  00FE0F  27                 	db	39
  5056  00FE10  78                 	db	120	;'x'
  5057  00FE11  27                 	db	39
  5058  00FE12  00                 	db	0
  5059  00FE13                     STR_117:
  5060  00FE13  50                 	db	80	;'P'
  5061  00FE14  43                 	db	67	;'C'
  5062  00FE15  42                 	db	66	;'B'
  5063  00FE16  20                 	db	32
  5064  00FE17  56                 	db	86	;'V'
  5065  00FE18  65                 	db	101	;'e'
  5066  00FE19  72                 	db	114	;'r'
  5067  00FE1A  73                 	db	115	;'s'
  5068  00FE1B  69                 	db	105	;'i'
  5069  00FE1C  6F                 	db	111	;'o'
  5070  00FE1D  6E                 	db	110	;'n'
  5071  00FE1E  3A                 	db	58	;':'
  5072  00FE1F  20                 	db	32
  5073  00FE20  25                 	db	37
  5074  00FE21  73                 	db	115	;'s'
  5075  00FE22  00                 	db	0
  5076  00FE23                     STR_3:
  5077  00FE23  42                 	db	66	;'B'
  5078  00FE24  75                 	db	117	;'u'
  5079  00FE25  66                 	db	102	;'f'
  5080  00FE26  66                 	db	102	;'f'
  5081  00FE27  65                 	db	101	;'e'
  5082  00FE28  72                 	db	114	;'r'
  5083  00FE29  20                 	db	32
  5084  00FE2A  4F                 	db	79	;'O'
  5085  00FE2B  76                 	db	118	;'v'
  5086  00FE2C  65                 	db	101	;'e'
  5087  00FE2D  72                 	db	114	;'r'
  5088  00FE2E  66                 	db	102	;'f'
  5089  00FE2F  6C                 	db	108	;'l'
  5090  00FE30  6F                 	db	111	;'o'
  5091  00FE31  77                 	db	119	;'w'
  5092  00FE32  00                 	db	0
  5093  00FE33                     STR_138:
  5094  00FE33  52                 	db	82	;'R'
  5095  00FE34  65                 	db	101	;'e'
  5096  00FE35  6D                 	db	109	;'m'
  5097  00FE36  6F                 	db	111	;'o'
  5098  00FE37  74                 	db	116	;'t'
  5099  00FE38  65                 	db	101	;'e'
  5100  00FE39  42                 	db	66	;'B'
  5101  00FE3A  75                 	db	117	;'u'
  5102  00FE3B  74                 	db	116	;'t'
  5103  00FE3C  74                 	db	116	;'t'
  5104  00FE3D  6F                 	db	111	;'o'
  5105  00FE3E  6E                 	db	110	;'n'
  5106  00FE3F  25                 	db	37
  5107  00FE40  64                 	db	100	;'d'
  5108  00FE41  00                 	db	0
  5109  00FE42                     STR_4:
  5110  00FE42  53                 	db	83	;'S'
  5111  00FE43  79                 	db	121	;'y'
  5112  00FE44  73                 	db	115	;'s'
  5113  00FE45  74                 	db	116	;'t'
  5114  00FE46  65                 	db	101	;'e'
  5115  00FE47  6D                 	db	109	;'m'
  5116  00FE48  20                 	db	32
  5117  00FE49  6D                 	db	109	;'m'
  5118  00FE4A  75                 	db	117	;'u'
  5119  00FE4B  73                 	db	115	;'s'
  5120  00FE4C  74                 	db	116	;'t'
  5121  00FE4D  20                 	db	32
  5122  00FE4E  62                 	db	98	;'b'
  5123  00FE4F  65                 	db	101	;'e'
  5124  00FE50  00                 	db	0
  5125  00FE51                     STR_62:
  5126  00FE51  52                 	db	82	;'R'
  5127  00FE52  65                 	db	101	;'e'
  5128  00FE53  6D                 	db	109	;'m'
  5129  00FE54  6F                 	db	111	;'o'
  5130  00FE55  74                 	db	116	;'t'
  5131  00FE56  65                 	db	101	;'e'
  5132  00FE57  42                 	db	66	;'B'
  5133  00FE58  75                 	db	117	;'u'
  5134  00FE59  74                 	db	116	;'t'
  5135  00FE5A  74                 	db	116	;'t'
  5136  00FE5B  6F                 	db	111	;'o'
  5137  00FE5C  6E                 	db	110	;'n'
  5138  00FE5D  31                 	db	49	;'1'
  5139  00FE5E  00                 	db	0
  5140  00FE5F                     STR_75:
  5141  00FE5F  57                 	db	87	;'W'
  5142  00FE60  68                 	db	104	;'h'
  5143  00FE61  69                 	db	105	;'i'
  5144  00FE62  63                 	db	99	;'c'
  5145  00FE63  68                 	db	104	;'h'
  5146  00FE64  20                 	db	32
  5147  00FE65  64                 	db	100	;'d'
  5148  00FE66  65                 	db	101	;'e'
  5149  00FE67  76                 	db	118	;'v'
  5150  00FE68  69                 	db	105	;'i'
  5151  00FE69  63                 	db	99	;'c'
  5152  00FE6A  65                 	db	101	;'e'
  5153  00FE6B  3F                 	db	63	;'?'
  5154  00FE6C  00                 	db	0
  5155  00FE6D                     STR_170:
  5156  00FE6D  52                 	db	82	;'R'
  5157  00FE6E  46                 	db	70	;'F'
  5158  00FE6F  20                 	db	32
  5159  00FE70  63                 	db	99	;'c'
  5160  00FE71  6F                 	db	111	;'o'
  5161  00FE72  6D                 	db	109	;'m'
  5162  00FE73  6D                 	db	109	;'m'
  5163  00FE74  61                 	db	97	;'a'
  5164  00FE75  6E                 	db	110	;'n'
  5165  00FE76  64                 	db	100	;'d'
  5166  00FE77  73                 	db	115	;'s'
  5167  00FE78  3A                 	db	58	;':'
  5168  00FE79  00                 	db	0
  5169  00FE7A                     STR_137:
  5170  00FE7A  49                 	db	73	;'I'
  5171  00FE7B  52                 	db	82	;'R'
  5172  00FE7C  20                 	db	32
  5173  00FE7D  63                 	db	99	;'c'
  5174  00FE7E  6F                 	db	111	;'o'
  5175  00FE7F  6D                 	db	109	;'m'
  5176  00FE80  6D                 	db	109	;'m'
  5177  00FE81  61                 	db	97	;'a'
  5178  00FE82  6E                 	db	110	;'n'
  5179  00FE83  64                 	db	100	;'d'
  5180  00FE84  73                 	db	115	;'s'
  5181  00FE85  3A                 	db	58	;':'
  5182  00FE86  00                 	db	0
  5183  00FE87                     STR_162:
  5184  00FE87  52                 	db	82	;'R'
  5185  00FE88  46                 	db	70	;'F'
  5186  00FE89  20                 	db	32
  5187  00FE8A  63                 	db	99	;'c'
  5188  00FE8B  6C                 	db	108	;'l'
  5189  00FE8C  65                 	db	101	;'e'
  5190  00FE8D  61                 	db	97	;'a'
  5191  00FE8E  72                 	db	114	;'r'
  5192  00FE8F  20                 	db	32
  5193  00FE90  32                 	db	50	;'2'
  5194  00FE91  2C                 	db	44
  5195  00FE92  42                 	db	66	;'B'
  5196  00FE93  00                 	db	0
  5197  00FE94                     STR_156:
  5198  00FE94  52                 	db	82	;'R'
  5199  00FE95  46                 	db	70	;'F'
  5200  00FE96  20                 	db	32
  5201  00FE97  63                 	db	99	;'c'
  5202  00FE98  6C                 	db	108	;'l'
  5203  00FE99  65                 	db	101	;'e'
  5204  00FE9A  61                 	db	97	;'a'
  5205  00FE9B  72                 	db	114	;'r'
  5206  00FE9C  20                 	db	32
  5207  00FE9D  31                 	db	49	;'1'
  5208  00FE9E  2C                 	db	44
  5209  00FE9F  44                 	db	68	;'D'
  5210  00FEA0  00                 	db	0
  5211  00FEA1                     STR_164:
  5212  00FEA1  52                 	db	82	;'R'
  5213  00FEA2  46                 	db	70	;'F'
  5214  00FEA3  20                 	db	32
  5215  00FEA4  63                 	db	99	;'c'
  5216  00FEA5  6C                 	db	108	;'l'
  5217  00FEA6  65                 	db	101	;'e'
  5218  00FEA7  61                 	db	97	;'a'
  5219  00FEA8  72                 	db	114	;'r'
  5220  00FEA9  20                 	db	32
  5221  00FEAA  32                 	db	50	;'2'
  5222  00FEAB  2C                 	db	44
  5223  00FEAC  44                 	db	68	;'D'
  5224  00FEAD  00                 	db	0
  5225  00FEAE                     STR_158:
  5226  00FEAE  52                 	db	82	;'R'
  5227  00FEAF  46                 	db	70	;'F'
  5228  00FEB0  20                 	db	32
  5229  00FEB1  63                 	db	99	;'c'
  5230  00FEB2  6C                 	db	108	;'l'
  5231  00FEB3  65                 	db	101	;'e'
  5232  00FEB4  61                 	db	97	;'a'
  5233  00FEB5  72                 	db	114	;'r'
  5234  00FEB6  20                 	db	32
  5235  00FEB7  31                 	db	49	;'1'
  5236  00FEB8  2C                 	db	44
  5237  00FEB9  45                 	db	69	;'E'
  5238  00FEBA  00                 	db	0
  5239  00FEBB                     STR_160:
  5240  00FEBB  52                 	db	82	;'R'
  5241  00FEBC  46                 	db	70	;'F'
  5242  00FEBD  20                 	db	32
  5243  00FEBE  63                 	db	99	;'c'
  5244  00FEBF  6C                 	db	108	;'l'
  5245  00FEC0  65                 	db	101	;'e'
  5246  00FEC1  61                 	db	97	;'a'
  5247  00FEC2  72                 	db	114	;'r'
  5248  00FEC3  20                 	db	32
  5249  00FEC4  31                 	db	49	;'1'
  5250  00FEC5  2C                 	db	44
  5251  00FEC6  46                 	db	70	;'F'
  5252  00FEC7  00                 	db	0
  5253  00FEC8                     STR_166:
  5254  00FEC8  52                 	db	82	;'R'
  5255  00FEC9  46                 	db	70	;'F'
  5256  00FECA  20                 	db	32
  5257  00FECB  63                 	db	99	;'c'
  5258  00FECC  6C                 	db	108	;'l'
  5259  00FECD  65                 	db	101	;'e'
  5260  00FECE  61                 	db	97	;'a'
  5261  00FECF  72                 	db	114	;'r'
  5262  00FED0  20                 	db	32
  5263  00FED1  32                 	db	50	;'2'
  5264  00FED2  2C                 	db	44
  5265  00FED3  48                 	db	72	;'H'
  5266  00FED4  00                 	db	0
  5267  00FED5                     STR_49:
  5268  00FED5  52                 	db	82	;'R'
  5269  00FED6  65                 	db	101	;'e'
  5270  00FED7  6D                 	db	109	;'m'
  5271  00FED8  6F                 	db	111	;'o'
  5272  00FED9  74                 	db	116	;'t'
  5273  00FEDA  65                 	db	101	;'e'
  5274  00FEDB  42                 	db	66	;'B'
  5275  00FEDC  75                 	db	117	;'u'
  5276  00FEDD  74                 	db	116	;'t'
  5277  00FEDE  74                 	db	116	;'t'
  5278  00FEDF  6F                 	db	111	;'o'
  5279  00FEE0  6E                 	db	110	;'n'
  5280  00FEE1  00                 	db	0
  5281  00FEE2                     STR_19:
  5282  00FEE2  42                 	db	66	;'B'
  5283  00FEE3  54                 	db	84	;'T'
  5284  00FEE4  4E                 	db	78	;'N'
  5285  00FEE5  61                 	db	97	;'a'
  5286  00FEE6  6D                 	db	109	;'m'
  5287  00FEE7  65                 	db	101	;'e'
  5288  00FEE8  3D                 	db	61	;'='
  5289  00FEE9  25                 	db	37
  5290  00FEEA  73                 	db	115	;'s'
  5291  00FEEB  0D                 	db	13
  5292  00FEEC  00                 	db	0
  5293  00FEED                     STR_150:
  5294  00FEED  52                 	db	82	;'R'
  5295  00FEEE  46                 	db	70	;'F'
  5296  00FEEF  20                 	db	32
  5297  00FEF0  73                 	db	115	;'s'
  5298  00FEF1  65                 	db	101	;'e'
  5299  00FEF2  74                 	db	116	;'t'
  5300  00FEF3  20                 	db	32
  5301  00FEF4  32                 	db	50	;'2'
  5302  00FEF5  2C                 	db	44
  5303  00FEF6  42                 	db	66	;'B'
  5304  00FEF7  00                 	db	0
  5305  00FEF8                     STR_144:
  5306  00FEF8  52                 	db	82	;'R'
  5307  00FEF9  46                 	db	70	;'F'
  5308  00FEFA  20                 	db	32
  5309  00FEFB  73                 	db	115	;'s'
  5310  00FEFC  65                 	db	101	;'e'
  5311  00FEFD  74                 	db	116	;'t'
  5312  00FEFE  20                 	db	32
  5313  00FEFF  31                 	db	49	;'1'
  5314  00FF00  2C                 	db	44
  5315  00FF01  44                 	db	68	;'D'
  5316  00FF02  00                 	db	0
  5317  00FF03                     STR_152:
  5318  00FF03  52                 	db	82	;'R'
  5319  00FF04  46                 	db	70	;'F'
  5320  00FF05  20                 	db	32
  5321  00FF06  73                 	db	115	;'s'
  5322  00FF07  65                 	db	101	;'e'
  5323  00FF08  74                 	db	116	;'t'
  5324  00FF09  20                 	db	32
  5325  00FF0A  32                 	db	50	;'2'
  5326  00FF0B  2C                 	db	44
  5327  00FF0C  44                 	db	68	;'D'
  5328  00FF0D  00                 	db	0
  5329  00FF0E                     STR_146:
  5330  00FF0E  52                 	db	82	;'R'
  5331  00FF0F  46                 	db	70	;'F'
  5332  00FF10  20                 	db	32
  5333  00FF11  73                 	db	115	;'s'
  5334  00FF12  65                 	db	101	;'e'
  5335  00FF13  74                 	db	116	;'t'
  5336  00FF14  20                 	db	32
  5337  00FF15  31                 	db	49	;'1'
  5338  00FF16  2C                 	db	44
  5339  00FF17  45                 	db	69	;'E'
  5340  00FF18  00                 	db	0
  5341  00FF19                     STR_148:
  5342  00FF19  52                 	db	82	;'R'
  5343  00FF1A  46                 	db	70	;'F'
  5344  00FF1B  20                 	db	32
  5345  00FF1C  73                 	db	115	;'s'
  5346  00FF1D  65                 	db	101	;'e'
  5347  00FF1E  74                 	db	116	;'t'
  5348  00FF1F  20                 	db	32
  5349  00FF20  31                 	db	49	;'1'
  5350  00FF21  2C                 	db	44
  5351  00FF22  46                 	db	70	;'F'
  5352  00FF23  00                 	db	0
  5353  00FF24                     STR_154:
  5354  00FF24  52                 	db	82	;'R'
  5355  00FF25  46                 	db	70	;'F'
  5356  00FF26  20                 	db	32
  5357  00FF27  73                 	db	115	;'s'
  5358  00FF28  65                 	db	101	;'e'
  5359  00FF29  74                 	db	116	;'t'
  5360  00FF2A  20                 	db	32
  5361  00FF2B  32                 	db	50	;'2'
  5362  00FF2C  2C                 	db	44
  5363  00FF2D  48                 	db	72	;'H'
  5364  00FF2E  00                 	db	0
  5365  00FF2F                     STR_142:
  5366  00FF2F  52                 	db	82	;'R'
  5367  00FF30  46                 	db	70	;'F'
  5368  00FF31  20                 	db	32
  5369  00FF32  73                 	db	115	;'s'
  5370  00FF33  65                 	db	101	;'e'
  5371  00FF34  74                 	db	116	;'t'
  5372  00FF35  20                 	db	32
  5373  00FF36  61                 	db	97	;'a'
  5374  00FF37  6C                 	db	108	;'l'
  5375  00FF38  6C                 	db	108	;'l'
  5376  00FF39  00                 	db	0
  5377  00FF3A                     STR_43:
  5378  00FF3A  20                 	db	32
  5379  00FF3B  20                 	db	32
  5380  00FF3C  20                 	db	32
  5381  00FF3D  20                 	db	32
  5382  00FF3E  20                 	db	32
  5383  00FF3F  20                 	db	32
  5384  00FF40  20                 	db	32
  5385  00FF41  20                 	db	32
  5386  00FF42  6F                 	db	111	;'o'
  5387  00FF43  72                 	db	114	;'r'
  5388  00FF44  00                 	db	0
  5389  00FF45                     STR_90:
  5390  00FF45  43                 	db	67	;'C'
  5391  00FF46  68                 	db	104	;'h'
  5392  00FF47  61                 	db	97	;'a'
  5393  00FF48  6E                 	db	110	;'n'
  5394  00FF49  67                 	db	103	;'g'
  5395  00FF4A  65                 	db	101	;'e'
  5396  00FF4B  20                 	db	32
  5397  00FF4C  53                 	db	83	;'S'
  5398  00FF4D  4E                 	db	78	;'N'
  5399  00FF4E  00                 	db	0
  5400  00FF4F                     STR_125:
  5401  00FF4F  48                 	db	72	;'H'
  5402  00FF50  65                 	db	101	;'e'
  5403  00FF51  6C                 	db	108	;'l'
  5404  00FF52  70                 	db	112	;'p'
  5405  00FF53  20                 	db	32
  5406  00FF54  4D                 	db	77	;'M'
  5407  00FF55  65                 	db	101	;'e'
  5408  00FF56  6E                 	db	110	;'n'
  5409  00FF57  75                 	db	117	;'u'
  5410  00FF58  00                 	db	0
  5411  00FF59                     STR_15:
  5412  00FF59  53                 	db	83	;'S'
  5413  00FF5A  59                 	db	89	;'Y'
  5414  00FF5B  2C                 	db	44
  5415  00FF5C  30                 	db	48	;'0'
  5416  00FF5D  30                 	db	48	;'0'
  5417  00FF5E  31                 	db	49	;'1'
  5418  00FF5F  30                 	db	48	;'0'
  5419  00FF60  0D                 	db	13
  5420  00FF61  00                 	db	0
  5421  00FF62                     STR_13:
  5422  00FF62  53                 	db	83	;'S'
  5423  00FF63  55                 	db	85	;'U'
  5424  00FF64  2C                 	db	44
  5425  00FF65  31                 	db	49	;'1'
  5426  00FF66  31                 	db	49	;'1'
  5427  00FF67  35                 	db	53	;'5'
  5428  00FF68  4B                 	db	75	;'K'
  5429  00FF69  0D                 	db	13
  5430  00FF6A  00                 	db	0
  5431  00FF6B                     STR_45:
  5432  00FF6B  45                 	db	69	;'E'
  5433  00FF6C  78                 	db	120	;'x'
  5434  00FF6D  61                 	db	97	;'a'
  5435  00FF6E  6D                 	db	109	;'m'
  5436  00FF6F  70                 	db	112	;'p'
  5437  00FF70  6C                 	db	108	;'l'
  5438  00FF71  65                 	db	101	;'e'
  5439  00FF72  3A                 	db	58	;':'
  5440  00FF73  00                 	db	0
  5441  00FF74                     STR_65:
  5442  00FF74  52                 	db	82	;'R'
  5443  00FF75  46                 	db	70	;'F'
  5444  00FF76  20                 	db	32
  5445  00FF77  63                 	db	99	;'c'
  5446  00FF78  6C                 	db	108	;'l'
  5447  00FF79  65                 	db	101	;'e'
  5448  00FF7A  61                 	db	97	;'a'
  5449  00FF7B  72                 	db	114	;'r'
  5450  00FF7C  00                 	db	0
  5451  00FF7D                     STR_111:
  5452  00FF7D  56                 	db	86	;'V'
  5453  00FF7E  6F                 	db	111	;'o'
  5454  00FF7F  6C                 	db	108	;'l'
  5455  00FF80  74                 	db	116	;'t'
  5456  00FF81  61                 	db	97	;'a'
  5457  00FF82  67                 	db	103	;'g'
  5458  00FF83  65                 	db	101	;'e'
  5459  00FF84  00                 	db	0
  5460  00FF85                     STR_189:
  5461  00FF85  28                 	db	40
  5462  00FF86  6E                 	db	110	;'n'
  5463  00FF87  75                 	db	117	;'u'
  5464  00FF88  6C                 	db	108	;'l'
  5465  00FF89  6C                 	db	108	;'l'
  5466  00FF8A  29                 	db	41
  5467  00FF8B  00                 	db	0
  5468  00FF8C                     STR_11:
  5469  00FF8C  53                 	db	83	;'S'
  5470  00FF8D  4E                 	db	78	;'N'
  5471  00FF8E  2C                 	db	44
  5472  00FF8F  25                 	db	37
  5473  00FF90  73                 	db	115	;'s'
  5474  00FF91  0D                 	db	13
  5475  00FF92  00                 	db	0
  5476  00FF93                     STR_41:
  5477  00FF93  55                 	db	85	;'U'
  5478  00FF94  73                 	db	115	;'s'
  5479  00FF95  61                 	db	97	;'a'
  5480  00FF96  67                 	db	103	;'g'
  5481  00FF97  65                 	db	101	;'e'
  5482  00FF98  3A                 	db	58	;':'
  5483  00FF99  00                 	db	0
  5484  00FF9A                     STR_22:
  5485  00FF9A  52                 	db	82	;'R'
  5486  00FF9B  66                 	db	102	;'f'
  5487  00FF9C  20                 	db	32
  5488  00FF9D  41                 	db	65	;'A'
  5489  00FF9E  6C                 	db	108	;'l'
  5490  00FF9F  6C                 	db	108	;'l'
  5491  00FFA0  00                 	db	0
  5492  00FFA1                     STR_171:
  5493  00FFA1  52                 	db	82	;'R'
  5494  00FFA2  46                 	db	70	;'F'
  5495  00FFA3  20                 	db	32
  5496  00FFA4  61                 	db	97	;'a'
  5497  00FFA5  6C                 	db	108	;'l'
  5498  00FFA6  6C                 	db	108	;'l'
  5499  00FFA7  00                 	db	0
  5500  00FFA8                     STR_64:
  5501  00FFA8  52                 	db	82	;'R'
  5502  00FFA9  46                 	db	70	;'F'
  5503  00FFAA  20                 	db	32
  5504  00FFAB  73                 	db	115	;'s'
  5505  00FFAC  65                 	db	101	;'e'
  5506  00FFAD  74                 	db	116	;'t'
  5507  00FFAE  00                 	db	0
  5508  00FFAF                     STR_16:
  5509  00FFAF  53                 	db	83	;'S'
  5510  00FFB0  7E                 	db	126
  5511  00FFB1  2C                 	db	44
  5512  00FFB2  30                 	db	48	;'0'
  5513  00FFB3  0D                 	db	13
  5514  00FFB4  00                 	db	0
  5515  00FFB5                     STR_23:
  5516  00FFB5  53                 	db	83	;'S'
  5517  00FFB6  65                 	db	101	;'e'
  5518  00FFB7  6E                 	db	110	;'n'
  5519  00FFB8  74                 	db	116	;'t'
  5520  00FFB9  20                 	db	32
  5521  00FFBA  00                 	db	0
  5522  00FFBB                     STR_24:
  5523  00FFBB  43                 	db	67	;'C'
  5524  00FFBC  6F                 	db	111	;'o'
  5525  00FFBD  6E                 	db	110	;'n'
  5526  00FFBE  66                 	db	102	;'f'
  5527  00FFBF  31                 	db	49	;'1'
  5528  00FFC0  00                 	db	0
  5529  00FFC1                     STR_26:
  5530  00FFC1  43                 	db	67	;'C'
  5531  00FFC2  6F                 	db	111	;'o'
  5532  00FFC3  6E                 	db	110	;'n'
  5533  00FFC4  66                 	db	102	;'f'
  5534  00FFC5  32                 	db	50	;'2'
  5535  00FFC6  00                 	db	0
  5536  00FFC7                     STR_85:
  5537  00FFC7  52                 	db	82	;'R'
  5538  00FFC8  65                 	db	101	;'e'
  5539  00FFC9  73                 	db	115	;'s'
  5540  00FFCA  65                 	db	101	;'e'
  5541  00FFCB  74                 	db	116	;'t'
  5542  00FFCC  00                 	db	0
  5543  00FFCD                     STR_20:
  5544  00FFCD  2D                 	db	45
  5545  00FFCE  2D                 	db	45
  5546  00FFCF  2D                 	db	45
  5547  00FFD0  0D                 	db	13
  5548  00FFD1  00                 	db	0
  5549  00FFD2                     STR_168:
  5550  00FFD2  4E                 	db	78	;'N'
  5551  00FFD3  45                 	db	69	;'E'
  5552  00FFD4  43                 	db	67	;'C'
  5553  00FFD5  3F                 	db	63	;'?'
  5554  00FFD6  00                 	db	0
  5555  00FFD7                     STR_93:
  5556  00FFD7  43                 	db	67	;'C'
  5557  00FFD8  6F                 	db	111	;'o'
  5558  00FFD9  64                 	db	100	;'d'
  5559  00FFDA  65                 	db	101	;'e'
  5560  00FFDB  00                 	db	0
  5561  00FFDC                     STR_119:
  5562  00FFDC  20                 	db	32
  5563  00FFDD  4D                 	db	77	;'M'
  5564  00FFDE  48                 	db	72	;'H'
  5565  00FFDF  7A                 	db	122	;'z'
  5566  00FFE0  00                 	db	0
  5567  00FFE1                     STR_6:
  5568  00FFE1  24                 	db	36
  5569  00FFE2  24                 	db	36
  5570  00FFE3  24                 	db	36
  5571  00FFE4  00                 	db	0
  5572  00FFE5                     STR_121:
  5573  00FFE5  3F                 	db	63	;'?'
  5574  00FFE6  3F                 	db	63	;'?'
  5575  00FFE7  3F                 	db	63	;'?'
  5576  00FFE8  00                 	db	0
  5577  00FFE9                     STR_28:
  5578  00FFE9  4E                 	db	78	;'N'
  5579  00FFEA  45                 	db	69	;'E'
  5580  00FFEB  43                 	db	67	;'C'
  5581  00FFEC  00                 	db	0
  5582  00FFED                     STR_7:
  5583  00FFED  43                 	db	67	;'C'
  5584  00FFEE  4D                 	db	77	;'M'
  5585  00FFEF  44                 	db	68	;'D'
  5586  00FFF0  00                 	db	0
  5587  00FFF1                     STR_21:
  5588  00FFF1  45                 	db	69	;'E'
  5589  00FFF2  4E                 	db	78	;'N'
  5590  00FFF3  44                 	db	68	;'D'
  5591  00FFF4  00                 	db	0
  5592  00FFF5                     STR_10:
  5593  00FFF5  41                 	db	65	;'A'
  5594  00FFF6  4F                 	db	79	;'O'
  5595  00FFF7  4B                 	db	75	;'K'
  5596  00FFF8  00                 	db	0
  5597  00FFF9                     STR_17:
  5598  00FFF9  44                 	db	68	;'D'
  5599  00FFFA  0D                 	db	13
  5600  00FFFB  00                 	db	0
  5601  00FFFC                     STR_8:
  5602  00FFFC  56                 	db	86	;'V'
  5603  00FFFD  0D                 	db	13
  5604  00FFFE  00                 	db	0
  5605  0000                     
  5606                           ; #config settings
  5607  00FFFF  00                 	db	0	; dummy byte at the end
  5608  0000                     
  5609                           	psect	cinit
  5610  009886                     __pcinit:
  5611                           	opt stack 0
  5612  009886                     start_initialization:
  5613                           	opt stack 0
  5614  009886                     __initialization:
  5615                           	opt stack 0
  5616                           
  5617                           ; Clear objects allocated to BANK6 (200 bytes)
  5618  009886  EE06  F000         	lfsr	0,__pbssBANK6
  5619  00988A  0EC8               	movlw	200
  5620  00988C                     clear_0:
  5621  00988C  6AEE               	clrf	postinc0,c
  5622  00988E  06E8               	decf	wreg,f,c
  5623  009890  E1FD               	bnz	clear_0
  5624                           
  5625                           ; Clear objects allocated to BANK5 (30 bytes)
  5626  009892  EE05  F032         	lfsr	0,__pbssBANK5
  5627  009896  0E1E               	movlw	30
  5628  009898                     clear_1:
  5629  009898  6AEE               	clrf	postinc0,c
  5630  00989A  06E8               	decf	wreg,f,c
  5631  00989C  E1FD               	bnz	clear_1
  5632                           
  5633                           ; Clear objects allocated to BANK4 (251 bytes)
  5634  00989E  EE04  F000         	lfsr	0,__pbssBANK4
  5635  0098A2  0EFB               	movlw	251
  5636  0098A4                     clear_2:
  5637  0098A4  6AEE               	clrf	postinc0,c
  5638  0098A6  06E8               	decf	wreg,f,c
  5639  0098A8  E1FD               	bnz	clear_2
  5640                           
  5641                           ; Clear objects allocated to BANK3 (12 bytes)
  5642  0098AA  EE03  F0E5         	lfsr	0,__pbssBANK3
  5643  0098AE  0E0C               	movlw	12
  5644  0098B0                     clear_3:
  5645  0098B0  6AEE               	clrf	postinc0,c
  5646  0098B2  06E8               	decf	wreg,f,c
  5647  0098B4  E1FD               	bnz	clear_3
  5648                           
  5649                           ; Clear objects allocated to BANK2 (102 bytes)
  5650  0098B6  EE02  F08A         	lfsr	0,__pbssBANK2
  5651  0098BA  0E66               	movlw	102
  5652  0098BC                     clear_4:
  5653  0098BC  6AEE               	clrf	postinc0,c
  5654  0098BE  06E8               	decf	wreg,f,c
  5655  0098C0  E1FD               	bnz	clear_4
  5656                           
  5657                           ; Clear objects allocated to BANK0 (10 bytes)
  5658  0098C2  EE00  F0F5         	lfsr	0,__pbssBANK0
  5659  0098C6  0E0A               	movlw	10
  5660  0098C8                     clear_5:
  5661  0098C8  6AEE               	clrf	postinc0,c
  5662  0098CA  06E8               	decf	wreg,f,c
  5663  0098CC  E1FD               	bnz	clear_5
  5664                           
  5665                           ; Clear objects allocated to COMRAM (18 bytes)
  5666  0098CE  EE00  F03A         	lfsr	0,__pbssCOMRAM
  5667  0098D2  0E12               	movlw	18
  5668  0098D4                     clear_6:
  5669  0098D4  6AEE               	clrf	postinc0,c
  5670  0098D6  06E8               	decf	wreg,f,c
  5671  0098D8  E1FD               	bnz	clear_6
  5672                           
  5673                           ; Initialize objects allocated to BANK5 (50 bytes)
  5674                           ; load TBLPTR registers with __pidataBANK5
  5675  0098DA  0ECC               	movlw	low __pidataBANK5
  5676  0098DC  6EF6               	movwf	tblptrl,c
  5677  0098DE  0EAA               	movlw	high __pidataBANK5
  5678  0098E0  6EF7               	movwf	tblptrh,c
  5679  0098E2  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  5680  0098E4  6EF8               	movwf	tblptru,c
  5681  0098E6  EE05  F000         	lfsr	0,__pdataBANK5
  5682  0098EA  EE10 F032          	lfsr	1,50
  5683  0098EE                     copy_data0:
  5684  0098EE  0009               	tblrd		*+
  5685  0098F0  CFF5 FFEE          	movff	tablat,postinc0
  5686  0098F4  50E5               	movf	postdec1,w,c
  5687  0098F6  50E1               	movf	fsr1l,w,c
  5688  0098F8  E1FA               	bnz	copy_data0
  5689                           
  5690                           ; Initialize objects allocated to BANK3 (4 bytes)
  5691                           ; load TBLPTR registers with __pidataBANK3
  5692  0098FA  0E23               	movlw	low __pidataBANK3
  5693  0098FC  6EF6               	movwf	tblptrl,c
  5694  0098FE  0EAF               	movlw	high __pidataBANK3
  5695  009900  6EF7               	movwf	tblptrh,c
  5696  009902  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  5697  009904  6EF8               	movwf	tblptru,c
  5698  009906  EE03  F0F1         	lfsr	0,__pdataBANK3
  5699  00990A  EE10 F004          	lfsr	1,4
  5700  00990E                     copy_data1:
  5701  00990E  0009               	tblrd		*+
  5702  009910  CFF5 FFEE          	movff	tablat,postinc0
  5703  009914  50E5               	movf	postdec1,w,c
  5704  009916  50E1               	movf	fsr1l,w,c
  5705  009918  E1FA               	bnz	copy_data1
  5706                           
  5707                           ; Initialize objects allocated to BANK0 (1 bytes)
  5708                           ; load TBLPTR registers with __pidataBANK0
  5709  00991A  0E2C               	movlw	low __pidataBANK0
  5710  00991C  6EF6               	movwf	tblptrl,c
  5711  00991E  0EAF               	movlw	high __pidataBANK0
  5712  009920  6EF7               	movwf	tblptrh,c
  5713  009922  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  5714  009924  6EF8               	movwf	tblptru,c
  5715  009926  0009               	tblrd		*+	;fetch initializer
  5716  009928  CFF5 F0FF          	movff	tablat,__pdataBANK0
  5717                           
  5718                           ; Initialize objects allocated to COMRAM (5 bytes)
  5719                           ; load TBLPTR registers with __pidataCOMRAM
  5720  00992C  0E1E               	movlw	low __pidataCOMRAM
  5721  00992E  6EF6               	movwf	tblptrl,c
  5722  009930  0EAF               	movlw	high __pidataCOMRAM
  5723  009932  6EF7               	movwf	tblptrh,c
  5724  009934  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  5725  009936  6EF8               	movwf	tblptru,c
  5726  009938  EE00  F04C         	lfsr	0,__pdataCOMRAM
  5727  00993C  EE10 F005          	lfsr	1,5
  5728  009940                     copy_data2:
  5729  009940  0009               	tblrd		*+
  5730  009942  CFF5 FFEE          	movff	tablat,postinc0
  5731  009946  50E5               	movf	postdec1,w,c
  5732  009948  50E1               	movf	fsr1l,w,c
  5733  00994A  E1FA               	bnz	copy_data2
  5734  00994C                     end_of_initialization:
  5735                           	opt stack 0
  5736  00994C                     __end_of__initialization:
  5737                           	opt stack 0
  5738  00994C  0100               	movlb	0
  5739  00994E  EF11  F028         	goto	_main	;jump to C main() function
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           postinc0	equ	0xFEE
  5745                           wreg	equ	0xFE8
  5746                           postdec1	equ	0xFE5
  5747                           fsr1l	equ	0xFE1
  5748                           
  5749                           	psect	bssCOMRAM
  5750  00003A                     __pbssCOMRAM:
  5751                           	opt stack 0
  5752  00003A                     _IRsendCode:
  5753                           	opt stack 0
  5754  00003A                     	ds	4
  5755  00003E                     _CommandStringPos:
  5756                           	opt stack 0
  5757  00003E                     	ds	1
  5758  00003F                     _IRbit:
  5759                           	opt stack 0
  5760  00003F                     	ds	1
  5761  000040                     _IRpinOLD:
  5762                           	opt stack 0
  5763  000040                     	ds	1
  5764  000041                     _IRrawCodeNum:
  5765                           	opt stack 0
  5766  000041                     	ds	1
  5767  000042                     _IRrepeatAmount:
  5768                           	opt stack 0
  5769  000042                     	ds	1
  5770  000043                     _IRrepeatflag:
  5771                           	opt stack 0
  5772  000043                     	ds	1
  5773  000044                     _RFConfig:
  5774                           	opt stack 0
  5775  000044                     	ds	1
  5776  000045                     _RFcodeBit:
  5777                           	opt stack 0
  5778  000045                     	ds	1
  5779  000046                     _RFcodePlace:
  5780                           	opt stack 0
  5781  000046                     	ds	1
  5782  000047                     _RFsendFlag:
  5783                           	opt stack 0
  5784  000047                     	ds	1
  5785  000048                     _Sendcount:
  5786                           	opt stack 0
  5787  000048                     	ds	1
  5788  000049                     _Timer1_Postscaler:
  5789                           	opt stack 0
  5790  000049                     	ds	1
  5791  00004A                     _Timer2_Postscaler:
  5792                           	opt stack 0
  5793  00004A                     	ds	1
  5794  00004B                     _Timer3_Postscaler:
  5795                           	opt stack 0
  5796  00004B                     	ds	1
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           postinc0	equ	0xFEE
  5802                           wreg	equ	0xFE8
  5803                           postdec1	equ	0xFE5
  5804                           fsr1l	equ	0xFE1
  5805                           
  5806                           	psect	dataCOMRAM
  5807  00004C                     __pdataCOMRAM:
  5808                           	opt stack 0
  5809  00004C                     _IRbitPosition:
  5810                           	opt stack 0
  5811  00004C                     	ds	1
  5812  00004D                     _IRcodePlace:
  5813                           	opt stack 0
  5814  00004D                     	ds	1
  5815  00004E                     _RF_IR:
  5816                           	opt stack 0
  5817  00004E                     	ds	1
  5818  00004F                     _RF_IR_Postscaler:
  5819                           	opt stack 0
  5820  00004F                     	ds	1
  5821  000050                     _ReceivingIR:
  5822                           	opt stack 0
  5823  000050                     	ds	1
  5824                           tblptru	equ	0xFF8
  5825                           tblptrh	equ	0xFF7
  5826                           tblptrl	equ	0xFF6
  5827                           tablat	equ	0xFF5
  5828                           postinc0	equ	0xFEE
  5829                           wreg	equ	0xFE8
  5830                           postdec1	equ	0xFE5
  5831                           fsr1l	equ	0xFE1
  5832                           
  5833                           	psect	bssBANK0
  5834  0000F5                     __pbssBANK0:
  5835                           	opt stack 0
  5836  0000F5                     _Conf2_ChannelB_Status:
  5837                           	opt stack 0
  5838  0000F5                     	ds	1
  5839  0000F6                     _Conf2_ChannelD_Status:
  5840                           	opt stack 0
  5841  0000F6                     	ds	1
  5842  0000F7                     _Conf2_ChannelH_1_Status:
  5843                           	opt stack 0
  5844  0000F7                     	ds	1
  5845  0000F8                     _Conf2_ChannelH_2_Status:
  5846                           	opt stack 0
  5847  0000F8                     	ds	1
  5848  0000F9                     _Conf2_ChannelH_3_Status:
  5849                           	opt stack 0
  5850  0000F9                     	ds	1
  5851  0000FA                     _IRcodeBit:
  5852                           	opt stack 0
  5853  0000FA                     	ds	1
  5854  0000FB                     _IRmod:
  5855                           	opt stack 0
  5856  0000FB                     	ds	1
  5857  0000FC                     _IRsendFlag:
  5858                           	opt stack 0
  5859  0000FC                     	ds	1
  5860  0000FD                     _IRaddress:
  5861                           	opt stack 0
  5862  0000FD                     	ds	1
  5863  0000FE                     _IRcommand:
  5864                           	opt stack 0
  5865  0000FE                     	ds	1
  5866                           tblptru	equ	0xFF8
  5867                           tblptrh	equ	0xFF7
  5868                           tblptrl	equ	0xFF6
  5869                           tablat	equ	0xFF5
  5870                           postinc0	equ	0xFEE
  5871                           wreg	equ	0xFE8
  5872                           postdec1	equ	0xFE5
  5873                           fsr1l	equ	0xFE1
  5874                           
  5875                           	psect	dataBANK0
  5876  0000FF                     __pdataBANK0:
  5877                           	opt stack 0
  5878  0000FF                     _Sent:
  5879                           	opt stack 0
  5880  0000FF                     	ds	1
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           postdec1	equ	0xFE5
  5888                           fsr1l	equ	0xFE1
  5889                           
  5890                           	psect	bssBANK2
  5891  00028A                     __pbssBANK2:
  5892                           	opt stack 0
  5893  00028A                     _RFsendCode:
  5894                           	opt stack 0
  5895  00028A                     	ds	20
  5896  00029E                     _Global2:
  5897                           	opt stack 0
  5898  00029E                     	ds	52
  5899  0002D2                     _Global1:
  5900                           	opt stack 0
  5901  0002D2                     	ds	30
  5902                           tblptru	equ	0xFF8
  5903                           tblptrh	equ	0xFF7
  5904                           tblptrl	equ	0xFF6
  5905                           tablat	equ	0xFF5
  5906                           postinc0	equ	0xFEE
  5907                           wreg	equ	0xFE8
  5908                           postdec1	equ	0xFE5
  5909                           fsr1l	equ	0xFE1
  5910                           
  5911                           	psect	bssBANK3
  5912  0003E5                     __pbssBANK3:
  5913                           	opt stack 0
  5914  0003E5                     _BatteryVoltage:
  5915                           	opt stack 0
  5916  0003E5                     	ds	3
  5917  0003E8                     _BluetoothChangeStatus:
  5918                           	opt stack 0
  5919  0003E8                     	ds	1
  5920  0003E9                     _BufferOverflow:
  5921                           	opt stack 0
  5922  0003E9                     	ds	1
  5923  0003EA                     _NewReceivedString:
  5924                           	opt stack 0
  5925  0003EA                     	ds	1
  5926  0003EB                     _ReceivedStringPos:
  5927                           	opt stack 0
  5928  0003EB                     	ds	1
  5929  0003EC                     _IR_NEC:
  5930                           	opt stack 0
  5931  0003EC                     	ds	4
  5932  0003F0                     _IR_New_Code:
  5933                           	opt stack 0
  5934  0003F0                     	ds	1
  5935                           tblptru	equ	0xFF8
  5936                           tblptrh	equ	0xFF7
  5937                           tblptrl	equ	0xFF6
  5938                           tablat	equ	0xFF5
  5939                           postinc0	equ	0xFEE
  5940                           wreg	equ	0xFE8
  5941                           postdec1	equ	0xFE5
  5942                           fsr1l	equ	0xFE1
  5943                           
  5944                           	psect	dataBANK3
  5945  0003F1                     __pdataBANK3:
  5946                           	opt stack 0
  5947  0003F1                     _IRtimeout:
  5948                           	opt stack 0
  5949  0003F1                     	ds	4
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           postdec1	equ	0xFE5
  5957                           fsr1l	equ	0xFE1
  5958                           
  5959                           	psect	bssBANK4
  5960  000400                     __pbssBANK4:
  5961                           	opt stack 0
  5962  000400                     _CommandString:
  5963                           	opt stack 0
  5964  000400                     	ds	100
  5965  000464                     _ReceivedString:
  5966                           	opt stack 0
  5967  000464                     	ds	100
  5968  0004C8                     _BluetoothFirmware1:
  5969                           	opt stack 0
  5970  0004C8                     	ds	30
  5971  0004E6                     _BluetoothBroadcast:
  5972                           	opt stack 0
  5973  0004E6                     	ds	21
  5974                           tblptru	equ	0xFF8
  5975                           tblptrh	equ	0xFF7
  5976                           tblptrl	equ	0xFF6
  5977                           tablat	equ	0xFF5
  5978                           postinc0	equ	0xFEE
  5979                           wreg	equ	0xFE8
  5980                           postdec1	equ	0xFE5
  5981                           fsr1l	equ	0xFE1
  5982                           
  5983                           	psect	bssBANK5
  5984  000532                     __pbssBANK5:
  5985                           	opt stack 0
  5986  000532                     _BluetoothFirmware2:
  5987                           	opt stack 0
  5988  000532                     	ds	30
  5989                           tblptru	equ	0xFF8
  5990                           tblptrh	equ	0xFF7
  5991                           tblptrl	equ	0xFF6
  5992                           tablat	equ	0xFF5
  5993                           postinc0	equ	0xFEE
  5994                           wreg	equ	0xFE8
  5995                           postdec1	equ	0xFE5
  5996                           fsr1l	equ	0xFE1
  5997                           
  5998                           	psect	dataBANK5
  5999  000500                     __pdataBANK5:
  6000                           	opt stack 0
  6001  000500                     _ProductName:
  6002                           	opt stack 0
  6003  000500                     	ds	50
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           postdec1	equ	0xFE5
  6011                           fsr1l	equ	0xFE1
  6012                           
  6013                           	psect	bssBANK6
  6014  000600                     __pbssBANK6:
  6015                           	opt stack 0
  6016  000600                     _IRRawCode:
  6017                           	opt stack 0
  6018  000600                     	ds	200
  6019                           tblptru	equ	0xFF8
  6020                           tblptrh	equ	0xFF7
  6021                           tblptrl	equ	0xFF6
  6022                           tablat	equ	0xFF5
  6023                           postinc0	equ	0xFEE
  6024                           wreg	equ	0xFE8
  6025                           postdec1	equ	0xFE5
  6026                           fsr1l	equ	0xFE1
  6027                           
  6028                           	psect	cstackBANK3
  6029  000300                     __pcstackBANK3:
  6030                           	opt stack 0
  6031  000300                     main@buf:
  6032                           	opt stack 0
  6033                           
  6034                           ; 100 bytes @ 0x0
  6035  000300                     	ds	100
  6036  000364                     main@BluetoothString:
  6037                           	opt stack 0
  6038                           
  6039                           ; 100 bytes @ 0x64
  6040  000364                     	ds	100
  6041  0003C8                     main@BroadcastTEMP:
  6042                           	opt stack 0
  6043                           
  6044                           ; 21 bytes @ 0xC8
  6045  0003C8                     	ds	21
  6046  0003DD                     main@IRtask:
  6047                           	opt stack 0
  6048                           
  6049                           ; 1 bytes @ 0xDD
  6050  0003DD                     	ds	1
  6051  0003DE                     main@Bluetoothtask:
  6052                           	opt stack 0
  6053                           
  6054                           ; 1 bytes @ 0xDE
  6055  0003DE                     	ds	1
  6056  0003DF                     main@BluetoothStringPos:
  6057                           	opt stack 0
  6058                           
  6059                           ; 1 bytes @ 0xDF
  6060  0003DF                     	ds	1
  6061  0003E0                     main@ConnectedOLD:
  6062                           	opt stack 0
  6063                           
  6064                           ; 1 bytes @ 0xE0
  6065  0003E0                     	ds	1
  6066  0003E1                     main@VoltageStatusOLD:
  6067                           	opt stack 0
  6068                           
  6069                           ; 1 bytes @ 0xE1
  6070  0003E1                     	ds	1
  6071  0003E2                     main@Connected:
  6072                           	opt stack 0
  6073                           
  6074                           ; 1 bytes @ 0xE2
  6075  0003E2                     	ds	1
  6076  0003E3                     main@i:
  6077                           	opt stack 0
  6078                           
  6079                           ; 1 bytes @ 0xE3
  6080  0003E3                     	ds	1
  6081  0003E4                     main@VoltageStatus:
  6082                           	opt stack 0
  6083                           
  6084                           ; 1 bytes @ 0xE4
  6085  0003E4                     	ds	1
  6086                           tblptru	equ	0xFF8
  6087                           tblptrh	equ	0xFF7
  6088                           tblptrl	equ	0xFF6
  6089                           tablat	equ	0xFF5
  6090                           postinc0	equ	0xFEE
  6091                           wreg	equ	0xFE8
  6092                           postdec1	equ	0xFE5
  6093                           fsr1l	equ	0xFE1
  6094                           
  6095                           	psect	cstackBANK2
  6096  000200                     __pcstackBANK2:
  6097                           	opt stack 0
  6098  000200                     UseBluetooth@buf:
  6099                           	opt stack 0
  6100                           
  6101                           ; 100 bytes @ 0x0
  6102  000200                     	ds	100
  6103  000264                     UseBluetooth@rfchannelSTR:
  6104                           	opt stack 0
  6105                           
  6106                           ; 10 bytes @ 0x64
  6107  000264                     	ds	10
  6108  00026E                     UseBluetooth@set:
  6109                           	opt stack 0
  6110                           
  6111                           ; 1 bytes @ 0x6E
  6112  00026E                     	ds	1
  6113  00026F                     UseBluetooth@ReceivedStringPosOLD:
  6114                           	opt stack 0
  6115                           
  6116                           ; 1 bytes @ 0x6F
  6117  00026F                     	ds	1
  6118  000270                     UseBluetooth@tempNec:
  6119                           	opt stack 0
  6120                           
  6121                           ; 4 bytes @ 0x70
  6122  000270                     	ds	4
  6123  000274                     UseBluetooth@SerialNumberTEMP:
  6124                           	opt stack 0
  6125                           
  6126                           ; 4 bytes @ 0x74
  6127  000274                     	ds	4
  6128  000278                     UseBluetooth@device:
  6129                           	opt stack 0
  6130                           
  6131                           ; 1 bytes @ 0x78
  6132  000278                     	ds	1
  6133  000279                     UseBluetooth@EnteredNEC:
  6134                           	opt stack 0
  6135                           
  6136                           ; 4 bytes @ 0x79
  6137  000279                     	ds	4
  6138  00027D                     UseBluetooth@ok:
  6139                           	opt stack 0
  6140                           
  6141                           ; 1 bytes @ 0x7D
  6142  00027D                     	ds	1
  6143  00027E                     UseBluetooth@EmptyPlace:
  6144                           	opt stack 0
  6145                           
  6146                           ; 1 bytes @ 0x7E
  6147  00027E                     	ds	1
  6148  00027F                     UseBluetooth@tempRFArray:
  6149                           	opt stack 0
  6150                           
  6151                           ; 1 bytes @ 0x7F
  6152  00027F                     	ds	1
  6153  000280                     UseBluetooth@timeout:
  6154                           	opt stack 0
  6155                           
  6156                           ; 1 bytes @ 0x80
  6157  000280                     	ds	1
  6158  000281                     UseBluetooth@rfconf:
  6159                           	opt stack 0
  6160                           
  6161                           ; 1 bytes @ 0x81
  6162  000281                     	ds	1
  6163  000282                     UseBluetooth@j:
  6164                           	opt stack 0
  6165                           
  6166                           ; 1 bytes @ 0x82
  6167  000282                     	ds	1
  6168  000283                     UseBluetooth@NecAddress:
  6169                           	opt stack 0
  6170                           
  6171                           ; 1 bytes @ 0x83
  6172  000283                     	ds	1
  6173  000284                     UseBluetooth@NecCommand:
  6174                           	opt stack 0
  6175                           
  6176                           ; 1 bytes @ 0x84
  6177  000284                     	ds	1
  6178  000285                     UseBluetooth@temp:
  6179                           	opt stack 0
  6180                           
  6181                           ; 4 bytes @ 0x85
  6182  000285                     	ds	4
  6183  000289                     UseBluetooth@i:
  6184                           	opt stack 0
  6185                           
  6186                           ; 1 bytes @ 0x89
  6187  000289                     	ds	1
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           postdec1	equ	0xFE5
  6195                           fsr1l	equ	0xFE1
  6196                           
  6197                           	psect	cstackBANK1
  6198  000100                     __pcstackBANK1:
  6199                           	opt stack 0
  6200  000100                     EnterCommandMode@buf:
  6201                           	opt stack 0
  6202  000100                     StringAddEqual@temp:
  6203                           	opt stack 0
  6204                           
  6205                           ; 255 bytes @ 0x0
  6206  000100                     	ds	50
  6207  000132                     EnterCommandMode@count:
  6208                           	opt stack 0
  6209                           
  6210                           ; 1 bytes @ 0x32
  6211  000132                     	ds	1
  6212  000133                     BluetoothInitialSetup@BluetoothVersionLine1:
  6213                           	opt stack 0
  6214                           
  6215                           ; 30 bytes @ 0x33
  6216  000133                     	ds	30
  6217  000151                     BluetoothInitialSetup@BluetoothVersionLine2:
  6218                           	opt stack 0
  6219                           
  6220                           ; 30 bytes @ 0x51
  6221  000151                     	ds	30
  6222  00016F                     BluetoothInitialSetup@BroadcastTEMP:
  6223                           	opt stack 0
  6224                           
  6225                           ; 21 bytes @ 0x6F
  6226  00016F                     	ds	21
  6227  000184                     BluetoothInitialSetup@buf:
  6228                           	opt stack 0
  6229                           
  6230                           ; 50 bytes @ 0x84
  6231  000184                     	ds	50
  6232  0001B6                     BluetoothInitialSetup@first:
  6233                           	opt stack 0
  6234                           
  6235                           ; 1 bytes @ 0xB6
  6236  0001B6                     	ds	1
  6237  0001B7                     BluetoothInitialSetup@Default:
  6238                           	opt stack 0
  6239                           
  6240                           ; 1 bytes @ 0xB7
  6241  0001B7                     	ds	1
  6242  0001B8                     BluetoothInitialSetup@j:
  6243                           	opt stack 0
  6244                           
  6245                           ; 1 bytes @ 0xB8
  6246  0001B8                     	ds	1
  6247  0001B9                     BluetoothInitialSetup@ok:
  6248                           	opt stack 0
  6249                           
  6250                           ; 1 bytes @ 0xB9
  6251  0001B9                     	ds	1
  6252  0001BA                     BluetoothInitialSetup@i:
  6253                           	opt stack 0
  6254                           
  6255                           ; 1 bytes @ 0xBA
  6256  0001BA                     	ds	1
  6257  0001BB                     Init_System@buf:
  6258                           	opt stack 0
  6259                           
  6260                           ; 50 bytes @ 0xBB
  6261  0001BB                     	ds	68
  6262                           tblptru	equ	0xFF8
  6263                           tblptrh	equ	0xFF7
  6264                           tblptrl	equ	0xFF6
  6265                           tablat	equ	0xFF5
  6266                           postinc0	equ	0xFEE
  6267                           wreg	equ	0xFE8
  6268                           postdec1	equ	0xFE5
  6269                           fsr1l	equ	0xFE1
  6270                           
  6271                           	psect	cstackBANK0
  6272  000060                     __pcstackBANK0:
  6273                           	opt stack 0
  6274  000060                     ??_isdigit:
  6275  000060                     ??_Reverse_Byte:
  6276  000060                     ?_ReadEEPROM_1Byte:
  6277                           	opt stack 0
  6278  000060                     ?___awmod:
  6279                           	opt stack 0
  6280  000060                     ?___ftpack:
  6281                           	opt stack 0
  6282  000060                     ?___ftneg:
  6283                           	opt stack 0
  6284  000060                     ?__tdiv_to_l_:
  6285                           	opt stack 0
  6286  000060                     ?__div_to_l_:
  6287                           	opt stack 0
  6288  000060                     ?_Reverse_4Byte:
  6289                           	opt stack 0
  6290  000060                     ?___lmul:
  6291                           	opt stack 0
  6292  000060                     ?___lldiv:
  6293                           	opt stack 0
  6294  000060                     IsLetter@data:
  6295                           	opt stack 0
  6296  000060                     IsNumber@data:
  6297                           	opt stack 0
  6298  000060                     UARTchar@data:
  6299                           	opt stack 0
  6300  000060                     UARTchar_CONST@data:
  6301                           	opt stack 0
  6302  000060                     ReadUSART@data:
  6303                           	opt stack 0
  6304  000060                     cleanBuffer@data:
  6305                           	opt stack 0
  6306  000060                     cleanBuffer16bit@data:
  6307                           	opt stack 0
  6308  000060                     StringMatch@This:
  6309                           	opt stack 0
  6310  000060                     StringContains@This:
  6311                           	opt stack 0
  6312  000060                     lowercaseString@Input:
  6313                           	opt stack 0
  6314  000060                     lowercaseChar@Input:
  6315                           	opt stack 0
  6316  000060                     GetStringAfterComma@This:
  6317                           	opt stack 0
  6318  000060                     OpenUSART@spbrg:
  6319                           	opt stack 0
  6320  000060                     ReadEEPROM_1Byte@address:
  6321                           	opt stack 0
  6322  000060                     WriteEEPROM_1Byte@address:
  6323                           	opt stack 0
  6324  000060                     SendRF@Code:
  6325                           	opt stack 0
  6326  000060                     ___awmod@dividend:
  6327                           	opt stack 0
  6328  000060                     __div_to_l_@f1:
  6329                           	opt stack 0
  6330  000060                     ___ftpack@arg:
  6331                           	opt stack 0
  6332  000060                     __tdiv_to_l_@f1:
  6333                           	opt stack 0
  6334  000060                     ___ftge@ff1:
  6335                           	opt stack 0
  6336  000060                     ___ftneg@f1:
  6337                           	opt stack 0
  6338  000060                     delayUS@US:
  6339                           	opt stack 0
  6340  000060                     Reverse_4Byte@This:
  6341                           	opt stack 0
  6342  000060                     ___lmul@multiplier:
  6343                           	opt stack 0
  6344  000060                     ___lldiv@dividend:
  6345                           	opt stack 0
  6346                           
  6347                           ; 4 bytes @ 0x0
  6348  000060                     	ds	1
  6349  000061                     IsAlphaNumeric@data:
  6350                           	opt stack 0
  6351  000061                     UARTchar_CONST@temp:
  6352                           	opt stack 0
  6353  000061                     _isdigit$3767:
  6354                           	opt stack 0
  6355  000061                     UARTstring@data:
  6356                           	opt stack 0
  6357                           
  6358                           ; 2 bytes @ 0x1
  6359  000061                     	ds	1
  6360  000062                     Reverse_Byte@temp:
  6361                           	opt stack 0
  6362  000062                     GetStringAfterComma@CommaNumber:
  6363                           	opt stack 0
  6364  000062                     OpenUSART@config:
  6365                           	opt stack 0
  6366  000062                     ReadEEPROM_1Byte@GIEstatus:
  6367                           	opt stack 0
  6368  000062                     WriteEEPROM_1Byte@data:
  6369                           	opt stack 0
  6370  000062                     SendRF@Config:
  6371                           	opt stack 0
  6372  000062                     isdigit@c:
  6373                           	opt stack 0
  6374  000062                     IsAlphaNumericString@data:
  6375                           	opt stack 0
  6376  000062                     cleanBuffer@count:
  6377                           	opt stack 0
  6378  000062                     cleanBuffer16bit@count:
  6379                           	opt stack 0
  6380  000062                     StringMatch@That:
  6381                           	opt stack 0
  6382  000062                     StringContains@That:
  6383                           	opt stack 0
  6384  000062                     UARTstring_CONST@data:
  6385                           	opt stack 0
  6386  000062                     ___awmod@divisor:
  6387                           	opt stack 0
  6388                           
  6389                           ; 2 bytes @ 0x2
  6390  000062                     	ds	1
  6391  000063                     Reverse_Byte@This:
  6392                           	opt stack 0
  6393  000063                     ReadEEPROM_1Byte@PEIEstatus:
  6394                           	opt stack 0
  6395  000063                     WriteEEPROM_1Byte@GIEstatus:
  6396                           	opt stack 0
  6397  000063                     SendRF@size:
  6398                           	opt stack 0
  6399  000063                     ___ftpack@exp:
  6400                           	opt stack 0
  6401  000063                     StringMatchCaseInsensitive@This:
  6402                           	opt stack 0
  6403  000063                     StringContainsCaseInsensitive@This:
  6404                           	opt stack 0
  6405  000063                     GetStringAfterComma@result:
  6406                           	opt stack 0
  6407  000063                     __div_to_l_@f2:
  6408                           	opt stack 0
  6409  000063                     __tdiv_to_l_@f2:
  6410                           	opt stack 0
  6411  000063                     ___ftge@ff2:
  6412                           	opt stack 0
  6413                           
  6414                           ; 3 bytes @ 0x3
  6415  000063                     	ds	1
  6416  000064                     ??_cleanBuffer:
  6417  000064                     ??_delayUS:
  6418  000064                     ??_cleanBuffer16bit:
  6419  000064                     ??_StringMatch:
  6420  000064                     ??_StringContains:
  6421  000064                     ??_Reverse_4Byte:
  6422  000064                     ?_GetMemoryChar:
  6423                           	opt stack 0
  6424  000064                     ?_GetMemoryLong:
  6425                           	opt stack 0
  6426  000064                     ?_EncodeNEC:
  6427                           	opt stack 0
  6428  000064                     WriteEEPROM_1Byte@PEIEstatus:
  6429                           	opt stack 0
  6430  000064                     EncodeNEC@command:
  6431                           	opt stack 0
  6432  000064                     SendRF@RepeatAmount:
  6433                           	opt stack 0
  6434  000064                     DisplayRF_Channel@channel:
  6435                           	opt stack 0
  6436  000064                     ___awmod@counter:
  6437                           	opt stack 0
  6438  000064                     ___ftpack@sign:
  6439                           	opt stack 0
  6440  000064                     UARTstringCRLN@data:
  6441                           	opt stack 0
  6442  000064                     UARTstringCRLN_CONST@data:
  6443                           	opt stack 0
  6444  000064                     UARTcommandMenu@Command:
  6445                           	opt stack 0
  6446  000064                     DecodeNEC@Nec:
  6447                           	opt stack 0
  6448  000064                     ___lmul@multiplicand:
  6449                           	opt stack 0
  6450  000064                     ___lldiv@divisor:
  6451                           	opt stack 0
  6452                           
  6453                           ; 4 bytes @ 0x4
  6454  000064                     	ds	1
  6455  000065                     ??___ftpack:
  6456  000065                     ??_SendRF:
  6457  000065                     ___awmod@sign:
  6458                           	opt stack 0
  6459  000065                     StringMatchCaseInsensitive@That:
  6460                           	opt stack 0
  6461  000065                     StringContainsCaseInsensitive@That:
  6462                           	opt stack 0
  6463  000065                     delayUS@i:
  6464                           	opt stack 0
  6465                           
  6466                           ; 4 bytes @ 0x5
  6467  000065                     	ds	1
  6468  000066                     ??__tdiv_to_l_:
  6469  000066                     ??___ftge:
  6470  000066                     ?___awdiv:
  6471                           	opt stack 0
  6472  000066                     StringContains@MatchAmount:
  6473                           	opt stack 0
  6474  000066                     GetStringAfterComma@tempCommaNumber:
  6475                           	opt stack 0
  6476  000066                     UARTcommandMenu@Desc:
  6477                           	opt stack 0
  6478  000066                     ___awdiv@dividend:
  6479                           	opt stack 0
  6480  000066                     __div_to_l_@quot:
  6481                           	opt stack 0
  6482                           
  6483                           ; 4 bytes @ 0x6
  6484  000066                     	ds	1
  6485  000067                     ??_StringContainsCaseInsensitive:
  6486  000067                     cleanBuffer@i:
  6487                           	opt stack 0
  6488  000067                     cleanBuffer16bit@i:
  6489                           	opt stack 0
  6490  000067                     StringMatchCaseInsensitive@tempThis:
  6491                           	opt stack 0
  6492  000067                     StringContains@MatchCount:
  6493                           	opt stack 0
  6494  000067                     GetStringAfterComma@count:
  6495                           	opt stack 0
  6496  000067                     SendRF@i:
  6497                           	opt stack 0
  6498                           
  6499                           ; 1 bytes @ 0x7
  6500  000067                     	ds	1
  6501  000068                     ??_GetMemoryLong:
  6502  000068                     ??_UARTcommandMenu:
  6503  000068                     ??_EncodeNEC:
  6504  000068                     ?___altoft:
  6505                           	opt stack 0
  6506  000068                     ?___lltoft:
  6507                           	opt stack 0
  6508  000068                     ?___lwtoft:
  6509                           	opt stack 0
  6510  000068                     StringMatchCaseInsensitive@tempThat:
  6511                           	opt stack 0
  6512  000068                     StringContains@i:
  6513                           	opt stack 0
  6514  000068                     GetMemoryChar@AddressFirst:
  6515                           	opt stack 0
  6516  000068                     BufferCopy@from:
  6517                           	opt stack 0
  6518  000068                     DecodeNEC@address:
  6519                           	opt stack 0
  6520  000068                     SendRF_wait@Code:
  6521                           	opt stack 0
  6522  000068                     ___awdiv@divisor:
  6523                           	opt stack 0
  6524  000068                     ___lwtoft@c:
  6525                           	opt stack 0
  6526  000068                     ___lmul@product:
  6527                           	opt stack 0
  6528  000068                     ___altoft@c:
  6529                           	opt stack 0
  6530  000068                     ___lldiv@quotient:
  6531                           	opt stack 0
  6532  000068                     ___lltoft@c:
  6533                           	opt stack 0
  6534                           
  6535                           ; 4 bytes @ 0x8
  6536  000068                     	ds	1
  6537  000069                     StringContainsCaseInsensitive@MatchAmount:
  6538                           	opt stack 0
  6539  000069                     GetMemoryChar@H:
  6540                           	opt stack 0
  6541  000069                     ReadCodeButtons@temp:
  6542                           	opt stack 0
  6543  000069                     WaitForIRsignal@timeout:
  6544                           	opt stack 0
  6545  000069                     InternalADC_Read@ADCcounts:
  6546                           	opt stack 0
  6547  000069                     __tdiv_to_l_@quot:
  6548                           	opt stack 0
  6549                           
  6550                           ; 4 bytes @ 0x9
  6551  000069                     	ds	1
  6552  00006A                     StringContainsCaseInsensitive@MatchCount:
  6553                           	opt stack 0
  6554  00006A                     SetMemoryChar@AddressFirst:
  6555                           	opt stack 0
  6556  00006A                     SendRF_wait@Config:
  6557                           	opt stack 0
  6558  00006A                     ___awdiv@counter:
  6559                           	opt stack 0
  6560  00006A                     __div_to_l_@cntr:
  6561                           	opt stack 0
  6562  00006A                     BufferCopy@to:
  6563                           	opt stack 0
  6564  00006A                     DecodeNEC@command:
  6565                           	opt stack 0
  6566                           
  6567                           ; 2 bytes @ 0xA
  6568  00006A                     	ds	1
  6569  00006B                     ??_InternalADC_Read:
  6570  00006B                     ?___ftdiv:
  6571                           	opt stack 0
  6572  00006B                     StringContainsCaseInsensitive@tempThis:
  6573                           	opt stack 0
  6574  00006B                     SetMemoryChar@Test:
  6575                           	opt stack 0
  6576  00006B                     SendRF_wait@size:
  6577                           	opt stack 0
  6578  00006B                     ___awdiv@sign:
  6579                           	opt stack 0
  6580  00006B                     __div_to_l_@exp1:
  6581                           	opt stack 0
  6582  00006B                     ___ftdiv@f1:
  6583                           	opt stack 0
  6584                           
  6585                           ; 3 bytes @ 0xB
  6586  00006B                     	ds	1
  6587  00006C                     ??_DecodeNEC:
  6588  00006C                     ??___altoft:
  6589  00006C                     ??___lltoft:
  6590  00006C                     BufferCopy@count:
  6591                           	opt stack 0
  6592  00006C                     StringContainsCaseInsensitive@tempThat:
  6593                           	opt stack 0
  6594  00006C                     SetMemoryChar@Data:
  6595                           	opt stack 0
  6596  00006C                     SendRF_wait@amount:
  6597                           	opt stack 0
  6598  00006C                     ___lldiv@counter:
  6599                           	opt stack 0
  6600  00006C                     GetNumber@This:
  6601                           	opt stack 0
  6602  00006C                     GetNumberUnsigned@This:
  6603                           	opt stack 0
  6604  00006C                     ___awdiv@quotient:
  6605                           	opt stack 0
  6606  00006C                     Reverse_4Byte@temp:
  6607                           	opt stack 0
  6608                           
  6609                           ; 4 bytes @ 0xC
  6610  00006C                     	ds	1
  6611  00006D                     ?___llmod:
  6612                           	opt stack 0
  6613  00006D                     BufferCopy@shift:
  6614                           	opt stack 0
  6615  00006D                     StringContainsCaseInsensitive@i:
  6616                           	opt stack 0
  6617  00006D                     UARTcommandMenu@i:
  6618                           	opt stack 0
  6619  00006D                     InternalADC_Read@AnaChanSel:
  6620                           	opt stack 0
  6621  00006D                     SendRF_Channel@channel:
  6622                           	opt stack 0
  6623  00006D                     __tdiv_to_l_@cntr:
  6624                           	opt stack 0
  6625  00006D                     ___llmod@dividend:
  6626                           	opt stack 0
  6627                           
  6628                           ; 4 bytes @ 0xD
  6629  00006D                     	ds	1
  6630  00006E                     ?___wmul:
  6631                           	opt stack 0
  6632  00006E                     BufferCopy@i:
  6633                           	opt stack 0
  6634  00006E                     GetNumber@CommaNumber:
  6635                           	opt stack 0
  6636  00006E                     GetNumberUnsigned@CommaNumber:
  6637                           	opt stack 0
  6638  00006E                     UARTcommandMenu@place:
  6639                           	opt stack 0
  6640  00006E                     InternalADC_Read@channel:
  6641                           	opt stack 0
  6642  00006E                     __tdiv_to_l_@exp1:
  6643                           	opt stack 0
  6644  00006E                     ___wmul@multiplier:
  6645                           	opt stack 0
  6646  00006E                     ___ftdiv@f2:
  6647                           	opt stack 0
  6648                           
  6649                           ; 3 bytes @ 0xE
  6650  00006E                     	ds	1
  6651  00006F                     GetNumber@result:
  6652                           	opt stack 0
  6653  00006F                     GetNumberUnsigned@result:
  6654                           	opt stack 0
  6655  00006F                     StringAddEqual@Input:
  6656                           	opt stack 0
  6657                           
  6658                           ; 2 bytes @ 0xF
  6659  00006F                     	ds	1
  6660  000070                     DecodeNEC@temp2:
  6661                           	opt stack 0
  6662  000070                     ___altoft@exp:
  6663                           	opt stack 0
  6664  000070                     ___lltoft@exp:
  6665                           	opt stack 0
  6666  000070                     ___wmul@multiplicand:
  6667                           	opt stack 0
  6668  000070                     SendNEC_bytes@code:
  6669                           	opt stack 0
  6670                           
  6671                           ; 4 bytes @ 0x10
  6672  000070                     	ds	1
  6673  000071                     ??___ftdiv:
  6674  000071                     ??_GetNumber:
  6675  000071                     ??_GetNumberUnsigned:
  6676  000071                     ??_StringAddEqual:
  6677  000071                     DecodeNEC@temp3:
  6678                           	opt stack 0
  6679  000071                     ___altoft@sign:
  6680                           	opt stack 0
  6681  000071                     ___llmod@divisor:
  6682                           	opt stack 0
  6683                           
  6684                           ; 4 bytes @ 0x11
  6685  000071                     	ds	1
  6686  000072                     DecodeNEC@temp1:
  6687                           	opt stack 0
  6688  000072                     ___wmul@product:
  6689                           	opt stack 0
  6690                           
  6691                           ; 2 bytes @ 0x12
  6692  000072                     	ds	1
  6693  000073                     StringAddEqual@NullPosition:
  6694                           	opt stack 0
  6695                           
  6696                           ; 1 bytes @ 0x13
  6697  000073                     	ds	1
  6698  000074                     StringAddEqual@firstnumber:
  6699                           	opt stack 0
  6700  000074                     SendNEC_bytes@RepeatAmount:
  6701                           	opt stack 0
  6702  000074                     ___ftdiv@cntr:
  6703                           	opt stack 0
  6704                           
  6705                           ; 1 bytes @ 0x14
  6706  000074                     	ds	1
  6707  000075                     StringAddEqual@i:
  6708                           	opt stack 0
  6709  000075                     ___llmod@counter:
  6710                           	opt stack 0
  6711  000075                     ___ftdiv@f3:
  6712                           	opt stack 0
  6713  000075                     SendNEC_wait@code:
  6714                           	opt stack 0
  6715                           
  6716                           ; 4 bytes @ 0x15
  6717  000075                     	ds	1
  6718  000076                     GetNumber@tempCommaNumber:
  6719                           	opt stack 0
  6720  000076                     GetNumberUnsigned@tempCommaNumber:
  6721                           	opt stack 0
  6722  000076                     StringAddEqual@j:
  6723                           	opt stack 0
  6724                           
  6725                           ; 1 bytes @ 0x16
  6726  000076                     	ds	1
  6727  000077                     GetNumber@negative:
  6728                           	opt stack 0
  6729  000077                     GetNumberUnsigned@count:
  6730                           	opt stack 0
  6731                           
  6732                           ; 1 bytes @ 0x17
  6733  000077                     	ds	1
  6734  000078                     GetNumber@count:
  6735                           	opt stack 0
  6736  000078                     GetNumberUnsigned@Hex:
  6737                           	opt stack 0
  6738  000078                     ___ftdiv@exp:
  6739                           	opt stack 0
  6740                           
  6741                           ; 1 bytes @ 0x18
  6742  000078                     	ds	1
  6743  000079                     GetNumber@Hex:
  6744                           	opt stack 0
  6745  000079                     GetNumberUnsigned@i:
  6746                           	opt stack 0
  6747  000079                     SendNEC_wait@RepeatAmount:
  6748                           	opt stack 0
  6749  000079                     ___ftdiv@sign:
  6750                           	opt stack 0
  6751                           
  6752                           ; 1 bytes @ 0x19
  6753  000079                     	ds	1
  6754  00007A                     ?___ftmul:
  6755                           	opt stack 0
  6756  00007A                     GetNumber@i:
  6757                           	opt stack 0
  6758  00007A                     SendNEC_wait@toggle:
  6759                           	opt stack 0
  6760  00007A                     ___ftmul@f1:
  6761                           	opt stack 0
  6762  00007A                     GetNumberUnsigned@temp:
  6763                           	opt stack 0
  6764                           
  6765                           ; 4 bytes @ 0x1A
  6766  00007A                     	ds	1
  6767  00007B                     GetNumber@tempThis:
  6768                           	opt stack 0
  6769                           
  6770                           ; 1 bytes @ 0x1B
  6771  00007B                     	ds	1
  6772  00007C                     GetNumber@temp:
  6773                           	opt stack 0
  6774  00007C                     GetMemoryLong@temp:
  6775                           	opt stack 0
  6776  00007C                     EncodeNEC@temp1:
  6777                           	opt stack 0
  6778                           
  6779                           ; 4 bytes @ 0x1C
  6780  00007C                     	ds	1
  6781  00007D                     ___ftmul@f2:
  6782                           	opt stack 0
  6783                           
  6784                           ; 3 bytes @ 0x1D
  6785  00007D                     	ds	1
  6786  00007E                     GetNumberUnsigned@tempThis:
  6787                           	opt stack 0
  6788                           
  6789                           ; 1 bytes @ 0x1E
  6790  00007E                     	ds	2
  6791  000080                     ??___ftmul:
  6792  000080                     GetMemoryLong@H:
  6793                           	opt stack 0
  6794  000080                     EncodeNEC@temp2:
  6795                           	opt stack 0
  6796                           
  6797                           ; 4 bytes @ 0x20
  6798  000080                     	ds	1
  6799  000081                     GetMemoryLong@MH:
  6800                           	opt stack 0
  6801                           
  6802                           ; 1 bytes @ 0x21
  6803  000081                     	ds	1
  6804  000082                     GetMemoryLong@ML:
  6805                           	opt stack 0
  6806                           
  6807                           ; 1 bytes @ 0x22
  6808  000082                     	ds	1
  6809  000083                     GetMemoryLong@L:
  6810                           	opt stack 0
  6811  000083                     ___ftmul@exp:
  6812                           	opt stack 0
  6813                           
  6814                           ; 1 bytes @ 0x23
  6815  000083                     	ds	1
  6816  000084                     GetMemoryLong@AddressFirst:
  6817                           	opt stack 0
  6818  000084                     ___ftmul@f3_as_product:
  6819                           	opt stack 0
  6820  000084                     EncodeNEC@temp3:
  6821                           	opt stack 0
  6822                           
  6823                           ; 4 bytes @ 0x24
  6824  000084                     	ds	1
  6825  000085                     GetEEPROM1@Temp:
  6826                           	opt stack 0
  6827  000085                     GetEEPROM2@Temp:
  6828                           	opt stack 0
  6829  000085                     SetMemoryLong@Data:
  6830                           	opt stack 0
  6831                           
  6832                           ; 4 bytes @ 0x25
  6833  000085                     	ds	2
  6834  000087                     ??_GetEEPROM1:
  6835  000087                     ??_GetEEPROM2:
  6836  000087                     ___ftmul@cntr:
  6837                           	opt stack 0
  6838                           
  6839                           ; 1 bytes @ 0x27
  6840  000087                     	ds	1
  6841  000088                     ___ftmul@sign:
  6842                           	opt stack 0
  6843  000088                     EncodeNEC@temp4:
  6844                           	opt stack 0
  6845                           
  6846                           ; 4 bytes @ 0x28
  6847  000088                     	ds	1
  6848  000089                     ?_ReadVoltage:
  6849                           	opt stack 0
  6850  000089                     ?_fround:
  6851                           	opt stack 0
  6852  000089                     ?_scale:
  6853                           	opt stack 0
  6854  000089                     GetEEPROM1@Arrayspot:
  6855                           	opt stack 0
  6856  000089                     GetEEPROM2@Arrayspot:
  6857                           	opt stack 0
  6858  000089                     SetMemoryLong@AddressFirst:
  6859                           	opt stack 0
  6860                           
  6861                           ; 1 bytes @ 0x29
  6862  000089                     	ds	1
  6863  00008A                     ??_SetMemoryLong:
  6864  00008A                     GetEEPROM1@i:
  6865                           	opt stack 0
  6866  00008A                     GetEEPROM2@i:
  6867                           	opt stack 0
  6868                           
  6869                           ; 1 bytes @ 0x2A
  6870  00008A                     	ds	1
  6871  00008B                     GetEEPROM1@j:
  6872                           	opt stack 0
  6873  00008B                     GetEEPROM2@j:
  6874                           	opt stack 0
  6875                           
  6876                           ; 1 bytes @ 0x2B
  6877  00008B                     	ds	1
  6878  00008C                     GetEEPROM2@k:
  6879                           	opt stack 0
  6880  00008C                     EncodeNEC@address:
  6881                           	opt stack 0
  6882  00008C                     ReadVoltage@voltage:
  6883                           	opt stack 0
  6884  00008C                     _fround$4114:
  6885                           	opt stack 0
  6886  00008C                     _scale$4115:
  6887                           	opt stack 0
  6888                           
  6889                           ; 3 bytes @ 0x2C
  6890  00008C                     	ds	1
  6891  00008D                     ??_SyncEEPROMToGlobal:
  6892                           
  6893                           ; 0 bytes @ 0x2D
  6894  00008D                     	ds	1
  6895  00008E                     SetMemoryLong@Test:
  6896                           	opt stack 0
  6897                           
  6898                           ; 4 bytes @ 0x2E
  6899  00008E                     	ds	1
  6900  00008F                     scale@scl:
  6901                           	opt stack 0
  6902  00008F                     ReadVoltage@temp:
  6903                           	opt stack 0
  6904  00008F                     _fround$4113:
  6905                           	opt stack 0
  6906                           
  6907                           ; 3 bytes @ 0x2F
  6908  00008F                     	ds	2
  6909  000091                     SyncEEPROMToGlobal@Temp2:
  6910                           	opt stack 0
  6911                           
  6912                           ; 52 bytes @ 0x31
  6913  000091                     	ds	1
  6914  000092                     SetMemoryLong@H:
  6915                           	opt stack 0
  6916  000092                     fround@prec:
  6917                           	opt stack 0
  6918                           
  6919                           ; 1 bytes @ 0x32
  6920  000092                     	ds	1
  6921  000093                     ?___ftadd:
  6922                           	opt stack 0
  6923  000093                     SetMemoryLong@MH:
  6924                           	opt stack 0
  6925  000093                     ___ftadd@f1:
  6926                           	opt stack 0
  6927                           
  6928                           ; 3 bytes @ 0x33
  6929  000093                     	ds	1
  6930  000094                     SetMemoryLong@ML:
  6931                           	opt stack 0
  6932                           
  6933                           ; 1 bytes @ 0x34
  6934  000094                     	ds	1
  6935  000095                     SetMemoryLong@L:
  6936                           	opt stack 0
  6937                           
  6938                           ; 1 bytes @ 0x35
  6939  000095                     	ds	1
  6940  000096                     ?_SetEEPROM2:
  6941                           	opt stack 0
  6942  000096                     ?_SetEEPROM1:
  6943                           	opt stack 0
  6944  000096                     ___ftadd@f2:
  6945                           	opt stack 0
  6946  000096                     SetEEPROM1@Temp:
  6947                           	opt stack 0
  6948  000096                     SetEEPROM2@Temp:
  6949                           	opt stack 0
  6950                           
  6951                           ; 52 bytes @ 0x36
  6952  000096                     	ds	3
  6953  000099                     ??___ftadd:
  6954                           
  6955                           ; 0 bytes @ 0x39
  6956  000099                     	ds	3
  6957  00009C                     ___ftadd@sign:
  6958                           	opt stack 0
  6959                           
  6960                           ; 1 bytes @ 0x3C
  6961  00009C                     	ds	1
  6962  00009D                     ___ftadd@exp2:
  6963                           	opt stack 0
  6964                           
  6965                           ; 1 bytes @ 0x3D
  6966  00009D                     	ds	1
  6967  00009E                     ___ftadd@exp1:
  6968                           	opt stack 0
  6969                           
  6970                           ; 1 bytes @ 0x3E
  6971  00009E                     	ds	1
  6972  00009F                     ?___ftsub:
  6973                           	opt stack 0
  6974  00009F                     ?___fttol:
  6975                           	opt stack 0
  6976  00009F                     ___ftsub@f1:
  6977                           	opt stack 0
  6978  00009F                     ___fttol@f1:
  6979                           	opt stack 0
  6980                           
  6981                           ; 3 bytes @ 0x3F
  6982  00009F                     	ds	3
  6983  0000A2                     ___ftsub@f2:
  6984                           	opt stack 0
  6985                           
  6986                           ; 3 bytes @ 0x42
  6987  0000A2                     	ds	1
  6988  0000A3                     ??___fttol:
  6989                           
  6990                           ; 0 bytes @ 0x43
  6991  0000A3                     	ds	2
  6992  0000A5                     
  6993                           ; 0 bytes @ 0x45
  6994  0000A5                     	ds	3
  6995  0000A8                     ___fttol@sign1:
  6996                           	opt stack 0
  6997                           
  6998                           ; 1 bytes @ 0x48
  6999  0000A8                     	ds	1
  7000  0000A9                     ___fttol@lval:
  7001                           	opt stack 0
  7002                           
  7003                           ; 4 bytes @ 0x49
  7004  0000A9                     	ds	4
  7005  0000AD                     ___fttol@exp1:
  7006                           	opt stack 0
  7007                           
  7008                           ; 1 bytes @ 0x4D
  7009  0000AD                     	ds	1
  7010  0000AE                     ?_sprintf:
  7011                           	opt stack 0
  7012  0000AE                     ?_Round:
  7013                           	opt stack 0
  7014  0000AE                     sprintf@sp:
  7015                           	opt stack 0
  7016  0000AE                     Round@input:
  7017                           	opt stack 0
  7018                           
  7019                           ; 3 bytes @ 0x4E
  7020  0000AE                     	ds	2
  7021  0000B0                     sprintf@f:
  7022                           	opt stack 0
  7023                           
  7024                           ; 2 bytes @ 0x50
  7025  0000B0                     	ds	1
  7026  0000B1                     Round@temp:
  7027                           	opt stack 0
  7028                           
  7029                           ; 4 bytes @ 0x51
  7030  0000B1                     	ds	3
  7031  0000B4                     SetEEPROM1@burn:
  7032                           	opt stack 0
  7033                           
  7034                           ; 4 bytes @ 0x54
  7035  0000B4                     	ds	1
  7036  0000B5                     InitUART@Baud:
  7037                           	opt stack 0
  7038                           
  7039                           ; 4 bytes @ 0x55
  7040  0000B5                     	ds	3
  7041  0000B8                     ??_SetEEPROM1:
  7042                           
  7043                           ; 0 bytes @ 0x58
  7044  0000B8                     	ds	1
  7045  0000B9                     ??_InitUART:
  7046                           
  7047                           ; 0 bytes @ 0x59
  7048  0000B9                     	ds	1
  7049  0000BA                     SetEEPROM1@temp:
  7050                           	opt stack 0
  7051                           
  7052                           ; 1 bytes @ 0x5A
  7053  0000BA                     	ds	1
  7054  0000BB                     SetEEPROM1@Arrayspot:
  7055                           	opt stack 0
  7056                           
  7057                           ; 1 bytes @ 0x5B
  7058  0000BB                     	ds	1
  7059  0000BC                     ??_sprintf:
  7060  0000BC                     SetEEPROM1@fail:
  7061                           	opt stack 0
  7062                           
  7063                           ; 4 bytes @ 0x5C
  7064  0000BC                     	ds	1
  7065  0000BD                     _InitUART$4112:
  7066                           	opt stack 0
  7067                           
  7068                           ; 3 bytes @ 0x5D
  7069  0000BD                     	ds	3
  7070  0000C0                     SetEEPROM1@i:
  7071                           	opt stack 0
  7072  0000C0                     InitUART@spbrg:
  7073                           	opt stack 0
  7074                           
  7075                           ; 2 bytes @ 0x60
  7076  0000C0                     	ds	1
  7077  0000C1                     SetEEPROM1@j:
  7078                           	opt stack 0
  7079                           
  7080                           ; 1 bytes @ 0x61
  7081  0000C1                     	ds	1
  7082  0000C2                     InitUART@config:
  7083                           	opt stack 0
  7084  0000C2                     _sprintf$4116:
  7085                           	opt stack 0
  7086                           
  7087                           ; 3 bytes @ 0x62
  7088  0000C2                     	ds	1
  7089  0000C3                     InitUART@temp:
  7090                           	opt stack 0
  7091                           
  7092                           ; 4 bytes @ 0x63
  7093  0000C3                     	ds	2
  7094  0000C5                     SyncEEPROMToGlobal@k:
  7095                           	opt stack 0
  7096  0000C5                     sprintf@idx:
  7097                           	opt stack 0
  7098                           
  7099                           ; 1 bytes @ 0x65
  7100  0000C5                     	ds	1
  7101  0000C6                     sprintf@cp:
  7102                           	opt stack 0
  7103  0000C6                     SyncEEPROMToGlobal@Temp1:
  7104                           	opt stack 0
  7105                           
  7106                           ; 30 bytes @ 0x66
  7107  0000C6                     	ds	2
  7108  0000C8                     sprintf@len:
  7109                           	opt stack 0
  7110                           
  7111                           ; 2 bytes @ 0x68
  7112  0000C8                     	ds	2
  7113  0000CA                     sprintf@ap:
  7114                           	opt stack 0
  7115  0000CA                     SetEEPROM2@burn:
  7116                           	opt stack 0
  7117                           
  7118                           ; 4 bytes @ 0x6A
  7119  0000CA                     	ds	2
  7120  0000CC                     sprintf@prec:
  7121                           	opt stack 0
  7122                           
  7123                           ; 2 bytes @ 0x6C
  7124  0000CC                     	ds	2
  7125  0000CE                     ??_SetEEPROM2:
  7126  0000CE                     sprintf@tmpval:
  7127                           	opt stack 0
  7128                           
  7129                           ; 4 bytes @ 0x6E
  7130  0000CE                     	ds	2
  7131  0000D0                     SetEEPROM2@temp:
  7132                           	opt stack 0
  7133                           
  7134                           ; 1 bytes @ 0x70
  7135  0000D0                     	ds	1
  7136  0000D1                     SetEEPROM2@fail:
  7137                           	opt stack 0
  7138                           
  7139                           ; 4 bytes @ 0x71
  7140  0000D1                     	ds	1
  7141  0000D2                     sprintf@exp:
  7142                           	opt stack 0
  7143                           
  7144                           ; 2 bytes @ 0x72
  7145  0000D2                     	ds	2
  7146  0000D4                     sprintf@val:
  7147                           	opt stack 0
  7148                           
  7149                           ; 4 bytes @ 0x74
  7150  0000D4                     	ds	1
  7151  0000D5                     SetEEPROM2@Arrayspot:
  7152                           	opt stack 0
  7153                           
  7154                           ; 1 bytes @ 0x75
  7155  0000D5                     	ds	1
  7156  0000D6                     SetEEPROM2@i:
  7157                           	opt stack 0
  7158                           
  7159                           ; 1 bytes @ 0x76
  7160  0000D6                     	ds	1
  7161  0000D7                     SetEEPROM2@j:
  7162                           	opt stack 0
  7163                           
  7164                           ; 1 bytes @ 0x77
  7165  0000D7                     	ds	1
  7166  0000D8                     SetEEPROM2@k:
  7167                           	opt stack 0
  7168  0000D8                     sprintf@fval:
  7169                           	opt stack 0
  7170                           
  7171                           ; 3 bytes @ 0x78
  7172  0000D8                     	ds	1
  7173  0000D9                     SyncGlobalToEEPROM@ok:
  7174                           	opt stack 0
  7175                           
  7176                           ; 1 bytes @ 0x79
  7177  0000D9                     	ds	1
  7178  0000DA                     ??_SetEEPROMdefault:
  7179  0000DA                     UseIRCode@Code:
  7180                           	opt stack 0
  7181                           
  7182                           ; 2 bytes @ 0x7A
  7183  0000DA                     	ds	1
  7184  0000DB                     sprintf@width:
  7185                           	opt stack 0
  7186                           
  7187                           ; 2 bytes @ 0x7B
  7188  0000DB                     	ds	1
  7189  0000DC                     SetEEPROMdefault@k:
  7190                           	opt stack 0
  7191  0000DC                     UseIRCode@NEC:
  7192                           	opt stack 0
  7193                           
  7194                           ; 4 bytes @ 0x7C
  7195  0000DC                     	ds	1
  7196  0000DD                     SetEEPROMdefault@i:
  7197                           	opt stack 0
  7198  0000DD                     sprintf@flag:
  7199                           	opt stack 0
  7200                           
  7201                           ; 2 bytes @ 0x7D
  7202  0000DD                     	ds	1
  7203  0000DE                     SetEEPROMdefault@j:
  7204                           	opt stack 0
  7205                           
  7206                           ; 1 bytes @ 0x7E
  7207  0000DE                     	ds	1
  7208  0000DF                     sprintf@c:
  7209                           	opt stack 0
  7210                           
  7211                           ; 1 bytes @ 0x7F
  7212  0000DF                     	ds	1
  7213  0000E0                     ??_UseIRCode:
  7214  0000E0                     
  7215                           ; 0 bytes @ 0x80
  7216  0000E0                     	ds	1
  7217  0000E1                     
  7218                           ; 0 bytes @ 0x81
  7219  0000E1                     	ds	2
  7220  0000E3                     UseIRCode@found:
  7221                           	opt stack 0
  7222                           
  7223                           ; 1 bytes @ 0x83
  7224  0000E3                     	ds	1
  7225  0000E4                     SyncEEPROMToGlobal@i:
  7226                           	opt stack 0
  7227  0000E4                     UseIRCode@j:
  7228                           	opt stack 0
  7229                           
  7230                           ; 1 bytes @ 0x84
  7231  0000E4                     	ds	1
  7232  0000E5                     SyncEEPROMToGlobal@j:
  7233                           	opt stack 0
  7234  0000E5                     UseIRCode@i:
  7235                           	opt stack 0
  7236                           
  7237                           ; 1 bytes @ 0x85
  7238  0000E5                     	ds	1
  7239  0000E6                     UseBluetooth@String:
  7240                           	opt stack 0
  7241                           
  7242                           ; 2 bytes @ 0x86
  7243  0000E6                     	ds	2
  7244  0000E8                     UseBluetooth@StringPos:
  7245                           	opt stack 0
  7246                           
  7247                           ; 1 bytes @ 0x88
  7248  0000E8                     	ds	1
  7249  0000E9                     ??_UseBluetooth:
  7250                           
  7251                           ; 0 bytes @ 0x89
  7252  0000E9                     	ds	12
  7253  0000F5                     tblptru	equ	0xFF8
  7254                           tblptrh	equ	0xFF7
  7255                           tblptrl	equ	0xFF6
  7256                           tablat	equ	0xFF5
  7257                           postinc0	equ	0xFEE
  7258                           wreg	equ	0xFE8
  7259                           postdec1	equ	0xFE5
  7260                           fsr1l	equ	0xFE1
  7261                           
  7262                           ; 0 bytes @ 0x95
  7263                           
  7264                           	psect	cstackCOMRAM
  7265  000001                     __pcstackCOMRAM:
  7266                           	opt stack 0
  7267  000001                     IsCharacter@data:
  7268                           	opt stack 0
  7269  000001                     i1UARTchar@data:
  7270                           	opt stack 0
  7271  000001                     i1UARTchar_CONST@data:
  7272                           	opt stack 0
  7273  000001                     i1ReadUSART@data:
  7274                           	opt stack 0
  7275                           
  7276                           ; 1 bytes @ 0x0
  7277  000001                     	ds	1
  7278  000002                     EraseScreen@characters:
  7279                           	opt stack 0
  7280  000002                     i1UARTchar_CONST@temp:
  7281                           	opt stack 0
  7282  000002                     i1UARTstring@data:
  7283                           	opt stack 0
  7284                           
  7285                           ; 2 bytes @ 0x1
  7286  000002                     	ds	1
  7287  000003                     EraseScreen@i:
  7288                           	opt stack 0
  7289  000003                     i1UARTstring_CONST@data:
  7290                           	opt stack 0
  7291                           
  7292                           ; 2 bytes @ 0x2
  7293  000003                     	ds	1
  7294  000004                     
  7295                           ; 0 bytes @ 0x3
  7296  000004                     	ds	1
  7297  000005                     ??_low_isr:
  7298  000005                     
  7299                           ; 0 bytes @ 0x4
  7300  000005                     	ds	17
  7301  000016                     low_isr@data:
  7302                           	opt stack 0
  7303                           
  7304                           ; 1 bytes @ 0x15
  7305  000016                     	ds	1
  7306  000017                     SetTimer0@temp:
  7307                           	opt stack 0
  7308  000017                     IRrawToNEC@Raw:
  7309                           	opt stack 0
  7310  000017                     i2cleanBuffer16bit@data:
  7311                           	opt stack 0
  7312                           
  7313                           ; 2 bytes @ 0x16
  7314  000017                     	ds	2
  7315  000019                     IRrawToNEC@NEC:
  7316                           	opt stack 0
  7317  000019                     i2cleanBuffer16bit@count:
  7318                           	opt stack 0
  7319                           
  7320                           ; 2 bytes @ 0x18
  7321  000019                     	ds	2
  7322  00001B                     ??i2_cleanBuffer16bit:
  7323  00001B                     IRrawToNEC@Invert:
  7324                           	opt stack 0
  7325                           
  7326                           ; 1 bytes @ 0x1A
  7327  00001B                     	ds	1
  7328  00001C                     ??_IRrawToNEC:
  7329                           
  7330                           ; 0 bytes @ 0x1B
  7331  00001C                     	ds	2
  7332  00001E                     i2cleanBuffer16bit@i:
  7333                           	opt stack 0
  7334  00001E                     IRrawToNEC@NECtemp:
  7335                           	opt stack 0
  7336                           
  7337                           ; 4 bytes @ 0x1D
  7338  00001E                     	ds	4
  7339  000022                     IRrawToNEC@first:
  7340                           	opt stack 0
  7341                           
  7342                           ; 1 bytes @ 0x21
  7343  000022                     	ds	1
  7344  000023                     IRrawToNEC@i:
  7345                           	opt stack 0
  7346                           
  7347                           ; 1 bytes @ 0x22
  7348  000023                     	ds	1
  7349  000024                     IRrawToNEC@StartBit:
  7350                           	opt stack 0
  7351                           
  7352                           ; 1 bytes @ 0x23
  7353  000024                     	ds	1
  7354  000025                     ??_high_isr:
  7355                           
  7356                           ; 0 bytes @ 0x24
  7357  000025                     	ds	18
  7358  000037                     high_isr@IRpin:
  7359                           	opt stack 0
  7360                           
  7361                           ; 1 bytes @ 0x36
  7362  000037                     	ds	1
  7363  000038                     high_isr@Time0:
  7364                           	opt stack 0
  7365                           
  7366                           ; 2 bytes @ 0x37
  7367  000038                     	ds	2
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           postinc0	equ	0xFEE
  7373                           wreg	equ	0xFE8
  7374                           postdec1	equ	0xFE5
  7375                           fsr1l	equ	0xFE1
  7376                           
  7377 ;;
  7378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7379 ;;
  7380 ;; *************** function _main *****************
  7381 ;; Defined at:
  7382 ;;		line 94 in file "main.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;		None
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  BluetoothStr  100  100[BANK3 ] unsigned char [100]
  7387 ;;  buf           100    0[BANK3 ] unsigned char [100]
  7388 ;;  BroadcastTEM   21  200[BANK3 ] unsigned char [21]
  7389 ;;  VoltageStatu    1  228[BANK3 ] unsigned char 
  7390 ;;  i               1  227[BANK3 ] unsigned char 
  7391 ;;  Connected       1  226[BANK3 ] unsigned char 
  7392 ;;  VoltageStatu    1  225[BANK3 ] unsigned char 
  7393 ;;  ConnectedOLD    1  224[BANK3 ] unsigned char 
  7394 ;;  BluetoothStr    1  223[BANK3 ] unsigned char 
  7395 ;;  Bluetoothtas    1  222[BANK3 ] unsigned char 
  7396 ;;  IRtask          1  221[BANK3 ] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;		None               void
  7399 ;; Registers used:
  7400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0     229       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Totals:         0       0       0       0     229       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;Total ram usage:      229 bytes
  7411 ;; Hardware stack levels required when called:   13
  7412 ;; This function calls:
  7413 ;;		_BlueConnected
  7414 ;;		_BufferCopy
  7415 ;;		_ClearUSART
  7416 ;;		_ConfigureOscillator
  7417 ;;		_InitApp
  7418 ;;		_Init_System
  7419 ;;		_LEDTimerON
  7420 ;;		_ReadIRpin
  7421 ;;		_ReadVoltage
  7422 ;;		_UARTchar
  7423 ;;		_UARTchar_CONST
  7424 ;;		_UARTstringCRLN
  7425 ;;		_UARTstringCRLN_CONST
  7426 ;;		_UARTstring_CONST
  7427 ;;		_UseBluetooth
  7428 ;;		_UseIRCode
  7429 ;;		___ftadd
  7430 ;;		___ftge
  7431 ;;		___ftsub
  7432 ;;		_cleanBuffer
  7433 ;;		_delayUS
  7434 ;;		_sprintf
  7435 ;; This function is called by:
  7436 ;;		Startup code after reset
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text0
  7441  005022                     __ptext0:
  7442                           	opt stack 0
  7443  005022                     _main:
  7444                           	opt stack 18
  7445                           
  7446                           ;main.c: 96: unsigned char i=0;
  7447                           
  7448                           ;incstack = 0
  7449  005022  0E00               	movlw	0
  7450  005024  0103               	movlb	3	; () banked
  7451  005026  6FE3               	movwf	main@i& (0+255),b
  7452                           
  7453                           ;main.c: 97: unsigned char IRtask = 0;
  7454  005028  0E00               	movlw	0
  7455  00502A  0103               	movlb	3	; () banked
  7456  00502C  6FDD               	movwf	main@IRtask& (0+255),b
  7457                           
  7458                           ;main.c: 98: unsigned char Bluetoothtask = 0;
  7459  00502E  0E00               	movlw	0
  7460  005030  0103               	movlb	3	; () banked
  7461  005032  6FDE               	movwf	main@Bluetoothtask& (0+255),b
  7462                           
  7463                           ;main.c: 99: unsigned char VoltageStatus = 1;
  7464  005034  0E01               	movlw	1
  7465  005036  0103               	movlb	3	; () banked
  7466  005038  6FE4               	movwf	main@VoltageStatus& (0+255),b
  7467                           
  7468                           ;main.c: 100: unsigned char VoltageStatusOLD;
  7469                           ;main.c: 101: unsigned char BluetoothString[100];
  7470                           ;main.c: 102: unsigned char BluetoothStringPos = 0;
  7471  00503A  0E00               	movlw	0
  7472  00503C  0103               	movlb	3	; () banked
  7473  00503E  6FDF               	movwf	main@BluetoothStringPos& (0+255),b
  7474                           
  7475                           ; BSR set to: 3
  7476                           ;main.c: 103: unsigned char Connected, ConnectedOLD;
  7477                           ;main.c: 104: unsigned char BroadcastTEMP[21];
  7478                           ;main.c: 105: unsigned char buf[100];
  7479                           ;main.c: 107: cleanBuffer(buf, 100);
  7480  005040  0E00               	movlw	low main@buf
  7481  005042  0100               	movlb	0	; () banked
  7482  005044  6F60               	movwf	cleanBuffer@data& (0+255),b
  7483  005046  0E03               	movlw	high main@buf
  7484  005048  0100               	movlb	0	; () banked
  7485  00504A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7486  00504C  0E00               	movlw	0
  7487  00504E  0100               	movlb	0	; () banked
  7488  005050  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7489  005052  0E64               	movlw	100
  7490  005054  6F62               	movwf	cleanBuffer@count& (0+255),b
  7491  005056  EC3D  F053         	call	_cleanBuffer	;wreg free
  7492                           
  7493                           ;main.c: 108: cleanBuffer(BluetoothString, 100);
  7494  00505A  0E64               	movlw	low main@BluetoothString
  7495  00505C  0100               	movlb	0	; () banked
  7496  00505E  6F60               	movwf	cleanBuffer@data& (0+255),b
  7497  005060  0E03               	movlw	high main@BluetoothString
  7498  005062  0100               	movlb	0	; () banked
  7499  005064  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7500  005066  0E00               	movlw	0
  7501  005068  0100               	movlb	0	; () banked
  7502  00506A  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7503  00506C  0E64               	movlw	100
  7504  00506E  6F62               	movwf	cleanBuffer@count& (0+255),b
  7505  005070  EC3D  F053         	call	_cleanBuffer	;wreg free
  7506                           
  7507                           ;main.c: 109: cleanBuffer(BroadcastTEMP, 21);
  7508  005074  0EC8               	movlw	low main@BroadcastTEMP
  7509  005076  0100               	movlb	0	; () banked
  7510  005078  6F60               	movwf	cleanBuffer@data& (0+255),b
  7511  00507A  0E03               	movlw	high main@BroadcastTEMP
  7512  00507C  0100               	movlb	0	; () banked
  7513  00507E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7514  005080  0E00               	movlw	0
  7515  005082  0100               	movlb	0	; () banked
  7516  005084  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  7517  005086  0E15               	movlw	21
  7518  005088  6F62               	movwf	cleanBuffer@count& (0+255),b
  7519  00508A  EC3D  F053         	call	_cleanBuffer	;wreg free
  7520                           
  7521                           ;main.c: 111: ConfigureOscillator();
  7522  00508E  EC95  F057         	call	_ConfigureOscillator	;wreg free
  7523                           
  7524                           ;main.c: 112: InitApp();
  7525  005092  EC59  F054         	call	_InitApp	;wreg free
  7526                           
  7527                           ;main.c: 113: Init_System();
  7528  005096  ECDE  F03F         	call	_Init_System	;wreg free
  7529                           
  7530                           ;main.c: 115: BatteryVoltage = ReadVoltage();
  7531  00509A  EC10  F050         	call	_ReadVoltage	;wreg free
  7532  00509E  C089  F3E5         	movff	?_ReadVoltage,_BatteryVoltage
  7533  0050A2  C08A  F3E6         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  7534  0050A6  C08B  F3E7         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  7535                           
  7536                           ;main.c: 116: if(BatteryVoltage < 4.4 )
  7537  0050AA  C3E5  F060         	movff	_BatteryVoltage,___ftge@ff1
  7538  0050AE  C3E6  F061         	movff	_BatteryVoltage+1,___ftge@ff1+1
  7539  0050B2  C3E7  F062         	movff	_BatteryVoltage+2,___ftge@ff1+2
  7540  0050B6  0ECD               	movlw	205
  7541  0050B8  0100               	movlb	0	; () banked
  7542  0050BA  6F63               	movwf	___ftge@ff2& (0+255),b
  7543  0050BC  0E8C               	movlw	140
  7544  0050BE  0100               	movlb	0	; () banked
  7545  0050C0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7546  0050C2  0E40               	movlw	64
  7547  0050C4  0100               	movlb	0	; () banked
  7548  0050C6  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7549  0050C8  ECDC  F04B         	call	___ftge	;wreg free
  7550  0050CC  0100               	movlb	0	; () banked
  7551  0050CE  B0D8               	btfsc	status,0,c
  7552  0050D0  D002               	goto	l14076
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;main.c: 117: {
  7556                           ;main.c: 118: VoltageStatus = 34;
  7557  0050D2  0E22               	movlw	34
  7558  0050D4  D015               	goto	L1
  7559  0050D6                     l14076:
  7560                           
  7561                           ;main.c: 120: else if (BatteryVoltage > 18.6)
  7562  0050D6  0ECD               	movlw	205
  7563  0050D8  0100               	movlb	0	; () banked
  7564  0050DA  6F60               	movwf	___ftge@ff1& (0+255),b
  7565  0050DC  0E94               	movlw	148
  7566  0050DE  0100               	movlb	0	; () banked
  7567  0050E0  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  7568  0050E2  0E41               	movlw	65
  7569  0050E4  0100               	movlb	0	; () banked
  7570  0050E6  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  7571  0050E8  C3E5  F063         	movff	_BatteryVoltage,___ftge@ff2
  7572  0050EC  C3E6  F064         	movff	_BatteryVoltage+1,___ftge@ff2+1
  7573  0050F0  C3E7  F065         	movff	_BatteryVoltage+2,___ftge@ff2+2
  7574  0050F4  ECDC  F04B         	call	___ftge	;wreg free
  7575  0050F8  0100               	movlb	0	; () banked
  7576  0050FA  B0D8               	btfsc	status,0,c
  7577  0050FC  D004               	goto	l14080
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;main.c: 121: {
  7581                           ;main.c: 122: VoltageStatus = 98;
  7582  0050FE  0E62               	movlw	98
  7583  005100                     L1:
  7584  005100  0103               	movlb	3	; () banked
  7585  005102  6FE4               	movwf	main@VoltageStatus& (0+255),b
  7586                           
  7587                           ; BSR set to: 3
  7588  005104  D000               	goto	l14080
  7589  005106                     l14080:
  7590                           
  7591                           ;main.c: 123: }
  7592                           ;main.c: 124: if(VoltageStatus == 1)
  7593  005106  0103               	movlb	3	; () banked
  7594  005108  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7595  00510A  A4D8               	btfss	status,2,c
  7596  00510C  D027               	goto	l14102
  7597                           
  7598                           ; BSR set to: 3
  7599                           ;main.c: 125: {
  7600                           ;main.c: 127: for(i =0;i<10;i++)
  7601  00510E  0E00               	movlw	0
  7602  005110  0103               	movlb	3	; () banked
  7603  005112  6FE3               	movwf	main@i& (0+255),b
  7604  005114                     l14084:
  7605                           
  7606                           ; BSR set to: 3
  7607  005114  0E09               	movlw	9
  7608  005116  0103               	movlb	3	; () banked
  7609  005118  65E3               	cpfsgt	main@i& (0+255),b
  7610  00511A  D001               	goto	l14088
  7611                           
  7612                           ; BSR set to: 3
  7613  00511C  D01D               	goto	l14100
  7614  00511E                     l14088:
  7615                           
  7616                           ; BSR set to: 3
  7617                           ;main.c: 128: {
  7618                           ;main.c: 129: (LATC |= 0x02);
  7619  00511E  828B               	bsf	3979,1,c	;volatile
  7620                           
  7621                           ;main.c: 130: (LATC &= ~0x04);
  7622  005120  948B               	bcf	3979,2,c	;volatile
  7623                           
  7624                           ; BSR set to: 3
  7625                           ;main.c: 131: delayUS(50000);
  7626  005122  0E50               	movlw	80
  7627  005124  0100               	movlb	0	; () banked
  7628  005126  6F60               	movwf	delayUS@US& (0+255),b
  7629  005128  0EC3               	movlw	195
  7630  00512A  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7631  00512C  0E00               	movlw	0
  7632  00512E  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7633  005130  0E00               	movlw	0
  7634  005132  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7635  005134  EC96  F053         	call	_delayUS	;wreg free
  7636                           
  7637                           ;main.c: 132: (LATC &= ~0x02);
  7638  005138  928B               	bcf	3979,1,c	;volatile
  7639                           
  7640                           ;main.c: 133: (LATC |= 0x04);
  7641  00513A  848B               	bsf	3979,2,c	;volatile
  7642                           
  7643                           ;main.c: 134: delayUS(50000);
  7644  00513C  0E50               	movlw	80
  7645  00513E  0100               	movlb	0	; () banked
  7646  005140  6F60               	movwf	delayUS@US& (0+255),b
  7647  005142  0EC3               	movlw	195
  7648  005144  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7649  005146  0E00               	movlw	0
  7650  005148  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7651  00514A  0E00               	movlw	0
  7652  00514C  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7653  00514E  EC96  F053         	call	_delayUS	;wreg free
  7654  005152  0103               	movlb	3	; () banked
  7655  005154  2BE3               	incf	main@i& (0+255),f,b
  7656  005156  D7DE               	goto	l14084
  7657  005158                     l14100:
  7658                           
  7659                           ; BSR set to: 3
  7660                           ;main.c: 135: }
  7661                           ;main.c: 136: (LATC &= ~0x04);
  7662  005158  948B               	bcf	3979,2,c	;volatile
  7663                           
  7664                           ;main.c: 137: }
  7665  00515A  D024               	goto	l14118
  7666  00515C                     l14102:
  7667                           
  7668                           ; BSR set to: 3
  7669                           ;main.c: 138: else
  7670                           ;main.c: 139: {
  7671                           ;main.c: 140: for(i =0;i<10;i++)
  7672  00515C  0E00               	movlw	0
  7673  00515E  0103               	movlb	3	; () banked
  7674  005160  6FE3               	movwf	main@i& (0+255),b
  7675  005162                     l14104:
  7676                           
  7677                           ; BSR set to: 3
  7678  005162  0E09               	movlw	9
  7679  005164  0103               	movlb	3	; () banked
  7680  005166  65E3               	cpfsgt	main@i& (0+255),b
  7681  005168  D001               	goto	l14108
  7682                           
  7683                           ; BSR set to: 3
  7684  00516A  D01C               	goto	l14118
  7685  00516C                     l14108:
  7686                           
  7687                           ; BSR set to: 3
  7688                           ;main.c: 141: {
  7689                           ;main.c: 142: (LATC |= 0x02);
  7690  00516C  828B               	bsf	3979,1,c	;volatile
  7691                           
  7692                           ; BSR set to: 3
  7693                           ;main.c: 143: delayUS(100000);
  7694  00516E  0EA0               	movlw	160
  7695  005170  0100               	movlb	0	; () banked
  7696  005172  6F60               	movwf	delayUS@US& (0+255),b
  7697  005174  0E86               	movlw	134
  7698  005176  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7699  005178  0E01               	movlw	1
  7700  00517A  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7701  00517C  0E00               	movlw	0
  7702  00517E  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7703  005180  EC96  F053         	call	_delayUS	;wreg free
  7704                           
  7705                           ;main.c: 144: (LATC &= ~0x02);
  7706  005184  928B               	bcf	3979,1,c	;volatile
  7707                           
  7708                           ;main.c: 145: delayUS(100000);
  7709  005186  0EA0               	movlw	160
  7710  005188  0100               	movlb	0	; () banked
  7711  00518A  6F60               	movwf	delayUS@US& (0+255),b
  7712  00518C  0E86               	movlw	134
  7713  00518E  6F61               	movwf	(delayUS@US+1)& (0+255),b
  7714  005190  0E01               	movlw	1
  7715  005192  6F62               	movwf	(delayUS@US+2)& (0+255),b
  7716  005194  0E00               	movlw	0
  7717  005196  6F63               	movwf	(delayUS@US+3)& (0+255),b
  7718  005198  EC96  F053         	call	_delayUS	;wreg free
  7719  00519C  0103               	movlb	3	; () banked
  7720  00519E  2BE3               	incf	main@i& (0+255),f,b
  7721  0051A0  D7E0               	goto	l14104
  7722                           
  7723                           ; BSR set to: 3
  7724                           
  7725                           ; BSR set to: 3
  7726  0051A2  D000               	goto	l14118
  7727  0051A4                     l14118:
  7728                           
  7729                           ; BSR set to: 3
  7730                           ;main.c: 146: }
  7731                           ;main.c: 147: }
  7732                           ;main.c: 148: Connected = BlueConnected();
  7733  0051A4  EC55  F057         	call	_BlueConnected	;wreg free
  7734  0051A8  0103               	movlb	3	; () banked
  7735  0051AA  6FE2               	movwf	main@Connected& (0+255),b
  7736                           
  7737                           ; BSR set to: 3
  7738                           ;main.c: 149: ConnectedOLD = 0;
  7739  0051AC  0E00               	movlw	0
  7740  0051AE  0103               	movlb	3	; () banked
  7741  0051B0  6FE0               	movwf	main@ConnectedOLD& (0+255),b
  7742  0051B2  D23B               	goto	l14296
  7743  0051B4                     l14124:
  7744                           
  7745                           ;main.c: 152: {
  7746                           ;main.c: 153: IRtask = IR_New_Code;
  7747  0051B4  C3F0  F3DD         	movff	_IR_New_Code,main@IRtask
  7748                           
  7749                           ;main.c: 154: Bluetoothtask = NewReceivedString;
  7750  0051B8  C3EA  F3DE         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  7751                           
  7752                           ;main.c: 156: BatteryVoltage = ReadVoltage();
  7753  0051BC  EC10  F050         	call	_ReadVoltage	;wreg free
  7754  0051C0  C089  F3E5         	movff	?_ReadVoltage,_BatteryVoltage
  7755  0051C4  C08A  F3E6         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  7756  0051C8  C08B  F3E7         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  7757                           
  7758                           ;main.c: 157: if(VoltageStatus == 34)
  7759  0051CC  0E22               	movlw	34
  7760  0051CE  0103               	movlb	3	; () banked
  7761  0051D0  19E4               	xorwf	main@VoltageStatus& (0+255),w,b
  7762  0051D2  A4D8               	btfss	status,2,c
  7763  0051D4  D018               	goto	l14134
  7764                           
  7765                           ; BSR set to: 3
  7766                           ;main.c: 158: {
  7767                           ;main.c: 159: BatteryVoltage -= 0.5;
  7768  0051D6  C3E5  F09F         	movff	_BatteryVoltage,___ftsub@f1
  7769  0051DA  C3E6  F0A0         	movff	_BatteryVoltage+1,___ftsub@f1+1
  7770  0051DE  C3E7  F0A1         	movff	_BatteryVoltage+2,___ftsub@f1+2
  7771  0051E2  0E00               	movlw	0
  7772  0051E4  0100               	movlb	0	; () banked
  7773  0051E6  6FA2               	movwf	___ftsub@f2& (0+255),b
  7774  0051E8  0E00               	movlw	0
  7775  0051EA  0100               	movlb	0	; () banked
  7776  0051EC  6FA3               	movwf	(___ftsub@f2+1)& (0+255),b
  7777  0051EE  0E3F               	movlw	63
  7778  0051F0  0100               	movlb	0	; () banked
  7779  0051F2  6FA4               	movwf	(___ftsub@f2+2)& (0+255),b
  7780  0051F4  ECEB  F053         	call	___ftsub	;wreg free
  7781  0051F8  C09F  F3E5         	movff	?___ftsub,_BatteryVoltage
  7782  0051FC  C0A0  F3E6         	movff	?___ftsub+1,_BatteryVoltage+1
  7783  005200  C0A1  F3E7         	movff	?___ftsub+2,_BatteryVoltage+2
  7784                           
  7785                           ;main.c: 160: }
  7786  005204  D01D               	goto	l170
  7787  005206                     l14134:
  7788                           
  7789                           ;main.c: 161: else if(VoltageStatus == 98)
  7790  005206  0E62               	movlw	98
  7791  005208  0103               	movlb	3	; () banked
  7792  00520A  19E4               	xorwf	main@VoltageStatus& (0+255),w,b
  7793  00520C  A4D8               	btfss	status,2,c
  7794  00520E  D018               	goto	l170
  7795                           
  7796                           ; BSR set to: 3
  7797                           ;main.c: 162: {
  7798                           ;main.c: 163: BatteryVoltage += 0.5;
  7799  005210  C3E5  F093         	movff	_BatteryVoltage,___ftadd@f1
  7800  005214  C3E6  F094         	movff	_BatteryVoltage+1,___ftadd@f1+1
  7801  005218  C3E7  F095         	movff	_BatteryVoltage+2,___ftadd@f1+2
  7802  00521C  0E00               	movlw	0
  7803  00521E  0100               	movlb	0	; () banked
  7804  005220  6F96               	movwf	___ftadd@f2& (0+255),b
  7805  005222  0E00               	movlw	0
  7806  005224  0100               	movlb	0	; () banked
  7807  005226  6F97               	movwf	(___ftadd@f2+1)& (0+255),b
  7808  005228  0E3F               	movlw	63
  7809  00522A  0100               	movlb	0	; () banked
  7810  00522C  6F98               	movwf	(___ftadd@f2+2)& (0+255),b
  7811  00522E  EC18  F039         	call	___ftadd	;wreg free
  7812  005232  C093  F3E5         	movff	?___ftadd,_BatteryVoltage
  7813  005236  C094  F3E6         	movff	?___ftadd+1,_BatteryVoltage+1
  7814  00523A  C095  F3E7         	movff	?___ftadd+2,_BatteryVoltage+2
  7815  00523E  D000               	goto	l170
  7816  005240                     l170:
  7817                           
  7818                           ;main.c: 164: }
  7819                           ;main.c: 166: if(BatteryVoltage < 4.4 )
  7820  005240  C3E5  F060         	movff	_BatteryVoltage,___ftge@ff1
  7821  005244  C3E6  F061         	movff	_BatteryVoltage+1,___ftge@ff1+1
  7822  005248  C3E7  F062         	movff	_BatteryVoltage+2,___ftge@ff1+2
  7823  00524C  0ECD               	movlw	205
  7824  00524E  0100               	movlb	0	; () banked
  7825  005250  6F63               	movwf	___ftge@ff2& (0+255),b
  7826  005252  0E8C               	movlw	140
  7827  005254  0100               	movlb	0	; () banked
  7828  005256  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7829  005258  0E40               	movlw	64
  7830  00525A  0100               	movlb	0	; () banked
  7831  00525C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7832  00525E  ECDC  F04B         	call	___ftge	;wreg free
  7833  005262  0100               	movlb	0	; () banked
  7834  005264  B0D8               	btfsc	status,0,c
  7835  005266  D002               	goto	l14140
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;main.c: 167: {
  7839                           ;main.c: 168: VoltageStatus = 34;
  7840  005268  0E22               	movlw	34
  7841  00526A  D017               	goto	L3
  7842  00526C                     l14140:
  7843                           
  7844                           ;main.c: 170: else if(BatteryVoltage > 18.6)
  7845  00526C  0ECD               	movlw	205
  7846  00526E  0100               	movlb	0	; () banked
  7847  005270  6F60               	movwf	___ftge@ff1& (0+255),b
  7848  005272  0E94               	movlw	148
  7849  005274  0100               	movlb	0	; () banked
  7850  005276  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  7851  005278  0E41               	movlw	65
  7852  00527A  0100               	movlb	0	; () banked
  7853  00527C  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  7854  00527E  C3E5  F063         	movff	_BatteryVoltage,___ftge@ff2
  7855  005282  C3E6  F064         	movff	_BatteryVoltage+1,___ftge@ff2+1
  7856  005286  C3E7  F065         	movff	_BatteryVoltage+2,___ftge@ff2+2
  7857  00528A  ECDC  F04B         	call	___ftge	;wreg free
  7858  00528E  0100               	movlb	0	; () banked
  7859  005290  B0D8               	btfsc	status,0,c
  7860  005292  D002               	goto	l14144
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;main.c: 171: {
  7864                           ;main.c: 172: VoltageStatus = 98;
  7865  005294  0E62               	movlw	98
  7866  005296  D001               	goto	L3
  7867  005298                     l14144:
  7868                           
  7869                           ;main.c: 174: else
  7870                           ;main.c: 175: {
  7871                           ;main.c: 176: VoltageStatus = 1;
  7872  005298  0E01               	movlw	1
  7873  00529A                     L3:
  7874  00529A  0103               	movlb	3	; () banked
  7875  00529C  6FE4               	movwf	main@VoltageStatus& (0+255),b
  7876                           
  7877                           ; BSR set to: 3
  7878  00529E  D000               	goto	l14146
  7879  0052A0                     l14146:
  7880                           
  7881                           ; BSR set to: 3
  7882                           ;main.c: 177: }
  7883                           ;main.c: 178: if(VoltageStatus != 1)
  7884  0052A0  0103               	movlb	3	; () banked
  7885  0052A2  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7886  0052A4  B4D8               	btfsc	status,2,c
  7887  0052A6  D002               	goto	l14150
  7888                           
  7889                           ; BSR set to: 3
  7890                           ;main.c: 179: {
  7891                           ;main.c: 180: (LATC |= 0x02);
  7892  0052A8  828B               	bsf	3979,1,c	;volatile
  7893  0052AA  D000               	goto	l14150
  7894  0052AC                     l14150:
  7895                           
  7896                           ; BSR set to: 3
  7897                           ;main.c: 181: }
  7898                           ;main.c: 182: if(VoltageStatus == 1 && VoltageStatusOLD != 1)
  7899  0052AC  0103               	movlb	3	; () banked
  7900  0052AE  05E4               	decf	main@VoltageStatus& (0+255),w,b
  7901  0052B0  A4D8               	btfss	status,2,c
  7902  0052B2  D007               	goto	l14156
  7903                           
  7904                           ; BSR set to: 3
  7905  0052B4  0103               	movlb	3	; () banked
  7906  0052B6  05E1               	decf	main@VoltageStatusOLD& (0+255),w,b
  7907  0052B8  B4D8               	btfsc	status,2,c
  7908  0052BA  D003               	goto	l14156
  7909                           
  7910                           ; BSR set to: 3
  7911                           ;main.c: 183: {
  7912                           ;main.c: 184: LEDTimerON();
  7913  0052BC  EC06  F057         	call	_LEDTimerON	;wreg free
  7914  0052C0  D000               	goto	l14156
  7915  0052C2                     l14156:
  7916                           
  7917                           ;main.c: 185: }
  7918                           ;main.c: 188: if(IRtask && IR_NEC)
  7919  0052C2  0103               	movlb	3	; () banked
  7920  0052C4  51DD               	movf	main@IRtask& (0+255),w,b
  7921  0052C6  0103               	movlb	3	; () banked
  7922  0052C8  B4D8               	btfsc	status,2,c
  7923  0052CA  D01B               	goto	l14162
  7924                           
  7925                           ; BSR set to: 3
  7926  0052CC  0103               	movlb	3	; () banked
  7927  0052CE  51EC               	movf	_IR_NEC& (0+255),w,b
  7928  0052D0  0103               	movlb	3	; () banked
  7929  0052D2  11ED               	iorwf	(_IR_NEC+1)& (0+255),w,b
  7930  0052D4  0103               	movlb	3	; () banked
  7931  0052D6  11EE               	iorwf	(_IR_NEC+2)& (0+255),w,b
  7932  0052D8  0103               	movlb	3	; () banked
  7933  0052DA  11EF               	iorwf	(_IR_NEC+3)& (0+255),w,b
  7934  0052DC  B4D8               	btfsc	status,2,c
  7935  0052DE  D011               	goto	l14162
  7936                           
  7937                           ; BSR set to: 3
  7938                           ;main.c: 189: {
  7939                           ;main.c: 190: UseIRCode(&IR_New_Code, IR_NEC);
  7940  0052E0  0EF0               	movlw	low _IR_New_Code
  7941  0052E2  0100               	movlb	0	; () banked
  7942  0052E4  6FDA               	movwf	UseIRCode@Code& (0+255),b
  7943  0052E6  0E03               	movlw	high _IR_New_Code
  7944  0052E8  0100               	movlb	0	; () banked
  7945  0052EA  6FDB               	movwf	(UseIRCode@Code+1)& (0+255),b
  7946  0052EC  C3EC  F0DC         	movff	_IR_NEC,UseIRCode@NEC
  7947  0052F0  C3ED  F0DD         	movff	_IR_NEC+1,UseIRCode@NEC+1
  7948  0052F4  C3EE  F0DE         	movff	_IR_NEC+2,UseIRCode@NEC+2
  7949  0052F8  C3EF  F0DF         	movff	_IR_NEC+3,UseIRCode@NEC+3
  7950  0052FC  EC57  F03A         	call	_UseIRCode	;wreg free
  7951  005300  D000               	goto	l14162
  7952  005302                     l14162:
  7953                           
  7954                           ;main.c: 191: }
  7955                           ;main.c: 195: Connected = BlueConnected();
  7956  005302  EC55  F057         	call	_BlueConnected	;wreg free
  7957  005306  0103               	movlb	3	; () banked
  7958  005308  6FE2               	movwf	main@Connected& (0+255),b
  7959                           
  7960                           ; BSR set to: 3
  7961                           ;main.c: 197: if(Connected != ConnectedOLD)
  7962  00530A  0103               	movlb	3	; () banked
  7963  00530C  51E0               	movf	main@ConnectedOLD& (0+255),w,b
  7964  00530E  0103               	movlb	3	; () banked
  7965  005310  19E2               	xorwf	main@Connected& (0+255),w,b
  7966  005312  B4D8               	btfsc	status,2,c
  7967  005314  D097               	goto	l14204
  7968                           
  7969                           ; BSR set to: 3
  7970                           ;main.c: 198: {
  7971                           ;main.c: 199: if(Connected)
  7972  005316  0103               	movlb	3	; () banked
  7973  005318  51E2               	movf	main@Connected& (0+255),w,b
  7974  00531A  0103               	movlb	3	; () banked
  7975  00531C  B4D8               	btfsc	status,2,c
  7976  00531E  D090               	goto	l180
  7977                           
  7978                           ; BSR set to: 3
  7979                           ;main.c: 200: {
  7980                           ;main.c: 201: cleanBuffer(ReceivedString, ReceivedStringPos);
  7981  005320  0E64               	movlw	low _ReceivedString
  7982  005322  0100               	movlb	0	; () banked
  7983  005324  6F60               	movwf	cleanBuffer@data& (0+255),b
  7984  005326  0E04               	movlw	high _ReceivedString
  7985  005328  0100               	movlb	0	; () banked
  7986  00532A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  7987  00532C  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7988  005330  0100               	movlb	0	; () banked
  7989  005332  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
  7990  005334  EC3D  F053         	call	_cleanBuffer	;wreg free
  7991                           
  7992                           ;main.c: 202: ReceivedStringPos = 0;
  7993  005338  0E00               	movlw	0
  7994  00533A  0103               	movlb	3	; () banked
  7995  00533C  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7996                           
  7997                           ; BSR set to: 3
  7998                           ;main.c: 203: delayUS(1000000);
  7999  00533E  0E40               	movlw	64
  8000  005340  0100               	movlb	0	; () banked
  8001  005342  6F60               	movwf	delayUS@US& (0+255),b
  8002  005344  0E42               	movlw	66
  8003  005346  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8004  005348  0E0F               	movlw	15
  8005  00534A  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8006  00534C  0E00               	movlw	0
  8007  00534E  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8008  005350  EC96  F053         	call	_delayUS	;wreg free
  8009                           
  8010                           ;main.c: 204: UARTstringCRLN_CONST(ProjectName);
  8011  005354  0E15               	movlw	low _ProjectName
  8012  005356  0100               	movlb	0	; () banked
  8013  005358  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  8014  00535A  0EED               	movlw	high _ProjectName
  8015  00535C  0100               	movlb	0	; () banked
  8016  00535E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  8017  005360  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
  8018                           
  8019                           ;main.c: 205: UARTstring_CONST(CRLN);
  8020  005364  0E5E               	movlw	low _CRLN
  8021  005366  0100               	movlb	0	; () banked
  8022  005368  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8023  00536A  0EEF               	movlw	high _CRLN
  8024  00536C  0100               	movlb	0	; () banked
  8025  00536E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8026  005370  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8027                           
  8028                           ;main.c: 206: if(BluetoothChangeStatus)
  8029  005374  0103               	movlb	3	; () banked
  8030  005376  51E8               	movf	_BluetoothChangeStatus& (0+255),w,b
  8031  005378  B4D8               	btfsc	status,2,c
  8032  00537A  D041               	goto	l14190
  8033                           
  8034                           ; BSR set to: 3
  8035                           ;main.c: 207: {
  8036                           ;main.c: 208: UARTstring_CONST(CRLN);
  8037  00537C  0E5E               	movlw	low _CRLN
  8038  00537E  0100               	movlb	0	; () banked
  8039  005380  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8040  005382  0EEF               	movlw	high _CRLN
  8041  005384  0100               	movlb	0	; () banked
  8042  005386  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8043  005388  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8044                           
  8045                           ;main.c: 209: BufferCopy(BluetoothBroadcast,BroadcastTEMP, 21, 0);
  8046  00538C  0EE6               	movlw	low _BluetoothBroadcast
  8047  00538E  0100               	movlb	0	; () banked
  8048  005390  6F68               	movwf	BufferCopy@from& (0+255),b
  8049  005392  0E04               	movlw	high _BluetoothBroadcast
  8050  005394  0100               	movlb	0	; () banked
  8051  005396  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
  8052  005398  0EC8               	movlw	low main@BroadcastTEMP
  8053  00539A  0100               	movlb	0	; () banked
  8054  00539C  6F6A               	movwf	BufferCopy@to& (0+255),b
  8055  00539E  0E03               	movlw	high main@BroadcastTEMP
  8056  0053A0  0100               	movlb	0	; () banked
  8057  0053A2  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
  8058  0053A4  0E15               	movlw	21
  8059  0053A6  0100               	movlb	0	; () banked
  8060  0053A8  6F6C               	movwf	BufferCopy@count& (0+255),b
  8061  0053AA  0E00               	movlw	0
  8062  0053AC  0100               	movlb	0	; () banked
  8063  0053AE  6F6D               	movwf	BufferCopy@shift& (0+255),b
  8064  0053B0  EC36  F051         	call	_BufferCopy	;wreg free
  8065                           
  8066                           ;main.c: 210: sprintf(buf,"Bluetooth Name was successfully changed to \" %s \"",Broadcas
      +                          tTEMP);
  8067  0053B4  0E00               	movlw	low main@buf
  8068  0053B6  0100               	movlb	0	; () banked
  8069  0053B8  6FAE               	movwf	sprintf@sp& (0+255),b
  8070  0053BA  0E03               	movlw	high main@buf
  8071  0053BC  0100               	movlb	0	; () banked
  8072  0053BE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  8073  0053C0  0E99               	movlw	low STR_1
  8074  0053C2  0100               	movlb	0	; () banked
  8075  0053C4  6FB0               	movwf	sprintf@f& (0+255),b
  8076  0053C6  0EF1               	movlw	high STR_1
  8077  0053C8  0100               	movlb	0	; () banked
  8078  0053CA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  8079  0053CC  0EC8               	movlw	low main@BroadcastTEMP
  8080  0053CE  0100               	movlb	0	; () banked
  8081  0053D0  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  8082  0053D2  0E03               	movlw	high main@BroadcastTEMP
  8083  0053D4  0100               	movlb	0	; () banked
  8084  0053D6  6FB3               	movwf	(?_sprintf+5)& (0+255),b
  8085  0053D8  EC22  F016         	call	_sprintf	;wreg free
  8086                           
  8087                           ;main.c: 211: UARTstringCRLN(buf);
  8088  0053DC  0E00               	movlw	low main@buf
  8089  0053DE  0100               	movlb	0	; () banked
  8090  0053E0  6F64               	movwf	UARTstringCRLN@data& (0+255),b
  8091  0053E2  0E03               	movlw	high main@buf
  8092  0053E4  0100               	movlb	0	; () banked
  8093  0053E6  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8094  0053E8  ECF9  F054         	call	_UARTstringCRLN	;wreg free
  8095                           
  8096                           ;main.c: 212: UARTstring_CONST(CRLN);
  8097  0053EC  0E5E               	movlw	low _CRLN
  8098  0053EE  0100               	movlb	0	; () banked
  8099  0053F0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8100  0053F2  0EEF               	movlw	high _CRLN
  8101  0053F4  0100               	movlb	0	; () banked
  8102  0053F6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8103  0053F8  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8104  0053FC  D000               	goto	l14190
  8105  0053FE                     l14190:
  8106                           
  8107                           ;main.c: 213: }
  8108                           ;main.c: 214: if(VoltageStatus != 1 && VoltageStatusOLD != 1)
  8109  0053FE  0103               	movlb	3	; () banked
  8110  005400  05E4               	decf	main@VoltageStatus& (0+255),w,b
  8111  005402  B4D8               	btfsc	status,2,c
  8112  005404  D015               	goto	l14196
  8113                           
  8114                           ; BSR set to: 3
  8115  005406  0103               	movlb	3	; () banked
  8116  005408  05E1               	decf	main@VoltageStatusOLD& (0+255),w,b
  8117  00540A  B4D8               	btfsc	status,2,c
  8118  00540C  D011               	goto	l14196
  8119                           
  8120                           ; BSR set to: 3
  8121                           ;main.c: 215: {
  8122                           ;main.c: 216: UARTstringCRLN_CONST("Voltage out of Range!!!");
  8123  00540E  0E7B               	movlw	low STR_2
  8124  005410  0100               	movlb	0	; () banked
  8125  005412  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  8126  005414  0EFB               	movlw	high STR_2
  8127  005416  0100               	movlb	0	; () banked
  8128  005418  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  8129  00541A  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
  8130                           
  8131                           ;main.c: 217: UARTstring_CONST(CRLN);
  8132  00541E  0E5E               	movlw	low _CRLN
  8133  005420  0100               	movlb	0	; () banked
  8134  005422  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8135  005424  0EEF               	movlw	high _CRLN
  8136  005426  0100               	movlb	0	; () banked
  8137  005428  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8138  00542A  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8139  00542E  D000               	goto	l14196
  8140  005430                     l14196:
  8141                           
  8142                           ;main.c: 218: }
  8143                           ;main.c: 219: ClearUSART();
  8144  005430  EC18  F057         	call	_ClearUSART	;wreg free
  8145                           
  8146                           ;main.c: 220: PIR1bits.RCIF = 0;
  8147  005434  9A9E               	bcf	3998,5,c	;volatile
  8148                           
  8149                           ;main.c: 221: PIE1bits.RCIE = 1;
  8150  005436  8A9D               	bsf	3997,5,c	;volatile
  8151                           
  8152                           ;main.c: 222: UARTchar_CONST('>');
  8153  005438  0E3E               	movlw	62
  8154  00543A  EC74  F056         	call	_UARTchar_CONST
  8155                           
  8156                           ;main.c: 223: }
  8157  00543E  D002               	goto	l14204
  8158  005440                     l180:
  8159                           
  8160                           ; BSR set to: 3
  8161                           ;main.c: 224: else
  8162                           ;main.c: 225: {
  8163                           ;main.c: 226: PIE1bits.RCIE = 0;
  8164  005440  9A9D               	bcf	3997,5,c	;volatile
  8165                           
  8166                           ; BSR set to: 3
  8167  005442  D000               	goto	l14204
  8168  005444                     l14204:
  8169                           
  8170                           ;main.c: 227: }
  8171                           ;main.c: 228: }
  8172                           ;main.c: 229: if(Bluetoothtask >= 1 && Connected)
  8173  005444  0103               	movlb	3	; () banked
  8174  005446  51DE               	movf	main@Bluetoothtask& (0+255),w,b
  8175  005448  0103               	movlb	3	; () banked
  8176  00544A  B4D8               	btfsc	status,2,c
  8177  00544C  D079               	goto	l14252
  8178                           
  8179                           ; BSR set to: 3
  8180  00544E  0103               	movlb	3	; () banked
  8181  005450  51E2               	movf	main@Connected& (0+255),w,b
  8182  005452  0103               	movlb	3	; () banked
  8183  005454  B4D8               	btfsc	status,2,c
  8184  005456  D074               	goto	l14252
  8185                           
  8186                           ; BSR set to: 3
  8187                           ;main.c: 230: {
  8188                           ;main.c: 231: cleanBuffer(BluetoothString, 100);
  8189  005458  0E64               	movlw	low main@BluetoothString
  8190  00545A  0100               	movlb	0	; () banked
  8191  00545C  6F60               	movwf	cleanBuffer@data& (0+255),b
  8192  00545E  0E03               	movlw	high main@BluetoothString
  8193  005460  0100               	movlb	0	; () banked
  8194  005462  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  8195  005464  0E00               	movlw	0
  8196  005466  0100               	movlb	0	; () banked
  8197  005468  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  8198  00546A  0E64               	movlw	100
  8199  00546C  6F62               	movwf	cleanBuffer@count& (0+255),b
  8200  00546E  EC3D  F053         	call	_cleanBuffer	;wreg free
  8201                           
  8202                           ;main.c: 232: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  8203  005472  0E64               	movlw	low _ReceivedString
  8204  005474  0100               	movlb	0	; () banked
  8205  005476  6F68               	movwf	BufferCopy@from& (0+255),b
  8206  005478  0E04               	movlw	high _ReceivedString
  8207  00547A  0100               	movlb	0	; () banked
  8208  00547C  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
  8209  00547E  0E64               	movlw	low main@BluetoothString
  8210  005480  0100               	movlb	0	; () banked
  8211  005482  6F6A               	movwf	BufferCopy@to& (0+255),b
  8212  005484  0E03               	movlw	high main@BluetoothString
  8213  005486  0100               	movlb	0	; () banked
  8214  005488  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
  8215  00548A  C3EB  F06C         	movff	_ReceivedStringPos,BufferCopy@count	;volatile
  8216  00548E  0E00               	movlw	0
  8217  005490  0100               	movlb	0	; () banked
  8218  005492  6F6D               	movwf	BufferCopy@shift& (0+255),b
  8219  005494  EC36  F051         	call	_BufferCopy	;wreg free
  8220                           
  8221                           ;main.c: 233: BluetoothStringPos = ReceivedStringPos;
  8222  005498  C3EB  F3DF         	movff	_ReceivedStringPos,main@BluetoothStringPos	;volatile
  8223                           
  8224                           ;main.c: 234: cleanBuffer(ReceivedString, ReceivedStringPos);
  8225  00549C  0E64               	movlw	low _ReceivedString
  8226  00549E  0100               	movlb	0	; () banked
  8227  0054A0  6F60               	movwf	cleanBuffer@data& (0+255),b
  8228  0054A2  0E04               	movlw	high _ReceivedString
  8229  0054A4  0100               	movlb	0	; () banked
  8230  0054A6  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  8231  0054A8  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  8232  0054AC  0100               	movlb	0	; () banked
  8233  0054AE  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
  8234  0054B0  EC3D  F053         	call	_cleanBuffer	;wreg free
  8235                           
  8236                           ;main.c: 235: ReceivedStringPos = 0;
  8237  0054B4  0E00               	movlw	0
  8238  0054B6  0103               	movlb	3	; () banked
  8239  0054B8  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  8240                           
  8241                           ; BSR set to: 3
  8242                           ;main.c: 236: NewReceivedString = 0;
  8243  0054BA  0E00               	movlw	0
  8244  0054BC  0103               	movlb	3	; () banked
  8245  0054BE  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
  8246                           
  8247                           ; BSR set to: 3
  8248                           ;main.c: 237: if(BluetoothString[0] != 0)
  8249  0054C0  0103               	movlb	3	; () banked
  8250  0054C2  5164               	movf	main@BluetoothString& (0+255),w,b
  8251  0054C4  0103               	movlb	3	; () banked
  8252  0054C6  B4D8               	btfsc	status,2,c
  8253  0054C8  D00B               	goto	l14224
  8254                           
  8255                           ; BSR set to: 3
  8256                           ;main.c: 238: {
  8257                           ;main.c: 239: UseBluetooth(BluetoothString, BluetoothStringPos);
  8258  0054CA  0E64               	movlw	low main@BluetoothString
  8259  0054CC  0100               	movlb	0	; () banked
  8260  0054CE  6FE6               	movwf	UseBluetooth@String& (0+255),b
  8261  0054D0  0E03               	movlw	high main@BluetoothString
  8262  0054D2  0100               	movlb	0	; () banked
  8263  0054D4  6FE7               	movwf	(UseBluetooth@String+1)& (0+255),b
  8264  0054D6  C3DF  F0E8         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  8265  0054DA  ECE8  F000         	call	_UseBluetooth	;wreg free
  8266  0054DE  D000               	goto	l14224
  8267  0054E0                     l14224:
  8268                           
  8269                           ;main.c: 240: }
  8270                           ;main.c: 241: cleanBuffer(ReceivedString, ReceivedStringPos);
  8271  0054E0  0E64               	movlw	low _ReceivedString
  8272  0054E2  0100               	movlb	0	; () banked
  8273  0054E4  6F60               	movwf	cleanBuffer@data& (0+255),b
  8274  0054E6  0E04               	movlw	high _ReceivedString
  8275  0054E8  0100               	movlb	0	; () banked
  8276  0054EA  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  8277  0054EC  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  8278  0054F0  0100               	movlb	0	; () banked
  8279  0054F2  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
  8280  0054F4  EC3D  F053         	call	_cleanBuffer	;wreg free
  8281                           
  8282                           ;main.c: 242: ReceivedStringPos = 0;
  8283  0054F8  0E00               	movlw	0
  8284  0054FA  0103               	movlb	3	; () banked
  8285  0054FC  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  8286                           
  8287                           ; BSR set to: 3
  8288                           ;main.c: 243: NewReceivedString = 0;
  8289  0054FE  0E00               	movlw	0
  8290  005500  0103               	movlb	3	; () banked
  8291  005502  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
  8292                           
  8293                           ; BSR set to: 3
  8294                           ;main.c: 244: UARTstring_CONST(CRLN);
  8295  005504  0E5E               	movlw	low _CRLN
  8296  005506  0100               	movlb	0	; () banked
  8297  005508  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8298  00550A  0EEF               	movlw	high _CRLN
  8299  00550C  0100               	movlb	0	; () banked
  8300  00550E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8301  005510  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8302                           
  8303                           ;main.c: 245: UARTchar_CONST('>');
  8304  005514  0E3E               	movlw	62
  8305  005516  EC74  F056         	call	_UARTchar_CONST
  8306                           
  8307                           ;main.c: 246: if(IR_New_Code)
  8308  00551A  0103               	movlb	3	; () banked
  8309  00551C  51F0               	movf	_IR_New_Code& (0+255),w,b
  8310  00551E  B4D8               	btfsc	status,2,c
  8311  005520  D004               	goto	l14238
  8312                           
  8313                           ; BSR set to: 3
  8314                           ;main.c: 247: {
  8315                           ;main.c: 248: IR_New_Code = 0;
  8316  005522  0E00               	movlw	0
  8317  005524  0103               	movlb	3	; () banked
  8318  005526  6FF0               	movwf	_IR_New_Code& (0+255),b
  8319  005528  D000               	goto	l14238
  8320  00552A                     l14238:
  8321                           
  8322                           ; BSR set to: 3
  8323                           ;main.c: 249: }
  8324                           ;main.c: 251: IRpinOLD = ReadIRpin();
  8325  00552A  EC4E  F057         	call	_ReadIRpin	;wreg free
  8326  00552E  6E40               	movwf	_IRpinOLD,c
  8327                           
  8328                           ;main.c: 252: INTCONbits.RBIF = 0;
  8329  005530  90F2               	bcf	intcon,0,c	;volatile
  8330                           
  8331                           ;main.c: 253: (IOCBbits.IOCB4 = 1);
  8332  005532  887D               	bsf	3965,4,c	;volatile
  8333                           
  8334                           ;main.c: 254: INTCONbits.RBIE = 1;
  8335  005534  86F2               	bsf	intcon,3,c	;volatile
  8336                           
  8337                           ;main.c: 255: ClearUSART();
  8338  005536  EC18  F057         	call	_ClearUSART	;wreg free
  8339                           
  8340                           ;main.c: 256: PIR1bits.RCIF = 0;
  8341  00553A  9A9E               	bcf	3998,5,c	;volatile
  8342                           
  8343                           ;main.c: 257: PIE1bits.RCIE = 1;
  8344  00553C  8A9D               	bsf	3997,5,c	;volatile
  8345  00553E  D000               	goto	l14252
  8346  005540                     l14252:
  8347                           
  8348                           ;main.c: 258: }
  8349                           ;main.c: 261: if(IRtimeout < 5000)
  8350  005540  0103               	movlb	3	; () banked
  8351  005542  51F4               	movf	(_IRtimeout+3)& (0+255),w,b
  8352  005544  0103               	movlb	3	; () banked
  8353  005546  11F3               	iorwf	(_IRtimeout+2)& (0+255),w,b
  8354  005548  E110               	bnz	l14256
  8355  00554A  0E88               	movlw	136
  8356  00554C  0103               	movlb	3	; () banked
  8357  00554E  5DF1               	subwf	_IRtimeout& (0+255),w,b
  8358  005550  0E13               	movlw	19
  8359  005552  0103               	movlb	3	; () banked
  8360  005554  59F2               	subwfb	(_IRtimeout+1)& (0+255),w,b
  8361  005556  B0D8               	btfsc	status,0,c
  8362  005558  D008               	goto	l14256
  8363                           
  8364                           ; BSR set to: 3
  8365                           ;main.c: 262: {
  8366                           ;main.c: 263: IRtimeout++;
  8367  00555A  0E01               	movlw	1
  8368  00555C  0103               	movlb	3	; () banked
  8369  00555E  27F1               	addwf	_IRtimeout& (0+255),f,b
  8370  005560  0E00               	movlw	0
  8371  005562  23F2               	addwfc	(_IRtimeout+1)& (0+255),f,b
  8372  005564  23F3               	addwfc	(_IRtimeout+2)& (0+255),f,b
  8373  005566  23F4               	addwfc	(_IRtimeout+3)& (0+255),f,b
  8374                           
  8375                           ;main.c: 264: }
  8376  005568  D027               	goto	l14272
  8377  00556A                     l14256:
  8378                           
  8379                           ; BSR set to: 3
  8380                           ;main.c: 265: else if(IRtimeout == 5000)
  8381  00556A  0E88               	movlw	136
  8382  00556C  0103               	movlb	3	; () banked
  8383  00556E  19F1               	xorwf	_IRtimeout& (0+255),w,b
  8384  005570  E123               	bnz	l14272
  8385  005572  0E13               	movlw	19
  8386  005574  0103               	movlb	3	; () banked
  8387  005576  19F2               	xorwf	(_IRtimeout+1)& (0+255),w,b
  8388  005578  0103               	movlb	3	; () banked
  8389  00557A  11F3               	iorwf	(_IRtimeout+2)& (0+255),w,b
  8390  00557C  0103               	movlb	3	; () banked
  8391  00557E  11F4               	iorwf	(_IRtimeout+3)& (0+255),w,b
  8392  005580  A4D8               	btfss	status,2,c
  8393  005582  D01A               	goto	l14272
  8394                           
  8395                           ; BSR set to: 3
  8396                           ;main.c: 266: {
  8397                           ;main.c: 267: IRtimeout++;
  8398  005584  0E01               	movlw	1
  8399  005586  0103               	movlb	3	; () banked
  8400  005588  27F1               	addwf	_IRtimeout& (0+255),f,b
  8401  00558A  0E00               	movlw	0
  8402  00558C  23F2               	addwfc	(_IRtimeout+1)& (0+255),f,b
  8403  00558E  23F3               	addwfc	(_IRtimeout+2)& (0+255),f,b
  8404  005590  23F4               	addwfc	(_IRtimeout+3)& (0+255),f,b
  8405                           
  8406                           ; BSR set to: 3
  8407                           ;main.c: 268: IR_NEC = 0;
  8408  005592  0E00               	movlw	0
  8409  005594  0103               	movlb	3	; () banked
  8410  005596  6FEC               	movwf	_IR_NEC& (0+255),b
  8411  005598  0E00               	movlw	0
  8412  00559A  6FED               	movwf	(_IR_NEC+1)& (0+255),b
  8413  00559C  0E00               	movlw	0
  8414  00559E  6FEE               	movwf	(_IR_NEC+2)& (0+255),b
  8415  0055A0  0E00               	movlw	0
  8416  0055A2  6FEF               	movwf	(_IR_NEC+3)& (0+255),b
  8417                           
  8418                           ; BSR set to: 3
  8419                           ;main.c: 269: IR_New_Code = 0;
  8420  0055A4  0E00               	movlw	0
  8421  0055A6  0103               	movlb	3	; () banked
  8422  0055A8  6FF0               	movwf	_IR_New_Code& (0+255),b
  8423                           
  8424                           ; BSR set to: 3
  8425                           ;main.c: 270: IRpinOLD = ReadIRpin();
  8426  0055AA  EC4E  F057         	call	_ReadIRpin	;wreg free
  8427  0055AE  6E40               	movwf	_IRpinOLD,c
  8428                           
  8429                           ;main.c: 271: INTCONbits.RBIF = 0;
  8430  0055B0  90F2               	bcf	intcon,0,c	;volatile
  8431                           
  8432                           ;main.c: 272: (IOCBbits.IOCB4 = 1);
  8433  0055B2  887D               	bsf	3965,4,c	;volatile
  8434                           
  8435                           ;main.c: 273: INTCONbits.RBIE = 1;
  8436  0055B4  86F2               	bsf	intcon,3,c	;volatile
  8437  0055B6  D000               	goto	l14272
  8438  0055B8                     l14272:
  8439                           
  8440                           ;main.c: 274: }
  8441                           ;main.c: 275: if(BufferOverflow)
  8442  0055B8  0103               	movlb	3	; () banked
  8443  0055BA  51E9               	movf	_BufferOverflow& (0+255),w,b
  8444  0055BC  B4D8               	btfsc	status,2,c
  8445  0055BE  D033               	goto	l14294
  8446                           
  8447                           ; BSR set to: 3
  8448                           ;main.c: 276: {
  8449                           ;main.c: 278: cleanBuffer(ReceivedString,100);
  8450  0055C0  0E64               	movlw	low _ReceivedString
  8451  0055C2  0100               	movlb	0	; () banked
  8452  0055C4  6F60               	movwf	cleanBuffer@data& (0+255),b
  8453  0055C6  0E04               	movlw	high _ReceivedString
  8454  0055C8  0100               	movlb	0	; () banked
  8455  0055CA  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  8456  0055CC  0E00               	movlw	0
  8457  0055CE  0100               	movlb	0	; () banked
  8458  0055D0  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  8459  0055D2  0E64               	movlw	100
  8460  0055D4  6F62               	movwf	cleanBuffer@count& (0+255),b
  8461  0055D6  EC3D  F053         	call	_cleanBuffer	;wreg free
  8462                           
  8463                           ;main.c: 279: ReceivedStringPos = 0;
  8464  0055DA  0E00               	movlw	0
  8465  0055DC  0103               	movlb	3	; () banked
  8466  0055DE  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  8467                           
  8468                           ; BSR set to: 3
  8469                           ;main.c: 280: UARTstring_CONST(CRLN);
  8470  0055E0  0E5E               	movlw	low _CRLN
  8471  0055E2  0100               	movlb	0	; () banked
  8472  0055E4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8473  0055E6  0EEF               	movlw	high _CRLN
  8474  0055E8  0100               	movlb	0	; () banked
  8475  0055EA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8476  0055EC  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8477                           
  8478                           ;main.c: 281: UARTstringCRLN_CONST("Buffer Overflow");
  8479  0055F0  0E23               	movlw	low STR_3
  8480  0055F2  0100               	movlb	0	; () banked
  8481  0055F4  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  8482  0055F6  0EFE               	movlw	high STR_3
  8483  0055F8  0100               	movlb	0	; () banked
  8484  0055FA  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  8485  0055FC  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
  8486                           
  8487                           ;main.c: 282: UARTstring_CONST(CRLN);
  8488  005600  0E5E               	movlw	low _CRLN
  8489  005602  0100               	movlb	0	; () banked
  8490  005604  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  8491  005606  0EEF               	movlw	high _CRLN
  8492  005608  0100               	movlb	0	; () banked
  8493  00560A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  8494  00560C  EC98  F055         	call	_UARTstring_CONST	;wreg free
  8495                           
  8496                           ;main.c: 283: UARTchar('>');
  8497  005610  0E3E               	movlw	62
  8498  005612  EC93  F056         	call	_UARTchar
  8499                           
  8500                           ;main.c: 284: BufferOverflow = 0;
  8501  005616  0E00               	movlw	0
  8502  005618  0103               	movlb	3	; () banked
  8503  00561A  6FE9               	movwf	_BufferOverflow& (0+255),b
  8504                           
  8505                           ; BSR set to: 3
  8506                           ;main.c: 285: ClearUSART();
  8507  00561C  EC18  F057         	call	_ClearUSART	;wreg free
  8508                           
  8509                           ;main.c: 286: PIR1bits.RCIF = 0;
  8510  005620  9A9E               	bcf	3998,5,c	;volatile
  8511                           
  8512                           ;main.c: 287: PIE1bits.RCIE = 1;
  8513  005622  8A9D               	bsf	3997,5,c	;volatile
  8514  005624  D000               	goto	l14294
  8515  005626                     l14294:
  8516                           
  8517                           ;main.c: 288: }
  8518                           ;main.c: 289: ConnectedOLD = Connected;
  8519  005626  C3E2  F3E0         	movff	main@Connected,main@ConnectedOLD
  8520  00562A                     l14296:
  8521                           
  8522                           ;main.c: 290: VoltageStatusOLD = VoltageStatus;
  8523  00562A  C3E4  F3E1         	movff	main@VoltageStatus,main@VoltageStatusOLD
  8524  00562E  D5C2               	goto	l14124
  8525  005630  EFE6  F000         	goto	start
  8526  005634                     __end_of_main:
  8527                           	opt stack 0
  8528                           tblptru	equ	0xFF8
  8529                           tblptrh	equ	0xFF7
  8530                           tblptrl	equ	0xFF6
  8531                           tablat	equ	0xFF5
  8532                           intcon	equ	0xFF2
  8533                           postinc0	equ	0xFEE
  8534                           wreg	equ	0xFE8
  8535                           postdec1	equ	0xFE5
  8536                           fsr1l	equ	0xFE1
  8537                           status	equ	0xFD8
  8538                           
  8539 ;; *************** function _UseIRCode *****************
  8540 ;; Defined at:
  8541 ;;		line 271 in file "IR.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  Code            2  122[BANK0 ] PTR unsigned char 
  8544 ;;		 -> IR_New_Code(1), 
  8545 ;;  NEC             4  124[BANK0 ] unsigned long 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  i               1  133[BANK0 ] unsigned char 
  8548 ;;  j               1  132[BANK0 ] unsigned char 
  8549 ;;  found           1  131[BANK0 ] unsigned char 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;		None               void
  8552 ;; Registers used:
  8553 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;Total ram usage:       12 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:   10
  8566 ;; This function calls:
  8567 ;;		_DecodeNEC
  8568 ;;		_LEDTimerON
  8569 ;;		_ReadCodeButtons
  8570 ;;		_ReadIRpin
  8571 ;;		_ReadPushButton
  8572 ;;		_SendRF_Channel
  8573 ;;		_SyncGlobalToEEPROM
  8574 ;;		_delayUS
  8575 ;; This function is called by:
  8576 ;;		_main
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text1
  8581  0074AE                     __ptext1:
  8582                           	opt stack 0
  8583  0074AE                     _UseIRCode:
  8584                           	opt stack 20
  8585                           
  8586                           ;IR.c: 273: unsigned char i,j;
  8587                           ;IR.c: 274: unsigned char found = 0;
  8588                           
  8589                           ;incstack = 0
  8590  0074AE  0E00               	movlw	0
  8591  0074B0  0100               	movlb	0	; () banked
  8592  0074B2  6FE3               	movwf	UseIRCode@found& (0+255),b
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;IR.c: 276: if(*Code == 2 || *Code == 1)
  8596  0074B4  C0DA  FFD9         	movff	UseIRCode@Code,fsr2l
  8597  0074B8  C0DB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8598  0074BC  0E02               	movlw	2
  8599  0074BE  18DE               	xorwf	postinc2,w,c
  8600  0074C0  B4D8               	btfsc	status,2,c
  8601  0074C2  D007               	goto	l12636
  8602                           
  8603                           ; BSR set to: 0
  8604  0074C4  C0DA  FFD9         	movff	UseIRCode@Code,fsr2l
  8605  0074C8  C0DB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8606  0074CC  04DE               	decf	postinc2,w,c
  8607  0074CE  A4D8               	btfss	status,2,c
  8608  0074D0  D104               	goto	l12718
  8609  0074D2                     l12636:
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;IR.c: 277: {
  8613                           ;IR.c: 278: DecodeNEC(NEC, &IRaddress, &IRcommand);
  8614  0074D2  C0DC  F064         	movff	UseIRCode@NEC,DecodeNEC@Nec
  8615  0074D6  C0DD  F065         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  8616  0074DA  C0DE  F066         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  8617  0074DE  C0DF  F067         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  8618  0074E2  0EFD               	movlw	low _IRaddress
  8619  0074E4  0100               	movlb	0	; () banked
  8620  0074E6  6F68               	movwf	DecodeNEC@address& (0+255),b
  8621  0074E8  0E00               	movlw	high _IRaddress
  8622  0074EA  0100               	movlb	0	; () banked
  8623  0074EC  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
  8624  0074EE  0EFE               	movlw	low _IRcommand
  8625  0074F0  0100               	movlb	0	; () banked
  8626  0074F2  6F6A               	movwf	DecodeNEC@command& (0+255),b
  8627  0074F4  0E00               	movlw	high _IRcommand
  8628  0074F6  0100               	movlb	0	; () banked
  8629  0074F8  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
  8630  0074FA  EC26  F04E         	call	_DecodeNEC	;wreg free
  8631                           
  8632                           ;IR.c: 279: if(ReadPushButton())
  8633  0074FE  EC32  F057         	call	_ReadPushButton	;wreg free
  8634  007502  0900               	iorlw	0
  8635  007504  B4D8               	btfsc	status,2,c
  8636  007506  D055               	goto	l12676
  8637                           
  8638                           ;IR.c: 280: {
  8639                           ;IR.c: 281: Global1.SWNECcode = NEC;
  8640  007508  C0DC  F2D3         	movff	UseIRCode@NEC,_Global1+1
  8641  00750C  C0DD  F2D4         	movff	UseIRCode@NEC+1,_Global1+2
  8642  007510  C0DE  F2D5         	movff	UseIRCode@NEC+2,_Global1+3
  8643  007514  C0DF  F2D6         	movff	UseIRCode@NEC+3,_Global1+4
  8644                           
  8645                           ;IR.c: 282: if(SyncGlobalToEEPROM())
  8646  007518  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
  8647  00751C  0900               	iorlw	0
  8648  00751E  B4D8               	btfsc	status,2,c
  8649  007520  D024               	goto	l12660
  8650                           
  8651                           ;IR.c: 283: {
  8652                           ;IR.c: 285: for(i =0;i<10;i++)
  8653  007522  0E00               	movlw	0
  8654  007524  0100               	movlb	0	; () banked
  8655  007526  6FE5               	movwf	UseIRCode@i& (0+255),b
  8656  007528                     l12646:
  8657                           
  8658                           ; BSR set to: 0
  8659  007528  0E09               	movlw	9
  8660  00752A  0100               	movlb	0	; () banked
  8661  00752C  65E5               	cpfsgt	UseIRCode@i& (0+255),b
  8662  00752E  D001               	goto	l12650
  8663                           
  8664                           ; BSR set to: 0
  8665  007530  D0D4               	goto	l12718
  8666  007532                     l12650:
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;IR.c: 286: {
  8670                           ;IR.c: 287: (LATC |= 0x04);
  8671  007532  848B               	bsf	3979,2,c	;volatile
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;IR.c: 288: delayUS(50000);
  8675  007534  0E50               	movlw	80
  8676  007536  0100               	movlb	0	; () banked
  8677  007538  6F60               	movwf	delayUS@US& (0+255),b
  8678  00753A  0EC3               	movlw	195
  8679  00753C  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8680  00753E  0E00               	movlw	0
  8681  007540  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8682  007542  0E00               	movlw	0
  8683  007544  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8684  007546  EC96  F053         	call	_delayUS	;wreg free
  8685                           
  8686                           ;IR.c: 289: (LATC &= ~0x04);
  8687  00754A  948B               	bcf	3979,2,c	;volatile
  8688                           
  8689                           ;IR.c: 290: delayUS(50000);
  8690  00754C  0E50               	movlw	80
  8691  00754E  0100               	movlb	0	; () banked
  8692  007550  6F60               	movwf	delayUS@US& (0+255),b
  8693  007552  0EC3               	movlw	195
  8694  007554  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8695  007556  0E00               	movlw	0
  8696  007558  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8697  00755A  0E00               	movlw	0
  8698  00755C  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8699  00755E  EC96  F053         	call	_delayUS	;wreg free
  8700  007562  0100               	movlb	0	; () banked
  8701  007564  2BE5               	incf	UseIRCode@i& (0+255),f,b
  8702  007566  D7E0               	goto	l12646
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;IR.c: 291: }
  8706                           ;IR.c: 292: }
  8707                           
  8708                           ; BSR set to: 0
  8709  007568  D0B8               	goto	l12718
  8710  00756A                     l12660:
  8711                           
  8712                           ;IR.c: 293: else
  8713                           ;IR.c: 294: {
  8714                           ;IR.c: 296: for(i =0;i<10;i++)
  8715  00756A  0E00               	movlw	0
  8716  00756C  0100               	movlb	0	; () banked
  8717  00756E  6FE5               	movwf	UseIRCode@i& (0+255),b
  8718  007570                     l12662:
  8719                           
  8720                           ; BSR set to: 0
  8721  007570  0E09               	movlw	9
  8722  007572  0100               	movlb	0	; () banked
  8723  007574  65E5               	cpfsgt	UseIRCode@i& (0+255),b
  8724  007576  D001               	goto	l12666
  8725                           
  8726                           ; BSR set to: 0
  8727  007578  D0B0               	goto	l12718
  8728  00757A                     l12666:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;IR.c: 297: {
  8732                           ;IR.c: 298: (LATC |= 0x02);
  8733  00757A  828B               	bsf	3979,1,c	;volatile
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;IR.c: 299: delayUS(50000);
  8737  00757C  0E50               	movlw	80
  8738  00757E  0100               	movlb	0	; () banked
  8739  007580  6F60               	movwf	delayUS@US& (0+255),b
  8740  007582  0EC3               	movlw	195
  8741  007584  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8742  007586  0E00               	movlw	0
  8743  007588  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8744  00758A  0E00               	movlw	0
  8745  00758C  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8746  00758E  EC96  F053         	call	_delayUS	;wreg free
  8747                           
  8748                           ;IR.c: 300: (LATC &= ~0x02);
  8749  007592  928B               	bcf	3979,1,c	;volatile
  8750                           
  8751                           ;IR.c: 301: delayUS(50000);
  8752  007594  0E50               	movlw	80
  8753  007596  0100               	movlb	0	; () banked
  8754  007598  6F60               	movwf	delayUS@US& (0+255),b
  8755  00759A  0EC3               	movlw	195
  8756  00759C  6F61               	movwf	(delayUS@US+1)& (0+255),b
  8757  00759E  0E00               	movlw	0
  8758  0075A0  6F62               	movwf	(delayUS@US+2)& (0+255),b
  8759  0075A2  0E00               	movlw	0
  8760  0075A4  6F63               	movwf	(delayUS@US+3)& (0+255),b
  8761  0075A6  EC96  F053         	call	_delayUS	;wreg free
  8762  0075AA  0100               	movlb	0	; () banked
  8763  0075AC  2BE5               	incf	UseIRCode@i& (0+255),f,b
  8764  0075AE  D7E0               	goto	l12662
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;IR.c: 302: }
  8768                           ;IR.c: 303: }
  8769                           ;IR.c: 304: }
  8770                           
  8771                           ; BSR set to: 0
  8772                           
  8773                           ; BSR set to: 0
  8774  0075B0  D094               	goto	l12718
  8775  0075B2                     l12676:
  8776                           
  8777                           ;IR.c: 305: else
  8778                           ;IR.c: 306: {
  8779                           ;IR.c: 307: if(NEC == Global1.SWNECcode)
  8780  0075B2  0100               	movlb	0	; () banked
  8781  0075B4  51DC               	movf	UseIRCode@NEC& (0+255),w,b
  8782  0075B6  0102               	movlb	2	; () banked
  8783  0075B8  19D3               	xorwf	(_Global1+1)& (0+255),w,b
  8784  0075BA  E122               	bnz	l12686
  8785  0075BC  0100               	movlb	0	; () banked
  8786  0075BE  51DD               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  8787  0075C0  0102               	movlb	2	; () banked
  8788  0075C2  19D4               	xorwf	(_Global1+2)& (0+255),w,b
  8789  0075C4  E11D               	bnz	l12686
  8790  0075C6  0100               	movlb	0	; () banked
  8791  0075C8  51DE               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  8792  0075CA  0102               	movlb	2	; () banked
  8793  0075CC  19D5               	xorwf	(_Global1+3)& (0+255),w,b
  8794  0075CE  E118               	bnz	l12686
  8795  0075D0  0100               	movlb	0	; () banked
  8796  0075D2  51DF               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  8797  0075D4  0102               	movlb	2	; () banked
  8798  0075D6  19D6               	xorwf	(_Global1+4)& (0+255),w,b
  8799  0075D8  A4D8               	btfss	status,2,c
  8800  0075DA  D012               	goto	l12686
  8801                           
  8802                           ; BSR set to: 2
  8803                           ;IR.c: 308: {
  8804                           ;IR.c: 309: if(*Code == 2)
  8805  0075DC  C0DA  FFD9         	movff	UseIRCode@Code,fsr2l
  8806  0075E0  C0DB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8807  0075E4  0E02               	movlw	2
  8808  0075E6  18DE               	xorwf	postinc2,w,c
  8809  0075E8  A4D8               	btfss	status,2,c
  8810  0075EA  D002               	goto	l12682
  8811                           
  8812                           ; BSR set to: 2
  8813                           ;IR.c: 310: {
  8814                           ;IR.c: 311: (LATC |= 0x02);
  8815  0075EC  828B               	bsf	3979,1,c	;volatile
  8816  0075EE  D000               	goto	l12682
  8817  0075F0                     l12682:
  8818                           
  8819                           ; BSR set to: 2
  8820                           ;IR.c: 312: }
  8821                           ;IR.c: 313: SendRF_Channel(ReadCodeButtons());
  8822  0075F0  ECC1  F053         	call	_ReadCodeButtons	;wreg free
  8823  0075F4  ECD8  F037         	call	_SendRF_Channel
  8824                           
  8825                           ;IR.c: 314: found = 1;
  8826  0075F8  0E01               	movlw	1
  8827  0075FA  0100               	movlb	0	; () banked
  8828  0075FC  6FE3               	movwf	UseIRCode@found& (0+255),b
  8829  0075FE  D000               	goto	l12686
  8830  007600                     l12686:
  8831                           
  8832                           ;IR.c: 315: }
  8833                           ;IR.c: 317: for(j=0; j < 3; j++)
  8834  007600  0E00               	movlw	0
  8835  007602  0100               	movlb	0	; () banked
  8836  007604  6FE4               	movwf	UseIRCode@j& (0+255),b
  8837  007606                     l12688:
  8838                           
  8839                           ; BSR set to: 0
  8840  007606  0E02               	movlw	2
  8841  007608  0100               	movlb	0	; () banked
  8842  00760A  65E4               	cpfsgt	UseIRCode@j& (0+255),b
  8843  00760C  D001               	goto	l12692
  8844                           
  8845                           ; BSR set to: 0
  8846  00760E  D065               	goto	l12718
  8847  007610                     l12692:
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;IR.c: 318: {
  8851                           ;IR.c: 319: for(i=0; i < 8; i++)
  8852  007610  0E00               	movlw	0
  8853  007612  0100               	movlb	0	; () banked
  8854  007614  6FE5               	movwf	UseIRCode@i& (0+255),b
  8855  007616                     l12694:
  8856                           
  8857                           ; BSR set to: 0
  8858  007616  0E07               	movlw	7
  8859  007618  0100               	movlb	0	; () banked
  8860  00761A  65E5               	cpfsgt	UseIRCode@i& (0+255),b
  8861  00761C  D001               	goto	l12698
  8862                           
  8863                           ; BSR set to: 0
  8864  00761E  D059               	goto	l12714
  8865  007620                     l12698:
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;IR.c: 320: {
  8869                           ;IR.c: 322: if(IRaddress == Global2.RemoteButtonRF[i][j][0])
  8870  007620  0100               	movlb	0	; () banked
  8871  007622  51E5               	movf	UseIRCode@i& (0+255),w,b
  8872  007624  0D06               	mullw	6
  8873  007626  0E9E               	movlw	low _Global2
  8874  007628  0100               	movlb	0	; () banked
  8875  00762A  6FE0               	movwf	??_UseIRCode& (0+255),b
  8876  00762C  0E02               	movlw	high _Global2
  8877  00762E  0100               	movlb	0	; () banked
  8878  007630  6FE1               	movwf	(??_UseIRCode+1)& (0+255),b
  8879  007632  50F3               	movf	prodl,w,c
  8880  007634  0100               	movlb	0	; () banked
  8881  007636  27E0               	addwf	??_UseIRCode& (0+255),f,b
  8882  007638  50F4               	movf	prodh,w,c
  8883  00763A  0100               	movlb	0	; () banked
  8884  00763C  23E1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  8885  00763E  0100               	movlb	0	; () banked
  8886  007640  51E4               	movf	UseIRCode@j& (0+255),w,b
  8887  007642  0D02               	mullw	2
  8888  007644  50F3               	movf	prodl,w,c
  8889  007646  0100               	movlb	0	; () banked
  8890  007648  25E0               	addwf	??_UseIRCode& (0+255),w,b
  8891  00764A  6ED9               	movwf	fsr2l,c
  8892  00764C  50F4               	movf	prodh,w,c
  8893  00764E  0100               	movlb	0	; () banked
  8894  007650  21E1               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  8895  007652  6EDA               	movwf	fsr2h,c
  8896  007654  0100               	movlb	0	; () banked
  8897  007656  51FD               	movf	_IRaddress& (0+255),w,b
  8898  007658  18DE               	xorwf	postinc2,w,c
  8899  00765A  A4D8               	btfss	status,2,c
  8900  00765C  D037               	goto	l12710
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;IR.c: 323: {
  8904                           ;IR.c: 324: if(IRcommand == Global2.RemoteButtonRF[i][j][1])
  8905  00765E  0100               	movlb	0	; () banked
  8906  007660  51E5               	movf	UseIRCode@i& (0+255),w,b
  8907  007662  0D06               	mullw	6
  8908  007664  0E9E               	movlw	low _Global2
  8909  007666  0100               	movlb	0	; () banked
  8910  007668  6FE0               	movwf	??_UseIRCode& (0+255),b
  8911  00766A  0E02               	movlw	high _Global2
  8912  00766C  0100               	movlb	0	; () banked
  8913  00766E  6FE1               	movwf	(??_UseIRCode+1)& (0+255),b
  8914  007670  50F3               	movf	prodl,w,c
  8915  007672  0100               	movlb	0	; () banked
  8916  007674  27E0               	addwf	??_UseIRCode& (0+255),f,b
  8917  007676  50F4               	movf	prodh,w,c
  8918  007678  0100               	movlb	0	; () banked
  8919  00767A  23E1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  8920  00767C  0100               	movlb	0	; () banked
  8921  00767E  51E4               	movf	UseIRCode@j& (0+255),w,b
  8922  007680  0D02               	mullw	2
  8923  007682  50F3               	movf	prodl,w,c
  8924  007684  0100               	movlb	0	; () banked
  8925  007686  27E0               	addwf	??_UseIRCode& (0+255),f,b
  8926  007688  50F4               	movf	prodh,w,c
  8927  00768A  0100               	movlb	0	; () banked
  8928  00768C  23E1               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  8929  00768E  0E01               	movlw	1
  8930  007690  0100               	movlb	0	; () banked
  8931  007692  25E0               	addwf	??_UseIRCode& (0+255),w,b
  8932  007694  6ED9               	movwf	fsr2l,c
  8933  007696  0E00               	movlw	0
  8934  007698  0100               	movlb	0	; () banked
  8935  00769A  21E1               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  8936  00769C  6EDA               	movwf	fsr2h,c
  8937  00769E  0100               	movlb	0	; () banked
  8938  0076A0  51FE               	movf	_IRcommand& (0+255),w,b
  8939  0076A2  18DE               	xorwf	postinc2,w,c
  8940  0076A4  A4D8               	btfss	status,2,c
  8941  0076A6  D012               	goto	l12710
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;IR.c: 325: {
  8945                           ;IR.c: 326: if(*Code == 2)
  8946  0076A8  C0DA  FFD9         	movff	UseIRCode@Code,fsr2l
  8947  0076AC  C0DB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  8948  0076B0  0E02               	movlw	2
  8949  0076B2  18DE               	xorwf	postinc2,w,c
  8950  0076B4  A4D8               	btfss	status,2,c
  8951  0076B6  D002               	goto	l12706
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;IR.c: 327: {
  8955                           ;IR.c: 328: (LATC |= 0x02);
  8956  0076B8  828B               	bsf	3979,1,c	;volatile
  8957  0076BA  D000               	goto	l12706
  8958  0076BC                     l12706:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;IR.c: 329: }
  8962                           ;IR.c: 330: SendRF_Channel(i);
  8963  0076BC  0100               	movlb	0	; () banked
  8964  0076BE  51E5               	movf	UseIRCode@i& (0+255),w,b
  8965  0076C0  ECD8  F037         	call	_SendRF_Channel
  8966                           
  8967                           ;IR.c: 331: found = 1;
  8968  0076C4  0E01               	movlw	1
  8969  0076C6  0100               	movlb	0	; () banked
  8970  0076C8  6FE3               	movwf	UseIRCode@found& (0+255),b
  8971                           
  8972                           ; BSR set to: 0
  8973  0076CA  D000               	goto	l12710
  8974  0076CC                     l12710:
  8975                           
  8976                           ; BSR set to: 0
  8977  0076CC  0100               	movlb	0	; () banked
  8978  0076CE  2BE5               	incf	UseIRCode@i& (0+255),f,b
  8979  0076D0  D7A2               	goto	l12694
  8980  0076D2                     l12714:
  8981                           
  8982                           ; BSR set to: 0
  8983  0076D2  0100               	movlb	0	; () banked
  8984  0076D4  2BE4               	incf	UseIRCode@j& (0+255),f,b
  8985  0076D6  D797               	goto	l12688
  8986                           
  8987                           ; BSR set to: 0
  8988                           
  8989                           ; BSR set to: 0
  8990                           
  8991                           ; BSR set to: 0
  8992  0076D8  D000               	goto	l12718
  8993  0076DA                     l12718:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;IR.c: 332: }
  8997                           ;IR.c: 333: }
  8998                           ;IR.c: 334: }
  8999                           ;IR.c: 335: }
  9000                           ;IR.c: 337: }
  9001                           ;IR.c: 338: }
  9002                           ;IR.c: 339: if(found == 0)
  9003  0076DA  0100               	movlb	0	; () banked
  9004  0076DC  51E3               	movf	UseIRCode@found& (0+255),w,b
  9005  0076DE  0100               	movlb	0	; () banked
  9006  0076E0  A4D8               	btfss	status,2,c
  9007  0076E2  D004               	goto	l12724
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;IR.c: 340: {
  9011                           ;IR.c: 341: (LATC |= 0x02);
  9012  0076E4  828B               	bsf	3979,1,c	;volatile
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;IR.c: 342: LEDTimerON();
  9016  0076E6  EC06  F057         	call	_LEDTimerON	;wreg free
  9017  0076EA  D000               	goto	l12724
  9018  0076EC                     l12724:
  9019                           
  9020                           ;IR.c: 343: }
  9021                           ;IR.c: 344: *Code = 0;
  9022  0076EC  C0DA  FFD9         	movff	UseIRCode@Code,fsr2l
  9023  0076F0  C0DB  FFDA         	movff	UseIRCode@Code+1,fsr2h
  9024  0076F4  0E00               	movlw	0
  9025  0076F6  6EDF               	movwf	indf2,c
  9026                           
  9027                           ;IR.c: 345: IRpinOLD = ReadIRpin();
  9028  0076F8  EC4E  F057         	call	_ReadIRpin	;wreg free
  9029  0076FC  6E40               	movwf	_IRpinOLD,c
  9030                           
  9031                           ;IR.c: 346: INTCONbits.RBIF = 0;
  9032  0076FE  90F2               	bcf	intcon,0,c	;volatile
  9033                           
  9034                           ;IR.c: 347: (IOCBbits.IOCB4 = 1);
  9035  007700  887D               	bsf	3965,4,c	;volatile
  9036                           
  9037                           ;IR.c: 348: INTCONbits.RBIE = 1;
  9038  007702  86F2               	bsf	intcon,3,c	;volatile
  9039  007704  0012               	return		;funcret
  9040  007706                     __end_of_UseIRCode:
  9041                           	opt stack 0
  9042                           tblptru	equ	0xFF8
  9043                           tblptrh	equ	0xFF7
  9044                           tblptrl	equ	0xFF6
  9045                           tablat	equ	0xFF5
  9046                           prodh	equ	0xFF4
  9047                           prodl	equ	0xFF3
  9048                           intcon	equ	0xFF2
  9049                           postinc0	equ	0xFEE
  9050                           wreg	equ	0xFE8
  9051                           postdec1	equ	0xFE5
  9052                           fsr1l	equ	0xFE1
  9053                           indf2	equ	0xFDF
  9054                           postinc2	equ	0xFDE
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           
  9059 ;; *************** function _ReadPushButton *****************
  9060 ;; Defined at:
  9061 ;;		line 52 in file "Button.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;		None
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      unsigned char 
  9068 ;; Registers used:
  9069 ;;		wreg
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    5
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_UseIRCode
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text2
  9090  00AE64                     __ptext2:
  9091                           	opt stack 0
  9092  00AE64                     _ReadPushButton:
  9093                           	opt stack 24
  9094                           
  9095                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  9096                           
  9097                           ;incstack = 0
  9098  00AE64  B082               	btfsc	3970,0,c	;volatile
  9099  00AE66  D002               	goto	l12322
  9100                           
  9101                           ;Button.c: 56: {
  9102                           ;Button.c: 57: return 1;
  9103  00AE68  0E01               	movlw	1
  9104  00AE6A  0012               	return	
  9105  00AE6C                     l12322:
  9106                           
  9107                           ;Button.c: 58: }
  9108                           ;Button.c: 59: return 0;
  9109  00AE6C  0E00               	movlw	0
  9110  00AE6E  0012               	return	
  9111  00AE70  0012               	return		;funcret
  9112  00AE72                     __end_of_ReadPushButton:
  9113                           	opt stack 0
  9114                           tblptru	equ	0xFF8
  9115                           tblptrh	equ	0xFF7
  9116                           tblptrl	equ	0xFF6
  9117                           tablat	equ	0xFF5
  9118                           prodh	equ	0xFF4
  9119                           prodl	equ	0xFF3
  9120                           intcon	equ	0xFF2
  9121                           postinc0	equ	0xFEE
  9122                           wreg	equ	0xFE8
  9123                           postdec1	equ	0xFE5
  9124                           fsr1l	equ	0xFE1
  9125                           indf2	equ	0xFDF
  9126                           postinc2	equ	0xFDE
  9127                           fsr2h	equ	0xFDA
  9128                           fsr2l	equ	0xFD9
  9129                           status	equ	0xFD8
  9130                           
  9131 ;; *************** function _ReadCodeButtons *****************
  9132 ;; Defined at:
  9133 ;;		line 67 in file "Button.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  temp            1    9[BANK0 ] unsigned char 
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      unsigned char 
  9140 ;; Registers used:
  9141 ;;		wreg, status,2, status,0, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;Total ram usage:        1 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    6
  9154 ;; This function calls:
  9155 ;;		_delayUS
  9156 ;; This function is called by:
  9157 ;;		_UseIRCode
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text3
  9162  00A782                     __ptext3:
  9163                           	opt stack 0
  9164  00A782                     _ReadCodeButtons:
  9165                           	opt stack 23
  9166                           
  9167                           ;Button.c: 69: unsigned char temp = 0;
  9168                           
  9169                           ;incstack = 0
  9170  00A782  0E00               	movlw	0
  9171  00A784  0100               	movlb	0	; () banked
  9172  00A786  6F69               	movwf	ReadCodeButtons@temp& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;Button.c: 71: (LATC &= ~0x10);
  9176  00A788  988B               	bcf	3979,4,c	;volatile
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;Button.c: 72: delayUS(5);
  9180  00A78A  0E05               	movlw	5
  9181  00A78C  0100               	movlb	0	; () banked
  9182  00A78E  6F60               	movwf	delayUS@US& (0+255),b
  9183  00A790  0E00               	movlw	0
  9184  00A792  6F61               	movwf	(delayUS@US+1)& (0+255),b
  9185  00A794  0E00               	movlw	0
  9186  00A796  6F62               	movwf	(delayUS@US+2)& (0+255),b
  9187  00A798  0E00               	movlw	0
  9188  00A79A  6F63               	movwf	(delayUS@US+3)& (0+255),b
  9189  00A79C  EC96  F053         	call	_delayUS	;wreg free
  9190                           
  9191                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  9192  00A7A0  B081               	btfsc	3969,0,c	;volatile
  9193  00A7A2  D004               	goto	l12336
  9194                           
  9195                           ;Button.c: 76: {
  9196                           ;Button.c: 77: temp +=8;
  9197  00A7A4  0E08               	movlw	8
  9198  00A7A6  0100               	movlb	0	; () banked
  9199  00A7A8  2769               	addwf	ReadCodeButtons@temp& (0+255),f,b
  9200  00A7AA  D000               	goto	l12336
  9201  00A7AC                     l12336:
  9202                           
  9203                           ;Button.c: 78: }
  9204                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  9205  00A7AC  B281               	btfsc	3969,1,c	;volatile
  9206  00A7AE  D004               	goto	l12340
  9207                           
  9208                           ;Button.c: 80: {
  9209                           ;Button.c: 81: temp +=4;
  9210  00A7B0  0E04               	movlw	4
  9211  00A7B2  0100               	movlb	0	; () banked
  9212  00A7B4  2769               	addwf	ReadCodeButtons@temp& (0+255),f,b
  9213  00A7B6  D000               	goto	l12340
  9214  00A7B8                     l12340:
  9215                           
  9216                           ;Button.c: 82: }
  9217                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  9218  00A7B8  B481               	btfsc	3969,2,c	;volatile
  9219  00A7BA  D004               	goto	l12344
  9220                           
  9221                           ;Button.c: 84: {
  9222                           ;Button.c: 85: temp +=2;
  9223  00A7BC  0E02               	movlw	2
  9224  00A7BE  0100               	movlb	0	; () banked
  9225  00A7C0  2769               	addwf	ReadCodeButtons@temp& (0+255),f,b
  9226  00A7C2  D000               	goto	l12344
  9227  00A7C4                     l12344:
  9228                           
  9229                           ;Button.c: 86: }
  9230                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  9231  00A7C4  B681               	btfsc	3969,3,c	;volatile
  9232  00A7C6  D002               	goto	l1848
  9233                           
  9234                           ;Button.c: 88: {
  9235                           ;Button.c: 89: temp +=1;
  9236  00A7C8  0100               	movlb	0	; () banked
  9237  00A7CA  2B69               	incf	ReadCodeButtons@temp& (0+255),f,b
  9238  00A7CC                     l1848:
  9239                           
  9240                           ;Button.c: 90: }
  9241                           ;Button.c: 91: (LATC |= 0x10);
  9242  00A7CC  888B               	bsf	3979,4,c	;volatile
  9243                           
  9244                           ;Button.c: 92: return temp;
  9245  00A7CE  0100               	movlb	0	; () banked
  9246  00A7D0  5169               	movf	ReadCodeButtons@temp& (0+255),w,b
  9247  00A7D2  0012               	return	
  9248                           
  9249                           ; BSR set to: 0
  9250                           
  9251                           ; BSR set to: 0
  9252  00A7D4  0012               	return		;funcret
  9253  00A7D6                     __end_of_ReadCodeButtons:
  9254                           	opt stack 0
  9255                           tblptru	equ	0xFF8
  9256                           tblptrh	equ	0xFF7
  9257                           tblptrl	equ	0xFF6
  9258                           tablat	equ	0xFF5
  9259                           prodh	equ	0xFF4
  9260                           prodl	equ	0xFF3
  9261                           intcon	equ	0xFF2
  9262                           postinc0	equ	0xFEE
  9263                           wreg	equ	0xFE8
  9264                           postdec1	equ	0xFE5
  9265                           fsr1l	equ	0xFE1
  9266                           indf2	equ	0xFDF
  9267                           postinc2	equ	0xFDE
  9268                           fsr2h	equ	0xFDA
  9269                           fsr2l	equ	0xFD9
  9270                           status	equ	0xFD8
  9271                           
  9272 ;; *************** function _UseBluetooth *****************
  9273 ;; Defined at:
  9274 ;;		line 443 in file "Bluetooth.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  String          2  134[BANK0 ] PTR unsigned char 
  9277 ;;		 -> main@BluetoothString(100), 
  9278 ;;  StringPos       1  136[BANK0 ] unsigned char 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;  buf           100    0[BANK2 ] unsigned char [100]
  9281 ;;  rfchannelSTR   10  100[BANK2 ] unsigned char [10]
  9282 ;;  temp            4  133[BANK2 ] unsigned long 
  9283 ;;  EnteredNEC      4  121[BANK2 ] unsigned long 
  9284 ;;  SerialNumber    4  116[BANK2 ] long 
  9285 ;;  tempNec         4  112[BANK2 ] unsigned long 
  9286 ;;  i               1  137[BANK2 ] unsigned char 
  9287 ;;  NecCommand      1  132[BANK2 ] unsigned char 
  9288 ;;  NecAddress      1  131[BANK2 ] unsigned char 
  9289 ;;  j               1  130[BANK2 ] unsigned char 
  9290 ;;  rfconf          1  129[BANK2 ] unsigned char 
  9291 ;;  timeout         1  128[BANK2 ] unsigned char 
  9292 ;;  tempRFArray     1  127[BANK2 ] unsigned char 
  9293 ;;  EmptyPlace      1  126[BANK2 ] unsigned char 
  9294 ;;  ok              1  125[BANK2 ] unsigned char 
  9295 ;;  device          1  120[BANK2 ] unsigned char 
  9296 ;;  ReceivedStri    1  111[BANK2 ] unsigned char 
  9297 ;;  set             1  110[BANK2 ] unsigned char 
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      unsigned char 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9307 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Locals:         0       0       0     138       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Totals:         0      15       0     138       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;Total ram usage:      153 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:   11
  9314 ;; This function calls:
  9315 ;;		_BluetoothInitialSetup
  9316 ;;		_BufferCopy
  9317 ;;		_ClearUSART
  9318 ;;		_DecodeNEC
  9319 ;;		_DisplayRF_Channel
  9320 ;;		_EncodeNEC
  9321 ;;		_GetNumber
  9322 ;;		_GetNumberUnsigned
  9323 ;;		_GetStringAfterComma
  9324 ;;		_IsAlphaNumericString
  9325 ;;		_ReadVoltage
  9326 ;;		_SendNEC_wait
  9327 ;;		_SendRF_Channel
  9328 ;;		_SendRF_wait
  9329 ;;		_SetEEPROM2
  9330 ;;		_StringAddEqual
  9331 ;;		_StringContains
  9332 ;;		_StringContainsCaseInsensitive
  9333 ;;		_StringMatch
  9334 ;;		_StringMatchCaseInsensitive
  9335 ;;		_SyncEEPROMToGlobal
  9336 ;;		_SyncGlobalToEEPROM
  9337 ;;		_UARTchar
  9338 ;;		_UARTchar_CONST
  9339 ;;		_UARTcommandMenu
  9340 ;;		_UARTstring
  9341 ;;		_UARTstringCRLN
  9342 ;;		_UARTstringCRLN_CONST
  9343 ;;		_UARTstring_CONST
  9344 ;;		_WaitForIRsignal
  9345 ;;		_cleanBuffer
  9346 ;;		_delayUS
  9347 ;;		_lowercaseString
  9348 ;;		_sprintf
  9349 ;; This function is called by:
  9350 ;;		_main
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text4
  9355  0001D0                     __ptext4:
  9356                           	opt stack 0
  9357  0001D0                     _UseBluetooth:
  9358                           	opt stack 19
  9359                           
  9360                           ;Bluetooth.c: 445: unsigned char ok = 1;
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;incstack = 0
  9364  0001D0  0E01               	movlw	1
  9365  0001D2  0102               	movlb	2	; () banked
  9366  0001D4  6F7D               	movwf	UseBluetooth@ok& (0+255),b
  9367                           
  9368                           ;Bluetooth.c: 447: unsigned long EnteredNEC = 0;
  9369  0001D6  0E00               	movlw	0
  9370  0001D8  0102               	movlb	2	; () banked
  9371  0001DA  6F79               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  9372  0001DC  0E00               	movlw	0
  9373  0001DE  6F7A               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  9374  0001E0  0E00               	movlw	0
  9375  0001E2  6F7B               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  9376  0001E4  0E00               	movlw	0
  9377  0001E6  6F7C               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  9378                           
  9379                           ;Bluetooth.c: 448: unsigned char NecAddress = 0;
  9380  0001E8  0E00               	movlw	0
  9381  0001EA  0102               	movlb	2	; () banked
  9382  0001EC  6F83               	movwf	UseBluetooth@NecAddress& (0+255),b
  9383                           
  9384                           ;Bluetooth.c: 449: unsigned char NecCommand = 0;
  9385  0001EE  0E00               	movlw	0
  9386  0001F0  0102               	movlb	2	; () banked
  9387  0001F2  6F84               	movwf	UseBluetooth@NecCommand& (0+255),b
  9388                           
  9389                           ;Bluetooth.c: 450: unsigned long temp = 0;
  9390  0001F4  0E00               	movlw	0
  9391  0001F6  0102               	movlb	2	; () banked
  9392  0001F8  6F85               	movwf	UseBluetooth@temp& (0+255),b
  9393  0001FA  0E00               	movlw	0
  9394  0001FC  6F86               	movwf	(UseBluetooth@temp+1)& (0+255),b
  9395  0001FE  0E00               	movlw	0
  9396  000200  6F87               	movwf	(UseBluetooth@temp+2)& (0+255),b
  9397  000202  0E00               	movlw	0
  9398  000204  6F88               	movwf	(UseBluetooth@temp+3)& (0+255),b
  9399                           
  9400                           ;Bluetooth.c: 451: unsigned long tempNec = 0;
  9401  000206  0E00               	movlw	0
  9402  000208  0102               	movlb	2	; () banked
  9403  00020A  6F70               	movwf	UseBluetooth@tempNec& (0+255),b
  9404  00020C  0E00               	movlw	0
  9405  00020E  6F71               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  9406  000210  0E00               	movlw	0
  9407  000212  6F72               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  9408  000214  0E00               	movlw	0
  9409  000216  6F73               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  9410                           
  9411                           ;Bluetooth.c: 452: unsigned char buf[100];
  9412                           ;Bluetooth.c: 453: unsigned char timeout =0;
  9413  000218  0E00               	movlw	0
  9414  00021A  0102               	movlb	2	; () banked
  9415  00021C  6F80               	movwf	UseBluetooth@timeout& (0+255),b
  9416                           
  9417                           ;Bluetooth.c: 454: unsigned char rfchannelSTR[10];
  9418                           ;Bluetooth.c: 455: unsigned char rfconf, i, j, tempRFArray;
  9419                           ;Bluetooth.c: 456: unsigned char device = 0;
  9420  00021E  0E00               	movlw	0
  9421  000220  0102               	movlb	2	; () banked
  9422  000222  6F78               	movwf	UseBluetooth@device& (0+255),b
  9423                           
  9424                           ;Bluetooth.c: 457: unsigned char EmptyPlace = 0;
  9425  000224  0E00               	movlw	0
  9426  000226  0102               	movlb	2	; () banked
  9427  000228  6F7E               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  9428                           
  9429                           ;Bluetooth.c: 458: unsigned char set = 0;
  9430  00022A  0E00               	movlw	0
  9431  00022C  0102               	movlb	2	; () banked
  9432  00022E  6F6E               	movwf	UseBluetooth@set& (0+255),b
  9433                           
  9434                           ;Bluetooth.c: 459: long SerialNumberTEMP = 0;
  9435  000230  0E00               	movlw	0
  9436  000232  0102               	movlb	2	; () banked
  9437  000234  6F74               	movwf	UseBluetooth@SerialNumberTEMP& (0+255),b
  9438  000236  0E00               	movlw	0
  9439  000238  6F75               	movwf	(UseBluetooth@SerialNumberTEMP+1)& (0+255),b
  9440  00023A  0E00               	movlw	0
  9441  00023C  6F76               	movwf	(UseBluetooth@SerialNumberTEMP+2)& (0+255),b
  9442  00023E  0E00               	movlw	0
  9443  000240  6F77               	movwf	(UseBluetooth@SerialNumberTEMP+3)& (0+255),b
  9444                           
  9445                           ;Bluetooth.c: 460: unsigned char ReceivedStringPosOLD = 0;
  9446  000242  0E00               	movlw	0
  9447  000244  0102               	movlb	2	; () banked
  9448  000246  6F6F               	movwf	UseBluetooth@ReceivedStringPosOLD& (0+255),b
  9449                           
  9450                           ; BSR set to: 2
  9451                           ;Bluetooth.c: 462: cleanBuffer(buf,100);
  9452  000248  0E00               	movlw	low UseBluetooth@buf
  9453  00024A  0100               	movlb	0	; () banked
  9454  00024C  6F60               	movwf	cleanBuffer@data& (0+255),b
  9455  00024E  0E02               	movlw	high UseBluetooth@buf
  9456  000250  0100               	movlb	0	; () banked
  9457  000252  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  9458  000254  0E00               	movlw	0
  9459  000256  0100               	movlb	0	; () banked
  9460  000258  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  9461  00025A  0E64               	movlw	100
  9462  00025C  6F62               	movwf	cleanBuffer@count& (0+255),b
  9463  00025E  EC3D  F053         	call	_cleanBuffer	;wreg free
  9464                           
  9465                           ;Bluetooth.c: 463: cleanBuffer(rfchannelSTR,10);
  9466  000262  0E64               	movlw	low UseBluetooth@rfchannelSTR
  9467  000264  0100               	movlb	0	; () banked
  9468  000266  6F60               	movwf	cleanBuffer@data& (0+255),b
  9469  000268  0E02               	movlw	high UseBluetooth@rfchannelSTR
  9470  00026A  0100               	movlb	0	; () banked
  9471  00026C  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
  9472  00026E  0E00               	movlw	0
  9473  000270  0100               	movlb	0	; () banked
  9474  000272  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
  9475  000274  0E0A               	movlw	10
  9476  000276  6F62               	movwf	cleanBuffer@count& (0+255),b
  9477  000278  EC3D  F053         	call	_cleanBuffer	;wreg free
  9478                           
  9479                           ;Bluetooth.c: 465: if(StringMatchCaseInsensitive(String,"Rf All"))
  9480  00027C  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9481  000280  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9482  000284  0E9A               	movlw	low STR_22
  9483  000286  0100               	movlb	0	; () banked
  9484  000288  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9485  00028A  0EFF               	movlw	high STR_22
  9486  00028C  0100               	movlb	0	; () banked
  9487  00028E  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9488  000290  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9489  000294  0900               	iorlw	0
  9490  000296  B4D8               	btfsc	status,2,c
  9491  000298  D029               	goto	l12762
  9492                           
  9493                           ;Bluetooth.c: 466: {
  9494                           ;Bluetooth.c: 467: for(i=0; i < 8; i++)
  9495  00029A  0E00               	movlw	0
  9496  00029C  0102               	movlb	2	; () banked
  9497  00029E  6F89               	movwf	UseBluetooth@i& (0+255),b
  9498                           
  9499                           ; BSR set to: 2
  9500  0002A0  0E07               	movlw	7
  9501  0002A2  0102               	movlb	2	; () banked
  9502  0002A4  6589               	cpfsgt	UseBluetooth@i& (0+255),b
  9503  0002A6  D002               	goto	l12748
  9504  0002A8  0012               	return	
  9505                           
  9506                           ; BSR set to: 2
  9507  0002AA  0012               	return	
  9508  0002AC                     l12748:
  9509                           
  9510                           ; BSR set to: 2
  9511                           ;Bluetooth.c: 468: {
  9512                           ;Bluetooth.c: 469: SendRF_Channel(i);
  9513  0002AC  0102               	movlb	2	; () banked
  9514  0002AE  5189               	movf	UseBluetooth@i& (0+255),w,b
  9515  0002B0  ECD8  F037         	call	_SendRF_Channel
  9516                           
  9517                           ;Bluetooth.c: 470: UARTstring_CONST("Sent ");
  9518  0002B4  0EB5               	movlw	low STR_23
  9519  0002B6  0100               	movlb	0	; () banked
  9520  0002B8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  9521  0002BA  0EFF               	movlw	high STR_23
  9522  0002BC  0100               	movlb	0	; () banked
  9523  0002BE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9524  0002C0  EC98  F055         	call	_UARTstring_CONST	;wreg free
  9525                           
  9526                           ;Bluetooth.c: 471: DisplayRF_Channel(i);
  9527  0002C4  0102               	movlb	2	; () banked
  9528  0002C6  5189               	movf	UseBluetooth@i& (0+255),w,b
  9529  0002C8  EC75  F04B         	call	_DisplayRF_Channel
  9530                           
  9531                           ;Bluetooth.c: 472: UARTstring_CONST(CRLN);
  9532  0002CC  0E5E               	movlw	low _CRLN
  9533  0002CE  0100               	movlb	0	; () banked
  9534  0002D0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  9535  0002D2  0EEF               	movlw	high _CRLN
  9536  0002D4  0100               	movlb	0	; () banked
  9537  0002D6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9538  0002D8  EC98  F055         	call	_UARTstring_CONST	;wreg free
  9539  0002DC  0102               	movlb	2	; () banked
  9540  0002DE  2B89               	incf	UseBluetooth@i& (0+255),f,b
  9541                           
  9542                           ; BSR set to: 2
  9543  0002E0  0E07               	movlw	7
  9544  0002E2  0102               	movlb	2	; () banked
  9545  0002E4  6589               	cpfsgt	UseBluetooth@i& (0+255),b
  9546  0002E6  D7E2               	goto	l12748
  9547  0002E8  0012               	return	
  9548                           
  9549                           ; BSR set to: 2
  9550                           ;Bluetooth.c: 475: }
  9551                           
  9552                           ; BSR set to: 2
  9553                           ;Bluetooth.c: 473: }
  9554                           ;Bluetooth.c: 474: return 1;
  9555                           ;	Return value of _UseBluetooth is never used
  9556  0002EA  0012               	return	
  9557  0002EC                     l12762:
  9558                           
  9559                           ;Bluetooth.c: 476: else if(StringContainsCaseInsensitive(String,"Conf1"))
  9560  0002EC  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9561  0002F0  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9562  0002F4  0EBB               	movlw	low STR_24
  9563  0002F6  0100               	movlb	0	; () banked
  9564  0002F8  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9565  0002FA  0EFF               	movlw	high STR_24
  9566  0002FC  0100               	movlb	0	; () banked
  9567  0002FE  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9568  000300  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
  9569  000304  0900               	iorlw	0
  9570  000306  B4D8               	btfsc	status,2,c
  9571  000308  D07E               	goto	l12786
  9572                           
  9573                           ;Bluetooth.c: 477: {
  9574                           ;Bluetooth.c: 478: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  9575  00030A  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9576  00030E  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9577  000312  0EC7               	movlw	low _Conf1_ChannelD_STR
  9578  000314  0100               	movlb	0	; () banked
  9579  000316  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9580  000318  0EEE               	movlw	high _Conf1_ChannelD_STR
  9581  00031A  0100               	movlb	0	; () banked
  9582  00031C  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9583  00031E  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9584  000322  0900               	iorlw	0
  9585  000324  B4D8               	btfsc	status,2,c
  9586  000326  D012               	goto	l12768
  9587                           
  9588                           ;Bluetooth.c: 479: {
  9589                           ;Bluetooth.c: 481: SendRF_wait(Conf1_ChannelD,1,12,8);
  9590  000328  0E20               	movlw	low _Conf1_ChannelD
  9591  00032A  0100               	movlb	0	; () banked
  9592  00032C  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9593  00032E  0EEF               	movlw	high _Conf1_ChannelD
  9594  000330  0100               	movlb	0	; () banked
  9595  000332  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9596  000334  0E01               	movlw	1
  9597  000336  0100               	movlb	0	; () banked
  9598  000338  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9599  00033A  0E0C               	movlw	12
  9600  00033C  0100               	movlb	0	; () banked
  9601  00033E  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9602  000340  0E08               	movlw	8
  9603  000342  0100               	movlb	0	; () banked
  9604  000344  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9605  000346  ECBD  F054         	call	_SendRF_wait	;wreg free
  9606                           
  9607                           ;Bluetooth.c: 482: }
  9608  00034A  D054               	goto	l12780
  9609  00034C                     l12768:
  9610                           
  9611                           ;Bluetooth.c: 483: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  9612  00034C  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9613  000350  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9614  000354  0ED6               	movlw	low _Conf1_ChannelE_STR
  9615  000356  0100               	movlb	0	; () banked
  9616  000358  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9617  00035A  0EEE               	movlw	high _Conf1_ChannelE_STR
  9618  00035C  0100               	movlb	0	; () banked
  9619  00035E  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9620  000360  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9621  000364  0900               	iorlw	0
  9622  000366  B4D8               	btfsc	status,2,c
  9623  000368  D012               	goto	l12772
  9624                           
  9625                           ;Bluetooth.c: 484: {
  9626                           ;Bluetooth.c: 486: SendRF_wait(Conf1_ChannelE,1,12,8);
  9627  00036A  0E2C               	movlw	low _Conf1_ChannelE
  9628  00036C  0100               	movlb	0	; () banked
  9629  00036E  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9630  000370  0EEF               	movlw	high _Conf1_ChannelE
  9631  000372  0100               	movlb	0	; () banked
  9632  000374  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9633  000376  0E01               	movlw	1
  9634  000378  0100               	movlb	0	; () banked
  9635  00037A  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9636  00037C  0E0C               	movlw	12
  9637  00037E  0100               	movlb	0	; () banked
  9638  000380  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9639  000382  0E08               	movlw	8
  9640  000384  0100               	movlb	0	; () banked
  9641  000386  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9642  000388  ECBD  F054         	call	_SendRF_wait	;wreg free
  9643                           
  9644                           ;Bluetooth.c: 487: }
  9645  00038C  D033               	goto	l12780
  9646  00038E                     l12772:
  9647                           
  9648                           ;Bluetooth.c: 488: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  9649  00038E  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9650  000392  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9651  000396  0EE5               	movlw	low _Conf1_ChannelF_STR
  9652  000398  0100               	movlb	0	; () banked
  9653  00039A  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9654  00039C  0EEE               	movlw	high _Conf1_ChannelF_STR
  9655  00039E  0100               	movlb	0	; () banked
  9656  0003A0  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9657  0003A2  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9658  0003A6  0900               	iorlw	0
  9659  0003A8  B4D8               	btfsc	status,2,c
  9660  0003AA  D012               	goto	l12776
  9661                           
  9662                           ;Bluetooth.c: 489: {
  9663                           ;Bluetooth.c: 491: SendRF_wait(Conf1_ChannelF,1,12,8);
  9664  0003AC  0E38               	movlw	low _Conf1_ChannelF
  9665  0003AE  0100               	movlb	0	; () banked
  9666  0003B0  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9667  0003B2  0EEF               	movlw	high _Conf1_ChannelF
  9668  0003B4  0100               	movlb	0	; () banked
  9669  0003B6  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9670  0003B8  0E01               	movlw	1
  9671  0003BA  0100               	movlb	0	; () banked
  9672  0003BC  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9673  0003BE  0E0C               	movlw	12
  9674  0003C0  0100               	movlb	0	; () banked
  9675  0003C2  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9676  0003C4  0E08               	movlw	8
  9677  0003C6  0100               	movlb	0	; () banked
  9678  0003C8  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9679  0003CA  ECBD  F054         	call	_SendRF_wait	;wreg free
  9680                           
  9681                           ;Bluetooth.c: 492: }
  9682  0003CE  D012               	goto	l12780
  9683  0003D0                     l12776:
  9684                           
  9685                           ;Bluetooth.c: 493: else
  9686                           ;Bluetooth.c: 494: {
  9687                           ;Bluetooth.c: 496: UARTstring_CONST(SYNTAX_ERR);
  9688  0003D0  0E12               	movlw	low _SYNTAX_ERR
  9689  0003D2  0100               	movlb	0	; () banked
  9690  0003D4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  9691  0003D6  0EEF               	movlw	high _SYNTAX_ERR
  9692  0003D8  0100               	movlb	0	; () banked
  9693  0003DA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9694  0003DC  EC98  F055         	call	_UARTstring_CONST	;wreg free
  9695                           
  9696                           ;Bluetooth.c: 497: UARTstring_CONST(CRLN);
  9697  0003E0  0E5E               	movlw	low _CRLN
  9698  0003E2  0100               	movlb	0	; () banked
  9699  0003E4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
  9700  0003E6  0EEF               	movlw	high _CRLN
  9701  0003E8  0100               	movlb	0	; () banked
  9702  0003EA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9703  0003EC  EC98  F055         	call	_UARTstring_CONST	;wreg free
  9704                           
  9705                           ;Bluetooth.c: 498: return 0;
  9706                           ;	Return value of _UseBluetooth is never used
  9707  0003F0  0012               	return	
  9708  0003F2  D000               	goto	l12780
  9709  0003F4                     l12780:
  9710                           
  9711                           ;Bluetooth.c: 499: }
  9712                           ;Bluetooth.c: 500: UARTstringCRLN_CONST("Configuration 1 RF code sent");
  9713  0003F4  0E06               	movlw	low STR_25
  9714  0003F6  0100               	movlb	0	; () banked
  9715  0003F8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9716  0003FA  0EFA               	movlw	high STR_25
  9717  0003FC  0100               	movlb	0	; () banked
  9718  0003FE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9719  000400  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
  9720                           
  9721                           ;Bluetooth.c: 502: }
  9722                           
  9723                           ;Bluetooth.c: 501: return 1;
  9724                           ;	Return value of _UseBluetooth is never used
  9725  000404  0012               	return	
  9726  000406                     l12786:
  9727                           
  9728                           ;Bluetooth.c: 503: else if(StringContainsCaseInsensitive(String,"Conf2"))
  9729  000406  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9730  00040A  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9731  00040E  0EC1               	movlw	low STR_26
  9732  000410  0100               	movlb	0	; () banked
  9733  000412  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9734  000414  0EFF               	movlw	high STR_26
  9735  000416  0100               	movlb	0	; () banked
  9736  000418  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9737  00041A  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
  9738  00041E  0900               	iorlw	0
  9739  000420  B4D8               	btfsc	status,2,c
  9740  000422  D165               	goto	l12838
  9741                           
  9742                           ;Bluetooth.c: 504: {
  9743                           ;Bluetooth.c: 505: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  9744  000424  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9745  000428  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9746  00042C  0ED0               	movlw	low _Conf2_ChannelB_ON_STR
  9747  00042E  0100               	movlb	0	; () banked
  9748  000430  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9749  000432  0EED               	movlw	high _Conf2_ChannelB_ON_STR
  9750  000434  0100               	movlb	0	; () banked
  9751  000436  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9752  000438  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9753  00043C  0900               	iorlw	0
  9754  00043E  B4D8               	btfsc	status,2,c
  9755  000440  D012               	goto	l12792
  9756                           
  9757                           ;Bluetooth.c: 506: {
  9758                           ;Bluetooth.c: 508: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  9759  000442  0E37               	movlw	low _Conf2_ChannelB_ON
  9760  000444  0100               	movlb	0	; () banked
  9761  000446  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9762  000448  0EEE               	movlw	high _Conf2_ChannelB_ON
  9763  00044A  0100               	movlb	0	; () banked
  9764  00044C  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9765  00044E  0E02               	movlw	2
  9766  000450  0100               	movlb	0	; () banked
  9767  000452  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9768  000454  0E10               	movlw	16
  9769  000456  0100               	movlb	0	; () banked
  9770  000458  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9771  00045A  0E08               	movlw	8
  9772  00045C  0100               	movlb	0	; () banked
  9773  00045E  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9774  000460  ECBD  F054         	call	_SendRF_wait	;wreg free
  9775                           
  9776                           ;Bluetooth.c: 509: }
  9777  000464  D13B               	goto	l12832
  9778  000466                     l12792:
  9779                           
  9780                           ;Bluetooth.c: 510: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  9781  000466  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9782  00046A  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9783  00046E  0EAA               	movlw	low _Conf2_ChannelB_OFF_STR
  9784  000470  0100               	movlb	0	; () banked
  9785  000472  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9786  000474  0EED               	movlw	high _Conf2_ChannelB_OFF_STR
  9787  000476  0100               	movlb	0	; () banked
  9788  000478  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9789  00047A  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9790  00047E  0900               	iorlw	0
  9791  000480  B4D8               	btfsc	status,2,c
  9792  000482  D012               	goto	l12796
  9793                           
  9794                           ;Bluetooth.c: 511: {
  9795                           ;Bluetooth.c: 513: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  9796  000484  0E27               	movlw	low _Conf2_ChannelB_OFF
  9797  000486  0100               	movlb	0	; () banked
  9798  000488  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9799  00048A  0EEE               	movlw	high _Conf2_ChannelB_OFF
  9800  00048C  0100               	movlb	0	; () banked
  9801  00048E  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9802  000490  0E02               	movlw	2
  9803  000492  0100               	movlb	0	; () banked
  9804  000494  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9805  000496  0E10               	movlw	16
  9806  000498  0100               	movlb	0	; () banked
  9807  00049A  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9808  00049C  0E08               	movlw	8
  9809  00049E  0100               	movlb	0	; () banked
  9810  0004A0  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9811  0004A2  ECBD  F054         	call	_SendRF_wait	;wreg free
  9812                           
  9813                           ;Bluetooth.c: 514: }
  9814  0004A6  D11A               	goto	l12832
  9815  0004A8                     l12796:
  9816                           
  9817                           ;Bluetooth.c: 515: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  9818  0004A8  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9819  0004AC  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9820  0004B0  0EE2               	movlw	low _Conf2_ChannelD_ON_STR
  9821  0004B2  0100               	movlb	0	; () banked
  9822  0004B4  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9823  0004B6  0EED               	movlw	high _Conf2_ChannelD_ON_STR
  9824  0004B8  0100               	movlb	0	; () banked
  9825  0004BA  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9826  0004BC  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9827  0004C0  0900               	iorlw	0
  9828  0004C2  B4D8               	btfsc	status,2,c
  9829  0004C4  D012               	goto	l12800
  9830                           
  9831                           ;Bluetooth.c: 516: {
  9832                           ;Bluetooth.c: 518: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  9833  0004C6  0E57               	movlw	low _Conf2_ChannelD_ON
  9834  0004C8  0100               	movlb	0	; () banked
  9835  0004CA  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9836  0004CC  0EEE               	movlw	high _Conf2_ChannelD_ON
  9837  0004CE  0100               	movlb	0	; () banked
  9838  0004D0  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9839  0004D2  0E02               	movlw	2
  9840  0004D4  0100               	movlb	0	; () banked
  9841  0004D6  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9842  0004D8  0E10               	movlw	16
  9843  0004DA  0100               	movlb	0	; () banked
  9844  0004DC  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9845  0004DE  0E08               	movlw	8
  9846  0004E0  0100               	movlb	0	; () banked
  9847  0004E2  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9848  0004E4  ECBD  F054         	call	_SendRF_wait	;wreg free
  9849                           
  9850                           ;Bluetooth.c: 519: }
  9851  0004E8  D0F9               	goto	l12832
  9852  0004EA                     l12800:
  9853                           
  9854                           ;Bluetooth.c: 520: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  9855  0004EA  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9856  0004EE  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9857  0004F2  0EBD               	movlw	low _Conf2_ChannelD_OFF_STR
  9858  0004F4  0100               	movlb	0	; () banked
  9859  0004F6  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9860  0004F8  0EED               	movlw	high _Conf2_ChannelD_OFF_STR
  9861  0004FA  0100               	movlb	0	; () banked
  9862  0004FC  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9863  0004FE  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9864  000502  0900               	iorlw	0
  9865  000504  B4D8               	btfsc	status,2,c
  9866  000506  D012               	goto	l12804
  9867                           
  9868                           ;Bluetooth.c: 521: {
  9869                           ;Bluetooth.c: 523: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  9870  000508  0E47               	movlw	low _Conf2_ChannelD_OFF
  9871  00050A  0100               	movlb	0	; () banked
  9872  00050C  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9873  00050E  0EEE               	movlw	high _Conf2_ChannelD_OFF
  9874  000510  0100               	movlb	0	; () banked
  9875  000512  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9876  000514  0E02               	movlw	2
  9877  000516  0100               	movlb	0	; () banked
  9878  000518  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9879  00051A  0E10               	movlw	16
  9880  00051C  0100               	movlb	0	; () banked
  9881  00051E  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9882  000520  0E08               	movlw	8
  9883  000522  0100               	movlb	0	; () banked
  9884  000524  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9885  000526  ECBD  F054         	call	_SendRF_wait	;wreg free
  9886                           
  9887                           ;Bluetooth.c: 524: }
  9888  00052A  D0D8               	goto	l12832
  9889  00052C                     l12804:
  9890                           
  9891                           ;Bluetooth.c: 525: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  9892  00052C  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9893  000530  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9894  000534  0E6E               	movlw	low _Conf2_ChannelH_1_ON_STR
  9895  000536  0100               	movlb	0	; () banked
  9896  000538  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9897  00053A  0EED               	movlw	high _Conf2_ChannelH_1_ON_STR
  9898  00053C  0100               	movlb	0	; () banked
  9899  00053E  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9900  000540  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9901  000544  0900               	iorlw	0
  9902  000546  B4D8               	btfsc	status,2,c
  9903  000548  D012               	goto	l12808
  9904                           
  9905                           ;Bluetooth.c: 526: {
  9906                           ;Bluetooth.c: 528: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  9907  00054A  0E77               	movlw	low _Conf2_ChannelH_1_ON
  9908  00054C  0100               	movlb	0	; () banked
  9909  00054E  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9910  000550  0EEE               	movlw	high _Conf2_ChannelH_1_ON
  9911  000552  0100               	movlb	0	; () banked
  9912  000554  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9913  000556  0E02               	movlw	2
  9914  000558  0100               	movlb	0	; () banked
  9915  00055A  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9916  00055C  0E10               	movlw	16
  9917  00055E  0100               	movlb	0	; () banked
  9918  000560  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9919  000562  0E08               	movlw	8
  9920  000564  0100               	movlb	0	; () banked
  9921  000566  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9922  000568  ECBD  F054         	call	_SendRF_wait	;wreg free
  9923                           
  9924                           ;Bluetooth.c: 529: }
  9925  00056C  D0B7               	goto	l12832
  9926  00056E                     l12808:
  9927                           
  9928                           ;Bluetooth.c: 530: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  9929  00056E  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9930  000572  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9931  000576  0E2F               	movlw	low _Conf2_ChannelH_1_OFF_STR
  9932  000578  0100               	movlb	0	; () banked
  9933  00057A  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9934  00057C  0EED               	movlw	high _Conf2_ChannelH_1_OFF_STR
  9935  00057E  0100               	movlb	0	; () banked
  9936  000580  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9937  000582  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9938  000586  0900               	iorlw	0
  9939  000588  B4D8               	btfsc	status,2,c
  9940  00058A  D012               	goto	l12812
  9941                           
  9942                           ;Bluetooth.c: 531: {
  9943                           ;Bluetooth.c: 533: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  9944  00058C  0E67               	movlw	low _Conf2_ChannelH_1_OFF
  9945  00058E  0100               	movlb	0	; () banked
  9946  000590  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9947  000592  0EEE               	movlw	high _Conf2_ChannelH_1_OFF
  9948  000594  0100               	movlb	0	; () banked
  9949  000596  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9950  000598  0E02               	movlw	2
  9951  00059A  0100               	movlb	0	; () banked
  9952  00059C  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9953  00059E  0E10               	movlw	16
  9954  0005A0  0100               	movlb	0	; () banked
  9955  0005A2  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9956  0005A4  0E08               	movlw	8
  9957  0005A6  0100               	movlb	0	; () banked
  9958  0005A8  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9959  0005AA  ECBD  F054         	call	_SendRF_wait	;wreg free
  9960                           
  9961                           ;Bluetooth.c: 534: }
  9962  0005AE  D096               	goto	l12832
  9963  0005B0                     l12812:
  9964                           
  9965                           ;Bluetooth.c: 535: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  9966  0005B0  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9967  0005B4  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9968  0005B8  0E82               	movlw	low _Conf2_ChannelH_2_ON_STR
  9969  0005BA  0100               	movlb	0	; () banked
  9970  0005BC  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9971  0005BE  0EED               	movlw	high _Conf2_ChannelH_2_ON_STR
  9972  0005C0  0100               	movlb	0	; () banked
  9973  0005C2  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9974  0005C4  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
  9975  0005C8  0900               	iorlw	0
  9976  0005CA  B4D8               	btfsc	status,2,c
  9977  0005CC  D012               	goto	l12816
  9978                           
  9979                           ;Bluetooth.c: 536: {
  9980                           ;Bluetooth.c: 538: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  9981  0005CE  0E97               	movlw	low _Conf2_ChannelH_2_ON
  9982  0005D0  0100               	movlb	0	; () banked
  9983  0005D2  6F68               	movwf	SendRF_wait@Code& (0+255),b
  9984  0005D4  0EEE               	movlw	high _Conf2_ChannelH_2_ON
  9985  0005D6  0100               	movlb	0	; () banked
  9986  0005D8  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9987  0005DA  0E02               	movlw	2
  9988  0005DC  0100               	movlb	0	; () banked
  9989  0005DE  6F6A               	movwf	SendRF_wait@Config& (0+255),b
  9990  0005E0  0E10               	movlw	16
  9991  0005E2  0100               	movlb	0	; () banked
  9992  0005E4  6F6B               	movwf	SendRF_wait@size& (0+255),b
  9993  0005E6  0E08               	movlw	8
  9994  0005E8  0100               	movlb	0	; () banked
  9995  0005EA  6F6C               	movwf	SendRF_wait@amount& (0+255),b
  9996  0005EC  ECBD  F054         	call	_SendRF_wait	;wreg free
  9997                           
  9998                           ;Bluetooth.c: 539: }
  9999  0005F0  D075               	goto	l12832
 10000  0005F2                     l12816:
 10001                           
 10002                           ;Bluetooth.c: 540: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
 10003  0005F2  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10004  0005F6  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10005  0005FA  0E44               	movlw	low _Conf2_ChannelH_2_OFF_STR
 10006  0005FC  0100               	movlb	0	; () banked
 10007  0005FE  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10008  000600  0EED               	movlw	high _Conf2_ChannelH_2_OFF_STR
 10009  000602  0100               	movlb	0	; () banked
 10010  000604  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10011  000606  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 10012  00060A  0900               	iorlw	0
 10013  00060C  B4D8               	btfsc	status,2,c
 10014  00060E  D012               	goto	l12820
 10015                           
 10016                           ;Bluetooth.c: 541: {
 10017                           ;Bluetooth.c: 543: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
 10018  000610  0E87               	movlw	low _Conf2_ChannelH_2_OFF
 10019  000612  0100               	movlb	0	; () banked
 10020  000614  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10021  000616  0EEE               	movlw	high _Conf2_ChannelH_2_OFF
 10022  000618  0100               	movlb	0	; () banked
 10023  00061A  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10024  00061C  0E02               	movlw	2
 10025  00061E  0100               	movlb	0	; () banked
 10026  000620  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10027  000622  0E10               	movlw	16
 10028  000624  0100               	movlb	0	; () banked
 10029  000626  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10030  000628  0E08               	movlw	8
 10031  00062A  0100               	movlb	0	; () banked
 10032  00062C  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10033  00062E  ECBD  F054         	call	_SendRF_wait	;wreg free
 10034                           
 10035                           ;Bluetooth.c: 544: }
 10036  000632  D054               	goto	l12832
 10037  000634                     l12820:
 10038                           
 10039                           ;Bluetooth.c: 545: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
 10040  000634  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10041  000638  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10042  00063C  0E96               	movlw	low _Conf2_ChannelH_3_ON_STR
 10043  00063E  0100               	movlb	0	; () banked
 10044  000640  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10045  000642  0EED               	movlw	high _Conf2_ChannelH_3_ON_STR
 10046  000644  0100               	movlb	0	; () banked
 10047  000646  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10048  000648  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 10049  00064C  0900               	iorlw	0
 10050  00064E  B4D8               	btfsc	status,2,c
 10051  000650  D012               	goto	l12824
 10052                           
 10053                           ;Bluetooth.c: 546: {
 10054                           ;Bluetooth.c: 548: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
 10055  000652  0EB7               	movlw	low _Conf2_ChannelH_3_ON
 10056  000654  0100               	movlb	0	; () banked
 10057  000656  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10058  000658  0EEE               	movlw	high _Conf2_ChannelH_3_ON
 10059  00065A  0100               	movlb	0	; () banked
 10060  00065C  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10061  00065E  0E02               	movlw	2
 10062  000660  0100               	movlb	0	; () banked
 10063  000662  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10064  000664  0E10               	movlw	16
 10065  000666  0100               	movlb	0	; () banked
 10066  000668  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10067  00066A  0E08               	movlw	8
 10068  00066C  0100               	movlb	0	; () banked
 10069  00066E  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10070  000670  ECBD  F054         	call	_SendRF_wait	;wreg free
 10071                           
 10072                           ;Bluetooth.c: 549: }
 10073  000674  D033               	goto	l12832
 10074  000676                     l12824:
 10075                           
 10076                           ;Bluetooth.c: 550: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
 10077  000676  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 10078  00067A  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 10079  00067E  0E59               	movlw	low _Conf2_ChannelH_3_OFF_STR
 10080  000680  0100               	movlb	0	; () banked
 10081  000682  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 10082  000684  0EED               	movlw	high _Conf2_ChannelH_3_OFF_STR
 10083  000686  0100               	movlb	0	; () banked
 10084  000688  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 10085  00068A  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 10086  00068E  0900               	iorlw	0
 10087  000690  B4D8               	btfsc	status,2,c
 10088  000692  D012               	goto	l12828
 10089                           
 10090                           ;Bluetooth.c: 551: {
 10091                           ;Bluetooth.c: 553: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
 10092  000694  0E87               	movlw	low _Conf2_ChannelH_2_OFF
 10093  000696  0100               	movlb	0	; () banked
 10094  000698  6F68               	movwf	SendRF_wait@Code& (0+255),b
 10095  00069A  0EEE               	movlw	high _Conf2_ChannelH_2_OFF
 10096  00069C  0100               	movlb	0	; () banked
 10097  00069E  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 10098  0006A0  0E03               	movlw	3
 10099  0006A2  0100               	movlb	0	; () banked
 10100  0006A4  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 10101  0006A6  0E10               	movlw	16
 10102  0006A8  0100               	movlb	0	; () banked
 10103  0006AA  6F6B               	movwf	SendRF_wait@size& (0+255),b
 10104  0006AC  0E08               	movlw	8
 10105  0006AE  0100               	movlb	0	; () banked
 10106  0006B0  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 10107  0006B2  ECBD  F054         	call	_SendRF_wait	;wreg free
 10108                           
 10109                           ;Bluetooth.c: 554: }
 10110  0006B6  D012               	goto	l12832
 10111  0006B8                     l12828:
 10112                           
 10113                           ;Bluetooth.c: 555: else
 10114                           ;Bluetooth.c: 556: {
 10115                           ;Bluetooth.c: 558: UARTstring_CONST(SYNTAX_ERR);
 10116  0006B8  0E12               	movlw	low _SYNTAX_ERR
 10117  0006BA  0100               	movlb	0	; () banked
 10118  0006BC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10119  0006BE  0EEF               	movlw	high _SYNTAX_ERR
 10120  0006C0  0100               	movlb	0	; () banked
 10121  0006C2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10122  0006C4  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10123                           
 10124                           ;Bluetooth.c: 559: UARTstring_CONST(CRLN);
 10125  0006C8  0E5E               	movlw	low _CRLN
 10126  0006CA  0100               	movlb	0	; () banked
 10127  0006CC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10128  0006CE  0EEF               	movlw	high _CRLN
 10129  0006D0  0100               	movlb	0	; () banked
 10130  0006D2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10131  0006D4  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10132                           
 10133                           ;Bluetooth.c: 560: return 0;
 10134                           ;	Return value of _UseBluetooth is never used
 10135  0006D8  0012               	return	
 10136  0006DA  D000               	goto	l12832
 10137  0006DC                     l12832:
 10138                           
 10139                           ;Bluetooth.c: 561: }
 10140                           ;Bluetooth.c: 562: UARTstringCRLN_CONST("Configuration 2 RF code sent");
 10141  0006DC  0E23               	movlw	low STR_27
 10142  0006DE  0100               	movlb	0	; () banked
 10143  0006E0  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10144  0006E2  0EFA               	movlw	high STR_27
 10145  0006E4  0100               	movlb	0	; () banked
 10146  0006E6  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10147  0006E8  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10148                           
 10149                           ;Bluetooth.c: 564: }
 10150                           
 10151                           ;Bluetooth.c: 563: return 1;
 10152                           ;	Return value of _UseBluetooth is never used
 10153  0006EC  0012               	return	
 10154  0006EE                     l12838:
 10155                           
 10156                           ;Bluetooth.c: 565: else if(StringContainsCaseInsensitive(String,"NEC"))
 10157  0006EE  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10158  0006F2  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10159  0006F6  0EE9               	movlw	low STR_28
 10160  0006F8  0100               	movlb	0	; () banked
 10161  0006FA  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10162  0006FC  0EFF               	movlw	high STR_28
 10163  0006FE  0100               	movlb	0	; () banked
 10164  000700  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10165  000702  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 10166  000706  0900               	iorlw	0
 10167  000708  B4D8               	btfsc	status,2,c
 10168  00070A  D200               	goto	l12912
 10169                           
 10170                           ;Bluetooth.c: 566: {
 10171                           ;Bluetooth.c: 567: if(!GetNumberUnsigned(String, 2, &temp))
 10172  00070C  C0E6  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10173  000710  C0E7  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10174  000714  0E02               	movlw	2
 10175  000716  0100               	movlb	0	; () banked
 10176  000718  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10177  00071A  0E85               	movlw	low UseBluetooth@temp
 10178  00071C  0100               	movlb	0	; () banked
 10179  00071E  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10180  000720  0E02               	movlw	high UseBluetooth@temp
 10181  000722  0100               	movlb	0	; () banked
 10182  000724  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10183  000726  ECA7  F032         	call	_GetNumberUnsigned	;wreg free
 10184  00072A  0900               	iorlw	0
 10185  00072C  A4D8               	btfss	status,2,c
 10186  00072E  D0D1               	goto	l12880
 10187                           
 10188                           ;Bluetooth.c: 568: {
 10189                           ;Bluetooth.c: 569: if(temp > 0xFF)
 10190  000730  0102               	movlb	2	; () banked
 10191  000732  5188               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10192  000734  0102               	movlb	2	; () banked
 10193  000736  1187               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10194  000738  E104               	bnz	u14430
 10195  00073A  0102               	movlb	2	; () banked
 10196  00073C  0586               	decf	(UseBluetooth@temp+1)& (0+255),w,b
 10197  00073E  A0D8               	btfss	status,0,c
 10198  000740  D011               	goto	l2149
 10199  000742                     u14430:
 10200                           
 10201                           ; BSR set to: 2
 10202                           ;Bluetooth.c: 570: {
 10203                           ;Bluetooth.c: 571: UARTstringCRLN_CONST("Error: Command larger that 255");
 10204  000742  0EF1               	movlw	low STR_29
 10205  000744  0100               	movlb	0	; () banked
 10206  000746  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10207  000748  0EF8               	movlw	high STR_29
 10208  00074A  0100               	movlb	0	; () banked
 10209  00074C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10210  00074E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10211                           
 10212                           ;Bluetooth.c: 572: UARTstring_CONST(CRLN);
 10213  000752  0E5E               	movlw	low _CRLN
 10214  000754  0100               	movlb	0	; () banked
 10215  000756  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10216  000758  0EEF               	movlw	high _CRLN
 10217  00075A  0100               	movlb	0	; () banked
 10218  00075C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10219  00075E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10220                           
 10221                           ;Bluetooth.c: 573: return 0;
 10222                           ;	Return value of _UseBluetooth is never used
 10223  000762  0012               	return	
 10224  000764                     l2149:
 10225                           
 10226                           ; BSR set to: 2
 10227                           ;Bluetooth.c: 574: }
 10228                           ;Bluetooth.c: 575: NecCommand = (unsigned char)temp;
 10229  000764  C285  F284         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
 10230                           
 10231                           ; BSR set to: 2
 10232                           ;Bluetooth.c: 576: if(!GetNumberUnsigned(String, 1, &temp))
 10233  000768  C0E6  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10234  00076C  C0E7  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10235  000770  0E01               	movlw	1
 10236  000772  0100               	movlb	0	; () banked
 10237  000774  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10238  000776  0E85               	movlw	low UseBluetooth@temp
 10239  000778  0100               	movlb	0	; () banked
 10240  00077A  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10241  00077C  0E02               	movlw	high UseBluetooth@temp
 10242  00077E  0100               	movlb	0	; () banked
 10243  000780  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10244  000782  ECA7  F032         	call	_GetNumberUnsigned	;wreg free
 10245  000786  0900               	iorlw	0
 10246  000788  A4D8               	btfss	status,2,c
 10247  00078A  D092               	goto	l12876
 10248                           
 10249                           ;Bluetooth.c: 577: {
 10250                           ;Bluetooth.c: 578: if(temp > 0xFF)
 10251  00078C  0102               	movlb	2	; () banked
 10252  00078E  5188               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10253  000790  0102               	movlb	2	; () banked
 10254  000792  1187               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10255  000794  E104               	bnz	u14450
 10256  000796  0102               	movlb	2	; () banked
 10257  000798  0586               	decf	(UseBluetooth@temp+1)& (0+255),w,b
 10258  00079A  A0D8               	btfss	status,0,c
 10259  00079C  D011               	goto	l2151
 10260  00079E                     u14450:
 10261                           
 10262                           ; BSR set to: 2
 10263                           ;Bluetooth.c: 579: {
 10264                           ;Bluetooth.c: 580: UARTstringCRLN_CONST("Error: Address larger that 255");
 10265  00079E  0E10               	movlw	low STR_30
 10266  0007A0  0100               	movlb	0	; () banked
 10267  0007A2  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10268  0007A4  0EF9               	movlw	high STR_30
 10269  0007A6  0100               	movlb	0	; () banked
 10270  0007A8  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10271  0007AA  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10272                           
 10273                           ;Bluetooth.c: 581: UARTstring_CONST(CRLN);
 10274  0007AE  0E5E               	movlw	low _CRLN
 10275  0007B0  0100               	movlb	0	; () banked
 10276  0007B2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10277  0007B4  0EEF               	movlw	high _CRLN
 10278  0007B6  0100               	movlb	0	; () banked
 10279  0007B8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10280  0007BA  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10281                           
 10282                           ;Bluetooth.c: 582: return 0;
 10283                           ;	Return value of _UseBluetooth is never used
 10284  0007BE  0012               	return	
 10285  0007C0                     l2151:
 10286                           
 10287                           ; BSR set to: 2
 10288                           ;Bluetooth.c: 583: }
 10289                           ;Bluetooth.c: 584: NecAddress = (unsigned char) temp;
 10290  0007C0  C285  F283         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
 10291                           
 10292                           ; BSR set to: 2
 10293                           ;Bluetooth.c: 585: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
 10294  0007C4  0E00               	movlw	low UseBluetooth@buf
 10295  0007C6  0100               	movlb	0	; () banked
 10296  0007C8  6FAE               	movwf	sprintf@sp& (0+255),b
 10297  0007CA  0E02               	movlw	high UseBluetooth@buf
 10298  0007CC  0100               	movlb	0	; () banked
 10299  0007CE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10300  0007D0  0E5C               	movlw	low STR_31
 10301  0007D2  0100               	movlb	0	; () banked
 10302  0007D4  6FB0               	movwf	sprintf@f& (0+255),b
 10303  0007D6  0EFC               	movlw	high STR_31
 10304  0007D8  0100               	movlb	0	; () banked
 10305  0007DA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10306  0007DC  C283  F0B2         	movff	UseBluetooth@NecAddress,?_sprintf+4
 10307  0007E0  0100               	movlb	0	; () banked
 10308  0007E2  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10309  0007E4  EC22  F016         	call	_sprintf	;wreg free
 10310                           
 10311                           ;Bluetooth.c: 586: UARTstringCRLN(buf);
 10312  0007E8  0E00               	movlw	low UseBluetooth@buf
 10313  0007EA  0100               	movlb	0	; () banked
 10314  0007EC  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10315  0007EE  0E02               	movlw	high UseBluetooth@buf
 10316  0007F0  0100               	movlb	0	; () banked
 10317  0007F2  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10318  0007F4  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10319                           
 10320                           ;Bluetooth.c: 587: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
 10321  0007F8  0E00               	movlw	low UseBluetooth@buf
 10322  0007FA  0100               	movlb	0	; () banked
 10323  0007FC  6FAE               	movwf	sprintf@sp& (0+255),b
 10324  0007FE  0E02               	movlw	high UseBluetooth@buf
 10325  000800  0100               	movlb	0	; () banked
 10326  000802  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10327  000804  0E47               	movlw	low STR_32
 10328  000806  0100               	movlb	0	; () banked
 10329  000808  6FB0               	movwf	sprintf@f& (0+255),b
 10330  00080A  0EFC               	movlw	high STR_32
 10331  00080C  0100               	movlb	0	; () banked
 10332  00080E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10333  000810  C284  F0B2         	movff	UseBluetooth@NecCommand,?_sprintf+4
 10334  000814  0100               	movlb	0	; () banked
 10335  000816  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10336  000818  EC22  F016         	call	_sprintf	;wreg free
 10337                           
 10338                           ;Bluetooth.c: 588: UARTstringCRLN(buf);
 10339  00081C  0E00               	movlw	low UseBluetooth@buf
 10340  00081E  0100               	movlb	0	; () banked
 10341  000820  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10342  000822  0E02               	movlw	high UseBluetooth@buf
 10343  000824  0100               	movlb	0	; () banked
 10344  000826  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10345  000828  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10346                           
 10347                           ;Bluetooth.c: 589: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
 10348  00082C  C284  F064         	movff	UseBluetooth@NecCommand,EncodeNEC@command
 10349  000830  0102               	movlb	2	; () banked
 10350  000832  5183               	movf	UseBluetooth@NecAddress& (0+255),w,b
 10351  000834  EC10  F044         	call	_EncodeNEC
 10352  000838  C064  F279         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
 10353  00083C  C065  F27A         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
 10354  000840  C066  F27B         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
 10355  000844  C067  F27C         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
 10356                           
 10357                           ;Bluetooth.c: 590: SendNEC_wait(EnteredNEC,0);
 10358  000848  C279  F075         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
 10359  00084C  C27A  F076         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
 10360  000850  C27B  F077         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
 10361  000854  C27C  F078         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
 10362  000858  0E00               	movlw	0
 10363  00085A  0100               	movlb	0	; () banked
 10364  00085C  6F79               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 10365  00085E  ECC1  F04F         	call	_SendNEC_wait	;wreg free
 10366                           
 10367                           ;Bluetooth.c: 591: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
 10368  000862  0E00               	movlw	low UseBluetooth@buf
 10369  000864  0100               	movlb	0	; () banked
 10370  000866  6FAE               	movwf	sprintf@sp& (0+255),b
 10371  000868  0E02               	movlw	high UseBluetooth@buf
 10372  00086A  0100               	movlb	0	; () banked
 10373  00086C  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10374  00086E  0E93               	movlw	low STR_33
 10375  000870  0100               	movlb	0	; () banked
 10376  000872  6FB0               	movwf	sprintf@f& (0+255),b
 10377  000874  0EFB               	movlw	high STR_33
 10378  000876  0100               	movlb	0	; () banked
 10379  000878  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10380  00087A  C279  F0B2         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
 10381  00087E  C27A  F0B3         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
 10382  000882  C27B  F0B4         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
 10383  000886  C27C  F0B5         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
 10384  00088A  EC22  F016         	call	_sprintf	;wreg free
 10385                           
 10386                           ;Bluetooth.c: 592: UARTstringCRLN(buf);
 10387  00088E  0E00               	movlw	low UseBluetooth@buf
 10388  000890  0100               	movlb	0	; () banked
 10389  000892  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10390  000894  0E02               	movlw	high UseBluetooth@buf
 10391  000896  0100               	movlb	0	; () banked
 10392  000898  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10393  00089A  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10394                           
 10395                           ;Bluetooth.c: 593: UARTstring_CONST(CRLN);
 10396  00089E  0E5E               	movlw	low _CRLN
 10397  0008A0  0100               	movlb	0	; () banked
 10398  0008A2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10399  0008A4  0EEF               	movlw	high _CRLN
 10400  0008A6  0100               	movlb	0	; () banked
 10401  0008A8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10402  0008AA  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10403                           
 10404                           ;Bluetooth.c: 595: }
 10405                           
 10406                           ;Bluetooth.c: 594: return 1;
 10407                           ;	Return value of _UseBluetooth is never used
 10408  0008AE  0012               	return	
 10409  0008B0                     l12876:
 10410                           
 10411                           ;Bluetooth.c: 596: else
 10412                           ;Bluetooth.c: 597: {
 10413                           ;Bluetooth.c: 598: UARTstringCRLN_CONST("Error: could not decode Address");
 10414  0008B0  0ED1               	movlw	low STR_34
 10415  0008B2  0100               	movlb	0	; () banked
 10416  0008B4  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10417  0008B6  0EF8               	movlw	high STR_34
 10418  0008B8  0100               	movlb	0	; () banked
 10419  0008BA  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10420  0008BC  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10421                           
 10422                           ;Bluetooth.c: 599: UARTstring_CONST(CRLN);
 10423  0008C0  0E5E               	movlw	low _CRLN
 10424  0008C2  0100               	movlb	0	; () banked
 10425  0008C4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10426  0008C6  0EEF               	movlw	high _CRLN
 10427  0008C8  0100               	movlb	0	; () banked
 10428  0008CA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10429  0008CC  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10430                           
 10431                           ;Bluetooth.c: 601: }
 10432                           ;Bluetooth.c: 602: }
 10433                           
 10434                           ;Bluetooth.c: 600: return 0;
 10435                           ;	Return value of _UseBluetooth is never used
 10436  0008D0  0012               	return	
 10437  0008D2                     l12880:
 10438                           
 10439                           ;Bluetooth.c: 603: else if(!GetNumberUnsigned(String, 1, &EnteredNEC))
 10440  0008D2  C0E6  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10441  0008D6  C0E7  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10442  0008DA  0E01               	movlw	1
 10443  0008DC  0100               	movlb	0	; () banked
 10444  0008DE  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10445  0008E0  0E79               	movlw	low UseBluetooth@EnteredNEC
 10446  0008E2  0100               	movlb	0	; () banked
 10447  0008E4  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10448  0008E6  0E02               	movlw	high UseBluetooth@EnteredNEC
 10449  0008E8  0100               	movlb	0	; () banked
 10450  0008EA  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10451  0008EC  ECA7  F032         	call	_GetNumberUnsigned	;wreg free
 10452  0008F0  0900               	iorlw	0
 10453  0008F2  A4D8               	btfss	status,2,c
 10454  0008F4  D093               	goto	l12906
 10455                           
 10456                           ;Bluetooth.c: 604: {
 10457                           ;Bluetooth.c: 605: SendNEC_wait(EnteredNEC,0);
 10458  0008F6  C279  F075         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
 10459  0008FA  C27A  F076         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
 10460  0008FE  C27B  F077         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
 10461  000902  C27C  F078         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
 10462  000906  0E00               	movlw	0
 10463  000908  0100               	movlb	0	; () banked
 10464  00090A  6F79               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 10465  00090C  ECC1  F04F         	call	_SendNEC_wait	;wreg free
 10466                           
 10467                           ;Bluetooth.c: 606: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
 10468  000910  0E00               	movlw	low UseBluetooth@buf
 10469  000912  0100               	movlb	0	; () banked
 10470  000914  6FAE               	movwf	sprintf@sp& (0+255),b
 10471  000916  0E02               	movlw	high UseBluetooth@buf
 10472  000918  0100               	movlb	0	; () banked
 10473  00091A  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10474  00091C  0EEC               	movlw	low STR_35
 10475  00091E  0100               	movlb	0	; () banked
 10476  000920  6FB0               	movwf	sprintf@f& (0+255),b
 10477  000922  0EFC               	movlw	high STR_35
 10478  000924  0100               	movlb	0	; () banked
 10479  000926  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10480  000928  C279  F0B2         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
 10481  00092C  C27A  F0B3         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
 10482  000930  C27B  F0B4         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
 10483  000934  C27C  F0B5         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
 10484  000938  EC22  F016         	call	_sprintf	;wreg free
 10485                           
 10486                           ;Bluetooth.c: 607: UARTstringCRLN(buf);
 10487  00093C  0E00               	movlw	low UseBluetooth@buf
 10488  00093E  0100               	movlb	0	; () banked
 10489  000940  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10490  000942  0E02               	movlw	high UseBluetooth@buf
 10491  000944  0100               	movlb	0	; () banked
 10492  000946  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10493  000948  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10494                           
 10495                           ;Bluetooth.c: 608: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
 10496  00094C  C279  F064         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
 10497  000950  C27A  F065         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
 10498  000954  C27B  F066         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
 10499  000958  C27C  F067         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
 10500  00095C  0E83               	movlw	low UseBluetooth@NecAddress
 10501  00095E  0100               	movlb	0	; () banked
 10502  000960  6F68               	movwf	DecodeNEC@address& (0+255),b
 10503  000962  0E02               	movlw	high UseBluetooth@NecAddress
 10504  000964  0100               	movlb	0	; () banked
 10505  000966  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 10506  000968  0E84               	movlw	low UseBluetooth@NecCommand
 10507  00096A  0100               	movlb	0	; () banked
 10508  00096C  6F6A               	movwf	DecodeNEC@command& (0+255),b
 10509  00096E  0E02               	movlw	high UseBluetooth@NecCommand
 10510  000970  0100               	movlb	0	; () banked
 10511  000972  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 10512  000974  EC26  F04E         	call	_DecodeNEC	;wreg free
 10513  000978  0900               	iorlw	0
 10514  00097A  B4D8               	btfsc	status,2,c
 10515  00097C  D035               	goto	l12896
 10516                           
 10517                           ;Bluetooth.c: 609: {
 10518                           ;Bluetooth.c: 610: sprintf(buf,"address: 0x%02X ", NecAddress);
 10519  00097E  0E00               	movlw	low UseBluetooth@buf
 10520  000980  0100               	movlb	0	; () banked
 10521  000982  6FAE               	movwf	sprintf@sp& (0+255),b
 10522  000984  0E02               	movlw	high UseBluetooth@buf
 10523  000986  0100               	movlb	0	; () banked
 10524  000988  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10525  00098A  0E60               	movlw	low (STR_31+4)
 10526  00098C  0100               	movlb	0	; () banked
 10527  00098E  6FB0               	movwf	sprintf@f& (0+255),b
 10528  000990  0EFC               	movlw	high (STR_31+4)
 10529  000992  0100               	movlb	0	; () banked
 10530  000994  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10531  000996  C283  F0B2         	movff	UseBluetooth@NecAddress,?_sprintf+4
 10532  00099A  0100               	movlb	0	; () banked
 10533  00099C  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10534  00099E  EC22  F016         	call	_sprintf	;wreg free
 10535                           
 10536                           ;Bluetooth.c: 611: UARTstringCRLN(buf);
 10537  0009A2  0E00               	movlw	low UseBluetooth@buf
 10538  0009A4  0100               	movlb	0	; () banked
 10539  0009A6  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10540  0009A8  0E02               	movlw	high UseBluetooth@buf
 10541  0009AA  0100               	movlb	0	; () banked
 10542  0009AC  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10543  0009AE  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10544                           
 10545                           ;Bluetooth.c: 612: sprintf(buf,"command: 0x%02X ", NecCommand);
 10546  0009B2  0E00               	movlw	low UseBluetooth@buf
 10547  0009B4  0100               	movlb	0	; () banked
 10548  0009B6  6FAE               	movwf	sprintf@sp& (0+255),b
 10549  0009B8  0E02               	movlw	high UseBluetooth@buf
 10550  0009BA  0100               	movlb	0	; () banked
 10551  0009BC  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10552  0009BE  0E08               	movlw	low (STR_52+27)
 10553  0009C0  0100               	movlb	0	; () banked
 10554  0009C2  6FB0               	movwf	sprintf@f& (0+255),b
 10555  0009C4  0EF5               	movlw	high (STR_52+27)
 10556  0009C6  0100               	movlb	0	; () banked
 10557  0009C8  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10558  0009CA  C284  F0B2         	movff	UseBluetooth@NecCommand,?_sprintf+4
 10559  0009CE  0100               	movlb	0	; () banked
 10560  0009D0  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 10561  0009D2  EC22  F016         	call	_sprintf	;wreg free
 10562                           
 10563                           ;Bluetooth.c: 613: UARTstringCRLN(buf);
 10564  0009D6  0E00               	movlw	low UseBluetooth@buf
 10565  0009D8  0100               	movlb	0	; () banked
 10566  0009DA  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10567  0009DC  0E02               	movlw	high UseBluetooth@buf
 10568  0009DE  0100               	movlb	0	; () banked
 10569  0009E0  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10570  0009E2  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10571                           
 10572                           ;Bluetooth.c: 614: }
 10573  0009E6  D011               	goto	l12900
 10574  0009E8                     l12896:
 10575                           
 10576                           ;Bluetooth.c: 615: else
 10577                           ;Bluetooth.c: 616: {
 10578                           ;Bluetooth.c: 617: UARTstringCRLN_CONST("Error: could not decode NEC code");
 10579  0009E8  0EEF               	movlw	low STR_38
 10580  0009EA  0100               	movlb	0	; () banked
 10581  0009EC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10582  0009EE  0EF7               	movlw	high STR_38
 10583  0009F0  0100               	movlb	0	; () banked
 10584  0009F2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10585  0009F4  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10586                           
 10587                           ;Bluetooth.c: 618: UARTstring_CONST(CRLN);
 10588  0009F8  0E5E               	movlw	low _CRLN
 10589  0009FA  0100               	movlb	0	; () banked
 10590  0009FC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10591  0009FE  0EEF               	movlw	high _CRLN
 10592  000A00  0100               	movlb	0	; () banked
 10593  000A02  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10594  000A04  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10595                           
 10596                           ;Bluetooth.c: 619: return 0;
 10597                           ;	Return value of _UseBluetooth is never used
 10598  000A08  0012               	return	
 10599  000A0A                     l12900:
 10600                           
 10601                           ;Bluetooth.c: 620: }
 10602                           ;Bluetooth.c: 621: UARTstring_CONST(CRLN);
 10603  000A0A  0E5E               	movlw	low _CRLN
 10604  000A0C  0100               	movlb	0	; () banked
 10605  000A0E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10606  000A10  0EEF               	movlw	high _CRLN
 10607  000A12  0100               	movlb	0	; () banked
 10608  000A14  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10609  000A16  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10610                           
 10611                           ;Bluetooth.c: 623: }
 10612                           
 10613                           ;Bluetooth.c: 622: return 1;
 10614                           ;	Return value of _UseBluetooth is never used
 10615  000A1A  0012               	return	
 10616  000A1C                     l12906:
 10617                           
 10618                           ;Bluetooth.c: 624: else
 10619                           ;Bluetooth.c: 625: {
 10620                           ;Bluetooth.c: 626: if(!StringContains(String,"?"))
 10621  000A1C  C0E6  F060         	movff	UseBluetooth@String,StringContains@This
 10622  000A20  C0E7  F061         	movff	UseBluetooth@String+1,StringContains@This+1
 10623  000A24  0EE7               	movlw	low (STR_121+2)
 10624  000A26  0100               	movlb	0	; () banked
 10625  000A28  6F62               	movwf	StringContains@That& (0+255),b
 10626  000A2A  0EFF               	movlw	high (STR_121+2)
 10627  000A2C  0100               	movlb	0	; () banked
 10628  000A2E  6F63               	movwf	(StringContains@That+1)& (0+255),b
 10629  000A30  ECB7  F044         	call	_StringContains	;wreg free
 10630  000A34  0900               	iorlw	0
 10631  000A36  A4D8               	btfss	status,2,c
 10632  000A38  D010               	goto	l2158
 10633                           
 10634                           ;Bluetooth.c: 627: {
 10635                           ;Bluetooth.c: 628: UARTstring_CONST(CRLN);
 10636  000A3A  0E5E               	movlw	low _CRLN
 10637  000A3C  0100               	movlb	0	; () banked
 10638  000A3E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10639  000A40  0EEF               	movlw	high _CRLN
 10640  000A42  0100               	movlb	0	; () banked
 10641  000A44  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10642  000A46  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10643                           
 10644                           ;Bluetooth.c: 629: UARTstringCRLN_CONST("NEC code not entered correctly");
 10645  000A4A  0ECA               	movlw	low STR_40
 10646  000A4C  0100               	movlb	0	; () banked
 10647  000A4E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10648  000A50  0EF9               	movlw	high STR_40
 10649  000A52  0100               	movlb	0	; () banked
 10650  000A54  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10651  000A56  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10652  000A5A                     l2158:
 10653                           
 10654                           ;Bluetooth.c: 630: }
 10655                           ;Bluetooth.c: 631: UARTstring_CONST(CRLN);
 10656  000A5A  0E5E               	movlw	low _CRLN
 10657  000A5C  0100               	movlb	0	; () banked
 10658  000A5E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10659  000A60  0EEF               	movlw	high _CRLN
 10660  000A62  0100               	movlb	0	; () banked
 10661  000A64  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10662  000A66  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10663                           
 10664                           ;Bluetooth.c: 632: UARTstringCRLN_CONST("Usage:");
 10665  000A6A  0E93               	movlw	low STR_41
 10666  000A6C  0100               	movlb	0	; () banked
 10667  000A6E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10668  000A70  0EFF               	movlw	high STR_41
 10669  000A72  0100               	movlb	0	; () banked
 10670  000A74  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10671  000A76  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10672                           
 10673                           ;Bluetooth.c: 633: UARTstringCRLN_CONST("NEC = (32 bit code)");
 10674  000A7A  0EC4               	movlw	low STR_42
 10675  000A7C  0100               	movlb	0	; () banked
 10676  000A7E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10677  000A80  0EFC               	movlw	high STR_42
 10678  000A82  0100               	movlb	0	; () banked
 10679  000A84  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10680  000A86  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10681                           
 10682                           ;Bluetooth.c: 634: UARTstringCRLN_CONST("        or");
 10683  000A8A  0E3A               	movlw	low STR_43
 10684  000A8C  0100               	movlb	0	; () banked
 10685  000A8E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10686  000A90  0EFF               	movlw	high STR_43
 10687  000A92  0100               	movlb	0	; () banked
 10688  000A94  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10689  000A96  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10690                           
 10691                           ;Bluetooth.c: 635: UARTstringCRLN_CONST("NEC = address,command");
 10692  000A9A  0E05               	movlw	low STR_44
 10693  000A9C  0100               	movlb	0	; () banked
 10694  000A9E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10695  000AA0  0EFC               	movlw	high STR_44
 10696  000AA2  0100               	movlb	0	; () banked
 10697  000AA4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10698  000AA6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10699                           
 10700                           ;Bluetooth.c: 636: UARTstring_CONST(CRLN);
 10701  000AAA  0E5E               	movlw	low _CRLN
 10702  000AAC  0100               	movlb	0	; () banked
 10703  000AAE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10704  000AB0  0EEF               	movlw	high _CRLN
 10705  000AB2  0100               	movlb	0	; () banked
 10706  000AB4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10707  000AB6  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10708                           
 10709                           ;Bluetooth.c: 637: UARTstringCRLN_CONST("Example:");
 10710  000ABA  0E6B               	movlw	low STR_45
 10711  000ABC  0100               	movlb	0	; () banked
 10712  000ABE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10713  000AC0  0EFF               	movlw	high STR_45
 10714  000AC2  0100               	movlb	0	; () banked
 10715  000AC4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10716  000AC6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10717                           
 10718                           ;Bluetooth.c: 638: UARTstringCRLN_CONST("NEC = 0x1CE350AF ");
 10719  000ACA  0E9A               	movlw	low STR_46
 10720  000ACC  0100               	movlb	0	; () banked
 10721  000ACE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10722  000AD0  0EFD               	movlw	high STR_46
 10723  000AD2  0100               	movlb	0	; () banked
 10724  000AD4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10725  000AD6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10726                           
 10727                           ;Bluetooth.c: 639: UARTstringCRLN_CONST("      or");
 10728  000ADA  0E3C               	movlw	low (STR_43+2)
 10729  000ADC  0100               	movlb	0	; () banked
 10730  000ADE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10731  000AE0  0EFF               	movlw	high (STR_43+2)
 10732  000AE2  0100               	movlb	0	; () banked
 10733  000AE4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10734  000AE6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10735                           
 10736                           ;Bluetooth.c: 640: UARTstringCRLN_CONST("NEC = 0x38, 0x0A");
 10737  000AEA  0EF2               	movlw	low STR_48
 10738  000AEC  0100               	movlb	0	; () banked
 10739  000AEE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10740  000AF0  0EFD               	movlw	high STR_48
 10741  000AF2  0100               	movlb	0	; () banked
 10742  000AF4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10743  000AF6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 10744                           
 10745                           ;Bluetooth.c: 641: UARTstring_CONST(CRLN);
 10746  000AFA  0E5E               	movlw	low _CRLN
 10747  000AFC  0100               	movlb	0	; () banked
 10748  000AFE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 10749  000B00  0EEF               	movlw	high _CRLN
 10750  000B02  0100               	movlb	0	; () banked
 10751  000B04  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10752  000B06  EC98  F055         	call	_UARTstring_CONST	;wreg free
 10753                           
 10754                           ;Bluetooth.c: 643: }
 10755                           ;Bluetooth.c: 644: }
 10756                           
 10757                           ;Bluetooth.c: 642: return 0;
 10758                           ;	Return value of _UseBluetooth is never used
 10759  000B0A  0012               	return	
 10760  000B0C                     l12912:
 10761                           
 10762                           ;Bluetooth.c: 645: else if(StringContainsCaseInsensitive(String,"RemoteButton"))
 10763  000B0C  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10764  000B10  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10765  000B14  0ED5               	movlw	low STR_49
 10766  000B16  0100               	movlb	0	; () banked
 10767  000B18  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10768  000B1A  0EFE               	movlw	high STR_49
 10769  000B1C  0100               	movlb	0	; () banked
 10770  000B1E  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10771  000B20  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 10772  000B24  0900               	iorlw	0
 10773  000B26  B4D8               	btfsc	status,2,c
 10774  000B28  D2C8               	goto	l13000
 10775                           
 10776                           ;Bluetooth.c: 646: {
 10777                           ;Bluetooth.c: 647: if(StringAddEqual(String))
 10778  000B2A  C0E6  F06F         	movff	UseBluetooth@String,StringAddEqual@Input
 10779  000B2E  C0E7  F070         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10780  000B32  EC83  F03B         	call	_StringAddEqual	;wreg free
 10781  000B36  0900               	iorlw	0
 10782  000B38  B4D8               	btfsc	status,2,c
 10783  000B3A  D266               	goto	l12994
 10784                           
 10785                           ;Bluetooth.c: 648: {
 10786                           ;Bluetooth.c: 649: StringPos++;
 10787  000B3C  0100               	movlb	0	; () banked
 10788  000B3E  2BE8               	incf	UseBluetooth@StringPos& (0+255),f,b
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;Bluetooth.c: 650: if(!GetNumberUnsigned(String, 1, &temp))
 10792  000B40  C0E6  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10793  000B44  C0E7  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10794  000B48  0E01               	movlw	1
 10795  000B4A  0100               	movlb	0	; () banked
 10796  000B4C  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10797  000B4E  0E85               	movlw	low UseBluetooth@temp
 10798  000B50  0100               	movlb	0	; () banked
 10799  000B52  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 10800  000B54  0E02               	movlw	high UseBluetooth@temp
 10801  000B56  0100               	movlb	0	; () banked
 10802  000B58  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10803  000B5A  ECA7  F032         	call	_GetNumberUnsigned	;wreg free
 10804  000B5E  0900               	iorlw	0
 10805  000B60  A4D8               	btfss	status,2,c
 10806  000B62  D252               	goto	l12994
 10807                           
 10808                           ;Bluetooth.c: 651: {
 10809                           ;Bluetooth.c: 652: if(temp <= 12 && temp > 0)
 10810  000B64  0102               	movlb	2	; () banked
 10811  000B66  5188               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10812  000B68  0102               	movlb	2	; () banked
 10813  000B6A  1187               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10814  000B6C  0102               	movlb	2	; () banked
 10815  000B6E  1186               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
 10816  000B70  E104               	bnz	u14521
 10817  000B72  0E0D               	movlw	13
 10818  000B74  0102               	movlb	2	; () banked
 10819  000B76  5D85               	subwf	UseBluetooth@temp& (0+255),w,b
 10820  000B78  B0D8               	btfsc	status,0,c
 10821  000B7A                     u14521:
 10822  000B7A  D22C               	goto	l12990
 10823                           
 10824                           ; BSR set to: 2
 10825  000B7C  0102               	movlb	2	; () banked
 10826  000B7E  5185               	movf	UseBluetooth@temp& (0+255),w,b
 10827  000B80  0102               	movlb	2	; () banked
 10828  000B82  1186               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
 10829  000B84  0102               	movlb	2	; () banked
 10830  000B86  1187               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10831  000B88  0102               	movlb	2	; () banked
 10832  000B8A  1188               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
 10833  000B8C  B4D8               	btfsc	status,2,c
 10834  000B8E  D222               	goto	l12990
 10835                           
 10836                           ; BSR set to: 2
 10837                           ;Bluetooth.c: 653: {
 10838                           ;Bluetooth.c: 654: if(!StringContainsCaseInsensitive(String,"set"))
 10839  000B90  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10840  000B94  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10841  000B98  0E24               	movlw	low (STR_60+16)
 10842  000B9A  0100               	movlb	0	; () banked
 10843  000B9C  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10844  000B9E  0EFD               	movlw	high (STR_60+16)
 10845  000BA0  0100               	movlb	0	; () banked
 10846  000BA2  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10847  000BA4  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 10848  000BA8  0900               	iorlw	0
 10849  000BAA  A4D8               	btfss	status,2,c
 10850  000BAC  D123               	goto	l12950
 10851                           
 10852                           ;Bluetooth.c: 655: {
 10853                           ;Bluetooth.c: 656: tempNec = EncodeNEC(Global1.RemoteButtonNEC[temp-1][0], Global1.Remot
      +                          eButtonNEC[temp-1][1]);
 10854  000BAE  0EFE               	movlw	254
 10855  000BB0  0100               	movlb	0	; () banked
 10856  000BB2  6FE9               	movwf	??_UseBluetooth& (0+255),b
 10857  000BB4  0EFF               	movlw	255
 10858  000BB6  0100               	movlb	0	; () banked
 10859  000BB8  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 10860  000BBA  C285  F0EB         	movff	UseBluetooth@temp,??_UseBluetooth+2
 10861  000BBE  C286  F0EC         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 10862  000BC2  90D8               	bcf	status,0,c
 10863  000BC4  0100               	movlb	0	; () banked
 10864  000BC6  37EB               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 10865  000BC8  37EC               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 10866  000BCA  0100               	movlb	0	; () banked
 10867  000BCC  51E9               	movf	??_UseBluetooth& (0+255),w,b
 10868  000BCE  0100               	movlb	0	; () banked
 10869  000BD0  27EB               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 10870  000BD2  0100               	movlb	0	; () banked
 10871  000BD4  51EA               	movf	(??_UseBluetooth+1)& (0+255),w,b
 10872  000BD6  0100               	movlb	0	; () banked
 10873  000BD8  23EC               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 10874  000BDA  0ED2               	movlw	low _Global1
 10875  000BDC  0100               	movlb	0	; () banked
 10876  000BDE  6FED               	movwf	(??_UseBluetooth+4)& (0+255),b
 10877  000BE0  0E02               	movlw	high _Global1
 10878  000BE2  0100               	movlb	0	; () banked
 10879  000BE4  6FEE               	movwf	(??_UseBluetooth+5)& (0+255),b
 10880  000BE6  0E05               	movlw	5
 10881  000BE8  0100               	movlb	0	; () banked
 10882  000BEA  27ED               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10883  000BEC  0E00               	movlw	0
 10884  000BEE  23EE               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10885  000BF0  0100               	movlb	0	; () banked
 10886  000BF2  51EB               	movf	(??_UseBluetooth+2)& (0+255),w,b
 10887  000BF4  0100               	movlb	0	; () banked
 10888  000BF6  27ED               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10889  000BF8  0100               	movlb	0	; () banked
 10890  000BFA  51EC               	movf	(??_UseBluetooth+3)& (0+255),w,b
 10891  000BFC  0100               	movlb	0	; () banked
 10892  000BFE  23EE               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10893  000C00  0E01               	movlw	1
 10894  000C02  0100               	movlb	0	; () banked
 10895  000C04  25ED               	addwf	(??_UseBluetooth+4)& (0+255),w,b
 10896  000C06  6ED9               	movwf	fsr2l,c
 10897  000C08  0E00               	movlw	0
 10898  000C0A  0100               	movlb	0	; () banked
 10899  000C0C  21EE               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
 10900  000C0E  6EDA               	movwf	fsr2h,c
 10901  000C10  50DF               	movf	indf2,w,c
 10902  000C12  0100               	movlb	0	; () banked
 10903  000C14  6F64               	movwf	EncodeNEC@command& (0+255),b
 10904  000C16  0EFE               	movlw	254
 10905  000C18  0100               	movlb	0	; () banked
 10906  000C1A  6FEF               	movwf	(??_UseBluetooth+6)& (0+255),b
 10907  000C1C  0EFF               	movlw	255
 10908  000C1E  0100               	movlb	0	; () banked
 10909  000C20  6FF0               	movwf	(??_UseBluetooth+7)& (0+255),b
 10910  000C22  C285  F0F1         	movff	UseBluetooth@temp,??_UseBluetooth+8
 10911  000C26  C286  F0F2         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
 10912  000C2A  90D8               	bcf	status,0,c
 10913  000C2C  0100               	movlb	0	; () banked
 10914  000C2E  37F1               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
 10915  000C30  37F2               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
 10916  000C32  0100               	movlb	0	; () banked
 10917  000C34  51EF               	movf	(??_UseBluetooth+6)& (0+255),w,b
 10918  000C36  0100               	movlb	0	; () banked
 10919  000C38  27F1               	addwf	(??_UseBluetooth+8)& (0+255),f,b
 10920  000C3A  0100               	movlb	0	; () banked
 10921  000C3C  51F0               	movf	(??_UseBluetooth+7)& (0+255),w,b
 10922  000C3E  0100               	movlb	0	; () banked
 10923  000C40  23F2               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
 10924  000C42  0ED7               	movlw	low (_Global1+5)
 10925  000C44  0100               	movlb	0	; () banked
 10926  000C46  25F1               	addwf	(??_UseBluetooth+8)& (0+255),w,b
 10927  000C48  6ED9               	movwf	fsr2l,c
 10928  000C4A  0E02               	movlw	high (_Global1+5)
 10929  000C4C  0100               	movlb	0	; () banked
 10930  000C4E  21F2               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
 10931  000C50  6EDA               	movwf	fsr2h,c
 10932  000C52  50DF               	movf	indf2,w,c
 10933  000C54  EC10  F044         	call	_EncodeNEC
 10934  000C58  C064  F270         	movff	?_EncodeNEC,UseBluetooth@tempNec
 10935  000C5C  C065  F271         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
 10936  000C60  C066  F272         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
 10937  000C64  C067  F273         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
 10938                           
 10939                           ;Bluetooth.c: 657: if(tempNec != 0x00FF00FF)
 10940  000C68  0102               	movlb	2	; () banked
 10941  000C6A  2970               	incf	UseBluetooth@tempNec& (0+255),w,b
 10942  000C6C  E108               	bnz	u14550
 10943  000C6E  0102               	movlb	2	; () banked
 10944  000C70  2972               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
 10945  000C72  0102               	movlb	2	; () banked
 10946  000C74  1171               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
 10947  000C76  0102               	movlb	2	; () banked
 10948  000C78  1173               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
 10949  000C7A  B4D8               	btfsc	status,2,c
 10950  000C7C  D0A9               	goto	l12944
 10951  000C7E                     u14550:
 10952                           
 10953                           ; BSR set to: 2
 10954                           ;Bluetooth.c: 658: {
 10955                           ;Bluetooth.c: 659: SendNEC_wait(tempNec,0);
 10956  000C7E  C270  F075         	movff	UseBluetooth@tempNec,SendNEC_wait@code
 10957  000C82  C271  F076         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
 10958  000C86  C272  F077         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
 10959  000C8A  C273  F078         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
 10960  000C8E  0E00               	movlw	0
 10961  000C90  0100               	movlb	0	; () banked
 10962  000C92  6F79               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 10963  000C94  ECC1  F04F         	call	_SendNEC_wait	;wreg free
 10964                           
 10965                           ;Bluetooth.c: 660: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
 10966  000C98  0E00               	movlw	low UseBluetooth@buf
 10967  000C9A  0100               	movlb	0	; () banked
 10968  000C9C  6FAE               	movwf	sprintf@sp& (0+255),b
 10969  000C9E  0E02               	movlw	high UseBluetooth@buf
 10970  000CA0  0100               	movlb	0	; () banked
 10971  000CA2  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 10972  000CA4  0E71               	movlw	low STR_51
 10973  000CA6  0100               	movlb	0	; () banked
 10974  000CA8  6FB0               	movwf	sprintf@f& (0+255),b
 10975  000CAA  0EFC               	movlw	high STR_51
 10976  000CAC  0100               	movlb	0	; () banked
 10977  000CAE  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 10978  000CB0  C270  F0B2         	movff	UseBluetooth@tempNec,?_sprintf+4
 10979  000CB4  C271  F0B3         	movff	UseBluetooth@tempNec+1,?_sprintf+5
 10980  000CB8  C272  F0B4         	movff	UseBluetooth@tempNec+2,?_sprintf+6
 10981  000CBC  C273  F0B5         	movff	UseBluetooth@tempNec+3,?_sprintf+7
 10982  000CC0  EC22  F016         	call	_sprintf	;wreg free
 10983                           
 10984                           ;Bluetooth.c: 661: UARTstringCRLN(buf);
 10985  000CC4  0E00               	movlw	low UseBluetooth@buf
 10986  000CC6  0100               	movlb	0	; () banked
 10987  000CC8  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 10988  000CCA  0E02               	movlw	high UseBluetooth@buf
 10989  000CCC  0100               	movlb	0	; () banked
 10990  000CCE  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10991  000CD0  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 10992                           
 10993                           ;Bluetooth.c: 662: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global1.Rem
      +                          oteButtonNEC[temp-1][0], Global1.RemoteButtonNEC[temp-1][1]);
 10994  000CD4  0E00               	movlw	low UseBluetooth@buf
 10995  000CD6  0100               	movlb	0	; () banked
 10996  000CD8  6FAE               	movwf	sprintf@sp& (0+255),b
 10997  000CDA  0E02               	movlw	high UseBluetooth@buf
 10998  000CDC  0100               	movlb	0	; () banked
 10999  000CDE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11000  000CE0  0EED               	movlw	low STR_52
 11001  000CE2  0100               	movlb	0	; () banked
 11002  000CE4  6FB0               	movwf	sprintf@f& (0+255),b
 11003  000CE6  0EF4               	movlw	high STR_52
 11004  000CE8  0100               	movlb	0	; () banked
 11005  000CEA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11006  000CEC  0EFE               	movlw	254
 11007  000CEE  0100               	movlb	0	; () banked
 11008  000CF0  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11009  000CF2  0EFF               	movlw	255
 11010  000CF4  0100               	movlb	0	; () banked
 11011  000CF6  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11012  000CF8  C285  F0EB         	movff	UseBluetooth@temp,??_UseBluetooth+2
 11013  000CFC  C286  F0EC         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 11014  000D00  90D8               	bcf	status,0,c
 11015  000D02  0100               	movlb	0	; () banked
 11016  000D04  37EB               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 11017  000D06  37EC               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 11018  000D08  0100               	movlb	0	; () banked
 11019  000D0A  51E9               	movf	??_UseBluetooth& (0+255),w,b
 11020  000D0C  0100               	movlb	0	; () banked
 11021  000D0E  27EB               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 11022  000D10  0100               	movlb	0	; () banked
 11023  000D12  51EA               	movf	(??_UseBluetooth+1)& (0+255),w,b
 11024  000D14  0100               	movlb	0	; () banked
 11025  000D16  23EC               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 11026  000D18  0ED7               	movlw	low (_Global1+5)
 11027  000D1A  0100               	movlb	0	; () banked
 11028  000D1C  25EB               	addwf	(??_UseBluetooth+2)& (0+255),w,b
 11029  000D1E  6ED9               	movwf	fsr2l,c
 11030  000D20  0E02               	movlw	high (_Global1+5)
 11031  000D22  0100               	movlb	0	; () banked
 11032  000D24  21EC               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
 11033  000D26  6EDA               	movwf	fsr2h,c
 11034  000D28  50DF               	movf	indf2,w,c
 11035  000D2A  0100               	movlb	0	; () banked
 11036  000D2C  6FED               	movwf	(??_UseBluetooth+4)& (0+255),b
 11037  000D2E  0100               	movlb	0	; () banked
 11038  000D30  51ED               	movf	(??_UseBluetooth+4)& (0+255),w,b
 11039  000D32  0100               	movlb	0	; () banked
 11040  000D34  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 11041  000D36  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 11042  000D38  0EFE               	movlw	254
 11043  000D3A  0100               	movlb	0	; () banked
 11044  000D3C  6FEE               	movwf	(??_UseBluetooth+5)& (0+255),b
 11045  000D3E  0EFF               	movlw	255
 11046  000D40  0100               	movlb	0	; () banked
 11047  000D42  6FEF               	movwf	(??_UseBluetooth+6)& (0+255),b
 11048  000D44  C285  F0F0         	movff	UseBluetooth@temp,??_UseBluetooth+7
 11049  000D48  C286  F0F1         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
 11050  000D4C  90D8               	bcf	status,0,c
 11051  000D4E  0100               	movlb	0	; () banked
 11052  000D50  37F0               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
 11053  000D52  37F1               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
 11054  000D54  0100               	movlb	0	; () banked
 11055  000D56  51EE               	movf	(??_UseBluetooth+5)& (0+255),w,b
 11056  000D58  0100               	movlb	0	; () banked
 11057  000D5A  27F0               	addwf	(??_UseBluetooth+7)& (0+255),f,b
 11058  000D5C  0100               	movlb	0	; () banked
 11059  000D5E  51EF               	movf	(??_UseBluetooth+6)& (0+255),w,b
 11060  000D60  0100               	movlb	0	; () banked
 11061  000D62  23F1               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
 11062  000D64  0ED2               	movlw	low _Global1
 11063  000D66  0100               	movlb	0	; () banked
 11064  000D68  6FF2               	movwf	(??_UseBluetooth+9)& (0+255),b
 11065  000D6A  0E02               	movlw	high _Global1
 11066  000D6C  0100               	movlb	0	; () banked
 11067  000D6E  6FF3               	movwf	(??_UseBluetooth+10)& (0+255),b
 11068  000D70  0E05               	movlw	5
 11069  000D72  0100               	movlb	0	; () banked
 11070  000D74  27F2               	addwf	(??_UseBluetooth+9)& (0+255),f,b
 11071  000D76  0E00               	movlw	0
 11072  000D78  23F3               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
 11073  000D7A  0100               	movlb	0	; () banked
 11074  000D7C  51F0               	movf	(??_UseBluetooth+7)& (0+255),w,b
 11075  000D7E  0100               	movlb	0	; () banked
 11076  000D80  27F2               	addwf	(??_UseBluetooth+9)& (0+255),f,b
 11077  000D82  0100               	movlb	0	; () banked
 11078  000D84  51F1               	movf	(??_UseBluetooth+8)& (0+255),w,b
 11079  000D86  0100               	movlb	0	; () banked
 11080  000D88  23F3               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
 11081  000D8A  0E01               	movlw	1
 11082  000D8C  0100               	movlb	0	; () banked
 11083  000D8E  25F2               	addwf	(??_UseBluetooth+9)& (0+255),w,b
 11084  000D90  6ED9               	movwf	fsr2l,c
 11085  000D92  0E00               	movlw	0
 11086  000D94  0100               	movlb	0	; () banked
 11087  000D96  21F3               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
 11088  000D98  6EDA               	movwf	fsr2h,c
 11089  000D9A  50DF               	movf	indf2,w,c
 11090  000D9C  0100               	movlb	0	; () banked
 11091  000D9E  6FF4               	movwf	(??_UseBluetooth+11)& (0+255),b
 11092  000DA0  0100               	movlb	0	; () banked
 11093  000DA2  51F4               	movf	(??_UseBluetooth+11)& (0+255),w,b
 11094  000DA4  0100               	movlb	0	; () banked
 11095  000DA6  6FB4               	movwf	(?_sprintf+6)& (0+255),b
 11096  000DA8  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 11097  000DAA  EC22  F016         	call	_sprintf	;wreg free
 11098                           
 11099                           ;Bluetooth.c: 663: UARTstringCRLN(buf);
 11100  000DAE  0E00               	movlw	low UseBluetooth@buf
 11101  000DB0  0100               	movlb	0	; () banked
 11102  000DB2  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11103  000DB4  0E02               	movlw	high UseBluetooth@buf
 11104  000DB6  0100               	movlb	0	; () banked
 11105  000DB8  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11106  000DBA  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 11107                           
 11108                           ;Bluetooth.c: 664: UARTstring_CONST(CRLN);
 11109  000DBE  0E5E               	movlw	low _CRLN
 11110  000DC0  0100               	movlb	0	; () banked
 11111  000DC2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11112  000DC4  0EEF               	movlw	high _CRLN
 11113  000DC6  0100               	movlb	0	; () banked
 11114  000DC8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11115  000DCA  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11116                           
 11117                           ;Bluetooth.c: 665: return 1;
 11118                           ;	Return value of _UseBluetooth is never used
 11119  000DCE  0012               	return	
 11120  000DD0                     l12944:
 11121                           
 11122                           ;Bluetooth.c: 666: }
 11123                           ;Bluetooth.c: 667: UARTstring_CONST(CRLN);
 11124  000DD0  0E5E               	movlw	low _CRLN
 11125  000DD2  0100               	movlb	0	; () banked
 11126  000DD4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11127  000DD6  0EEF               	movlw	high _CRLN
 11128  000DD8  0100               	movlb	0	; () banked
 11129  000DDA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11130  000DDC  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11131                           
 11132                           ;Bluetooth.c: 668: UARTstringCRLN_CONST("Error: No NEC code saved for specified command"
      +                          );
 11133  000DE0  0EF1               	movlw	low STR_53
 11134  000DE2  0100               	movlb	0	; () banked
 11135  000DE4  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11136  000DE6  0EF2               	movlw	high STR_53
 11137  000DE8  0100               	movlb	0	; () banked
 11138  000DEA  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11139  000DEC  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11140                           
 11141                           ;Bluetooth.c: 669: return 0;
 11142                           ;	Return value of _UseBluetooth is never used
 11143  000DF0  0012               	return	
 11144                           
 11145                           ;Bluetooth.c: 670: }
 11146  000DF2  D10A               	goto	l12994
 11147  000DF4                     l12950:
 11148                           
 11149                           ;Bluetooth.c: 671: else
 11150                           ;Bluetooth.c: 672: {
 11151                           ;Bluetooth.c: 673: if(!WaitForIRsignal())
 11152  000DF4  ECA9  F050         	call	_WaitForIRsignal	;wreg free
 11153  000DF8  0900               	iorlw	0
 11154  000DFA  B4D8               	btfsc	status,2,c
 11155  000DFC  0012               	return	
 11156  000DFE  D001               	goto	l12954
 11157                           
 11158                           ;Bluetooth.c: 674: {
 11159                           ;Bluetooth.c: 675: return 0;
 11160                           ;	Return value of _UseBluetooth is never used
 11161  000E00  0012               	return	
 11162  000E02                     l12954:
 11163                           
 11164                           ;Bluetooth.c: 676: }
 11165                           ;Bluetooth.c: 679: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 11166  000E02  C3EC  F064         	movff	_IR_NEC,DecodeNEC@Nec
 11167  000E06  C3ED  F065         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 11168  000E0A  C3EE  F066         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 11169  000E0E  C3EF  F067         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 11170  000E12  0E83               	movlw	low UseBluetooth@NecAddress
 11171  000E14  0100               	movlb	0	; () banked
 11172  000E16  6F68               	movwf	DecodeNEC@address& (0+255),b
 11173  000E18  0E02               	movlw	high UseBluetooth@NecAddress
 11174  000E1A  0100               	movlb	0	; () banked
 11175  000E1C  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 11176  000E1E  0E84               	movlw	low UseBluetooth@NecCommand
 11177  000E20  0100               	movlb	0	; () banked
 11178  000E22  6F6A               	movwf	DecodeNEC@command& (0+255),b
 11179  000E24  0E02               	movlw	high UseBluetooth@NecCommand
 11180  000E26  0100               	movlb	0	; () banked
 11181  000E28  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 11182  000E2A  EC26  F04E         	call	_DecodeNEC	;wreg free
 11183                           
 11184                           ;Bluetooth.c: 680: Global1.RemoteButtonNEC[temp - 1][0] = NecAddress;
 11185  000E2E  0EFE               	movlw	254
 11186  000E30  0100               	movlb	0	; () banked
 11187  000E32  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11188  000E34  0EFF               	movlw	255
 11189  000E36  0100               	movlb	0	; () banked
 11190  000E38  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11191  000E3A  C285  F0EB         	movff	UseBluetooth@temp,??_UseBluetooth+2
 11192  000E3E  C286  F0EC         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 11193  000E42  90D8               	bcf	status,0,c
 11194  000E44  0100               	movlb	0	; () banked
 11195  000E46  37EB               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 11196  000E48  37EC               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 11197  000E4A  0100               	movlb	0	; () banked
 11198  000E4C  51E9               	movf	??_UseBluetooth& (0+255),w,b
 11199  000E4E  0100               	movlb	0	; () banked
 11200  000E50  27EB               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 11201  000E52  0100               	movlb	0	; () banked
 11202  000E54  51EA               	movf	(??_UseBluetooth+1)& (0+255),w,b
 11203  000E56  0100               	movlb	0	; () banked
 11204  000E58  23EC               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 11205  000E5A  0ED7               	movlw	low (_Global1+5)
 11206  000E5C  0100               	movlb	0	; () banked
 11207  000E5E  25EB               	addwf	(??_UseBluetooth+2)& (0+255),w,b
 11208  000E60  6ED9               	movwf	fsr2l,c
 11209  000E62  0E02               	movlw	high (_Global1+5)
 11210  000E64  0100               	movlb	0	; () banked
 11211  000E66  21EC               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
 11212  000E68  6EDA               	movwf	fsr2h,c
 11213  000E6A  C283  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;Bluetooth.c: 681: Global1.RemoteButtonNEC[temp - 1][1] = NecCommand;
 11217  000E6E  0EFE               	movlw	254
 11218  000E70  0100               	movlb	0	; () banked
 11219  000E72  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11220  000E74  0EFF               	movlw	255
 11221  000E76  0100               	movlb	0	; () banked
 11222  000E78  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11223  000E7A  C285  F0EB         	movff	UseBluetooth@temp,??_UseBluetooth+2
 11224  000E7E  C286  F0EC         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 11225  000E82  90D8               	bcf	status,0,c
 11226  000E84  0100               	movlb	0	; () banked
 11227  000E86  37EB               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 11228  000E88  37EC               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 11229  000E8A  0100               	movlb	0	; () banked
 11230  000E8C  51E9               	movf	??_UseBluetooth& (0+255),w,b
 11231  000E8E  0100               	movlb	0	; () banked
 11232  000E90  27EB               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 11233  000E92  0100               	movlb	0	; () banked
 11234  000E94  51EA               	movf	(??_UseBluetooth+1)& (0+255),w,b
 11235  000E96  0100               	movlb	0	; () banked
 11236  000E98  23EC               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 11237  000E9A  0ED2               	movlw	low _Global1
 11238  000E9C  0100               	movlb	0	; () banked
 11239  000E9E  6FED               	movwf	(??_UseBluetooth+4)& (0+255),b
 11240  000EA0  0E02               	movlw	high _Global1
 11241  000EA2  0100               	movlb	0	; () banked
 11242  000EA4  6FEE               	movwf	(??_UseBluetooth+5)& (0+255),b
 11243  000EA6  0E05               	movlw	5
 11244  000EA8  0100               	movlb	0	; () banked
 11245  000EAA  27ED               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 11246  000EAC  0E00               	movlw	0
 11247  000EAE  23EE               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 11248  000EB0  0100               	movlb	0	; () banked
 11249  000EB2  51EB               	movf	(??_UseBluetooth+2)& (0+255),w,b
 11250  000EB4  0100               	movlb	0	; () banked
 11251  000EB6  27ED               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 11252  000EB8  0100               	movlb	0	; () banked
 11253  000EBA  51EC               	movf	(??_UseBluetooth+3)& (0+255),w,b
 11254  000EBC  0100               	movlb	0	; () banked
 11255  000EBE  23EE               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 11256  000EC0  0E01               	movlw	1
 11257  000EC2  0100               	movlb	0	; () banked
 11258  000EC4  25ED               	addwf	(??_UseBluetooth+4)& (0+255),w,b
 11259  000EC6  6ED9               	movwf	fsr2l,c
 11260  000EC8  0E00               	movlw	0
 11261  000ECA  0100               	movlb	0	; () banked
 11262  000ECC  21EE               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
 11263  000ECE  6EDA               	movwf	fsr2h,c
 11264  000ED0  C284  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;Bluetooth.c: 682: SyncGlobalToEEPROM();
 11268  000ED4  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 11269                           
 11270                           ;Bluetooth.c: 683: UARTstring_CONST(CRLN);
 11271  000ED8  0E5E               	movlw	low _CRLN
 11272  000EDA  0100               	movlb	0	; () banked
 11273  000EDC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11274  000EDE  0EEF               	movlw	high _CRLN
 11275  000EE0  0100               	movlb	0	; () banked
 11276  000EE2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11277  000EE4  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11278                           
 11279                           ;Bluetooth.c: 684: sprintf(buf,"RemoteButton%lu now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
 11280  000EE8  0E00               	movlw	low UseBluetooth@buf
 11281  000EEA  0100               	movlb	0	; () banked
 11282  000EEC  6FAE               	movwf	sprintf@sp& (0+255),b
 11283  000EEE  0E02               	movlw	high UseBluetooth@buf
 11284  000EF0  0100               	movlb	0	; () banked
 11285  000EF2  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11286  000EF4  0E4F               	movlw	low STR_54
 11287  000EF6  0100               	movlb	0	; () banked
 11288  000EF8  6FB0               	movwf	sprintf@f& (0+255),b
 11289  000EFA  0EF3               	movlw	high STR_54
 11290  000EFC  0100               	movlb	0	; () banked
 11291  000EFE  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11292  000F00  C285  F0B2         	movff	UseBluetooth@temp,?_sprintf+4
 11293  000F04  C286  F0B3         	movff	UseBluetooth@temp+1,?_sprintf+5
 11294  000F08  C287  F0B4         	movff	UseBluetooth@temp+2,?_sprintf+6
 11295  000F0C  C288  F0B5         	movff	UseBluetooth@temp+3,?_sprintf+7
 11296  000F10  C3EC  F0B6         	movff	_IR_NEC,?_sprintf+8
 11297  000F14  C3ED  F0B7         	movff	_IR_NEC+1,?_sprintf+9
 11298  000F18  C3EE  F0B8         	movff	_IR_NEC+2,?_sprintf+10
 11299  000F1C  C3EF  F0B9         	movff	_IR_NEC+3,?_sprintf+11
 11300  000F20  EC22  F016         	call	_sprintf	;wreg free
 11301                           
 11302                           ;Bluetooth.c: 685: UARTstringCRLN(buf);
 11303  000F24  0E00               	movlw	low UseBluetooth@buf
 11304  000F26  0100               	movlb	0	; () banked
 11305  000F28  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11306  000F2A  0E02               	movlw	high UseBluetooth@buf
 11307  000F2C  0100               	movlb	0	; () banked
 11308  000F2E  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11309  000F30  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 11310                           
 11311                           ;Bluetooth.c: 686: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
 11312  000F34  0E00               	movlw	low UseBluetooth@buf
 11313  000F36  0100               	movlb	0	; () banked
 11314  000F38  6FAE               	movwf	sprintf@sp& (0+255),b
 11315  000F3A  0E02               	movlw	high UseBluetooth@buf
 11316  000F3C  0100               	movlb	0	; () banked
 11317  000F3E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 11318  000F40  0EED               	movlw	low STR_52
 11319  000F42  0100               	movlb	0	; () banked
 11320  000F44  6FB0               	movwf	sprintf@f& (0+255),b
 11321  000F46  0EF4               	movlw	high STR_52
 11322  000F48  0100               	movlb	0	; () banked
 11323  000F4A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 11324  000F4C  C283  F0B2         	movff	UseBluetooth@NecAddress,?_sprintf+4
 11325  000F50  0100               	movlb	0	; () banked
 11326  000F52  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 11327  000F54  C284  F0B4         	movff	UseBluetooth@NecCommand,?_sprintf+6
 11328  000F58  0100               	movlb	0	; () banked
 11329  000F5A  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 11330  000F5C  EC22  F016         	call	_sprintf	;wreg free
 11331                           
 11332                           ;Bluetooth.c: 687: UARTstringCRLN(buf);
 11333  000F60  0E00               	movlw	low UseBluetooth@buf
 11334  000F62  0100               	movlb	0	; () banked
 11335  000F64  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 11336  000F66  0E02               	movlw	high UseBluetooth@buf
 11337  000F68  0100               	movlb	0	; () banked
 11338  000F6A  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11339  000F6C  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 11340                           
 11341                           ;Bluetooth.c: 688: UARTstring_CONST(CRLN);
 11342  000F70  0E5E               	movlw	low _CRLN
 11343  000F72  0100               	movlb	0	; () banked
 11344  000F74  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11345  000F76  0EEF               	movlw	high _CRLN
 11346  000F78  0100               	movlb	0	; () banked
 11347  000F7A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11348  000F7C  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11349                           
 11350                           ;Bluetooth.c: 690: for(i =0;i<10;i++)
 11351  000F80  0E00               	movlw	0
 11352  000F82  0102               	movlb	2	; () banked
 11353  000F84  6F89               	movwf	UseBluetooth@i& (0+255),b
 11354                           
 11355                           ; BSR set to: 2
 11356  000F86  0E09               	movlw	9
 11357  000F88  0102               	movlb	2	; () banked
 11358  000F8A  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 11359  000F8C  D002               	goto	l12980
 11360  000F8E  0012               	return	
 11361                           
 11362                           ; BSR set to: 2
 11363  000F90  0012               	return	
 11364  000F92                     l12980:
 11365                           
 11366                           ; BSR set to: 2
 11367                           ;Bluetooth.c: 691: {
 11368                           ;Bluetooth.c: 692: (LATC |= 0x04);
 11369  000F92  848B               	bsf	3979,2,c	;volatile
 11370                           
 11371                           ; BSR set to: 2
 11372                           ;Bluetooth.c: 693: delayUS(50000);
 11373  000F94  0E50               	movlw	80
 11374  000F96  0100               	movlb	0	; () banked
 11375  000F98  6F60               	movwf	delayUS@US& (0+255),b
 11376  000F9A  0EC3               	movlw	195
 11377  000F9C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 11378  000F9E  0E00               	movlw	0
 11379  000FA0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 11380  000FA2  0E00               	movlw	0
 11381  000FA4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 11382  000FA6  EC96  F053         	call	_delayUS	;wreg free
 11383                           
 11384                           ;Bluetooth.c: 694: (LATC &= ~0x04);
 11385  000FAA  948B               	bcf	3979,2,c	;volatile
 11386                           
 11387                           ;Bluetooth.c: 695: delayUS(50000);
 11388  000FAC  0E50               	movlw	80
 11389  000FAE  0100               	movlb	0	; () banked
 11390  000FB0  6F60               	movwf	delayUS@US& (0+255),b
 11391  000FB2  0EC3               	movlw	195
 11392  000FB4  6F61               	movwf	(delayUS@US+1)& (0+255),b
 11393  000FB6  0E00               	movlw	0
 11394  000FB8  6F62               	movwf	(delayUS@US+2)& (0+255),b
 11395  000FBA  0E00               	movlw	0
 11396  000FBC  6F63               	movwf	(delayUS@US+3)& (0+255),b
 11397  000FBE  EC96  F053         	call	_delayUS	;wreg free
 11398  000FC2  0102               	movlb	2	; () banked
 11399  000FC4  2B89               	incf	UseBluetooth@i& (0+255),f,b
 11400                           
 11401                           ; BSR set to: 2
 11402  000FC6  0E09               	movlw	9
 11403  000FC8  0102               	movlb	2	; () banked
 11404  000FCA  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 11405  000FCC  D7E2               	goto	l12980
 11406  000FCE  0012               	return	
 11407                           
 11408                           ; BSR set to: 2
 11409                           ;Bluetooth.c: 696: }
 11410                           ;Bluetooth.c: 697: return 1;
 11411                           ;	Return value of _UseBluetooth is never used
 11412  000FD0  0012               	return	
 11413                           
 11414                           ; BSR set to: 2
 11415                           ;Bluetooth.c: 698: }
 11416                           ;Bluetooth.c: 699: }
 11417  000FD2  D01A               	goto	l12994
 11418  000FD4                     l12990:
 11419                           
 11420                           ; BSR set to: 2
 11421                           ;Bluetooth.c: 700: else
 11422                           ;Bluetooth.c: 701: {
 11423                           ;Bluetooth.c: 702: UARTstring_CONST(CRLN);
 11424  000FD4  0E5E               	movlw	low _CRLN
 11425  000FD6  0100               	movlb	0	; () banked
 11426  000FD8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11427  000FDA  0EEF               	movlw	high _CRLN
 11428  000FDC  0100               	movlb	0	; () banked
 11429  000FDE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11430  000FE0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11431                           
 11432                           ;Bluetooth.c: 703: UARTstringCRLN_CONST("Error: Remote button number too high");
 11433  000FE4  0EB4               	movlw	low STR_56
 11434  000FE6  0100               	movlb	0	; () banked
 11435  000FE8  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11436  000FEA  0EF6               	movlw	high STR_56
 11437  000FEC  0100               	movlb	0	; () banked
 11438  000FEE  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11439  000FF0  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11440                           
 11441                           ;Bluetooth.c: 704: UARTstring_CONST(CRLN);
 11442  000FF4  0E5E               	movlw	low _CRLN
 11443  000FF6  0100               	movlb	0	; () banked
 11444  000FF8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11445  000FFA  0EEF               	movlw	high _CRLN
 11446  000FFC  0100               	movlb	0	; () banked
 11447  000FFE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11448  001000  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11449                           
 11450                           ;Bluetooth.c: 705: return 0;
 11451                           ;	Return value of _UseBluetooth is never used
 11452  001004  0012               	return	
 11453  001006  D000               	goto	l12994
 11454  001008                     l12994:
 11455                           
 11456                           ;Bluetooth.c: 706: }
 11457                           ;Bluetooth.c: 707: }
 11458                           ;Bluetooth.c: 708: }
 11459                           ;Bluetooth.c: 709: UARTstring_CONST(CRLN);
 11460  001008  0E5E               	movlw	low _CRLN
 11461  00100A  0100               	movlb	0	; () banked
 11462  00100C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11463  00100E  0EEF               	movlw	high _CRLN
 11464  001010  0100               	movlb	0	; () banked
 11465  001012  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11466  001014  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11467                           
 11468                           ;Bluetooth.c: 710: UARTstringCRLN_CONST("Error: Remote button not specified");
 11469  001018  0E20               	movlw	low STR_57
 11470  00101A  0100               	movlb	0	; () banked
 11471  00101C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11472  00101E  0EF7               	movlw	high STR_57
 11473  001020  0100               	movlb	0	; () banked
 11474  001022  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11475  001024  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11476                           
 11477                           ;Bluetooth.c: 711: UARTstring_CONST(CRLN);
 11478  001028  0E5E               	movlw	low _CRLN
 11479  00102A  0100               	movlb	0	; () banked
 11480  00102C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11481  00102E  0EEF               	movlw	high _CRLN
 11482  001030  0100               	movlb	0	; () banked
 11483  001032  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11484  001034  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11485                           
 11486                           ;Bluetooth.c: 712: UARTstringCRLN_CONST("Usage:");
 11487  001038  0E93               	movlw	low STR_41
 11488  00103A  0100               	movlb	0	; () banked
 11489  00103C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11490  00103E  0EFF               	movlw	high STR_41
 11491  001040  0100               	movlb	0	; () banked
 11492  001042  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11493  001044  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11494                           
 11495                           ;Bluetooth.c: 713: UARTstringCRLN_CONST("RemoteButton'x'");
 11496  001048  0E03               	movlw	low STR_59
 11497  00104A  0100               	movlb	0	; () banked
 11498  00104C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11499  00104E  0EFE               	movlw	high STR_59
 11500  001050  0100               	movlb	0	; () banked
 11501  001052  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11502  001054  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11503                           
 11504                           ;Bluetooth.c: 714: UARTstringCRLN_CONST("RemoteButton'x' set");
 11505  001058  0E14               	movlw	low STR_60
 11506  00105A  0100               	movlb	0	; () banked
 11507  00105C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11508  00105E  0EFD               	movlw	high STR_60
 11509  001060  0100               	movlb	0	; () banked
 11510  001062  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11511  001064  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11512                           
 11513                           ;Bluetooth.c: 715: UARTstring_CONST(CRLN);
 11514  001068  0E5E               	movlw	low _CRLN
 11515  00106A  0100               	movlb	0	; () banked
 11516  00106C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11517  00106E  0EEF               	movlw	high _CRLN
 11518  001070  0100               	movlb	0	; () banked
 11519  001072  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11520  001074  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11521                           
 11522                           ;Bluetooth.c: 716: UARTstringCRLN_CONST("Example:");
 11523  001078  0E6B               	movlw	low STR_45
 11524  00107A  0100               	movlb	0	; () banked
 11525  00107C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11526  00107E  0EFF               	movlw	high STR_45
 11527  001080  0100               	movlb	0	; () banked
 11528  001082  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11529  001084  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11530                           
 11531                           ;Bluetooth.c: 717: UARTstringCRLN_CONST("RemoteButton1");
 11532  001088  0E51               	movlw	low STR_62
 11533  00108A  0100               	movlb	0	; () banked
 11534  00108C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11535  00108E  0EFE               	movlw	high STR_62
 11536  001090  0100               	movlb	0	; () banked
 11537  001092  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11538  001094  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11539                           
 11540                           ;Bluetooth.c: 718: UARTstringCRLN_CONST("RemoteButton1 set");
 11541  001098  0EAC               	movlw	low STR_63
 11542  00109A  0100               	movlb	0	; () banked
 11543  00109C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11544  00109E  0EFD               	movlw	high STR_63
 11545  0010A0  0100               	movlb	0	; () banked
 11546  0010A2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11547  0010A4  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 11548                           
 11549                           ;Bluetooth.c: 719: UARTstring_CONST(CRLN);
 11550  0010A8  0E5E               	movlw	low _CRLN
 11551  0010AA  0100               	movlb	0	; () banked
 11552  0010AC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11553  0010AE  0EEF               	movlw	high _CRLN
 11554  0010B0  0100               	movlb	0	; () banked
 11555  0010B2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11556  0010B4  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11557                           
 11558                           ;Bluetooth.c: 721: }
 11559                           
 11560                           ;Bluetooth.c: 720: return 0;
 11561                           ;	Return value of _UseBluetooth is never used
 11562  0010B8  0012               	return	
 11563  0010BA                     l13000:
 11564                           
 11565                           ;Bluetooth.c: 722: else if(StringContainsCaseInsensitive(String,"RF set") || StringConta
      +                          insCaseInsensitive(String,"RF clear"))
 11566  0010BA  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 11567  0010BE  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 11568  0010C2  0EA8               	movlw	low STR_64
 11569  0010C4  0100               	movlb	0	; () banked
 11570  0010C6  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11571  0010C8  0EFF               	movlw	high STR_64
 11572  0010CA  0100               	movlb	0	; () banked
 11573  0010CC  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11574  0010CE  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 11575  0010D2  0900               	iorlw	0
 11576  0010D4  A4D8               	btfss	status,2,c
 11577  0010D6  D010               	goto	l13004
 11578  0010D8  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 11579  0010DC  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 11580  0010E0  0E74               	movlw	low STR_65
 11581  0010E2  0100               	movlb	0	; () banked
 11582  0010E4  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11583  0010E6  0EFF               	movlw	high STR_65
 11584  0010E8  0100               	movlb	0	; () banked
 11585  0010EA  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11586  0010EC  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 11587  0010F0  0900               	iorlw	0
 11588  0010F2  B4D8               	btfsc	status,2,c
 11589  0010F4  EF5E  F00E         	goto	l13370
 11590  0010F8                     l13004:
 11591                           
 11592                           ;Bluetooth.c: 723: {
 11593                           ;Bluetooth.c: 724: if(StringContainsCaseInsensitive(String,"RF set"))
 11594  0010F8  C0E6  F063         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 11595  0010FC  C0E7  F064         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 11596  001100  0EA8               	movlw	low STR_64
 11597  001102  0100               	movlb	0	; () banked
 11598  001104  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11599  001106  0EFF               	movlw	high STR_64
 11600  001108  0100               	movlb	0	; () banked
 11601  00110A  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11602  00110C  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 11603  001110  0900               	iorlw	0
 11604  001112  B4D8               	btfsc	status,2,c
 11605  001114  D1A4               	goto	l13096
 11606                           
 11607                           ;Bluetooth.c: 725: {
 11608                           ;Bluetooth.c: 726: set = 1;
 11609  001116  0E01               	movlw	1
 11610  001118  0102               	movlb	2	; () banked
 11611  00111A  6F6E               	movwf	UseBluetooth@set& (0+255),b
 11612                           
 11613                           ; BSR set to: 2
 11614                           ;Bluetooth.c: 727: if(!WaitForIRsignal())
 11615  00111C  ECA9  F050         	call	_WaitForIRsignal	;wreg free
 11616  001120  0900               	iorlw	0
 11617  001122  B4D8               	btfsc	status,2,c
 11618  001124  0012               	return	
 11619  001126  D001               	goto	l13012
 11620                           
 11621                           ;Bluetooth.c: 728: {
 11622                           ;Bluetooth.c: 729: return 0;
 11623                           ;	Return value of _UseBluetooth is never used
 11624  001128  0012               	return	
 11625  00112A                     l13012:
 11626                           
 11627                           ;Bluetooth.c: 730: }
 11628                           ;Bluetooth.c: 731: UARTstring_CONST(CRLN);
 11629  00112A  0E5E               	movlw	low _CRLN
 11630  00112C  0100               	movlb	0	; () banked
 11631  00112E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11632  001130  0EEF               	movlw	high _CRLN
 11633  001132  0100               	movlb	0	; () banked
 11634  001134  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11635  001136  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11636                           
 11637                           ;Bluetooth.c: 732: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 11638  00113A  C3EC  F064         	movff	_IR_NEC,DecodeNEC@Nec
 11639  00113E  C3ED  F065         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 11640  001142  C3EE  F066         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 11641  001146  C3EF  F067         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 11642  00114A  0E83               	movlw	low UseBluetooth@NecAddress
 11643  00114C  0100               	movlb	0	; () banked
 11644  00114E  6F68               	movwf	DecodeNEC@address& (0+255),b
 11645  001150  0E02               	movlw	high UseBluetooth@NecAddress
 11646  001152  0100               	movlb	0	; () banked
 11647  001154  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 11648  001156  0E84               	movlw	low UseBluetooth@NecCommand
 11649  001158  0100               	movlb	0	; () banked
 11650  00115A  6F6A               	movwf	DecodeNEC@command& (0+255),b
 11651  00115C  0E02               	movlw	high UseBluetooth@NecCommand
 11652  00115E  0100               	movlb	0	; () banked
 11653  001160  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 11654  001162  EC26  F04E         	call	_DecodeNEC	;wreg free
 11655                           
 11656                           ;Bluetooth.c: 733: for(j=0; j < 8; j++)
 11657  001166  0E00               	movlw	0
 11658  001168  0102               	movlb	2	; () banked
 11659  00116A  6F82               	movwf	UseBluetooth@j& (0+255),b
 11660  00116C                     l13018:
 11661                           
 11662                           ; BSR set to: 2
 11663  00116C  0E07               	movlw	7
 11664  00116E  0102               	movlb	2	; () banked
 11665  001170  6582               	cpfsgt	UseBluetooth@j& (0+255),b
 11666  001172  D001               	goto	l13022
 11667                           
 11668                           ; BSR set to: 2
 11669  001174  D127               	goto	l13068
 11670  001176                     l13022:
 11671                           
 11672                           ; BSR set to: 2
 11673                           ;Bluetooth.c: 734: {
 11674                           ;Bluetooth.c: 735: ok = 0;
 11675  001176  0E00               	movlw	0
 11676  001178  0102               	movlb	2	; () banked
 11677  00117A  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 11678                           
 11679                           ;Bluetooth.c: 736: for(i=0; i < 3; i++)
 11680  00117C  0E00               	movlw	0
 11681  00117E  0102               	movlb	2	; () banked
 11682  001180  6F89               	movwf	UseBluetooth@i& (0+255),b
 11683  001182                     l13024:
 11684                           
 11685                           ; BSR set to: 2
 11686  001182  0E02               	movlw	2
 11687  001184  0102               	movlb	2	; () banked
 11688  001186  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 11689  001188  D001               	goto	l13028
 11690                           
 11691                           ; BSR set to: 2
 11692  00118A  D049               	goto	l13040
 11693  00118C                     l13028:
 11694                           
 11695                           ; BSR set to: 2
 11696                           ;Bluetooth.c: 737: {
 11697                           ;Bluetooth.c: 738: if(Global2.RemoteButtonRF[j][i][0] == 0 && Global2.RemoteButtonRF[j][
      +                          i][1] == 0)
 11698  00118C  0102               	movlb	2	; () banked
 11699  00118E  5182               	movf	UseBluetooth@j& (0+255),w,b
 11700  001190  0D06               	mullw	6
 11701  001192  0E9E               	movlw	low _Global2
 11702  001194  0100               	movlb	0	; () banked
 11703  001196  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11704  001198  0E02               	movlw	high _Global2
 11705  00119A  0100               	movlb	0	; () banked
 11706  00119C  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11707  00119E  50F3               	movf	prodl,w,c
 11708  0011A0  0100               	movlb	0	; () banked
 11709  0011A2  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 11710  0011A4  50F4               	movf	prodh,w,c
 11711  0011A6  0100               	movlb	0	; () banked
 11712  0011A8  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11713  0011AA  0102               	movlb	2	; () banked
 11714  0011AC  5189               	movf	UseBluetooth@i& (0+255),w,b
 11715  0011AE  0D02               	mullw	2
 11716  0011B0  50F3               	movf	prodl,w,c
 11717  0011B2  0100               	movlb	0	; () banked
 11718  0011B4  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 11719  0011B6  6ED9               	movwf	fsr2l,c
 11720  0011B8  50F4               	movf	prodh,w,c
 11721  0011BA  0100               	movlb	0	; () banked
 11722  0011BC  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11723  0011BE  6EDA               	movwf	fsr2h,c
 11724  0011C0  50DF               	movf	indf2,w,c
 11725  0011C2  A4D8               	btfss	status,2,c
 11726  0011C4  D029               	goto	l13036
 11727                           
 11728                           ; BSR set to: 0
 11729  0011C6  0102               	movlb	2	; () banked
 11730  0011C8  5182               	movf	UseBluetooth@j& (0+255),w,b
 11731  0011CA  0D06               	mullw	6
 11732  0011CC  0E9E               	movlw	low _Global2
 11733  0011CE  0100               	movlb	0	; () banked
 11734  0011D0  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11735  0011D2  0E02               	movlw	high _Global2
 11736  0011D4  0100               	movlb	0	; () banked
 11737  0011D6  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11738  0011D8  50F3               	movf	prodl,w,c
 11739  0011DA  0100               	movlb	0	; () banked
 11740  0011DC  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 11741  0011DE  50F4               	movf	prodh,w,c
 11742  0011E0  0100               	movlb	0	; () banked
 11743  0011E2  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11744  0011E4  0102               	movlb	2	; () banked
 11745  0011E6  5189               	movf	UseBluetooth@i& (0+255),w,b
 11746  0011E8  0D02               	mullw	2
 11747  0011EA  50F3               	movf	prodl,w,c
 11748  0011EC  0100               	movlb	0	; () banked
 11749  0011EE  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 11750  0011F0  50F4               	movf	prodh,w,c
 11751  0011F2  0100               	movlb	0	; () banked
 11752  0011F4  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11753  0011F6  0E01               	movlw	1
 11754  0011F8  0100               	movlb	0	; () banked
 11755  0011FA  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 11756  0011FC  6ED9               	movwf	fsr2l,c
 11757  0011FE  0E00               	movlw	0
 11758  001200  0100               	movlb	0	; () banked
 11759  001202  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11760  001204  6EDA               	movwf	fsr2h,c
 11761  001206  50DF               	movf	indf2,w,c
 11762  001208  A4D8               	btfss	status,2,c
 11763  00120A  D006               	goto	l13036
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;Bluetooth.c: 739: {
 11767                           ;Bluetooth.c: 740: EmptyPlace = i;
 11768  00120C  C289  F27E         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;Bluetooth.c: 741: ok = 1;
 11772  001210  0E01               	movlw	1
 11773  001212  0102               	movlb	2	; () banked
 11774  001214  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 11775                           
 11776                           ;Bluetooth.c: 742: break;
 11777  001216  D003               	goto	l13040
 11778  001218                     l13036:
 11779  001218  0102               	movlb	2	; () banked
 11780  00121A  2B89               	incf	UseBluetooth@i& (0+255),f,b
 11781  00121C  D7B2               	goto	l13024
 11782  00121E                     l13040:
 11783                           
 11784                           ; BSR set to: 2
 11785                           ;Bluetooth.c: 743: }
 11786                           ;Bluetooth.c: 744: }
 11787                           ;Bluetooth.c: 745: if(!ok)
 11788  00121E  0102               	movlb	2	; () banked
 11789  001220  517D               	movf	UseBluetooth@ok& (0+255),w,b
 11790  001222  0102               	movlb	2	; () banked
 11791  001224  A4D8               	btfss	status,2,c
 11792  001226  D015               	goto	l13044
 11793                           
 11794                           ; BSR set to: 2
 11795                           ;Bluetooth.c: 746: {
 11796                           ;Bluetooth.c: 747: UARTstring_CONST("Error: No space available to save ");
 11797  001228  0EFD               	movlw	low STR_67
 11798  00122A  0100               	movlb	0	; () banked
 11799  00122C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11800  00122E  0EF6               	movlw	high STR_67
 11801  001230  0100               	movlb	0	; () banked
 11802  001232  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11803  001234  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11804                           
 11805                           ;Bluetooth.c: 748: DisplayRF_Channel(j);
 11806  001238  0102               	movlb	2	; () banked
 11807  00123A  5182               	movf	UseBluetooth@j& (0+255),w,b
 11808  00123C  EC75  F04B         	call	_DisplayRF_Channel
 11809                           
 11810                           ;Bluetooth.c: 749: UARTstring_CONST(CRLN);
 11811  001240  0E5E               	movlw	low _CRLN
 11812  001242  0100               	movlb	0	; () banked
 11813  001244  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11814  001246  0EEF               	movlw	high _CRLN
 11815  001248  0100               	movlb	0	; () banked
 11816  00124A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11817  00124C  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11818                           
 11819                           ;Bluetooth.c: 750: }
 11820  001250  D0B6               	goto	l13064
 11821  001252                     l13044:
 11822                           
 11823                           ;Bluetooth.c: 751: else
 11824                           ;Bluetooth.c: 752: {
 11825                           ;Bluetooth.c: 753: if(EmptyPlace)
 11826  001252  0102               	movlb	2	; () banked
 11827  001254  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11828  001256  0102               	movlb	2	; () banked
 11829  001258  B4D8               	btfsc	status,2,c
 11830  00125A  D058               	goto	l13058
 11831                           
 11832                           ; BSR set to: 2
 11833                           ;Bluetooth.c: 754: {
 11834                           ;Bluetooth.c: 756: for(i=0; i < EmptyPlace; i++)
 11835  00125C  0E00               	movlw	0
 11836  00125E  0102               	movlb	2	; () banked
 11837  001260  6F89               	movwf	UseBluetooth@i& (0+255),b
 11838  001262  D04C               	goto	l13056
 11839  001264                     l13048:
 11840                           
 11841                           ; BSR set to: 2
 11842                           ;Bluetooth.c: 757: {
 11843                           ;Bluetooth.c: 758: if(NecAddress == Global2.RemoteButtonRF[j][i][0])
 11844  001264  0102               	movlb	2	; () banked
 11845  001266  5182               	movf	UseBluetooth@j& (0+255),w,b
 11846  001268  0D06               	mullw	6
 11847  00126A  0E9E               	movlw	low _Global2
 11848  00126C  0100               	movlb	0	; () banked
 11849  00126E  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11850  001270  0E02               	movlw	high _Global2
 11851  001272  0100               	movlb	0	; () banked
 11852  001274  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11853  001276  50F3               	movf	prodl,w,c
 11854  001278  0100               	movlb	0	; () banked
 11855  00127A  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 11856  00127C  50F4               	movf	prodh,w,c
 11857  00127E  0100               	movlb	0	; () banked
 11858  001280  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11859  001282  0102               	movlb	2	; () banked
 11860  001284  5189               	movf	UseBluetooth@i& (0+255),w,b
 11861  001286  0D02               	mullw	2
 11862  001288  50F3               	movf	prodl,w,c
 11863  00128A  0100               	movlb	0	; () banked
 11864  00128C  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 11865  00128E  6ED9               	movwf	fsr2l,c
 11866  001290  50F4               	movf	prodh,w,c
 11867  001292  0100               	movlb	0	; () banked
 11868  001294  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11869  001296  6EDA               	movwf	fsr2h,c
 11870  001298  0102               	movlb	2	; () banked
 11871  00129A  5183               	movf	UseBluetooth@NecAddress& (0+255),w,b
 11872  00129C  18DE               	xorwf	postinc2,w,c
 11873  00129E  A4D8               	btfss	status,2,c
 11874  0012A0  D02A               	goto	l13054
 11875                           
 11876                           ; BSR set to: 2
 11877                           ;Bluetooth.c: 759: {
 11878                           ;Bluetooth.c: 760: if(NecCommand == Global2.RemoteButtonRF[j][i][1])
 11879  0012A2  0102               	movlb	2	; () banked
 11880  0012A4  5182               	movf	UseBluetooth@j& (0+255),w,b
 11881  0012A6  0D06               	mullw	6
 11882  0012A8  0E9E               	movlw	low _Global2
 11883  0012AA  0100               	movlb	0	; () banked
 11884  0012AC  6FE9               	movwf	??_UseBluetooth& (0+255),b
 11885  0012AE  0E02               	movlw	high _Global2
 11886  0012B0  0100               	movlb	0	; () banked
 11887  0012B2  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 11888  0012B4  50F3               	movf	prodl,w,c
 11889  0012B6  0100               	movlb	0	; () banked
 11890  0012B8  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 11891  0012BA  50F4               	movf	prodh,w,c
 11892  0012BC  0100               	movlb	0	; () banked
 11893  0012BE  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11894  0012C0  0102               	movlb	2	; () banked
 11895  0012C2  5189               	movf	UseBluetooth@i& (0+255),w,b
 11896  0012C4  0D02               	mullw	2
 11897  0012C6  50F3               	movf	prodl,w,c
 11898  0012C8  0100               	movlb	0	; () banked
 11899  0012CA  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 11900  0012CC  50F4               	movf	prodh,w,c
 11901  0012CE  0100               	movlb	0	; () banked
 11902  0012D0  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11903  0012D2  0E01               	movlw	1
 11904  0012D4  0100               	movlb	0	; () banked
 11905  0012D6  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 11906  0012D8  6ED9               	movwf	fsr2l,c
 11907  0012DA  0E00               	movlw	0
 11908  0012DC  0100               	movlb	0	; () banked
 11909  0012DE  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11910  0012E0  6EDA               	movwf	fsr2h,c
 11911  0012E2  0102               	movlb	2	; () banked
 11912  0012E4  5184               	movf	UseBluetooth@NecCommand& (0+255),w,b
 11913  0012E6  18DE               	xorwf	postinc2,w,c
 11914  0012E8  A4D8               	btfss	status,2,c
 11915  0012EA  D005               	goto	l13054
 11916                           
 11917                           ; BSR set to: 2
 11918                           ;Bluetooth.c: 761: {
 11919                           ;Bluetooth.c: 762: ok = 0;
 11920  0012EC  0E00               	movlw	0
 11921  0012EE  0102               	movlb	2	; () banked
 11922  0012F0  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 11923                           
 11924                           ;Bluetooth.c: 763: break;
 11925  0012F2  D00C               	goto	l13058
 11926                           
 11927                           ; BSR set to: 2
 11928  0012F4  D000               	goto	l13054
 11929  0012F6                     l13054:
 11930                           
 11931                           ; BSR set to: 2
 11932  0012F6  0102               	movlb	2	; () banked
 11933  0012F8  2B89               	incf	UseBluetooth@i& (0+255),f,b
 11934  0012FA  D000               	goto	l13056
 11935  0012FC                     l13056:
 11936                           
 11937                           ; BSR set to: 2
 11938  0012FC  0102               	movlb	2	; () banked
 11939  0012FE  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11940  001300  0102               	movlb	2	; () banked
 11941  001302  5D89               	subwf	UseBluetooth@i& (0+255),w,b
 11942  001304  B0D8               	btfsc	status,0,c
 11943  001306  D002               	goto	l13058
 11944  001308  D7AD               	goto	l13048
 11945                           
 11946                           ; BSR set to: 2
 11947  00130A  D000               	goto	l13058
 11948  00130C                     l13058:
 11949                           
 11950                           ; BSR set to: 2
 11951                           ;Bluetooth.c: 764: }
 11952                           ;Bluetooth.c: 765: }
 11953                           ;Bluetooth.c: 766: }
 11954                           ;Bluetooth.c: 767: }
 11955                           ;Bluetooth.c: 768: if(!ok)
 11956  00130C  0102               	movlb	2	; () banked
 11957  00130E  517D               	movf	UseBluetooth@ok& (0+255),w,b
 11958  001310  0102               	movlb	2	; () banked
 11959  001312  A4D8               	btfss	status,2,c
 11960  001314  D015               	goto	l13062
 11961                           
 11962                           ; BSR set to: 2
 11963                           ;Bluetooth.c: 769: {
 11964                           ;Bluetooth.c: 770: UARTstring_CONST("Error: NEC code already saved to ");
 11965  001316  0E89               	movlw	low STR_68
 11966  001318  0100               	movlb	0	; () banked
 11967  00131A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11968  00131C  0EF7               	movlw	high STR_68
 11969  00131E  0100               	movlb	0	; () banked
 11970  001320  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11971  001322  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11972                           
 11973                           ;Bluetooth.c: 771: DisplayRF_Channel(j);
 11974  001326  0102               	movlb	2	; () banked
 11975  001328  5182               	movf	UseBluetooth@j& (0+255),w,b
 11976  00132A  EC75  F04B         	call	_DisplayRF_Channel
 11977                           
 11978                           ;Bluetooth.c: 772: UARTstring_CONST(CRLN);
 11979  00132E  0E5E               	movlw	low _CRLN
 11980  001330  0100               	movlb	0	; () banked
 11981  001332  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 11982  001334  0EEF               	movlw	high _CRLN
 11983  001336  0100               	movlb	0	; () banked
 11984  001338  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11985  00133A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 11986                           
 11987                           ;Bluetooth.c: 773: }
 11988  00133E  D03F               	goto	l13064
 11989  001340                     l13062:
 11990                           
 11991                           ;Bluetooth.c: 774: else
 11992                           ;Bluetooth.c: 775: {
 11993                           ;Bluetooth.c: 777: Global2.RemoteButtonRF[j][EmptyPlace][0] = NecAddress;
 11994  001340  0102               	movlb	2	; () banked
 11995  001342  5182               	movf	UseBluetooth@j& (0+255),w,b
 11996  001344  0D06               	mullw	6
 11997  001346  0E9E               	movlw	low _Global2
 11998  001348  0100               	movlb	0	; () banked
 11999  00134A  6FE9               	movwf	??_UseBluetooth& (0+255),b
 12000  00134C  0E02               	movlw	high _Global2
 12001  00134E  0100               	movlb	0	; () banked
 12002  001350  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 12003  001352  50F3               	movf	prodl,w,c
 12004  001354  0100               	movlb	0	; () banked
 12005  001356  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 12006  001358  50F4               	movf	prodh,w,c
 12007  00135A  0100               	movlb	0	; () banked
 12008  00135C  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12009  00135E  0102               	movlb	2	; () banked
 12010  001360  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12011  001362  0D02               	mullw	2
 12012  001364  50F3               	movf	prodl,w,c
 12013  001366  0100               	movlb	0	; () banked
 12014  001368  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 12015  00136A  6ED9               	movwf	fsr2l,c
 12016  00136C  50F4               	movf	prodh,w,c
 12017  00136E  0100               	movlb	0	; () banked
 12018  001370  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12019  001372  6EDA               	movwf	fsr2h,c
 12020  001374  C283  FFDF         	movff	UseBluetooth@NecAddress,indf2
 12021                           
 12022                           ;Bluetooth.c: 778: Global2.RemoteButtonRF[j][EmptyPlace][1] = NecCommand;
 12023  001378  0102               	movlb	2	; () banked
 12024  00137A  5182               	movf	UseBluetooth@j& (0+255),w,b
 12025  00137C  0D06               	mullw	6
 12026  00137E  0E9E               	movlw	low _Global2
 12027  001380  0100               	movlb	0	; () banked
 12028  001382  6FE9               	movwf	??_UseBluetooth& (0+255),b
 12029  001384  0E02               	movlw	high _Global2
 12030  001386  0100               	movlb	0	; () banked
 12031  001388  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 12032  00138A  50F3               	movf	prodl,w,c
 12033  00138C  0100               	movlb	0	; () banked
 12034  00138E  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 12035  001390  50F4               	movf	prodh,w,c
 12036  001392  0100               	movlb	0	; () banked
 12037  001394  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12038  001396  0102               	movlb	2	; () banked
 12039  001398  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12040  00139A  0D02               	mullw	2
 12041  00139C  50F3               	movf	prodl,w,c
 12042  00139E  0100               	movlb	0	; () banked
 12043  0013A0  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 12044  0013A2  50F4               	movf	prodh,w,c
 12045  0013A4  0100               	movlb	0	; () banked
 12046  0013A6  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12047  0013A8  0E01               	movlw	1
 12048  0013AA  0100               	movlb	0	; () banked
 12049  0013AC  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 12050  0013AE  6ED9               	movwf	fsr2l,c
 12051  0013B0  0E00               	movlw	0
 12052  0013B2  0100               	movlb	0	; () banked
 12053  0013B4  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12054  0013B6  6EDA               	movwf	fsr2h,c
 12055  0013B8  C284  FFDF         	movff	UseBluetooth@NecCommand,indf2
 12056                           
 12057                           ; BSR set to: 0
 12058  0013BC  D000               	goto	l13064
 12059  0013BE                     l13064:
 12060  0013BE  0102               	movlb	2	; () banked
 12061  0013C0  2B82               	incf	UseBluetooth@j& (0+255),f,b
 12062  0013C2  D6D4               	goto	l13018
 12063  0013C4                     l13068:
 12064                           
 12065                           ; BSR set to: 2
 12066                           ;Bluetooth.c: 779: }
 12067                           ;Bluetooth.c: 780: }
 12068                           ;Bluetooth.c: 781: }
 12069                           ;Bluetooth.c: 783: SyncGlobalToEEPROM();
 12070  0013C4  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 12071                           
 12072                           ;Bluetooth.c: 786: for(i =0;i<10;i++)
 12073  0013C8  0E00               	movlw	0
 12074  0013CA  0102               	movlb	2	; () banked
 12075  0013CC  6F89               	movwf	UseBluetooth@i& (0+255),b
 12076  0013CE                     l13072:
 12077                           
 12078                           ; BSR set to: 2
 12079  0013CE  0E09               	movlw	9
 12080  0013D0  0102               	movlb	2	; () banked
 12081  0013D2  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 12082  0013D4  D001               	goto	l13076
 12083                           
 12084                           ; BSR set to: 2
 12085  0013D6  D01B               	goto	l13086
 12086  0013D8                     l13076:
 12087                           
 12088                           ; BSR set to: 2
 12089                           ;Bluetooth.c: 787: {
 12090                           ;Bluetooth.c: 788: (LATC |= 0x04);
 12091  0013D8  848B               	bsf	3979,2,c	;volatile
 12092                           
 12093                           ; BSR set to: 2
 12094                           ;Bluetooth.c: 789: delayUS(50000);
 12095  0013DA  0E50               	movlw	80
 12096  0013DC  0100               	movlb	0	; () banked
 12097  0013DE  6F60               	movwf	delayUS@US& (0+255),b
 12098  0013E0  0EC3               	movlw	195
 12099  0013E2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 12100  0013E4  0E00               	movlw	0
 12101  0013E6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 12102  0013E8  0E00               	movlw	0
 12103  0013EA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 12104  0013EC  EC96  F053         	call	_delayUS	;wreg free
 12105                           
 12106                           ;Bluetooth.c: 790: (LATC &= ~0x04);
 12107  0013F0  948B               	bcf	3979,2,c	;volatile
 12108                           
 12109                           ;Bluetooth.c: 791: delayUS(50000);
 12110  0013F2  0E50               	movlw	80
 12111  0013F4  0100               	movlb	0	; () banked
 12112  0013F6  6F60               	movwf	delayUS@US& (0+255),b
 12113  0013F8  0EC3               	movlw	195
 12114  0013FA  6F61               	movwf	(delayUS@US+1)& (0+255),b
 12115  0013FC  0E00               	movlw	0
 12116  0013FE  6F62               	movwf	(delayUS@US+2)& (0+255),b
 12117  001400  0E00               	movlw	0
 12118  001402  6F63               	movwf	(delayUS@US+3)& (0+255),b
 12119  001404  EC96  F053         	call	_delayUS	;wreg free
 12120  001408  0102               	movlb	2	; () banked
 12121  00140A  2B89               	incf	UseBluetooth@i& (0+255),f,b
 12122  00140C  D7E0               	goto	l13072
 12123  00140E                     l13086:
 12124                           
 12125                           ; BSR set to: 2
 12126                           ;Bluetooth.c: 792: }
 12127                           ;Bluetooth.c: 793: sprintf(buf,"NEC code 0x%lX now transmits all RF codes",IR_NEC);
 12128  00140E  0E00               	movlw	low UseBluetooth@buf
 12129  001410  0100               	movlb	0	; () banked
 12130  001412  6FAE               	movwf	sprintf@sp& (0+255),b
 12131  001414  0E02               	movlw	high UseBluetooth@buf
 12132  001416  0100               	movlb	0	; () banked
 12133  001418  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 12134  00141A  0EC9               	movlw	low STR_69
 12135  00141C  0100               	movlb	0	; () banked
 12136  00141E  6FB0               	movwf	sprintf@f& (0+255),b
 12137  001420  0EF5               	movlw	high STR_69
 12138  001422  0100               	movlb	0	; () banked
 12139  001424  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 12140  001426  C3EC  F0B2         	movff	_IR_NEC,?_sprintf+4
 12141  00142A  C3ED  F0B3         	movff	_IR_NEC+1,?_sprintf+5
 12142  00142E  C3EE  F0B4         	movff	_IR_NEC+2,?_sprintf+6
 12143  001432  C3EF  F0B5         	movff	_IR_NEC+3,?_sprintf+7
 12144  001436  EC22  F016         	call	_sprintf	;wreg free
 12145                           
 12146                           ;Bluetooth.c: 794: UARTstringCRLN(buf);
 12147  00143A  0E00               	movlw	low UseBluetooth@buf
 12148  00143C  0100               	movlb	0	; () banked
 12149  00143E  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 12150  001440  0E02               	movlw	high UseBluetooth@buf
 12151  001442  0100               	movlb	0	; () banked
 12152  001444  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12153  001446  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 12154                           
 12155                           ;Bluetooth.c: 795: UARTstring_CONST(CRLN);
 12156  00144A  0E5E               	movlw	low _CRLN
 12157  00144C  0100               	movlb	0	; () banked
 12158  00144E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12159  001450  0EEF               	movlw	high _CRLN
 12160  001452  0100               	movlb	0	; () banked
 12161  001454  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12162  001456  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12163                           
 12164                           ;Bluetooth.c: 796: return 1;
 12165                           ;	Return value of _UseBluetooth is never used
 12166  00145A  0012               	return	
 12167                           
 12168                           ;Bluetooth.c: 797: }
 12169  00145C  D004               	goto	l13098
 12170  00145E                     l13096:
 12171                           
 12172                           ;Bluetooth.c: 798: else
 12173                           ;Bluetooth.c: 799: {
 12174                           ;Bluetooth.c: 800: set = 0;
 12175  00145E  0E00               	movlw	0
 12176  001460  0102               	movlb	2	; () banked
 12177  001462  6F6E               	movwf	UseBluetooth@set& (0+255),b
 12178  001464  D000               	goto	l13098
 12179  001466                     l13098:
 12180                           
 12181                           ;Bluetooth.c: 801: }
 12182                           ;Bluetooth.c: 802: if(!StringAddEqual(String))
 12183  001466  C0E6  F06F         	movff	UseBluetooth@String,StringAddEqual@Input
 12184  00146A  C0E7  F070         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 12185  00146E  EC83  F03B         	call	_StringAddEqual	;wreg free
 12186  001472  0900               	iorlw	0
 12187  001474  A4D8               	btfss	status,2,c
 12188  001476  D011               	goto	l13104
 12189                           
 12190                           ;Bluetooth.c: 803: {
 12191                           ;Bluetooth.c: 804: UARTstringCRLN_CONST("Error: No RF configuration specified");
 12192  001478  0E6A               	movlw	low STR_70
 12193  00147A  0100               	movlb	0	; () banked
 12194  00147C  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12195  00147E  0EF6               	movlw	high STR_70
 12196  001480  0100               	movlb	0	; () banked
 12197  001482  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12198  001484  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12199                           
 12200                           ;Bluetooth.c: 805: UARTstring_CONST(CRLN);
 12201  001488  0E5E               	movlw	low _CRLN
 12202  00148A  0100               	movlb	0	; () banked
 12203  00148C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12204  00148E  0EEF               	movlw	high _CRLN
 12205  001490  0100               	movlb	0	; () banked
 12206  001492  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12207  001494  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12208                           
 12209                           ;Bluetooth.c: 806: return 0;
 12210                           ;	Return value of _UseBluetooth is never used
 12211  001498  0012               	return	
 12212  00149A                     l13104:
 12213                           
 12214                           ;Bluetooth.c: 807: }
 12215                           ;Bluetooth.c: 808: StringPos++;
 12216  00149A  0100               	movlb	0	; () banked
 12217  00149C  2BE8               	incf	UseBluetooth@StringPos& (0+255),f,b
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;Bluetooth.c: 809: UARTstring_CONST(CRLN);
 12221  00149E  0E5E               	movlw	low _CRLN
 12222  0014A0  0100               	movlb	0	; () banked
 12223  0014A2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12224  0014A4  0EEF               	movlw	high _CRLN
 12225  0014A6  0100               	movlb	0	; () banked
 12226  0014A8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12227  0014AA  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12228                           
 12229                           ;Bluetooth.c: 810: if(!GetNumberUnsigned(String, 1, &temp))
 12230  0014AE  C0E6  F06C         	movff	UseBluetooth@String,GetNumberUnsigned@This
 12231  0014B2  C0E7  F06D         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 12232  0014B6  0E01               	movlw	1
 12233  0014B8  0100               	movlb	0	; () banked
 12234  0014BA  6F6E               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 12235  0014BC  0E85               	movlw	low UseBluetooth@temp
 12236  0014BE  0100               	movlb	0	; () banked
 12237  0014C0  6F6F               	movwf	GetNumberUnsigned@result& (0+255),b
 12238  0014C2  0E02               	movlw	high UseBluetooth@temp
 12239  0014C4  0100               	movlb	0	; () banked
 12240  0014C6  6F70               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 12241  0014C8  ECA7  F032         	call	_GetNumberUnsigned	;wreg free
 12242  0014CC  0900               	iorlw	0
 12243  0014CE  A4D8               	btfss	status,2,c
 12244  0014D0  D003               	goto	l13112
 12245                           
 12246                           ;Bluetooth.c: 811: {
 12247                           ;Bluetooth.c: 812: rfconf = (unsigned char) temp;
 12248  0014D2  C285  F281         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 12249                           
 12250                           ;Bluetooth.c: 813: }
 12251  0014D6  D011               	goto	l13116
 12252  0014D8                     l13112:
 12253                           
 12254                           ;Bluetooth.c: 814: else
 12255                           ;Bluetooth.c: 815: {
 12256                           ;Bluetooth.c: 816: UARTstringCRLN_CONST("Error: No RF configuration specified");
 12257  0014D8  0E6A               	movlw	low STR_70
 12258  0014DA  0100               	movlb	0	; () banked
 12259  0014DC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12260  0014DE  0EF6               	movlw	high STR_70
 12261  0014E0  0100               	movlb	0	; () banked
 12262  0014E2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12263  0014E4  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12264                           
 12265                           ;Bluetooth.c: 817: UARTstring_CONST(CRLN);
 12266  0014E8  0E5E               	movlw	low _CRLN
 12267  0014EA  0100               	movlb	0	; () banked
 12268  0014EC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12269  0014EE  0EEF               	movlw	high _CRLN
 12270  0014F0  0100               	movlb	0	; () banked
 12271  0014F2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12272  0014F4  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12273                           
 12274                           ;Bluetooth.c: 818: return 0;
 12275                           ;	Return value of _UseBluetooth is never used
 12276  0014F8  0012               	return	
 12277  0014FA                     l13116:
 12278                           
 12279                           ;Bluetooth.c: 819: }
 12280                           ;Bluetooth.c: 820: if(rfconf <= 0 || rfconf > 2)
 12281  0014FA  0102               	movlb	2	; () banked
 12282  0014FC  5181               	movf	UseBluetooth@rfconf& (0+255),w,b
 12283  0014FE  0102               	movlb	2	; () banked
 12284  001500  B4D8               	btfsc	status,2,c
 12285  001502  D005               	goto	l13120
 12286                           
 12287                           ; BSR set to: 2
 12288  001504  0E02               	movlw	2
 12289  001506  0102               	movlb	2	; () banked
 12290  001508  6581               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 12291  00150A  D012               	goto	l13124
 12292  00150C  D000               	goto	l13120
 12293  00150E                     l13120:
 12294                           
 12295                           ; BSR set to: 2
 12296                           ;Bluetooth.c: 821: {
 12297                           ;Bluetooth.c: 822: UARTstringCRLN_CONST("Error: RF configuration out of range");
 12298  00150E  0E8F               	movlw	low STR_72
 12299  001510  0100               	movlb	0	; () banked
 12300  001512  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12301  001514  0EF6               	movlw	high STR_72
 12302  001516  0100               	movlb	0	; () banked
 12303  001518  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12304  00151A  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12305                           
 12306                           ;Bluetooth.c: 823: UARTstring_CONST(CRLN);
 12307  00151E  0E5E               	movlw	low _CRLN
 12308  001520  0100               	movlb	0	; () banked
 12309  001522  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12310  001524  0EEF               	movlw	high _CRLN
 12311  001526  0100               	movlb	0	; () banked
 12312  001528  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12313  00152A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12314                           
 12315                           ;Bluetooth.c: 824: return 0;
 12316                           ;	Return value of _UseBluetooth is never used
 12317  00152E  0012               	return	
 12318  001530                     l13124:
 12319                           
 12320                           ;Bluetooth.c: 825: }
 12321                           ;Bluetooth.c: 826: if(GetStringAfterComma(String, 1, rfchannelSTR))
 12322  001530  C0E6  F060         	movff	UseBluetooth@String,GetStringAfterComma@This
 12323  001534  C0E7  F061         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 12324  001538  0E01               	movlw	1
 12325  00153A  0100               	movlb	0	; () banked
 12326  00153C  6F62               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 12327  00153E  0E64               	movlw	low UseBluetooth@rfchannelSTR
 12328  001540  0100               	movlb	0	; () banked
 12329  001542  6F63               	movwf	GetStringAfterComma@result& (0+255),b
 12330  001544  0E02               	movlw	high UseBluetooth@rfchannelSTR
 12331  001546  0100               	movlb	0	; () banked
 12332  001548  6F64               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 12333  00154A  EC09  F047         	call	_GetStringAfterComma	;wreg free
 12334  00154E  0900               	iorlw	0
 12335  001550  B4D8               	btfsc	status,2,c
 12336  001552  D011               	goto	l13132
 12337                           
 12338                           ;Bluetooth.c: 827: {
 12339                           ;Bluetooth.c: 828: UARTstringCRLN_CONST("Error: No RF channel specified");
 12340  001554  0E8C               	movlw	low STR_73
 12341  001556  0100               	movlb	0	; () banked
 12342  001558  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12343  00155A  0EF9               	movlw	high STR_73
 12344  00155C  0100               	movlb	0	; () banked
 12345  00155E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12346  001560  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12347                           
 12348                           ;Bluetooth.c: 829: UARTstring_CONST(CRLN);
 12349  001564  0E5E               	movlw	low _CRLN
 12350  001566  0100               	movlb	0	; () banked
 12351  001568  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12352  00156A  0EEF               	movlw	high _CRLN
 12353  00156C  0100               	movlb	0	; () banked
 12354  00156E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12355  001570  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12356                           
 12357                           ;Bluetooth.c: 831: }
 12358                           
 12359                           ;Bluetooth.c: 830: return 0;
 12360                           ;	Return value of _UseBluetooth is never used
 12361  001574  0012               	return	
 12362  001576                     l13132:
 12363                           
 12364                           ;Bluetooth.c: 832: else
 12365                           ;Bluetooth.c: 833: {
 12366                           ;Bluetooth.c: 834: lowercaseString(rfchannelSTR);
 12367  001576  0E64               	movlw	low UseBluetooth@rfchannelSTR
 12368  001578  0100               	movlb	0	; () banked
 12369  00157A  6F60               	movwf	lowercaseString@Input& (0+255),b
 12370  00157C  0E02               	movlw	high UseBluetooth@rfchannelSTR
 12371  00157E  0100               	movlb	0	; () banked
 12372  001580  6F61               	movwf	(lowercaseString@Input+1)& (0+255),b
 12373  001582  EC37  F054         	call	_lowercaseString	;wreg free
 12374                           
 12375                           ;Bluetooth.c: 835: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 12376  001586  0102               	movlb	2	; () banked
 12377  001588  5165               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 12378  00158A  B4D8               	btfsc	status,2,c
 12379  00158C  D005               	goto	l13138
 12380                           
 12381                           ; BSR set to: 2
 12382  00158E  0E20               	movlw	32
 12383  001590  0102               	movlb	2	; () banked
 12384  001592  1965               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 12385  001594  A4D8               	btfss	status,2,c
 12386  001596  D381               	goto	l13366
 12387  001598                     l13138:
 12388                           
 12389                           ; BSR set to: 2
 12390                           ;Bluetooth.c: 836: {
 12391                           ;Bluetooth.c: 837: rfchannelSTR[1] = 0;
 12392  001598  0E00               	movlw	0
 12393  00159A  0102               	movlb	2	; () banked
 12394  00159C  6F65               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 12395                           
 12396                           ; BSR set to: 2
 12397                           ;Bluetooth.c: 838: if(rfconf == 1)
 12398  00159E  0102               	movlb	2	; () banked
 12399  0015A0  0581               	decf	UseBluetooth@rfconf& (0+255),w,b
 12400  0015A2  A4D8               	btfss	status,2,c
 12401  0015A4  D015               	goto	l13146
 12402                           
 12403                           ; BSR set to: 2
 12404                           ;Bluetooth.c: 839: {
 12405                           ;Bluetooth.c: 840: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 12406  0015A6  0E52               	movlw	low _Conf1_Channels
 12407  0015A8  0100               	movlb	0	; () banked
 12408  0015AA  6F63               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 12409  0015AC  0EEF               	movlw	high _Conf1_Channels
 12410  0015AE  0100               	movlb	0	; () banked
 12411  0015B0  6F64               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 12412  0015B2  0E64               	movlw	low UseBluetooth@rfchannelSTR
 12413  0015B4  0100               	movlb	0	; () banked
 12414  0015B6  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 12415  0015B8  0E02               	movlw	high UseBluetooth@rfchannelSTR
 12416  0015BA  0100               	movlb	0	; () banked
 12417  0015BC  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 12418  0015BE  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 12419  0015C2  0900               	iorlw	0
 12420  0015C4  A4D8               	btfss	status,2,c
 12421  0015C6  D019               	goto	l2208
 12422                           
 12423                           ;Bluetooth.c: 841: {
 12424                           ;Bluetooth.c: 842: ok = 0;
 12425  0015C8  0E00               	movlw	0
 12426  0015CA  0102               	movlb	2	; () banked
 12427  0015CC  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 12428                           
 12429                           ; BSR set to: 2
 12430                           ;Bluetooth.c: 843: }
 12431                           ;Bluetooth.c: 844: }
 12432  0015CE  D015               	goto	l2208
 12433  0015D0                     l13146:
 12434                           
 12435                           ; BSR set to: 2
 12436                           ;Bluetooth.c: 845: else if(rfconf == 2)
 12437  0015D0  0E02               	movlw	2
 12438  0015D2  0102               	movlb	2	; () banked
 12439  0015D4  1981               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 12440  0015D6  A4D8               	btfss	status,2,c
 12441  0015D8  D010               	goto	l2208
 12442                           
 12443                           ; BSR set to: 2
 12444                           ;Bluetooth.c: 846: {
 12445                           ;Bluetooth.c: 847: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 12446  0015DA  0E56               	movlw	low _Conf2_Channels
 12447  0015DC  0100               	movlb	0	; () banked
 12448  0015DE  6F63               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 12449  0015E0  0EEF               	movlw	high _Conf2_Channels
 12450  0015E2  0100               	movlb	0	; () banked
 12451  0015E4  6F64               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 12452  0015E6  0E64               	movlw	low UseBluetooth@rfchannelSTR
 12453  0015E8  0100               	movlb	0	; () banked
 12454  0015EA  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 12455  0015EC  0E02               	movlw	high UseBluetooth@rfchannelSTR
 12456  0015EE  0100               	movlb	0	; () banked
 12457  0015F0  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 12458  0015F2  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 12459  0015F6  D7E5               	goto	L8
 12460                           
 12461                           ; BSR set to: 2
 12462                           
 12463                           ;Bluetooth.c: 848: {
 12464                           ;Bluetooth.c: 849: ok = 0;
 12465  0015F8  D000               	goto	l2208
 12466  0015FA                     l2208:
 12467                           
 12468                           ;Bluetooth.c: 850: }
 12469                           ;Bluetooth.c: 851: }
 12470                           ;Bluetooth.c: 852: if(!ok)
 12471  0015FA  0102               	movlb	2	; () banked
 12472  0015FC  517D               	movf	UseBluetooth@ok& (0+255),w,b
 12473  0015FE  0102               	movlb	2	; () banked
 12474  001600  A4D8               	btfss	status,2,c
 12475  001602  D011               	goto	l13156
 12476                           
 12477                           ; BSR set to: 2
 12478                           ;Bluetooth.c: 853: {
 12479                           ;Bluetooth.c: 854: UARTstringCRLN_CONST("Error: RF channel out of range");
 12480  001604  0EAB               	movlw	low STR_74
 12481  001606  0100               	movlb	0	; () banked
 12482  001608  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12483  00160A  0EF9               	movlw	high STR_74
 12484  00160C  0100               	movlb	0	; () banked
 12485  00160E  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12486  001610  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12487                           
 12488                           ;Bluetooth.c: 855: UARTstring_CONST(CRLN);
 12489  001614  0E5E               	movlw	low _CRLN
 12490  001616  0100               	movlb	0	; () banked
 12491  001618  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12492  00161A  0EEF               	movlw	high _CRLN
 12493  00161C  0100               	movlb	0	; () banked
 12494  00161E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12495  001620  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12496                           
 12497                           ;Bluetooth.c: 856: return 0;
 12498                           ;	Return value of _UseBluetooth is never used
 12499  001624  0012               	return	
 12500  001626                     l13156:
 12501                           
 12502                           ;Bluetooth.c: 857: }
 12503                           ;Bluetooth.c: 859: if(rfconf == 1)
 12504  001626  0102               	movlb	2	; () banked
 12505  001628  0581               	decf	UseBluetooth@rfconf& (0+255),w,b
 12506  00162A  A4D8               	btfss	status,2,c
 12507  00162C  D017               	goto	l13170
 12508                           
 12509                           ; BSR set to: 2
 12510                           ;Bluetooth.c: 860: {
 12511                           ;Bluetooth.c: 861: if(rfchannelSTR[0] == 'd')
 12512  00162E  0E64               	movlw	100
 12513  001630  0102               	movlb	2	; () banked
 12514  001632  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12515  001634  A4D8               	btfss	status,2,c
 12516  001636  D002               	goto	l13162
 12517                           
 12518                           ; BSR set to: 2
 12519                           ;Bluetooth.c: 862: {
 12520                           ;Bluetooth.c: 863: tempRFArray = 0;
 12521  001638  0E00               	movlw	0
 12522  00163A  D022               	goto	L7
 12523  00163C                     l13162:
 12524                           
 12525                           ; BSR set to: 2
 12526                           ;Bluetooth.c: 865: else if(rfchannelSTR[0] == 'e')
 12527  00163C  0E65               	movlw	101
 12528  00163E  0102               	movlb	2	; () banked
 12529  001640  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12530  001642  A4D8               	btfss	status,2,c
 12531  001644  D002               	goto	l13166
 12532                           
 12533                           ; BSR set to: 2
 12534                           ;Bluetooth.c: 866: {
 12535                           ;Bluetooth.c: 867: tempRFArray = 1;
 12536  001646  0E01               	movlw	1
 12537  001648  D01B               	goto	L7
 12538  00164A                     l13166:
 12539                           
 12540                           ; BSR set to: 2
 12541                           ;Bluetooth.c: 869: else if(rfchannelSTR[0] == 'f')
 12542  00164A  0E66               	movlw	102
 12543  00164C  0102               	movlb	2	; () banked
 12544  00164E  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12545  001650  A4D8               	btfss	status,2,c
 12546  001652  0012               	return	
 12547                           
 12548                           ; BSR set to: 2
 12549                           ;Bluetooth.c: 870: {
 12550                           ;Bluetooth.c: 871: tempRFArray = 2;
 12551  001654  0E02               	movlw	2
 12552  001656  D014               	goto	L7
 12553                           
 12554                           ; BSR set to: 2
 12555                           ;Bluetooth.c: 873: else
 12556                           ;Bluetooth.c: 874: {
 12557                           ;Bluetooth.c: 876: return 0;
 12558                           ;	Return value of _UseBluetooth is never used
 12559                           
 12560                           ;Bluetooth.c: 872: }
 12561  001658  0012               	return	
 12562                           
 12563                           ; BSR set to: 2
 12564                           ;Bluetooth.c: 877: }
 12565                           ;Bluetooth.c: 878: }
 12566                           
 12567                           ; BSR set to: 2
 12568                           
 12569                           ; BSR set to: 2
 12570  00165A  D0AD               	goto	l13238
 12571  00165C                     l13170:
 12572                           
 12573                           ; BSR set to: 2
 12574                           ;Bluetooth.c: 879: else if(rfconf ==2)
 12575  00165C  0E02               	movlw	2
 12576  00165E  0102               	movlb	2	; () banked
 12577  001660  1981               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 12578  001662  A4D8               	btfss	status,2,c
 12579  001664  D0A8               	goto	l13238
 12580                           
 12581                           ; BSR set to: 2
 12582                           ;Bluetooth.c: 880: {
 12583                           ;Bluetooth.c: 881: if(rfchannelSTR[0] == 'b')
 12584  001666  0E62               	movlw	98
 12585  001668  0102               	movlb	2	; () banked
 12586  00166A  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12587  00166C  A4D8               	btfss	status,2,c
 12588  00166E  D002               	goto	l13176
 12589                           
 12590                           ; BSR set to: 2
 12591                           ;Bluetooth.c: 882: {
 12592                           ;Bluetooth.c: 883: tempRFArray = 3;
 12593  001670  0E03               	movlw	3
 12594  001672  D006               	goto	L7
 12595  001674                     l13176:
 12596                           
 12597                           ; BSR set to: 2
 12598                           ;Bluetooth.c: 885: else if(rfchannelSTR[0] == 'd')
 12599  001674  0E64               	movlw	100
 12600  001676  0102               	movlb	2	; () banked
 12601  001678  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12602  00167A  A4D8               	btfss	status,2,c
 12603  00167C  D004               	goto	l13180
 12604                           
 12605                           ; BSR set to: 2
 12606                           ;Bluetooth.c: 886: {
 12607                           ;Bluetooth.c: 887: tempRFArray = 4;
 12608  00167E  0E04               	movlw	4
 12609  001680                     L7:
 12610  001680  0102               	movlb	2	; () banked
 12611  001682  6F7F               	movwf	UseBluetooth@tempRFArray& (0+255),b
 12612                           
 12613                           ;Bluetooth.c: 888: }
 12614  001684  D098               	goto	l13238
 12615  001686                     l13180:
 12616                           
 12617                           ; BSR set to: 2
 12618                           ;Bluetooth.c: 889: else if(rfchannelSTR[0] == 'h')
 12619  001686  0E68               	movlw	104
 12620  001688  0102               	movlb	2	; () banked
 12621  00168A  1964               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 12622  00168C  A4D8               	btfss	status,2,c
 12623  00168E  0012               	return	
 12624                           
 12625                           ; BSR set to: 2
 12626                           ;Bluetooth.c: 890: {
 12627                           ;Bluetooth.c: 891: cleanBuffer(ReceivedString, ReceivedStringPos);
 12628  001690  0E64               	movlw	low _ReceivedString
 12629  001692  0100               	movlb	0	; () banked
 12630  001694  6F60               	movwf	cleanBuffer@data& (0+255),b
 12631  001696  0E04               	movlw	high _ReceivedString
 12632  001698  0100               	movlb	0	; () banked
 12633  00169A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 12634  00169C  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12635  0016A0  0100               	movlb	0	; () banked
 12636  0016A2  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 12637  0016A4  EC3D  F053         	call	_cleanBuffer	;wreg free
 12638                           
 12639                           ;Bluetooth.c: 892: ReceivedStringPos = 0;
 12640  0016A8  0E00               	movlw	0
 12641  0016AA  0103               	movlb	3	; () banked
 12642  0016AC  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12643                           
 12644                           ; BSR set to: 3
 12645                           ;Bluetooth.c: 893: NewReceivedString = 0;
 12646  0016AE  0E00               	movlw	0
 12647  0016B0  0103               	movlb	3	; () banked
 12648  0016B2  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 12649                           
 12650                           ; BSR set to: 3
 12651                           ;Bluetooth.c: 894: UARTstring_CONST("Which device?");
 12652  0016B4  0E5F               	movlw	low STR_75
 12653  0016B6  0100               	movlb	0	; () banked
 12654  0016B8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12655  0016BA  0EFE               	movlw	high STR_75
 12656  0016BC  0100               	movlb	0	; () banked
 12657  0016BE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12658  0016C0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12659                           
 12660                           ;Bluetooth.c: 895: UARTstring_CONST(CRLN);
 12661  0016C4  0E5E               	movlw	low _CRLN
 12662  0016C6  0100               	movlb	0	; () banked
 12663  0016C8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12664  0016CA  0EEF               	movlw	high _CRLN
 12665  0016CC  0100               	movlb	0	; () banked
 12666  0016CE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12667  0016D0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12668                           
 12669                           ;Bluetooth.c: 896: UARTchar('>');
 12670  0016D4  0E3E               	movlw	62
 12671  0016D6  EC93  F056         	call	_UARTchar
 12672                           
 12673                           ;Bluetooth.c: 897: timeout = 0;
 12674  0016DA  0E00               	movlw	0
 12675  0016DC  0102               	movlb	2	; () banked
 12676  0016DE  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 12677                           
 12678                           ; BSR set to: 2
 12679                           ;Bluetooth.c: 898: ClearUSART();
 12680  0016E0  EC18  F057         	call	_ClearUSART	;wreg free
 12681                           
 12682                           ;Bluetooth.c: 899: PIR1bits.RCIF = 0;
 12683  0016E4  9A9E               	bcf	3998,5,c	;volatile
 12684                           
 12685                           ;Bluetooth.c: 900: PIE1bits.RCIE = 1;
 12686  0016E6  8A9D               	bsf	3997,5,c	;volatile
 12687                           
 12688                           ;Bluetooth.c: 901: while(!NewReceivedString)
 12689  0016E8  D023               	goto	l13212
 12690  0016EA                     l13202:
 12691                           
 12692                           ;Bluetooth.c: 902: {
 12693                           ;Bluetooth.c: 903: delayUS(300000);
 12694  0016EA  0EE0               	movlw	224
 12695  0016EC  0100               	movlb	0	; () banked
 12696  0016EE  6F60               	movwf	delayUS@US& (0+255),b
 12697  0016F0  0E93               	movlw	147
 12698  0016F2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 12699  0016F4  0E04               	movlw	4
 12700  0016F6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 12701  0016F8  0E00               	movlw	0
 12702  0016FA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 12703  0016FC  EC96  F053         	call	_delayUS	;wreg free
 12704                           
 12705                           ;Bluetooth.c: 904: timeout++;
 12706  001700  0102               	movlb	2	; () banked
 12707  001702  2B80               	incf	UseBluetooth@timeout& (0+255),f,b
 12708                           
 12709                           ; BSR set to: 2
 12710                           ;Bluetooth.c: 905: if(timeout > 25)
 12711  001704  0E19               	movlw	25
 12712  001706  0102               	movlb	2	; () banked
 12713  001708  6580               	cpfsgt	UseBluetooth@timeout& (0+255),b
 12714  00170A  D012               	goto	l13212
 12715                           
 12716                           ; BSR set to: 2
 12717                           ;Bluetooth.c: 906: {
 12718                           ;Bluetooth.c: 907: UARTstring_CONST(CRLN);
 12719  00170C  0E5E               	movlw	low _CRLN
 12720  00170E  0100               	movlb	0	; () banked
 12721  001710  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12722  001712  0EEF               	movlw	high _CRLN
 12723  001714  0100               	movlb	0	; () banked
 12724  001716  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12725  001718  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12726                           
 12727                           ;Bluetooth.c: 908: UARTstringCRLN_CONST("Error: No RF config 2, channel H device specifi
      +                          ed");
 12728  00171C  0E35               	movlw	low STR_76
 12729  00171E  0100               	movlb	0	; () banked
 12730  001720  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12731  001722  0EF1               	movlw	high STR_76
 12732  001724  0100               	movlb	0	; () banked
 12733  001726  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12734  001728  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12735                           
 12736                           ;Bluetooth.c: 909: return 0;
 12737                           ;	Return value of _UseBluetooth is never used
 12738  00172C  0012               	return	
 12739  00172E  D000               	goto	l13212
 12740  001730                     l13212:
 12741  001730  0103               	movlb	3	; () banked
 12742  001732  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 12743  001734  B4D8               	btfsc	status,2,c
 12744  001736  D7D9               	goto	l13202
 12745                           
 12746                           ; BSR set to: 3
 12747                           ;Bluetooth.c: 910: }
 12748                           ;Bluetooth.c: 911: }
 12749                           ;Bluetooth.c: 912: PIE1bits.RCIE = 0;
 12750  001738  9A9D               	bcf	3997,5,c	;volatile
 12751                           
 12752                           ; BSR set to: 3
 12753                           ;Bluetooth.c: 913: ok = 1;
 12754  00173A  0E01               	movlw	1
 12755  00173C  0102               	movlb	2	; () banked
 12756  00173E  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 12757                           
 12758                           ; BSR set to: 2
 12759                           ;Bluetooth.c: 914: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 12760  001740  0E30               	movlw	48
 12761  001742  0104               	movlb	4	; () banked
 12762  001744  6564               	cpfsgt	_ReceivedString& (0+255),b	;volatile
 12763  001746  D005               	goto	l13220
 12764                           
 12765                           ; BSR set to: 4
 12766  001748  0E33               	movlw	51
 12767  00174A  0104               	movlb	4	; () banked
 12768  00174C  6564               	cpfsgt	_ReceivedString& (0+255),b	;volatile
 12769  00174E  D00D               	goto	l13224
 12770  001750  D000               	goto	l13220
 12771  001752                     l13220:
 12772                           
 12773                           ; BSR set to: 4
 12774                           ;Bluetooth.c: 915: {
 12775                           ;Bluetooth.c: 916: UARTstringCRLN_CONST("Error: RF config 2, channel H device out of ran
      +                          ge");
 12776  001752  0E67               	movlw	low STR_77
 12777  001754  0100               	movlb	0	; () banked
 12778  001756  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12779  001758  0EF1               	movlw	high STR_77
 12780  00175A  0100               	movlb	0	; () banked
 12781  00175C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12782  00175E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 12783                           
 12784                           ;Bluetooth.c: 917: ok = 0;
 12785  001762  0E00               	movlw	0
 12786  001764  0102               	movlb	2	; () banked
 12787  001766  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 12788  001768  D000               	goto	l13224
 12789  00176A                     l13224:
 12790                           
 12791                           ;Bluetooth.c: 918: }
 12792                           ;Bluetooth.c: 919: device = ReceivedString[0] - '0';
 12793  00176A  0104               	movlb	4	; () banked
 12794  00176C  5164               	movf	_ReceivedString& (0+255),w,b
 12795  00176E  0FD0               	addlw	208
 12796  001770  0102               	movlb	2	; () banked
 12797  001772  6F78               	movwf	UseBluetooth@device& (0+255),b
 12798                           
 12799                           ; BSR set to: 2
 12800                           ;Bluetooth.c: 920: tempRFArray = device + 4;
 12801  001774  0102               	movlb	2	; () banked
 12802  001776  5178               	movf	UseBluetooth@device& (0+255),w,b
 12803  001778  0F04               	addlw	4
 12804  00177A  0102               	movlb	2	; () banked
 12805  00177C  6F7F               	movwf	UseBluetooth@tempRFArray& (0+255),b
 12806                           
 12807                           ; BSR set to: 2
 12808                           ;Bluetooth.c: 921: cleanBuffer(ReceivedString, ReceivedStringPos);
 12809  00177E  0E64               	movlw	low _ReceivedString
 12810  001780  0100               	movlb	0	; () banked
 12811  001782  6F60               	movwf	cleanBuffer@data& (0+255),b
 12812  001784  0E04               	movlw	high _ReceivedString
 12813  001786  0100               	movlb	0	; () banked
 12814  001788  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 12815  00178A  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12816  00178E  0100               	movlb	0	; () banked
 12817  001790  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 12818  001792  EC3D  F053         	call	_cleanBuffer	;wreg free
 12819                           
 12820                           ;Bluetooth.c: 922: ReceivedStringPos = 0;
 12821  001796  0E00               	movlw	0
 12822  001798  0103               	movlb	3	; () banked
 12823  00179A  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12824                           
 12825                           ; BSR set to: 3
 12826                           ;Bluetooth.c: 923: NewReceivedString = 0;
 12827  00179C  0E00               	movlw	0
 12828  00179E  0103               	movlb	3	; () banked
 12829  0017A0  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 12830                           
 12831                           ; BSR set to: 3
 12832                           ;Bluetooth.c: 924: if(!ok)
 12833  0017A2  0102               	movlb	2	; () banked
 12834  0017A4  517D               	movf	UseBluetooth@ok& (0+255),w,b
 12835  0017A6  0102               	movlb	2	; () banked
 12836  0017A8  B4D8               	btfsc	status,2,c
 12837  0017AA  0012               	return	
 12838  0017AC  D004               	goto	l13238
 12839                           
 12840                           ; BSR set to: 2
 12841                           ;Bluetooth.c: 925: {
 12842                           ;Bluetooth.c: 926: return 0;
 12843                           ;	Return value of _UseBluetooth is never used
 12844  0017AE  0012               	return	
 12845                           
 12846                           ; BSR set to: 2
 12847                           ;Bluetooth.c: 927: }
 12848                           ;Bluetooth.c: 928: }
 12849  0017B0  D002               	goto	l13238
 12850                           
 12851                           ; BSR set to: 2
 12852                           ;Bluetooth.c: 929: else
 12853                           ;Bluetooth.c: 930: {
 12854                           ;Bluetooth.c: 932: return 0;
 12855                           ;	Return value of _UseBluetooth is never used
 12856  0017B2  0012               	return	
 12857                           
 12858                           ; BSR set to: 2
 12859                           
 12860                           ; BSR set to: 2
 12861                           
 12862                           ; BSR set to: 2
 12863                           
 12864                           ; BSR set to: 2
 12865  0017B4  D000               	goto	l13238
 12866  0017B6                     l13238:
 12867                           
 12868                           ; BSR set to: 2
 12869                           ;Bluetooth.c: 933: }
 12870                           ;Bluetooth.c: 934: }
 12871                           ;Bluetooth.c: 935: if(set)
 12872  0017B6  0102               	movlb	2	; () banked
 12873  0017B8  516E               	movf	UseBluetooth@set& (0+255),w,b
 12874  0017BA  0102               	movlb	2	; () banked
 12875  0017BC  B4D8               	btfsc	status,2,c
 12876  0017BE  D1B2               	goto	l13326
 12877                           
 12878                           ; BSR set to: 2
 12879                           ;Bluetooth.c: 936: {
 12880                           ;Bluetooth.c: 937: if(!WaitForIRsignal())
 12881  0017C0  ECA9  F050         	call	_WaitForIRsignal	;wreg free
 12882  0017C4  0900               	iorlw	0
 12883  0017C6  B4D8               	btfsc	status,2,c
 12884  0017C8  0012               	return	
 12885  0017CA  D001               	goto	l13244
 12886                           
 12887                           ;Bluetooth.c: 938: {
 12888                           ;Bluetooth.c: 939: return 0;
 12889                           ;	Return value of _UseBluetooth is never used
 12890  0017CC  0012               	return	
 12891  0017CE                     l13244:
 12892                           
 12893                           ;Bluetooth.c: 940: }
 12894                           ;Bluetooth.c: 941: UARTstring_CONST(CRLN);
 12895  0017CE  0E5E               	movlw	low _CRLN
 12896  0017D0  0100               	movlb	0	; () banked
 12897  0017D2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 12898  0017D4  0EEF               	movlw	high _CRLN
 12899  0017D6  0100               	movlb	0	; () banked
 12900  0017D8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12901  0017DA  EC98  F055         	call	_UARTstring_CONST	;wreg free
 12902                           
 12903                           ;Bluetooth.c: 942: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 12904  0017DE  C3EC  F064         	movff	_IR_NEC,DecodeNEC@Nec
 12905  0017E2  C3ED  F065         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 12906  0017E6  C3EE  F066         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 12907  0017EA  C3EF  F067         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 12908  0017EE  0E83               	movlw	low UseBluetooth@NecAddress
 12909  0017F0  0100               	movlb	0	; () banked
 12910  0017F2  6F68               	movwf	DecodeNEC@address& (0+255),b
 12911  0017F4  0E02               	movlw	high UseBluetooth@NecAddress
 12912  0017F6  0100               	movlb	0	; () banked
 12913  0017F8  6F69               	movwf	(DecodeNEC@address+1)& (0+255),b
 12914  0017FA  0E84               	movlw	low UseBluetooth@NecCommand
 12915  0017FC  0100               	movlb	0	; () banked
 12916  0017FE  6F6A               	movwf	DecodeNEC@command& (0+255),b
 12917  001800  0E02               	movlw	high UseBluetooth@NecCommand
 12918  001802  0100               	movlb	0	; () banked
 12919  001804  6F6B               	movwf	(DecodeNEC@command+1)& (0+255),b
 12920  001806  EC26  F04E         	call	_DecodeNEC	;wreg free
 12921                           
 12922                           ;Bluetooth.c: 943: ok = 0;
 12923  00180A  0E00               	movlw	0
 12924  00180C  0102               	movlb	2	; () banked
 12925  00180E  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 12926                           
 12927                           ; BSR set to: 2
 12928                           ;Bluetooth.c: 944: for(i=0; i < 3; i++)
 12929  001810  0E00               	movlw	0
 12930  001812  0102               	movlb	2	; () banked
 12931  001814  6F89               	movwf	UseBluetooth@i& (0+255),b
 12932  001816                     l13252:
 12933                           
 12934                           ; BSR set to: 2
 12935  001816  0E02               	movlw	2
 12936  001818  0102               	movlb	2	; () banked
 12937  00181A  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 12938  00181C  D001               	goto	l13256
 12939                           
 12940                           ; BSR set to: 2
 12941  00181E  D049               	goto	l13268
 12942  001820                     l13256:
 12943                           
 12944                           ; BSR set to: 2
 12945                           ;Bluetooth.c: 945: {
 12946                           ;Bluetooth.c: 946: if(Global2.RemoteButtonRF[tempRFArray][i][0] == 0 && Global2.RemoteBu
      +                          ttonRF[tempRFArray][i][1] == 0)
 12947  001820  0102               	movlb	2	; () banked
 12948  001822  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12949  001824  0D06               	mullw	6
 12950  001826  0E9E               	movlw	low _Global2
 12951  001828  0100               	movlb	0	; () banked
 12952  00182A  6FE9               	movwf	??_UseBluetooth& (0+255),b
 12953  00182C  0E02               	movlw	high _Global2
 12954  00182E  0100               	movlb	0	; () banked
 12955  001830  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 12956  001832  50F3               	movf	prodl,w,c
 12957  001834  0100               	movlb	0	; () banked
 12958  001836  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 12959  001838  50F4               	movf	prodh,w,c
 12960  00183A  0100               	movlb	0	; () banked
 12961  00183C  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12962  00183E  0102               	movlb	2	; () banked
 12963  001840  5189               	movf	UseBluetooth@i& (0+255),w,b
 12964  001842  0D02               	mullw	2
 12965  001844  50F3               	movf	prodl,w,c
 12966  001846  0100               	movlb	0	; () banked
 12967  001848  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 12968  00184A  6ED9               	movwf	fsr2l,c
 12969  00184C  50F4               	movf	prodh,w,c
 12970  00184E  0100               	movlb	0	; () banked
 12971  001850  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12972  001852  6EDA               	movwf	fsr2h,c
 12973  001854  50DF               	movf	indf2,w,c
 12974  001856  A4D8               	btfss	status,2,c
 12975  001858  D029               	goto	l13264
 12976                           
 12977                           ; BSR set to: 0
 12978  00185A  0102               	movlb	2	; () banked
 12979  00185C  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12980  00185E  0D06               	mullw	6
 12981  001860  0E9E               	movlw	low _Global2
 12982  001862  0100               	movlb	0	; () banked
 12983  001864  6FE9               	movwf	??_UseBluetooth& (0+255),b
 12984  001866  0E02               	movlw	high _Global2
 12985  001868  0100               	movlb	0	; () banked
 12986  00186A  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 12987  00186C  50F3               	movf	prodl,w,c
 12988  00186E  0100               	movlb	0	; () banked
 12989  001870  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 12990  001872  50F4               	movf	prodh,w,c
 12991  001874  0100               	movlb	0	; () banked
 12992  001876  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12993  001878  0102               	movlb	2	; () banked
 12994  00187A  5189               	movf	UseBluetooth@i& (0+255),w,b
 12995  00187C  0D02               	mullw	2
 12996  00187E  50F3               	movf	prodl,w,c
 12997  001880  0100               	movlb	0	; () banked
 12998  001882  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 12999  001884  50F4               	movf	prodh,w,c
 13000  001886  0100               	movlb	0	; () banked
 13001  001888  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13002  00188A  0E01               	movlw	1
 13003  00188C  0100               	movlb	0	; () banked
 13004  00188E  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13005  001890  6ED9               	movwf	fsr2l,c
 13006  001892  0E00               	movlw	0
 13007  001894  0100               	movlb	0	; () banked
 13008  001896  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13009  001898  6EDA               	movwf	fsr2h,c
 13010  00189A  50DF               	movf	indf2,w,c
 13011  00189C  A4D8               	btfss	status,2,c
 13012  00189E  D006               	goto	l13264
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;Bluetooth.c: 947: {
 13016                           ;Bluetooth.c: 948: EmptyPlace = i;
 13017  0018A0  C289  F27E         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;Bluetooth.c: 949: ok = 1;
 13021  0018A4  0E01               	movlw	1
 13022  0018A6  0102               	movlb	2	; () banked
 13023  0018A8  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 13024                           
 13025                           ;Bluetooth.c: 950: break;
 13026  0018AA  D003               	goto	l13268
 13027  0018AC                     l13264:
 13028  0018AC  0102               	movlb	2	; () banked
 13029  0018AE  2B89               	incf	UseBluetooth@i& (0+255),f,b
 13030  0018B0  D7B2               	goto	l13252
 13031  0018B2                     l13268:
 13032                           
 13033                           ; BSR set to: 2
 13034                           ;Bluetooth.c: 951: }
 13035                           ;Bluetooth.c: 952: }
 13036                           ;Bluetooth.c: 953: if(!ok)
 13037  0018B2  0102               	movlb	2	; () banked
 13038  0018B4  517D               	movf	UseBluetooth@ok& (0+255),w,b
 13039  0018B6  0102               	movlb	2	; () banked
 13040  0018B8  A4D8               	btfss	status,2,c
 13041  0018BA  D009               	goto	l13274
 13042                           
 13043                           ; BSR set to: 2
 13044                           ;Bluetooth.c: 954: {
 13045                           ;Bluetooth.c: 955: UARTstringCRLN_CONST("Error: No space available to save this RF code"
      +                          );
 13046  0018BC  0E20               	movlw	low STR_78
 13047  0018BE  0100               	movlb	0	; () banked
 13048  0018C0  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13049  0018C2  0EF3               	movlw	high STR_78
 13050  0018C4  0100               	movlb	0	; () banked
 13051  0018C6  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13052  0018C8  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 13053                           
 13054                           ;Bluetooth.c: 956: return 0;
 13055                           ;	Return value of _UseBluetooth is never used
 13056  0018CC  0012               	return	
 13057  0018CE                     l13274:
 13058                           
 13059                           ;Bluetooth.c: 957: }
 13060                           ;Bluetooth.c: 958: if(EmptyPlace)
 13061  0018CE  0102               	movlb	2	; () banked
 13062  0018D0  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 13063  0018D2  0102               	movlb	2	; () banked
 13064  0018D4  B4D8               	btfsc	status,2,c
 13065  0018D6  D058               	goto	l13288
 13066                           
 13067                           ; BSR set to: 2
 13068                           ;Bluetooth.c: 959: {
 13069                           ;Bluetooth.c: 961: for(i=0; i < EmptyPlace; i++)
 13070  0018D8  0E00               	movlw	0
 13071  0018DA  0102               	movlb	2	; () banked
 13072  0018DC  6F89               	movwf	UseBluetooth@i& (0+255),b
 13073  0018DE  D04C               	goto	l13286
 13074  0018E0                     l13278:
 13075                           
 13076                           ; BSR set to: 2
 13077                           ;Bluetooth.c: 962: {
 13078                           ;Bluetooth.c: 963: if(NecAddress == Global2.RemoteButtonRF[tempRFArray][i][0])
 13079  0018E0  0102               	movlb	2	; () banked
 13080  0018E2  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13081  0018E4  0D06               	mullw	6
 13082  0018E6  0E9E               	movlw	low _Global2
 13083  0018E8  0100               	movlb	0	; () banked
 13084  0018EA  6FE9               	movwf	??_UseBluetooth& (0+255),b
 13085  0018EC  0E02               	movlw	high _Global2
 13086  0018EE  0100               	movlb	0	; () banked
 13087  0018F0  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 13088  0018F2  50F3               	movf	prodl,w,c
 13089  0018F4  0100               	movlb	0	; () banked
 13090  0018F6  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13091  0018F8  50F4               	movf	prodh,w,c
 13092  0018FA  0100               	movlb	0	; () banked
 13093  0018FC  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13094  0018FE  0102               	movlb	2	; () banked
 13095  001900  5189               	movf	UseBluetooth@i& (0+255),w,b
 13096  001902  0D02               	mullw	2
 13097  001904  50F3               	movf	prodl,w,c
 13098  001906  0100               	movlb	0	; () banked
 13099  001908  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13100  00190A  6ED9               	movwf	fsr2l,c
 13101  00190C  50F4               	movf	prodh,w,c
 13102  00190E  0100               	movlb	0	; () banked
 13103  001910  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13104  001912  6EDA               	movwf	fsr2h,c
 13105  001914  0102               	movlb	2	; () banked
 13106  001916  5183               	movf	UseBluetooth@NecAddress& (0+255),w,b
 13107  001918  18DE               	xorwf	postinc2,w,c
 13108  00191A  A4D8               	btfss	status,2,c
 13109  00191C  D02A               	goto	l13284
 13110                           
 13111                           ; BSR set to: 2
 13112                           ;Bluetooth.c: 964: {
 13113                           ;Bluetooth.c: 965: if(NecCommand == Global2.RemoteButtonRF[tempRFArray][i][1])
 13114  00191E  0102               	movlb	2	; () banked
 13115  001920  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13116  001922  0D06               	mullw	6
 13117  001924  0E9E               	movlw	low _Global2
 13118  001926  0100               	movlb	0	; () banked
 13119  001928  6FE9               	movwf	??_UseBluetooth& (0+255),b
 13120  00192A  0E02               	movlw	high _Global2
 13121  00192C  0100               	movlb	0	; () banked
 13122  00192E  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 13123  001930  50F3               	movf	prodl,w,c
 13124  001932  0100               	movlb	0	; () banked
 13125  001934  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13126  001936  50F4               	movf	prodh,w,c
 13127  001938  0100               	movlb	0	; () banked
 13128  00193A  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13129  00193C  0102               	movlb	2	; () banked
 13130  00193E  5189               	movf	UseBluetooth@i& (0+255),w,b
 13131  001940  0D02               	mullw	2
 13132  001942  50F3               	movf	prodl,w,c
 13133  001944  0100               	movlb	0	; () banked
 13134  001946  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13135  001948  50F4               	movf	prodh,w,c
 13136  00194A  0100               	movlb	0	; () banked
 13137  00194C  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13138  00194E  0E01               	movlw	1
 13139  001950  0100               	movlb	0	; () banked
 13140  001952  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13141  001954  6ED9               	movwf	fsr2l,c
 13142  001956  0E00               	movlw	0
 13143  001958  0100               	movlb	0	; () banked
 13144  00195A  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13145  00195C  6EDA               	movwf	fsr2h,c
 13146  00195E  0102               	movlb	2	; () banked
 13147  001960  5184               	movf	UseBluetooth@NecCommand& (0+255),w,b
 13148  001962  18DE               	xorwf	postinc2,w,c
 13149  001964  A4D8               	btfss	status,2,c
 13150  001966  D005               	goto	l13284
 13151                           
 13152                           ; BSR set to: 2
 13153                           ;Bluetooth.c: 966: {
 13154                           ;Bluetooth.c: 967: ok = 0;
 13155  001968  0E00               	movlw	0
 13156  00196A  0102               	movlb	2	; () banked
 13157  00196C  6F7D               	movwf	UseBluetooth@ok& (0+255),b
 13158                           
 13159                           ;Bluetooth.c: 968: break;
 13160  00196E  D00C               	goto	l13288
 13161                           
 13162                           ; BSR set to: 2
 13163  001970  D000               	goto	l13284
 13164  001972                     l13284:
 13165                           
 13166                           ; BSR set to: 2
 13167  001972  0102               	movlb	2	; () banked
 13168  001974  2B89               	incf	UseBluetooth@i& (0+255),f,b
 13169  001976  D000               	goto	l13286
 13170  001978                     l13286:
 13171                           
 13172                           ; BSR set to: 2
 13173  001978  0102               	movlb	2	; () banked
 13174  00197A  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 13175  00197C  0102               	movlb	2	; () banked
 13176  00197E  5D89               	subwf	UseBluetooth@i& (0+255),w,b
 13177  001980  B0D8               	btfsc	status,0,c
 13178  001982  D002               	goto	l13288
 13179  001984  D7AD               	goto	l13278
 13180                           
 13181                           ; BSR set to: 2
 13182  001986  D000               	goto	l13288
 13183  001988                     l13288:
 13184                           
 13185                           ; BSR set to: 2
 13186                           ;Bluetooth.c: 969: }
 13187                           ;Bluetooth.c: 970: }
 13188                           ;Bluetooth.c: 971: }
 13189                           ;Bluetooth.c: 972: }
 13190                           ;Bluetooth.c: 973: if(!ok)
 13191  001988  0102               	movlb	2	; () banked
 13192  00198A  517D               	movf	UseBluetooth@ok& (0+255),w,b
 13193  00198C  0102               	movlb	2	; () banked
 13194  00198E  A4D8               	btfss	status,2,c
 13195  001990  D009               	goto	l13294
 13196                           
 13197                           ; BSR set to: 2
 13198                           ;Bluetooth.c: 974: {
 13199                           ;Bluetooth.c: 975: UARTstringCRLN_CONST("Error: NEC code already saved to this RF code")
      +                          ;
 13200  001992  0E91               	movlw	low STR_79
 13201  001994  0100               	movlb	0	; () banked
 13202  001996  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13203  001998  0EF4               	movlw	high STR_79
 13204  00199A  0100               	movlb	0	; () banked
 13205  00199C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13206  00199E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 13207                           
 13208                           ;Bluetooth.c: 976: return 0;
 13209                           ;	Return value of _UseBluetooth is never used
 13210  0019A2  0012               	return	
 13211  0019A4                     l13294:
 13212                           
 13213                           ;Bluetooth.c: 977: }
 13214                           ;Bluetooth.c: 980: Global2.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 13215  0019A4  0102               	movlb	2	; () banked
 13216  0019A6  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13217  0019A8  0D06               	mullw	6
 13218  0019AA  0E9E               	movlw	low _Global2
 13219  0019AC  0100               	movlb	0	; () banked
 13220  0019AE  6FE9               	movwf	??_UseBluetooth& (0+255),b
 13221  0019B0  0E02               	movlw	high _Global2
 13222  0019B2  0100               	movlb	0	; () banked
 13223  0019B4  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 13224  0019B6  50F3               	movf	prodl,w,c
 13225  0019B8  0100               	movlb	0	; () banked
 13226  0019BA  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13227  0019BC  50F4               	movf	prodh,w,c
 13228  0019BE  0100               	movlb	0	; () banked
 13229  0019C0  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13230  0019C2  0102               	movlb	2	; () banked
 13231  0019C4  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 13232  0019C6  0D02               	mullw	2
 13233  0019C8  50F3               	movf	prodl,w,c
 13234  0019CA  0100               	movlb	0	; () banked
 13235  0019CC  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13236  0019CE  6ED9               	movwf	fsr2l,c
 13237  0019D0  50F4               	movf	prodh,w,c
 13238  0019D2  0100               	movlb	0	; () banked
 13239  0019D4  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13240  0019D6  6EDA               	movwf	fsr2h,c
 13241  0019D8  C283  FFDF         	movff	UseBluetooth@NecAddress,indf2
 13242                           
 13243                           ;Bluetooth.c: 981: Global2.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 13244  0019DC  0102               	movlb	2	; () banked
 13245  0019DE  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13246  0019E0  0D06               	mullw	6
 13247  0019E2  0E9E               	movlw	low _Global2
 13248  0019E4  0100               	movlb	0	; () banked
 13249  0019E6  6FE9               	movwf	??_UseBluetooth& (0+255),b
 13250  0019E8  0E02               	movlw	high _Global2
 13251  0019EA  0100               	movlb	0	; () banked
 13252  0019EC  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 13253  0019EE  50F3               	movf	prodl,w,c
 13254  0019F0  0100               	movlb	0	; () banked
 13255  0019F2  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13256  0019F4  50F4               	movf	prodh,w,c
 13257  0019F6  0100               	movlb	0	; () banked
 13258  0019F8  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13259  0019FA  0102               	movlb	2	; () banked
 13260  0019FC  517E               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 13261  0019FE  0D02               	mullw	2
 13262  001A00  50F3               	movf	prodl,w,c
 13263  001A02  0100               	movlb	0	; () banked
 13264  001A04  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13265  001A06  50F4               	movf	prodh,w,c
 13266  001A08  0100               	movlb	0	; () banked
 13267  001A0A  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13268  001A0C  0E01               	movlw	1
 13269  001A0E  0100               	movlb	0	; () banked
 13270  001A10  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13271  001A12  6ED9               	movwf	fsr2l,c
 13272  001A14  0E00               	movlw	0
 13273  001A16  0100               	movlb	0	; () banked
 13274  001A18  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13275  001A1A  6EDA               	movwf	fsr2h,c
 13276  001A1C  C284  FFDF         	movff	UseBluetooth@NecCommand,indf2
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;Bluetooth.c: 982: SyncGlobalToEEPROM();
 13280  001A20  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 13281                           
 13282                           ;Bluetooth.c: 984: if(device)
 13283  001A24  0102               	movlb	2	; () banked
 13284  001A26  5178               	movf	UseBluetooth@device& (0+255),w,b
 13285  001A28  0102               	movlb	2	; () banked
 13286  001A2A  B4D8               	btfsc	status,2,c
 13287  001A2C  D023               	goto	l13302
 13288                           
 13289                           ; BSR set to: 2
 13290                           ;Bluetooth.c: 985: {
 13291                           ;Bluetooth.c: 986: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 13292  001A2E  0E00               	movlw	low UseBluetooth@buf
 13293  001A30  0100               	movlb	0	; () banked
 13294  001A32  6FAE               	movwf	sprintf@sp& (0+255),b
 13295  001A34  0E02               	movlw	high UseBluetooth@buf
 13296  001A36  0100               	movlb	0	; () banked
 13297  001A38  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13298  001A3A  0EA1               	movlw	low STR_80
 13299  001A3C  0100               	movlb	0	; () banked
 13300  001A3E  6FB0               	movwf	sprintf@f& (0+255),b
 13301  001A40  0EEF               	movlw	high STR_80
 13302  001A42  0100               	movlb	0	; () banked
 13303  001A44  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13304  001A46  C3EC  F0B2         	movff	_IR_NEC,?_sprintf+4
 13305  001A4A  C3ED  F0B3         	movff	_IR_NEC+1,?_sprintf+5
 13306  001A4E  C3EE  F0B4         	movff	_IR_NEC+2,?_sprintf+6
 13307  001A52  C3EF  F0B5         	movff	_IR_NEC+3,?_sprintf+7
 13308  001A56  C281  F0B6         	movff	UseBluetooth@rfconf,?_sprintf+8
 13309  001A5A  0100               	movlb	0	; () banked
 13310  001A5C  6BB7               	clrf	(?_sprintf+9)& (0+255),b
 13311  001A5E  C264  F0B8         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 13312  001A62  0100               	movlb	0	; () banked
 13313  001A64  6BB9               	clrf	(?_sprintf+11)& (0+255),b
 13314  001A66  C278  F0BA         	movff	UseBluetooth@device,?_sprintf+12
 13315  001A6A  0100               	movlb	0	; () banked
 13316  001A6C  6BBB               	clrf	(?_sprintf+13)& (0+255),b
 13317  001A6E  EC22  F016         	call	_sprintf	;wreg free
 13318                           
 13319                           ;Bluetooth.c: 987: }
 13320  001A72  D01F               	goto	l13304
 13321  001A74                     l13302:
 13322                           
 13323                           ;Bluetooth.c: 988: else
 13324                           ;Bluetooth.c: 989: {
 13325                           ;Bluetooth.c: 990: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 13326  001A74  0E00               	movlw	low UseBluetooth@buf
 13327  001A76  0100               	movlb	0	; () banked
 13328  001A78  6FAE               	movwf	sprintf@sp& (0+255),b
 13329  001A7A  0E02               	movlw	high UseBluetooth@buf
 13330  001A7C  0100               	movlb	0	; () banked
 13331  001A7E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13332  001A80  0E94               	movlw	low STR_81
 13333  001A82  0100               	movlb	0	; () banked
 13334  001A84  6FB0               	movwf	sprintf@f& (0+255),b
 13335  001A86  0EF0               	movlw	high STR_81
 13336  001A88  0100               	movlb	0	; () banked
 13337  001A8A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13338  001A8C  C3EC  F0B2         	movff	_IR_NEC,?_sprintf+4
 13339  001A90  C3ED  F0B3         	movff	_IR_NEC+1,?_sprintf+5
 13340  001A94  C3EE  F0B4         	movff	_IR_NEC+2,?_sprintf+6
 13341  001A98  C3EF  F0B5         	movff	_IR_NEC+3,?_sprintf+7
 13342  001A9C  C281  F0B6         	movff	UseBluetooth@rfconf,?_sprintf+8
 13343  001AA0  0100               	movlb	0	; () banked
 13344  001AA2  6BB7               	clrf	(?_sprintf+9)& (0+255),b
 13345  001AA4  C264  F0B8         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 13346  001AA8  0100               	movlb	0	; () banked
 13347  001AAA  6BB9               	clrf	(?_sprintf+11)& (0+255),b
 13348  001AAC  EC22  F016         	call	_sprintf	;wreg free
 13349  001AB0  D000               	goto	l13304
 13350  001AB2                     l13304:
 13351                           
 13352                           ;Bluetooth.c: 991: }
 13353                           ;Bluetooth.c: 992: UARTstringCRLN(buf);
 13354  001AB2  0E00               	movlw	low UseBluetooth@buf
 13355  001AB4  0100               	movlb	0	; () banked
 13356  001AB6  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 13357  001AB8  0E02               	movlw	high UseBluetooth@buf
 13358  001ABA  0100               	movlb	0	; () banked
 13359  001ABC  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13360  001ABE  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 13361                           
 13362                           ;Bluetooth.c: 993: UARTstring_CONST(CRLN);
 13363  001AC2  0E5E               	movlw	low _CRLN
 13364  001AC4  0100               	movlb	0	; () banked
 13365  001AC6  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13366  001AC8  0EEF               	movlw	high _CRLN
 13367  001ACA  0100               	movlb	0	; () banked
 13368  001ACC  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13369  001ACE  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13370                           
 13371                           ;Bluetooth.c: 995: for(i =0;i<10;i++)
 13372  001AD2  0E00               	movlw	0
 13373  001AD4  0102               	movlb	2	; () banked
 13374  001AD6  6F89               	movwf	UseBluetooth@i& (0+255),b
 13375                           
 13376                           ; BSR set to: 2
 13377  001AD8  0E09               	movlw	9
 13378  001ADA  0102               	movlb	2	; () banked
 13379  001ADC  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 13380  001ADE  D002               	goto	l13314
 13381  001AE0  0012               	return	
 13382                           
 13383                           ; BSR set to: 2
 13384  001AE2  0012               	return	
 13385  001AE4                     l13314:
 13386                           
 13387                           ; BSR set to: 2
 13388                           ;Bluetooth.c: 996: {
 13389                           ;Bluetooth.c: 997: (LATC |= 0x04);
 13390  001AE4  848B               	bsf	3979,2,c	;volatile
 13391                           
 13392                           ; BSR set to: 2
 13393                           ;Bluetooth.c: 998: delayUS(50000);
 13394  001AE6  0E50               	movlw	80
 13395  001AE8  0100               	movlb	0	; () banked
 13396  001AEA  6F60               	movwf	delayUS@US& (0+255),b
 13397  001AEC  0EC3               	movlw	195
 13398  001AEE  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13399  001AF0  0E00               	movlw	0
 13400  001AF2  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13401  001AF4  0E00               	movlw	0
 13402  001AF6  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13403  001AF8  EC96  F053         	call	_delayUS	;wreg free
 13404                           
 13405                           ;Bluetooth.c: 999: (LATC &= ~0x04);
 13406  001AFC  948B               	bcf	3979,2,c	;volatile
 13407                           
 13408                           ;Bluetooth.c: 1000: delayUS(50000);
 13409  001AFE  0E50               	movlw	80
 13410  001B00  0100               	movlb	0	; () banked
 13411  001B02  6F60               	movwf	delayUS@US& (0+255),b
 13412  001B04  0EC3               	movlw	195
 13413  001B06  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13414  001B08  0E00               	movlw	0
 13415  001B0A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13416  001B0C  0E00               	movlw	0
 13417  001B0E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13418  001B10  EC96  F053         	call	_delayUS	;wreg free
 13419  001B14  0102               	movlb	2	; () banked
 13420  001B16  2B89               	incf	UseBluetooth@i& (0+255),f,b
 13421                           
 13422                           ; BSR set to: 2
 13423  001B18  0E09               	movlw	9
 13424  001B1A  0102               	movlb	2	; () banked
 13425  001B1C  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 13426  001B1E  D7E2               	goto	l13314
 13427  001B20  0012               	return	
 13428                           
 13429                           ; BSR set to: 2
 13430                           ;Bluetooth.c: 1003: }
 13431                           
 13432                           ; BSR set to: 2
 13433                           ;Bluetooth.c: 1001: }
 13434                           ;Bluetooth.c: 1002: return 1;
 13435                           ;	Return value of _UseBluetooth is never used
 13436  001B22  0012               	return	
 13437  001B24                     l13326:
 13438                           
 13439                           ; BSR set to: 2
 13440                           ;Bluetooth.c: 1004: else
 13441                           ;Bluetooth.c: 1005: {
 13442                           ;Bluetooth.c: 1007: for(i=0; i < 3; i++)
 13443  001B24  0E00               	movlw	0
 13444  001B26  0102               	movlb	2	; () banked
 13445  001B28  6F89               	movwf	UseBluetooth@i& (0+255),b
 13446  001B2A                     l13328:
 13447                           
 13448                           ; BSR set to: 2
 13449  001B2A  0E02               	movlw	2
 13450  001B2C  0102               	movlb	2	; () banked
 13451  001B2E  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 13452  001B30  D001               	goto	l13332
 13453                           
 13454                           ; BSR set to: 2
 13455  001B32  D041               	goto	l13338
 13456  001B34                     l13332:
 13457                           
 13458                           ; BSR set to: 2
 13459                           ;Bluetooth.c: 1008: {
 13460                           ;Bluetooth.c: 1010: Global2.RemoteButtonRF[tempRFArray][i][0] = 0;
 13461  001B34  0102               	movlb	2	; () banked
 13462  001B36  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13463  001B38  0D06               	mullw	6
 13464  001B3A  0E9E               	movlw	low _Global2
 13465  001B3C  0100               	movlb	0	; () banked
 13466  001B3E  6FE9               	movwf	??_UseBluetooth& (0+255),b
 13467  001B40  0E02               	movlw	high _Global2
 13468  001B42  0100               	movlb	0	; () banked
 13469  001B44  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 13470  001B46  50F3               	movf	prodl,w,c
 13471  001B48  0100               	movlb	0	; () banked
 13472  001B4A  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13473  001B4C  50F4               	movf	prodh,w,c
 13474  001B4E  0100               	movlb	0	; () banked
 13475  001B50  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13476  001B52  0102               	movlb	2	; () banked
 13477  001B54  5189               	movf	UseBluetooth@i& (0+255),w,b
 13478  001B56  0D02               	mullw	2
 13479  001B58  50F3               	movf	prodl,w,c
 13480  001B5A  0100               	movlb	0	; () banked
 13481  001B5C  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13482  001B5E  6ED9               	movwf	fsr2l,c
 13483  001B60  50F4               	movf	prodh,w,c
 13484  001B62  0100               	movlb	0	; () banked
 13485  001B64  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13486  001B66  6EDA               	movwf	fsr2h,c
 13487  001B68  0E00               	movlw	0
 13488  001B6A  6EDF               	movwf	indf2,c
 13489                           
 13490                           ;Bluetooth.c: 1011: Global2.RemoteButtonRF[tempRFArray][i][1] = 0;
 13491  001B6C  0102               	movlb	2	; () banked
 13492  001B6E  517F               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 13493  001B70  0D06               	mullw	6
 13494  001B72  0E9E               	movlw	low _Global2
 13495  001B74  0100               	movlb	0	; () banked
 13496  001B76  6FE9               	movwf	??_UseBluetooth& (0+255),b
 13497  001B78  0E02               	movlw	high _Global2
 13498  001B7A  0100               	movlb	0	; () banked
 13499  001B7C  6FEA               	movwf	(??_UseBluetooth+1)& (0+255),b
 13500  001B7E  50F3               	movf	prodl,w,c
 13501  001B80  0100               	movlb	0	; () banked
 13502  001B82  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13503  001B84  50F4               	movf	prodh,w,c
 13504  001B86  0100               	movlb	0	; () banked
 13505  001B88  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13506  001B8A  0102               	movlb	2	; () banked
 13507  001B8C  5189               	movf	UseBluetooth@i& (0+255),w,b
 13508  001B8E  0D02               	mullw	2
 13509  001B90  50F3               	movf	prodl,w,c
 13510  001B92  0100               	movlb	0	; () banked
 13511  001B94  27E9               	addwf	??_UseBluetooth& (0+255),f,b
 13512  001B96  50F4               	movf	prodh,w,c
 13513  001B98  0100               	movlb	0	; () banked
 13514  001B9A  23EA               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 13515  001B9C  0E01               	movlw	1
 13516  001B9E  0100               	movlb	0	; () banked
 13517  001BA0  25E9               	addwf	??_UseBluetooth& (0+255),w,b
 13518  001BA2  6ED9               	movwf	fsr2l,c
 13519  001BA4  0E00               	movlw	0
 13520  001BA6  0100               	movlb	0	; () banked
 13521  001BA8  21EA               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 13522  001BAA  6EDA               	movwf	fsr2h,c
 13523  001BAC  0E00               	movlw	0
 13524  001BAE  6EDF               	movwf	indf2,c
 13525                           
 13526                           ; BSR set to: 0
 13527  001BB0  0102               	movlb	2	; () banked
 13528  001BB2  2B89               	incf	UseBluetooth@i& (0+255),f,b
 13529  001BB4  D7BA               	goto	l13328
 13530  001BB6                     l13338:
 13531                           
 13532                           ; BSR set to: 2
 13533                           ;Bluetooth.c: 1012: }
 13534                           ;Bluetooth.c: 1013: SyncGlobalToEEPROM();
 13535  001BB6  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 13536                           
 13537                           ;Bluetooth.c: 1014: if(device)
 13538  001BBA  0102               	movlb	2	; () banked
 13539  001BBC  5178               	movf	UseBluetooth@device& (0+255),w,b
 13540  001BBE  0102               	movlb	2	; () banked
 13541  001BC0  B4D8               	btfsc	status,2,c
 13542  001BC2  D01B               	goto	l13344
 13543                           
 13544                           ; BSR set to: 2
 13545                           ;Bluetooth.c: 1015: {
 13546                           ;Bluetooth.c: 1016: sprintf(buf,"RF config %d channel %c device %d successfully erased",
      +                          rfconf, rfchannelSTR[0], device);
 13547  001BC4  0E00               	movlw	low UseBluetooth@buf
 13548  001BC6  0100               	movlb	0	; () banked
 13549  001BC8  6FAE               	movwf	sprintf@sp& (0+255),b
 13550  001BCA  0E02               	movlw	high UseBluetooth@buf
 13551  001BCC  0100               	movlb	0	; () banked
 13552  001BCE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13553  001BD0  0ECA               	movlw	low STR_82
 13554  001BD2  0100               	movlb	0	; () banked
 13555  001BD4  6FB0               	movwf	sprintf@f& (0+255),b
 13556  001BD6  0EF0               	movlw	high STR_82
 13557  001BD8  0100               	movlb	0	; () banked
 13558  001BDA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13559  001BDC  C281  F0B2         	movff	UseBluetooth@rfconf,?_sprintf+4
 13560  001BE0  0100               	movlb	0	; () banked
 13561  001BE2  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 13562  001BE4  C264  F0B4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 13563  001BE8  0100               	movlb	0	; () banked
 13564  001BEA  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 13565  001BEC  C278  F0B6         	movff	UseBluetooth@device,?_sprintf+8
 13566  001BF0  0100               	movlb	0	; () banked
 13567  001BF2  6BB7               	clrf	(?_sprintf+9)& (0+255),b
 13568  001BF4  EC22  F016         	call	_sprintf	;wreg free
 13569                           
 13570                           ;Bluetooth.c: 1017: }
 13571  001BF8  D017               	goto	l13346
 13572  001BFA                     l13344:
 13573                           
 13574                           ;Bluetooth.c: 1018: else
 13575                           ;Bluetooth.c: 1019: {
 13576                           ;Bluetooth.c: 1020: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rf
      +                          channelSTR[0]);
 13577  001BFA  0E00               	movlw	low UseBluetooth@buf
 13578  001BFC  0100               	movlb	0	; () banked
 13579  001BFE  6FAE               	movwf	sprintf@sp& (0+255),b
 13580  001C00  0E02               	movlw	high UseBluetooth@buf
 13581  001C02  0100               	movlb	0	; () banked
 13582  001C04  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 13583  001C06  0E71               	movlw	low STR_83
 13584  001C08  0100               	movlb	0	; () banked
 13585  001C0A  6FB0               	movwf	sprintf@f& (0+255),b
 13586  001C0C  0EF5               	movlw	high STR_83
 13587  001C0E  0100               	movlb	0	; () banked
 13588  001C10  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 13589  001C12  C281  F0B2         	movff	UseBluetooth@rfconf,?_sprintf+4
 13590  001C16  0100               	movlb	0	; () banked
 13591  001C18  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 13592  001C1A  C264  F0B4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 13593  001C1E  0100               	movlb	0	; () banked
 13594  001C20  6BB5               	clrf	(?_sprintf+7)& (0+255),b
 13595  001C22  EC22  F016         	call	_sprintf	;wreg free
 13596  001C26  D000               	goto	l13346
 13597  001C28                     l13346:
 13598                           
 13599                           ;Bluetooth.c: 1021: }
 13600                           ;Bluetooth.c: 1022: UARTstringCRLN(buf);
 13601  001C28  0E00               	movlw	low UseBluetooth@buf
 13602  001C2A  0100               	movlb	0	; () banked
 13603  001C2C  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 13604  001C2E  0E02               	movlw	high UseBluetooth@buf
 13605  001C30  0100               	movlb	0	; () banked
 13606  001C32  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13607  001C34  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 13608                           
 13609                           ;Bluetooth.c: 1023: UARTstring_CONST(CRLN);
 13610  001C38  0E5E               	movlw	low _CRLN
 13611  001C3A  0100               	movlb	0	; () banked
 13612  001C3C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13613  001C3E  0EEF               	movlw	high _CRLN
 13614  001C40  0100               	movlb	0	; () banked
 13615  001C42  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13616  001C44  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13617                           
 13618                           ;Bluetooth.c: 1025: for(i =0;i<10;i++)
 13619  001C48  0E00               	movlw	0
 13620  001C4A  0102               	movlb	2	; () banked
 13621  001C4C  6F89               	movwf	UseBluetooth@i& (0+255),b
 13622                           
 13623                           ; BSR set to: 2
 13624  001C4E  0E09               	movlw	9
 13625  001C50  0102               	movlb	2	; () banked
 13626  001C52  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 13627  001C54  D002               	goto	l13356
 13628  001C56  0012               	return	
 13629                           
 13630                           ; BSR set to: 2
 13631  001C58  0012               	return	
 13632  001C5A                     l13356:
 13633                           
 13634                           ; BSR set to: 2
 13635                           ;Bluetooth.c: 1026: {
 13636                           ;Bluetooth.c: 1027: (LATC |= 0x04);
 13637  001C5A  848B               	bsf	3979,2,c	;volatile
 13638                           
 13639                           ; BSR set to: 2
 13640                           ;Bluetooth.c: 1028: delayUS(50000);
 13641  001C5C  0E50               	movlw	80
 13642  001C5E  0100               	movlb	0	; () banked
 13643  001C60  6F60               	movwf	delayUS@US& (0+255),b
 13644  001C62  0EC3               	movlw	195
 13645  001C64  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13646  001C66  0E00               	movlw	0
 13647  001C68  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13648  001C6A  0E00               	movlw	0
 13649  001C6C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13650  001C6E  EC96  F053         	call	_delayUS	;wreg free
 13651                           
 13652                           ;Bluetooth.c: 1029: (LATC &= ~0x04);
 13653  001C72  948B               	bcf	3979,2,c	;volatile
 13654                           
 13655                           ;Bluetooth.c: 1030: delayUS(50000);
 13656  001C74  0E50               	movlw	80
 13657  001C76  0100               	movlb	0	; () banked
 13658  001C78  6F60               	movwf	delayUS@US& (0+255),b
 13659  001C7A  0EC3               	movlw	195
 13660  001C7C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13661  001C7E  0E00               	movlw	0
 13662  001C80  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13663  001C82  0E00               	movlw	0
 13664  001C84  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13665  001C86  EC96  F053         	call	_delayUS	;wreg free
 13666  001C8A  0102               	movlb	2	; () banked
 13667  001C8C  2B89               	incf	UseBluetooth@i& (0+255),f,b
 13668                           
 13669                           ; BSR set to: 2
 13670  001C8E  0E09               	movlw	9
 13671  001C90  0102               	movlb	2	; () banked
 13672  001C92  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 13673  001C94  D7E2               	goto	l13356
 13674  001C96  0012               	return	
 13675                           
 13676                           ; BSR set to: 2
 13677                           ;Bluetooth.c: 1033: }
 13678                           ;Bluetooth.c: 1034: }
 13679                           
 13680                           ; BSR set to: 2
 13681                           ;Bluetooth.c: 1031: }
 13682                           ;Bluetooth.c: 1032: return 1;
 13683                           ;	Return value of _UseBluetooth is never used
 13684  001C98  0012               	return	
 13685  001C9A                     l13366:
 13686                           
 13687                           ; BSR set to: 2
 13688                           ;Bluetooth.c: 1035: else
 13689                           ;Bluetooth.c: 1036: {
 13690                           ;Bluetooth.c: 1037: UARTstringCRLN_CONST("Error: RF channel needs to be one character");
 13691  001C9A  0E9D               	movlw	low STR_84
 13692  001C9C  0100               	movlb	0	; () banked
 13693  001C9E  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13694  001CA0  0EF5               	movlw	high STR_84
 13695  001CA2  0100               	movlb	0	; () banked
 13696  001CA4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13697  001CA6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 13698                           
 13699                           ;Bluetooth.c: 1038: UARTstring_CONST(CRLN);
 13700  001CAA  0E5E               	movlw	low _CRLN
 13701  001CAC  0100               	movlb	0	; () banked
 13702  001CAE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13703  001CB0  0EEF               	movlw	high _CRLN
 13704  001CB2  0100               	movlb	0	; () banked
 13705  001CB4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13706  001CB6  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13707                           
 13708                           ;Bluetooth.c: 1040: }
 13709                           ;Bluetooth.c: 1041: }
 13710                           ;Bluetooth.c: 1042: }
 13711                           
 13712                           ;Bluetooth.c: 1039: return 0;
 13713                           ;	Return value of _UseBluetooth is never used
 13714  001CBA  0012               	return	
 13715  001CBC                     l13370:
 13716                           
 13717                           ;Bluetooth.c: 1043: else if(StringMatchCaseInsensitive(String,"Reset"))
 13718  001CBC  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 13719  001CC0  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 13720  001CC4  0EC7               	movlw	low STR_85
 13721  001CC6  0100               	movlb	0	; () banked
 13722  001CC8  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 13723  001CCA  0EFF               	movlw	high STR_85
 13724  001CCC  0100               	movlb	0	; () banked
 13725  001CCE  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 13726  001CD0  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 13727  001CD4  0900               	iorlw	0
 13728  001CD6  B4D8               	btfsc	status,2,c
 13729  001CD8  D097               	goto	l13432
 13730                           
 13731                           ;Bluetooth.c: 1044: {
 13732                           ;Bluetooth.c: 1045: cleanBuffer(ReceivedString, ReceivedStringPos);
 13733  001CDA  0E64               	movlw	low _ReceivedString
 13734  001CDC  0100               	movlb	0	; () banked
 13735  001CDE  6F60               	movwf	cleanBuffer@data& (0+255),b
 13736  001CE0  0E04               	movlw	high _ReceivedString
 13737  001CE2  0100               	movlb	0	; () banked
 13738  001CE4  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13739  001CE6  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13740  001CEA  0100               	movlb	0	; () banked
 13741  001CEC  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13742  001CEE  EC3D  F053         	call	_cleanBuffer	;wreg free
 13743                           
 13744                           ;Bluetooth.c: 1046: ReceivedStringPos = 0;
 13745  001CF2  0E00               	movlw	0
 13746  001CF4  0103               	movlb	3	; () banked
 13747  001CF6  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13748                           
 13749                           ; BSR set to: 3
 13750                           ;Bluetooth.c: 1047: NewReceivedString = 0;
 13751  001CF8  0E00               	movlw	0
 13752  001CFA  0103               	movlb	3	; () banked
 13753  001CFC  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 13754                           
 13755                           ; BSR set to: 3
 13756                           ;Bluetooth.c: 1048: UARTstring_CONST("Enter Y to reset or N to cancel");
 13757  001CFE  0EB1               	movlw	low STR_86
 13758  001D00  0100               	movlb	0	; () banked
 13759  001D02  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13760  001D04  0EF8               	movlw	high STR_86
 13761  001D06  0100               	movlb	0	; () banked
 13762  001D08  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13763  001D0A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13764                           
 13765                           ;Bluetooth.c: 1049: UARTstring_CONST(CRLN);
 13766  001D0E  0E5E               	movlw	low _CRLN
 13767  001D10  0100               	movlb	0	; () banked
 13768  001D12  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13769  001D14  0EEF               	movlw	high _CRLN
 13770  001D16  0100               	movlb	0	; () banked
 13771  001D18  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13772  001D1A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13773                           
 13774                           ;Bluetooth.c: 1050: UARTchar_CONST('>');
 13775  001D1E  0E3E               	movlw	62
 13776  001D20  EC74  F056         	call	_UARTchar_CONST
 13777                           
 13778                           ;Bluetooth.c: 1051: timeout = 0;
 13779  001D24  0E00               	movlw	0
 13780  001D26  0102               	movlb	2	; () banked
 13781  001D28  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 13782                           
 13783                           ; BSR set to: 2
 13784                           ;Bluetooth.c: 1052: ClearUSART();
 13785  001D2A  EC18  F057         	call	_ClearUSART	;wreg free
 13786                           
 13787                           ;Bluetooth.c: 1053: PIR1bits.RCIF = 0;
 13788  001D2E  9A9E               	bcf	3998,5,c	;volatile
 13789                           
 13790                           ;Bluetooth.c: 1054: PIE1bits.RCIE = 1;
 13791  001D30  8A9D               	bsf	3997,5,c	;volatile
 13792                           
 13793                           ;Bluetooth.c: 1055: while(!NewReceivedString)
 13794  001D32  D023               	goto	l13402
 13795  001D34                     l13392:
 13796                           
 13797                           ;Bluetooth.c: 1056: {
 13798                           ;Bluetooth.c: 1057: delayUS(300000);
 13799  001D34  0EE0               	movlw	224
 13800  001D36  0100               	movlb	0	; () banked
 13801  001D38  6F60               	movwf	delayUS@US& (0+255),b
 13802  001D3A  0E93               	movlw	147
 13803  001D3C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 13804  001D3E  0E04               	movlw	4
 13805  001D40  6F62               	movwf	(delayUS@US+2)& (0+255),b
 13806  001D42  0E00               	movlw	0
 13807  001D44  6F63               	movwf	(delayUS@US+3)& (0+255),b
 13808  001D46  EC96  F053         	call	_delayUS	;wreg free
 13809                           
 13810                           ;Bluetooth.c: 1058: timeout++;
 13811  001D4A  0102               	movlb	2	; () banked
 13812  001D4C  2B80               	incf	UseBluetooth@timeout& (0+255),f,b
 13813                           
 13814                           ; BSR set to: 2
 13815                           ;Bluetooth.c: 1059: if(timeout > 25)
 13816  001D4E  0E19               	movlw	25
 13817  001D50  0102               	movlb	2	; () banked
 13818  001D52  6580               	cpfsgt	UseBluetooth@timeout& (0+255),b
 13819  001D54  D012               	goto	l13402
 13820                           
 13821                           ; BSR set to: 2
 13822                           ;Bluetooth.c: 1060: {
 13823                           ;Bluetooth.c: 1061: UARTstring_CONST(CRLN);
 13824  001D56  0E5E               	movlw	low _CRLN
 13825  001D58  0100               	movlb	0	; () banked
 13826  001D5A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13827  001D5C  0EEF               	movlw	high _CRLN
 13828  001D5E  0100               	movlb	0	; () banked
 13829  001D60  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13830  001D62  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13831                           
 13832                           ;Bluetooth.c: 1062: UARTstringCRLN_CONST("Device resumes without reset");
 13833  001D66  0EE9               	movlw	low STR_87
 13834  001D68  0100               	movlb	0	; () banked
 13835  001D6A  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13836  001D6C  0EF9               	movlw	high STR_87
 13837  001D6E  0100               	movlb	0	; () banked
 13838  001D70  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13839  001D72  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 13840                           
 13841                           ;Bluetooth.c: 1063: return 0;
 13842                           ;	Return value of _UseBluetooth is never used
 13843  001D76  0012               	return	
 13844  001D78  D000               	goto	l13402
 13845  001D7A                     l13402:
 13846  001D7A  0103               	movlb	3	; () banked
 13847  001D7C  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 13848  001D7E  B4D8               	btfsc	status,2,c
 13849  001D80  D7D9               	goto	l13392
 13850                           
 13851                           ; BSR set to: 3
 13852                           ;Bluetooth.c: 1064: }
 13853                           ;Bluetooth.c: 1065: }
 13854                           ;Bluetooth.c: 1066: PIE1bits.RCIE = 0;
 13855  001D82  9A9D               	bcf	3997,5,c	;volatile
 13856                           
 13857                           ; BSR set to: 3
 13858                           ;Bluetooth.c: 1067: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedS
      +                          tring[1] == 0)
 13859  001D84  0E59               	movlw	89
 13860  001D86  0104               	movlb	4	; () banked
 13861  001D88  1964               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 13862  001D8A  B4D8               	btfsc	status,2,c
 13863  001D8C  D009               	goto	l13410
 13864                           
 13865                           ; BSR set to: 4
 13866  001D8E  0E79               	movlw	121
 13867  001D90  0104               	movlb	4	; () banked
 13868  001D92  1964               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 13869  001D94  A4D8               	btfss	status,2,c
 13870  001D96  D014               	goto	l13420
 13871                           
 13872                           ; BSR set to: 4
 13873  001D98  0104               	movlb	4	; () banked
 13874  001D9A  5165               	movf	(_ReceivedString+1)& (0+255),w,b	;volatile
 13875  001D9C  A4D8               	btfss	status,2,c
 13876  001D9E  D010               	goto	l13420
 13877  001DA0                     l13410:
 13878                           
 13879                           ; BSR set to: 4
 13880                           ;Bluetooth.c: 1068: {
 13881                           ;Bluetooth.c: 1070: UARTstringCRLN_CONST("System will reset");
 13882  001DA0  0EBE               	movlw	low STR_88
 13883  001DA2  0100               	movlb	0	; () banked
 13884  001DA4  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13885  001DA6  0EFD               	movlw	high STR_88
 13886  001DA8  0100               	movlb	0	; () banked
 13887  001DAA  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13888  001DAC  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 13889                           
 13890                           ;Bluetooth.c: 1071: Global1.EEPROMinitFlag = 0;
 13891  001DB0  0E00               	movlw	0
 13892  001DB2  0102               	movlb	2	; () banked
 13893  001DB4  6FEF               	movwf	(_Global1+29)& (0+255),b
 13894                           
 13895                           ; BSR set to: 2
 13896                           ;Bluetooth.c: 1072: SyncGlobalToEEPROM();
 13897  001DB6  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 13898  001DBA  00FF               	reset		;# 
 13899                           
 13900                           ;Bluetooth.c: 1074: return 1;
 13901                           ;	Return value of _UseBluetooth is never used
 13902  001DBC  0012               	return	
 13903                           
 13904                           ;Bluetooth.c: 1075: }
 13905  001DBE  D011               	goto	l13422
 13906  001DC0                     l13420:
 13907                           
 13908                           ;Bluetooth.c: 1076: else
 13909                           ;Bluetooth.c: 1077: {
 13910                           ;Bluetooth.c: 1078: UARTstring_CONST(CRLN);
 13911  001DC0  0E5E               	movlw	low _CRLN
 13912  001DC2  0100               	movlb	0	; () banked
 13913  001DC4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 13914  001DC6  0EEF               	movlw	high _CRLN
 13915  001DC8  0100               	movlb	0	; () banked
 13916  001DCA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13917  001DCC  EC98  F055         	call	_UARTstring_CONST	;wreg free
 13918                           
 13919                           ;Bluetooth.c: 1079: UARTstringCRLN_CONST("Device resumes without reset");
 13920  001DD0  0EE9               	movlw	low STR_87
 13921  001DD2  0100               	movlb	0	; () banked
 13922  001DD4  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13923  001DD6  0EF9               	movlw	high STR_87
 13924  001DD8  0100               	movlb	0	; () banked
 13925  001DDA  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13926  001DDC  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 13927  001DE0  D000               	goto	l13422
 13928  001DE2                     l13422:
 13929                           
 13930                           ;Bluetooth.c: 1080: }
 13931                           ;Bluetooth.c: 1081: cleanBuffer(ReceivedString, ReceivedStringPos);
 13932  001DE2  0E64               	movlw	low _ReceivedString
 13933  001DE4  0100               	movlb	0	; () banked
 13934  001DE6  6F60               	movwf	cleanBuffer@data& (0+255),b
 13935  001DE8  0E04               	movlw	high _ReceivedString
 13936  001DEA  0100               	movlb	0	; () banked
 13937  001DEC  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13938  001DEE  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13939  001DF2  0100               	movlb	0	; () banked
 13940  001DF4  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13941  001DF6  EC3D  F053         	call	_cleanBuffer	;wreg free
 13942                           
 13943                           ;Bluetooth.c: 1082: ReceivedStringPos = 0;
 13944  001DFA  0E00               	movlw	0
 13945  001DFC  0103               	movlb	3	; () banked
 13946  001DFE  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13947                           
 13948                           ; BSR set to: 3
 13949                           ;Bluetooth.c: 1083: NewReceivedString = 0;
 13950  001E00  0E00               	movlw	0
 13951  001E02  0103               	movlb	3	; () banked
 13952  001E04  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 13953                           
 13954                           ; BSR set to: 3
 13955                           ;Bluetooth.c: 1085: }
 13956                           
 13957                           ; BSR set to: 3
 13958                           ;Bluetooth.c: 1084: return 0;
 13959                           ;	Return value of _UseBluetooth is never used
 13960  001E06  0012               	return	
 13961  001E08                     l13432:
 13962                           
 13963                           ;Bluetooth.c: 1086: else if(StringMatchCaseInsensitive(String,"Change SN"))
 13964  001E08  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 13965  001E0C  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 13966  001E10  0E45               	movlw	low STR_90
 13967  001E12  0100               	movlb	0	; () banked
 13968  001E14  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 13969  001E16  0EFF               	movlw	high STR_90
 13970  001E18  0100               	movlb	0	; () banked
 13971  001E1A  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 13972  001E1C  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 13973  001E20  0900               	iorlw	0
 13974  001E22  B4D8               	btfsc	status,2,c
 13975  001E24  D197               	goto	l13554
 13976                           
 13977                           ;Bluetooth.c: 1087: {
 13978                           ;Bluetooth.c: 1088: cleanBuffer(ReceivedString, ReceivedStringPos);
 13979  001E26  0E64               	movlw	low _ReceivedString
 13980  001E28  0100               	movlb	0	; () banked
 13981  001E2A  6F60               	movwf	cleanBuffer@data& (0+255),b
 13982  001E2C  0E04               	movlw	high _ReceivedString
 13983  001E2E  0100               	movlb	0	; () banked
 13984  001E30  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 13985  001E32  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 13986  001E36  0100               	movlb	0	; () banked
 13987  001E38  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 13988  001E3A  EC3D  F053         	call	_cleanBuffer	;wreg free
 13989                           
 13990                           ;Bluetooth.c: 1089: ReceivedStringPos = 0;
 13991  001E3E  0E00               	movlw	0
 13992  001E40  0103               	movlb	3	; () banked
 13993  001E42  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 13994                           
 13995                           ; BSR set to: 3
 13996                           ;Bluetooth.c: 1090: NewReceivedString = 0;
 13997  001E44  0E00               	movlw	0
 13998  001E46  0103               	movlb	3	; () banked
 13999  001E48  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 14000                           
 14001                           ; BSR set to: 3
 14002                           ;Bluetooth.c: 1091: UARTstring_CONST("Enter special 'Code' to change serial number or N 
      +                          to cancel");
 14003  001E4A  0E1F               	movlw	low STR_91
 14004  001E4C  0100               	movlb	0	; () banked
 14005  001E4E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14006  001E50  0EF0               	movlw	high STR_91
 14007  001E52  0100               	movlb	0	; () banked
 14008  001E54  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14009  001E56  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14010                           
 14011                           ;Bluetooth.c: 1092: UARTstring_CONST(CRLN);
 14012  001E5A  0E5E               	movlw	low _CRLN
 14013  001E5C  0100               	movlb	0	; () banked
 14014  001E5E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14015  001E60  0EEF               	movlw	high _CRLN
 14016  001E62  0100               	movlb	0	; () banked
 14017  001E64  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14018  001E66  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14019                           
 14020                           ;Bluetooth.c: 1093: UARTchar('>');
 14021  001E6A  0E3E               	movlw	62
 14022  001E6C  EC93  F056         	call	_UARTchar
 14023                           
 14024                           ;Bluetooth.c: 1094: timeout = 0;
 14025  001E70  0E00               	movlw	0
 14026  001E72  0102               	movlb	2	; () banked
 14027  001E74  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 14028                           
 14029                           ; BSR set to: 2
 14030                           ;Bluetooth.c: 1095: ClearUSART();
 14031  001E76  EC18  F057         	call	_ClearUSART	;wreg free
 14032                           
 14033                           ;Bluetooth.c: 1096: PIR1bits.RCIF = 0;
 14034  001E7A  9A9E               	bcf	3998,5,c	;volatile
 14035                           
 14036                           ;Bluetooth.c: 1097: PIE1bits.RCIE = 1;
 14037  001E7C  8A9D               	bsf	3997,5,c	;volatile
 14038                           
 14039                           ;Bluetooth.c: 1098: while(!NewReceivedString)
 14040  001E7E  D023               	goto	l13464
 14041  001E80                     l13454:
 14042                           
 14043                           ;Bluetooth.c: 1099: {
 14044                           ;Bluetooth.c: 1100: delayUS(300000);
 14045  001E80  0EE0               	movlw	224
 14046  001E82  0100               	movlb	0	; () banked
 14047  001E84  6F60               	movwf	delayUS@US& (0+255),b
 14048  001E86  0E93               	movlw	147
 14049  001E88  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14050  001E8A  0E04               	movlw	4
 14051  001E8C  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14052  001E8E  0E00               	movlw	0
 14053  001E90  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14054  001E92  EC96  F053         	call	_delayUS	;wreg free
 14055                           
 14056                           ;Bluetooth.c: 1101: timeout++;
 14057  001E96  0102               	movlb	2	; () banked
 14058  001E98  2B80               	incf	UseBluetooth@timeout& (0+255),f,b
 14059                           
 14060                           ; BSR set to: 2
 14061                           ;Bluetooth.c: 1102: if(timeout > 25)
 14062  001E9A  0E19               	movlw	25
 14063  001E9C  0102               	movlb	2	; () banked
 14064  001E9E  6580               	cpfsgt	UseBluetooth@timeout& (0+255),b
 14065  001EA0  D012               	goto	l13464
 14066                           
 14067                           ; BSR set to: 2
 14068                           ;Bluetooth.c: 1103: {
 14069                           ;Bluetooth.c: 1104: UARTstring_CONST(CRLN);
 14070  001EA2  0E5E               	movlw	low _CRLN
 14071  001EA4  0100               	movlb	0	; () banked
 14072  001EA6  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14073  001EA8  0EEF               	movlw	high _CRLN
 14074  001EAA  0100               	movlb	0	; () banked
 14075  001EAC  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14076  001EAE  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14077                           
 14078                           ;Bluetooth.c: 1105: UARTstringCRLN_CONST("Device resumes without changing serial number"
      +                          );
 14079  001EB2  0EBF               	movlw	low STR_92
 14080  001EB4  0100               	movlb	0	; () banked
 14081  001EB6  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14082  001EB8  0EF4               	movlw	high STR_92
 14083  001EBA  0100               	movlb	0	; () banked
 14084  001EBC  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14085  001EBE  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14086                           
 14087                           ;Bluetooth.c: 1106: return 0;
 14088                           ;	Return value of _UseBluetooth is never used
 14089  001EC2  0012               	return	
 14090  001EC4  D000               	goto	l13464
 14091  001EC6                     l13464:
 14092  001EC6  0103               	movlb	3	; () banked
 14093  001EC8  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 14094  001ECA  B4D8               	btfsc	status,2,c
 14095  001ECC  D7D9               	goto	l13454
 14096                           
 14097                           ; BSR set to: 3
 14098                           ;Bluetooth.c: 1107: }
 14099                           ;Bluetooth.c: 1108: }
 14100                           ;Bluetooth.c: 1109: PIE1bits.RCIE = 0;
 14101  001ECE  9A9D               	bcf	3997,5,c	;volatile
 14102                           
 14103                           ; BSR set to: 3
 14104                           ;Bluetooth.c: 1110: if(StringMatch(ReceivedString,"Code"))
 14105  001ED0  0E64               	movlw	low _ReceivedString
 14106  001ED2  0100               	movlb	0	; () banked
 14107  001ED4  6F60               	movwf	StringMatch@This& (0+255),b
 14108  001ED6  0E04               	movlw	high _ReceivedString
 14109  001ED8  0100               	movlb	0	; () banked
 14110  001EDA  6F61               	movwf	(StringMatch@This+1)& (0+255),b
 14111  001EDC  0ED7               	movlw	low STR_93
 14112  001EDE  0100               	movlb	0	; () banked
 14113  001EE0  6F62               	movwf	StringMatch@That& (0+255),b
 14114  001EE2  0EFF               	movlw	high STR_93
 14115  001EE4  0100               	movlb	0	; () banked
 14116  001EE6  6F63               	movwf	(StringMatch@That+1)& (0+255),b
 14117  001EE8  EC36  F052         	call	_StringMatch	;wreg free
 14118  001EEC  0900               	iorlw	0
 14119  001EEE  B4D8               	btfsc	status,2,c
 14120  001EF0  D120               	goto	l13548
 14121                           
 14122                           ;Bluetooth.c: 1111: {
 14123                           ;Bluetooth.c: 1112: cleanBuffer(ReceivedString, ReceivedStringPos);
 14124  001EF2  0E64               	movlw	low _ReceivedString
 14125  001EF4  0100               	movlb	0	; () banked
 14126  001EF6  6F60               	movwf	cleanBuffer@data& (0+255),b
 14127  001EF8  0E04               	movlw	high _ReceivedString
 14128  001EFA  0100               	movlb	0	; () banked
 14129  001EFC  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 14130  001EFE  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 14131  001F02  0100               	movlb	0	; () banked
 14132  001F04  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 14133  001F06  EC3D  F053         	call	_cleanBuffer	;wreg free
 14134                           
 14135                           ;Bluetooth.c: 1113: ReceivedStringPos = 0;
 14136  001F0A  0E00               	movlw	0
 14137  001F0C  0103               	movlb	3	; () banked
 14138  001F0E  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 14139                           
 14140                           ; BSR set to: 3
 14141                           ;Bluetooth.c: 1114: NewReceivedString = 0;
 14142  001F10  0E00               	movlw	0
 14143  001F12  0103               	movlb	3	; () banked
 14144  001F14  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 14145                           
 14146                           ; BSR set to: 3
 14147                           ;Bluetooth.c: 1115: UARTstring_CONST("Enter new Serial Number");
 14148  001F16  0E4B               	movlw	low STR_94
 14149  001F18  0100               	movlb	0	; () banked
 14150  001F1A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14151  001F1C  0EFB               	movlw	high STR_94
 14152  001F1E  0100               	movlb	0	; () banked
 14153  001F20  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14154  001F22  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14155                           
 14156                           ;Bluetooth.c: 1116: UARTstring_CONST(CRLN);
 14157  001F26  0E5E               	movlw	low _CRLN
 14158  001F28  0100               	movlb	0	; () banked
 14159  001F2A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14160  001F2C  0EEF               	movlw	high _CRLN
 14161  001F2E  0100               	movlb	0	; () banked
 14162  001F30  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14163  001F32  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14164                           
 14165                           ;Bluetooth.c: 1117: UARTchar_CONST('>');
 14166  001F36  0E3E               	movlw	62
 14167  001F38  EC74  F056         	call	_UARTchar_CONST
 14168                           
 14169                           ;Bluetooth.c: 1118: timeout = 0;
 14170  001F3C  0E00               	movlw	0
 14171  001F3E  0102               	movlb	2	; () banked
 14172  001F40  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 14173                           
 14174                           ; BSR set to: 2
 14175                           ;Bluetooth.c: 1119: ClearUSART();
 14176  001F42  EC18  F057         	call	_ClearUSART	;wreg free
 14177                           
 14178                           ;Bluetooth.c: 1120: PIR1bits.RCIF = 0;
 14179  001F46  9A9E               	bcf	3998,5,c	;volatile
 14180                           
 14181                           ;Bluetooth.c: 1121: PIE1bits.RCIE = 1;
 14182  001F48  8A9D               	bsf	3997,5,c	;volatile
 14183                           
 14184                           ;Bluetooth.c: 1122: while(!NewReceivedString)
 14185  001F4A  D02F               	goto	l13502
 14186  001F4C                     l13488:
 14187                           
 14188                           ;Bluetooth.c: 1123: {
 14189                           ;Bluetooth.c: 1124: delayUS(300000);
 14190  001F4C  0EE0               	movlw	224
 14191  001F4E  0100               	movlb	0	; () banked
 14192  001F50  6F60               	movwf	delayUS@US& (0+255),b
 14193  001F52  0E93               	movlw	147
 14194  001F54  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14195  001F56  0E04               	movlw	4
 14196  001F58  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14197  001F5A  0E00               	movlw	0
 14198  001F5C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14199  001F5E  EC96  F053         	call	_delayUS	;wreg free
 14200                           
 14201                           ;Bluetooth.c: 1125: timeout++;
 14202  001F62  0102               	movlb	2	; () banked
 14203  001F64  2B80               	incf	UseBluetooth@timeout& (0+255),f,b
 14204                           
 14205                           ; BSR set to: 2
 14206                           ;Bluetooth.c: 1126: if(ReceivedStringPos != ReceivedStringPosOLD)
 14207  001F66  0102               	movlb	2	; () banked
 14208  001F68  516F               	movf	UseBluetooth@ReceivedStringPosOLD& (0+255),w,b
 14209  001F6A  0103               	movlb	3	; () banked
 14210  001F6C  19EB               	xorwf	_ReceivedStringPos& (0+255),w,b	;volatile
 14211  001F6E  B4D8               	btfsc	status,2,c
 14212  001F70  D004               	goto	l13496
 14213                           
 14214                           ; BSR set to: 3
 14215                           ;Bluetooth.c: 1127: {
 14216                           ;Bluetooth.c: 1128: timeout = 0;
 14217  001F72  0E00               	movlw	0
 14218  001F74  0102               	movlb	2	; () banked
 14219  001F76  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 14220  001F78  D000               	goto	l13496
 14221  001F7A                     l13496:
 14222                           
 14223                           ;Bluetooth.c: 1129: }
 14224                           ;Bluetooth.c: 1130: if(timeout > 25)
 14225  001F7A  0E19               	movlw	25
 14226  001F7C  0102               	movlb	2	; () banked
 14227  001F7E  6580               	cpfsgt	UseBluetooth@timeout& (0+255),b
 14228  001F80  D011               	goto	l2280
 14229                           
 14230                           ; BSR set to: 2
 14231                           ;Bluetooth.c: 1131: {
 14232                           ;Bluetooth.c: 1132: UARTstring_CONST(CRLN);
 14233  001F82  0E5E               	movlw	low _CRLN
 14234  001F84  0100               	movlb	0	; () banked
 14235  001F86  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14236  001F88  0EEF               	movlw	high _CRLN
 14237  001F8A  0100               	movlb	0	; () banked
 14238  001F8C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14239  001F8E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14240                           
 14241                           ;Bluetooth.c: 1133: UARTstringCRLN_CONST("Device resumes without changing serial number"
      +                          );
 14242  001F92  0EBF               	movlw	low STR_92
 14243  001F94  0100               	movlb	0	; () banked
 14244  001F96  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14245  001F98  0EF4               	movlw	high STR_92
 14246  001F9A  0100               	movlb	0	; () banked
 14247  001F9C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14248  001F9E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14249                           
 14250                           ;Bluetooth.c: 1134: return 0;
 14251                           ;	Return value of _UseBluetooth is never used
 14252  001FA2  0012               	return	
 14253  001FA4                     l2280:
 14254                           
 14255                           ; BSR set to: 2
 14256                           ;Bluetooth.c: 1135: }
 14257                           ;Bluetooth.c: 1136: ReceivedStringPosOLD = ReceivedStringPos;
 14258  001FA4  C3EB  F26F         	movff	_ReceivedStringPos,UseBluetooth@ReceivedStringPosOLD	;volatile
 14259  001FA8  D000               	goto	l13502
 14260  001FAA                     l13502:
 14261  001FAA  0103               	movlb	3	; () banked
 14262  001FAC  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 14263  001FAE  B4D8               	btfsc	status,2,c
 14264  001FB0  D7CD               	goto	l13488
 14265                           
 14266                           ; BSR set to: 3
 14267                           ;Bluetooth.c: 1137: }
 14268                           ;Bluetooth.c: 1138: if(StringAddEqual(ReceivedString))
 14269                           
 14270                           ; BSR set to: 3
 14271  001FB2  0E64               	movlw	low _ReceivedString
 14272  001FB4  0100               	movlb	0	; () banked
 14273  001FB6  6F6F               	movwf	StringAddEqual@Input& (0+255),b
 14274  001FB8  0E04               	movlw	high _ReceivedString
 14275  001FBA  0100               	movlb	0	; () banked
 14276  001FBC  6F70               	movwf	(StringAddEqual@Input+1)& (0+255),b
 14277  001FBE  EC83  F03B         	call	_StringAddEqual	;wreg free
 14278  001FC2  0900               	iorlw	0
 14279  001FC4  B4D8               	btfsc	status,2,c
 14280  001FC6  D0A4               	goto	l13542
 14281                           
 14282                           ;Bluetooth.c: 1139: {
 14283                           ;Bluetooth.c: 1140: ReceivedStringPos++;
 14284  001FC8  0103               	movlb	3	; () banked
 14285  001FCA  2BEB               	incf	_ReceivedStringPos& (0+255),f,b	;volatile
 14286                           
 14287                           ; BSR set to: 3
 14288                           ;Bluetooth.c: 1141: if(!GetNumber(ReceivedString, 1, &SerialNumberTEMP))
 14289  001FCC  0E64               	movlw	low _ReceivedString
 14290  001FCE  0100               	movlb	0	; () banked
 14291  001FD0  6F6C               	movwf	GetNumber@This& (0+255),b
 14292  001FD2  0E04               	movlw	high _ReceivedString
 14293  001FD4  0100               	movlb	0	; () banked
 14294  001FD6  6F6D               	movwf	(GetNumber@This+1)& (0+255),b
 14295  001FD8  0E01               	movlw	1
 14296  001FDA  0100               	movlb	0	; () banked
 14297  001FDC  6F6E               	movwf	GetNumber@CommaNumber& (0+255),b
 14298  001FDE  0E74               	movlw	low UseBluetooth@SerialNumberTEMP
 14299  001FE0  0100               	movlb	0	; () banked
 14300  001FE2  6F6F               	movwf	GetNumber@result& (0+255),b
 14301  001FE4  0E02               	movlw	high UseBluetooth@SerialNumberTEMP
 14302  001FE6  0100               	movlb	0	; () banked
 14303  001FE8  6F70               	movwf	(GetNumber@result+1)& (0+255),b
 14304  001FEA  EC64  F030         	call	_GetNumber	;wreg free
 14305  001FEE  0900               	iorlw	0
 14306  001FF0  A4D8               	btfss	status,2,c
 14307  001FF2  D08E               	goto	l13542
 14308                           
 14309                           ;Bluetooth.c: 1142: {
 14310                           ;Bluetooth.c: 1143: if(SerialNumberTEMP > 0)
 14311  001FF4  0102               	movlb	2	; () banked
 14312  001FF6  BF77               	btfsc	(UseBluetooth@SerialNumberTEMP+3)& (0+255),7,b
 14313  001FF8  D08B               	goto	l13542
 14314  001FFA  0102               	movlb	2	; () banked
 14315  001FFC  5177               	movf	(UseBluetooth@SerialNumberTEMP+3)& (0+255),w,b
 14316  001FFE  0102               	movlb	2	; () banked
 14317  002000  1176               	iorwf	(UseBluetooth@SerialNumberTEMP+2)& (0+255),w,b
 14318  002002  0102               	movlb	2	; () banked
 14319  002004  1175               	iorwf	(UseBluetooth@SerialNumberTEMP+1)& (0+255),w,b
 14320  002006  E104               	bnz	u15370
 14321  002008  0102               	movlb	2	; () banked
 14322  00200A  0574               	decf	UseBluetooth@SerialNumberTEMP& (0+255),w,b
 14323  00200C  A0D8               	btfss	status,0,c
 14324  00200E  D080               	goto	l13542
 14325  002010                     u15370:
 14326                           
 14327                           ; BSR set to: 2
 14328                           ;Bluetooth.c: 1144: {
 14329                           ;Bluetooth.c: 1145: Global2.SerialNumber = (unsigned long) SerialNumberTEMP;
 14330  002010  C274  F2CE         	movff	UseBluetooth@SerialNumberTEMP,_Global2+48
 14331  002014  C275  F2CF         	movff	UseBluetooth@SerialNumberTEMP+1,_Global2+49
 14332  002018  C276  F2D0         	movff	UseBluetooth@SerialNumberTEMP+2,_Global2+50
 14333  00201C  C277  F2D1         	movff	UseBluetooth@SerialNumberTEMP+3,_Global2+51
 14334                           
 14335                           ; BSR set to: 2
 14336                           ;Bluetooth.c: 1146: if(!SetEEPROM2(Global2,0x00000002))
 14337  002020  EE22  F09E         	lfsr	2,_Global2
 14338  002024  EE00  F096         	lfsr	0,SetEEPROM2@Temp
 14339  002028  0E33               	movlw	51
 14340  00202A                     u15381:
 14341  00202A  CFDB FFEB          	movff	plusw2,plusw0
 14342  00202E  06E8               	decf	wreg,f,c
 14343  002030  E2FC               	bc	u15381
 14344  002032  0E02               	movlw	2
 14345  002034  0100               	movlb	0	; () banked
 14346  002036  6FCA               	movwf	SetEEPROM2@burn& (0+255),b
 14347  002038  0E00               	movlw	0
 14348  00203A  6FCB               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 14349  00203C  0E00               	movlw	0
 14350  00203E  6FCC               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 14351  002040  0E00               	movlw	0
 14352  002042  6FCD               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 14353  002044  ECB2  F048         	call	_SetEEPROM2	;wreg free
 14354  002048  0100               	movlb	0	; () banked
 14355  00204A  5196               	movf	?_SetEEPROM2& (0+255),w,b
 14356  00204C  0100               	movlb	0	; () banked
 14357  00204E  1197               	iorwf	(?_SetEEPROM2+1)& (0+255),w,b
 14358  002050  0100               	movlb	0	; () banked
 14359  002052  1198               	iorwf	(?_SetEEPROM2+2)& (0+255),w,b
 14360  002054  0100               	movlb	0	; () banked
 14361  002056  1199               	iorwf	(?_SetEEPROM2+3)& (0+255),w,b
 14362  002058  A4D8               	btfss	status,2,c
 14363  00205A  D048               	goto	l13538
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;Bluetooth.c: 1147: {
 14367                           ;Bluetooth.c: 1148: SyncEEPROMToGlobal();
 14368  00205C  EC83  F03C         	call	_SyncEEPROMToGlobal	;wreg free
 14369                           
 14370                           ;Bluetooth.c: 1149: UARTstringCRLN_CONST("Serial Number successfully burned to EEPROM");
 14371  002060  0E45               	movlw	low STR_96
 14372  002062  0100               	movlb	0	; () banked
 14373  002064  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14374  002066  0EF5               	movlw	high STR_96
 14375  002068  0100               	movlb	0	; () banked
 14376  00206A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14377  00206C  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14378                           
 14379                           ;Bluetooth.c: 1150: sprintf(buf,"Serial Number is now: %lu ",Global2.SerialNumber);
 14380  002070  0E00               	movlw	low UseBluetooth@buf
 14381  002072  0100               	movlb	0	; () banked
 14382  002074  6FAE               	movwf	sprintf@sp& (0+255),b
 14383  002076  0E02               	movlw	high UseBluetooth@buf
 14384  002078  0100               	movlb	0	; () banked
 14385  00207A  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 14386  00207C  0EB1               	movlw	low STR_97
 14387  00207E  0100               	movlb	0	; () banked
 14388  002080  6FB0               	movwf	sprintf@f& (0+255),b
 14389  002082  0EFA               	movlw	high STR_97
 14390  002084  0100               	movlb	0	; () banked
 14391  002086  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 14392  002088  C2CE  F0B2         	movff	_Global2+48,?_sprintf+4
 14393  00208C  C2CF  F0B3         	movff	_Global2+49,?_sprintf+5
 14394  002090  C2D0  F0B4         	movff	_Global2+50,?_sprintf+6
 14395  002094  C2D1  F0B5         	movff	_Global2+51,?_sprintf+7
 14396  002098  EC22  F016         	call	_sprintf	;wreg free
 14397                           
 14398                           ;Bluetooth.c: 1151: UARTstringCRLN(buf);
 14399  00209C  0E00               	movlw	low UseBluetooth@buf
 14400  00209E  0100               	movlb	0	; () banked
 14401  0020A0  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 14402  0020A2  0E02               	movlw	high UseBluetooth@buf
 14403  0020A4  0100               	movlb	0	; () banked
 14404  0020A6  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 14405  0020A8  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 14406                           
 14407                           ;Bluetooth.c: 1152: UARTstring_CONST(CRLN);
 14408  0020AC  0E5E               	movlw	low _CRLN
 14409  0020AE  0100               	movlb	0	; () banked
 14410  0020B0  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14411  0020B2  0EEF               	movlw	high _CRLN
 14412  0020B4  0100               	movlb	0	; () banked
 14413  0020B6  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14414  0020B8  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14415                           
 14416                           ;Bluetooth.c: 1154: UARTstringCRLN_CONST("System will reset");
 14417  0020BC  0EBE               	movlw	low STR_88
 14418  0020BE  0100               	movlb	0	; () banked
 14419  0020C0  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14420  0020C2  0EFD               	movlw	high STR_88
 14421  0020C4  0100               	movlb	0	; () banked
 14422  0020C6  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14423  0020C8  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14424                           
 14425                           ;Bluetooth.c: 1155: Global1.EEPROMinitFlag = 0;
 14426  0020CC  0E00               	movlw	0
 14427  0020CE  0102               	movlb	2	; () banked
 14428  0020D0  6FEF               	movwf	(_Global1+29)& (0+255),b
 14429                           
 14430                           ; BSR set to: 2
 14431                           ;Bluetooth.c: 1156: SyncGlobalToEEPROM();
 14432  0020D2  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 14433                           
 14434                           ;Bluetooth.c: 1157: UARTstring_CONST(CRLN);
 14435  0020D6  0E5E               	movlw	low _CRLN
 14436  0020D8  0100               	movlb	0	; () banked
 14437  0020DA  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14438  0020DC  0EEF               	movlw	high _CRLN
 14439  0020DE  0100               	movlb	0	; () banked
 14440  0020E0  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14441  0020E2  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14442  0020E6  00FF               	reset		;# 
 14443                           
 14444                           ;Bluetooth.c: 1159: return 1;
 14445                           ;	Return value of _UseBluetooth is never used
 14446  0020E8  0012               	return	
 14447                           
 14448                           ;Bluetooth.c: 1160: }
 14449  0020EA  D012               	goto	l13542
 14450  0020EC                     l13538:
 14451                           
 14452                           ;Bluetooth.c: 1161: else
 14453                           ;Bluetooth.c: 1162: {
 14454                           ;Bluetooth.c: 1163: UARTstringCRLN_CONST("Serial Number could not be burned to EEPROM");
 14455  0020EC  0E19               	movlw	low STR_99
 14456  0020EE  0100               	movlb	0	; () banked
 14457  0020F0  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14458  0020F2  0EF5               	movlw	high STR_99
 14459  0020F4  0100               	movlb	0	; () banked
 14460  0020F6  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14461  0020F8  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14462                           
 14463                           ;Bluetooth.c: 1164: UARTstring_CONST(CRLN);
 14464  0020FC  0E5E               	movlw	low _CRLN
 14465  0020FE  0100               	movlb	0	; () banked
 14466  002100  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14467  002102  0EEF               	movlw	high _CRLN
 14468  002104  0100               	movlb	0	; () banked
 14469  002106  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14470  002108  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14471                           
 14472                           ;Bluetooth.c: 1165: return 0;
 14473                           ;	Return value of _UseBluetooth is never used
 14474  00210C  0012               	return	
 14475  00210E  D000               	goto	l13542
 14476  002110                     l13542:
 14477                           
 14478                           ;Bluetooth.c: 1166: }
 14479                           ;Bluetooth.c: 1168: }
 14480                           ;Bluetooth.c: 1169: }
 14481                           ;Bluetooth.c: 1170: }
 14482                           ;Bluetooth.c: 1171: UARTstringCRLN_CONST("Serial Number entered incorrectly");
 14483  002110  0ECD               	movlw	low STR_100
 14484  002112  0100               	movlb	0	; () banked
 14485  002114  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14486  002116  0EF7               	movlw	high STR_100
 14487  002118  0100               	movlb	0	; () banked
 14488  00211A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14489  00211C  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14490                           
 14491                           ;Bluetooth.c: 1172: UARTstring_CONST(CRLN);
 14492  002120  0E5E               	movlw	low _CRLN
 14493  002122  0100               	movlb	0	; () banked
 14494  002124  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14495  002126  0EEF               	movlw	high _CRLN
 14496  002128  0100               	movlb	0	; () banked
 14497  00212A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14498  00212C  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14499                           
 14500                           ;Bluetooth.c: 1174: }
 14501                           
 14502                           ;Bluetooth.c: 1173: return 0;
 14503                           ;	Return value of _UseBluetooth is never used
 14504  002130  0012               	return	
 14505  002132                     l13548:
 14506                           
 14507                           ;Bluetooth.c: 1175: else
 14508                           ;Bluetooth.c: 1176: {
 14509                           ;Bluetooth.c: 1177: UARTstringCRLN_CONST("The 'Code' was wrong!!!");
 14510  002132  0E33               	movlw	low STR_101
 14511  002134  0100               	movlb	0	; () banked
 14512  002136  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14513  002138  0EFB               	movlw	high STR_101
 14514  00213A  0100               	movlb	0	; () banked
 14515  00213C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14516  00213E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14517                           
 14518                           ;Bluetooth.c: 1178: UARTstring_CONST(CRLN);
 14519  002142  0E5E               	movlw	low _CRLN
 14520  002144  0100               	movlb	0	; () banked
 14521  002146  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14522  002148  0EEF               	movlw	high _CRLN
 14523  00214A  0100               	movlb	0	; () banked
 14524  00214C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14525  00214E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14526                           
 14527                           ;Bluetooth.c: 1181: }
 14528                           
 14529                           ;Bluetooth.c: 1179: }
 14530                           ;Bluetooth.c: 1180: return 0;
 14531                           ;	Return value of _UseBluetooth is never used
 14532  002152  0012               	return	
 14533  002154                     l13554:
 14534                           
 14535                           ;Bluetooth.c: 1182: else if(StringMatchCaseInsensitive(String,"Change Bluetooth Name"))
 14536  002154  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 14537  002158  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 14538  00215C  0E1B               	movlw	low STR_102
 14539  00215E  0100               	movlb	0	; () banked
 14540  002160  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 14541  002162  0EFC               	movlw	high STR_102
 14542  002164  0100               	movlb	0	; () banked
 14543  002166  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 14544  002168  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 14545  00216C  0900               	iorlw	0
 14546  00216E  B4D8               	btfsc	status,2,c
 14547  002170  D15F               	goto	l13670
 14548                           
 14549                           ;Bluetooth.c: 1183: {
 14550                           ;Bluetooth.c: 1184: cleanBuffer(ReceivedString, ReceivedStringPos);
 14551  002172  0E64               	movlw	low _ReceivedString
 14552  002174  0100               	movlb	0	; () banked
 14553  002176  6F60               	movwf	cleanBuffer@data& (0+255),b
 14554  002178  0E04               	movlw	high _ReceivedString
 14555  00217A  0100               	movlb	0	; () banked
 14556  00217C  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 14557  00217E  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 14558  002182  0100               	movlb	0	; () banked
 14559  002184  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 14560  002186  EC3D  F053         	call	_cleanBuffer	;wreg free
 14561                           
 14562                           ;Bluetooth.c: 1185: ReceivedStringPos = 0;
 14563  00218A  0E00               	movlw	0
 14564  00218C  0103               	movlb	3	; () banked
 14565  00218E  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 14566                           
 14567                           ; BSR set to: 3
 14568                           ;Bluetooth.c: 1186: NewReceivedString = 0;
 14569  002190  0E00               	movlw	0
 14570  002192  0103               	movlb	3	; () banked
 14571  002194  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 14572                           
 14573                           ; BSR set to: 3
 14574                           ;Bluetooth.c: 1187: UARTstring_CONST(CRLN);
 14575  002196  0E5E               	movlw	low _CRLN
 14576  002198  0100               	movlb	0	; () banked
 14577  00219A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14578  00219C  0EEF               	movlw	high _CRLN
 14579  00219E  0100               	movlb	0	; () banked
 14580  0021A0  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14581  0021A2  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14582                           
 14583                           ;Bluetooth.c: 1188: UARTstring_CONST("Enter Y to change Name or N to cancel");
 14584  0021A6  0E44               	movlw	low STR_103
 14585  0021A8  0100               	movlb	0	; () banked
 14586  0021AA  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14587  0021AC  0EF6               	movlw	high STR_103
 14588  0021AE  0100               	movlb	0	; () banked
 14589  0021B0  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14590  0021B2  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14591                           
 14592                           ;Bluetooth.c: 1189: UARTstring_CONST(CRLN);
 14593  0021B6  0E5E               	movlw	low _CRLN
 14594  0021B8  0100               	movlb	0	; () banked
 14595  0021BA  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14596  0021BC  0EEF               	movlw	high _CRLN
 14597  0021BE  0100               	movlb	0	; () banked
 14598  0021C0  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14599  0021C2  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14600                           
 14601                           ;Bluetooth.c: 1190: UARTchar('>');
 14602  0021C6  0E3E               	movlw	62
 14603  0021C8  EC93  F056         	call	_UARTchar
 14604                           
 14605                           ;Bluetooth.c: 1191: timeout = 0;
 14606  0021CC  0E00               	movlw	0
 14607  0021CE  0102               	movlb	2	; () banked
 14608  0021D0  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 14609                           
 14610                           ; BSR set to: 2
 14611                           ;Bluetooth.c: 1192: ClearUSART();
 14612  0021D2  EC18  F057         	call	_ClearUSART	;wreg free
 14613                           
 14614                           ;Bluetooth.c: 1193: PIR1bits.RCIF = 0;
 14615  0021D6  9A9E               	bcf	3998,5,c	;volatile
 14616                           
 14617                           ;Bluetooth.c: 1194: PIE1bits.RCIE = 1;
 14618  0021D8  8A9D               	bsf	3997,5,c	;volatile
 14619                           
 14620                           ;Bluetooth.c: 1195: while(!NewReceivedString)
 14621  0021DA  D023               	goto	l13588
 14622  0021DC                     l13578:
 14623                           
 14624                           ;Bluetooth.c: 1196: {
 14625                           ;Bluetooth.c: 1197: delayUS(300000);
 14626  0021DC  0EE0               	movlw	224
 14627  0021DE  0100               	movlb	0	; () banked
 14628  0021E0  6F60               	movwf	delayUS@US& (0+255),b
 14629  0021E2  0E93               	movlw	147
 14630  0021E4  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14631  0021E6  0E04               	movlw	4
 14632  0021E8  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14633  0021EA  0E00               	movlw	0
 14634  0021EC  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14635  0021EE  EC96  F053         	call	_delayUS	;wreg free
 14636                           
 14637                           ;Bluetooth.c: 1198: timeout++;
 14638  0021F2  0102               	movlb	2	; () banked
 14639  0021F4  2B80               	incf	UseBluetooth@timeout& (0+255),f,b
 14640                           
 14641                           ; BSR set to: 2
 14642                           ;Bluetooth.c: 1199: if(timeout > 25)
 14643  0021F6  0E19               	movlw	25
 14644  0021F8  0102               	movlb	2	; () banked
 14645  0021FA  6580               	cpfsgt	UseBluetooth@timeout& (0+255),b
 14646  0021FC  D012               	goto	l13588
 14647                           
 14648                           ; BSR set to: 2
 14649                           ;Bluetooth.c: 1200: {
 14650                           ;Bluetooth.c: 1201: UARTstring_CONST(CRLN);
 14651  0021FE  0E5E               	movlw	low _CRLN
 14652  002200  0100               	movlb	0	; () banked
 14653  002202  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14654  002204  0EEF               	movlw	high _CRLN
 14655  002206  0100               	movlb	0	; () banked
 14656  002208  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14657  00220A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14658                           
 14659                           ;Bluetooth.c: 1202: UARTstringCRLN_CONST("Device resumes without changing Bluetooth Broa
      +                          dcast Name");
 14660  00220E  0E5B               	movlw	low STR_104
 14661  002210  0100               	movlb	0	; () banked
 14662  002212  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14663  002214  0EF0               	movlw	high STR_104
 14664  002216  0100               	movlb	0	; () banked
 14665  002218  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14666  00221A  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14667                           
 14668                           ;Bluetooth.c: 1203: return 0;
 14669                           ;	Return value of _UseBluetooth is never used
 14670  00221E  0012               	return	
 14671  002220  D000               	goto	l13588
 14672  002222                     l13588:
 14673  002222  0103               	movlb	3	; () banked
 14674  002224  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 14675  002226  B4D8               	btfsc	status,2,c
 14676  002228  D7D9               	goto	l13578
 14677                           
 14678                           ; BSR set to: 3
 14679                           ;Bluetooth.c: 1204: }
 14680                           ;Bluetooth.c: 1205: }
 14681                           ;Bluetooth.c: 1206: PIE1bits.RCIE = 0;
 14682  00222A  9A9D               	bcf	3997,5,c	;volatile
 14683                           
 14684                           ; BSR set to: 3
 14685                           ;Bluetooth.c: 1207: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedS
      +                          tring[1] == 0)
 14686  00222C  0E59               	movlw	89
 14687  00222E  0104               	movlb	4	; () banked
 14688  002230  1964               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 14689  002232  B4D8               	btfsc	status,2,c
 14690  002234  D009               	goto	l13596
 14691                           
 14692                           ; BSR set to: 4
 14693  002236  0E79               	movlw	121
 14694  002238  0104               	movlb	4	; () banked
 14695  00223A  1964               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 14696  00223C  A4D8               	btfss	status,2,c
 14697  00223E  D0E7               	goto	l13664
 14698                           
 14699                           ; BSR set to: 4
 14700  002240  0104               	movlb	4	; () banked
 14701  002242  5165               	movf	(_ReceivedString+1)& (0+255),w,b	;volatile
 14702  002244  A4D8               	btfss	status,2,c
 14703  002246  D0E3               	goto	l13664
 14704  002248                     l13596:
 14705                           
 14706                           ; BSR set to: 4
 14707                           ;Bluetooth.c: 1208: {
 14708                           ;Bluetooth.c: 1209: cleanBuffer(ReceivedString, ReceivedStringPos);
 14709  002248  0E64               	movlw	low _ReceivedString
 14710  00224A  0100               	movlb	0	; () banked
 14711  00224C  6F60               	movwf	cleanBuffer@data& (0+255),b
 14712  00224E  0E04               	movlw	high _ReceivedString
 14713  002250  0100               	movlb	0	; () banked
 14714  002252  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 14715  002254  C3EB  F062         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 14716  002258  0100               	movlb	0	; () banked
 14717  00225A  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 14718  00225C  EC3D  F053         	call	_cleanBuffer	;wreg free
 14719                           
 14720                           ;Bluetooth.c: 1210: ReceivedStringPos = 0;
 14721  002260  0E00               	movlw	0
 14722  002262  0103               	movlb	3	; () banked
 14723  002264  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 14724                           
 14725                           ; BSR set to: 3
 14726                           ;Bluetooth.c: 1211: NewReceivedString = 0;
 14727  002266  0E00               	movlw	0
 14728  002268  0103               	movlb	3	; () banked
 14729  00226A  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 14730                           
 14731                           ; BSR set to: 3
 14732                           ;Bluetooth.c: 1212: UARTstring_CONST(CRLN);
 14733  00226C  0E5E               	movlw	low _CRLN
 14734  00226E  0100               	movlb	0	; () banked
 14735  002270  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14736  002272  0EEF               	movlw	high _CRLN
 14737  002274  0100               	movlb	0	; () banked
 14738  002276  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14739  002278  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14740                           
 14741                           ;Bluetooth.c: 1213: UARTstring_CONST("Enter new Bluetooth Broadcast Name");
 14742  00227C  0E43               	movlw	low STR_105
 14743  00227E  0100               	movlb	0	; () banked
 14744  002280  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14745  002282  0EF7               	movlw	high STR_105
 14746  002284  0100               	movlb	0	; () banked
 14747  002286  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14748  002288  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14749                           
 14750                           ;Bluetooth.c: 1214: UARTstring_CONST(CRLN);
 14751  00228C  0E5E               	movlw	low _CRLN
 14752  00228E  0100               	movlb	0	; () banked
 14753  002290  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14754  002292  0EEF               	movlw	high _CRLN
 14755  002294  0100               	movlb	0	; () banked
 14756  002296  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14757  002298  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14758                           
 14759                           ;Bluetooth.c: 1215: UARTchar_CONST('>');
 14760  00229C  0E3E               	movlw	62
 14761  00229E  EC74  F056         	call	_UARTchar_CONST
 14762                           
 14763                           ;Bluetooth.c: 1216: timeout = 0;
 14764  0022A2  0E00               	movlw	0
 14765  0022A4  0102               	movlb	2	; () banked
 14766  0022A6  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 14767                           
 14768                           ; BSR set to: 2
 14769                           ;Bluetooth.c: 1217: ClearUSART();
 14770  0022A8  EC18  F057         	call	_ClearUSART	;wreg free
 14771                           
 14772                           ;Bluetooth.c: 1218: PIR1bits.RCIF = 0;
 14773  0022AC  9A9E               	bcf	3998,5,c	;volatile
 14774                           
 14775                           ;Bluetooth.c: 1219: PIE1bits.RCIE = 1;
 14776  0022AE  8A9D               	bsf	3997,5,c	;volatile
 14777                           
 14778                           ;Bluetooth.c: 1220: while(!NewReceivedString)
 14779  0022B0  D027               	goto	l13632
 14780  0022B2                     l13618:
 14781                           
 14782                           ;Bluetooth.c: 1221: {
 14783                           ;Bluetooth.c: 1222: delayUS(300000);
 14784  0022B2  0EE0               	movlw	224
 14785  0022B4  0100               	movlb	0	; () banked
 14786  0022B6  6F60               	movwf	delayUS@US& (0+255),b
 14787  0022B8  0E93               	movlw	147
 14788  0022BA  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14789  0022BC  0E04               	movlw	4
 14790  0022BE  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14791  0022C0  0E00               	movlw	0
 14792  0022C2  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14793  0022C4  EC96  F053         	call	_delayUS	;wreg free
 14794                           
 14795                           ;Bluetooth.c: 1223: timeout++;
 14796  0022C8  0102               	movlb	2	; () banked
 14797  0022CA  2B80               	incf	UseBluetooth@timeout& (0+255),f,b
 14798                           
 14799                           ; BSR set to: 2
 14800                           ;Bluetooth.c: 1224: if(ReceivedStringPos != ReceivedStringPosOLD)
 14801  0022CC  0102               	movlb	2	; () banked
 14802  0022CE  516F               	movf	UseBluetooth@ReceivedStringPosOLD& (0+255),w,b
 14803  0022D0  0103               	movlb	3	; () banked
 14804  0022D2  19EB               	xorwf	_ReceivedStringPos& (0+255),w,b	;volatile
 14805  0022D4  B4D8               	btfsc	status,2,c
 14806  0022D6  D004               	goto	l13626
 14807                           
 14808                           ; BSR set to: 3
 14809                           ;Bluetooth.c: 1225: {
 14810                           ;Bluetooth.c: 1226: timeout = 0;
 14811  0022D8  0E00               	movlw	0
 14812  0022DA  0102               	movlb	2	; () banked
 14813  0022DC  6F80               	movwf	UseBluetooth@timeout& (0+255),b
 14814  0022DE  D000               	goto	l13626
 14815  0022E0                     l13626:
 14816                           
 14817                           ;Bluetooth.c: 1227: }
 14818                           ;Bluetooth.c: 1228: if(timeout > 25)
 14819  0022E0  0E19               	movlw	25
 14820  0022E2  0102               	movlb	2	; () banked
 14821  0022E4  6580               	cpfsgt	UseBluetooth@timeout& (0+255),b
 14822  0022E6  D009               	goto	l2300
 14823                           
 14824                           ; BSR set to: 2
 14825                           ;Bluetooth.c: 1229: {
 14826                           ;Bluetooth.c: 1230: UARTstringCRLN_CONST("Device resumes without changing Bluetooth Broa
      +                          dcast Name");
 14827  0022E8  0E5B               	movlw	low STR_104
 14828  0022EA  0100               	movlb	0	; () banked
 14829  0022EC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14830  0022EE  0EF0               	movlw	high STR_104
 14831  0022F0  0100               	movlb	0	; () banked
 14832  0022F2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14833  0022F4  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14834                           
 14835                           ;Bluetooth.c: 1231: return 0;
 14836                           ;	Return value of _UseBluetooth is never used
 14837  0022F8  0012               	return	
 14838  0022FA                     l2300:
 14839                           
 14840                           ; BSR set to: 2
 14841                           ;Bluetooth.c: 1232: }
 14842                           ;Bluetooth.c: 1233: ReceivedStringPosOLD = ReceivedStringPos;
 14843  0022FA  C3EB  F26F         	movff	_ReceivedStringPos,UseBluetooth@ReceivedStringPosOLD	;volatile
 14844  0022FE  D000               	goto	l13632
 14845  002300                     l13632:
 14846  002300  0103               	movlb	3	; () banked
 14847  002302  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 14848  002304  B4D8               	btfsc	status,2,c
 14849  002306  D7D5               	goto	l13618
 14850                           
 14851                           ; BSR set to: 3
 14852                           ;Bluetooth.c: 1234: }
 14853                           ;Bluetooth.c: 1235: PIE1bits.RCIE = 0;
 14854  002308  9A9D               	bcf	3997,5,c	;volatile
 14855                           
 14856                           ; BSR set to: 3
 14857                           ;Bluetooth.c: 1236: UARTstring_CONST(CRLN);
 14858  00230A  0E5E               	movlw	low _CRLN
 14859  00230C  0100               	movlb	0	; () banked
 14860  00230E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14861  002310  0EEF               	movlw	high _CRLN
 14862  002312  0100               	movlb	0	; () banked
 14863  002314  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14864  002316  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14865                           
 14866                           ;Bluetooth.c: 1237: UARTstring_CONST(CRLN);
 14867  00231A  0E5E               	movlw	low _CRLN
 14868  00231C  0100               	movlb	0	; () banked
 14869  00231E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14870  002320  0EEF               	movlw	high _CRLN
 14871  002322  0100               	movlb	0	; () banked
 14872  002324  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14873  002326  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14874                           
 14875                           ;Bluetooth.c: 1238: if(ReceivedString[0] != 0 && ReceivedString[21-1] == 0)
 14876  00232A  0104               	movlb	4	; () banked
 14877  00232C  5164               	movf	_ReceivedString& (0+255),w,b	;volatile
 14878  00232E  B4D8               	btfsc	status,2,c
 14879  002330  D05D               	goto	l13662
 14880                           
 14881                           ; BSR set to: 4
 14882  002332  0104               	movlb	4	; () banked
 14883  002334  5178               	movf	(_ReceivedString+20)& (0+255),w,b	;volatile
 14884  002336  A4D8               	btfss	status,2,c
 14885  002338  D059               	goto	l13662
 14886                           
 14887                           ; BSR set to: 4
 14888                           ;Bluetooth.c: 1239: {
 14889                           ;Bluetooth.c: 1240: if(IsAlphaNumericString(ReceivedString))
 14890  00233A  0E64               	movlw	low _ReceivedString
 14891  00233C  0100               	movlb	0	; () banked
 14892  00233E  6F62               	movwf	IsAlphaNumericString@data& (0+255),b
 14893  002340  0E04               	movlw	high _ReceivedString
 14894  002342  0100               	movlb	0	; () banked
 14895  002344  6F63               	movwf	(IsAlphaNumericString@data+1)& (0+255),b
 14896  002346  EC31  F055         	call	_IsAlphaNumericString	;wreg free
 14897  00234A  0900               	iorlw	0
 14898  00234C  B4D8               	btfsc	status,2,c
 14899  00234E  D03D               	goto	l13660
 14900                           
 14901                           ;Bluetooth.c: 1241: {
 14902                           ;Bluetooth.c: 1242: UARTstringCRLN_CONST("Bluetooth Module will Reset. Please reconnect 
      +                          device");
 14903  002350  0E00               	movlw	low STR_107
 14904  002352  0100               	movlb	0	; () banked
 14905  002354  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14906  002356  0EF1               	movlw	high STR_107
 14907  002358  0100               	movlb	0	; () banked
 14908  00235A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14909  00235C  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 14910                           
 14911                           ;Bluetooth.c: 1243: UARTstring_CONST(CRLN);
 14912  002360  0E5E               	movlw	low _CRLN
 14913  002362  0100               	movlb	0	; () banked
 14914  002364  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 14915  002366  0EEF               	movlw	high _CRLN
 14916  002368  0100               	movlb	0	; () banked
 14917  00236A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14918  00236C  EC98  F055         	call	_UARTstring_CONST	;wreg free
 14919                           
 14920                           ;Bluetooth.c: 1244: BufferCopy(ReceivedString,BluetoothBroadcast, 21, 0);
 14921  002370  0E64               	movlw	low _ReceivedString
 14922  002372  0100               	movlb	0	; () banked
 14923  002374  6F68               	movwf	BufferCopy@from& (0+255),b
 14924  002376  0E04               	movlw	high _ReceivedString
 14925  002378  0100               	movlb	0	; () banked
 14926  00237A  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 14927  00237C  0EE6               	movlw	low _BluetoothBroadcast
 14928  00237E  0100               	movlb	0	; () banked
 14929  002380  6F6A               	movwf	BufferCopy@to& (0+255),b
 14930  002382  0E04               	movlw	high _BluetoothBroadcast
 14931  002384  0100               	movlb	0	; () banked
 14932  002386  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 14933  002388  0E15               	movlw	21
 14934  00238A  0100               	movlb	0	; () banked
 14935  00238C  6F6C               	movwf	BufferCopy@count& (0+255),b
 14936  00238E  0E00               	movlw	0
 14937  002390  0100               	movlb	0	; () banked
 14938  002392  6F6D               	movwf	BufferCopy@shift& (0+255),b
 14939  002394  EC36  F051         	call	_BufferCopy	;wreg free
 14940                           
 14941                           ;Bluetooth.c: 1245: delayUS(50000);
 14942  002398  0E50               	movlw	80
 14943  00239A  0100               	movlb	0	; () banked
 14944  00239C  6F60               	movwf	delayUS@US& (0+255),b
 14945  00239E  0EC3               	movlw	195
 14946  0023A0  6F61               	movwf	(delayUS@US+1)& (0+255),b
 14947  0023A2  0E00               	movlw	0
 14948  0023A4  6F62               	movwf	(delayUS@US+2)& (0+255),b
 14949  0023A6  0E00               	movlw	0
 14950  0023A8  6F63               	movwf	(delayUS@US+3)& (0+255),b
 14951  0023AA  EC96  F053         	call	_delayUS	;wreg free
 14952                           
 14953                           ;Bluetooth.c: 1246: if(BluetoothInitialSetup(0))
 14954  0023AE  0E00               	movlw	0
 14955  0023B0  EC1E  F024         	call	_BluetoothInitialSetup
 14956  0023B4  0900               	iorlw	0
 14957  0023B6  B4D8               	btfsc	status,2,c
 14958  0023B8  D004               	goto	l13656
 14959                           
 14960                           ;Bluetooth.c: 1247: {
 14961                           ;Bluetooth.c: 1248: BluetoothChangeStatus = 1;
 14962  0023BA  0E01               	movlw	1
 14963  0023BC  0103               	movlb	3	; () banked
 14964  0023BE  6FE8               	movwf	_BluetoothChangeStatus& (0+255),b
 14965                           
 14966                           ; BSR set to: 3
 14967                           ;Bluetooth.c: 1250: }
 14968                           
 14969                           ; BSR set to: 3
 14970                           ;Bluetooth.c: 1249: return 1;
 14971                           ;	Return value of _UseBluetooth is never used
 14972  0023C0  0012               	return	
 14973  0023C2                     l13656:
 14974                           
 14975                           ;Bluetooth.c: 1251: else
 14976                           ;Bluetooth.c: 1252: {
 14977                           ;Bluetooth.c: 1253: BluetoothChangeStatus = 0;
 14978  0023C2  0E00               	movlw	0
 14979  0023C4  0103               	movlb	3	; () banked
 14980  0023C6  6FE8               	movwf	_BluetoothChangeStatus& (0+255),b
 14981                           
 14982                           ; BSR set to: 3
 14983                           ;Bluetooth.c: 1255: }
 14984                           ;Bluetooth.c: 1256: }
 14985                           
 14986                           ; BSR set to: 3
 14987                           ;Bluetooth.c: 1254: return 0;
 14988                           ;	Return value of _UseBluetooth is never used
 14989  0023C8  0012               	return	
 14990  0023CA                     l13660:
 14991                           
 14992                           ;Bluetooth.c: 1257: else
 14993                           ;Bluetooth.c: 1258: {
 14994                           ;Bluetooth.c: 1259: UARTstringCRLN_CONST("Name has to be Alphanumeric. No symbols!");
 14995  0023CA  0EF3               	movlw	low STR_108
 14996  0023CC  0100               	movlb	0	; () banked
 14997  0023CE  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14998  0023D0  0EF5               	movlw	high STR_108
 14999  0023D2  0100               	movlb	0	; () banked
 15000  0023D4  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15001  0023D6  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15002                           
 15003                           ;Bluetooth.c: 1260: UARTstring_CONST(CRLN);
 15004  0023DA  0E5E               	movlw	low _CRLN
 15005  0023DC  0100               	movlb	0	; () banked
 15006  0023DE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15007  0023E0  0EEF               	movlw	high _CRLN
 15008  0023E2  0100               	movlb	0	; () banked
 15009  0023E4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15010  0023E6  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15011                           
 15012                           ;Bluetooth.c: 1261: }
 15013                           ;Bluetooth.c: 1262: }
 15014  0023EA  0012               	return	
 15015  0023EC                     l13662:
 15016                           
 15017                           ;Bluetooth.c: 1263: else
 15018                           ;Bluetooth.c: 1264: {
 15019                           ;Bluetooth.c: 1265: UARTstringCRLN_CONST("Entered Name is too long. Name must be less th
      +                          an 21 characters!");
 15020  0023EC  0E61               	movlw	low STR_109
 15021  0023EE  0100               	movlb	0	; () banked
 15022  0023F0  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15023  0023F2  0EEF               	movlw	high STR_109
 15024  0023F4  0100               	movlb	0	; () banked
 15025  0023F6  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15026  0023F8  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15027                           
 15028                           ;Bluetooth.c: 1266: UARTstring_CONST(CRLN);
 15029  0023FC  0E5E               	movlw	low _CRLN
 15030  0023FE  0100               	movlb	0	; () banked
 15031  002400  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15032  002402  0EEF               	movlw	high _CRLN
 15033  002404  0100               	movlb	0	; () banked
 15034  002406  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15035  002408  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15036                           
 15037                           ;Bluetooth.c: 1267: }
 15038                           ;Bluetooth.c: 1268: }
 15039  00240C  0012               	return	
 15040  00240E                     l13664:
 15041                           
 15042                           ;Bluetooth.c: 1269: else
 15043                           ;Bluetooth.c: 1270: {
 15044                           ;Bluetooth.c: 1271: UARTstringCRLN_CONST("Device resumes without changing Bluetooth Broa
      +                          dcast Name");
 15045  00240E  0E5B               	movlw	low STR_104
 15046  002410  0100               	movlb	0	; () banked
 15047  002412  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15048  002414  0EF0               	movlw	high STR_104
 15049  002416  0100               	movlb	0	; () banked
 15050  002418  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15051  00241A  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15052                           
 15053                           ;Bluetooth.c: 1272: UARTstring_CONST(CRLN);
 15054  00241E  0E5E               	movlw	low _CRLN
 15055  002420  0100               	movlb	0	; () banked
 15056  002422  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15057  002424  0EEF               	movlw	high _CRLN
 15058  002426  0100               	movlb	0	; () banked
 15059  002428  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15060  00242A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15061                           
 15062                           ;Bluetooth.c: 1275: }
 15063                           
 15064                           ;Bluetooth.c: 1273: }
 15065                           ;Bluetooth.c: 1274: return 0;
 15066                           ;	Return value of _UseBluetooth is never used
 15067  00242E  0012               	return	
 15068  002430                     l13670:
 15069                           
 15070                           ;Bluetooth.c: 1276: else if(StringMatchCaseInsensitive(String,"Voltage"))
 15071  002430  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 15072  002434  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 15073  002438  0E7D               	movlw	low STR_111
 15074  00243A  0100               	movlb	0	; () banked
 15075  00243C  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 15076  00243E  0EFF               	movlw	high STR_111
 15077  002440  0100               	movlb	0	; () banked
 15078  002442  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 15079  002444  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 15080  002448  0900               	iorlw	0
 15081  00244A  B4D8               	btfsc	status,2,c
 15082  00244C  D02F               	goto	l13680
 15083                           
 15084                           ;Bluetooth.c: 1277: {
 15085                           ;Bluetooth.c: 1278: UARTstring_CONST(CRLN);
 15086  00244E  0E5E               	movlw	low _CRLN
 15087  002450  0100               	movlb	0	; () banked
 15088  002452  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15089  002454  0EEF               	movlw	high _CRLN
 15090  002456  0100               	movlb	0	; () banked
 15091  002458  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15092  00245A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15093                           
 15094                           ;Bluetooth.c: 1279: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 15095  00245E  0E00               	movlw	low UseBluetooth@buf
 15096  002460  0100               	movlb	0	; () banked
 15097  002462  6FAE               	movwf	sprintf@sp& (0+255),b
 15098  002464  0E02               	movlw	high UseBluetooth@buf
 15099  002466  0100               	movlb	0	; () banked
 15100  002468  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15101  00246A  0E00               	movlw	low STR_112
 15102  00246C  0100               	movlb	0	; () banked
 15103  00246E  6FB0               	movwf	sprintf@f& (0+255),b
 15104  002470  0EFD               	movlw	high STR_112
 15105  002472  0100               	movlb	0	; () banked
 15106  002474  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15107  002476  EC10  F050         	call	_ReadVoltage	;wreg free
 15108  00247A  C089  F0B2         	movff	?_ReadVoltage,?_sprintf+4
 15109  00247E  C08A  F0B3         	movff	?_ReadVoltage+1,?_sprintf+5
 15110  002482  C08B  F0B4         	movff	?_ReadVoltage+2,?_sprintf+6
 15111  002486  EC22  F016         	call	_sprintf	;wreg free
 15112                           
 15113                           ;Bluetooth.c: 1280: UARTstringCRLN(buf);
 15114  00248A  0E00               	movlw	low UseBluetooth@buf
 15115  00248C  0100               	movlb	0	; () banked
 15116  00248E  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 15117  002490  0E02               	movlw	high UseBluetooth@buf
 15118  002492  0100               	movlb	0	; () banked
 15119  002494  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 15120  002496  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 15121                           
 15122                           ;Bluetooth.c: 1281: UARTstring_CONST(CRLN);
 15123  00249A  0E5E               	movlw	low _CRLN
 15124  00249C  0100               	movlb	0	; () banked
 15125  00249E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15126  0024A0  0EEF               	movlw	high _CRLN
 15127  0024A2  0100               	movlb	0	; () banked
 15128  0024A4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15129  0024A6  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15130                           
 15131                           ;Bluetooth.c: 1282: }
 15132  0024AA  0012               	return	
 15133  0024AC                     l13680:
 15134                           
 15135                           ;Bluetooth.c: 1283: else if(StringMatchCaseInsensitive(String,"Version"))
 15136  0024AC  C0E6  F063         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 15137  0024B0  C0E7  F064         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 15138  0024B4  0E81               	movlw	low (STR_129+27)
 15139  0024B6  0100               	movlb	0	; () banked
 15140  0024B8  6F65               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 15141  0024BA  0EF7               	movlw	high (STR_129+27)
 15142  0024BC  0100               	movlb	0	; () banked
 15143  0024BE  6F66               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 15144  0024C0  EC5F  F050         	call	_StringMatchCaseInsensitive	;wreg free
 15145  0024C4  0900               	iorlw	0
 15146  0024C6  B4D8               	btfsc	status,2,c
 15147  0024C8  D0CB               	goto	l13722
 15148                           
 15149                           ;Bluetooth.c: 1284: {
 15150                           ;Bluetooth.c: 1285: UARTstring_CONST(CRLN);
 15151  0024CA  0E5E               	movlw	low _CRLN
 15152  0024CC  0100               	movlb	0	; () banked
 15153  0024CE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15154  0024D0  0EEF               	movlw	high _CRLN
 15155  0024D2  0100               	movlb	0	; () banked
 15156  0024D4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15157  0024D6  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15158                           
 15159                           ;Bluetooth.c: 1286: sprintf(buf,"Firmware Version: %s", FirmVersion);
 15160  0024DA  0E00               	movlw	low UseBluetooth@buf
 15161  0024DC  0100               	movlb	0	; () banked
 15162  0024DE  6FAE               	movwf	sprintf@sp& (0+255),b
 15163  0024E0  0E02               	movlw	high UseBluetooth@buf
 15164  0024E2  0100               	movlb	0	; () banked
 15165  0024E4  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15166  0024E6  0E9B               	movlw	low STR_114
 15167  0024E8  0100               	movlb	0	; () banked
 15168  0024EA  6FB0               	movwf	sprintf@f& (0+255),b
 15169  0024EC  0EFC               	movlw	high STR_114
 15170  0024EE  0100               	movlb	0	; () banked
 15171  0024F0  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15172  0024F2  0E44               	movlw	low _FirmVersion
 15173  0024F4  0100               	movlb	0	; () banked
 15174  0024F6  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 15175  0024F8  0EEF               	movlw	high _FirmVersion
 15176  0024FA  0100               	movlb	0	; () banked
 15177  0024FC  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 15178  0024FE  EC22  F016         	call	_sprintf	;wreg free
 15179                           
 15180                           ;Bluetooth.c: 1287: UARTstringCRLN(buf);
 15181  002502  0E00               	movlw	low UseBluetooth@buf
 15182  002504  0100               	movlb	0	; () banked
 15183  002506  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 15184  002508  0E02               	movlw	high UseBluetooth@buf
 15185  00250A  0100               	movlb	0	; () banked
 15186  00250C  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 15187  00250E  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 15188                           
 15189                           ;Bluetooth.c: 1288: UARTstring_CONST(CRLN);
 15190  002512  0E5E               	movlw	low _CRLN
 15191  002514  0100               	movlb	0	; () banked
 15192  002516  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15193  002518  0EEF               	movlw	high _CRLN
 15194  00251A  0100               	movlb	0	; () banked
 15195  00251C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15196  00251E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15197                           
 15198                           ;Bluetooth.c: 1290: UARTstringCRLN_CONST("PCB has Bluetooth capability");
 15199  002522  0E40               	movlw	low STR_115
 15200  002524  0100               	movlb	0	; () banked
 15201  002526  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15202  002528  0EFA               	movlw	high STR_115
 15203  00252A  0100               	movlb	0	; () banked
 15204  00252C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15205  00252E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15206                           
 15207                           ;Bluetooth.c: 1291: UARTstring_CONST(CRLN);
 15208  002532  0E5E               	movlw	low _CRLN
 15209  002534  0100               	movlb	0	; () banked
 15210  002536  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15211  002538  0EEF               	movlw	high _CRLN
 15212  00253A  0100               	movlb	0	; () banked
 15213  00253C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15214  00253E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15215                           
 15216                           ;Bluetooth.c: 1292: UARTstringCRLN_CONST("Bluetooth firmware is:");
 15217  002542  0EAA               	movlw	low STR_116
 15218  002544  0100               	movlb	0	; () banked
 15219  002546  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15220  002548  0EFB               	movlw	high STR_116
 15221  00254A  0100               	movlb	0	; () banked
 15222  00254C  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15223  00254E  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15224                           
 15225                           ;Bluetooth.c: 1293: UARTstringCRLN(BluetoothFirmware1);
 15226  002552  0EC8               	movlw	low _BluetoothFirmware1
 15227  002554  0100               	movlb	0	; () banked
 15228  002556  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 15229  002558  0E04               	movlw	high _BluetoothFirmware1
 15230  00255A  0100               	movlb	0	; () banked
 15231  00255C  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 15232  00255E  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 15233                           
 15234                           ;Bluetooth.c: 1294: UARTstringCRLN(BluetoothFirmware2);
 15235  002562  0E32               	movlw	low _BluetoothFirmware2
 15236  002564  0100               	movlb	0	; () banked
 15237  002566  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 15238  002568  0E05               	movlw	high _BluetoothFirmware2
 15239  00256A  0100               	movlb	0	; () banked
 15240  00256C  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 15241  00256E  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 15242                           
 15243                           ;Bluetooth.c: 1295: UARTstring_CONST(CRLN);
 15244  002572  0E5E               	movlw	low _CRLN
 15245  002574  0100               	movlb	0	; () banked
 15246  002576  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15247  002578  0EEF               	movlw	high _CRLN
 15248  00257A  0100               	movlb	0	; () banked
 15249  00257C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15250  00257E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15251                           
 15252                           ;Bluetooth.c: 1300: sprintf(buf,"PCB Version: %s", PCBVersion);
 15253  002582  0E00               	movlw	low UseBluetooth@buf
 15254  002584  0100               	movlb	0	; () banked
 15255  002586  6FAE               	movwf	sprintf@sp& (0+255),b
 15256  002588  0E02               	movlw	high UseBluetooth@buf
 15257  00258A  0100               	movlb	0	; () banked
 15258  00258C  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15259  00258E  0E13               	movlw	low STR_117
 15260  002590  0100               	movlb	0	; () banked
 15261  002592  6FB0               	movwf	sprintf@f& (0+255),b
 15262  002594  0EFE               	movlw	high STR_117
 15263  002596  0100               	movlb	0	; () banked
 15264  002598  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15265  00259A  0E4D               	movlw	low _PCBVersion
 15266  00259C  0100               	movlb	0	; () banked
 15267  00259E  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 15268  0025A0  0EEF               	movlw	high _PCBVersion
 15269  0025A2  0100               	movlb	0	; () banked
 15270  0025A4  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 15271  0025A6  EC22  F016         	call	_sprintf	;wreg free
 15272                           
 15273                           ;Bluetooth.c: 1301: UARTstringCRLN(buf);
 15274  0025AA  0E00               	movlw	low UseBluetooth@buf
 15275  0025AC  0100               	movlb	0	; () banked
 15276  0025AE  6F64               	movwf	UARTstringCRLN@data& (0+255),b
 15277  0025B0  0E02               	movlw	high UseBluetooth@buf
 15278  0025B2  0100               	movlb	0	; () banked
 15279  0025B4  6F65               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 15280  0025B6  ECF9  F054         	call	_UARTstringCRLN	;wreg free
 15281                           
 15282                           ;Bluetooth.c: 1302: sprintf(buf,"Transmitting Frequency: %s", Frequency);
 15283  0025BA  0E00               	movlw	low UseBluetooth@buf
 15284  0025BC  0100               	movlb	0	; () banked
 15285  0025BE  6FAE               	movwf	sprintf@sp& (0+255),b
 15286  0025C0  0E02               	movlw	high UseBluetooth@buf
 15287  0025C2  0100               	movlb	0	; () banked
 15288  0025C4  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15289  0025C6  0ECC               	movlw	low STR_118
 15290  0025C8  0100               	movlb	0	; () banked
 15291  0025CA  6FB0               	movwf	sprintf@f& (0+255),b
 15292  0025CC  0EFA               	movlw	high STR_118
 15293  0025CE  0100               	movlb	0	; () banked
 15294  0025D0  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15295  0025D2  0E5A               	movlw	low _Frequency
 15296  0025D4  0100               	movlb	0	; () banked
 15297  0025D6  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 15298  0025D8  0EEF               	movlw	high _Frequency
 15299  0025DA  0100               	movlb	0	; () banked
 15300  0025DC  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 15301  0025DE  EC22  F016         	call	_sprintf	;wreg free
 15302                           
 15303                           ;Bluetooth.c: 1303: UARTstring(buf);
 15304  0025E2  0E00               	movlw	low UseBluetooth@buf
 15305  0025E4  0100               	movlb	0	; () banked
 15306  0025E6  6F61               	movwf	UARTstring@data& (0+255),b
 15307  0025E8  0E02               	movlw	high UseBluetooth@buf
 15308  0025EA  0100               	movlb	0	; () banked
 15309  0025EC  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 15310  0025EE  EC39  F056         	call	_UARTstring	;wreg free
 15311                           
 15312                           ;Bluetooth.c: 1304: UARTstringCRLN_CONST(" MHz");
 15313  0025F2  0EDC               	movlw	low STR_119
 15314  0025F4  0100               	movlb	0	; () banked
 15315  0025F6  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15316  0025F8  0EFF               	movlw	high STR_119
 15317  0025FA  0100               	movlb	0	; () banked
 15318  0025FC  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15319  0025FE  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15320                           
 15321                           ;Bluetooth.c: 1305: UARTstring_CONST(CRLN);
 15322  002602  0E5E               	movlw	low _CRLN
 15323  002604  0100               	movlb	0	; () banked
 15324  002606  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15325  002608  0EEF               	movlw	high _CRLN
 15326  00260A  0100               	movlb	0	; () banked
 15327  00260C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15328  00260E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15329                           
 15330                           ;Bluetooth.c: 1306: sprintf(buf,"Serial Number: %lu", Global2.SerialNumber);
 15331  002612  0E00               	movlw	low UseBluetooth@buf
 15332  002614  0100               	movlb	0	; () banked
 15333  002616  6FAE               	movwf	sprintf@sp& (0+255),b
 15334  002618  0E02               	movlw	high UseBluetooth@buf
 15335  00261A  0100               	movlb	0	; () banked
 15336  00261C  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15337  00261E  0E87               	movlw	low STR_120
 15338  002620  0100               	movlb	0	; () banked
 15339  002622  6FB0               	movwf	sprintf@f& (0+255),b
 15340  002624  0EFD               	movlw	high STR_120
 15341  002626  0100               	movlb	0	; () banked
 15342  002628  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15343  00262A  C2CE  F0B2         	movff	_Global2+48,?_sprintf+4
 15344  00262E  C2CF  F0B3         	movff	_Global2+49,?_sprintf+5
 15345  002632  C2D0  F0B4         	movff	_Global2+50,?_sprintf+6
 15346  002636  C2D1  F0B5         	movff	_Global2+51,?_sprintf+7
 15347  00263A  EC22  F016         	call	_sprintf	;wreg free
 15348                           
 15349                           ;Bluetooth.c: 1307: UARTstring(buf);
 15350  00263E  0E00               	movlw	low UseBluetooth@buf
 15351  002640  0100               	movlb	0	; () banked
 15352  002642  6F61               	movwf	UARTstring@data& (0+255),b
 15353  002644  0E02               	movlw	high UseBluetooth@buf
 15354  002646  0100               	movlb	0	; () banked
 15355  002648  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 15356  00264A  EC39  F056         	call	_UARTstring	;wreg free
 15357                           
 15358                           ;Bluetooth.c: 1308: UARTstring_CONST(CRLN);
 15359  00264E  0E5E               	movlw	low _CRLN
 15360  002650  0100               	movlb	0	; () banked
 15361  002652  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15362  002654  0EEF               	movlw	high _CRLN
 15363  002656  0100               	movlb	0	; () banked
 15364  002658  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15365  00265A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15366                           
 15367                           ;Bluetooth.c: 1310: }
 15368                           
 15369                           ;Bluetooth.c: 1309: return 1;
 15370                           ;	Return value of _UseBluetooth is never used
 15371  00265E  0012               	return	
 15372  002660                     l13722:
 15373                           
 15374                           ;Bluetooth.c: 1311: else if(StringMatch(String,"???"))
 15375  002660  C0E6  F060         	movff	UseBluetooth@String,StringMatch@This
 15376  002664  C0E7  F061         	movff	UseBluetooth@String+1,StringMatch@This+1
 15377  002668  0EE5               	movlw	low STR_121
 15378  00266A  0100               	movlb	0	; () banked
 15379  00266C  6F62               	movwf	StringMatch@That& (0+255),b
 15380  00266E  0EFF               	movlw	high STR_121
 15381  002670  0100               	movlb	0	; () banked
 15382  002672  6F63               	movwf	(StringMatch@That+1)& (0+255),b
 15383  002674  EC36  F052         	call	_StringMatch	;wreg free
 15384  002678  0900               	iorlw	0
 15385  00267A  B4D8               	btfsc	status,2,c
 15386  00267C  D2C9               	goto	l13810
 15387                           
 15388                           ;Bluetooth.c: 1312: {
 15389                           ;Bluetooth.c: 1313: UARTstring_CONST(CRLN);
 15390  00267E  0E5E               	movlw	low _CRLN
 15391  002680  0100               	movlb	0	; () banked
 15392  002682  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15393  002684  0EEF               	movlw	high _CRLN
 15394  002686  0100               	movlb	0	; () banked
 15395  002688  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15396  00268A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15397                           
 15398                           ;Bluetooth.c: 1314: for(i=0; i< 34; i++ )
 15399  00268E  0E00               	movlw	0
 15400  002690  0102               	movlb	2	; () banked
 15401  002692  6F89               	movwf	UseBluetooth@i& (0+255),b
 15402  002694                     l13728:
 15403                           
 15404                           ; BSR set to: 2
 15405  002694  0E21               	movlw	33
 15406  002696  0102               	movlb	2	; () banked
 15407  002698  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 15408  00269A  D001               	goto	l13732
 15409                           
 15410                           ; BSR set to: 2
 15411  00269C  D006               	goto	l13738
 15412  00269E                     l13732:
 15413                           
 15414                           ; BSR set to: 2
 15415                           ;Bluetooth.c: 1315: {
 15416                           ;Bluetooth.c: 1316: UARTchar_CONST('~');
 15417  00269E  0E7E               	movlw	126
 15418  0026A0  EC74  F056         	call	_UARTchar_CONST
 15419  0026A4  0102               	movlb	2	; () banked
 15420  0026A6  2B89               	incf	UseBluetooth@i& (0+255),f,b
 15421  0026A8  D7F5               	goto	l13728
 15422  0026AA                     l13738:
 15423                           
 15424                           ; BSR set to: 2
 15425                           ;Bluetooth.c: 1317: }
 15426                           ;Bluetooth.c: 1318: UARTstring_CONST("Command Menu");
 15427  0026AA  0EF5               	movlw	low (STR_186+14)
 15428  0026AC  0100               	movlb	0	; () banked
 15429  0026AE  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15430  0026B0  0EFA               	movlw	high (STR_186+14)
 15431  0026B2  0100               	movlb	0	; () banked
 15432  0026B4  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15433  0026B6  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15434                           
 15435                           ;Bluetooth.c: 1319: for(i=0; i< 34; i++ )
 15436  0026BA  0E00               	movlw	0
 15437  0026BC  0102               	movlb	2	; () banked
 15438  0026BE  6F89               	movwf	UseBluetooth@i& (0+255),b
 15439  0026C0                     l13742:
 15440                           
 15441                           ; BSR set to: 2
 15442  0026C0  0E21               	movlw	33
 15443  0026C2  0102               	movlb	2	; () banked
 15444  0026C4  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 15445  0026C6  D001               	goto	l13746
 15446                           
 15447                           ; BSR set to: 2
 15448  0026C8  D006               	goto	l13752
 15449  0026CA                     l13746:
 15450                           
 15451                           ; BSR set to: 2
 15452                           ;Bluetooth.c: 1320: {
 15453                           ;Bluetooth.c: 1321: UARTchar_CONST('~');
 15454  0026CA  0E7E               	movlw	126
 15455  0026CC  EC74  F056         	call	_UARTchar_CONST
 15456  0026D0  0102               	movlb	2	; () banked
 15457  0026D2  2B89               	incf	UseBluetooth@i& (0+255),f,b
 15458  0026D4  D7F5               	goto	l13742
 15459  0026D6                     l13752:
 15460                           
 15461                           ; BSR set to: 2
 15462                           ;Bluetooth.c: 1322: }
 15463                           ;Bluetooth.c: 1323: UARTstring_CONST(CRLN);
 15464  0026D6  0E5E               	movlw	low _CRLN
 15465  0026D8  0100               	movlb	0	; () banked
 15466  0026DA  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15467  0026DC  0EEF               	movlw	high _CRLN
 15468  0026DE  0100               	movlb	0	; () banked
 15469  0026E0  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15470  0026E2  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15471                           
 15472                           ;Bluetooth.c: 1324: UARTstring_CONST(CRLN);
 15473  0026E6  0E5E               	movlw	low _CRLN
 15474  0026E8  0100               	movlb	0	; () banked
 15475  0026EA  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15476  0026EC  0EEF               	movlw	high _CRLN
 15477  0026EE  0100               	movlb	0	; () banked
 15478  0026F0  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15479  0026F2  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15480                           
 15481                           ;Bluetooth.c: 1325: UARTstringCRLN_CONST("System commands:");
 15482  0026F6  0EE1               	movlw	low STR_123
 15483  0026F8  0100               	movlb	0	; () banked
 15484  0026FA  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15485  0026FC  0EFD               	movlw	high STR_123
 15486  0026FE  0100               	movlb	0	; () banked
 15487  002700  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15488  002702  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15489                           
 15490                           ;Bluetooth.c: 1326: UARTcommandMenu("???", "Help Menu");
 15491  002706  0EE5               	movlw	low STR_121
 15492  002708  0100               	movlb	0	; () banked
 15493  00270A  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15494  00270C  0EFF               	movlw	high STR_121
 15495  00270E  0100               	movlb	0	; () banked
 15496  002710  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15497  002712  0E4F               	movlw	low STR_125
 15498  002714  0100               	movlb	0	; () banked
 15499  002716  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15500  002718  0EFF               	movlw	high STR_125
 15501  00271A  0100               	movlb	0	; () banked
 15502  00271C  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15503  00271E  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15504                           
 15505                           ;Bluetooth.c: 1327: UARTcommandMenu("Reset", "Clears memory and resets device");
 15506  002722  0EC7               	movlw	low STR_85
 15507  002724  0100               	movlb	0	; () banked
 15508  002726  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15509  002728  0EFF               	movlw	high STR_85
 15510  00272A  0100               	movlb	0	; () banked
 15511  00272C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15512  00272E  0E91               	movlw	low STR_127
 15513  002730  0100               	movlb	0	; () banked
 15514  002732  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15515  002734  0EF8               	movlw	high STR_127
 15516  002736  0100               	movlb	0	; () banked
 15517  002738  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15518  00273A  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15519                           
 15520                           ;Bluetooth.c: 1328: UARTcommandMenu("Version", "Displays Firmware/Hardware Version");
 15521  00273E  0E81               	movlw	low (STR_129+27)
 15522  002740  0100               	movlb	0	; () banked
 15523  002742  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15524  002744  0EF7               	movlw	high (STR_129+27)
 15525  002746  0100               	movlb	0	; () banked
 15526  002748  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15527  00274A  0E66               	movlw	low STR_129
 15528  00274C  0100               	movlb	0	; () banked
 15529  00274E  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15530  002750  0EF7               	movlw	high STR_129
 15531  002752  0100               	movlb	0	; () banked
 15532  002754  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15533  002756  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15534                           
 15535                           ;Bluetooth.c: 1329: UARTcommandMenu("Change SN", "Changes Serial Number");
 15536  00275A  0E45               	movlw	low STR_90
 15537  00275C  0100               	movlb	0	; () banked
 15538  00275E  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15539  002760  0EFF               	movlw	high STR_90
 15540  002762  0100               	movlb	0	; () banked
 15541  002764  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15542  002766  0E31               	movlw	low STR_131
 15543  002768  0100               	movlb	0	; () banked
 15544  00276A  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15545  00276C  0EFC               	movlw	high STR_131
 15546  00276E  0100               	movlb	0	; () banked
 15547  002770  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15548  002772  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15549                           
 15550                           ;Bluetooth.c: 1330: UARTcommandMenu("Change Bluetooth Name", "Changes Bluetooth Broadcas
      +                          t Name");
 15551  002776  0E1B               	movlw	low STR_102
 15552  002778  0100               	movlb	0	; () banked
 15553  00277A  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15554  00277C  0EFC               	movlw	high STR_102
 15555  00277E  0100               	movlb	0	; () banked
 15556  002780  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15557  002782  0E10               	movlw	low STR_133
 15558  002784  0100               	movlb	0	; () banked
 15559  002786  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15560  002788  0EF8               	movlw	high STR_133
 15561  00278A  0100               	movlb	0	; () banked
 15562  00278C  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15563  00278E  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15564                           
 15565                           ;Bluetooth.c: 1331: UARTstring_CONST(CRLN);
 15566  002792  0E5E               	movlw	low _CRLN
 15567  002794  0100               	movlb	0	; () banked
 15568  002796  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15569  002798  0EEF               	movlw	high _CRLN
 15570  00279A  0100               	movlb	0	; () banked
 15571  00279C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15572  00279E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15573                           
 15574                           ;Bluetooth.c: 1332: UARTstringCRLN_CONST("Diagnostic Commands:");
 15575  0027A2  0E86               	movlw	low STR_134
 15576  0027A4  0100               	movlb	0	; () banked
 15577  0027A6  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15578  0027A8  0EFC               	movlw	high STR_134
 15579  0027AA  0100               	movlb	0	; () banked
 15580  0027AC  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15581  0027AE  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15582                           
 15583                           ;Bluetooth.c: 1333: UARTcommandMenu("Voltage", "Displays the supply voltage");
 15584  0027B2  0E7D               	movlw	low STR_111
 15585  0027B4  0100               	movlb	0	; () banked
 15586  0027B6  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15587  0027B8  0EFF               	movlw	high STR_111
 15588  0027BA  0100               	movlb	0	; () banked
 15589  0027BC  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15590  0027BE  0E79               	movlw	low STR_136
 15591  0027C0  0100               	movlb	0	; () banked
 15592  0027C2  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15593  0027C4  0EFA               	movlw	high STR_136
 15594  0027C6  0100               	movlb	0	; () banked
 15595  0027C8  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15596  0027CA  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15597                           
 15598                           ;Bluetooth.c: 1334: UARTstring_CONST(CRLN);
 15599  0027CE  0E5E               	movlw	low _CRLN
 15600  0027D0  0100               	movlb	0	; () banked
 15601  0027D2  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15602  0027D4  0EEF               	movlw	high _CRLN
 15603  0027D6  0100               	movlb	0	; () banked
 15604  0027D8  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15605  0027DA  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15606                           
 15607                           ;Bluetooth.c: 1335: UARTstringCRLN_CONST("IR commands:");
 15608  0027DE  0E7A               	movlw	low STR_137
 15609  0027E0  0100               	movlb	0	; () banked
 15610  0027E2  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15611  0027E4  0EFE               	movlw	high STR_137
 15612  0027E6  0100               	movlb	0	; () banked
 15613  0027E8  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15614  0027EA  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15615                           
 15616                           ;Bluetooth.c: 1336: for(i=1; i <= 12; i++)
 15617  0027EE  0E01               	movlw	1
 15618  0027F0  0102               	movlb	2	; () banked
 15619  0027F2  6F89               	movwf	UseBluetooth@i& (0+255),b
 15620  0027F4                     l13772:
 15621                           
 15622                           ; BSR set to: 2
 15623  0027F4  0E0C               	movlw	12
 15624  0027F6  0102               	movlb	2	; () banked
 15625  0027F8  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 15626  0027FA  D001               	goto	l13776
 15627                           
 15628                           ; BSR set to: 2
 15629  0027FC  D030               	goto	l13786
 15630  0027FE                     l13776:
 15631                           
 15632                           ; BSR set to: 2
 15633                           ;Bluetooth.c: 1337: {
 15634                           ;Bluetooth.c: 1338: cleanBuffer(buf,50);
 15635  0027FE  0E00               	movlw	low UseBluetooth@buf
 15636  002800  0100               	movlb	0	; () banked
 15637  002802  6F60               	movwf	cleanBuffer@data& (0+255),b
 15638  002804  0E02               	movlw	high UseBluetooth@buf
 15639  002806  0100               	movlb	0	; () banked
 15640  002808  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 15641  00280A  0E00               	movlw	0
 15642  00280C  0100               	movlb	0	; () banked
 15643  00280E  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 15644  002810  0E32               	movlw	50
 15645  002812  6F62               	movwf	cleanBuffer@count& (0+255),b
 15646  002814  EC3D  F053         	call	_cleanBuffer	;wreg free
 15647                           
 15648                           ;Bluetooth.c: 1339: sprintf(buf,"RemoteButton%d",i);
 15649  002818  0E00               	movlw	low UseBluetooth@buf
 15650  00281A  0100               	movlb	0	; () banked
 15651  00281C  6FAE               	movwf	sprintf@sp& (0+255),b
 15652  00281E  0E02               	movlw	high UseBluetooth@buf
 15653  002820  0100               	movlb	0	; () banked
 15654  002822  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15655  002824  0E33               	movlw	low STR_138
 15656  002826  0100               	movlb	0	; () banked
 15657  002828  6FB0               	movwf	sprintf@f& (0+255),b
 15658  00282A  0EFE               	movlw	high STR_138
 15659  00282C  0100               	movlb	0	; () banked
 15660  00282E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15661  002830  C289  F0B2         	movff	UseBluetooth@i,?_sprintf+4
 15662  002834  0100               	movlb	0	; () banked
 15663  002836  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 15664  002838  EC22  F016         	call	_sprintf	;wreg free
 15665                           
 15666                           ;Bluetooth.c: 1340: UARTcommandMenu(buf, "Transmits saved NEC code");
 15667  00283C  0E00               	movlw	low UseBluetooth@buf
 15668  00283E  0100               	movlb	0	; () banked
 15669  002840  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15670  002842  0E02               	movlw	high UseBluetooth@buf
 15671  002844  0100               	movlb	0	; () banked
 15672  002846  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15673  002848  0E02               	movlw	low STR_139
 15674  00284A  0100               	movlb	0	; () banked
 15675  00284C  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15676  00284E  0EFB               	movlw	high STR_139
 15677  002850  0100               	movlb	0	; () banked
 15678  002852  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15679  002854  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15680  002858  0102               	movlb	2	; () banked
 15681  00285A  2B89               	incf	UseBluetooth@i& (0+255),f,b
 15682  00285C  D7CB               	goto	l13772
 15683  00285E                     l13786:
 15684                           
 15685                           ; BSR set to: 2
 15686                           ;Bluetooth.c: 1341: }
 15687                           ;Bluetooth.c: 1342: for(i=1; i <= 12; i++)
 15688  00285E  0E01               	movlw	1
 15689  002860  0102               	movlb	2	; () banked
 15690  002862  6F89               	movwf	UseBluetooth@i& (0+255),b
 15691  002864                     l13788:
 15692                           
 15693                           ; BSR set to: 2
 15694  002864  0E0C               	movlw	12
 15695  002866  0102               	movlb	2	; () banked
 15696  002868  6589               	cpfsgt	UseBluetooth@i& (0+255),b
 15697  00286A  D001               	goto	l13792
 15698                           
 15699                           ; BSR set to: 2
 15700  00286C  D030               	goto	l13802
 15701  00286E                     l13792:
 15702                           
 15703                           ; BSR set to: 2
 15704                           ;Bluetooth.c: 1343: {
 15705                           ;Bluetooth.c: 1344: cleanBuffer(buf,50);
 15706  00286E  0E00               	movlw	low UseBluetooth@buf
 15707  002870  0100               	movlb	0	; () banked
 15708  002872  6F60               	movwf	cleanBuffer@data& (0+255),b
 15709  002874  0E02               	movlw	high UseBluetooth@buf
 15710  002876  0100               	movlb	0	; () banked
 15711  002878  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 15712  00287A  0E00               	movlw	0
 15713  00287C  0100               	movlb	0	; () banked
 15714  00287E  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 15715  002880  0E32               	movlw	50
 15716  002882  6F62               	movwf	cleanBuffer@count& (0+255),b
 15717  002884  EC3D  F053         	call	_cleanBuffer	;wreg free
 15718                           
 15719                           ;Bluetooth.c: 1345: sprintf(buf,"RemoteButton%d set",i);
 15720  002888  0E00               	movlw	low UseBluetooth@buf
 15721  00288A  0100               	movlb	0	; () banked
 15722  00288C  6FAE               	movwf	sprintf@sp& (0+255),b
 15723  00288E  0E02               	movlw	high UseBluetooth@buf
 15724  002890  0100               	movlb	0	; () banked
 15725  002892  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 15726  002894  0E74               	movlw	low STR_140
 15727  002896  0100               	movlb	0	; () banked
 15728  002898  6FB0               	movwf	sprintf@f& (0+255),b
 15729  00289A  0EFD               	movlw	high STR_140
 15730  00289C  0100               	movlb	0	; () banked
 15731  00289E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 15732  0028A0  C289  F0B2         	movff	UseBluetooth@i,?_sprintf+4
 15733  0028A4  0100               	movlb	0	; () banked
 15734  0028A6  6BB3               	clrf	(?_sprintf+5)& (0+255),b
 15735  0028A8  EC22  F016         	call	_sprintf	;wreg free
 15736                           
 15737                           ;Bluetooth.c: 1346: UARTcommandMenu(buf,"Allows saving NEC codes");
 15738  0028AC  0E00               	movlw	low UseBluetooth@buf
 15739  0028AE  0100               	movlb	0	; () banked
 15740  0028B0  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15741  0028B2  0E02               	movlw	high UseBluetooth@buf
 15742  0028B4  0100               	movlb	0	; () banked
 15743  0028B6  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15744  0028B8  0E63               	movlw	low STR_141
 15745  0028BA  0100               	movlb	0	; () banked
 15746  0028BC  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15747  0028BE  0EFB               	movlw	high STR_141
 15748  0028C0  0100               	movlb	0	; () banked
 15749  0028C2  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15750  0028C4  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15751  0028C8  0102               	movlb	2	; () banked
 15752  0028CA  2B89               	incf	UseBluetooth@i& (0+255),f,b
 15753  0028CC  D7CB               	goto	l13788
 15754  0028CE                     l13802:
 15755                           
 15756                           ; BSR set to: 2
 15757                           ;Bluetooth.c: 1347: }
 15758                           ;Bluetooth.c: 1348: UARTcommandMenu("RF set all", "Sets Remote button to send all of the
      +                           RF codes as stated below");
 15759  0028CE  0E2F               	movlw	low STR_142
 15760  0028D0  0100               	movlb	0	; () banked
 15761  0028D2  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15762  0028D4  0EFF               	movlw	high STR_142
 15763  0028D6  0100               	movlb	0	; () banked
 15764  0028D8  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15765  0028DA  0EE0               	movlw	low STR_143
 15766  0028DC  0100               	movlb	0	; () banked
 15767  0028DE  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15768  0028E0  0EEF               	movlw	high STR_143
 15769  0028E2  0100               	movlb	0	; () banked
 15770  0028E4  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15771  0028E6  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15772                           
 15773                           ;Bluetooth.c: 1349: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 
      +                          1 channel D");
 15774  0028EA  0EF8               	movlw	low STR_144
 15775  0028EC  0100               	movlb	0	; () banked
 15776  0028EE  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15777  0028F0  0EFE               	movlw	high STR_144
 15778  0028F2  0100               	movlb	0	; () banked
 15779  0028F4  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15780  0028F6  0EFC               	movlw	low STR_145
 15781  0028F8  0100               	movlb	0	; () banked
 15782  0028FA  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15783  0028FC  0EF1               	movlw	high STR_145
 15784  0028FE  0100               	movlb	0	; () banked
 15785  002900  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15786  002902  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15787                           
 15788                           ;Bluetooth.c: 1350: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 
      +                          1 channel E");
 15789  002906  0E0E               	movlw	low STR_146
 15790  002908  0100               	movlb	0	; () banked
 15791  00290A  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15792  00290C  0EFF               	movlw	high STR_146
 15793  00290E  0100               	movlb	0	; () banked
 15794  002910  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15795  002912  0E5E               	movlw	low STR_147
 15796  002914  0100               	movlb	0	; () banked
 15797  002916  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15798  002918  0EF2               	movlw	high STR_147
 15799  00291A  0100               	movlb	0	; () banked
 15800  00291C  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15801  00291E  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15802                           
 15803                           ;Bluetooth.c: 1351: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 
      +                          1 channel F");
 15804  002922  0E19               	movlw	low STR_148
 15805  002924  0100               	movlb	0	; () banked
 15806  002926  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15807  002928  0EFF               	movlw	high STR_148
 15808  00292A  0100               	movlb	0	; () banked
 15809  00292C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15810  00292E  0E8F               	movlw	low STR_149
 15811  002930  0100               	movlb	0	; () banked
 15812  002932  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15813  002934  0EF2               	movlw	high STR_149
 15814  002936  0100               	movlb	0	; () banked
 15815  002938  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15816  00293A  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15817                           
 15818                           ;Bluetooth.c: 1352: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 
      +                          2 channel B");
 15819  00293E  0EED               	movlw	low STR_150
 15820  002940  0100               	movlb	0	; () banked
 15821  002942  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15822  002944  0EFE               	movlw	high STR_150
 15823  002946  0100               	movlb	0	; () banked
 15824  002948  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15825  00294A  0ECB               	movlw	low STR_151
 15826  00294C  0100               	movlb	0	; () banked
 15827  00294E  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15828  002950  0EF1               	movlw	high STR_151
 15829  002952  0100               	movlb	0	; () banked
 15830  002954  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15831  002956  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15832                           
 15833                           ;Bluetooth.c: 1353: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 
      +                          2 channel D");
 15834  00295A  0E03               	movlw	low STR_152
 15835  00295C  0100               	movlb	0	; () banked
 15836  00295E  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15837  002960  0EFF               	movlw	high STR_152
 15838  002962  0100               	movlb	0	; () banked
 15839  002964  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15840  002966  0E2D               	movlw	low STR_153
 15841  002968  0100               	movlb	0	; () banked
 15842  00296A  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15843  00296C  0EF2               	movlw	high STR_153
 15844  00296E  0100               	movlb	0	; () banked
 15845  002970  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15846  002972  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15847                           
 15848                           ;Bluetooth.c: 1354: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 
      +                          2 channel H");
 15849  002976  0E24               	movlw	low STR_154
 15850  002978  0100               	movlb	0	; () banked
 15851  00297A  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15852  00297C  0EFF               	movlw	high STR_154
 15853  00297E  0100               	movlb	0	; () banked
 15854  002980  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15855  002982  0EC0               	movlw	low STR_155
 15856  002984  0100               	movlb	0	; () banked
 15857  002986  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15858  002988  0EF2               	movlw	high STR_155
 15859  00298A  0100               	movlb	0	; () banked
 15860  00298C  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15861  00298E  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15862                           
 15863                           ;Bluetooth.c: 1355: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1
      +                           channel D");
 15864  002992  0E94               	movlw	low STR_156
 15865  002994  0100               	movlb	0	; () banked
 15866  002996  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15867  002998  0EFE               	movlw	high STR_156
 15868  00299A  0100               	movlb	0	; () banked
 15869  00299C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15870  00299E  0EAB               	movlw	low STR_157
 15871  0029A0  0100               	movlb	0	; () banked
 15872  0029A2  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15873  0029A4  0EF3               	movlw	high STR_157
 15874  0029A6  0100               	movlb	0	; () banked
 15875  0029A8  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15876  0029AA  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15877                           
 15878                           ;Bluetooth.c: 1356: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1
      +                           channel E");
 15879  0029AE  0EAE               	movlw	low STR_158
 15880  0029B0  0100               	movlb	0	; () banked
 15881  0029B2  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15882  0029B4  0EFE               	movlw	high STR_158
 15883  0029B6  0100               	movlb	0	; () banked
 15884  0029B8  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15885  0029BA  0E07               	movlw	low STR_159
 15886  0029BC  0100               	movlb	0	; () banked
 15887  0029BE  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15888  0029C0  0EF4               	movlw	high STR_159
 15889  0029C2  0100               	movlb	0	; () banked
 15890  0029C4  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15891  0029C6  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15892                           
 15893                           ;Bluetooth.c: 1357: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1
      +                           channel F");
 15894  0029CA  0EBB               	movlw	low STR_160
 15895  0029CC  0100               	movlb	0	; () banked
 15896  0029CE  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15897  0029D0  0EFE               	movlw	high STR_160
 15898  0029D2  0100               	movlb	0	; () banked
 15899  0029D4  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15900  0029D6  0E35               	movlw	low STR_161
 15901  0029D8  0100               	movlb	0	; () banked
 15902  0029DA  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15903  0029DC  0EF4               	movlw	high STR_161
 15904  0029DE  0100               	movlb	0	; () banked
 15905  0029E0  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15906  0029E2  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15907                           
 15908                           ;Bluetooth.c: 1358: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2
      +                           channel B");
 15909  0029E6  0E87               	movlw	low STR_162
 15910  0029E8  0100               	movlb	0	; () banked
 15911  0029EA  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15912  0029EC  0EFE               	movlw	high STR_162
 15913  0029EE  0100               	movlb	0	; () banked
 15914  0029F0  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15915  0029F2  0E7D               	movlw	low STR_163
 15916  0029F4  0100               	movlb	0	; () banked
 15917  0029F6  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15918  0029F8  0EF3               	movlw	high STR_163
 15919  0029FA  0100               	movlb	0	; () banked
 15920  0029FC  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15921  0029FE  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15922                           
 15923                           ;Bluetooth.c: 1359: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2
      +                           channel D");
 15924  002A02  0EA1               	movlw	low STR_164
 15925  002A04  0100               	movlb	0	; () banked
 15926  002A06  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15927  002A08  0EFE               	movlw	high STR_164
 15928  002A0A  0100               	movlb	0	; () banked
 15929  002A0C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15930  002A0E  0ED9               	movlw	low STR_165
 15931  002A10  0100               	movlb	0	; () banked
 15932  002A12  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15933  002A14  0EF3               	movlw	high STR_165
 15934  002A16  0100               	movlb	0	; () banked
 15935  002A18  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15936  002A1A  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15937                           
 15938                           ;Bluetooth.c: 1360: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2
      +                           channel H");
 15939  002A1E  0EC8               	movlw	low STR_166
 15940  002A20  0100               	movlb	0	; () banked
 15941  002A22  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15942  002A24  0EFE               	movlw	high STR_166
 15943  002A26  0100               	movlb	0	; () banked
 15944  002A28  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15945  002A2A  0E63               	movlw	low STR_167
 15946  002A2C  0100               	movlb	0	; () banked
 15947  002A2E  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15948  002A30  0EF4               	movlw	high STR_167
 15949  002A32  0100               	movlb	0	; () banked
 15950  002A34  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15951  002A36  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15952                           
 15953                           ;Bluetooth.c: 1361: UARTcommandMenu("NEC?", "NEC description for Arbitrary code send");
 15954  002A3A  0ED2               	movlw	low STR_168
 15955  002A3C  0100               	movlb	0	; () banked
 15956  002A3E  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15957  002A40  0EFF               	movlw	high STR_168
 15958  002A42  0100               	movlb	0	; () banked
 15959  002A44  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15960  002A46  0E1C               	movlw	low STR_169
 15961  002A48  0100               	movlb	0	; () banked
 15962  002A4A  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15963  002A4C  0EF6               	movlw	high STR_169
 15964  002A4E  0100               	movlb	0	; () banked
 15965  002A50  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15966  002A52  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 15967                           
 15968                           ;Bluetooth.c: 1362: UARTstring_CONST(CRLN);
 15969  002A56  0E5E               	movlw	low _CRLN
 15970  002A58  0100               	movlb	0	; () banked
 15971  002A5A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 15972  002A5C  0EEF               	movlw	high _CRLN
 15973  002A5E  0100               	movlb	0	; () banked
 15974  002A60  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15975  002A62  EC98  F055         	call	_UARTstring_CONST	;wreg free
 15976                           
 15977                           ;Bluetooth.c: 1363: UARTstringCRLN_CONST("RF commands:");
 15978  002A66  0E6D               	movlw	low STR_170
 15979  002A68  0100               	movlb	0	; () banked
 15980  002A6A  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 15981  002A6C  0EFE               	movlw	high STR_170
 15982  002A6E  0100               	movlb	0	; () banked
 15983  002A70  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 15984  002A72  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 15985                           
 15986                           ;Bluetooth.c: 1364: UARTcommandMenu("RF all", "Send all Rf codes as stated below");
 15987  002A76  0EA1               	movlw	low STR_171
 15988  002A78  0100               	movlb	0	; () banked
 15989  002A7A  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 15990  002A7C  0EFF               	movlw	high STR_171
 15991  002A7E  0100               	movlb	0	; () banked
 15992  002A80  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 15993  002A82  0EAB               	movlw	low STR_172
 15994  002A84  0100               	movlb	0	; () banked
 15995  002A86  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 15996  002A88  0EF7               	movlw	high STR_172
 15997  002A8A  0100               	movlb	0	; () banked
 15998  002A8C  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 15999  002A8E  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16000                           
 16001                           ;Bluetooth.c: 1365: UARTcommandMenu(Conf1_ChannelD_STR, "RFK100LC Channel D");
 16002  002A92  0EC7               	movlw	low _Conf1_ChannelD_STR
 16003  002A94  0100               	movlb	0	; () banked
 16004  002A96  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16005  002A98  0EEE               	movlw	high _Conf1_ChannelD_STR
 16006  002A9A  0100               	movlb	0	; () banked
 16007  002A9C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16008  002A9E  0E28               	movlw	low STR_173
 16009  002AA0  0100               	movlb	0	; () banked
 16010  002AA2  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16011  002AA4  0EFD               	movlw	high STR_173
 16012  002AA6  0100               	movlb	0	; () banked
 16013  002AA8  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16014  002AAA  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16015                           
 16016                           ;Bluetooth.c: 1366: UARTcommandMenu(Conf1_ChannelE_STR, "RFK100LC Channel E");
 16017  002AAE  0ED6               	movlw	low _Conf1_ChannelE_STR
 16018  002AB0  0100               	movlb	0	; () banked
 16019  002AB2  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16020  002AB4  0EEE               	movlw	high _Conf1_ChannelE_STR
 16021  002AB6  0100               	movlb	0	; () banked
 16022  002AB8  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16023  002ABA  0E3B               	movlw	low STR_174
 16024  002ABC  0100               	movlb	0	; () banked
 16025  002ABE  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16026  002AC0  0EFD               	movlw	high STR_174
 16027  002AC2  0100               	movlb	0	; () banked
 16028  002AC4  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16029  002AC6  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16030                           
 16031                           ;Bluetooth.c: 1367: UARTcommandMenu(Conf1_ChannelF_STR, "RFK100LC Channel F");
 16032  002ACA  0EE5               	movlw	low _Conf1_ChannelF_STR
 16033  002ACC  0100               	movlb	0	; () banked
 16034  002ACE  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16035  002AD0  0EEE               	movlw	high _Conf1_ChannelF_STR
 16036  002AD2  0100               	movlb	0	; () banked
 16037  002AD4  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16038  002AD6  0E4E               	movlw	low STR_175
 16039  002AD8  0100               	movlb	0	; () banked
 16040  002ADA  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16041  002ADC  0EFD               	movlw	high STR_175
 16042  002ADE  0100               	movlb	0	; () banked
 16043  002AE0  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16044  002AE2  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16045                           
 16046                           ;Bluetooth.c: 1368: UARTcommandMenu(Conf2_ChannelB_ON_STR, "RFK306LC Channel B ON");
 16047  002AE6  0ED0               	movlw	low _Conf2_ChannelB_ON_STR
 16048  002AE8  0100               	movlb	0	; () banked
 16049  002AEA  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16050  002AEC  0EED               	movlw	high _Conf2_ChannelB_ON_STR
 16051  002AEE  0100               	movlb	0	; () banked
 16052  002AF0  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16053  002AF2  0EEF               	movlw	low STR_176
 16054  002AF4  0100               	movlb	0	; () banked
 16055  002AF6  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16056  002AF8  0EFB               	movlw	high STR_176
 16057  002AFA  0100               	movlb	0	; () banked
 16058  002AFC  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16059  002AFE  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16060                           
 16061                           ;Bluetooth.c: 1369: UARTcommandMenu(Conf2_ChannelB_OFF_STR, "RFK306LC Channel B OFF");
 16062  002B02  0EAA               	movlw	low _Conf2_ChannelB_OFF_STR
 16063  002B04  0100               	movlb	0	; () banked
 16064  002B06  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16065  002B08  0EED               	movlw	high _Conf2_ChannelB_OFF_STR
 16066  002B0A  0100               	movlb	0	; () banked
 16067  002B0C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16068  002B0E  0EC1               	movlw	low STR_177
 16069  002B10  0100               	movlb	0	; () banked
 16070  002B12  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16071  002B14  0EFB               	movlw	high STR_177
 16072  002B16  0100               	movlb	0	; () banked
 16073  002B18  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16074  002B1A  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16075                           
 16076                           ;Bluetooth.c: 1370: UARTcommandMenu(Conf2_ChannelD_ON_STR, "TR009 Channel D ON");
 16077  002B1E  0EE2               	movlw	low _Conf2_ChannelD_ON_STR
 16078  002B20  0100               	movlb	0	; () banked
 16079  002B22  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16080  002B24  0EED               	movlw	high _Conf2_ChannelD_ON_STR
 16081  002B26  0100               	movlb	0	; () banked
 16082  002B28  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16083  002B2A  0E61               	movlw	low STR_178
 16084  002B2C  0100               	movlb	0	; () banked
 16085  002B2E  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16086  002B30  0EFD               	movlw	high STR_178
 16087  002B32  0100               	movlb	0	; () banked
 16088  002B34  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16089  002B36  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16090                           
 16091                           ;Bluetooth.c: 1371: UARTcommandMenu(Conf2_ChannelD_OFF_STR, "TR009 Channel D OFF");
 16092  002B3A  0EBD               	movlw	low _Conf2_ChannelD_OFF_STR
 16093  002B3C  0100               	movlb	0	; () banked
 16094  002B3E  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16095  002B40  0EED               	movlw	high _Conf2_ChannelD_OFF_STR
 16096  002B42  0100               	movlb	0	; () banked
 16097  002B44  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16098  002B46  0ED8               	movlw	low STR_179
 16099  002B48  0100               	movlb	0	; () banked
 16100  002B4A  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16101  002B4C  0EFC               	movlw	high STR_179
 16102  002B4E  0100               	movlb	0	; () banked
 16103  002B50  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16104  002B52  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16105                           
 16106                           ;Bluetooth.c: 1372: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, "RC-015*3 Channel H device 
      +                          1 ON");
 16107  002B56  0E6E               	movlw	low _Conf2_ChannelH_1_ON_STR
 16108  002B58  0100               	movlb	0	; () banked
 16109  002B5A  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16110  002B5C  0EED               	movlw	high _Conf2_ChannelH_1_ON_STR
 16111  002B5E  0100               	movlb	0	; () banked
 16112  002B60  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16113  002B62  0E2F               	movlw	low STR_180
 16114  002B64  0100               	movlb	0	; () banked
 16115  002B66  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16116  002B68  0EF9               	movlw	high STR_180
 16117  002B6A  0100               	movlb	0	; () banked
 16118  002B6C  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16119  002B6E  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16120                           
 16121                           ;Bluetooth.c: 1373: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, "RC-015*3 Channel H device
      +                           1 OFF");
 16122  002B72  0E2F               	movlw	low _Conf2_ChannelH_1_OFF_STR
 16123  002B74  0100               	movlb	0	; () banked
 16124  002B76  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16125  002B78  0EED               	movlw	high _Conf2_ChannelH_1_OFF_STR
 16126  002B7A  0100               	movlb	0	; () banked
 16127  002B7C  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16128  002B7E  0E31               	movlw	low STR_181
 16129  002B80  0100               	movlb	0	; () banked
 16130  002B82  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16131  002B84  0EF8               	movlw	high STR_181
 16132  002B86  0100               	movlb	0	; () banked
 16133  002B88  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16134  002B8A  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16135                           
 16136                           ;Bluetooth.c: 1374: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, "RC-015*3 Channel H device 
      +                          2 ON");
 16137  002B8E  0E82               	movlw	low _Conf2_ChannelH_2_ON_STR
 16138  002B90  0100               	movlb	0	; () banked
 16139  002B92  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16140  002B94  0EED               	movlw	high _Conf2_ChannelH_2_ON_STR
 16141  002B96  0100               	movlb	0	; () banked
 16142  002B98  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16143  002B9A  0E4E               	movlw	low STR_182
 16144  002B9C  0100               	movlb	0	; () banked
 16145  002B9E  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16146  002BA0  0EF9               	movlw	high STR_182
 16147  002BA2  0100               	movlb	0	; () banked
 16148  002BA4  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16149  002BA6  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16150                           
 16151                           ;Bluetooth.c: 1375: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, "RC-015*3 Channel H device
      +                           2 OFF");
 16152  002BAA  0E44               	movlw	low _Conf2_ChannelH_2_OFF_STR
 16153  002BAC  0100               	movlb	0	; () banked
 16154  002BAE  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16155  002BB0  0EED               	movlw	high _Conf2_ChannelH_2_OFF_STR
 16156  002BB2  0100               	movlb	0	; () banked
 16157  002BB4  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16158  002BB6  0E51               	movlw	low STR_183
 16159  002BB8  0100               	movlb	0	; () banked
 16160  002BBA  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16161  002BBC  0EF8               	movlw	high STR_183
 16162  002BBE  0100               	movlb	0	; () banked
 16163  002BC0  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16164  002BC2  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16165                           
 16166                           ;Bluetooth.c: 1376: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, "RC-015*3 Channel H device 
      +                          3 ON");
 16167  002BC6  0E96               	movlw	low _Conf2_ChannelH_3_ON_STR
 16168  002BC8  0100               	movlb	0	; () banked
 16169  002BCA  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16170  002BCC  0EED               	movlw	high _Conf2_ChannelH_3_ON_STR
 16171  002BCE  0100               	movlb	0	; () banked
 16172  002BD0  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16173  002BD2  0E6D               	movlw	low STR_184
 16174  002BD4  0100               	movlb	0	; () banked
 16175  002BD6  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16176  002BD8  0EF9               	movlw	high STR_184
 16177  002BDA  0100               	movlb	0	; () banked
 16178  002BDC  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16179  002BDE  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16180                           
 16181                           ;Bluetooth.c: 1377: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, "RC-015*3 Channel H device
      +                           3 OFF");
 16182  002BE2  0E59               	movlw	low _Conf2_ChannelH_3_OFF_STR
 16183  002BE4  0100               	movlb	0	; () banked
 16184  002BE6  6F64               	movwf	UARTcommandMenu@Command& (0+255),b
 16185  002BE8  0EED               	movlw	high _Conf2_ChannelH_3_OFF_STR
 16186  002BEA  0100               	movlb	0	; () banked
 16187  002BEC  6F65               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 16188  002BEE  0E71               	movlw	low STR_185
 16189  002BF0  0100               	movlb	0	; () banked
 16190  002BF2  6F66               	movwf	UARTcommandMenu@Desc& (0+255),b
 16191  002BF4  0EF8               	movlw	high STR_185
 16192  002BF6  0100               	movlb	0	; () banked
 16193  002BF8  6F67               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 16194  002BFA  EC7A  F046         	call	_UARTcommandMenu	;wreg free
 16195                           
 16196                           ;Bluetooth.c: 1378: UARTstring_CONST(CRLN);
 16197  002BFE  0E5E               	movlw	low _CRLN
 16198  002C00  0100               	movlb	0	; () banked
 16199  002C02  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16200  002C04  0EEF               	movlw	high _CRLN
 16201  002C06  0100               	movlb	0	; () banked
 16202  002C08  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16203  002C0A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16204                           
 16205                           ;Bluetooth.c: 1379: }
 16206  002C0E  0012               	return	
 16207  002C10                     l13810:
 16208                           
 16209                           ;Bluetooth.c: 1380: else
 16210                           ;Bluetooth.c: 1381: {
 16211                           ;Bluetooth.c: 1382: UARTstringCRLN_CONST(SYNTAX_ERR);
 16212  002C10  0E12               	movlw	low _SYNTAX_ERR
 16213  002C12  0100               	movlb	0	; () banked
 16214  002C14  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 16215  002C16  0EEF               	movlw	high _SYNTAX_ERR
 16216  002C18  0100               	movlb	0	; () banked
 16217  002C1A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 16218  002C1C  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 16219                           
 16220                           ;Bluetooth.c: 1383: UARTstringCRLN_CONST("Enter ??? for Command Menu");
 16221  002C20  0EE7               	movlw	low STR_186
 16222  002C22  0100               	movlb	0	; () banked
 16223  002C24  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 16224  002C26  0EFA               	movlw	high STR_186
 16225  002C28  0100               	movlb	0	; () banked
 16226  002C2A  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 16227  002C2C  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 16228                           
 16229                           ;Bluetooth.c: 1384: UARTstring_CONST(CRLN);
 16230  002C30  0E5E               	movlw	low _CRLN
 16231  002C32  0100               	movlb	0	; () banked
 16232  002C34  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16233  002C36  0EEF               	movlw	high _CRLN
 16234  002C38  0100               	movlb	0	; () banked
 16235  002C3A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16236  002C3C  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16237                           
 16238                           ;Bluetooth.c: 1385: return 0;
 16239                           ;	Return value of _UseBluetooth is never used
 16240  002C40  0012               	return	
 16241                           
 16242                           ;Bluetooth.c: 1386: }
 16243                           ;Bluetooth.c: 1387: return 0;
 16244                           ;	Return value of _UseBluetooth is never used
 16245  002C42  0012               	return		;funcret
 16246  002C44                     __end_of_UseBluetooth:
 16247                           	opt stack 0
 16248                           tblptru	equ	0xFF8
 16249                           tblptrh	equ	0xFF7
 16250                           tblptrl	equ	0xFF6
 16251                           tablat	equ	0xFF5
 16252                           prodh	equ	0xFF4
 16253                           prodl	equ	0xFF3
 16254                           intcon	equ	0xFF2
 16255                           postinc0	equ	0xFEE
 16256                           plusw0	equ	0xFEB
 16257                           wreg	equ	0xFE8
 16258                           postdec1	equ	0xFE5
 16259                           fsr1l	equ	0xFE1
 16260                           indf2	equ	0xFDF
 16261                           postinc2	equ	0xFDE
 16262                           plusw2	equ	0xFDB
 16263                           fsr2h	equ	0xFDA
 16264                           fsr2l	equ	0xFD9
 16265                           status	equ	0xFD8
 16266                           
 16267 ;; *************** function _lowercaseString *****************
 16268 ;; Defined at:
 16269 ;;		line 406 in file "MISC.c"
 16270 ;; Parameters:    Size  Location     Type
 16271 ;;  Input           2    0[BANK0 ] PTR unsigned char 
 16272 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 16273 ;; Auto vars:     Size  Location     Type
 16274 ;;		None
 16275 ;; Return value:  Size  Location     Type
 16276 ;;		None               void
 16277 ;; Registers used:
 16278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16279 ;; Tracked objects:
 16280 ;;		On entry : 0/0
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16286 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16287 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16288 ;;Total ram usage:        3 bytes
 16289 ;; Hardware stack levels used:    1
 16290 ;; Hardware stack levels required when called:    5
 16291 ;; This function calls:
 16292 ;;		Nothing
 16293 ;; This function is called by:
 16294 ;;		_UseBluetooth
 16295 ;; This function uses a non-reentrant model
 16296 ;;
 16297                           
 16298                           	psect	text5
 16299  00A86E                     __ptext5:
 16300                           	opt stack 0
 16301  00A86E                     _lowercaseString:
 16302                           	opt stack 24
 16303                           
 16304                           ;MISC.c: 408: while((*Input != 0))
 16305                           
 16306                           ;incstack = 0
 16307  00A86E  D019               	goto	l11792
 16308  00A870                     l11784:
 16309                           
 16310                           ;MISC.c: 409: {
 16311                           ;MISC.c: 410: if((*Input >= 65) && (*Input <= 90 ))
 16312  00A870  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 16313  00A874  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 16314  00A878  0E40               	movlw	64
 16315  00A87A  64DF               	cpfsgt	indf2,c
 16316  00A87C  D00E               	goto	l11790
 16317  00A87E  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 16318  00A882  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 16319  00A886  0E5B               	movlw	91
 16320  00A888  60DF               	cpfslt	indf2,c
 16321  00A88A  D007               	goto	l11790
 16322                           
 16323                           ;MISC.c: 411: {
 16324                           ;MISC.c: 412: *Input += 32;
 16325  00A88C  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 16326  00A890  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 16327  00A894  0E20               	movlw	32
 16328  00A896  26DF               	addwf	indf2,f,c
 16329  00A898  D000               	goto	l11790
 16330  00A89A                     l11790:
 16331                           
 16332                           ;MISC.c: 413: }
 16333                           ;MISC.c: 414: Input++;
 16334  00A89A  0100               	movlb	0	; () banked
 16335  00A89C  4B60               	infsnz	lowercaseString@Input& (0+255),f,b
 16336  00A89E  2B61               	incf	(lowercaseString@Input+1)& (0+255),f,b
 16337  00A8A0  D000               	goto	l11792
 16338  00A8A2                     l11792:
 16339  00A8A2  C060  FFD9         	movff	lowercaseString@Input,fsr2l
 16340  00A8A6  C061  FFDA         	movff	lowercaseString@Input+1,fsr2h
 16341  00A8AA  50DF               	movf	indf2,w,c
 16342  00A8AC  A4D8               	btfss	status,2,c
 16343  00A8AE  D7E0               	goto	l11784
 16344  00A8B0  0012               	return		;funcret
 16345  00A8B2                     __end_of_lowercaseString:
 16346                           	opt stack 0
 16347                           tblptru	equ	0xFF8
 16348                           tblptrh	equ	0xFF7
 16349                           tblptrl	equ	0xFF6
 16350                           tablat	equ	0xFF5
 16351                           prodh	equ	0xFF4
 16352                           prodl	equ	0xFF3
 16353                           intcon	equ	0xFF2
 16354                           postinc0	equ	0xFEE
 16355                           plusw0	equ	0xFEB
 16356                           wreg	equ	0xFE8
 16357                           postdec1	equ	0xFE5
 16358                           fsr1l	equ	0xFE1
 16359                           indf2	equ	0xFDF
 16360                           postinc2	equ	0xFDE
 16361                           plusw2	equ	0xFDB
 16362                           fsr2h	equ	0xFDA
 16363                           fsr2l	equ	0xFD9
 16364                           status	equ	0xFD8
 16365                           
 16366 ;; *************** function _WaitForIRsignal *****************
 16367 ;; Defined at:
 16368 ;;		line 1395 in file "Bluetooth.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;		None
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;  timeout         1    9[BANK0 ] unsigned char 
 16373 ;; Return value:  Size  Location     Type
 16374 ;;                  1    wreg      unsigned char 
 16375 ;; Registers used:
 16376 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16377 ;; Tracked objects:
 16378 ;;		On entry : 0/0
 16379 ;;		On exit  : 0/0
 16380 ;;		Unchanged: 0/0
 16381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;Total ram usage:        1 bytes
 16387 ;; Hardware stack levels used:    1
 16388 ;; Hardware stack levels required when called:    8
 16389 ;; This function calls:
 16390 ;;		_LEDTimerON
 16391 ;;		_UARTchar_CONST
 16392 ;;		_UARTstringCRLN_CONST
 16393 ;;		_UARTstring_CONST
 16394 ;;		_delayUS
 16395 ;; This function is called by:
 16396 ;;		_UseBluetooth
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400                           	psect	text6
 16401  00A152                     __ptext6:
 16402                           	opt stack 0
 16403  00A152                     _WaitForIRsignal:
 16404                           	opt stack 21
 16405                           
 16406                           ;Bluetooth.c: 1397: unsigned char timeout = 0;
 16407                           
 16408                           ;incstack = 0
 16409  00A152  0E00               	movlw	0
 16410  00A154  0100               	movlb	0	; () banked
 16411  00A156  6F69               	movwf	WaitForIRsignal@timeout& (0+255),b
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;Bluetooth.c: 1399: UARTstring_CONST(CRLN);
 16415  00A158  0E5E               	movlw	low _CRLN
 16416  00A15A  0100               	movlb	0	; () banked
 16417  00A15C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16418  00A15E  0EEF               	movlw	high _CRLN
 16419  00A160  0100               	movlb	0	; () banked
 16420  00A162  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16421  00A164  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16422                           
 16423                           ;Bluetooth.c: 1400: UARTstring_CONST("Press Remote Control button");
 16424  00A168  0E95               	movlw	low STR_187
 16425  00A16A  0100               	movlb	0	; () banked
 16426  00A16C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16427  00A16E  0EFA               	movlw	high STR_187
 16428  00A170  0100               	movlb	0	; () banked
 16429  00A172  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16430  00A174  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16431                           
 16432                           ;Bluetooth.c: 1401: timeout = 0;
 16433  00A178  0E00               	movlw	0
 16434  00A17A  0100               	movlb	0	; () banked
 16435  00A17C  6F69               	movwf	WaitForIRsignal@timeout& (0+255),b
 16436                           
 16437                           ;Bluetooth.c: 1402: while(IR_New_Code != 1)
 16438  00A17E  D027               	goto	l12502
 16439  00A180                     l12488:
 16440                           
 16441                           ;Bluetooth.c: 1403: {
 16442                           ;Bluetooth.c: 1404: UARTchar_CONST('.');
 16443  00A180  0E2E               	movlw	46
 16444  00A182  EC74  F056         	call	_UARTchar_CONST
 16445                           
 16446                           ;Bluetooth.c: 1405: delayUS(300000);
 16447  00A186  0EE0               	movlw	224
 16448  00A188  0100               	movlb	0	; () banked
 16449  00A18A  6F60               	movwf	delayUS@US& (0+255),b
 16450  00A18C  0E93               	movlw	147
 16451  00A18E  6F61               	movwf	(delayUS@US+1)& (0+255),b
 16452  00A190  0E04               	movlw	4
 16453  00A192  6F62               	movwf	(delayUS@US+2)& (0+255),b
 16454  00A194  0E00               	movlw	0
 16455  00A196  6F63               	movwf	(delayUS@US+3)& (0+255),b
 16456  00A198  EC96  F053         	call	_delayUS	;wreg free
 16457                           
 16458                           ;Bluetooth.c: 1406: timeout++;
 16459  00A19C  0100               	movlb	0	; () banked
 16460  00A19E  2B69               	incf	WaitForIRsignal@timeout& (0+255),f,b
 16461                           
 16462                           ; BSR set to: 0
 16463                           ;Bluetooth.c: 1407: if(timeout > 25)
 16464  00A1A0  0E19               	movlw	25
 16465  00A1A2  0100               	movlb	0	; () banked
 16466  00A1A4  6569               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 16467  00A1A6  D013               	goto	l12502
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;Bluetooth.c: 1408: {
 16471                           ;Bluetooth.c: 1409: UARTstring_CONST(CRLN);
 16472  00A1A8  0E5E               	movlw	low _CRLN
 16473  00A1AA  0100               	movlb	0	; () banked
 16474  00A1AC  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16475  00A1AE  0EEF               	movlw	high _CRLN
 16476  00A1B0  0100               	movlb	0	; () banked
 16477  00A1B2  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16478  00A1B4  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16479                           
 16480                           ;Bluetooth.c: 1410: UARTstringCRLN_CONST("Error: No remote button was pressed");
 16481  00A1B8  0ED9               	movlw	low STR_188
 16482  00A1BA  0100               	movlb	0	; () banked
 16483  00A1BC  6F64               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 16484  00A1BE  0EF6               	movlw	high STR_188
 16485  00A1C0  0100               	movlb	0	; () banked
 16486  00A1C2  6F65               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 16487  00A1C4  EC7B  F054         	call	_UARTstringCRLN_CONST	;wreg free
 16488                           
 16489                           ;Bluetooth.c: 1411: return 0;
 16490  00A1C8  0E00               	movlw	0
 16491  00A1CA  0012               	return	
 16492  00A1CC  D000               	goto	l12502
 16493  00A1CE                     l12502:
 16494  00A1CE  0103               	movlb	3	; () banked
 16495  00A1D0  05F0               	decf	_IR_New_Code& (0+255),w,b
 16496  00A1D2  A4D8               	btfss	status,2,c
 16497  00A1D4  D7D5               	goto	l12488
 16498                           
 16499                           ; BSR set to: 3
 16500                           ;Bluetooth.c: 1412: }
 16501                           ;Bluetooth.c: 1413: }
 16502                           ;Bluetooth.c: 1414: (LATC |= 0x04);
 16503                           
 16504                           ; BSR set to: 3
 16505  00A1D6  848B               	bsf	3979,2,c	;volatile
 16506                           
 16507                           ; BSR set to: 3
 16508                           ;Bluetooth.c: 1415: LEDTimerON();
 16509  00A1D8  EC06  F057         	call	_LEDTimerON	;wreg free
 16510                           
 16511                           ;Bluetooth.c: 1416: return 1;
 16512  00A1DC  0E01               	movlw	1
 16513  00A1DE  0012               	return	
 16514  00A1E0  0012               	return		;funcret
 16515  00A1E2                     __end_of_WaitForIRsignal:
 16516                           	opt stack 0
 16517                           tblptru	equ	0xFF8
 16518                           tblptrh	equ	0xFF7
 16519                           tblptrl	equ	0xFF6
 16520                           tablat	equ	0xFF5
 16521                           prodh	equ	0xFF4
 16522                           prodl	equ	0xFF3
 16523                           intcon	equ	0xFF2
 16524                           postinc0	equ	0xFEE
 16525                           plusw0	equ	0xFEB
 16526                           wreg	equ	0xFE8
 16527                           postdec1	equ	0xFE5
 16528                           fsr1l	equ	0xFE1
 16529                           indf2	equ	0xFDF
 16530                           postinc2	equ	0xFDE
 16531                           plusw2	equ	0xFDB
 16532                           fsr2h	equ	0xFDA
 16533                           fsr2l	equ	0xFD9
 16534                           status	equ	0xFD8
 16535                           
 16536 ;; *************** function _UARTstringCRLN_CONST *****************
 16537 ;; Defined at:
 16538 ;;		line 314 in file "UART.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;  data            2    4[BANK0 ] PTR const unsigned char 
 16541 ;;		 -> STR_188(36), STR_186(27), STR_170(13), STR_137(13), 
 16542 ;;		 -> STR_134(21), STR_123(17), STR_119(5), STR_116(23), 
 16543 ;;		 -> STR_115(29), STR_110(57), STR_109(64), STR_108(41), 
 16544 ;;		 -> STR_107(53), STR_106(57), STR_104(57), STR_101(24), 
 16545 ;;		 -> STR_100(34), STR_99(44), STR_98(18), STR_96(44), 
 16546 ;;		 -> STR_95(46), STR_92(46), STR_89(29), STR_88(18), 
 16547 ;;		 -> STR_87(29), STR_84(44), STR_79(46), STR_78(47), 
 16548 ;;		 -> STR_77(50), STR_76(50), STR_74(31), STR_73(31), 
 16549 ;;		 -> STR_72(37), STR_71(37), STR_70(37), STR_63(18), 
 16550 ;;		 -> STR_62(14), STR_61(9), STR_60(20), STR_59(16), 
 16551 ;;		 -> STR_58(7), STR_57(35), STR_56(37), STR_53(47), 
 16552 ;;		 -> STR_48(17), STR_47(9), STR_46(18), STR_45(9), 
 16553 ;;		 -> STR_44(22), STR_43(11), STR_42(20), STR_41(7), 
 16554 ;;		 -> STR_40(31), STR_38(33), STR_34(32), STR_30(31), 
 16555 ;;		 -> STR_29(31), STR_27(29), STR_25(29), SYNTAX_ERR(14), 
 16556 ;;		 -> STR_3(16), STR_2(24), ProjectName(26), 
 16557 ;; Auto vars:     Size  Location     Type
 16558 ;;		None
 16559 ;; Return value:  Size  Location     Type
 16560 ;;		None               void
 16561 ;; Registers used:
 16562 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16563 ;; Tracked objects:
 16564 ;;		On entry : 0/0
 16565 ;;		On exit  : 0/0
 16566 ;;		Unchanged: 0/0
 16567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16568 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16572 ;;Total ram usage:        2 bytes
 16573 ;; Hardware stack levels used:    1
 16574 ;; Hardware stack levels required when called:    7
 16575 ;; This function calls:
 16576 ;;		_UARTchar_CONST
 16577 ;;		_UARTstring_CONST
 16578 ;; This function is called by:
 16579 ;;		_main
 16580 ;;		_UseBluetooth
 16581 ;;		_WaitForIRsignal
 16582 ;; This function uses a non-reentrant model
 16583 ;;
 16584                           
 16585                           	psect	text7
 16586  00A8F6                     __ptext7:
 16587                           	opt stack 0
 16588  00A8F6                     _UARTstringCRLN_CONST:
 16589                           	opt stack 21
 16590                           
 16591                           ;UART.c: 316: while(*data != 0)
 16592                           
 16593                           ;incstack = 0
 16594  00A8F6  D00D               	goto	l10820
 16595  00A8F8                     l10816:
 16596                           
 16597                           ;UART.c: 317: {
 16598                           ;UART.c: 318: UARTchar_CONST(*data);
 16599  00A8F8  C064  FFF6         	movff	UARTstringCRLN_CONST@data,tblptrl
 16600  00A8FC  C065  FFF7         	movff	UARTstringCRLN_CONST@data+1,tblptrh
 16601  00A900                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16602  00A900  6AF8               	clrf	tblptru,c
 16603  00A902                     	endif
 16604  00A902                     	if	0	;tblptru may be non-zero
 16605  00A902                     	endif
 16606  00A902  0008               	tblrd		*
 16607  00A904  50F5               	movf	tablat,w,c
 16608  00A906  EC74  F056         	call	_UARTchar_CONST
 16609                           
 16610                           ;UART.c: 319: *data++;
 16611  00A90A  0100               	movlb	0	; () banked
 16612  00A90C  4B64               	infsnz	UARTstringCRLN_CONST@data& (0+255),f,b
 16613  00A90E  2B65               	incf	(UARTstringCRLN_CONST@data+1)& (0+255),f,b
 16614  00A910  D000               	goto	l10820
 16615  00A912                     l10820:
 16616  00A912  C064  FFF6         	movff	UARTstringCRLN_CONST@data,tblptrl
 16617  00A916  C065  FFF7         	movff	UARTstringCRLN_CONST@data+1,tblptrh
 16618  00A91A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16619  00A91A  6AF8               	clrf	tblptru,c
 16620  00A91C                     	endif
 16621  00A91C                     	if	0	;tblptru may be non-zero
 16622  00A91C                     	endif
 16623  00A91C  0008               	tblrd		*
 16624  00A91E  50F5               	movf	tablat,w,c
 16625  00A920  0900               	iorlw	0
 16626  00A922  A4D8               	btfss	status,2,c
 16627  00A924  D7E9               	goto	l10816
 16628                           
 16629                           ;UART.c: 320: }
 16630                           ;UART.c: 321: UARTstring_CONST(CRLN);
 16631  00A926  0E5E               	movlw	low _CRLN
 16632  00A928  0100               	movlb	0	; () banked
 16633  00A92A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16634  00A92C  0EEF               	movlw	high _CRLN
 16635  00A92E  0100               	movlb	0	; () banked
 16636  00A930  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16637  00A932  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16638  00A936  0012               	return		;funcret
 16639  00A938                     __end_of_UARTstringCRLN_CONST:
 16640                           	opt stack 0
 16641                           tblptru	equ	0xFF8
 16642                           tblptrh	equ	0xFF7
 16643                           tblptrl	equ	0xFF6
 16644                           tablat	equ	0xFF5
 16645                           prodh	equ	0xFF4
 16646                           prodl	equ	0xFF3
 16647                           intcon	equ	0xFF2
 16648                           postinc0	equ	0xFEE
 16649                           plusw0	equ	0xFEB
 16650                           wreg	equ	0xFE8
 16651                           postdec1	equ	0xFE5
 16652                           fsr1l	equ	0xFE1
 16653                           indf2	equ	0xFDF
 16654                           postinc2	equ	0xFDE
 16655                           plusw2	equ	0xFDB
 16656                           fsr2h	equ	0xFDA
 16657                           fsr2l	equ	0xFD9
 16658                           status	equ	0xFD8
 16659                           
 16660 ;; *************** function _UARTstringCRLN *****************
 16661 ;; Defined at:
 16662 ;;		line 298 in file "UART.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;  data            2    4[BANK0 ] PTR unsigned char 
 16665 ;;		 -> UseBluetooth@buf(100), BluetoothFirmware2(30), BluetoothFirmware1(30), main@buf(100), 
 16666 ;; Auto vars:     Size  Location     Type
 16667 ;;		None
 16668 ;; Return value:  Size  Location     Type
 16669 ;;		None               void
 16670 ;; Registers used:
 16671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16672 ;; Tracked objects:
 16673 ;;		On entry : 0/0
 16674 ;;		On exit  : 0/0
 16675 ;;		Unchanged: 0/0
 16676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16681 ;;Total ram usage:        2 bytes
 16682 ;; Hardware stack levels used:    1
 16683 ;; Hardware stack levels required when called:    7
 16684 ;; This function calls:
 16685 ;;		_UARTchar
 16686 ;;		_UARTstring_CONST
 16687 ;; This function is called by:
 16688 ;;		_main
 16689 ;;		_UseBluetooth
 16690 ;; This function uses a non-reentrant model
 16691 ;;
 16692                           
 16693                           	psect	text8
 16694  00A9F2                     __ptext8:
 16695                           	opt stack 0
 16696  00A9F2                     _UARTstringCRLN:
 16697                           	opt stack 22
 16698                           
 16699                           ;UART.c: 300: while(*data != 0)
 16700                           
 16701                           ;incstack = 0
 16702  00A9F2  D00B               	goto	l11480
 16703  00A9F4                     l11476:
 16704                           
 16705                           ;UART.c: 301: {
 16706                           ;UART.c: 302: UARTchar(*data);
 16707  00A9F4  C064  FFD9         	movff	UARTstringCRLN@data,fsr2l
 16708  00A9F8  C065  FFDA         	movff	UARTstringCRLN@data+1,fsr2h
 16709  00A9FC  50DF               	movf	indf2,w,c
 16710  00A9FE  EC93  F056         	call	_UARTchar
 16711                           
 16712                           ;UART.c: 303: *data++;
 16713  00AA02  0100               	movlb	0	; () banked
 16714  00AA04  4B64               	infsnz	UARTstringCRLN@data& (0+255),f,b
 16715  00AA06  2B65               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 16716  00AA08  D000               	goto	l11480
 16717  00AA0A                     l11480:
 16718  00AA0A  C064  FFD9         	movff	UARTstringCRLN@data,fsr2l
 16719  00AA0E  C065  FFDA         	movff	UARTstringCRLN@data+1,fsr2h
 16720  00AA12  50DF               	movf	indf2,w,c
 16721  00AA14  A4D8               	btfss	status,2,c
 16722  00AA16  D7EE               	goto	l11476
 16723                           
 16724                           ;UART.c: 304: }
 16725                           ;UART.c: 305: UARTstring_CONST(CRLN);
 16726  00AA18  0E5E               	movlw	low _CRLN
 16727  00AA1A  0100               	movlb	0	; () banked
 16728  00AA1C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 16729  00AA1E  0EEF               	movlw	high _CRLN
 16730  00AA20  0100               	movlb	0	; () banked
 16731  00AA22  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 16732  00AA24  EC98  F055         	call	_UARTstring_CONST	;wreg free
 16733  00AA28  0012               	return		;funcret
 16734  00AA2A                     __end_of_UARTstringCRLN:
 16735                           	opt stack 0
 16736                           tblptru	equ	0xFF8
 16737                           tblptrh	equ	0xFF7
 16738                           tblptrl	equ	0xFF6
 16739                           tablat	equ	0xFF5
 16740                           prodh	equ	0xFF4
 16741                           prodl	equ	0xFF3
 16742                           intcon	equ	0xFF2
 16743                           postinc0	equ	0xFEE
 16744                           plusw0	equ	0xFEB
 16745                           wreg	equ	0xFE8
 16746                           postdec1	equ	0xFE5
 16747                           fsr1l	equ	0xFE1
 16748                           indf2	equ	0xFDF
 16749                           postinc2	equ	0xFDE
 16750                           plusw2	equ	0xFDB
 16751                           fsr2h	equ	0xFDA
 16752                           fsr2l	equ	0xFD9
 16753                           status	equ	0xFD8
 16754                           
 16755 ;; *************** function _UARTcommandMenu *****************
 16756 ;; Defined at:
 16757 ;;		line 330 in file "UART.c"
 16758 ;; Parameters:    Size  Location     Type
 16759 ;;  Command         2    4[BANK0 ] PTR const unsigned char 
 16760 ;;		 -> STR_171(7), STR_168(5), STR_166(13), STR_164(13), 
 16761 ;;		 -> STR_162(13), STR_160(13), STR_158(13), STR_156(13), 
 16762 ;;		 -> STR_154(11), STR_152(11), STR_150(11), STR_148(11), 
 16763 ;;		 -> STR_146(11), STR_144(11), STR_142(11), STR_135(8), 
 16764 ;;		 -> STR_132(22), STR_130(10), STR_128(8), STR_126(6), 
 16765 ;;		 -> STR_124(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 16766 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 16767 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 16768 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 16769 ;;  Desc            2    6[BANK0 ] PTR const unsigned char 
 16770 ;;		 -> STR_185(32), STR_184(31), STR_183(32), STR_182(31), 
 16771 ;;		 -> STR_181(32), STR_180(31), STR_179(20), STR_178(19), 
 16772 ;;		 -> STR_177(23), STR_176(22), STR_175(19), STR_174(19), 
 16773 ;;		 -> STR_173(19), STR_172(34), STR_169(40), STR_167(46), 
 16774 ;;		 -> STR_165(46), STR_163(46), STR_161(46), STR_159(46), 
 16775 ;;		 -> STR_157(46), STR_155(49), STR_153(49), STR_151(49), 
 16776 ;;		 -> STR_149(49), STR_147(49), STR_145(49), STR_143(63), 
 16777 ;;		 -> STR_141(24), STR_139(25), STR_136(28), STR_133(33), 
 16778 ;;		 -> STR_131(22), STR_129(35), STR_127(32), STR_125(10), 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  place           1   14[BANK0 ] unsigned char 
 16781 ;;  i               1   13[BANK0 ] unsigned char 
 16782 ;; Return value:  Size  Location     Type
 16783 ;;		None               void
 16784 ;; Registers used:
 16785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16786 ;; Tracked objects:
 16787 ;;		On entry : 0/0
 16788 ;;		On exit  : 0/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16793 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16794 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16795 ;;Total ram usage:       11 bytes
 16796 ;; Hardware stack levels used:    1
 16797 ;; Hardware stack levels required when called:    7
 16798 ;; This function calls:
 16799 ;;		_UARTchar
 16800 ;;		_UARTstring_CONST
 16801 ;; This function is called by:
 16802 ;;		_UseBluetooth
 16803 ;; This function uses a non-reentrant model
 16804 ;;
 16805                           
 16806                           	psect	text9
 16807  008CF4                     __ptext9:
 16808                           	opt stack 0
 16809  008CF4                     _UARTcommandMenu:
 16810                           	opt stack 22
 16811                           
 16812                           ;UART.c: 332: unsigned char place = 0;
 16813                           
 16814                           ;incstack = 0
 16815  008CF4  0E00               	movlw	0
 16816  008CF6  0100               	movlb	0	; () banked
 16817  008CF8  6F6E               	movwf	UARTcommandMenu@place& (0+255),b
 16818                           
 16819                           ;UART.c: 333: unsigned char i;
 16820                           ;UART.c: 335: while((*Command != 0) && (place < 30))
 16821  008CFA  D019               	goto	l12268
 16822  008CFC                     l12262:
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;UART.c: 336: {
 16826                           ;UART.c: 337: UARTchar(*Command);
 16827  008CFC  C064  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 16828  008D00  C065  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 16829  008D04  0E00               	movlw	low (__mediumconst shr (0+16))
 16830  008D06  6EF8               	movwf	tblptru,c
 16831  008D08  0E0F               	movlw	(high __ramtop+-1)
 16832  008D0A  64F7               	cpfsgt	tblptrh,c
 16833  008D0C  D003               	bra	u13707
 16834  008D0E  0008               	tblrd		*
 16835  008D10  50F5               	movf	tablat,w,c
 16836  008D12  D005               	bra	u13700
 16837  008D14                     u13707:
 16838  008D14  CFF6 FFE9          	movff	tblptrl,fsr0l
 16839  008D18  CFF7 FFEA          	movff	tblptrh,fsr0h
 16840  008D1C  50EF               	movf	indf0,w,c
 16841  008D1E                     u13700:
 16842  008D1E  EC93  F056         	call	_UARTchar
 16843                           
 16844                           ;UART.c: 338: *Command++;
 16845  008D22  0100               	movlb	0	; () banked
 16846  008D24  4B64               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 16847  008D26  2B65               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 16848                           
 16849                           ; BSR set to: 0
 16850                           ;UART.c: 339: place++;
 16851  008D28  0100               	movlb	0	; () banked
 16852  008D2A  2B6E               	incf	UARTcommandMenu@place& (0+255),f,b
 16853  008D2C  D000               	goto	l12268
 16854  008D2E                     l12268:
 16855                           
 16856                           ; BSR set to: 0
 16857  008D2E  C064  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 16858  008D32  C065  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 16859  008D36  0E00               	movlw	low (__mediumconst shr (0+16))
 16860  008D38  6EF8               	movwf	tblptru,c
 16861  008D3A  0E0F               	movlw	(high __ramtop+-1)
 16862  008D3C  64F7               	cpfsgt	tblptrh,c
 16863  008D3E  D003               	bra	u13717
 16864  008D40  0008               	tblrd		*
 16865  008D42  50F5               	movf	tablat,w,c
 16866  008D44  D005               	bra	u13710
 16867  008D46                     u13717:
 16868  008D46  CFF6 FFE9          	movff	tblptrl,fsr0l
 16869  008D4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16870  008D4E  50EF               	movf	indf0,w,c
 16871  008D50                     u13710:
 16872  008D50  0900               	iorlw	0
 16873  008D52  B4D8               	btfsc	status,2,c
 16874  008D54  D005               	goto	l12272
 16875  008D56  0E1D               	movlw	29
 16876  008D58  0100               	movlb	0	; () banked
 16877  008D5A  656E               	cpfsgt	UARTcommandMenu@place& (0+255),b
 16878  008D5C  D7CF               	goto	l12262
 16879                           
 16880                           ; BSR set to: 0
 16881  008D5E  D000               	goto	l12272
 16882  008D60                     l12272:
 16883                           
 16884                           ;UART.c: 340: }
 16885                           ;UART.c: 341: for(i =0; i < ((30 - place) + 1); i++)
 16886  008D60  0E00               	movlw	0
 16887  008D62  0100               	movlb	0	; () banked
 16888  008D64  6F6D               	movwf	UARTcommandMenu@i& (0+255),b
 16889  008D66  D006               	goto	l12278
 16890  008D68                     l12274:
 16891                           
 16892                           ; BSR set to: 0
 16893                           ;UART.c: 342: {
 16894                           ;UART.c: 343: UARTchar('-');
 16895  008D68  0E2D               	movlw	45
 16896  008D6A  EC93  F056         	call	_UARTchar
 16897  008D6E  0100               	movlb	0	; () banked
 16898  008D70  2B6D               	incf	UARTcommandMenu@i& (0+255),f,b
 16899  008D72  D000               	goto	l12278
 16900  008D74                     l12278:
 16901                           
 16902                           ; BSR set to: 0
 16903  008D74  0100               	movlb	0	; () banked
 16904  008D76  516E               	movf	UARTcommandMenu@place& (0+255),w,b
 16905  008D78  0100               	movlb	0	; () banked
 16906  008D7A  6F68               	movwf	??_UARTcommandMenu& (0+255),b
 16907  008D7C  6B69               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 16908  008D7E  0100               	movlb	0	; () banked
 16909  008D80  1F68               	comf	??_UARTcommandMenu& (0+255),f,b
 16910  008D82  1F69               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 16911  008D84  4B68               	infsnz	??_UARTcommandMenu& (0+255),f,b
 16912  008D86  2B69               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 16913  008D88  0E1F               	movlw	31
 16914  008D8A  0100               	movlb	0	; () banked
 16915  008D8C  2768               	addwf	??_UARTcommandMenu& (0+255),f,b
 16916  008D8E  0E00               	movlw	0
 16917  008D90  2369               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 16918  008D92  0100               	movlb	0	; () banked
 16919  008D94  516D               	movf	UARTcommandMenu@i& (0+255),w,b
 16920  008D96  0100               	movlb	0	; () banked
 16921  008D98  6F6A               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 16922  008D9A  6B6B               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 16923  008D9C  0100               	movlb	0	; () banked
 16924  008D9E  5168               	movf	??_UARTcommandMenu& (0+255),w,b
 16925  008DA0  0100               	movlb	0	; () banked
 16926  008DA2  5D6A               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 16927  008DA4  0100               	movlb	0	; () banked
 16928  008DA6  516B               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 16929  008DA8  0A80               	xorlw	128
 16930  008DAA  0100               	movlb	0	; () banked
 16931  008DAC  6F6C               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 16932  008DAE  0100               	movlb	0	; () banked
 16933  008DB0  5169               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 16934  008DB2  0A80               	xorlw	128
 16935  008DB4  0100               	movlb	0	; () banked
 16936  008DB6  596C               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 16937  008DB8  A0D8               	btfss	status,0,c
 16938  008DBA  D7D6               	goto	l12274
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;UART.c: 344: }
 16942                           ;UART.c: 345: place = 0;
 16943                           
 16944                           ; BSR set to: 0
 16945  008DBC  0E00               	movlw	0
 16946  008DBE  0100               	movlb	0	; () banked
 16947  008DC0  6F6E               	movwf	UARTcommandMenu@place& (0+255),b
 16948                           
 16949                           ;UART.c: 346: while((*Desc != 0) && (place < (70 - 1)))
 16950  008DC2  D00F               	goto	l12288
 16951  008DC4                     l12282:
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;UART.c: 347: {
 16955                           ;UART.c: 348: UARTchar(*Desc);
 16956  008DC4  C066  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 16957  008DC8  C067  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 16958  008DCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16959  008DCC  6AF8               	clrf	tblptru,c
 16960  008DCE                     	endif
 16961  008DCE                     	if	0	;tblptru may be non-zero
 16962  008DCE                     	endif
 16963  008DCE  0008               	tblrd		*
 16964  008DD0  50F5               	movf	tablat,w,c
 16965  008DD2  EC93  F056         	call	_UARTchar
 16966                           
 16967                           ;UART.c: 349: *Desc++;
 16968  008DD6  0100               	movlb	0	; () banked
 16969  008DD8  4B66               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 16970  008DDA  2B67               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;UART.c: 350: place++;
 16974  008DDC  0100               	movlb	0	; () banked
 16975  008DDE  2B6E               	incf	UARTcommandMenu@place& (0+255),f,b
 16976  008DE0  D000               	goto	l12288
 16977  008DE2                     l12288:
 16978                           
 16979                           ; BSR set to: 0
 16980  008DE2  C066  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 16981  008DE6  C067  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 16982  008DEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16983  008DEA  6AF8               	clrf	tblptru,c
 16984  008DEC                     	endif
 16985  008DEC                     	if	0	;tblptru may be non-zero
 16986  008DEC                     	endif
 16987  008DEC  0008               	tblrd		*
 16988  008DEE  50F5               	movf	tablat,w,c
 16989  008DF0  0900               	iorlw	0
 16990  008DF2  B4D8               	btfsc	status,2,c
 16991  008DF4  D005               	goto	l12292
 16992                           
 16993                           ; BSR set to: 0
 16994  008DF6  0E44               	movlw	68
 16995  008DF8  0100               	movlb	0	; () banked
 16996  008DFA  656E               	cpfsgt	UARTcommandMenu@place& (0+255),b
 16997  008DFC  D7E3               	goto	l12282
 16998                           
 16999                           ; BSR set to: 0
 17000  008DFE  D000               	goto	l12292
 17001  008E00                     l12292:
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;UART.c: 351: }
 17005                           ;UART.c: 352: UARTstring_CONST(CRLN);
 17006  008E00  0E5E               	movlw	low _CRLN
 17007  008E02  0100               	movlb	0	; () banked
 17008  008E04  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 17009  008E06  0EEF               	movlw	high _CRLN
 17010  008E08  0100               	movlb	0	; () banked
 17011  008E0A  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 17012  008E0C  EC98  F055         	call	_UARTstring_CONST	;wreg free
 17013  008E10  0012               	return		;funcret
 17014  008E12                     __end_of_UARTcommandMenu:
 17015                           	opt stack 0
 17016                           tblptru	equ	0xFF8
 17017                           tblptrh	equ	0xFF7
 17018                           tblptrl	equ	0xFF6
 17019                           tablat	equ	0xFF5
 17020                           prodh	equ	0xFF4
 17021                           prodl	equ	0xFF3
 17022                           intcon	equ	0xFF2
 17023                           indf0	equ	0xFEF
 17024                           postinc0	equ	0xFEE
 17025                           plusw0	equ	0xFEB
 17026                           fsr0h	equ	0xFEA
 17027                           fsr0l	equ	0xFE9
 17028                           wreg	equ	0xFE8
 17029                           postdec1	equ	0xFE5
 17030                           fsr1l	equ	0xFE1
 17031                           indf2	equ	0xFDF
 17032                           postinc2	equ	0xFDE
 17033                           plusw2	equ	0xFDB
 17034                           fsr2h	equ	0xFDA
 17035                           fsr2l	equ	0xFD9
 17036                           status	equ	0xFD8
 17037                           
 17038 ;; *************** function _StringMatchCaseInsensitive *****************
 17039 ;; Defined at:
 17040 ;;		line 267 in file "MISC.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;  This            2    3[BANK0 ] PTR const unsigned char 
 17043 ;;		 -> main@BluetoothString(100), 
 17044 ;;  That            2    5[BANK0 ] PTR const unsigned char 
 17045 ;;		 -> STR_113(8), STR_111(8), STR_102(22), STR_90(10), 
 17046 ;;		 -> STR_85(6), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 17047 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 17048 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 17049 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), STR_22(7), 
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  tempThat        1    8[BANK0 ] unsigned char 
 17052 ;;  tempThis        1    7[BANK0 ] unsigned char 
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  1    wreg      unsigned char 
 17055 ;; Registers used:
 17056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17065 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17066 ;;Total ram usage:        6 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:    6
 17069 ;; This function calls:
 17070 ;;		_lowercaseChar
 17071 ;; This function is called by:
 17072 ;;		_UseBluetooth
 17073 ;; This function uses a non-reentrant model
 17074 ;;
 17075                           
 17076                           	psect	text10
 17077  00A0BE                     __ptext10:
 17078                           	opt stack 0
 17079  00A0BE                     _StringMatchCaseInsensitive:
 17080                           	opt stack 23
 17081                           
 17082                           ;MISC.c: 269: unsigned char tempThis,
 17083                           ;MISC.c: 270: tempThat;
 17084                           ;MISC.c: 272: while(*This != 0)
 17085                           
 17086                           ;incstack = 0
 17087  00A0BE  D033               	goto	l11768
 17088  00A0C0                     l11750:
 17089                           
 17090                           ;MISC.c: 273: {
 17091                           ;MISC.c: 274: tempThis = *This;
 17092  00A0C0  C063  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 17093  00A0C4  C064  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 17094  00A0C8  50DF               	movf	indf2,w,c
 17095  00A0CA  0100               	movlb	0	; () banked
 17096  00A0CC  6F67               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;MISC.c: 275: tempThat = *That;
 17100  00A0CE  C065  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 17101  00A0D2  C066  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 17102  00A0D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17103  00A0D6  6AF8               	clrf	tblptru,c
 17104  00A0D8                     	endif
 17105  00A0D8                     	if	0	;tblptru may be non-zero
 17106  00A0D8                     	endif
 17107  00A0D8  0008               	tblrd		*
 17108  00A0DA  CFF5 F068          	movff	tablat,StringMatchCaseInsensitive@tempThat
 17109                           
 17110                           ; BSR set to: 0
 17111                           ;MISC.c: 276: lowercaseChar(&tempThis);
 17112  00A0DE  0E67               	movlw	low StringMatchCaseInsensitive@tempThis
 17113  00A0E0  0100               	movlb	0	; () banked
 17114  00A0E2  6F60               	movwf	lowercaseChar@Input& (0+255),b
 17115  00A0E4  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 17116  00A0E6  0100               	movlb	0	; () banked
 17117  00A0E8  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 17118  00A0EA  EC0E  F056         	call	_lowercaseChar	;wreg free
 17119                           
 17120                           ;MISC.c: 277: lowercaseChar(&tempThat);
 17121  00A0EE  0E68               	movlw	low StringMatchCaseInsensitive@tempThat
 17122  00A0F0  0100               	movlb	0	; () banked
 17123  00A0F2  6F60               	movwf	lowercaseChar@Input& (0+255),b
 17124  00A0F4  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 17125  00A0F6  0100               	movlb	0	; () banked
 17126  00A0F8  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 17127  00A0FA  EC0E  F056         	call	_lowercaseChar	;wreg free
 17128                           
 17129                           ;MISC.c: 279: if((tempThis != tempThat) || (tempThat == 0))
 17130  00A0FE  0100               	movlb	0	; () banked
 17131  00A100  5168               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 17132  00A102  0100               	movlb	0	; () banked
 17133  00A104  1967               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 17134  00A106  A4D8               	btfss	status,2,c
 17135  00A108  D005               	goto	l11762
 17136                           
 17137                           ; BSR set to: 0
 17138  00A10A  0100               	movlb	0	; () banked
 17139  00A10C  5168               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 17140  00A10E  0100               	movlb	0	; () banked
 17141  00A110  A4D8               	btfss	status,2,c
 17142  00A112  D002               	goto	l11766
 17143  00A114                     l11762:
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;MISC.c: 280: {
 17147                           ;MISC.c: 281: return 0;
 17148  00A114  0E00               	movlw	0
 17149                           
 17150                           ; BSR set to: 0
 17151  00A116  0012               	return	
 17152  00A118                     l11766:
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;MISC.c: 282: }
 17156                           ;MISC.c: 283: This++;
 17157  00A118  0100               	movlb	0	; () banked
 17158  00A11A  4B63               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 17159  00A11C  2B64               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 17160                           
 17161                           ;MISC.c: 284: That++;
 17162  00A11E  0100               	movlb	0	; () banked
 17163  00A120  4B65               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 17164  00A122  2B66               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 17165  00A124  D000               	goto	l11768
 17166  00A126                     l11768:
 17167  00A126  C063  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 17168  00A12A  C064  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 17169  00A12E  50DF               	movf	indf2,w,c
 17170  00A130  A4D8               	btfss	status,2,c
 17171  00A132  D7C6               	goto	l11750
 17172                           
 17173                           ;MISC.c: 285: }
 17174                           ;MISC.c: 286: if(*That == 0)
 17175  00A134  C065  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 17176  00A138  C066  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 17177  00A13C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17178  00A13C  6AF8               	clrf	tblptru,c
 17179  00A13E                     	endif
 17180  00A13E                     	if	0	;tblptru may be non-zero
 17181  00A13E                     	endif
 17182  00A13E  0008               	tblrd		*
 17183  00A140  50F5               	movf	tablat,w,c
 17184  00A142  0900               	iorlw	0
 17185  00A144  A4D8               	btfss	status,2,c
 17186  00A146  D002               	goto	l11778
 17187                           
 17188                           ;MISC.c: 287: {
 17189                           ;MISC.c: 288: return 1;
 17190  00A148  0E01               	movlw	1
 17191                           
 17192                           ;MISC.c: 289: }
 17193  00A14A  0012               	return	
 17194  00A14C                     l11778:
 17195                           
 17196                           ;MISC.c: 290: else
 17197                           ;MISC.c: 291: {
 17198                           ;MISC.c: 292: return 0;
 17199  00A14C  0E00               	movlw	0
 17200  00A14E  0012               	return	
 17201  00A150  0012               	return		;funcret
 17202  00A152                     __end_of_StringMatchCaseInsensitive:
 17203                           	opt stack 0
 17204                           tblptru	equ	0xFF8
 17205                           tblptrh	equ	0xFF7
 17206                           tblptrl	equ	0xFF6
 17207                           tablat	equ	0xFF5
 17208                           prodh	equ	0xFF4
 17209                           prodl	equ	0xFF3
 17210                           intcon	equ	0xFF2
 17211                           indf0	equ	0xFEF
 17212                           postinc0	equ	0xFEE
 17213                           plusw0	equ	0xFEB
 17214                           fsr0h	equ	0xFEA
 17215                           fsr0l	equ	0xFE9
 17216                           wreg	equ	0xFE8
 17217                           postdec1	equ	0xFE5
 17218                           fsr1l	equ	0xFE1
 17219                           indf2	equ	0xFDF
 17220                           postinc2	equ	0xFDE
 17221                           plusw2	equ	0xFDB
 17222                           fsr2h	equ	0xFDA
 17223                           fsr2l	equ	0xFD9
 17224                           status	equ	0xFD8
 17225                           
 17226 ;; *************** function _StringMatch *****************
 17227 ;; Defined at:
 17228 ;;		line 240 in file "MISC.c"
 17229 ;; Parameters:    Size  Location     Type
 17230 ;;  This            2    0[BANK0 ] PTR const unsigned char 
 17231 ;;		 -> ReceivedString(100), main@BluetoothString(100), 
 17232 ;;  That            2    2[BANK0 ] PTR const unsigned char 
 17233 ;;		 -> STR_121(4), STR_93(5), 
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;		None
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      unsigned char 
 17238 ;; Registers used:
 17239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17247 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;Total ram usage:        5 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:    5
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		_UseBluetooth
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text11
 17260  00A46C                     __ptext11:
 17261                           	opt stack 0
 17262  00A46C                     _StringMatch:
 17263                           	opt stack 24
 17264                           
 17265                           ;MISC.c: 242: while(*This != 0)
 17266                           
 17267                           ;incstack = 0
 17268  00A46C  D025               	goto	l11734
 17269  00A46E                     l11724:
 17270                           
 17271                           ;MISC.c: 243: {
 17272                           ;MISC.c: 244: if(*This != *That || *That == 0)
 17273  00A46E  C060  FFD9         	movff	StringMatch@This,fsr2l
 17274  00A472  C061  FFDA         	movff	StringMatch@This+1,fsr2h
 17275  00A476  50DF               	movf	indf2,w,c
 17276  00A478  0100               	movlb	0	; () banked
 17277  00A47A  6F64               	movwf	??_StringMatch& (0+255),b
 17278  00A47C  C062  FFF6         	movff	StringMatch@That,tblptrl
 17279  00A480  C063  FFF7         	movff	StringMatch@That+1,tblptrh
 17280  00A484                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17281  00A484  6AF8               	clrf	tblptru,c
 17282  00A486                     	endif
 17283  00A486                     	if	0	;tblptru may be non-zero
 17284  00A486                     	endif
 17285  00A486  0008               	tblrd		*
 17286  00A488  50F5               	movf	tablat,w,c
 17287  00A48A  0100               	movlb	0	; () banked
 17288  00A48C  1964               	xorwf	??_StringMatch& (0+255),w,b
 17289  00A48E  A4D8               	btfss	status,2,c
 17290  00A490  D00A               	goto	l11728
 17291                           
 17292                           ; BSR set to: 0
 17293  00A492  C062  FFF6         	movff	StringMatch@That,tblptrl
 17294  00A496  C063  FFF7         	movff	StringMatch@That+1,tblptrh
 17295  00A49A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17296  00A49A  6AF8               	clrf	tblptru,c
 17297  00A49C                     	endif
 17298  00A49C                     	if	0	;tblptru may be non-zero
 17299  00A49C                     	endif
 17300  00A49C  0008               	tblrd		*
 17301  00A49E  50F5               	movf	tablat,w,c
 17302  00A4A0  0900               	iorlw	0
 17303  00A4A2  A4D8               	btfss	status,2,c
 17304  00A4A4  D002               	goto	l11732
 17305  00A4A6                     l11728:
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;MISC.c: 245: {
 17309                           ;MISC.c: 246: return 0;
 17310  00A4A6  0E00               	movlw	0
 17311                           
 17312                           ; BSR set to: 0
 17313  00A4A8  0012               	return	
 17314  00A4AA                     l11732:
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;MISC.c: 247: }
 17318                           ;MISC.c: 248: This++;
 17319  00A4AA  0100               	movlb	0	; () banked
 17320  00A4AC  4B60               	infsnz	StringMatch@This& (0+255),f,b
 17321  00A4AE  2B61               	incf	(StringMatch@This+1)& (0+255),f,b
 17322                           
 17323                           ;MISC.c: 249: That++;
 17324  00A4B0  0100               	movlb	0	; () banked
 17325  00A4B2  4B62               	infsnz	StringMatch@That& (0+255),f,b
 17326  00A4B4  2B63               	incf	(StringMatch@That+1)& (0+255),f,b
 17327  00A4B6  D000               	goto	l11734
 17328  00A4B8                     l11734:
 17329  00A4B8  C060  FFD9         	movff	StringMatch@This,fsr2l
 17330  00A4BC  C061  FFDA         	movff	StringMatch@This+1,fsr2h
 17331  00A4C0  50DF               	movf	indf2,w,c
 17332  00A4C2  A4D8               	btfss	status,2,c
 17333  00A4C4  D7D4               	goto	l11724
 17334                           
 17335                           ;MISC.c: 250: }
 17336                           ;MISC.c: 251: if(*That == 0)
 17337  00A4C6  C062  FFF6         	movff	StringMatch@That,tblptrl
 17338  00A4CA  C063  FFF7         	movff	StringMatch@That+1,tblptrh
 17339  00A4CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17340  00A4CE  6AF8               	clrf	tblptru,c
 17341  00A4D0                     	endif
 17342  00A4D0                     	if	0	;tblptru may be non-zero
 17343  00A4D0                     	endif
 17344  00A4D0  0008               	tblrd		*
 17345  00A4D2  50F5               	movf	tablat,w,c
 17346  00A4D4  0900               	iorlw	0
 17347  00A4D6  A4D8               	btfss	status,2,c
 17348  00A4D8  D002               	goto	l11744
 17349                           
 17350                           ;MISC.c: 252: {
 17351                           ;MISC.c: 253: return 1;
 17352  00A4DA  0E01               	movlw	1
 17353                           
 17354                           ;MISC.c: 254: }
 17355  00A4DC  0012               	return	
 17356  00A4DE                     l11744:
 17357                           
 17358                           ;MISC.c: 255: else
 17359                           ;MISC.c: 256: {
 17360                           ;MISC.c: 257: return 0;
 17361  00A4DE  0E00               	movlw	0
 17362  00A4E0  0012               	return	
 17363  00A4E2  0012               	return		;funcret
 17364  00A4E4                     __end_of_StringMatch:
 17365                           	opt stack 0
 17366                           tblptru	equ	0xFF8
 17367                           tblptrh	equ	0xFF7
 17368                           tblptrl	equ	0xFF6
 17369                           tablat	equ	0xFF5
 17370                           prodh	equ	0xFF4
 17371                           prodl	equ	0xFF3
 17372                           intcon	equ	0xFF2
 17373                           indf0	equ	0xFEF
 17374                           postinc0	equ	0xFEE
 17375                           plusw0	equ	0xFEB
 17376                           fsr0h	equ	0xFEA
 17377                           fsr0l	equ	0xFE9
 17378                           wreg	equ	0xFE8
 17379                           postdec1	equ	0xFE5
 17380                           fsr1l	equ	0xFE1
 17381                           indf2	equ	0xFDF
 17382                           postinc2	equ	0xFDE
 17383                           plusw2	equ	0xFDB
 17384                           fsr2h	equ	0xFDA
 17385                           fsr2l	equ	0xFD9
 17386                           status	equ	0xFD8
 17387                           
 17388 ;; *************** function _StringAddEqual *****************
 17389 ;; Defined at:
 17390 ;;		line 792 in file "MISC.c"
 17391 ;; Parameters:    Size  Location     Type
 17392 ;;  Input           2   15[BANK0 ] PTR unsigned char 
 17393 ;;		 -> ReceivedString(100), main@BluetoothString(100), 
 17394 ;; Auto vars:     Size  Location     Type
 17395 ;;  temp          255    0[BANK1 ] unsigned char [255]
 17396 ;;  j               1   22[BANK0 ] unsigned char 
 17397 ;;  i               1   21[BANK0 ] unsigned char 
 17398 ;;  firstnumber     1   20[BANK0 ] unsigned char 
 17399 ;;  NullPosition    1   19[BANK0 ] unsigned char 
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      unsigned char 
 17402 ;; Registers used:
 17403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 0/0
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17410 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17412 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17413 ;;Total ram usage:      263 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:    7
 17416 ;; This function calls:
 17417 ;;		_BufferCopy
 17418 ;;		_cleanBuffer
 17419 ;; This function is called by:
 17420 ;;		_UseBluetooth
 17421 ;; This function uses a non-reentrant model
 17422 ;;
 17423                           
 17424                           	psect	text12
 17425  007706                     __ptext12:
 17426                           	opt stack 0
 17427  007706                     _StringAddEqual:
 17428                           	opt stack 22
 17429                           
 17430                           ;MISC.c: 794: unsigned char i;
 17431                           ;MISC.c: 795: unsigned char j =0;
 17432                           
 17433                           ;incstack = 0
 17434  007706  0E00               	movlw	0
 17435  007708  0100               	movlb	0	; () banked
 17436  00770A  6F76               	movwf	StringAddEqual@j& (0+255),b
 17437                           
 17438                           ; BSR set to: 0
 17439                           ;MISC.c: 796: unsigned char firstnumber = 255;
 17440  00770C  0100               	movlb	0	; () banked
 17441  00770E  6974               	setf	StringAddEqual@firstnumber& (0+255),b
 17442                           
 17443                           ;MISC.c: 797: unsigned char temp[255];
 17444                           ;MISC.c: 798: unsigned char NullPosition;
 17445                           ;MISC.c: 799: for(i = 0; i<255; i++)
 17446  007710  0E00               	movlw	0
 17447  007712  0100               	movlb	0	; () banked
 17448  007714  6F75               	movwf	StringAddEqual@i& (0+255),b
 17449  007716                     l12128:
 17450                           
 17451                           ; BSR set to: 0
 17452  007716  0100               	movlb	0	; () banked
 17453  007718  2975               	incf	StringAddEqual@i& (0+255),w,b
 17454  00771A  B4D8               	btfsc	status,2,c
 17455  00771C  D012               	goto	l12140
 17456  00771E  D001               	goto	l12132
 17457                           
 17458                           ; BSR set to: 0
 17459  007720  D010               	goto	l12140
 17460  007722                     l12132:
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;MISC.c: 800: {
 17464                           ;MISC.c: 801: if(*Input == 0)
 17465  007722  C06F  FFD9         	movff	StringAddEqual@Input,fsr2l
 17466  007726  C070  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 17467  00772A  50DF               	movf	indf2,w,c
 17468  00772C  A4D8               	btfss	status,2,c
 17469  00772E  D003               	goto	l12136
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;MISC.c: 802: {
 17473                           ;MISC.c: 803: NullPosition = i;
 17474  007730  C075  F073         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 17475                           
 17476                           ;MISC.c: 804: break;
 17477  007734  D006               	goto	l12140
 17478  007736                     l12136:
 17479                           
 17480                           ; BSR set to: 0
 17481                           ;MISC.c: 805: }
 17482                           ;MISC.c: 806: Input++;
 17483  007736  0100               	movlb	0	; () banked
 17484  007738  4B6F               	infsnz	StringAddEqual@Input& (0+255),f,b
 17485  00773A  2B70               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 17486  00773C  0100               	movlb	0	; () banked
 17487  00773E  2B75               	incf	StringAddEqual@i& (0+255),f,b
 17488  007740  D7EA               	goto	l12128
 17489  007742                     l12140:
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;MISC.c: 807: }
 17493                           ;MISC.c: 808: Input-=NullPosition;
 17494  007742  0100               	movlb	0	; () banked
 17495  007744  5173               	movf	StringAddEqual@NullPosition& (0+255),w,b
 17496  007746  0D01               	mullw	1
 17497  007748  50F3               	movf	prodl,w,c
 17498  00774A  0100               	movlb	0	; () banked
 17499  00774C  5F6F               	subwf	StringAddEqual@Input& (0+255),f,b
 17500  00774E  50F4               	movf	prodh,w,c
 17501  007750  0100               	movlb	0	; () banked
 17502  007752  5B70               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;MISC.c: 809: cleanBuffer(temp,NullPosition +1);
 17506  007754  0E00               	movlw	low StringAddEqual@temp
 17507  007756  0100               	movlb	0	; () banked
 17508  007758  6F60               	movwf	cleanBuffer@data& (0+255),b
 17509  00775A  0E01               	movlw	high StringAddEqual@temp
 17510  00775C  0100               	movlb	0	; () banked
 17511  00775E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 17512  007760  0E01               	movlw	1
 17513  007762  0100               	movlb	0	; () banked
 17514  007764  2573               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 17515  007766  0100               	movlb	0	; () banked
 17516  007768  6F62               	movwf	cleanBuffer@count& (0+255),b
 17517  00776A  0100               	movlb	0	; () banked
 17518  00776C  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 17519  00776E  0E00               	movlw	0
 17520  007770  2363               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 17521  007772  EC3D  F053         	call	_cleanBuffer	;wreg free
 17522                           
 17523                           ;MISC.c: 810: i = 0;
 17524  007776  0E00               	movlw	0
 17525  007778  0100               	movlb	0	; () banked
 17526  00777A  6F75               	movwf	StringAddEqual@i& (0+255),b
 17527                           
 17528                           ;MISC.c: 811: while(Input[i] != 0)
 17529  00777C  D032               	goto	l12154
 17530  00777E                     l12146:
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;MISC.c: 812: {
 17534                           ;MISC.c: 813: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 17535  00777E  0100               	movlb	0	; () banked
 17536  007780  5175               	movf	StringAddEqual@i& (0+255),w,b
 17537  007782  0D01               	mullw	1
 17538  007784  50F3               	movf	prodl,w,c
 17539  007786  0100               	movlb	0	; () banked
 17540  007788  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17541  00778A  6ED9               	movwf	fsr2l,c
 17542  00778C  50F4               	movf	prodh,w,c
 17543  00778E  0100               	movlb	0	; () banked
 17544  007790  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17545  007792  6EDA               	movwf	fsr2h,c
 17546  007794  0E2F               	movlw	47
 17547  007796  64DF               	cpfsgt	indf2,c
 17548  007798  D00F               	goto	l12150
 17549                           
 17550                           ; BSR set to: 0
 17551  00779A  0100               	movlb	0	; () banked
 17552  00779C  5175               	movf	StringAddEqual@i& (0+255),w,b
 17553  00779E  0D01               	mullw	1
 17554  0077A0  50F3               	movf	prodl,w,c
 17555  0077A2  0100               	movlb	0	; () banked
 17556  0077A4  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17557  0077A6  6ED9               	movwf	fsr2l,c
 17558  0077A8  50F4               	movf	prodh,w,c
 17559  0077AA  0100               	movlb	0	; () banked
 17560  0077AC  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17561  0077AE  6EDA               	movwf	fsr2h,c
 17562  0077B0  0E39               	movlw	57
 17563  0077B2  64DF               	cpfsgt	indf2,c
 17564  0077B4  D010               	goto	l623
 17565  0077B6  D000               	goto	l12150
 17566  0077B8                     l12150:
 17567                           
 17568                           ; BSR set to: 0
 17569  0077B8  0100               	movlb	0	; () banked
 17570  0077BA  5175               	movf	StringAddEqual@i& (0+255),w,b
 17571  0077BC  0D01               	mullw	1
 17572  0077BE  50F3               	movf	prodl,w,c
 17573  0077C0  0100               	movlb	0	; () banked
 17574  0077C2  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17575  0077C4  6ED9               	movwf	fsr2l,c
 17576  0077C6  50F4               	movf	prodh,w,c
 17577  0077C8  0100               	movlb	0	; () banked
 17578  0077CA  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17579  0077CC  6EDA               	movwf	fsr2h,c
 17580  0077CE  0E2D               	movlw	45
 17581  0077D0  18DE               	xorwf	postinc2,w,c
 17582  0077D2  A4D8               	btfss	status,2,c
 17583  0077D4  D003               	goto	l12152
 17584  0077D6                     l623:
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;MISC.c: 814: {
 17588                           ;MISC.c: 815: firstnumber = i;
 17589  0077D6  C075  F074         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 17590                           
 17591                           ;MISC.c: 816: break;
 17592  0077DA  D011               	goto	l12156
 17593  0077DC                     l12152:
 17594                           
 17595                           ; BSR set to: 0
 17596                           ;MISC.c: 817: }
 17597                           ;MISC.c: 818: i++;
 17598  0077DC  0100               	movlb	0	; () banked
 17599  0077DE  2B75               	incf	StringAddEqual@i& (0+255),f,b
 17600  0077E0  D000               	goto	l12154
 17601  0077E2                     l12154:
 17602                           
 17603                           ; BSR set to: 0
 17604  0077E2  0100               	movlb	0	; () banked
 17605  0077E4  5175               	movf	StringAddEqual@i& (0+255),w,b
 17606  0077E6  0D01               	mullw	1
 17607  0077E8  50F3               	movf	prodl,w,c
 17608  0077EA  0100               	movlb	0	; () banked
 17609  0077EC  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17610  0077EE  6ED9               	movwf	fsr2l,c
 17611  0077F0  50F4               	movf	prodh,w,c
 17612  0077F2  0100               	movlb	0	; () banked
 17613  0077F4  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17614  0077F6  6EDA               	movwf	fsr2h,c
 17615  0077F8  50DF               	movf	indf2,w,c
 17616  0077FA  A4D8               	btfss	status,2,c
 17617  0077FC  D7C0               	goto	l12146
 17618  0077FE                     l12156:
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;MISC.c: 819: }
 17622                           ;MISC.c: 820: if(firstnumber == 255)
 17623  0077FE  0100               	movlb	0	; () banked
 17624  007800  2974               	incf	StringAddEqual@firstnumber& (0+255),w,b
 17625  007802  A4D8               	btfss	status,2,c
 17626  007804  D002               	goto	l12162
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;MISC.c: 821: {
 17630                           ;MISC.c: 823: return 0;
 17631  007806  0E00               	movlw	0
 17632                           
 17633                           ; BSR set to: 0
 17634  007808  0012               	return	
 17635  00780A                     l12162:
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;MISC.c: 824: }
 17639                           ;MISC.c: 825: for(j=0;j<firstnumber;j++)
 17640  00780A  0E00               	movlw	0
 17641  00780C  0100               	movlb	0	; () banked
 17642  00780E  6F76               	movwf	StringAddEqual@j& (0+255),b
 17643  007810  D019               	goto	l12168
 17644  007812                     l12164:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;MISC.c: 826: {
 17648                           ;MISC.c: 827: temp[j] = Input[j];
 17649  007812  0100               	movlb	0	; () banked
 17650  007814  5176               	movf	StringAddEqual@j& (0+255),w,b
 17651  007816  0D01               	mullw	1
 17652  007818  50F3               	movf	prodl,w,c
 17653  00781A  0100               	movlb	0	; () banked
 17654  00781C  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17655  00781E  6ED9               	movwf	fsr2l,c
 17656  007820  50F4               	movf	prodh,w,c
 17657  007822  0100               	movlb	0	; () banked
 17658  007824  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17659  007826  6EDA               	movwf	fsr2h,c
 17660  007828  0100               	movlb	0	; () banked
 17661  00782A  5176               	movf	StringAddEqual@j& (0+255),w,b
 17662  00782C  0D01               	mullw	1
 17663  00782E  0E00               	movlw	low StringAddEqual@temp
 17664  007830  24F3               	addwf	prodl,w,c
 17665  007832  6EE1               	movwf	fsr1l,c
 17666  007834  0E01               	movlw	high StringAddEqual@temp
 17667  007836  20F4               	addwfc	prodh,w,c
 17668  007838  6EE2               	movwf	fsr1h,c
 17669  00783A  CFDF FFE7          	movff	indf2,indf1
 17670                           
 17671                           ; BSR set to: 0
 17672  00783E  0100               	movlb	0	; () banked
 17673  007840  2B76               	incf	StringAddEqual@j& (0+255),f,b
 17674  007842  D000               	goto	l12168
 17675  007844                     l12168:
 17676                           
 17677                           ; BSR set to: 0
 17678  007844  0100               	movlb	0	; () banked
 17679  007846  5174               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17680  007848  0100               	movlb	0	; () banked
 17681  00784A  5D76               	subwf	StringAddEqual@j& (0+255),w,b
 17682  00784C  A0D8               	btfss	status,0,c
 17683  00784E  D7E1               	goto	l12164
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;MISC.c: 828: }
 17687                           ;MISC.c: 829: temp[firstnumber] = '=';
 17688                           
 17689                           ; BSR set to: 0
 17690  007850  0100               	movlb	0	; () banked
 17691  007852  5174               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17692  007854  0D01               	mullw	1
 17693  007856  0E00               	movlw	low StringAddEqual@temp
 17694  007858  24F3               	addwf	prodl,w,c
 17695  00785A  6ED9               	movwf	fsr2l,c
 17696  00785C  0E01               	movlw	high StringAddEqual@temp
 17697  00785E  20F4               	addwfc	prodh,w,c
 17698  007860  6EDA               	movwf	fsr2h,c
 17699  007862  0E3D               	movlw	61
 17700  007864  6EDF               	movwf	indf2,c
 17701                           
 17702                           ; BSR set to: 0
 17703                           ;MISC.c: 830: for(j = (firstnumber);j<255;j++)
 17704  007866  C074  F076         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 17705  00786A                     l12174:
 17706                           
 17707                           ; BSR set to: 0
 17708  00786A  0100               	movlb	0	; () banked
 17709  00786C  2976               	incf	StringAddEqual@j& (0+255),w,b
 17710  00786E  B4D8               	btfsc	status,2,c
 17711  007870  D034               	goto	l12188
 17712  007872  D001               	goto	l12178
 17713                           
 17714                           ; BSR set to: 0
 17715  007874  D032               	goto	l12188
 17716  007876                     l12178:
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;MISC.c: 831: {
 17720                           ;MISC.c: 832: temp[j+1] = Input[j];
 17721  007876  0100               	movlb	0	; () banked
 17722  007878  5176               	movf	StringAddEqual@j& (0+255),w,b
 17723  00787A  0D01               	mullw	1
 17724  00787C  50F3               	movf	prodl,w,c
 17725  00787E  0100               	movlb	0	; () banked
 17726  007880  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17727  007882  6ED9               	movwf	fsr2l,c
 17728  007884  50F4               	movf	prodh,w,c
 17729  007886  0100               	movlb	0	; () banked
 17730  007888  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17731  00788A  6EDA               	movwf	fsr2h,c
 17732  00788C  0100               	movlb	0	; () banked
 17733  00788E  5176               	movf	StringAddEqual@j& (0+255),w,b
 17734  007890  0100               	movlb	0	; () banked
 17735  007892  6F71               	movwf	??_StringAddEqual& (0+255),b
 17736  007894  6B72               	clrf	(??_StringAddEqual+1)& (0+255),b
 17737  007896  0E01               	movlw	1
 17738  007898  0100               	movlb	0	; () banked
 17739  00789A  2771               	addwf	??_StringAddEqual& (0+255),f,b
 17740  00789C  0E00               	movlw	0
 17741  00789E  2372               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 17742  0078A0  0E00               	movlw	low StringAddEqual@temp
 17743  0078A2  0100               	movlb	0	; () banked
 17744  0078A4  2571               	addwf	??_StringAddEqual& (0+255),w,b
 17745  0078A6  6EE1               	movwf	fsr1l,c
 17746  0078A8  0E01               	movlw	high StringAddEqual@temp
 17747  0078AA  0100               	movlb	0	; () banked
 17748  0078AC  2172               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 17749  0078AE  6EE2               	movwf	fsr1h,c
 17750  0078B0  CFDF FFE7          	movff	indf2,indf1
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;MISC.c: 833: if(Input[j] == 0)
 17754  0078B4  0100               	movlb	0	; () banked
 17755  0078B6  5176               	movf	StringAddEqual@j& (0+255),w,b
 17756  0078B8  0D01               	mullw	1
 17757  0078BA  50F3               	movf	prodl,w,c
 17758  0078BC  0100               	movlb	0	; () banked
 17759  0078BE  256F               	addwf	StringAddEqual@Input& (0+255),w,b
 17760  0078C0  6ED9               	movwf	fsr2l,c
 17761  0078C2  50F4               	movf	prodh,w,c
 17762  0078C4  0100               	movlb	0	; () banked
 17763  0078C6  2170               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17764  0078C8  6EDA               	movwf	fsr2h,c
 17765  0078CA  50DF               	movf	indf2,w,c
 17766  0078CC  B4D8               	btfsc	status,2,c
 17767  0078CE  D005               	goto	l12188
 17768  0078D0  D001               	goto	l12184
 17769                           
 17770                           ; BSR set to: 0
 17771                           ;MISC.c: 834: {
 17772                           ;MISC.c: 835: break;
 17773  0078D2  D003               	goto	l12188
 17774  0078D4                     l12184:
 17775                           
 17776                           ; BSR set to: 0
 17777  0078D4  0100               	movlb	0	; () banked
 17778  0078D6  2B76               	incf	StringAddEqual@j& (0+255),f,b
 17779  0078D8  D7C8               	goto	l12174
 17780  0078DA                     l12188:
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;MISC.c: 836: }
 17784                           ;MISC.c: 837: }
 17785                           ;MISC.c: 838: BufferCopy(temp,Input,NullPosition +1,0);
 17786  0078DA  0E00               	movlw	low StringAddEqual@temp
 17787  0078DC  0100               	movlb	0	; () banked
 17788  0078DE  6F68               	movwf	BufferCopy@from& (0+255),b
 17789  0078E0  0E01               	movlw	high StringAddEqual@temp
 17790  0078E2  0100               	movlb	0	; () banked
 17791  0078E4  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 17792  0078E6  C06F  F06A         	movff	StringAddEqual@Input,BufferCopy@to
 17793  0078EA  C070  F06B         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 17794  0078EE  0100               	movlb	0	; () banked
 17795  0078F0  2973               	incf	StringAddEqual@NullPosition& (0+255),w,b
 17796  0078F2  0100               	movlb	0	; () banked
 17797  0078F4  6F6C               	movwf	BufferCopy@count& (0+255),b
 17798  0078F6  0E00               	movlw	0
 17799  0078F8  0100               	movlb	0	; () banked
 17800  0078FA  6F6D               	movwf	BufferCopy@shift& (0+255),b
 17801  0078FC  EC36  F051         	call	_BufferCopy	;wreg free
 17802                           
 17803                           ;MISC.c: 839: return 1;
 17804  007900  0E01               	movlw	1
 17805  007902  0012               	return	
 17806  007904  0012               	return		;funcret
 17807  007906                     __end_of_StringAddEqual:
 17808                           	opt stack 0
 17809                           tblptru	equ	0xFF8
 17810                           tblptrh	equ	0xFF7
 17811                           tblptrl	equ	0xFF6
 17812                           tablat	equ	0xFF5
 17813                           prodh	equ	0xFF4
 17814                           prodl	equ	0xFF3
 17815                           intcon	equ	0xFF2
 17816                           indf0	equ	0xFEF
 17817                           postinc0	equ	0xFEE
 17818                           plusw0	equ	0xFEB
 17819                           fsr0h	equ	0xFEA
 17820                           fsr0l	equ	0xFE9
 17821                           wreg	equ	0xFE8
 17822                           indf1	equ	0xFE7
 17823                           postdec1	equ	0xFE5
 17824                           fsr1h	equ	0xFE2
 17825                           fsr1l	equ	0xFE1
 17826                           indf2	equ	0xFDF
 17827                           postinc2	equ	0xFDE
 17828                           plusw2	equ	0xFDB
 17829                           fsr2h	equ	0xFDA
 17830                           fsr2l	equ	0xFD9
 17831                           status	equ	0xFD8
 17832                           
 17833 ;; *************** function _SendRF_Channel *****************
 17834 ;; Defined at:
 17835 ;;		line 165 in file "RF.c"
 17836 ;; Parameters:    Size  Location     Type
 17837 ;;  channel         1    wreg     unsigned char 
 17838 ;; Auto vars:     Size  Location     Type
 17839 ;;  channel         1   13[BANK0 ] unsigned char 
 17840 ;; Return value:  Size  Location     Type
 17841 ;;		None               void
 17842 ;; Registers used:
 17843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/0
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17852 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17853 ;;Total ram usage:        1 bytes
 17854 ;; Hardware stack levels used:    1
 17855 ;; Hardware stack levels required when called:    8
 17856 ;; This function calls:
 17857 ;;		_SendRF_wait
 17858 ;; This function is called by:
 17859 ;;		_UseIRCode
 17860 ;;		_UseBluetooth
 17861 ;; This function uses a non-reentrant model
 17862 ;;
 17863                           
 17864                           	psect	text13
 17865  006FB0                     __ptext13:
 17866                           	opt stack 0
 17867  006FB0                     _SendRF_Channel:
 17868                           	opt stack 21
 17869                           
 17870                           ;incstack = 0
 17871                           ;SendRF_Channel@channel stored from wreg
 17872  006FB0  0100               	movlb	0	; () banked
 17873  006FB2  6F6D               	movwf	SendRF_Channel@channel& (0+255),b
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;RF.c: 171: switch (channel)
 17877  006FB4  D121               	goto	l12412
 17878  006FB6                     l12354:
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;RF.c: 175: SendRF_wait(Conf1_ChannelD,1,12,7);
 17882  006FB6  0E20               	movlw	low _Conf1_ChannelD
 17883  006FB8  0100               	movlb	0	; () banked
 17884  006FBA  6F68               	movwf	SendRF_wait@Code& (0+255),b
 17885  006FBC  0EEF               	movlw	high _Conf1_ChannelD
 17886  006FBE  0100               	movlb	0	; () banked
 17887  006FC0  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 17888  006FC2  0E01               	movlw	1
 17889  006FC4  0100               	movlb	0	; () banked
 17890  006FC6  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 17891  006FC8  0E0C               	movlw	12
 17892  006FCA  0100               	movlb	0	; () banked
 17893  006FCC  6F6B               	movwf	SendRF_wait@size& (0+255),b
 17894  006FCE  0E07               	movlw	7
 17895  006FD0  0100               	movlb	0	; () banked
 17896  006FD2  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 17897  006FD4  ECBD  F054         	call	_SendRF_wait	;wreg free
 17898                           
 17899                           ;RF.c: 176: break;
 17900  006FD8  0012               	return	
 17901  006FDA                     l12356:
 17902                           
 17903                           ;RF.c: 179: SendRF_wait(Conf1_ChannelE,1,12,7);
 17904  006FDA  0E2C               	movlw	low _Conf1_ChannelE
 17905  006FDC  0100               	movlb	0	; () banked
 17906  006FDE  6F68               	movwf	SendRF_wait@Code& (0+255),b
 17907  006FE0  0EEF               	movlw	high _Conf1_ChannelE
 17908  006FE2  0100               	movlb	0	; () banked
 17909  006FE4  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 17910  006FE6  0E01               	movlw	1
 17911  006FE8  0100               	movlb	0	; () banked
 17912  006FEA  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 17913  006FEC  0E0C               	movlw	12
 17914  006FEE  0100               	movlb	0	; () banked
 17915  006FF0  6F6B               	movwf	SendRF_wait@size& (0+255),b
 17916  006FF2  0E07               	movlw	7
 17917  006FF4  0100               	movlb	0	; () banked
 17918  006FF6  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 17919  006FF8  ECBD  F054         	call	_SendRF_wait	;wreg free
 17920                           
 17921                           ;RF.c: 180: break;
 17922  006FFC  0012               	return	
 17923  006FFE                     l12358:
 17924                           
 17925                           ;RF.c: 183: SendRF_wait(Conf1_ChannelF,1,12,7);
 17926  006FFE  0E38               	movlw	low _Conf1_ChannelF
 17927  007000  0100               	movlb	0	; () banked
 17928  007002  6F68               	movwf	SendRF_wait@Code& (0+255),b
 17929  007004  0EEF               	movlw	high _Conf1_ChannelF
 17930  007006  0100               	movlb	0	; () banked
 17931  007008  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 17932  00700A  0E01               	movlw	1
 17933  00700C  0100               	movlb	0	; () banked
 17934  00700E  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 17935  007010  0E0C               	movlw	12
 17936  007012  0100               	movlb	0	; () banked
 17937  007014  6F6B               	movwf	SendRF_wait@size& (0+255),b
 17938  007016  0E07               	movlw	7
 17939  007018  0100               	movlb	0	; () banked
 17940  00701A  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 17941  00701C  ECBD  F054         	call	_SendRF_wait	;wreg free
 17942                           
 17943                           ;RF.c: 184: break;
 17944  007020  0012               	return	
 17945  007022                     l12360:
 17946                           
 17947                           ;RF.c: 187: if(Conf2_ChannelB_Status)
 17948  007022  0100               	movlb	0	; () banked
 17949  007024  51F5               	movf	_Conf2_ChannelB_Status& (0+255),w,b
 17950  007026  0100               	movlb	0	; () banked
 17951  007028  B4D8               	btfsc	status,2,c
 17952  00702A  D015               	goto	l12366
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;RF.c: 188: {
 17956                           ;RF.c: 189: SendRF_wait(Conf2_ChannelB_OFF,2,16,7);
 17957  00702C  0E27               	movlw	low _Conf2_ChannelB_OFF
 17958  00702E  0100               	movlb	0	; () banked
 17959  007030  6F68               	movwf	SendRF_wait@Code& (0+255),b
 17960  007032  0EEE               	movlw	high _Conf2_ChannelB_OFF
 17961  007034  0100               	movlb	0	; () banked
 17962  007036  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 17963  007038  0E02               	movlw	2
 17964  00703A  0100               	movlb	0	; () banked
 17965  00703C  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 17966  00703E  0E10               	movlw	16
 17967  007040  0100               	movlb	0	; () banked
 17968  007042  6F6B               	movwf	SendRF_wait@size& (0+255),b
 17969  007044  0E07               	movlw	7
 17970  007046  0100               	movlb	0	; () banked
 17971  007048  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 17972  00704A  ECBD  F054         	call	_SendRF_wait	;wreg free
 17973                           
 17974                           ;RF.c: 190: Conf2_ChannelB_Status = 0;
 17975  00704E  0E00               	movlw	0
 17976  007050  0100               	movlb	0	; () banked
 17977  007052  6FF5               	movwf	_Conf2_ChannelB_Status& (0+255),b
 17978                           
 17979                           ;RF.c: 191: }
 17980  007054  0012               	return	
 17981  007056                     l12366:
 17982                           
 17983                           ; BSR set to: 0
 17984                           ;RF.c: 192: else
 17985                           ;RF.c: 193: {
 17986                           ;RF.c: 194: SendRF_wait(Conf2_ChannelB_ON,2,16,7);
 17987  007056  0E37               	movlw	low _Conf2_ChannelB_ON
 17988  007058  0100               	movlb	0	; () banked
 17989  00705A  6F68               	movwf	SendRF_wait@Code& (0+255),b
 17990  00705C  0EEE               	movlw	high _Conf2_ChannelB_ON
 17991  00705E  0100               	movlb	0	; () banked
 17992  007060  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 17993  007062  0E02               	movlw	2
 17994  007064  0100               	movlb	0	; () banked
 17995  007066  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 17996  007068  0E10               	movlw	16
 17997  00706A  0100               	movlb	0	; () banked
 17998  00706C  6F6B               	movwf	SendRF_wait@size& (0+255),b
 17999  00706E  0E07               	movlw	7
 18000  007070  0100               	movlb	0	; () banked
 18001  007072  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18002  007074  ECBD  F054         	call	_SendRF_wait	;wreg free
 18003                           
 18004                           ;RF.c: 195: Conf2_ChannelB_Status = 1;
 18005  007078  0E01               	movlw	1
 18006  00707A  0100               	movlb	0	; () banked
 18007  00707C  6FF5               	movwf	_Conf2_ChannelB_Status& (0+255),b
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;RF.c: 196: }
 18011                           ;RF.c: 197: break;
 18012  00707E  0012               	return	
 18013  007080                     l12370:
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;RF.c: 200: if(Conf2_ChannelD_Status)
 18017  007080  0100               	movlb	0	; () banked
 18018  007082  51F6               	movf	_Conf2_ChannelD_Status& (0+255),w,b
 18019  007084  0100               	movlb	0	; () banked
 18020  007086  B4D8               	btfsc	status,2,c
 18021  007088  D015               	goto	l12376
 18022                           
 18023                           ; BSR set to: 0
 18024                           ;RF.c: 201: {
 18025                           ;RF.c: 202: SendRF_wait(Conf2_ChannelD_OFF,2,16,7);
 18026  00708A  0E47               	movlw	low _Conf2_ChannelD_OFF
 18027  00708C  0100               	movlb	0	; () banked
 18028  00708E  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18029  007090  0EEE               	movlw	high _Conf2_ChannelD_OFF
 18030  007092  0100               	movlb	0	; () banked
 18031  007094  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18032  007096  0E02               	movlw	2
 18033  007098  0100               	movlb	0	; () banked
 18034  00709A  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18035  00709C  0E10               	movlw	16
 18036  00709E  0100               	movlb	0	; () banked
 18037  0070A0  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18038  0070A2  0E07               	movlw	7
 18039  0070A4  0100               	movlb	0	; () banked
 18040  0070A6  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18041  0070A8  ECBD  F054         	call	_SendRF_wait	;wreg free
 18042                           
 18043                           ;RF.c: 203: Conf2_ChannelD_Status = 0;
 18044  0070AC  0E00               	movlw	0
 18045  0070AE  0100               	movlb	0	; () banked
 18046  0070B0  6FF6               	movwf	_Conf2_ChannelD_Status& (0+255),b
 18047                           
 18048                           ;RF.c: 204: }
 18049  0070B2  0012               	return	
 18050  0070B4                     l12376:
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;RF.c: 205: else
 18054                           ;RF.c: 206: {
 18055                           ;RF.c: 207: SendRF_wait(Conf2_ChannelD_ON,2,16,7);
 18056  0070B4  0E57               	movlw	low _Conf2_ChannelD_ON
 18057  0070B6  0100               	movlb	0	; () banked
 18058  0070B8  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18059  0070BA  0EEE               	movlw	high _Conf2_ChannelD_ON
 18060  0070BC  0100               	movlb	0	; () banked
 18061  0070BE  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18062  0070C0  0E02               	movlw	2
 18063  0070C2  0100               	movlb	0	; () banked
 18064  0070C4  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18065  0070C6  0E10               	movlw	16
 18066  0070C8  0100               	movlb	0	; () banked
 18067  0070CA  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18068  0070CC  0E07               	movlw	7
 18069  0070CE  0100               	movlb	0	; () banked
 18070  0070D0  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18071  0070D2  ECBD  F054         	call	_SendRF_wait	;wreg free
 18072                           
 18073                           ;RF.c: 208: Conf2_ChannelD_Status = 1;
 18074  0070D6  0E01               	movlw	1
 18075  0070D8  0100               	movlb	0	; () banked
 18076  0070DA  6FF6               	movwf	_Conf2_ChannelD_Status& (0+255),b
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;RF.c: 209: }
 18080                           ;RF.c: 210: break;
 18081  0070DC  0012               	return	
 18082  0070DE                     l12380:
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;RF.c: 213: if(Conf2_ChannelH_1_Status)
 18086  0070DE  0100               	movlb	0	; () banked
 18087  0070E0  51F7               	movf	_Conf2_ChannelH_1_Status& (0+255),w,b
 18088  0070E2  0100               	movlb	0	; () banked
 18089  0070E4  B4D8               	btfsc	status,2,c
 18090  0070E6  D015               	goto	l12386
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;RF.c: 214: {
 18094                           ;RF.c: 215: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,7);
 18095  0070E8  0E67               	movlw	low _Conf2_ChannelH_1_OFF
 18096  0070EA  0100               	movlb	0	; () banked
 18097  0070EC  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18098  0070EE  0EEE               	movlw	high _Conf2_ChannelH_1_OFF
 18099  0070F0  0100               	movlb	0	; () banked
 18100  0070F2  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18101  0070F4  0E02               	movlw	2
 18102  0070F6  0100               	movlb	0	; () banked
 18103  0070F8  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18104  0070FA  0E10               	movlw	16
 18105  0070FC  0100               	movlb	0	; () banked
 18106  0070FE  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18107  007100  0E07               	movlw	7
 18108  007102  0100               	movlb	0	; () banked
 18109  007104  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18110  007106  ECBD  F054         	call	_SendRF_wait	;wreg free
 18111                           
 18112                           ;RF.c: 216: Conf2_ChannelH_1_Status = 0;
 18113  00710A  0E00               	movlw	0
 18114  00710C  0100               	movlb	0	; () banked
 18115  00710E  6FF7               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
 18116                           
 18117                           ;RF.c: 217: }
 18118  007110  0012               	return	
 18119  007112                     l12386:
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;RF.c: 218: else
 18123                           ;RF.c: 219: {
 18124                           ;RF.c: 220: SendRF_wait(Conf2_ChannelH_1_ON,2,16,7);
 18125  007112  0E77               	movlw	low _Conf2_ChannelH_1_ON
 18126  007114  0100               	movlb	0	; () banked
 18127  007116  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18128  007118  0EEE               	movlw	high _Conf2_ChannelH_1_ON
 18129  00711A  0100               	movlb	0	; () banked
 18130  00711C  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18131  00711E  0E02               	movlw	2
 18132  007120  0100               	movlb	0	; () banked
 18133  007122  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18134  007124  0E10               	movlw	16
 18135  007126  0100               	movlb	0	; () banked
 18136  007128  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18137  00712A  0E07               	movlw	7
 18138  00712C  0100               	movlb	0	; () banked
 18139  00712E  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18140  007130  ECBD  F054         	call	_SendRF_wait	;wreg free
 18141                           
 18142                           ;RF.c: 221: Conf2_ChannelH_1_Status = 1;
 18143  007134  0E01               	movlw	1
 18144  007136  0100               	movlb	0	; () banked
 18145  007138  6FF7               	movwf	_Conf2_ChannelH_1_Status& (0+255),b
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;RF.c: 222: }
 18149                           ;RF.c: 223: break;
 18150  00713A  0012               	return	
 18151  00713C                     l12390:
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;RF.c: 226: if(Conf2_ChannelH_2_Status)
 18155  00713C  0100               	movlb	0	; () banked
 18156  00713E  51F8               	movf	_Conf2_ChannelH_2_Status& (0+255),w,b
 18157  007140  0100               	movlb	0	; () banked
 18158  007142  B4D8               	btfsc	status,2,c
 18159  007144  D015               	goto	l12396
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;RF.c: 227: {
 18163                           ;RF.c: 228: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,7);
 18164  007146  0E87               	movlw	low _Conf2_ChannelH_2_OFF
 18165  007148  0100               	movlb	0	; () banked
 18166  00714A  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18167  00714C  0EEE               	movlw	high _Conf2_ChannelH_2_OFF
 18168  00714E  0100               	movlb	0	; () banked
 18169  007150  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18170  007152  0E02               	movlw	2
 18171  007154  0100               	movlb	0	; () banked
 18172  007156  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18173  007158  0E10               	movlw	16
 18174  00715A  0100               	movlb	0	; () banked
 18175  00715C  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18176  00715E  0E07               	movlw	7
 18177  007160  0100               	movlb	0	; () banked
 18178  007162  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18179  007164  ECBD  F054         	call	_SendRF_wait	;wreg free
 18180                           
 18181                           ;RF.c: 229: Conf2_ChannelH_2_Status = 0;
 18182  007168  0E00               	movlw	0
 18183  00716A  0100               	movlb	0	; () banked
 18184  00716C  6FF8               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
 18185                           
 18186                           ;RF.c: 230: }
 18187  00716E  0012               	return	
 18188  007170                     l12396:
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;RF.c: 231: else
 18192                           ;RF.c: 232: {
 18193                           ;RF.c: 233: SendRF_wait(Conf2_ChannelH_2_ON,2,16,7);
 18194  007170  0E97               	movlw	low _Conf2_ChannelH_2_ON
 18195  007172  0100               	movlb	0	; () banked
 18196  007174  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18197  007176  0EEE               	movlw	high _Conf2_ChannelH_2_ON
 18198  007178  0100               	movlb	0	; () banked
 18199  00717A  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18200  00717C  0E02               	movlw	2
 18201  00717E  0100               	movlb	0	; () banked
 18202  007180  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18203  007182  0E10               	movlw	16
 18204  007184  0100               	movlb	0	; () banked
 18205  007186  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18206  007188  0E07               	movlw	7
 18207  00718A  0100               	movlb	0	; () banked
 18208  00718C  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18209  00718E  ECBD  F054         	call	_SendRF_wait	;wreg free
 18210                           
 18211                           ;RF.c: 234: Conf2_ChannelH_2_Status = 1;
 18212  007192  0E01               	movlw	1
 18213  007194  0100               	movlb	0	; () banked
 18214  007196  6FF8               	movwf	_Conf2_ChannelH_2_Status& (0+255),b
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;RF.c: 235: }
 18218                           ;RF.c: 236: break;
 18219  007198  0012               	return	
 18220  00719A                     l12400:
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;RF.c: 239: if(Conf2_ChannelH_3_Status)
 18224  00719A  0100               	movlb	0	; () banked
 18225  00719C  51F9               	movf	_Conf2_ChannelH_3_Status& (0+255),w,b
 18226  00719E  0100               	movlb	0	; () banked
 18227  0071A0  B4D8               	btfsc	status,2,c
 18228  0071A2  D015               	goto	l12406
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;RF.c: 240: {
 18232                           ;RF.c: 241: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,7);
 18233  0071A4  0EA7               	movlw	low _Conf2_ChannelH_3_OFF
 18234  0071A6  0100               	movlb	0	; () banked
 18235  0071A8  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18236  0071AA  0EEE               	movlw	high _Conf2_ChannelH_3_OFF
 18237  0071AC  0100               	movlb	0	; () banked
 18238  0071AE  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18239  0071B0  0E02               	movlw	2
 18240  0071B2  0100               	movlb	0	; () banked
 18241  0071B4  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18242  0071B6  0E10               	movlw	16
 18243  0071B8  0100               	movlb	0	; () banked
 18244  0071BA  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18245  0071BC  0E07               	movlw	7
 18246  0071BE  0100               	movlb	0	; () banked
 18247  0071C0  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18248  0071C2  ECBD  F054         	call	_SendRF_wait	;wreg free
 18249                           
 18250                           ;RF.c: 242: Conf2_ChannelH_3_Status = 0;
 18251  0071C6  0E00               	movlw	0
 18252  0071C8  0100               	movlb	0	; () banked
 18253  0071CA  6FF9               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
 18254                           
 18255                           ;RF.c: 243: }
 18256  0071CC  0012               	return	
 18257  0071CE                     l12406:
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;RF.c: 244: else
 18261                           ;RF.c: 245: {
 18262                           ;RF.c: 246: SendRF_wait(Conf2_ChannelH_3_ON,2,16,7);
 18263  0071CE  0EB7               	movlw	low _Conf2_ChannelH_3_ON
 18264  0071D0  0100               	movlb	0	; () banked
 18265  0071D2  6F68               	movwf	SendRF_wait@Code& (0+255),b
 18266  0071D4  0EEE               	movlw	high _Conf2_ChannelH_3_ON
 18267  0071D6  0100               	movlb	0	; () banked
 18268  0071D8  6F69               	movwf	(SendRF_wait@Code+1)& (0+255),b
 18269  0071DA  0E02               	movlw	2
 18270  0071DC  0100               	movlb	0	; () banked
 18271  0071DE  6F6A               	movwf	SendRF_wait@Config& (0+255),b
 18272  0071E0  0E10               	movlw	16
 18273  0071E2  0100               	movlb	0	; () banked
 18274  0071E4  6F6B               	movwf	SendRF_wait@size& (0+255),b
 18275  0071E6  0E07               	movlw	7
 18276  0071E8  0100               	movlb	0	; () banked
 18277  0071EA  6F6C               	movwf	SendRF_wait@amount& (0+255),b
 18278  0071EC  ECBD  F054         	call	_SendRF_wait	;wreg free
 18279                           
 18280                           ;RF.c: 247: Conf2_ChannelH_3_Status = 1;
 18281  0071F0  0E01               	movlw	1
 18282  0071F2  0100               	movlb	0	; () banked
 18283  0071F4  6FF9               	movwf	_Conf2_ChannelH_3_Status& (0+255),b
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;RF.c: 252: }
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;RF.c: 251: break;
 18290                           
 18291                           ;RF.c: 250: default:
 18292                           
 18293                           ; BSR set to: 0
 18294                           ;RF.c: 248: }
 18295                           ;RF.c: 249: break;
 18296  0071F6  0012               	return	
 18297  0071F8                     l12412:
 18298                           
 18299                           ; BSR set to: 0
 18300  0071F8  0100               	movlb	0	; () banked
 18301  0071FA  516D               	movf	SendRF_Channel@channel& (0+255),w,b
 18302                           
 18303                           ; Switch size 1, requested type "space"
 18304                           ; Number of cases is 8, Range of values is 0 to 7
 18305                           ; switch strategies available:
 18306                           ; Name         Instructions Cycles
 18307                           ; simple_byte           25    13 (average)
 18308                           ;	Chosen strategy is simple_byte
 18309  0071FC  0A00               	xorlw	0	; case 0
 18310  0071FE  B4D8               	btfsc	status,2,c
 18311  007200  D6DA               	goto	l12354
 18312  007202  0A01               	xorlw	1	; case 1
 18313  007204  B4D8               	btfsc	status,2,c
 18314  007206  D6E9               	goto	l12356
 18315  007208  0A03               	xorlw	3	; case 2
 18316  00720A  B4D8               	btfsc	status,2,c
 18317  00720C  D6F8               	goto	l12358
 18318  00720E  0A01               	xorlw	1	; case 3
 18319  007210  B4D8               	btfsc	status,2,c
 18320  007212  D707               	goto	l12360
 18321  007214  0A07               	xorlw	7	; case 4
 18322  007216  B4D8               	btfsc	status,2,c
 18323  007218  D733               	goto	l12370
 18324  00721A  0A01               	xorlw	1	; case 5
 18325  00721C  B4D8               	btfsc	status,2,c
 18326  00721E  D75F               	goto	l12380
 18327  007220  0A03               	xorlw	3	; case 6
 18328  007222  B4D8               	btfsc	status,2,c
 18329  007224  D78B               	goto	l12390
 18330  007226  0A01               	xorlw	1	; case 7
 18331  007228  A4D8               	btfss	status,2,c
 18332  00722A  0012               	return	
 18333  00722C  D7B6               	goto	l12400
 18334                           
 18335                           ; BSR set to: 0
 18336  00722E  0012               	return		;funcret
 18337  007230                     __end_of_SendRF_Channel:
 18338                           	opt stack 0
 18339                           tblptru	equ	0xFF8
 18340                           tblptrh	equ	0xFF7
 18341                           tblptrl	equ	0xFF6
 18342                           tablat	equ	0xFF5
 18343                           prodh	equ	0xFF4
 18344                           prodl	equ	0xFF3
 18345                           intcon	equ	0xFF2
 18346                           indf0	equ	0xFEF
 18347                           postinc0	equ	0xFEE
 18348                           plusw0	equ	0xFEB
 18349                           fsr0h	equ	0xFEA
 18350                           fsr0l	equ	0xFE9
 18351                           wreg	equ	0xFE8
 18352                           indf1	equ	0xFE7
 18353                           postdec1	equ	0xFE5
 18354                           fsr1h	equ	0xFE2
 18355                           fsr1l	equ	0xFE1
 18356                           indf2	equ	0xFDF
 18357                           postinc2	equ	0xFDE
 18358                           plusw2	equ	0xFDB
 18359                           fsr2h	equ	0xFDA
 18360                           fsr2l	equ	0xFD9
 18361                           status	equ	0xFD8
 18362                           
 18363 ;; *************** function _SendRF_wait *****************
 18364 ;; Defined at:
 18365 ;;		line 145 in file "RF.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;  Code            2    8[BANK0 ] PTR const unsigned char 
 18368 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 18369 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 18370 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 18371 ;;		 -> Conf1_ChannelD(12), 
 18372 ;;  Config          1   10[BANK0 ] unsigned char 
 18373 ;;  size            1   11[BANK0 ] unsigned char 
 18374 ;;  amount          1   12[BANK0 ] unsigned char 
 18375 ;; Auto vars:     Size  Location     Type
 18376 ;;		None
 18377 ;; Return value:  Size  Location     Type
 18378 ;;		None               void
 18379 ;; Registers used:
 18380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18381 ;; Tracked objects:
 18382 ;;		On entry : 0/0
 18383 ;;		On exit  : 0/0
 18384 ;;		Unchanged: 0/0
 18385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18386 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18389 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18390 ;;Total ram usage:        5 bytes
 18391 ;; Hardware stack levels used:    1
 18392 ;; Hardware stack levels required when called:    7
 18393 ;; This function calls:
 18394 ;;		_LEDTimerON
 18395 ;;		_ReadIRpin
 18396 ;;		_SendRF
 18397 ;; This function is called by:
 18398 ;;		_UseBluetooth
 18399 ;;		_SendRF_Channel
 18400 ;; This function uses a non-reentrant model
 18401 ;;
 18402                           
 18403                           	psect	text14
 18404  00A97A                     __ptext14:
 18405                           	opt stack 0
 18406  00A97A                     _SendRF_wait:
 18407                           	opt stack 21
 18408                           
 18409                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 18410                           
 18411                           ;incstack = 0
 18412  00A97A  987D               	bcf	3965,4,c	;volatile
 18413                           
 18414                           ;RF.c: 148: INTCONbits.RBIE = 0;
 18415  00A97C  96F2               	bcf	intcon,3,c	;volatile
 18416                           
 18417                           ;RF.c: 149: INTCONbits.PEIE = 0;
 18418  00A97E  9CF2               	bcf	intcon,6,c	;volatile
 18419                           
 18420                           ;RF.c: 150: LEDTimerON();
 18421  00A980  EC06  F057         	call	_LEDTimerON	;wreg free
 18422                           
 18423                           ;RF.c: 151: (LATC |= 0x04);
 18424  00A984  848B               	bsf	3979,2,c	;volatile
 18425                           
 18426                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 18427  00A986  C068  F060         	movff	SendRF_wait@Code,SendRF@Code
 18428  00A98A  C069  F061         	movff	SendRF_wait@Code+1,SendRF@Code+1
 18429  00A98E  C06A  F062         	movff	SendRF_wait@Config,SendRF@Config
 18430  00A992  C06B  F063         	movff	SendRF_wait@size,SendRF@size
 18431  00A996  C06C  F064         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 18432  00A99A  ECB6  F049         	call	_SendRF	;wreg free
 18433                           
 18434                           ;RF.c: 153: while(!Sent);
 18435  00A99E  D000               	goto	l11392
 18436  00A9A0                     l11392:
 18437  00A9A0  0100               	movlb	0	; () banked
 18438  00A9A2  51FF               	movf	_Sent& (0+255),w,b	;volatile
 18439  00A9A4  B4D8               	btfsc	status,2,c
 18440  00A9A6  D7FC               	goto	l11392
 18441                           
 18442                           ; BSR set to: 0
 18443                           ;RF.c: 154: INTCONbits.PEIE = 1;
 18444  00A9A8  8CF2               	bsf	intcon,6,c	;volatile
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 18448  00A9AA  EC4E  F057         	call	_ReadIRpin	;wreg free
 18449  00A9AE  6E40               	movwf	_IRpinOLD,c
 18450                           
 18451                           ;RF.c: 156: INTCONbits.RBIF = 0;
 18452  00A9B0  90F2               	bcf	intcon,0,c	;volatile
 18453                           
 18454                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 18455  00A9B2  887D               	bsf	3965,4,c	;volatile
 18456                           
 18457                           ;RF.c: 158: INTCONbits.RBIE = 1;
 18458  00A9B4  86F2               	bsf	intcon,3,c	;volatile
 18459  00A9B6  0012               	return		;funcret
 18460  00A9B8                     __end_of_SendRF_wait:
 18461                           	opt stack 0
 18462                           tblptru	equ	0xFF8
 18463                           tblptrh	equ	0xFF7
 18464                           tblptrl	equ	0xFF6
 18465                           tablat	equ	0xFF5
 18466                           prodh	equ	0xFF4
 18467                           prodl	equ	0xFF3
 18468                           intcon	equ	0xFF2
 18469                           indf0	equ	0xFEF
 18470                           postinc0	equ	0xFEE
 18471                           plusw0	equ	0xFEB
 18472                           fsr0h	equ	0xFEA
 18473                           fsr0l	equ	0xFE9
 18474                           wreg	equ	0xFE8
 18475                           indf1	equ	0xFE7
 18476                           postdec1	equ	0xFE5
 18477                           fsr1h	equ	0xFE2
 18478                           fsr1l	equ	0xFE1
 18479                           indf2	equ	0xFDF
 18480                           postinc2	equ	0xFDE
 18481                           plusw2	equ	0xFDB
 18482                           fsr2h	equ	0xFDA
 18483                           fsr2l	equ	0xFD9
 18484                           status	equ	0xFD8
 18485                           
 18486 ;; *************** function _SendRF *****************
 18487 ;; Defined at:
 18488 ;;		line 68 in file "RF.c"
 18489 ;; Parameters:    Size  Location     Type
 18490 ;;  Code            2    0[BANK0 ] PTR const unsigned char 
 18491 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 18492 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 18493 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 18494 ;;		 -> Conf1_ChannelD(12), 
 18495 ;;  Config          1    2[BANK0 ] unsigned char 
 18496 ;;  size            1    3[BANK0 ] unsigned char 
 18497 ;;  RepeatAmount    1    4[BANK0 ] unsigned char 
 18498 ;; Auto vars:     Size  Location     Type
 18499 ;;  i               1    7[BANK0 ] unsigned char 
 18500 ;; Return value:  Size  Location     Type
 18501 ;;                  1    wreg      unsigned char 
 18502 ;; Registers used:
 18503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18504 ;; Tracked objects:
 18505 ;;		On entry : 0/0
 18506 ;;		On exit  : 0/0
 18507 ;;		Unchanged: 0/0
 18508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18509 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18511 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18512 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18513 ;;Total ram usage:        8 bytes
 18514 ;; Hardware stack levels used:    1
 18515 ;; Hardware stack levels required when called:    5
 18516 ;; This function calls:
 18517 ;;		Nothing
 18518 ;; This function is called by:
 18519 ;;		_SendRF_wait
 18520 ;; This function uses a non-reentrant model
 18521 ;;
 18522                           
 18523                           	psect	text15
 18524  00936C                     __ptext15:
 18525                           	opt stack 0
 18526  00936C                     _SendRF:
 18527                           	opt stack 22
 18528                           
 18529                           ;RF.c: 70: unsigned char i;
 18530                           ;RF.c: 71: if(Sent)
 18531                           
 18532                           ;incstack = 0
 18533  00936C  0100               	movlb	0	; () banked
 18534  00936E  51FF               	movf	_Sent& (0+255),w,b	;volatile
 18535  009370  B4D8               	btfsc	status,2,c
 18536  009372  0012               	return	
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;RF.c: 72: {
 18540                           ;RF.c: 74: RF_IR = 55;
 18541  009374  0E37               	movlw	55
 18542  009376  6E4E               	movwf	_RF_IR,c
 18543                           
 18544                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 18545  009378  0100               	movlb	0	; () banked
 18546  00937A  5162               	movf	SendRF@Config& (0+255),w,b
 18547  00937C  0100               	movlb	0	; () banked
 18548  00937E  B4D8               	btfsc	status,2,c
 18549  009380  0012               	return	
 18550                           
 18551                           ; BSR set to: 0
 18552  009382  0E02               	movlw	2
 18553  009384  0100               	movlb	0	; () banked
 18554  009386  6562               	cpfsgt	SendRF@Config& (0+255),b
 18555  009388  D002               	goto	l2456
 18556  00938A  0012               	return	
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;RF.c: 76: {
 18560                           ;RF.c: 77: return 0;
 18561                           ;	Return value of _SendRF is never used
 18562  00938C  0012               	return	
 18563  00938E                     l2456:
 18564                           
 18565                           ; BSR set to: 0
 18566                           ;RF.c: 78: }
 18567                           ;RF.c: 79: RFConfig = Config;
 18568  00938E  C062  F044         	movff	SendRF@Config,_RFConfig
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;RF.c: 80: if(Config == 1)
 18572  009392  0100               	movlb	0	; () banked
 18573  009394  0562               	decf	SendRF@Config& (0+255),w,b
 18574  009396  A4D8               	btfss	status,2,c
 18575  009398  D002               	goto	l10764
 18576                           
 18577                           ; BSR set to: 0
 18578                           ;RF.c: 81: {
 18579                           ;RF.c: 82: RF_IR_Postscaler = 2;
 18580  00939A  0E02               	movlw	2
 18581  00939C  D006               	goto	L9
 18582  00939E                     l10764:
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;RF.c: 84: else if(Config == 2)
 18586  00939E  0E02               	movlw	2
 18587  0093A0  0100               	movlb	0	; () banked
 18588  0093A2  1962               	xorwf	SendRF@Config& (0+255),w,b
 18589  0093A4  A4D8               	btfss	status,2,c
 18590  0093A6  0012               	return	
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;RF.c: 85: {
 18594                           ;RF.c: 86: RF_IR_Postscaler = 4;
 18595  0093A8  0E04               	movlw	4
 18596  0093AA                     L9:
 18597  0093AA  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 18598                           
 18599                           ;RF.c: 87: }
 18600  0093AC  D002               	goto	l10768
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;RF.c: 88: else
 18604                           ;RF.c: 89: {
 18605                           ;RF.c: 90: return 0;
 18606                           ;	Return value of _SendRF is never used
 18607  0093AE  0012               	return	
 18608                           
 18609                           ; BSR set to: 0
 18610  0093B0  D000               	goto	l10768
 18611  0093B2                     l10768:
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;RF.c: 91: }
 18615                           ;RF.c: 93: Sent = 0;
 18616  0093B2  0E00               	movlw	0
 18617  0093B4  0100               	movlb	0	; () banked
 18618  0093B6  6FFF               	movwf	_Sent& (0+255),b	;volatile
 18619                           
 18620                           ; BSR set to: 0
 18621                           ;RF.c: 94: Sendcount = RepeatAmount;
 18622  0093B8  C064  F048         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 18623                           
 18624                           ;RF.c: 95: RFsendFlag = 1;
 18625  0093BC  0E01               	movlw	1
 18626  0093BE  6E47               	movwf	_RFsendFlag,c	;volatile
 18627                           
 18628                           ;RF.c: 96: RFcodeBit = 0;
 18629  0093C0  0E00               	movlw	0
 18630  0093C2  6E45               	movwf	_RFcodeBit,c
 18631                           
 18632                           ;RF.c: 97: RFcodePlace = 1;
 18633  0093C4  0E01               	movlw	1
 18634  0093C6  6E46               	movwf	_RFcodePlace,c
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;RF.c: 100: if(size >= 20)
 18638  0093C8  0E13               	movlw	19
 18639  0093CA  0100               	movlb	0	; () banked
 18640  0093CC  6563               	cpfsgt	SendRF@size& (0+255),b
 18641  0093CE  D002               	goto	l10776
 18642  0093D0  0012               	return	
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;RF.c: 101: {
 18646                           ;RF.c: 102: return 0;
 18647                           ;	Return value of _SendRF is never used
 18648  0093D2  0012               	return	
 18649  0093D4                     l10776:
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;RF.c: 103: }
 18653                           ;RF.c: 104: for(i=0;i<size;i++)
 18654  0093D4  0E00               	movlw	0
 18655  0093D6  0100               	movlb	0	; () banked
 18656  0093D8  6F67               	movwf	SendRF@i& (0+255),b
 18657  0093DA  D021               	goto	l10782
 18658  0093DC                     l10778:
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;RF.c: 105: {
 18662                           ;RF.c: 106: RFsendCode[i] = Code[i];
 18663  0093DC  0100               	movlb	0	; () banked
 18664  0093DE  5167               	movf	SendRF@i& (0+255),w,b
 18665  0093E0  0D01               	mullw	1
 18666  0093E2  C060  F065         	movff	SendRF@Code,??_SendRF
 18667  0093E6  C061  F066         	movff	SendRF@Code+1,??_SendRF+1
 18668  0093EA  50F3               	movf	prodl,w,c
 18669  0093EC  0100               	movlb	0	; () banked
 18670  0093EE  2765               	addwf	??_SendRF& (0+255),f,b
 18671  0093F0  50F4               	movf	prodh,w,c
 18672  0093F2  0100               	movlb	0	; () banked
 18673  0093F4  2366               	addwfc	(??_SendRF+1)& (0+255),f,b
 18674  0093F6  C065  FFF6         	movff	??_SendRF,tblptrl
 18675  0093FA  C066  FFF7         	movff	??_SendRF+1,tblptrh
 18676  0093FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18677  0093FE  6AF8               	clrf	tblptru,c
 18678  009400                     	endif
 18679  009400                     	if	0	;tblptru may be non-zero
 18680  009400                     	endif
 18681  009400  0100               	movlb	0	; () banked
 18682  009402  5167               	movf	SendRF@i& (0+255),w,b
 18683  009404  0D01               	mullw	1
 18684  009406  0E8A               	movlw	low _RFsendCode
 18685  009408  24F3               	addwf	prodl,w,c
 18686  00940A  6ED9               	movwf	fsr2l,c
 18687  00940C  0E02               	movlw	high _RFsendCode
 18688  00940E  20F4               	addwfc	prodh,w,c
 18689  009410  6EDA               	movwf	fsr2h,c
 18690  009412  0008               	tblrd		*
 18691  009414  CFF5 FFDF          	movff	tablat,indf2
 18692                           
 18693                           ; BSR set to: 0
 18694  009418  0100               	movlb	0	; () banked
 18695  00941A  2B67               	incf	SendRF@i& (0+255),f,b
 18696  00941C  D000               	goto	l10782
 18697  00941E                     l10782:
 18698                           
 18699                           ; BSR set to: 0
 18700  00941E  0100               	movlb	0	; () banked
 18701  009420  5163               	movf	SendRF@size& (0+255),w,b
 18702  009422  0100               	movlb	0	; () banked
 18703  009424  5D67               	subwf	SendRF@i& (0+255),w,b
 18704  009426  A0D8               	btfss	status,0,c
 18705  009428  D7D9               	goto	l10778
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;RF.c: 107: }
 18709                           ;RF.c: 108: RFsendCode[i] = 99;
 18710                           
 18711                           ; BSR set to: 0
 18712  00942A  0100               	movlb	0	; () banked
 18713  00942C  5167               	movf	SendRF@i& (0+255),w,b
 18714  00942E  0D01               	mullw	1
 18715  009430  0E8A               	movlw	low _RFsendCode
 18716  009432  24F3               	addwf	prodl,w,c
 18717  009434  6ED9               	movwf	fsr2l,c
 18718  009436  0E02               	movlw	high _RFsendCode
 18719  009438  20F4               	addwfc	prodh,w,c
 18720  00943A  6EDA               	movwf	fsr2h,c
 18721  00943C  0E63               	movlw	99
 18722  00943E  6EDF               	movwf	indf2,c
 18723                           
 18724                           ; BSR set to: 0
 18725                           ;RF.c: 110: (TMR2 = 0);
 18726  009440  0E00               	movlw	0
 18727  009442  6ECC               	movwf	4044,c	;volatile
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;RF.c: 111: if(Config == 1)
 18731  009444  0100               	movlb	0	; () banked
 18732  009446  0562               	decf	SendRF@Config& (0+255),w,b
 18733  009448  A4D8               	btfss	status,2,c
 18734  00944A  D002               	goto	l10792
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;RF.c: 112: {
 18738                           ;RF.c: 113: (PR2 = 250);
 18739  00944C  0EFA               	movlw	250
 18740  00944E  D001               	goto	L10
 18741  009450                     l10792:
 18742                           
 18743                           ; BSR set to: 0
 18744                           ;RF.c: 115: else
 18745                           ;RF.c: 116: {
 18746                           ;RF.c: 117: (PR2 = 149);
 18747  009450  0E95               	movlw	149
 18748  009452                     L10:
 18749  009452  6ECB               	movwf	4043,c	;volatile
 18750  009454  D000               	goto	l10794
 18751  009456                     l10794:
 18752                           
 18753                           ; BSR set to: 0
 18754                           ;RF.c: 118: }
 18755                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 18756  009456  84CA               	bsf	4042,2,c	;volatile
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;RF.c: 120: return 1;
 18760                           ;	Return value of _SendRF is never used
 18761  009458  0012               	return	
 18762                           
 18763                           ; BSR set to: 0
 18764                           
 18765                           ; BSR set to: 0
 18766                           ;RF.c: 121: }
 18767                           ;RF.c: 122: return 2;
 18768                           ;	Return value of _SendRF is never used
 18769  00945A  0012               	return		;funcret
 18770  00945C                     __end_of_SendRF:
 18771                           	opt stack 0
 18772                           tblptru	equ	0xFF8
 18773                           tblptrh	equ	0xFF7
 18774                           tblptrl	equ	0xFF6
 18775                           tablat	equ	0xFF5
 18776                           prodh	equ	0xFF4
 18777                           prodl	equ	0xFF3
 18778                           intcon	equ	0xFF2
 18779                           indf0	equ	0xFEF
 18780                           postinc0	equ	0xFEE
 18781                           plusw0	equ	0xFEB
 18782                           fsr0h	equ	0xFEA
 18783                           fsr0l	equ	0xFE9
 18784                           wreg	equ	0xFE8
 18785                           indf1	equ	0xFE7
 18786                           postdec1	equ	0xFE5
 18787                           fsr1h	equ	0xFE2
 18788                           fsr1l	equ	0xFE1
 18789                           indf2	equ	0xFDF
 18790                           postinc2	equ	0xFDE
 18791                           plusw2	equ	0xFDB
 18792                           fsr2h	equ	0xFDA
 18793                           fsr2l	equ	0xFD9
 18794                           status	equ	0xFD8
 18795                           
 18796 ;; *************** function _LEDTimerON *****************
 18797 ;; Defined at:
 18798 ;;		line 149 in file "Timer.c"
 18799 ;; Parameters:    Size  Location     Type
 18800 ;;		None
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;		None
 18803 ;; Return value:  Size  Location     Type
 18804 ;;		None               void
 18805 ;; Registers used:
 18806 ;;		wreg, status,2, cstack
 18807 ;; Tracked objects:
 18808 ;;		On entry : 0/0
 18809 ;;		On exit  : 0/0
 18810 ;;		Unchanged: 0/0
 18811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18816 ;;Total ram usage:        0 bytes
 18817 ;; Hardware stack levels used:    1
 18818 ;; Hardware stack levels required when called:    6
 18819 ;; This function calls:
 18820 ;;		_ResetTimer1
 18821 ;; This function is called by:
 18822 ;;		_main
 18823 ;;		_UseIRCode
 18824 ;;		_WaitForIRsignal
 18825 ;;		_SendRF_wait
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829                           	psect	text16
 18830  00AE0C                     __ptext16:
 18831                           	opt stack 0
 18832  00AE0C                     _LEDTimerON:
 18833                           	opt stack 21
 18834                           
 18835                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;incstack = 0
 18839  00AE0C  90CD               	bcf	4045,0,c	;volatile
 18840                           
 18841                           ;Timer.c: 152: ResetTimer1();
 18842  00AE0E  EC71  F057         	call	_ResetTimer1	;wreg free
 18843                           
 18844                           ;Timer.c: 153: Timer1_Postscaler = 0;
 18845  00AE12  0E00               	movlw	0
 18846  00AE14  6E49               	movwf	_Timer1_Postscaler,c
 18847                           
 18848                           ;Timer.c: 154: ResetTimer1();
 18849  00AE16  EC71  F057         	call	_ResetTimer1	;wreg free
 18850                           
 18851                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 18852  00AE1A  80CD               	bsf	4045,0,c	;volatile
 18853  00AE1C  0012               	return		;funcret
 18854  00AE1E                     __end_of_LEDTimerON:
 18855                           	opt stack 0
 18856                           tblptru	equ	0xFF8
 18857                           tblptrh	equ	0xFF7
 18858                           tblptrl	equ	0xFF6
 18859                           tablat	equ	0xFF5
 18860                           prodh	equ	0xFF4
 18861                           prodl	equ	0xFF3
 18862                           intcon	equ	0xFF2
 18863                           indf0	equ	0xFEF
 18864                           postinc0	equ	0xFEE
 18865                           plusw0	equ	0xFEB
 18866                           fsr0h	equ	0xFEA
 18867                           fsr0l	equ	0xFE9
 18868                           wreg	equ	0xFE8
 18869                           indf1	equ	0xFE7
 18870                           postdec1	equ	0xFE5
 18871                           fsr1h	equ	0xFE2
 18872                           fsr1l	equ	0xFE1
 18873                           indf2	equ	0xFDF
 18874                           postinc2	equ	0xFDE
 18875                           plusw2	equ	0xFDB
 18876                           fsr2h	equ	0xFDA
 18877                           fsr2l	equ	0xFD9
 18878                           status	equ	0xFD8
 18879                           
 18880 ;; *************** function _ResetTimer1 *****************
 18881 ;; Defined at:
 18882 ;;		line 123 in file "Timer.c"
 18883 ;; Parameters:    Size  Location     Type
 18884 ;;		None
 18885 ;; Auto vars:     Size  Location     Type
 18886 ;;		None
 18887 ;; Return value:  Size  Location     Type
 18888 ;;		None               void
 18889 ;; Registers used:
 18890 ;;		wreg, status,2
 18891 ;; Tracked objects:
 18892 ;;		On entry : 0/0
 18893 ;;		On exit  : 0/0
 18894 ;;		Unchanged: 0/0
 18895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18900 ;;Total ram usage:        0 bytes
 18901 ;; Hardware stack levels used:    1
 18902 ;; Hardware stack levels required when called:    5
 18903 ;; This function calls:
 18904 ;;		Nothing
 18905 ;; This function is called by:
 18906 ;;		_LEDTimerON
 18907 ;; This function uses a non-reentrant model
 18908 ;;
 18909                           
 18910                           	psect	text17
 18911  00AEE2                     __ptext17:
 18912                           	opt stack 0
 18913  00AEE2                     _ResetTimer1:
 18914                           	opt stack 21
 18915                           
 18916                           ;Timer.c: 129: TMR1H = 0;
 18917                           
 18918                           ;incstack = 0
 18919  00AEE2  0E00               	movlw	0
 18920  00AEE4  6ECF               	movwf	4047,c	;volatile
 18921                           
 18922                           ;Timer.c: 130: TMR1L = 2;
 18923  00AEE6  0E02               	movlw	2
 18924  00AEE8  6ECE               	movwf	4046,c	;volatile
 18925  00AEEA  0012               	return		;funcret
 18926  00AEEC                     __end_of_ResetTimer1:
 18927                           	opt stack 0
 18928                           tblptru	equ	0xFF8
 18929                           tblptrh	equ	0xFF7
 18930                           tblptrl	equ	0xFF6
 18931                           tablat	equ	0xFF5
 18932                           prodh	equ	0xFF4
 18933                           prodl	equ	0xFF3
 18934                           intcon	equ	0xFF2
 18935                           indf0	equ	0xFEF
 18936                           postinc0	equ	0xFEE
 18937                           plusw0	equ	0xFEB
 18938                           fsr0h	equ	0xFEA
 18939                           fsr0l	equ	0xFE9
 18940                           wreg	equ	0xFE8
 18941                           indf1	equ	0xFE7
 18942                           postdec1	equ	0xFE5
 18943                           fsr1h	equ	0xFE2
 18944                           fsr1l	equ	0xFE1
 18945                           indf2	equ	0xFDF
 18946                           postinc2	equ	0xFDE
 18947                           plusw2	equ	0xFDB
 18948                           fsr2h	equ	0xFDA
 18949                           fsr2l	equ	0xFD9
 18950                           status	equ	0xFD8
 18951                           
 18952 ;; *************** function _SendNEC_wait *****************
 18953 ;; Defined at:
 18954 ;;		line 418 in file "IR.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;  code            4   21[BANK0 ] unsigned long 
 18957 ;;  RepeatAmount    1   25[BANK0 ] unsigned char 
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;  toggle          1   26[BANK0 ] unsigned char 
 18960 ;; Return value:  Size  Location     Type
 18961 ;;		None               void
 18962 ;; Registers used:
 18963 ;;		wreg, status,2, status,0, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18969 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18972 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18973 ;;Total ram usage:        6 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:    7
 18976 ;; This function calls:
 18977 ;;		_CheckReceivingIR
 18978 ;;		_ReadIRpin
 18979 ;;		_SendNEC_bytes
 18980 ;;		_delayUS
 18981 ;; This function is called by:
 18982 ;;		_UseBluetooth
 18983 ;; This function uses a non-reentrant model
 18984 ;;
 18985                           
 18986                           	psect	text18
 18987  009F82                     __ptext18:
 18988                           	opt stack 0
 18989  009F82                     _SendNEC_wait:
 18990                           	opt stack 22
 18991                           
 18992                           ;IR.c: 420: unsigned char toggle = 0;
 18993                           
 18994                           ;incstack = 0
 18995  009F82  0E00               	movlw	0
 18996  009F84  0100               	movlb	0	; () banked
 18997  009F86  6F7A               	movwf	SendNEC_wait@toggle& (0+255),b
 18998                           
 18999                           ; BSR set to: 0
 19000                           
 19001                           ;IR.c: 421: while(CheckReceivingIR());
 19002  009F88  D000               	goto	l12416
 19003  009F8A                     l12416:
 19004  009F8A  EC0F  F057         	call	_CheckReceivingIR	;wreg free
 19005  009F8E  0900               	iorlw	0
 19006  009F90  A4D8               	btfss	status,2,c
 19007  009F92  D7FB               	goto	l12416
 19008                           
 19009                           ;IR.c: 423: (IOCBbits.IOCB4 = 0);
 19010  009F94  987D               	bcf	3965,4,c	;volatile
 19011                           
 19012                           ;IR.c: 424: INTCONbits.RBIE = 0;
 19013  009F96  96F2               	bcf	intcon,3,c	;volatile
 19014                           
 19015                           ;IR.c: 425: INTCONbits.PEIE = 0;
 19016  009F98  9CF2               	bcf	intcon,6,c	;volatile
 19017                           
 19018                           ;IR.c: 427: SendNEC_bytes(code, RepeatAmount);
 19019  009F9A  C075  F070         	movff	SendNEC_wait@code,SendNEC_bytes@code
 19020  009F9E  C076  F071         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 19021  009FA2  C077  F072         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 19022  009FA6  C078  F073         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 19023  009FAA  C079  F074         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 19024  009FAE  ECF1  F050         	call	_SendNEC_bytes	;wreg free
 19025                           
 19026                           ;IR.c: 428: while(!Sent)
 19027  009FB2  D01C               	goto	l12438
 19028  009FB4                     l12420:
 19029                           
 19030                           ;IR.c: 429: {
 19031                           ;IR.c: 430: if(IRmod)
 19032  009FB4  0100               	movlb	0	; () banked
 19033  009FB6  51FB               	movf	_IRmod& (0+255),w,b	;volatile
 19034  009FB8  B4D8               	btfsc	status,2,c
 19035  009FBA  D013               	goto	l12434
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;IR.c: 431: {
 19039                           ;IR.c: 433: if(toggle < 9)
 19040  009FBC  0E09               	movlw	9
 19041  009FBE  0100               	movlb	0	; () banked
 19042  009FC0  617A               	cpfslt	SendNEC_wait@toggle& (0+255),b
 19043  009FC2  D002               	goto	l12426
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;IR.c: 434: {
 19047                           ;IR.c: 435: (LATC |= 0x08);
 19048  009FC4  868B               	bsf	3979,3,c	;volatile
 19049                           
 19050                           ;IR.c: 436: }
 19051  009FC6  D00A               	goto	l12432
 19052  009FC8                     l12426:
 19053                           
 19054                           ; BSR set to: 0
 19055                           ;IR.c: 437: else if(toggle < 17)
 19056  009FC8  0E11               	movlw	17
 19057  009FCA  0100               	movlb	0	; () banked
 19058  009FCC  617A               	cpfslt	SendNEC_wait@toggle& (0+255),b
 19059  009FCE  D002               	goto	l12430
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;IR.c: 438: {
 19063                           ;IR.c: 439: (LATC &= ~0x08);
 19064  009FD0  968B               	bcf	3979,3,c	;volatile
 19065                           
 19066                           ;IR.c: 440: }
 19067  009FD2  D004               	goto	l12432
 19068  009FD4                     l12430:
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;IR.c: 441: else
 19072                           ;IR.c: 442: {
 19073                           ;IR.c: 443: toggle = 0;
 19074  009FD4  0E00               	movlw	0
 19075  009FD6  0100               	movlb	0	; () banked
 19076  009FD8  6F7A               	movwf	SendNEC_wait@toggle& (0+255),b
 19077                           
 19078                           ; BSR set to: 0
 19079  009FDA  D000               	goto	l12432
 19080  009FDC                     l12432:
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;IR.c: 444: }
 19084                           ;IR.c: 445: toggle++;
 19085  009FDC  0100               	movlb	0	; () banked
 19086  009FDE  2B7A               	incf	SendNEC_wait@toggle& (0+255),f,b
 19087                           
 19088                           ;IR.c: 446: }
 19089  009FE0  D005               	goto	l12438
 19090  009FE2                     l12434:
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;IR.c: 447: else
 19094                           ;IR.c: 448: {
 19095                           ;IR.c: 449: (LATC &= ~0x08);
 19096  009FE2  968B               	bcf	3979,3,c	;volatile
 19097                           
 19098                           ; BSR set to: 0
 19099                           ;IR.c: 450: toggle = 0;
 19100  009FE4  0E00               	movlw	0
 19101  009FE6  0100               	movlb	0	; () banked
 19102  009FE8  6F7A               	movwf	SendNEC_wait@toggle& (0+255),b
 19103                           
 19104                           ; BSR set to: 0
 19105  009FEA  D000               	goto	l12438
 19106  009FEC                     l12438:
 19107  009FEC  0100               	movlb	0	; () banked
 19108  009FEE  51FF               	movf	_Sent& (0+255),w,b	;volatile
 19109  009FF0  B4D8               	btfsc	status,2,c
 19110  009FF2  D7E0               	goto	l12420
 19111                           
 19112                           ; BSR set to: 0
 19113                           ;IR.c: 451: }
 19114                           ;IR.c: 452: }
 19115                           ;IR.c: 454: if(IRbitPosition)
 19116                           
 19117                           ; BSR set to: 0
 19118  009FF4  504C               	movf	_IRbitPosition,w,c	;volatile
 19119  009FF6  A4D8               	btfss	status,2,c
 19120                           
 19121                           ; BSR set to: 0
 19122                           ;IR.c: 455: {
 19123                           ;IR.c: 457: __nop();
 19124  009FF8  F000               	nop	
 19125                           
 19126                           ;IR.c: 458: }
 19127                           ;IR.c: 460: INTCONbits.PEIE = 1;
 19128  009FFA  8CF2               	bsf	intcon,6,c	;volatile
 19129                           
 19130                           ;IR.c: 461: delayUS(8000);
 19131  009FFC  0E40               	movlw	64
 19132  009FFE  0100               	movlb	0	; () banked
 19133  00A000  6F60               	movwf	delayUS@US& (0+255),b
 19134  00A002  0E1F               	movlw	31
 19135  00A004  6F61               	movwf	(delayUS@US+1)& (0+255),b
 19136  00A006  0E00               	movlw	0
 19137  00A008  6F62               	movwf	(delayUS@US+2)& (0+255),b
 19138  00A00A  0E00               	movlw	0
 19139  00A00C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 19140  00A00E  EC96  F053         	call	_delayUS	;wreg free
 19141                           
 19142                           ;IR.c: 462: IRpinOLD = ReadIRpin();
 19143  00A012  EC4E  F057         	call	_ReadIRpin	;wreg free
 19144  00A016  6E40               	movwf	_IRpinOLD,c
 19145                           
 19146                           ;IR.c: 463: INTCONbits.RBIF = 0;
 19147  00A018  90F2               	bcf	intcon,0,c	;volatile
 19148                           
 19149                           ;IR.c: 464: (IOCBbits.IOCB4 = 1);
 19150  00A01A  887D               	bsf	3965,4,c	;volatile
 19151                           
 19152                           ;IR.c: 465: INTCONbits.RBIE = 1;
 19153  00A01C  86F2               	bsf	intcon,3,c	;volatile
 19154  00A01E  0012               	return		;funcret
 19155  00A020                     __end_of_SendNEC_wait:
 19156                           	opt stack 0
 19157                           tblptru	equ	0xFF8
 19158                           tblptrh	equ	0xFF7
 19159                           tblptrl	equ	0xFF6
 19160                           tablat	equ	0xFF5
 19161                           prodh	equ	0xFF4
 19162                           prodl	equ	0xFF3
 19163                           intcon	equ	0xFF2
 19164                           indf0	equ	0xFEF
 19165                           postinc0	equ	0xFEE
 19166                           plusw0	equ	0xFEB
 19167                           fsr0h	equ	0xFEA
 19168                           fsr0l	equ	0xFE9
 19169                           wreg	equ	0xFE8
 19170                           indf1	equ	0xFE7
 19171                           postdec1	equ	0xFE5
 19172                           fsr1h	equ	0xFE2
 19173                           fsr1l	equ	0xFE1
 19174                           indf2	equ	0xFDF
 19175                           postinc2	equ	0xFDE
 19176                           plusw2	equ	0xFDB
 19177                           fsr2h	equ	0xFDA
 19178                           fsr2l	equ	0xFD9
 19179                           status	equ	0xFD8
 19180                           
 19181 ;; *************** function _SendNEC_bytes *****************
 19182 ;; Defined at:
 19183 ;;		line 355 in file "IR.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;  code            4   16[BANK0 ] unsigned long 
 19186 ;;  RepeatAmount    1   20[BANK0 ] unsigned char 
 19187 ;; Auto vars:     Size  Location     Type
 19188 ;;		None
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      unsigned char 
 19191 ;; Registers used:
 19192 ;;		wreg, status,2, status,0, cstack
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19198 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19201 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19202 ;;Total ram usage:        5 bytes
 19203 ;; Hardware stack levels used:    1
 19204 ;; Hardware stack levels required when called:    6
 19205 ;; This function calls:
 19206 ;;		_Reverse_4Byte
 19207 ;; This function is called by:
 19208 ;;		_SendNEC_wait
 19209 ;; This function uses a non-reentrant model
 19210 ;;
 19211                           
 19212                           	psect	text19
 19213  00A1E2                     __ptext19:
 19214                           	opt stack 0
 19215  00A1E2                     _SendNEC_bytes:
 19216                           	opt stack 22
 19217                           
 19218                           ;IR.c: 384: if(Sent)
 19219                           
 19220                           ;incstack = 0
 19221  00A1E2  0100               	movlb	0	; () banked
 19222  00A1E4  51FF               	movf	_Sent& (0+255),w,b	;volatile
 19223  00A1E6  B4D8               	btfsc	status,2,c
 19224  00A1E8  0012               	return	
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;IR.c: 385: {
 19228                           ;IR.c: 387: if(!code)
 19229  00A1EA  0100               	movlb	0	; () banked
 19230  00A1EC  5170               	movf	SendNEC_bytes@code& (0+255),w,b
 19231  00A1EE  0100               	movlb	0	; () banked
 19232  00A1F0  1171               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 19233  00A1F2  0100               	movlb	0	; () banked
 19234  00A1F4  1172               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 19235  00A1F6  0100               	movlb	0	; () banked
 19236  00A1F8  1173               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 19237  00A1FA  B4D8               	btfsc	status,2,c
 19238  00A1FC  0012               	return	
 19239  00A1FE  D001               	goto	l11064
 19240                           
 19241                           ; BSR set to: 0
 19242                           ;IR.c: 388: {
 19243                           ;IR.c: 389: return 0;
 19244                           ;	Return value of _SendNEC_bytes is never used
 19245  00A200  0012               	return	
 19246  00A202                     l11064:
 19247                           
 19248                           ; BSR set to: 0
 19249                           ;IR.c: 390: }
 19250                           ;IR.c: 391: RF_IR = 66;
 19251  00A202  0E42               	movlw	66
 19252  00A204  6E4E               	movwf	_RF_IR,c
 19253                           
 19254                           ;IR.c: 392: Sent = 0;
 19255  00A206  0E00               	movlw	0
 19256  00A208  0100               	movlb	0	; () banked
 19257  00A20A  6FFF               	movwf	_Sent& (0+255),b	;volatile
 19258                           
 19259                           ;IR.c: 393: IRsendFlag = 1;
 19260  00A20C  0E01               	movlw	1
 19261  00A20E  0100               	movlb	0	; () banked
 19262  00A210  6FFC               	movwf	_IRsendFlag& (0+255),b
 19263                           
 19264                           ;IR.c: 394: IRcodeBit = 0;
 19265  00A212  0E00               	movlw	0
 19266  00A214  0100               	movlb	0	; () banked
 19267  00A216  6FFA               	movwf	_IRcodeBit& (0+255),b
 19268                           
 19269                           ;IR.c: 395: IRcodePlace = 7;
 19270  00A218  0E07               	movlw	7
 19271  00A21A  6E4D               	movwf	_IRcodePlace,c
 19272                           
 19273                           ; BSR set to: 0
 19274                           ;IR.c: 396: IRsendCode = Reverse_4Byte(code);
 19275  00A21C  C070  F060         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 19276  00A220  C071  F061         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 19277  00A224  C072  F062         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 19278  00A228  C073  F063         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 19279  00A22C  ECDF  F01D         	call	_Reverse_4Byte	;wreg free
 19280  00A230  C060  F03A         	movff	?_Reverse_4Byte,_IRsendCode
 19281  00A234  C061  F03B         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 19282  00A238  C062  F03C         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 19283  00A23C  C063  F03D         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 19284                           
 19285                           ;IR.c: 397: if(RepeatAmount)
 19286  00A240  0100               	movlb	0	; () banked
 19287  00A242  5174               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 19288  00A244  0100               	movlb	0	; () banked
 19289  00A246  B4D8               	btfsc	status,2,c
 19290  00A248  D003               	goto	l11072
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;IR.c: 398: {
 19294                           ;IR.c: 399: IRrepeatflag = 1;
 19295  00A24A  0E01               	movlw	1
 19296  00A24C  6E43               	movwf	_IRrepeatflag,c
 19297  00A24E  D000               	goto	l11072
 19298  00A250                     l11072:
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;IR.c: 400: }
 19302                           ;IR.c: 401: IRrepeatAmount = RepeatAmount;
 19303  00A250  C074  F042         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 19304                           
 19305                           ;IR.c: 402: (TMR2 = 0);
 19306  00A254  0E00               	movlw	0
 19307  00A256  6ECC               	movwf	4044,c	;volatile
 19308                           
 19309                           ;IR.c: 403: (PR2 = 150);
 19310  00A258  0E96               	movlw	150
 19311  00A25A  6ECB               	movwf	4043,c	;volatile
 19312                           
 19313                           ;IR.c: 404: RF_IR_Postscaler = 4;
 19314  00A25C  0E04               	movlw	4
 19315  00A25E  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 19316                           
 19317                           ;IR.c: 405: (IRmod = 1);
 19318  00A260  0E01               	movlw	1
 19319  00A262  0100               	movlb	0	; () banked
 19320  00A264  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 19321                           
 19322                           ; BSR set to: 0
 19323                           ;IR.c: 406: (T2CONbits.TMR2ON = 1);
 19324  00A266  84CA               	bsf	4042,2,c	;volatile
 19325                           
 19326                           ; BSR set to: 0
 19327                           ;IR.c: 407: return 1;
 19328                           ;	Return value of _SendNEC_bytes is never used
 19329  00A268  0012               	return	
 19330                           
 19331                           ; BSR set to: 0
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;IR.c: 408: }
 19335                           ;IR.c: 409: return 2;
 19336                           ;	Return value of _SendNEC_bytes is never used
 19337  00A26A  0012               	return		;funcret
 19338  00A26C                     __end_of_SendNEC_bytes:
 19339                           	opt stack 0
 19340                           tblptru	equ	0xFF8
 19341                           tblptrh	equ	0xFF7
 19342                           tblptrl	equ	0xFF6
 19343                           tablat	equ	0xFF5
 19344                           prodh	equ	0xFF4
 19345                           prodl	equ	0xFF3
 19346                           intcon	equ	0xFF2
 19347                           indf0	equ	0xFEF
 19348                           postinc0	equ	0xFEE
 19349                           plusw0	equ	0xFEB
 19350                           fsr0h	equ	0xFEA
 19351                           fsr0l	equ	0xFE9
 19352                           wreg	equ	0xFE8
 19353                           indf1	equ	0xFE7
 19354                           postdec1	equ	0xFE5
 19355                           fsr1h	equ	0xFE2
 19356                           fsr1l	equ	0xFE1
 19357                           indf2	equ	0xFDF
 19358                           postinc2	equ	0xFDE
 19359                           plusw2	equ	0xFDB
 19360                           fsr2h	equ	0xFDA
 19361                           fsr2l	equ	0xFD9
 19362                           status	equ	0xFD8
 19363                           
 19364 ;; *************** function _Reverse_4Byte *****************
 19365 ;; Defined at:
 19366 ;;		line 486 in file "MISC.c"
 19367 ;; Parameters:    Size  Location     Type
 19368 ;;  This            4    0[BANK0 ] unsigned long 
 19369 ;; Auto vars:     Size  Location     Type
 19370 ;;  temp            4   12[BANK0 ] unsigned long 
 19371 ;; Return value:  Size  Location     Type
 19372 ;;                  4    0[BANK0 ] unsigned long 
 19373 ;; Registers used:
 19374 ;;		wreg, status,2, status,0
 19375 ;; Tracked objects:
 19376 ;;		On entry : 0/0
 19377 ;;		On exit  : 0/0
 19378 ;;		Unchanged: 0/0
 19379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19381 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19382 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19383 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19384 ;;Total ram usage:       16 bytes
 19385 ;; Hardware stack levels used:    1
 19386 ;; Hardware stack levels required when called:    5
 19387 ;; This function calls:
 19388 ;;		Nothing
 19389 ;; This function is called by:
 19390 ;;		_SendNEC_bytes
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           	psect	text20
 19395  003BBE                     __ptext20:
 19396                           	opt stack 0
 19397  003BBE                     _Reverse_4Byte:
 19398                           	opt stack 22
 19399                           
 19400                           ;MISC.c: 488: unsigned long temp=0;
 19401                           
 19402                           ; BSR set to: 0
 19403                           ;incstack = 0
 19404  003BBE  0E00               	movlw	0
 19405  003BC0  0100               	movlb	0	; () banked
 19406  003BC2  6F6C               	movwf	Reverse_4Byte@temp& (0+255),b
 19407  003BC4  0E00               	movlw	0
 19408  003BC6  6F6D               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 19409  003BC8  0E00               	movlw	0
 19410  003BCA  6F6E               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 19411  003BCC  0E00               	movlw	0
 19412  003BCE  6F6F               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;MISC.c: 490: temp += (This & 0x00000001) << 31;
 19416  003BD0  0E01               	movlw	1
 19417  003BD2  0100               	movlb	0	; () banked
 19418  003BD4  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19419  003BD6  0100               	movlb	0	; () banked
 19420  003BD8  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19421  003BDA  0E00               	movlw	0
 19422  003BDC  0100               	movlb	0	; () banked
 19423  003BDE  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19424  003BE0  0100               	movlb	0	; () banked
 19425  003BE2  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19426  003BE4  0E00               	movlw	0
 19427  003BE6  0100               	movlb	0	; () banked
 19428  003BE8  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19429  003BEA  0100               	movlb	0	; () banked
 19430  003BEC  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19431  003BEE  0E00               	movlw	0
 19432  003BF0  0100               	movlb	0	; () banked
 19433  003BF2  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19434  003BF4  0100               	movlb	0	; () banked
 19435  003BF6  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19436  003BF8  0E1F               	movlw	31
 19437  003BFA                     u10935:
 19438  003BFA  90D8               	bcf	status,0,c
 19439  003BFC  0100               	movlb	0	; () banked
 19440  003BFE  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19441  003C00  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19442  003C02  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19443  003C04  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19444  003C06  2EE8               	decfsz	wreg,f,c
 19445  003C08  D7F8               	goto	u10935
 19446  003C0A  0100               	movlb	0	; () banked
 19447  003C0C  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19448  003C0E  0100               	movlb	0	; () banked
 19449  003C10  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19450  003C12  0100               	movlb	0	; () banked
 19451  003C14  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19452  003C16  0100               	movlb	0	; () banked
 19453  003C18  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19454  003C1A  0100               	movlb	0	; () banked
 19455  003C1C  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19456  003C1E  0100               	movlb	0	; () banked
 19457  003C20  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19458  003C22  0100               	movlb	0	; () banked
 19459  003C24  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19460  003C26  0100               	movlb	0	; () banked
 19461  003C28  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;MISC.c: 491: temp += (This & 0x00000002) << 29;
 19465  003C2A  0E02               	movlw	2
 19466  003C2C  0100               	movlb	0	; () banked
 19467  003C2E  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19468  003C30  0100               	movlb	0	; () banked
 19469  003C32  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19470  003C34  0E00               	movlw	0
 19471  003C36  0100               	movlb	0	; () banked
 19472  003C38  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19473  003C3A  0100               	movlb	0	; () banked
 19474  003C3C  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19475  003C3E  0E00               	movlw	0
 19476  003C40  0100               	movlb	0	; () banked
 19477  003C42  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19478  003C44  0100               	movlb	0	; () banked
 19479  003C46  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19480  003C48  0E00               	movlw	0
 19481  003C4A  0100               	movlb	0	; () banked
 19482  003C4C  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19483  003C4E  0100               	movlb	0	; () banked
 19484  003C50  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19485  003C52  0E1D               	movlw	29
 19486  003C54                     u10945:
 19487  003C54  90D8               	bcf	status,0,c
 19488  003C56  0100               	movlb	0	; () banked
 19489  003C58  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19490  003C5A  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19491  003C5C  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19492  003C5E  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19493  003C60  2EE8               	decfsz	wreg,f,c
 19494  003C62  D7F8               	goto	u10945
 19495  003C64  0100               	movlb	0	; () banked
 19496  003C66  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19497  003C68  0100               	movlb	0	; () banked
 19498  003C6A  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19499  003C6C  0100               	movlb	0	; () banked
 19500  003C6E  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19501  003C70  0100               	movlb	0	; () banked
 19502  003C72  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19503  003C74  0100               	movlb	0	; () banked
 19504  003C76  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19505  003C78  0100               	movlb	0	; () banked
 19506  003C7A  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19507  003C7C  0100               	movlb	0	; () banked
 19508  003C7E  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19509  003C80  0100               	movlb	0	; () banked
 19510  003C82  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 0
 19513                           ;MISC.c: 492: temp += (This & 0x00000004) << 27;
 19514  003C84  0E04               	movlw	4
 19515  003C86  0100               	movlb	0	; () banked
 19516  003C88  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19517  003C8A  0100               	movlb	0	; () banked
 19518  003C8C  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19519  003C8E  0E00               	movlw	0
 19520  003C90  0100               	movlb	0	; () banked
 19521  003C92  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19522  003C94  0100               	movlb	0	; () banked
 19523  003C96  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19524  003C98  0E00               	movlw	0
 19525  003C9A  0100               	movlb	0	; () banked
 19526  003C9C  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19527  003C9E  0100               	movlb	0	; () banked
 19528  003CA0  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19529  003CA2  0E00               	movlw	0
 19530  003CA4  0100               	movlb	0	; () banked
 19531  003CA6  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19532  003CA8  0100               	movlb	0	; () banked
 19533  003CAA  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19534  003CAC  0E1B               	movlw	27
 19535  003CAE                     u10955:
 19536  003CAE  90D8               	bcf	status,0,c
 19537  003CB0  0100               	movlb	0	; () banked
 19538  003CB2  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19539  003CB4  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19540  003CB6  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19541  003CB8  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19542  003CBA  2EE8               	decfsz	wreg,f,c
 19543  003CBC  D7F8               	goto	u10955
 19544  003CBE  0100               	movlb	0	; () banked
 19545  003CC0  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19546  003CC2  0100               	movlb	0	; () banked
 19547  003CC4  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19548  003CC6  0100               	movlb	0	; () banked
 19549  003CC8  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19550  003CCA  0100               	movlb	0	; () banked
 19551  003CCC  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19552  003CCE  0100               	movlb	0	; () banked
 19553  003CD0  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19554  003CD2  0100               	movlb	0	; () banked
 19555  003CD4  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19556  003CD6  0100               	movlb	0	; () banked
 19557  003CD8  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19558  003CDA  0100               	movlb	0	; () banked
 19559  003CDC  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19560                           
 19561                           ; BSR set to: 0
 19562                           ;MISC.c: 493: temp += (This & 0x00000008) << 25;
 19563  003CDE  0E08               	movlw	8
 19564  003CE0  0100               	movlb	0	; () banked
 19565  003CE2  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19566  003CE4  0100               	movlb	0	; () banked
 19567  003CE6  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19568  003CE8  0E00               	movlw	0
 19569  003CEA  0100               	movlb	0	; () banked
 19570  003CEC  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19571  003CEE  0100               	movlb	0	; () banked
 19572  003CF0  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19573  003CF2  0E00               	movlw	0
 19574  003CF4  0100               	movlb	0	; () banked
 19575  003CF6  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19576  003CF8  0100               	movlb	0	; () banked
 19577  003CFA  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19578  003CFC  0E00               	movlw	0
 19579  003CFE  0100               	movlb	0	; () banked
 19580  003D00  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19581  003D02  0100               	movlb	0	; () banked
 19582  003D04  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19583  003D06  0E19               	movlw	25
 19584  003D08                     u10965:
 19585  003D08  90D8               	bcf	status,0,c
 19586  003D0A  0100               	movlb	0	; () banked
 19587  003D0C  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19588  003D0E  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19589  003D10  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19590  003D12  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19591  003D14  2EE8               	decfsz	wreg,f,c
 19592  003D16  D7F8               	goto	u10965
 19593  003D18  0100               	movlb	0	; () banked
 19594  003D1A  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19595  003D1C  0100               	movlb	0	; () banked
 19596  003D1E  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19597  003D20  0100               	movlb	0	; () banked
 19598  003D22  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19599  003D24  0100               	movlb	0	; () banked
 19600  003D26  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19601  003D28  0100               	movlb	0	; () banked
 19602  003D2A  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19603  003D2C  0100               	movlb	0	; () banked
 19604  003D2E  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19605  003D30  0100               	movlb	0	; () banked
 19606  003D32  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19607  003D34  0100               	movlb	0	; () banked
 19608  003D36  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;MISC.c: 494: temp += (This & 0x00000010) << 23;
 19612  003D38  0E10               	movlw	16
 19613  003D3A  0100               	movlb	0	; () banked
 19614  003D3C  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19615  003D3E  0100               	movlb	0	; () banked
 19616  003D40  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19617  003D42  0E00               	movlw	0
 19618  003D44  0100               	movlb	0	; () banked
 19619  003D46  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19620  003D48  0100               	movlb	0	; () banked
 19621  003D4A  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19622  003D4C  0E00               	movlw	0
 19623  003D4E  0100               	movlb	0	; () banked
 19624  003D50  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19625  003D52  0100               	movlb	0	; () banked
 19626  003D54  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19627  003D56  0E00               	movlw	0
 19628  003D58  0100               	movlb	0	; () banked
 19629  003D5A  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19630  003D5C  0100               	movlb	0	; () banked
 19631  003D5E  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19632  003D60  0E17               	movlw	23
 19633  003D62                     u10975:
 19634  003D62  90D8               	bcf	status,0,c
 19635  003D64  0100               	movlb	0	; () banked
 19636  003D66  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19637  003D68  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19638  003D6A  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19639  003D6C  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19640  003D6E  2EE8               	decfsz	wreg,f,c
 19641  003D70  D7F8               	goto	u10975
 19642  003D72  0100               	movlb	0	; () banked
 19643  003D74  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19644  003D76  0100               	movlb	0	; () banked
 19645  003D78  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19646  003D7A  0100               	movlb	0	; () banked
 19647  003D7C  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19648  003D7E  0100               	movlb	0	; () banked
 19649  003D80  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19650  003D82  0100               	movlb	0	; () banked
 19651  003D84  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19652  003D86  0100               	movlb	0	; () banked
 19653  003D88  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19654  003D8A  0100               	movlb	0	; () banked
 19655  003D8C  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19656  003D8E  0100               	movlb	0	; () banked
 19657  003D90  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;MISC.c: 495: temp += (This & 0x00000020) << 21;
 19661  003D92  0E20               	movlw	32
 19662  003D94  0100               	movlb	0	; () banked
 19663  003D96  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19664  003D98  0100               	movlb	0	; () banked
 19665  003D9A  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19666  003D9C  0E00               	movlw	0
 19667  003D9E  0100               	movlb	0	; () banked
 19668  003DA0  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19669  003DA2  0100               	movlb	0	; () banked
 19670  003DA4  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19671  003DA6  0E00               	movlw	0
 19672  003DA8  0100               	movlb	0	; () banked
 19673  003DAA  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19674  003DAC  0100               	movlb	0	; () banked
 19675  003DAE  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19676  003DB0  0E00               	movlw	0
 19677  003DB2  0100               	movlb	0	; () banked
 19678  003DB4  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19679  003DB6  0100               	movlb	0	; () banked
 19680  003DB8  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19681  003DBA  0E15               	movlw	21
 19682  003DBC                     u10985:
 19683  003DBC  90D8               	bcf	status,0,c
 19684  003DBE  0100               	movlb	0	; () banked
 19685  003DC0  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19686  003DC2  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19687  003DC4  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19688  003DC6  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19689  003DC8  2EE8               	decfsz	wreg,f,c
 19690  003DCA  D7F8               	goto	u10985
 19691  003DCC  0100               	movlb	0	; () banked
 19692  003DCE  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19693  003DD0  0100               	movlb	0	; () banked
 19694  003DD2  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19695  003DD4  0100               	movlb	0	; () banked
 19696  003DD6  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19697  003DD8  0100               	movlb	0	; () banked
 19698  003DDA  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19699  003DDC  0100               	movlb	0	; () banked
 19700  003DDE  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19701  003DE0  0100               	movlb	0	; () banked
 19702  003DE2  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19703  003DE4  0100               	movlb	0	; () banked
 19704  003DE6  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19705  003DE8  0100               	movlb	0	; () banked
 19706  003DEA  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;MISC.c: 496: temp += (This & 0x00000040) << 19;
 19710  003DEC  0E40               	movlw	64
 19711  003DEE  0100               	movlb	0	; () banked
 19712  003DF0  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19713  003DF2  0100               	movlb	0	; () banked
 19714  003DF4  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19715  003DF6  0E00               	movlw	0
 19716  003DF8  0100               	movlb	0	; () banked
 19717  003DFA  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19718  003DFC  0100               	movlb	0	; () banked
 19719  003DFE  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19720  003E00  0E00               	movlw	0
 19721  003E02  0100               	movlb	0	; () banked
 19722  003E04  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19723  003E06  0100               	movlb	0	; () banked
 19724  003E08  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19725  003E0A  0E00               	movlw	0
 19726  003E0C  0100               	movlb	0	; () banked
 19727  003E0E  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19728  003E10  0100               	movlb	0	; () banked
 19729  003E12  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19730  003E14  0E13               	movlw	19
 19731  003E16                     u10995:
 19732  003E16  90D8               	bcf	status,0,c
 19733  003E18  0100               	movlb	0	; () banked
 19734  003E1A  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19735  003E1C  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19736  003E1E  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19737  003E20  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19738  003E22  2EE8               	decfsz	wreg,f,c
 19739  003E24  D7F8               	goto	u10995
 19740  003E26  0100               	movlb	0	; () banked
 19741  003E28  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19742  003E2A  0100               	movlb	0	; () banked
 19743  003E2C  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19744  003E2E  0100               	movlb	0	; () banked
 19745  003E30  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19746  003E32  0100               	movlb	0	; () banked
 19747  003E34  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19748  003E36  0100               	movlb	0	; () banked
 19749  003E38  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19750  003E3A  0100               	movlb	0	; () banked
 19751  003E3C  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19752  003E3E  0100               	movlb	0	; () banked
 19753  003E40  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19754  003E42  0100               	movlb	0	; () banked
 19755  003E44  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;MISC.c: 497: temp += (This & 0x00000080) << 17;
 19759  003E46  0E80               	movlw	128
 19760  003E48  0100               	movlb	0	; () banked
 19761  003E4A  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19762  003E4C  0100               	movlb	0	; () banked
 19763  003E4E  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19764  003E50  0E00               	movlw	0
 19765  003E52  0100               	movlb	0	; () banked
 19766  003E54  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19767  003E56  0100               	movlb	0	; () banked
 19768  003E58  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19769  003E5A  0E00               	movlw	0
 19770  003E5C  0100               	movlb	0	; () banked
 19771  003E5E  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19772  003E60  0100               	movlb	0	; () banked
 19773  003E62  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19774  003E64  0E00               	movlw	0
 19775  003E66  0100               	movlb	0	; () banked
 19776  003E68  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19777  003E6A  0100               	movlb	0	; () banked
 19778  003E6C  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19779  003E6E  0E11               	movlw	17
 19780  003E70                     u11005:
 19781  003E70  90D8               	bcf	status,0,c
 19782  003E72  0100               	movlb	0	; () banked
 19783  003E74  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19784  003E76  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19785  003E78  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19786  003E7A  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19787  003E7C  2EE8               	decfsz	wreg,f,c
 19788  003E7E  D7F8               	goto	u11005
 19789  003E80  0100               	movlb	0	; () banked
 19790  003E82  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19791  003E84  0100               	movlb	0	; () banked
 19792  003E86  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19793  003E88  0100               	movlb	0	; () banked
 19794  003E8A  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19795  003E8C  0100               	movlb	0	; () banked
 19796  003E8E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19797  003E90  0100               	movlb	0	; () banked
 19798  003E92  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19799  003E94  0100               	movlb	0	; () banked
 19800  003E96  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19801  003E98  0100               	movlb	0	; () banked
 19802  003E9A  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19803  003E9C  0100               	movlb	0	; () banked
 19804  003E9E  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;MISC.c: 498: temp += (This & 0x00000100) << 15;
 19808  003EA0  0E00               	movlw	0
 19809  003EA2  0100               	movlb	0	; () banked
 19810  003EA4  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19811  003EA6  0100               	movlb	0	; () banked
 19812  003EA8  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19813  003EAA  0E01               	movlw	1
 19814  003EAC  0100               	movlb	0	; () banked
 19815  003EAE  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19816  003EB0  0100               	movlb	0	; () banked
 19817  003EB2  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19818  003EB4  0E00               	movlw	0
 19819  003EB6  0100               	movlb	0	; () banked
 19820  003EB8  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19821  003EBA  0100               	movlb	0	; () banked
 19822  003EBC  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19823  003EBE  0E00               	movlw	0
 19824  003EC0  0100               	movlb	0	; () banked
 19825  003EC2  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19826  003EC4  0100               	movlb	0	; () banked
 19827  003EC6  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19828  003EC8  0E0F               	movlw	15
 19829  003ECA                     u11015:
 19830  003ECA  90D8               	bcf	status,0,c
 19831  003ECC  0100               	movlb	0	; () banked
 19832  003ECE  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19833  003ED0  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19834  003ED2  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19835  003ED4  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19836  003ED6  2EE8               	decfsz	wreg,f,c
 19837  003ED8  D7F8               	goto	u11015
 19838  003EDA  0100               	movlb	0	; () banked
 19839  003EDC  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19840  003EDE  0100               	movlb	0	; () banked
 19841  003EE0  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19842  003EE2  0100               	movlb	0	; () banked
 19843  003EE4  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19844  003EE6  0100               	movlb	0	; () banked
 19845  003EE8  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19846  003EEA  0100               	movlb	0	; () banked
 19847  003EEC  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19848  003EEE  0100               	movlb	0	; () banked
 19849  003EF0  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19850  003EF2  0100               	movlb	0	; () banked
 19851  003EF4  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19852  003EF6  0100               	movlb	0	; () banked
 19853  003EF8  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19854                           
 19855                           ; BSR set to: 0
 19856                           ;MISC.c: 499: temp += (This & 0x00000200) << 13;
 19857  003EFA  0E00               	movlw	0
 19858  003EFC  0100               	movlb	0	; () banked
 19859  003EFE  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19860  003F00  0100               	movlb	0	; () banked
 19861  003F02  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19862  003F04  0E02               	movlw	2
 19863  003F06  0100               	movlb	0	; () banked
 19864  003F08  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19865  003F0A  0100               	movlb	0	; () banked
 19866  003F0C  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19867  003F0E  0E00               	movlw	0
 19868  003F10  0100               	movlb	0	; () banked
 19869  003F12  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19870  003F14  0100               	movlb	0	; () banked
 19871  003F16  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19872  003F18  0E00               	movlw	0
 19873  003F1A  0100               	movlb	0	; () banked
 19874  003F1C  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19875  003F1E  0100               	movlb	0	; () banked
 19876  003F20  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19877  003F22  0E0D               	movlw	13
 19878  003F24                     u11025:
 19879  003F24  90D8               	bcf	status,0,c
 19880  003F26  0100               	movlb	0	; () banked
 19881  003F28  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19882  003F2A  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19883  003F2C  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19884  003F2E  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19885  003F30  2EE8               	decfsz	wreg,f,c
 19886  003F32  D7F8               	goto	u11025
 19887  003F34  0100               	movlb	0	; () banked
 19888  003F36  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19889  003F38  0100               	movlb	0	; () banked
 19890  003F3A  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19891  003F3C  0100               	movlb	0	; () banked
 19892  003F3E  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19893  003F40  0100               	movlb	0	; () banked
 19894  003F42  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19895  003F44  0100               	movlb	0	; () banked
 19896  003F46  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19897  003F48  0100               	movlb	0	; () banked
 19898  003F4A  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19899  003F4C  0100               	movlb	0	; () banked
 19900  003F4E  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19901  003F50  0100               	movlb	0	; () banked
 19902  003F52  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;MISC.c: 500: temp += (This & 0x00000400) << 11;
 19906  003F54  0E00               	movlw	0
 19907  003F56  0100               	movlb	0	; () banked
 19908  003F58  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19909  003F5A  0100               	movlb	0	; () banked
 19910  003F5C  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19911  003F5E  0E04               	movlw	4
 19912  003F60  0100               	movlb	0	; () banked
 19913  003F62  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19914  003F64  0100               	movlb	0	; () banked
 19915  003F66  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19916  003F68  0E00               	movlw	0
 19917  003F6A  0100               	movlb	0	; () banked
 19918  003F6C  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19919  003F6E  0100               	movlb	0	; () banked
 19920  003F70  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19921  003F72  0E00               	movlw	0
 19922  003F74  0100               	movlb	0	; () banked
 19923  003F76  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19924  003F78  0100               	movlb	0	; () banked
 19925  003F7A  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19926  003F7C  0E0B               	movlw	11
 19927  003F7E                     u11035:
 19928  003F7E  90D8               	bcf	status,0,c
 19929  003F80  0100               	movlb	0	; () banked
 19930  003F82  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19931  003F84  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19932  003F86  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19933  003F88  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19934  003F8A  2EE8               	decfsz	wreg,f,c
 19935  003F8C  D7F8               	goto	u11035
 19936  003F8E  0100               	movlb	0	; () banked
 19937  003F90  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19938  003F92  0100               	movlb	0	; () banked
 19939  003F94  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19940  003F96  0100               	movlb	0	; () banked
 19941  003F98  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19942  003F9A  0100               	movlb	0	; () banked
 19943  003F9C  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19944  003F9E  0100               	movlb	0	; () banked
 19945  003FA0  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19946  003FA2  0100               	movlb	0	; () banked
 19947  003FA4  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19948  003FA6  0100               	movlb	0	; () banked
 19949  003FA8  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19950  003FAA  0100               	movlb	0	; () banked
 19951  003FAC  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;MISC.c: 501: temp += (This & 0x00000800) << 9;
 19955  003FAE  0E00               	movlw	0
 19956  003FB0  0100               	movlb	0	; () banked
 19957  003FB2  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 19958  003FB4  0100               	movlb	0	; () banked
 19959  003FB6  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 19960  003FB8  0E08               	movlw	8
 19961  003FBA  0100               	movlb	0	; () banked
 19962  003FBC  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 19963  003FBE  0100               	movlb	0	; () banked
 19964  003FC0  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 19965  003FC2  0E00               	movlw	0
 19966  003FC4  0100               	movlb	0	; () banked
 19967  003FC6  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 19968  003FC8  0100               	movlb	0	; () banked
 19969  003FCA  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 19970  003FCC  0E00               	movlw	0
 19971  003FCE  0100               	movlb	0	; () banked
 19972  003FD0  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 19973  003FD2  0100               	movlb	0	; () banked
 19974  003FD4  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 19975  003FD6  0E09               	movlw	9
 19976  003FD8                     u11045:
 19977  003FD8  90D8               	bcf	status,0,c
 19978  003FDA  0100               	movlb	0	; () banked
 19979  003FDC  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 19980  003FDE  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 19981  003FE0  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 19982  003FE2  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 19983  003FE4  2EE8               	decfsz	wreg,f,c
 19984  003FE6  D7F8               	goto	u11045
 19985  003FE8  0100               	movlb	0	; () banked
 19986  003FEA  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 19987  003FEC  0100               	movlb	0	; () banked
 19988  003FEE  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 19989  003FF0  0100               	movlb	0	; () banked
 19990  003FF2  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 19991  003FF4  0100               	movlb	0	; () banked
 19992  003FF6  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 19993  003FF8  0100               	movlb	0	; () banked
 19994  003FFA  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 19995  003FFC  0100               	movlb	0	; () banked
 19996  003FFE  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 19997  004000  0100               	movlb	0	; () banked
 19998  004002  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 19999  004004  0100               	movlb	0	; () banked
 20000  004006  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;MISC.c: 502: temp += (This & 0x00001000) << 7;
 20004  004008  0E00               	movlw	0
 20005  00400A  0100               	movlb	0	; () banked
 20006  00400C  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 20007  00400E  0100               	movlb	0	; () banked
 20008  004010  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 20009  004012  0E10               	movlw	16
 20010  004014  0100               	movlb	0	; () banked
 20011  004016  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 20012  004018  0100               	movlb	0	; () banked
 20013  00401A  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 20014  00401C  0E00               	movlw	0
 20015  00401E  0100               	movlb	0	; () banked
 20016  004020  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 20017  004022  0100               	movlb	0	; () banked
 20018  004024  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 20019  004026  0E00               	movlw	0
 20020  004028  0100               	movlb	0	; () banked
 20021  00402A  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 20022  00402C  0100               	movlb	0	; () banked
 20023  00402E  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 20024  004030  0E07               	movlw	7
 20025  004032                     u11055:
 20026  004032  90D8               	bcf	status,0,c
 20027  004034  0100               	movlb	0	; () banked
 20028  004036  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 20029  004038  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20030  00403A  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20031  00403C  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20032  00403E  2EE8               	decfsz	wreg,f,c
 20033  004040  D7F8               	goto	u11055
 20034  004042  0100               	movlb	0	; () banked
 20035  004044  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 20036  004046  0100               	movlb	0	; () banked
 20037  004048  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20038  00404A  0100               	movlb	0	; () banked
 20039  00404C  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 20040  00404E  0100               	movlb	0	; () banked
 20041  004050  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20042  004052  0100               	movlb	0	; () banked
 20043  004054  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 20044  004056  0100               	movlb	0	; () banked
 20045  004058  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20046  00405A  0100               	movlb	0	; () banked
 20047  00405C  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 20048  00405E  0100               	movlb	0	; () banked
 20049  004060  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20050                           
 20051                           ; BSR set to: 0
 20052                           ;MISC.c: 503: temp += (This & 0x00002000) << 5;
 20053  004062  0E00               	movlw	0
 20054  004064  0100               	movlb	0	; () banked
 20055  004066  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 20056  004068  0100               	movlb	0	; () banked
 20057  00406A  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 20058  00406C  0E20               	movlw	32
 20059  00406E  0100               	movlb	0	; () banked
 20060  004070  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 20061  004072  0100               	movlb	0	; () banked
 20062  004074  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 20063  004076  0E00               	movlw	0
 20064  004078  0100               	movlb	0	; () banked
 20065  00407A  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 20066  00407C  0100               	movlb	0	; () banked
 20067  00407E  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 20068  004080  0E00               	movlw	0
 20069  004082  0100               	movlb	0	; () banked
 20070  004084  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 20071  004086  0100               	movlb	0	; () banked
 20072  004088  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 20073  00408A  0E05               	movlw	5
 20074  00408C                     u11065:
 20075  00408C  90D8               	bcf	status,0,c
 20076  00408E  0100               	movlb	0	; () banked
 20077  004090  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 20078  004092  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20079  004094  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20080  004096  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20081  004098  2EE8               	decfsz	wreg,f,c
 20082  00409A  D7F8               	goto	u11065
 20083  00409C  0100               	movlb	0	; () banked
 20084  00409E  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 20085  0040A0  0100               	movlb	0	; () banked
 20086  0040A2  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20087  0040A4  0100               	movlb	0	; () banked
 20088  0040A6  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 20089  0040A8  0100               	movlb	0	; () banked
 20090  0040AA  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20091  0040AC  0100               	movlb	0	; () banked
 20092  0040AE  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 20093  0040B0  0100               	movlb	0	; () banked
 20094  0040B2  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20095  0040B4  0100               	movlb	0	; () banked
 20096  0040B6  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 20097  0040B8  0100               	movlb	0	; () banked
 20098  0040BA  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20099                           
 20100                           ; BSR set to: 0
 20101                           ;MISC.c: 504: temp += (This & 0x00004000) << 3;
 20102  0040BC  0E00               	movlw	0
 20103  0040BE  0100               	movlb	0	; () banked
 20104  0040C0  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 20105  0040C2  0100               	movlb	0	; () banked
 20106  0040C4  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 20107  0040C6  0E40               	movlw	64
 20108  0040C8  0100               	movlb	0	; () banked
 20109  0040CA  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 20110  0040CC  0100               	movlb	0	; () banked
 20111  0040CE  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 20112  0040D0  0E00               	movlw	0
 20113  0040D2  0100               	movlb	0	; () banked
 20114  0040D4  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 20115  0040D6  0100               	movlb	0	; () banked
 20116  0040D8  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 20117  0040DA  0E00               	movlw	0
 20118  0040DC  0100               	movlb	0	; () banked
 20119  0040DE  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 20120  0040E0  0100               	movlb	0	; () banked
 20121  0040E2  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 20122  0040E4  0E03               	movlw	3
 20123  0040E6                     u11075:
 20124  0040E6  90D8               	bcf	status,0,c
 20125  0040E8  0100               	movlb	0	; () banked
 20126  0040EA  3764               	rlcf	??_Reverse_4Byte& (0+255),f,b
 20127  0040EC  3765               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20128  0040EE  3766               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20129  0040F0  3767               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20130  0040F2  2EE8               	decfsz	wreg,f,c
 20131  0040F4  D7F8               	goto	u11075
 20132  0040F6  0100               	movlb	0	; () banked
 20133  0040F8  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 20134  0040FA  0100               	movlb	0	; () banked
 20135  0040FC  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20136  0040FE  0100               	movlb	0	; () banked
 20137  004100  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 20138  004102  0100               	movlb	0	; () banked
 20139  004104  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20140  004106  0100               	movlb	0	; () banked
 20141  004108  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 20142  00410A  0100               	movlb	0	; () banked
 20143  00410C  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20144  00410E  0100               	movlb	0	; () banked
 20145  004110  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 20146  004112  0100               	movlb	0	; () banked
 20147  004114  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;MISC.c: 505: temp += (This & 0x00008000) << 1;
 20151  004116  0E00               	movlw	0
 20152  004118  0100               	movlb	0	; () banked
 20153  00411A  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 20154  00411C  0100               	movlb	0	; () banked
 20155  00411E  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 20156  004120  0E80               	movlw	128
 20157  004122  0100               	movlb	0	; () banked
 20158  004124  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 20159  004126  0100               	movlb	0	; () banked
 20160  004128  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 20161  00412A  0E00               	movlw	0
 20162  00412C  0100               	movlb	0	; () banked
 20163  00412E  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 20164  004130  0100               	movlb	0	; () banked
 20165  004132  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 20166  004134  0E00               	movlw	0
 20167  004136  0100               	movlb	0	; () banked
 20168  004138  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 20169  00413A  0100               	movlb	0	; () banked
 20170  00413C  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 20171  00413E  90D8               	bcf	status,0,c
 20172  004140  0100               	movlb	0	; () banked
 20173  004142  3564               	rlcf	??_Reverse_4Byte& (0+255),w,b
 20174  004144  0100               	movlb	0	; () banked
 20175  004146  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20176  004148  0100               	movlb	0	; () banked
 20177  00414A  3565               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 20178  00414C  0100               	movlb	0	; () banked
 20179  00414E  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20180  004150  0100               	movlb	0	; () banked
 20181  004152  3566               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 20182  004154  0100               	movlb	0	; () banked
 20183  004156  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20184  004158  0100               	movlb	0	; () banked
 20185  00415A  3567               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 20186  00415C  0100               	movlb	0	; () banked
 20187  00415E  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20188  004160  0100               	movlb	0	; () banked
 20189  004162  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20190  004164  0100               	movlb	0	; () banked
 20191  004166  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20192  004168  0100               	movlb	0	; () banked
 20193  00416A  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20194  00416C  0100               	movlb	0	; () banked
 20195  00416E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20196  004170  0100               	movlb	0	; () banked
 20197  004172  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20198  004174  0100               	movlb	0	; () banked
 20199  004176  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20200  004178  0100               	movlb	0	; () banked
 20201  00417A  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20202  00417C  0100               	movlb	0	; () banked
 20203  00417E  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;MISC.c: 506: temp += (This & 0x00010000) >> 1;
 20207  004180  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20208  004184  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20209  004188  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20210  00418C  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20211  004190  0100               	movlb	0	; () banked
 20212  004192  90D8               	bcf	status,0,c
 20213  004194  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20214  004196  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20215  004198  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20216  00419A  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20217  00419C  0E00               	movlw	0
 20218  00419E  0100               	movlb	0	; () banked
 20219  0041A0  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20220  0041A2  0100               	movlb	0	; () banked
 20221  0041A4  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20222  0041A6  0E80               	movlw	128
 20223  0041A8  0100               	movlb	0	; () banked
 20224  0041AA  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20225  0041AC  0100               	movlb	0	; () banked
 20226  0041AE  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20227  0041B0  0E00               	movlw	0
 20228  0041B2  0100               	movlb	0	; () banked
 20229  0041B4  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20230  0041B6  0100               	movlb	0	; () banked
 20231  0041B8  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20232  0041BA  0E00               	movlw	0
 20233  0041BC  0100               	movlb	0	; () banked
 20234  0041BE  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20235  0041C0  0100               	movlb	0	; () banked
 20236  0041C2  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20237  0041C4  0100               	movlb	0	; () banked
 20238  0041C6  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20239  0041C8  0100               	movlb	0	; () banked
 20240  0041CA  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20241  0041CC  0100               	movlb	0	; () banked
 20242  0041CE  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20243  0041D0  0100               	movlb	0	; () banked
 20244  0041D2  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20245  0041D4  0100               	movlb	0	; () banked
 20246  0041D6  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20247  0041D8  0100               	movlb	0	; () banked
 20248  0041DA  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20249  0041DC  0100               	movlb	0	; () banked
 20250  0041DE  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20251  0041E0  0100               	movlb	0	; () banked
 20252  0041E2  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;MISC.c: 507: temp += (This & 0x00020000) >> 3;
 20256  0041E4  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20257  0041E8  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20258  0041EC  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20259  0041F0  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20260  0041F4  0E04               	movlw	4
 20261  0041F6  D006               	goto	u11080
 20262  0041F8                     u11085:
 20263  0041F8  0100               	movlb	0	; () banked
 20264  0041FA  90D8               	bcf	status,0,c
 20265  0041FC  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20266  0041FE  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20267  004200  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20268  004202  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20269  004204                     u11080:
 20270  004204  2EE8               	decfsz	wreg,f,c
 20271  004206  D7F8               	goto	u11085
 20272  004208  0E00               	movlw	0
 20273  00420A  0100               	movlb	0	; () banked
 20274  00420C  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20275  00420E  0100               	movlb	0	; () banked
 20276  004210  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20277  004212  0E40               	movlw	64
 20278  004214  0100               	movlb	0	; () banked
 20279  004216  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20280  004218  0100               	movlb	0	; () banked
 20281  00421A  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20282  00421C  0E00               	movlw	0
 20283  00421E  0100               	movlb	0	; () banked
 20284  004220  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20285  004222  0100               	movlb	0	; () banked
 20286  004224  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20287  004226  0E00               	movlw	0
 20288  004228  0100               	movlb	0	; () banked
 20289  00422A  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20290  00422C  0100               	movlb	0	; () banked
 20291  00422E  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20292  004230  0100               	movlb	0	; () banked
 20293  004232  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20294  004234  0100               	movlb	0	; () banked
 20295  004236  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20296  004238  0100               	movlb	0	; () banked
 20297  00423A  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20298  00423C  0100               	movlb	0	; () banked
 20299  00423E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20300  004240  0100               	movlb	0	; () banked
 20301  004242  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20302  004244  0100               	movlb	0	; () banked
 20303  004246  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20304  004248  0100               	movlb	0	; () banked
 20305  00424A  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20306  00424C  0100               	movlb	0	; () banked
 20307  00424E  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;MISC.c: 508: temp += (This & 0x00040000) >> 5;
 20311  004250  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20312  004254  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20313  004258  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20314  00425C  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20315  004260  0E06               	movlw	6
 20316  004262  D006               	goto	u11090
 20317  004264                     u11095:
 20318  004264  0100               	movlb	0	; () banked
 20319  004266  90D8               	bcf	status,0,c
 20320  004268  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20321  00426A  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20322  00426C  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20323  00426E  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20324  004270                     u11090:
 20325  004270  2EE8               	decfsz	wreg,f,c
 20326  004272  D7F8               	goto	u11095
 20327  004274  0E00               	movlw	0
 20328  004276  0100               	movlb	0	; () banked
 20329  004278  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20330  00427A  0100               	movlb	0	; () banked
 20331  00427C  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20332  00427E  0E20               	movlw	32
 20333  004280  0100               	movlb	0	; () banked
 20334  004282  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20335  004284  0100               	movlb	0	; () banked
 20336  004286  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20337  004288  0E00               	movlw	0
 20338  00428A  0100               	movlb	0	; () banked
 20339  00428C  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20340  00428E  0100               	movlb	0	; () banked
 20341  004290  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20342  004292  0E00               	movlw	0
 20343  004294  0100               	movlb	0	; () banked
 20344  004296  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20345  004298  0100               	movlb	0	; () banked
 20346  00429A  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20347  00429C  0100               	movlb	0	; () banked
 20348  00429E  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20349  0042A0  0100               	movlb	0	; () banked
 20350  0042A2  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20351  0042A4  0100               	movlb	0	; () banked
 20352  0042A6  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20353  0042A8  0100               	movlb	0	; () banked
 20354  0042AA  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20355  0042AC  0100               	movlb	0	; () banked
 20356  0042AE  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20357  0042B0  0100               	movlb	0	; () banked
 20358  0042B2  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20359  0042B4  0100               	movlb	0	; () banked
 20360  0042B6  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20361  0042B8  0100               	movlb	0	; () banked
 20362  0042BA  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20363                           
 20364                           ; BSR set to: 0
 20365                           ;MISC.c: 509: temp += (This & 0x00080000) >> 7;
 20366  0042BC  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20367  0042C0  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20368  0042C4  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20369  0042C8  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20370  0042CC  0E08               	movlw	8
 20371  0042CE  D006               	goto	u11100
 20372  0042D0                     u11105:
 20373  0042D0  0100               	movlb	0	; () banked
 20374  0042D2  90D8               	bcf	status,0,c
 20375  0042D4  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20376  0042D6  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20377  0042D8  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20378  0042DA  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20379  0042DC                     u11100:
 20380  0042DC  2EE8               	decfsz	wreg,f,c
 20381  0042DE  D7F8               	goto	u11105
 20382  0042E0  0E00               	movlw	0
 20383  0042E2  0100               	movlb	0	; () banked
 20384  0042E4  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20385  0042E6  0100               	movlb	0	; () banked
 20386  0042E8  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20387  0042EA  0E10               	movlw	16
 20388  0042EC  0100               	movlb	0	; () banked
 20389  0042EE  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20390  0042F0  0100               	movlb	0	; () banked
 20391  0042F2  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20392  0042F4  0E00               	movlw	0
 20393  0042F6  0100               	movlb	0	; () banked
 20394  0042F8  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20395  0042FA  0100               	movlb	0	; () banked
 20396  0042FC  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20397  0042FE  0E00               	movlw	0
 20398  004300  0100               	movlb	0	; () banked
 20399  004302  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20400  004304  0100               	movlb	0	; () banked
 20401  004306  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20402  004308  0100               	movlb	0	; () banked
 20403  00430A  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20404  00430C  0100               	movlb	0	; () banked
 20405  00430E  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20406  004310  0100               	movlb	0	; () banked
 20407  004312  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20408  004314  0100               	movlb	0	; () banked
 20409  004316  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20410  004318  0100               	movlb	0	; () banked
 20411  00431A  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20412  00431C  0100               	movlb	0	; () banked
 20413  00431E  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20414  004320  0100               	movlb	0	; () banked
 20415  004322  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20416  004324  0100               	movlb	0	; () banked
 20417  004326  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;MISC.c: 510: temp += (This & 0x00100000) >> 9;
 20421  004328  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20422  00432C  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20423  004330  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20424  004334  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20425  004338  0E0A               	movlw	10
 20426  00433A  D006               	goto	u11110
 20427  00433C                     u11115:
 20428  00433C  0100               	movlb	0	; () banked
 20429  00433E  90D8               	bcf	status,0,c
 20430  004340  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20431  004342  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20432  004344  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20433  004346  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20434  004348                     u11110:
 20435  004348  2EE8               	decfsz	wreg,f,c
 20436  00434A  D7F8               	goto	u11115
 20437  00434C  0E00               	movlw	0
 20438  00434E  0100               	movlb	0	; () banked
 20439  004350  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20440  004352  0100               	movlb	0	; () banked
 20441  004354  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20442  004356  0E08               	movlw	8
 20443  004358  0100               	movlb	0	; () banked
 20444  00435A  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20445  00435C  0100               	movlb	0	; () banked
 20446  00435E  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20447  004360  0E00               	movlw	0
 20448  004362  0100               	movlb	0	; () banked
 20449  004364  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20450  004366  0100               	movlb	0	; () banked
 20451  004368  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20452  00436A  0E00               	movlw	0
 20453  00436C  0100               	movlb	0	; () banked
 20454  00436E  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20455  004370  0100               	movlb	0	; () banked
 20456  004372  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20457  004374  0100               	movlb	0	; () banked
 20458  004376  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20459  004378  0100               	movlb	0	; () banked
 20460  00437A  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20461  00437C  0100               	movlb	0	; () banked
 20462  00437E  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20463  004380  0100               	movlb	0	; () banked
 20464  004382  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20465  004384  0100               	movlb	0	; () banked
 20466  004386  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20467  004388  0100               	movlb	0	; () banked
 20468  00438A  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20469  00438C  0100               	movlb	0	; () banked
 20470  00438E  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20471  004390  0100               	movlb	0	; () banked
 20472  004392  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20473                           
 20474                           ; BSR set to: 0
 20475                           ;MISC.c: 511: temp += (This & 0x00200000) >> 11;
 20476  004394  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20477  004398  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20478  00439C  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20479  0043A0  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20480  0043A4  0E0C               	movlw	12
 20481  0043A6  D006               	goto	u11120
 20482  0043A8                     u11125:
 20483  0043A8  0100               	movlb	0	; () banked
 20484  0043AA  90D8               	bcf	status,0,c
 20485  0043AC  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20486  0043AE  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20487  0043B0  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20488  0043B2  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20489  0043B4                     u11120:
 20490  0043B4  2EE8               	decfsz	wreg,f,c
 20491  0043B6  D7F8               	goto	u11125
 20492  0043B8  0E00               	movlw	0
 20493  0043BA  0100               	movlb	0	; () banked
 20494  0043BC  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20495  0043BE  0100               	movlb	0	; () banked
 20496  0043C0  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20497  0043C2  0E04               	movlw	4
 20498  0043C4  0100               	movlb	0	; () banked
 20499  0043C6  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20500  0043C8  0100               	movlb	0	; () banked
 20501  0043CA  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20502  0043CC  0E00               	movlw	0
 20503  0043CE  0100               	movlb	0	; () banked
 20504  0043D0  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20505  0043D2  0100               	movlb	0	; () banked
 20506  0043D4  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20507  0043D6  0E00               	movlw	0
 20508  0043D8  0100               	movlb	0	; () banked
 20509  0043DA  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20510  0043DC  0100               	movlb	0	; () banked
 20511  0043DE  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20512  0043E0  0100               	movlb	0	; () banked
 20513  0043E2  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20514  0043E4  0100               	movlb	0	; () banked
 20515  0043E6  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20516  0043E8  0100               	movlb	0	; () banked
 20517  0043EA  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20518  0043EC  0100               	movlb	0	; () banked
 20519  0043EE  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20520  0043F0  0100               	movlb	0	; () banked
 20521  0043F2  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20522  0043F4  0100               	movlb	0	; () banked
 20523  0043F6  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20524  0043F8  0100               	movlb	0	; () banked
 20525  0043FA  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20526  0043FC  0100               	movlb	0	; () banked
 20527  0043FE  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20528                           
 20529                           ; BSR set to: 0
 20530                           ;MISC.c: 512: temp += (This & 0x00400000) >> 13;
 20531  004400  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20532  004404  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20533  004408  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20534  00440C  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20535  004410  0E0E               	movlw	14
 20536  004412  D006               	goto	u11130
 20537  004414                     u11135:
 20538  004414  0100               	movlb	0	; () banked
 20539  004416  90D8               	bcf	status,0,c
 20540  004418  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20541  00441A  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20542  00441C  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20543  00441E  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20544  004420                     u11130:
 20545  004420  2EE8               	decfsz	wreg,f,c
 20546  004422  D7F8               	goto	u11135
 20547  004424  0E00               	movlw	0
 20548  004426  0100               	movlb	0	; () banked
 20549  004428  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20550  00442A  0100               	movlb	0	; () banked
 20551  00442C  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20552  00442E  0E02               	movlw	2
 20553  004430  0100               	movlb	0	; () banked
 20554  004432  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20555  004434  0100               	movlb	0	; () banked
 20556  004436  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20557  004438  0E00               	movlw	0
 20558  00443A  0100               	movlb	0	; () banked
 20559  00443C  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20560  00443E  0100               	movlb	0	; () banked
 20561  004440  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20562  004442  0E00               	movlw	0
 20563  004444  0100               	movlb	0	; () banked
 20564  004446  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20565  004448  0100               	movlb	0	; () banked
 20566  00444A  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20567  00444C  0100               	movlb	0	; () banked
 20568  00444E  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20569  004450  0100               	movlb	0	; () banked
 20570  004452  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20571  004454  0100               	movlb	0	; () banked
 20572  004456  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20573  004458  0100               	movlb	0	; () banked
 20574  00445A  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20575  00445C  0100               	movlb	0	; () banked
 20576  00445E  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20577  004460  0100               	movlb	0	; () banked
 20578  004462  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20579  004464  0100               	movlb	0	; () banked
 20580  004466  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20581  004468  0100               	movlb	0	; () banked
 20582  00446A  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20583                           
 20584                           ; BSR set to: 0
 20585                           ;MISC.c: 513: temp += (This & 0x00800000) >> 15;
 20586  00446C  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20587  004470  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20588  004474  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20589  004478  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20590  00447C  0E10               	movlw	16
 20591  00447E  D006               	goto	u11140
 20592  004480                     u11145:
 20593  004480  0100               	movlb	0	; () banked
 20594  004482  90D8               	bcf	status,0,c
 20595  004484  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20596  004486  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20597  004488  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20598  00448A  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20599  00448C                     u11140:
 20600  00448C  2EE8               	decfsz	wreg,f,c
 20601  00448E  D7F8               	goto	u11145
 20602  004490  0E00               	movlw	0
 20603  004492  0100               	movlb	0	; () banked
 20604  004494  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20605  004496  0100               	movlb	0	; () banked
 20606  004498  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20607  00449A  0E01               	movlw	1
 20608  00449C  0100               	movlb	0	; () banked
 20609  00449E  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20610  0044A0  0100               	movlb	0	; () banked
 20611  0044A2  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20612  0044A4  0E00               	movlw	0
 20613  0044A6  0100               	movlb	0	; () banked
 20614  0044A8  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20615  0044AA  0100               	movlb	0	; () banked
 20616  0044AC  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20617  0044AE  0E00               	movlw	0
 20618  0044B0  0100               	movlb	0	; () banked
 20619  0044B2  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20620  0044B4  0100               	movlb	0	; () banked
 20621  0044B6  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20622  0044B8  0100               	movlb	0	; () banked
 20623  0044BA  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20624  0044BC  0100               	movlb	0	; () banked
 20625  0044BE  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20626  0044C0  0100               	movlb	0	; () banked
 20627  0044C2  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20628  0044C4  0100               	movlb	0	; () banked
 20629  0044C6  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20630  0044C8  0100               	movlb	0	; () banked
 20631  0044CA  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20632  0044CC  0100               	movlb	0	; () banked
 20633  0044CE  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20634  0044D0  0100               	movlb	0	; () banked
 20635  0044D2  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20636  0044D4  0100               	movlb	0	; () banked
 20637  0044D6  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20638                           
 20639                           ; BSR set to: 0
 20640                           ;MISC.c: 514: temp += (This & 0x01000000) >> 17;
 20641  0044D8  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20642  0044DC  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20643  0044E0  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20644  0044E4  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20645  0044E8  0E12               	movlw	18
 20646  0044EA  D006               	goto	u11150
 20647  0044EC                     u11155:
 20648  0044EC  0100               	movlb	0	; () banked
 20649  0044EE  90D8               	bcf	status,0,c
 20650  0044F0  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20651  0044F2  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20652  0044F4  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20653  0044F6  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20654  0044F8                     u11150:
 20655  0044F8  2EE8               	decfsz	wreg,f,c
 20656  0044FA  D7F8               	goto	u11155
 20657  0044FC  0E80               	movlw	128
 20658  0044FE  0100               	movlb	0	; () banked
 20659  004500  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20660  004502  0100               	movlb	0	; () banked
 20661  004504  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20662  004506  0E00               	movlw	0
 20663  004508  0100               	movlb	0	; () banked
 20664  00450A  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20665  00450C  0100               	movlb	0	; () banked
 20666  00450E  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20667  004510  0E00               	movlw	0
 20668  004512  0100               	movlb	0	; () banked
 20669  004514  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20670  004516  0100               	movlb	0	; () banked
 20671  004518  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20672  00451A  0E00               	movlw	0
 20673  00451C  0100               	movlb	0	; () banked
 20674  00451E  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20675  004520  0100               	movlb	0	; () banked
 20676  004522  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20677  004524  0100               	movlb	0	; () banked
 20678  004526  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20679  004528  0100               	movlb	0	; () banked
 20680  00452A  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20681  00452C  0100               	movlb	0	; () banked
 20682  00452E  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20683  004530  0100               	movlb	0	; () banked
 20684  004532  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20685  004534  0100               	movlb	0	; () banked
 20686  004536  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20687  004538  0100               	movlb	0	; () banked
 20688  00453A  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20689  00453C  0100               	movlb	0	; () banked
 20690  00453E  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20691  004540  0100               	movlb	0	; () banked
 20692  004542  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20693                           
 20694                           ; BSR set to: 0
 20695                           ;MISC.c: 515: temp += (This & 0x02000000) >> 19;
 20696  004544  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20697  004548  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20698  00454C  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20699  004550  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20700  004554  0E14               	movlw	20
 20701  004556  D006               	goto	u11160
 20702  004558                     u11165:
 20703  004558  0100               	movlb	0	; () banked
 20704  00455A  90D8               	bcf	status,0,c
 20705  00455C  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20706  00455E  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20707  004560  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20708  004562  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20709  004564                     u11160:
 20710  004564  2EE8               	decfsz	wreg,f,c
 20711  004566  D7F8               	goto	u11165
 20712  004568  0E40               	movlw	64
 20713  00456A  0100               	movlb	0	; () banked
 20714  00456C  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20715  00456E  0100               	movlb	0	; () banked
 20716  004570  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20717  004572  0E00               	movlw	0
 20718  004574  0100               	movlb	0	; () banked
 20719  004576  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20720  004578  0100               	movlb	0	; () banked
 20721  00457A  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20722  00457C  0E00               	movlw	0
 20723  00457E  0100               	movlb	0	; () banked
 20724  004580  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20725  004582  0100               	movlb	0	; () banked
 20726  004584  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20727  004586  0E00               	movlw	0
 20728  004588  0100               	movlb	0	; () banked
 20729  00458A  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20730  00458C  0100               	movlb	0	; () banked
 20731  00458E  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20732  004590  0100               	movlb	0	; () banked
 20733  004592  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20734  004594  0100               	movlb	0	; () banked
 20735  004596  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20736  004598  0100               	movlb	0	; () banked
 20737  00459A  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20738  00459C  0100               	movlb	0	; () banked
 20739  00459E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20740  0045A0  0100               	movlb	0	; () banked
 20741  0045A2  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20742  0045A4  0100               	movlb	0	; () banked
 20743  0045A6  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20744  0045A8  0100               	movlb	0	; () banked
 20745  0045AA  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20746  0045AC  0100               	movlb	0	; () banked
 20747  0045AE  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;MISC.c: 516: temp += (This & 0x04000000) >> 21;
 20751  0045B0  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20752  0045B4  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20753  0045B8  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20754  0045BC  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20755  0045C0  0E16               	movlw	22
 20756  0045C2  D006               	goto	u11170
 20757  0045C4                     u11175:
 20758  0045C4  0100               	movlb	0	; () banked
 20759  0045C6  90D8               	bcf	status,0,c
 20760  0045C8  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20761  0045CA  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20762  0045CC  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20763  0045CE  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20764  0045D0                     u11170:
 20765  0045D0  2EE8               	decfsz	wreg,f,c
 20766  0045D2  D7F8               	goto	u11175
 20767  0045D4  0E20               	movlw	32
 20768  0045D6  0100               	movlb	0	; () banked
 20769  0045D8  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20770  0045DA  0100               	movlb	0	; () banked
 20771  0045DC  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20772  0045DE  0E00               	movlw	0
 20773  0045E0  0100               	movlb	0	; () banked
 20774  0045E2  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20775  0045E4  0100               	movlb	0	; () banked
 20776  0045E6  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20777  0045E8  0E00               	movlw	0
 20778  0045EA  0100               	movlb	0	; () banked
 20779  0045EC  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20780  0045EE  0100               	movlb	0	; () banked
 20781  0045F0  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20782  0045F2  0E00               	movlw	0
 20783  0045F4  0100               	movlb	0	; () banked
 20784  0045F6  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20785  0045F8  0100               	movlb	0	; () banked
 20786  0045FA  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20787  0045FC  0100               	movlb	0	; () banked
 20788  0045FE  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20789  004600  0100               	movlb	0	; () banked
 20790  004602  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20791  004604  0100               	movlb	0	; () banked
 20792  004606  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20793  004608  0100               	movlb	0	; () banked
 20794  00460A  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20795  00460C  0100               	movlb	0	; () banked
 20796  00460E  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20797  004610  0100               	movlb	0	; () banked
 20798  004612  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20799  004614  0100               	movlb	0	; () banked
 20800  004616  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20801  004618  0100               	movlb	0	; () banked
 20802  00461A  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;MISC.c: 517: temp += (This & 0x08000000) >> 23;
 20806  00461C  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20807  004620  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20808  004624  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20809  004628  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20810  00462C  0E18               	movlw	24
 20811  00462E  D006               	goto	u11180
 20812  004630                     u11185:
 20813  004630  0100               	movlb	0	; () banked
 20814  004632  90D8               	bcf	status,0,c
 20815  004634  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20816  004636  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20817  004638  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20818  00463A  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20819  00463C                     u11180:
 20820  00463C  2EE8               	decfsz	wreg,f,c
 20821  00463E  D7F8               	goto	u11185
 20822  004640  0E10               	movlw	16
 20823  004642  0100               	movlb	0	; () banked
 20824  004644  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20825  004646  0100               	movlb	0	; () banked
 20826  004648  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20827  00464A  0E00               	movlw	0
 20828  00464C  0100               	movlb	0	; () banked
 20829  00464E  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20830  004650  0100               	movlb	0	; () banked
 20831  004652  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20832  004654  0E00               	movlw	0
 20833  004656  0100               	movlb	0	; () banked
 20834  004658  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20835  00465A  0100               	movlb	0	; () banked
 20836  00465C  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20837  00465E  0E00               	movlw	0
 20838  004660  0100               	movlb	0	; () banked
 20839  004662  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20840  004664  0100               	movlb	0	; () banked
 20841  004666  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20842  004668  0100               	movlb	0	; () banked
 20843  00466A  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20844  00466C  0100               	movlb	0	; () banked
 20845  00466E  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20846  004670  0100               	movlb	0	; () banked
 20847  004672  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20848  004674  0100               	movlb	0	; () banked
 20849  004676  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20850  004678  0100               	movlb	0	; () banked
 20851  00467A  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20852  00467C  0100               	movlb	0	; () banked
 20853  00467E  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20854  004680  0100               	movlb	0	; () banked
 20855  004682  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20856  004684  0100               	movlb	0	; () banked
 20857  004686  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;MISC.c: 518: temp += (This & 0x10000000) >> 25;
 20861  004688  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20862  00468C  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20863  004690  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20864  004694  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20865  004698  0E1A               	movlw	26
 20866  00469A  D006               	goto	u11190
 20867  00469C                     u11195:
 20868  00469C  0100               	movlb	0	; () banked
 20869  00469E  90D8               	bcf	status,0,c
 20870  0046A0  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20871  0046A2  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20872  0046A4  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20873  0046A6  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20874  0046A8                     u11190:
 20875  0046A8  2EE8               	decfsz	wreg,f,c
 20876  0046AA  D7F8               	goto	u11195
 20877  0046AC  0E08               	movlw	8
 20878  0046AE  0100               	movlb	0	; () banked
 20879  0046B0  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20880  0046B2  0100               	movlb	0	; () banked
 20881  0046B4  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20882  0046B6  0E00               	movlw	0
 20883  0046B8  0100               	movlb	0	; () banked
 20884  0046BA  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20885  0046BC  0100               	movlb	0	; () banked
 20886  0046BE  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20887  0046C0  0E00               	movlw	0
 20888  0046C2  0100               	movlb	0	; () banked
 20889  0046C4  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20890  0046C6  0100               	movlb	0	; () banked
 20891  0046C8  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20892  0046CA  0E00               	movlw	0
 20893  0046CC  0100               	movlb	0	; () banked
 20894  0046CE  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20895  0046D0  0100               	movlb	0	; () banked
 20896  0046D2  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20897  0046D4  0100               	movlb	0	; () banked
 20898  0046D6  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20899  0046D8  0100               	movlb	0	; () banked
 20900  0046DA  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20901  0046DC  0100               	movlb	0	; () banked
 20902  0046DE  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20903  0046E0  0100               	movlb	0	; () banked
 20904  0046E2  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20905  0046E4  0100               	movlb	0	; () banked
 20906  0046E6  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20907  0046E8  0100               	movlb	0	; () banked
 20908  0046EA  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20909  0046EC  0100               	movlb	0	; () banked
 20910  0046EE  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20911  0046F0  0100               	movlb	0	; () banked
 20912  0046F2  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20913                           
 20914                           ; BSR set to: 0
 20915                           ;MISC.c: 519: temp += (This & 0x20000000) >> 27;
 20916  0046F4  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20917  0046F8  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20918  0046FC  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20919  004700  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20920  004704  0E1C               	movlw	28
 20921  004706  D006               	goto	u11200
 20922  004708                     u11205:
 20923  004708  0100               	movlb	0	; () banked
 20924  00470A  90D8               	bcf	status,0,c
 20925  00470C  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20926  00470E  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20927  004710  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20928  004712  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20929  004714                     u11200:
 20930  004714  2EE8               	decfsz	wreg,f,c
 20931  004716  D7F8               	goto	u11205
 20932  004718  0E04               	movlw	4
 20933  00471A  0100               	movlb	0	; () banked
 20934  00471C  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20935  00471E  0100               	movlb	0	; () banked
 20936  004720  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20937  004722  0E00               	movlw	0
 20938  004724  0100               	movlb	0	; () banked
 20939  004726  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20940  004728  0100               	movlb	0	; () banked
 20941  00472A  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20942  00472C  0E00               	movlw	0
 20943  00472E  0100               	movlb	0	; () banked
 20944  004730  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 20945  004732  0100               	movlb	0	; () banked
 20946  004734  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 20947  004736  0E00               	movlw	0
 20948  004738  0100               	movlb	0	; () banked
 20949  00473A  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 20950  00473C  0100               	movlb	0	; () banked
 20951  00473E  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 20952  004740  0100               	movlb	0	; () banked
 20953  004742  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 20954  004744  0100               	movlb	0	; () banked
 20955  004746  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 20956  004748  0100               	movlb	0	; () banked
 20957  00474A  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 20958  00474C  0100               	movlb	0	; () banked
 20959  00474E  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 20960  004750  0100               	movlb	0	; () banked
 20961  004752  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 20962  004754  0100               	movlb	0	; () banked
 20963  004756  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 20964  004758  0100               	movlb	0	; () banked
 20965  00475A  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 20966  00475C  0100               	movlb	0	; () banked
 20967  00475E  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;MISC.c: 520: temp += (This & 0x40000000) >> 29;
 20971  004760  C060  F064         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 20972  004764  C061  F065         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 20973  004768  C062  F066         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 20974  00476C  C063  F067         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 20975  004770  0E1E               	movlw	30
 20976  004772  D006               	goto	u11210
 20977  004774                     u11215:
 20978  004774  0100               	movlb	0	; () banked
 20979  004776  90D8               	bcf	status,0,c
 20980  004778  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 20981  00477A  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 20982  00477C  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 20983  00477E  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 20984  004780                     u11210:
 20985  004780  2EE8               	decfsz	wreg,f,c
 20986  004782  D7F8               	goto	u11215
 20987  004784  0E02               	movlw	2
 20988  004786  0100               	movlb	0	; () banked
 20989  004788  1564               	andwf	??_Reverse_4Byte& (0+255),w,b
 20990  00478A  0100               	movlb	0	; () banked
 20991  00478C  6F68               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 20992  00478E  0E00               	movlw	0
 20993  004790  0100               	movlb	0	; () banked
 20994  004792  1565               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 20995  004794  0100               	movlb	0	; () banked
 20996  004796  6F69               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 20997  004798  0E00               	movlw	0
 20998  00479A  0100               	movlb	0	; () banked
 20999  00479C  1566               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 21000  00479E  0100               	movlb	0	; () banked
 21001  0047A0  6F6A               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 21002  0047A2  0E00               	movlw	0
 21003  0047A4  0100               	movlb	0	; () banked
 21004  0047A6  1567               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 21005  0047A8  0100               	movlb	0	; () banked
 21006  0047AA  6F6B               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 21007  0047AC  0100               	movlb	0	; () banked
 21008  0047AE  5168               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 21009  0047B0  0100               	movlb	0	; () banked
 21010  0047B2  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 21011  0047B4  0100               	movlb	0	; () banked
 21012  0047B6  5169               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 21013  0047B8  0100               	movlb	0	; () banked
 21014  0047BA  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 21015  0047BC  0100               	movlb	0	; () banked
 21016  0047BE  516A               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 21017  0047C0  0100               	movlb	0	; () banked
 21018  0047C2  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 21019  0047C4  0100               	movlb	0	; () banked
 21020  0047C6  516B               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 21021  0047C8  0100               	movlb	0	; () banked
 21022  0047CA  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;MISC.c: 521: temp += (This & 0x80000000) >> 31;
 21026  0047CC  0E00               	movlw	0
 21027  0047CE  0100               	movlb	0	; () banked
 21028  0047D0  1560               	andwf	Reverse_4Byte@This& (0+255),w,b
 21029  0047D2  0100               	movlb	0	; () banked
 21030  0047D4  6F64               	movwf	??_Reverse_4Byte& (0+255),b
 21031  0047D6  0E00               	movlw	0
 21032  0047D8  0100               	movlb	0	; () banked
 21033  0047DA  1561               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 21034  0047DC  0100               	movlb	0	; () banked
 21035  0047DE  6F65               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 21036  0047E0  0E00               	movlw	0
 21037  0047E2  0100               	movlb	0	; () banked
 21038  0047E4  1562               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 21039  0047E6  0100               	movlb	0	; () banked
 21040  0047E8  6F66               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 21041  0047EA  0E80               	movlw	128
 21042  0047EC  0100               	movlb	0	; () banked
 21043  0047EE  1563               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 21044  0047F0  0100               	movlb	0	; () banked
 21045  0047F2  6F67               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 21046  0047F4  0E20               	movlw	32
 21047  0047F6  D006               	goto	u11220
 21048  0047F8                     u11225:
 21049  0047F8  0100               	movlb	0	; () banked
 21050  0047FA  90D8               	bcf	status,0,c
 21051  0047FC  3367               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 21052  0047FE  3366               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 21053  004800  3365               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 21054  004802  3364               	rrcf	??_Reverse_4Byte& (0+255),f,b
 21055  004804                     u11220:
 21056  004804  2EE8               	decfsz	wreg,f,c
 21057  004806  D7F8               	goto	u11225
 21058  004808  0100               	movlb	0	; () banked
 21059  00480A  5164               	movf	??_Reverse_4Byte& (0+255),w,b
 21060  00480C  0100               	movlb	0	; () banked
 21061  00480E  276C               	addwf	Reverse_4Byte@temp& (0+255),f,b
 21062  004810  0100               	movlb	0	; () banked
 21063  004812  5165               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 21064  004814  0100               	movlb	0	; () banked
 21065  004816  236D               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 21066  004818  0100               	movlb	0	; () banked
 21067  00481A  5166               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 21068  00481C  0100               	movlb	0	; () banked
 21069  00481E  236E               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 21070  004820  0100               	movlb	0	; () banked
 21071  004822  5167               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 21072  004824  0100               	movlb	0	; () banked
 21073  004826  236F               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 21074                           
 21075                           ; BSR set to: 0
 21076                           ;MISC.c: 523: return temp;
 21077  004828  C06C  F060         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 21078  00482C  C06D  F061         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 21079  004830  C06E  F062         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 21080  004834  C06F  F063         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 21081  004838  0012               	return	
 21082                           
 21083                           ; BSR set to: 0
 21084                           
 21085                           ; BSR set to: 0
 21086  00483A  0012               	return		;funcret
 21087  00483C                     __end_of_Reverse_4Byte:
 21088                           	opt stack 0
 21089                           tblptru	equ	0xFF8
 21090                           tblptrh	equ	0xFF7
 21091                           tblptrl	equ	0xFF6
 21092                           tablat	equ	0xFF5
 21093                           prodh	equ	0xFF4
 21094                           prodl	equ	0xFF3
 21095                           intcon	equ	0xFF2
 21096                           indf0	equ	0xFEF
 21097                           postinc0	equ	0xFEE
 21098                           plusw0	equ	0xFEB
 21099                           fsr0h	equ	0xFEA
 21100                           fsr0l	equ	0xFE9
 21101                           wreg	equ	0xFE8
 21102                           indf1	equ	0xFE7
 21103                           postdec1	equ	0xFE5
 21104                           fsr1h	equ	0xFE2
 21105                           fsr1l	equ	0xFE1
 21106                           indf2	equ	0xFDF
 21107                           postinc2	equ	0xFDE
 21108                           plusw2	equ	0xFDB
 21109                           fsr2h	equ	0xFDA
 21110                           fsr2l	equ	0xFD9
 21111                           status	equ	0xFD8
 21112                           
 21113 ;; *************** function _CheckReceivingIR *****************
 21114 ;; Defined at:
 21115 ;;		line 507 in file "IR.c"
 21116 ;; Parameters:    Size  Location     Type
 21117 ;;		None
 21118 ;; Auto vars:     Size  Location     Type
 21119 ;;		None
 21120 ;; Return value:  Size  Location     Type
 21121 ;;                  1    wreg      unsigned char 
 21122 ;; Registers used:
 21123 ;;		wreg, status,2, status,0
 21124 ;; Tracked objects:
 21125 ;;		On entry : 0/0
 21126 ;;		On exit  : 0/0
 21127 ;;		Unchanged: 0/0
 21128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21133 ;;Total ram usage:        0 bytes
 21134 ;; Hardware stack levels used:    1
 21135 ;; Hardware stack levels required when called:    5
 21136 ;; This function calls:
 21137 ;;		Nothing
 21138 ;; This function is called by:
 21139 ;;		_SendNEC_wait
 21140 ;; This function uses a non-reentrant model
 21141 ;;
 21142                           
 21143                           	psect	text21
 21144  00AE1E                     __ptext21:
 21145                           	opt stack 0
 21146  00AE1E                     _CheckReceivingIR:
 21147                           	opt stack 23
 21148                           
 21149                           ;IR.c: 509: if(ReceivingIR == 13)
 21150                           
 21151                           ; BSR set to: 0
 21152                           ;incstack = 0
 21153  00AE1E  0E0D               	movlw	13
 21154  00AE20  1850               	xorwf	_ReceivingIR,w,c	;volatile
 21155  00AE22  A4D8               	btfss	status,2,c
 21156  00AE24  D002               	goto	l11084
 21157                           
 21158                           ;IR.c: 510: {
 21159                           ;IR.c: 511: return 0;
 21160  00AE26  0E00               	movlw	0
 21161  00AE28  0012               	return	
 21162  00AE2A                     l11084:
 21163                           
 21164                           ;IR.c: 512: }
 21165                           ;IR.c: 513: return 1;
 21166  00AE2A  0E01               	movlw	1
 21167  00AE2C  0012               	return	
 21168  00AE2E  0012               	return		;funcret
 21169  00AE30                     __end_of_CheckReceivingIR:
 21170                           	opt stack 0
 21171                           tblptru	equ	0xFF8
 21172                           tblptrh	equ	0xFF7
 21173                           tblptrl	equ	0xFF6
 21174                           tablat	equ	0xFF5
 21175                           prodh	equ	0xFF4
 21176                           prodl	equ	0xFF3
 21177                           intcon	equ	0xFF2
 21178                           indf0	equ	0xFEF
 21179                           postinc0	equ	0xFEE
 21180                           plusw0	equ	0xFEB
 21181                           fsr0h	equ	0xFEA
 21182                           fsr0l	equ	0xFE9
 21183                           wreg	equ	0xFE8
 21184                           indf1	equ	0xFE7
 21185                           postdec1	equ	0xFE5
 21186                           fsr1h	equ	0xFE2
 21187                           fsr1l	equ	0xFE1
 21188                           indf2	equ	0xFDF
 21189                           postinc2	equ	0xFDE
 21190                           plusw2	equ	0xFDB
 21191                           fsr2h	equ	0xFDA
 21192                           fsr2l	equ	0xFD9
 21193                           status	equ	0xFD8
 21194                           
 21195 ;; *************** function _ReadVoltage *****************
 21196 ;; Defined at:
 21197 ;;		line 60 in file "ADC.c"
 21198 ;; Parameters:    Size  Location     Type
 21199 ;;		None
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;  voltage         3   44[BANK0 ] unsigned char 
 21202 ;;  temp            2   47[BANK0 ] unsigned int 
 21203 ;; Return value:  Size  Location     Type
 21204 ;;                  3   41[BANK0 ] unsigned int 
 21205 ;; Registers used:
 21206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21207 ;; Tracked objects:
 21208 ;;		On entry : 0/0
 21209 ;;		On exit  : 0/0
 21210 ;;		Unchanged: 0/0
 21211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21212 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21213 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21215 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21216 ;;Total ram usage:        8 bytes
 21217 ;; Hardware stack levels used:    1
 21218 ;; Hardware stack levels required when called:    7
 21219 ;; This function calls:
 21220 ;;		_InternalADC_Read
 21221 ;;		_VoltageDividerOFF
 21222 ;;		___ftdiv
 21223 ;;		___ftmul
 21224 ;;		___lwtoft
 21225 ;; This function is called by:
 21226 ;;		_main
 21227 ;;		_UseBluetooth
 21228 ;; This function uses a non-reentrant model
 21229 ;;
 21230                           
 21231                           	psect	text22
 21232  00A020                     __ptext22:
 21233                           	opt stack 0
 21234  00A020                     _ReadVoltage:
 21235                           	opt stack 22
 21236                           
 21237                           ;ADC.c: 62: unsigned int temp;
 21238                           ;ADC.c: 63: double voltage;
 21239                           ;ADC.c: 69: if(InternalADC_Read(0, &temp))
 21240                           
 21241                           ;incstack = 0
 21242  00A020  0E8F               	movlw	low ReadVoltage@temp
 21243  00A022  0100               	movlb	0	; () banked
 21244  00A024  6F69               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 21245  00A026  0E00               	movlw	high ReadVoltage@temp
 21246  00A028  0100               	movlb	0	; () banked
 21247  00A02A  6F6A               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 21248  00A02C  0E00               	movlw	0
 21249  00A02E  ECCF  F04E         	call	_InternalADC_Read
 21250  00A032  0900               	iorlw	0
 21251  00A034  B4D8               	btfsc	status,2,c
 21252  00A036  D02F               	goto	l11466
 21253                           
 21254                           ;ADC.c: 70: {
 21255                           ;ADC.c: 71: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 21256  00A038  0E00               	movlw	0
 21257  00A03A  0100               	movlb	0	; () banked
 21258  00A03C  6F6E               	movwf	___ftdiv@f2& (0+255),b
 21259  00A03E  0E80               	movlw	128
 21260  00A040  0100               	movlb	0	; () banked
 21261  00A042  6F6F               	movwf	(___ftdiv@f2+1)& (0+255),b
 21262  00A044  0E44               	movlw	68
 21263  00A046  0100               	movlb	0	; () banked
 21264  00A048  6F70               	movwf	(___ftdiv@f2+2)& (0+255),b
 21265  00A04A  C08F  F068         	movff	ReadVoltage@temp,___lwtoft@c
 21266  00A04E  C090  F069         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 21267  00A052  ECF8  F055         	call	___lwtoft	;wreg free
 21268  00A056  C068  F06B         	movff	?___lwtoft,___ftdiv@f1
 21269  00A05A  C069  F06C         	movff	?___lwtoft+1,___ftdiv@f1+1
 21270  00A05E  C06A  F06D         	movff	?___lwtoft+2,___ftdiv@f1+2
 21271  00A062  ECBE  F042         	call	___ftdiv	;wreg free
 21272  00A066  C06B  F07A         	movff	?___ftdiv,___ftmul@f1
 21273  00A06A  C06C  F07B         	movff	?___ftdiv+1,___ftmul@f1+1
 21274  00A06E  C06D  F07C         	movff	?___ftdiv+2,___ftmul@f1+2
 21275  00A072  0E33               	movlw	51
 21276  00A074  0100               	movlb	0	; () banked
 21277  00A076  6F7D               	movwf	___ftmul@f2& (0+255),b
 21278  00A078  0E11               	movlw	17
 21279  00A07A  0100               	movlb	0	; () banked
 21280  00A07C  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 21281  00A07E  0E42               	movlw	66
 21282  00A080  0100               	movlb	0	; () banked
 21283  00A082  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 21284  00A084  EC5A  F041         	call	___ftmul	;wreg free
 21285  00A088  C07A  F08C         	movff	?___ftmul,ReadVoltage@voltage
 21286  00A08C  C07B  F08D         	movff	?___ftmul+1,ReadVoltage@voltage+1
 21287  00A090  C07C  F08E         	movff	?___ftmul+2,ReadVoltage@voltage+2
 21288                           
 21289                           ;ADC.c: 72: }
 21290  00A094  D00A               	goto	l11468
 21291  00A096                     l11466:
 21292                           
 21293                           ;ADC.c: 73: else
 21294                           ;ADC.c: 74: {
 21295                           ;ADC.c: 75: voltage = 0.0;
 21296  00A096  0E00               	movlw	0
 21297  00A098  0100               	movlb	0	; () banked
 21298  00A09A  6F8C               	movwf	ReadVoltage@voltage& (0+255),b
 21299  00A09C  0E00               	movlw	0
 21300  00A09E  0100               	movlb	0	; () banked
 21301  00A0A0  6F8D               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 21302  00A0A2  0E00               	movlw	0
 21303  00A0A4  0100               	movlb	0	; () banked
 21304  00A0A6  6F8E               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 21305  00A0A8  D000               	goto	l11468
 21306  00A0AA                     l11468:
 21307                           
 21308                           ;ADC.c: 76: }
 21309                           ;ADC.c: 77: VoltageDividerOFF();
 21310  00A0AA  EC94  F057         	call	_VoltageDividerOFF	;wreg free
 21311                           
 21312                           ;ADC.c: 78: return voltage;
 21313  00A0AE  C08C  F089         	movff	ReadVoltage@voltage,?_ReadVoltage
 21314  00A0B2  C08D  F08A         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 21315  00A0B6  C08E  F08B         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 21316  00A0BA  0012               	return	
 21317  00A0BC  0012               	return		;funcret
 21318  00A0BE                     __end_of_ReadVoltage:
 21319                           	opt stack 0
 21320                           tblptru	equ	0xFF8
 21321                           tblptrh	equ	0xFF7
 21322                           tblptrl	equ	0xFF6
 21323                           tablat	equ	0xFF5
 21324                           prodh	equ	0xFF4
 21325                           prodl	equ	0xFF3
 21326                           intcon	equ	0xFF2
 21327                           indf0	equ	0xFEF
 21328                           postinc0	equ	0xFEE
 21329                           plusw0	equ	0xFEB
 21330                           fsr0h	equ	0xFEA
 21331                           fsr0l	equ	0xFE9
 21332                           wreg	equ	0xFE8
 21333                           indf1	equ	0xFE7
 21334                           postdec1	equ	0xFE5
 21335                           fsr1h	equ	0xFE2
 21336                           fsr1l	equ	0xFE1
 21337                           indf2	equ	0xFDF
 21338                           postinc2	equ	0xFDE
 21339                           plusw2	equ	0xFDB
 21340                           fsr2h	equ	0xFDA
 21341                           fsr2l	equ	0xFD9
 21342                           status	equ	0xFD8
 21343                           
 21344 ;; *************** function ___lwtoft *****************
 21345 ;; Defined at:
 21346 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 21347 ;; Parameters:    Size  Location     Type
 21348 ;;  c               2    8[BANK0 ] unsigned int 
 21349 ;; Auto vars:     Size  Location     Type
 21350 ;;		None
 21351 ;; Return value:  Size  Location     Type
 21352 ;;                  3    8[BANK0 ] float 
 21353 ;; Registers used:
 21354 ;;		wreg, status,2, status,0, cstack
 21355 ;; Tracked objects:
 21356 ;;		On entry : 0/0
 21357 ;;		On exit  : 0/0
 21358 ;;		Unchanged: 0/0
 21359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21360 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21364 ;;Total ram usage:        3 bytes
 21365 ;; Hardware stack levels used:    1
 21366 ;; Hardware stack levels required when called:    6
 21367 ;; This function calls:
 21368 ;;		___ftpack
 21369 ;; This function is called by:
 21370 ;;		_ReadVoltage
 21371 ;; This function uses a non-reentrant model
 21372 ;;
 21373                           
 21374                           	psect	text23
 21375  00ABF0                     __ptext23:
 21376                           	opt stack 0
 21377  00ABF0                     ___lwtoft:
 21378                           	opt stack 22
 21379                           
 21380                           ;incstack = 0
 21381  00ABF0  C068  F060         	movff	___lwtoft@c,___ftpack@arg
 21382  00ABF4  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 21383  00ABF8  0100               	movlb	0	; () banked
 21384  00ABFA  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 21385  00ABFC  0E8E               	movlw	142
 21386  00ABFE  0100               	movlb	0	; () banked
 21387  00AC00  6F63               	movwf	___ftpack@exp& (0+255),b
 21388  00AC02  0E00               	movlw	0
 21389  00AC04  0100               	movlb	0	; () banked
 21390  00AC06  6F64               	movwf	___ftpack@sign& (0+255),b
 21391  00AC08  ECEA  F045         	call	___ftpack	;wreg free
 21392  00AC0C  C060  F068         	movff	?___ftpack,?___lwtoft
 21393  00AC10  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
 21394  00AC14  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
 21395  00AC18  0012               	return	
 21396  00AC1A  0012               	return		;funcret
 21397  00AC1C                     __end_of___lwtoft:
 21398                           	opt stack 0
 21399                           tblptru	equ	0xFF8
 21400                           tblptrh	equ	0xFF7
 21401                           tblptrl	equ	0xFF6
 21402                           tablat	equ	0xFF5
 21403                           prodh	equ	0xFF4
 21404                           prodl	equ	0xFF3
 21405                           intcon	equ	0xFF2
 21406                           indf0	equ	0xFEF
 21407                           postinc0	equ	0xFEE
 21408                           plusw0	equ	0xFEB
 21409                           fsr0h	equ	0xFEA
 21410                           fsr0l	equ	0xFE9
 21411                           wreg	equ	0xFE8
 21412                           indf1	equ	0xFE7
 21413                           postdec1	equ	0xFE5
 21414                           fsr1h	equ	0xFE2
 21415                           fsr1l	equ	0xFE1
 21416                           indf2	equ	0xFDF
 21417                           postinc2	equ	0xFDE
 21418                           plusw2	equ	0xFDB
 21419                           fsr2h	equ	0xFDA
 21420                           fsr2l	equ	0xFD9
 21421                           status	equ	0xFD8
 21422                           
 21423 ;; *************** function ___ftdiv *****************
 21424 ;; Defined at:
 21425 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;  f1              3   11[BANK0 ] float 
 21428 ;;  f2              3   14[BANK0 ] float 
 21429 ;; Auto vars:     Size  Location     Type
 21430 ;;  f3              3   21[BANK0 ] float 
 21431 ;;  sign            1   25[BANK0 ] unsigned char 
 21432 ;;  exp             1   24[BANK0 ] unsigned char 
 21433 ;;  cntr            1   20[BANK0 ] unsigned char 
 21434 ;; Return value:  Size  Location     Type
 21435 ;;                  3   11[BANK0 ] float 
 21436 ;; Registers used:
 21437 ;;		wreg, status,2, status,0, cstack
 21438 ;; Tracked objects:
 21439 ;;		On entry : 0/0
 21440 ;;		On exit  : 0/0
 21441 ;;		Unchanged: 0/0
 21442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21444 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21445 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21446 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21447 ;;Total ram usage:       15 bytes
 21448 ;; Hardware stack levels used:    1
 21449 ;; Hardware stack levels required when called:    6
 21450 ;; This function calls:
 21451 ;;		___ftpack
 21452 ;; This function is called by:
 21453 ;;		_ReadVoltage
 21454 ;; This function uses a non-reentrant model
 21455 ;;
 21456                           
 21457                           	psect	text24
 21458  00857C                     __ptext24:
 21459                           	opt stack 0
 21460  00857C                     ___ftdiv:
 21461                           	opt stack 22
 21462                           
 21463                           ;incstack = 0
 21464  00857C  C06D  F071         	movff	___ftdiv@f1+2,??___ftdiv
 21465  008580  0100               	movlb	0	; () banked
 21466  008582  6B72               	clrf	(??___ftdiv+1)& (0+255),b
 21467  008584  6B73               	clrf	(??___ftdiv+2)& (0+255),b
 21468  008586  0100               	movlb	0	; () banked
 21469  008588  356C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 21470  00858A  0100               	movlb	0	; () banked
 21471  00858C  3771               	rlcf	??___ftdiv& (0+255),f,b
 21472  00858E  E301               	bnc	u12231
 21473  008590  8172               	bsf	(??___ftdiv+1)& (0+255),0,b
 21474  008592                     u12231:
 21475  008592  0100               	movlb	0	; () banked
 21476  008594  5171               	movf	??___ftdiv& (0+255),w,b
 21477  008596  0100               	movlb	0	; () banked
 21478  008598  6F78               	movwf	___ftdiv@exp& (0+255),b
 21479  00859A  0100               	movlb	0	; () banked
 21480  00859C  5178               	movf	___ftdiv@exp& (0+255),w,b
 21481  00859E  A4D8               	btfss	status,2,c
 21482  0085A0  D00A               	goto	l11418
 21483                           
 21484                           ; BSR set to: 0
 21485  0085A2  0E00               	movlw	0
 21486  0085A4  0100               	movlb	0	; () banked
 21487  0085A6  6F6B               	movwf	?___ftdiv& (0+255),b
 21488  0085A8  0E00               	movlw	0
 21489  0085AA  0100               	movlb	0	; () banked
 21490  0085AC  6F6C               	movwf	(?___ftdiv+1)& (0+255),b
 21491  0085AE  0E00               	movlw	0
 21492  0085B0  0100               	movlb	0	; () banked
 21493  0085B2  6F6D               	movwf	(?___ftdiv+2)& (0+255),b
 21494                           
 21495                           ; BSR set to: 0
 21496  0085B4  0012               	return	
 21497  0085B6                     l11418:
 21498                           
 21499                           ; BSR set to: 0
 21500  0085B6  C070  F071         	movff	___ftdiv@f2+2,??___ftdiv
 21501  0085BA  0100               	movlb	0	; () banked
 21502  0085BC  6B72               	clrf	(??___ftdiv+1)& (0+255),b
 21503  0085BE  6B73               	clrf	(??___ftdiv+2)& (0+255),b
 21504  0085C0  0100               	movlb	0	; () banked
 21505  0085C2  356F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 21506  0085C4  0100               	movlb	0	; () banked
 21507  0085C6  3771               	rlcf	??___ftdiv& (0+255),f,b
 21508  0085C8  E301               	bnc	u12251
 21509  0085CA  8172               	bsf	(??___ftdiv+1)& (0+255),0,b
 21510  0085CC                     u12251:
 21511  0085CC  0100               	movlb	0	; () banked
 21512  0085CE  5171               	movf	??___ftdiv& (0+255),w,b
 21513  0085D0  0100               	movlb	0	; () banked
 21514  0085D2  6F79               	movwf	___ftdiv@sign& (0+255),b
 21515  0085D4  0100               	movlb	0	; () banked
 21516  0085D6  5179               	movf	___ftdiv@sign& (0+255),w,b
 21517  0085D8  A4D8               	btfss	status,2,c
 21518  0085DA  D00A               	goto	l11424
 21519                           
 21520                           ; BSR set to: 0
 21521  0085DC  0E00               	movlw	0
 21522  0085DE  0100               	movlb	0	; () banked
 21523  0085E0  6F6B               	movwf	?___ftdiv& (0+255),b
 21524  0085E2  0E00               	movlw	0
 21525  0085E4  0100               	movlb	0	; () banked
 21526  0085E6  6F6C               	movwf	(?___ftdiv+1)& (0+255),b
 21527  0085E8  0E00               	movlw	0
 21528  0085EA  0100               	movlb	0	; () banked
 21529  0085EC  6F6D               	movwf	(?___ftdiv+2)& (0+255),b
 21530                           
 21531                           ; BSR set to: 0
 21532  0085EE  0012               	return	
 21533  0085F0                     l11424:
 21534                           
 21535                           ; BSR set to: 0
 21536  0085F0  0E00               	movlw	0
 21537  0085F2  0100               	movlb	0	; () banked
 21538  0085F4  6F75               	movwf	___ftdiv@f3& (0+255),b
 21539  0085F6  0E00               	movlw	0
 21540  0085F8  0100               	movlb	0	; () banked
 21541  0085FA  6F76               	movwf	(___ftdiv@f3+1)& (0+255),b
 21542  0085FC  0E00               	movlw	0
 21543  0085FE  0100               	movlb	0	; () banked
 21544  008600  6F77               	movwf	(___ftdiv@f3+2)& (0+255),b
 21545                           
 21546                           ; BSR set to: 0
 21547  008602  0100               	movlb	0	; () banked
 21548  008604  5179               	movf	___ftdiv@sign& (0+255),w,b
 21549  008606  0F89               	addlw	137
 21550  008608  0100               	movlb	0	; () banked
 21551  00860A  5F78               	subwf	___ftdiv@exp& (0+255),f,b
 21552                           
 21553                           ; BSR set to: 0
 21554  00860C  C06D  F079         	movff	___ftdiv@f1+2,___ftdiv@sign
 21555                           
 21556                           ; BSR set to: 0
 21557  008610  0100               	movlb	0	; () banked
 21558  008612  5170               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21559  008614  0100               	movlb	0	; () banked
 21560  008616  1B79               	xorwf	___ftdiv@sign& (0+255),f,b
 21561                           
 21562                           ; BSR set to: 0
 21563  008618  0E80               	movlw	128
 21564  00861A  0100               	movlb	0	; () banked
 21565  00861C  1779               	andwf	___ftdiv@sign& (0+255),f,b
 21566                           
 21567                           ; BSR set to: 0
 21568  00861E  0100               	movlb	0	; () banked
 21569  008620  8F6C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 21570                           
 21571                           ; BSR set to: 0
 21572  008622  0EFF               	movlw	255
 21573  008624  0100               	movlb	0	; () banked
 21574  008626  176B               	andwf	___ftdiv@f1& (0+255),f,b
 21575  008628  0EFF               	movlw	255
 21576  00862A  0100               	movlb	0	; () banked
 21577  00862C  176C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 21578  00862E  0E00               	movlw	0
 21579  008630  0100               	movlb	0	; () banked
 21580  008632  176D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 21581                           
 21582                           ; BSR set to: 0
 21583  008634  0100               	movlb	0	; () banked
 21584  008636  8F6F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 21585                           
 21586                           ; BSR set to: 0
 21587  008638  0EFF               	movlw	255
 21588  00863A  0100               	movlb	0	; () banked
 21589  00863C  176E               	andwf	___ftdiv@f2& (0+255),f,b
 21590  00863E  0EFF               	movlw	255
 21591  008640  0100               	movlb	0	; () banked
 21592  008642  176F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 21593  008644  0E00               	movlw	0
 21594  008646  0100               	movlb	0	; () banked
 21595  008648  1770               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 21596                           
 21597                           ; BSR set to: 0
 21598  00864A  0E18               	movlw	24
 21599  00864C  0100               	movlb	0	; () banked
 21600  00864E  6F74               	movwf	___ftdiv@cntr& (0+255),b
 21601  008650  D000               	goto	l11444
 21602  008652                     l11444:
 21603                           
 21604                           ; BSR set to: 0
 21605  008652  0100               	movlb	0	; () banked
 21606  008654  90D8               	bcf	status,0,c
 21607  008656  3775               	rlcf	___ftdiv@f3& (0+255),f,b
 21608  008658  3776               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 21609  00865A  3777               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 21610                           
 21611                           ; BSR set to: 0
 21612  00865C  0100               	movlb	0	; () banked
 21613  00865E  516E               	movf	___ftdiv@f2& (0+255),w,b
 21614  008660  0100               	movlb	0	; () banked
 21615  008662  5D6B               	subwf	___ftdiv@f1& (0+255),w,b
 21616  008664  0100               	movlb	0	; () banked
 21617  008666  516F               	movf	(___ftdiv@f2+1)& (0+255),w,b
 21618  008668  0100               	movlb	0	; () banked
 21619  00866A  596C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 21620  00866C  0100               	movlb	0	; () banked
 21621  00866E  5170               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21622  008670  0100               	movlb	0	; () banked
 21623  008672  596D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 21624  008674  A0D8               	btfss	status,0,c
 21625  008676  D00E               	goto	l3142
 21626                           
 21627                           ; BSR set to: 0
 21628  008678  0100               	movlb	0	; () banked
 21629  00867A  516E               	movf	___ftdiv@f2& (0+255),w,b
 21630  00867C  0100               	movlb	0	; () banked
 21631  00867E  5F6B               	subwf	___ftdiv@f1& (0+255),f,b
 21632  008680  0100               	movlb	0	; () banked
 21633  008682  516F               	movf	(___ftdiv@f2+1)& (0+255),w,b
 21634  008684  0100               	movlb	0	; () banked
 21635  008686  5B6C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 21636  008688  0100               	movlb	0	; () banked
 21637  00868A  5170               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21638  00868C  0100               	movlb	0	; () banked
 21639  00868E  5B6D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 21640                           
 21641                           ; BSR set to: 0
 21642  008690  0100               	movlb	0	; () banked
 21643  008692  8175               	bsf	___ftdiv@f3& (0+255),0,b
 21644  008694                     l3142:
 21645                           
 21646                           ; BSR set to: 0
 21647  008694  0100               	movlb	0	; () banked
 21648  008696  90D8               	bcf	status,0,c
 21649  008698  376B               	rlcf	___ftdiv@f1& (0+255),f,b
 21650  00869A  376C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 21651  00869C  376D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 21652                           
 21653                           ; BSR set to: 0
 21654  00869E  0100               	movlb	0	; () banked
 21655  0086A0  2F74               	decfsz	___ftdiv@cntr& (0+255),f,b
 21656  0086A2  D7D7               	goto	l11444
 21657  0086A4  D000               	goto	l11454
 21658  0086A6                     l11454:
 21659                           
 21660                           ; BSR set to: 0
 21661  0086A6  C075  F060         	movff	___ftdiv@f3,___ftpack@arg
 21662  0086AA  C076  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 21663  0086AE  C077  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 21664  0086B2  C078  F063         	movff	___ftdiv@exp,___ftpack@exp
 21665  0086B6  C079  F064         	movff	___ftdiv@sign,___ftpack@sign
 21666  0086BA  ECEA  F045         	call	___ftpack	;wreg free
 21667  0086BE  C060  F06B         	movff	?___ftpack,?___ftdiv
 21668  0086C2  C061  F06C         	movff	?___ftpack+1,?___ftdiv+1
 21669  0086C6  C062  F06D         	movff	?___ftpack+2,?___ftdiv+2
 21670  0086CA  0012               	return	
 21671  0086CC  0012               	return		;funcret
 21672  0086CE                     __end_of___ftdiv:
 21673                           	opt stack 0
 21674                           tblptru	equ	0xFF8
 21675                           tblptrh	equ	0xFF7
 21676                           tblptrl	equ	0xFF6
 21677                           tablat	equ	0xFF5
 21678                           prodh	equ	0xFF4
 21679                           prodl	equ	0xFF3
 21680                           intcon	equ	0xFF2
 21681                           indf0	equ	0xFEF
 21682                           postinc0	equ	0xFEE
 21683                           plusw0	equ	0xFEB
 21684                           fsr0h	equ	0xFEA
 21685                           fsr0l	equ	0xFE9
 21686                           wreg	equ	0xFE8
 21687                           indf1	equ	0xFE7
 21688                           postdec1	equ	0xFE5
 21689                           fsr1h	equ	0xFE2
 21690                           fsr1l	equ	0xFE1
 21691                           indf2	equ	0xFDF
 21692                           postinc2	equ	0xFDE
 21693                           plusw2	equ	0xFDB
 21694                           fsr2h	equ	0xFDA
 21695                           fsr2l	equ	0xFD9
 21696                           status	equ	0xFD8
 21697                           
 21698 ;; *************** function _VoltageDividerOFF *****************
 21699 ;; Defined at:
 21700 ;;		line 163 in file "ADC.c"
 21701 ;; Parameters:    Size  Location     Type
 21702 ;;		None
 21703 ;; Auto vars:     Size  Location     Type
 21704 ;;		None
 21705 ;; Return value:  Size  Location     Type
 21706 ;;		None               void
 21707 ;; Registers used:
 21708 ;;		None
 21709 ;; Tracked objects:
 21710 ;;		On entry : 0/0
 21711 ;;		On exit  : 0/0
 21712 ;;		Unchanged: 0/0
 21713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21718 ;;Total ram usage:        0 bytes
 21719 ;; Hardware stack levels used:    1
 21720 ;; Hardware stack levels required when called:    5
 21721 ;; This function calls:
 21722 ;;		Nothing
 21723 ;; This function is called by:
 21724 ;;		_ReadVoltage
 21725 ;; This function uses a non-reentrant model
 21726 ;;
 21727                           
 21728                           	psect	text25
 21729  00AF28                     __ptext25:
 21730                           	opt stack 0
 21731  00AF28                     _VoltageDividerOFF:
 21732                           	opt stack 23
 21733                           
 21734                           ;incstack = 0
 21735  00AF28  0012               	return		;funcret
 21736  00AF2A                     __end_of_VoltageDividerOFF:
 21737                           	opt stack 0
 21738                           tblptru	equ	0xFF8
 21739                           tblptrh	equ	0xFF7
 21740                           tblptrl	equ	0xFF6
 21741                           tablat	equ	0xFF5
 21742                           prodh	equ	0xFF4
 21743                           prodl	equ	0xFF3
 21744                           intcon	equ	0xFF2
 21745                           indf0	equ	0xFEF
 21746                           postinc0	equ	0xFEE
 21747                           plusw0	equ	0xFEB
 21748                           fsr0h	equ	0xFEA
 21749                           fsr0l	equ	0xFE9
 21750                           wreg	equ	0xFE8
 21751                           indf1	equ	0xFE7
 21752                           postdec1	equ	0xFE5
 21753                           fsr1h	equ	0xFE2
 21754                           fsr1l	equ	0xFE1
 21755                           indf2	equ	0xFDF
 21756                           postinc2	equ	0xFDE
 21757                           plusw2	equ	0xFDB
 21758                           fsr2h	equ	0xFDA
 21759                           fsr2l	equ	0xFD9
 21760                           status	equ	0xFD8
 21761                           
 21762 ;; *************** function _InternalADC_Read *****************
 21763 ;; Defined at:
 21764 ;;		line 86 in file "ADC.c"
 21765 ;; Parameters:    Size  Location     Type
 21766 ;;  channel         1    wreg     unsigned char 
 21767 ;;  ADCcounts       2    9[BANK0 ] PTR unsigned int 
 21768 ;;		 -> ReadVoltage@temp(2), 
 21769 ;; Auto vars:     Size  Location     Type
 21770 ;;  channel         1   14[BANK0 ] unsigned char 
 21771 ;;  AnaChanSel      1   13[BANK0 ] unsigned char 
 21772 ;; Return value:  Size  Location     Type
 21773 ;;                  1    wreg      unsigned char 
 21774 ;; Registers used:
 21775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21776 ;; Tracked objects:
 21777 ;;		On entry : 0/0
 21778 ;;		On exit  : 0/0
 21779 ;;		Unchanged: 0/0
 21780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21781 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21784 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21785 ;;Total ram usage:        6 bytes
 21786 ;; Hardware stack levels used:    1
 21787 ;; Hardware stack levels required when called:    6
 21788 ;; This function calls:
 21789 ;;		_delayUS
 21790 ;; This function is called by:
 21791 ;;		_ReadVoltage
 21792 ;; This function uses a non-reentrant model
 21793 ;;
 21794                           
 21795                           	psect	text26
 21796  009D9E                     __ptext26:
 21797                           	opt stack 0
 21798  009D9E                     _InternalADC_Read:
 21799                           	opt stack 22
 21800                           
 21801                           ;incstack = 0
 21802                           ;InternalADC_Read@channel stored from wreg
 21803  009D9E  0100               	movlb	0	; () banked
 21804  009DA0  6F6E               	movwf	InternalADC_Read@channel& (0+255),b
 21805                           
 21806                           ; BSR set to: 0
 21807                           ;ADC.c: 88: unsigned char AnaChanSel = 1;
 21808  009DA2  0E01               	movlw	1
 21809  009DA4  0100               	movlb	0	; () banked
 21810  009DA6  6F6D               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;ADC.c: 89: if(channel > 0b1100)
 21814  009DA8  0E0C               	movlw	12
 21815  009DAA  0100               	movlb	0	; () banked
 21816  009DAC  656E               	cpfsgt	InternalADC_Read@channel& (0+255),b
 21817  009DAE  D00A               	goto	l10942
 21818                           
 21819                           ; BSR set to: 0
 21820                           ;ADC.c: 90: {
 21821                           ;ADC.c: 91: *ADCcounts = 0;
 21822  009DB0  C069  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 21823  009DB4  C06A  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 21824  009DB8  0E00               	movlw	0
 21825  009DBA  6EDE               	movwf	postinc2,c
 21826  009DBC  0E00               	movlw	0
 21827  009DBE  6EDD               	movwf	postdec2,c
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;ADC.c: 92: return 0;
 21831  009DC0  0E00               	movlw	0
 21832                           
 21833                           ; BSR set to: 0
 21834  009DC2  0012               	return	
 21835  009DC4                     l10942:
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;ADC.c: 93: }
 21839                           ;ADC.c: 94: if(channel > 1)
 21840  009DC4  0E01               	movlw	1
 21841  009DC6  0100               	movlb	0	; () banked
 21842  009DC8  656E               	cpfsgt	InternalADC_Read@channel& (0+255),b
 21843  009DCA  D001               	goto	l10946
 21844                           
 21845                           ; BSR set to: 0
 21846                           ;ADC.c: 97: }
 21847  009DCC  D009               	goto	l10950
 21848  009DCE                     l10946:
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;ADC.c: 98: else if (channel == 0)
 21852  009DCE  0100               	movlb	0	; () banked
 21853  009DD0  516E               	movf	InternalADC_Read@channel& (0+255),w,b
 21854  009DD2  0100               	movlb	0	; () banked
 21855  009DD4  A4D8               	btfss	status,2,c
 21856  009DD6  D004               	goto	l10950
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;ADC.c: 99: {
 21860                           ;ADC.c: 100: AnaChanSel = 0;
 21861  009DD8  0E00               	movlw	0
 21862  009DDA  0100               	movlb	0	; () banked
 21863  009DDC  6F6D               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 21864                           
 21865                           ; BSR set to: 0
 21866  009DDE  D000               	goto	l10950
 21867  009DE0                     l10950:
 21868                           
 21869                           ; BSR set to: 0
 21870                           ;ADC.c: 101: }
 21871                           ;ADC.c: 103: ADCON0 |= (AnaChanSel << 2);
 21872  009DE0  0100               	movlb	0	; () banked
 21873  009DE2  456D               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 21874  009DE4  46E8               	rlncf	wreg,f,c
 21875  009DE6  0BFC               	andlw	252
 21876  009DE8  12C2               	iorwf	4034,f,c	;volatile
 21877                           
 21878                           ; BSR set to: 0
 21879                           ;ADC.c: 105: ADCON1bits.VCFG0 = 0;
 21880  009DEA  98C1               	bcf	4033,4,c	;volatile
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;ADC.c: 106: ADCON1bits.VCFG1 = 0;
 21884  009DEC  9AC1               	bcf	4033,5,c	;volatile
 21885                           
 21886                           ; BSR set to: 0
 21887                           ;ADC.c: 108: (ADCON0bits.ADON = 1);
 21888  009DEE  80C2               	bsf	4034,0,c	;volatile
 21889                           
 21890                           ; BSR set to: 0
 21891                           ;ADC.c: 109: delayUS(75);
 21892  009DF0  0E4B               	movlw	75
 21893  009DF2  0100               	movlb	0	; () banked
 21894  009DF4  6F60               	movwf	delayUS@US& (0+255),b
 21895  009DF6  0E00               	movlw	0
 21896  009DF8  6F61               	movwf	(delayUS@US+1)& (0+255),b
 21897  009DFA  0E00               	movlw	0
 21898  009DFC  6F62               	movwf	(delayUS@US+2)& (0+255),b
 21899  009DFE  0E00               	movlw	0
 21900  009E00  6F63               	movwf	(delayUS@US+3)& (0+255),b
 21901  009E02  EC96  F053         	call	_delayUS	;wreg free
 21902                           
 21903                           ;ADC.c: 111: ADCON0bits.GO = 1;
 21904  009E06  82C2               	bsf	4034,1,c	;volatile
 21905                           
 21906                           ;ADC.c: 112: while(ADCON0bits.GO);
 21907  009E08  D000               	goto	l906
 21908  009E0A                     l906:
 21909  009E0A  B2C2               	btfsc	4034,1,c	;volatile
 21910  009E0C  D7FE               	goto	l906
 21911                           
 21912                           ;ADC.c: 113: (ADCON0bits.ADON = 0);
 21913  009E0E  90C2               	bcf	4034,0,c	;volatile
 21914                           
 21915                           ;ADC.c: 115: *ADCcounts = ((ADRESH << 8) + ADRESL);
 21916  009E10  50C3               	movf	4035,w,c	;volatile
 21917  009E12  CFC4 F06B          	movff	4036,??_InternalADC_Read	;volatile
 21918  009E16  0100               	movlb	0	; () banked
 21919  009E18  6B6C               	clrf	(??_InternalADC_Read+1)& (0+255),b
 21920  009E1A  C06B  F06C         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 21921  009E1E  0100               	movlb	0	; () banked
 21922  009E20  6B6B               	clrf	??_InternalADC_Read& (0+255),b
 21923  009E22  0100               	movlb	0	; () banked
 21924  009E24  276B               	addwf	??_InternalADC_Read& (0+255),f,b
 21925  009E26  0E00               	movlw	0
 21926  009E28  236C               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 21927  009E2A  C069  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 21928  009E2E  C06A  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 21929  009E32  C06B  FFDE         	movff	??_InternalADC_Read,postinc2
 21930  009E36  C06C  FFDD         	movff	??_InternalADC_Read+1,postdec2
 21931                           
 21932                           ; BSR set to: 0
 21933                           ;ADC.c: 116: return 1;
 21934  009E3A  0E01               	movlw	1
 21935  009E3C  0012               	return	
 21936                           
 21937                           ; BSR set to: 0
 21938                           
 21939                           ; BSR set to: 0
 21940  009E3E  0012               	return		;funcret
 21941  009E40                     __end_of_InternalADC_Read:
 21942                           	opt stack 0
 21943                           tblptru	equ	0xFF8
 21944                           tblptrh	equ	0xFF7
 21945                           tblptrl	equ	0xFF6
 21946                           tablat	equ	0xFF5
 21947                           prodh	equ	0xFF4
 21948                           prodl	equ	0xFF3
 21949                           intcon	equ	0xFF2
 21950                           indf0	equ	0xFEF
 21951                           postinc0	equ	0xFEE
 21952                           plusw0	equ	0xFEB
 21953                           fsr0h	equ	0xFEA
 21954                           fsr0l	equ	0xFE9
 21955                           wreg	equ	0xFE8
 21956                           indf1	equ	0xFE7
 21957                           postdec1	equ	0xFE5
 21958                           fsr1h	equ	0xFE2
 21959                           fsr1l	equ	0xFE1
 21960                           indf2	equ	0xFDF
 21961                           postinc2	equ	0xFDE
 21962                           postdec2	equ	0xFDD
 21963                           plusw2	equ	0xFDB
 21964                           fsr2h	equ	0xFDA
 21965                           fsr2l	equ	0xFD9
 21966                           status	equ	0xFD8
 21967                           
 21968 ;; *************** function _IsAlphaNumericString *****************
 21969 ;; Defined at:
 21970 ;;		line 159 in file "MISC.c"
 21971 ;; Parameters:    Size  Location     Type
 21972 ;;  data            2    2[BANK0 ] PTR unsigned char 
 21973 ;;		 -> ReceivedString(100), 
 21974 ;; Auto vars:     Size  Location     Type
 21975 ;;		None
 21976 ;; Return value:  Size  Location     Type
 21977 ;;                  1    wreg      unsigned char 
 21978 ;; Registers used:
 21979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21980 ;; Tracked objects:
 21981 ;;		On entry : 0/0
 21982 ;;		On exit  : 0/0
 21983 ;;		Unchanged: 0/0
 21984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21989 ;;Total ram usage:        2 bytes
 21990 ;; Hardware stack levels used:    1
 21991 ;; Hardware stack levels required when called:    7
 21992 ;; This function calls:
 21993 ;;		_IsAlphaNumeric
 21994 ;; This function is called by:
 21995 ;;		_UseBluetooth
 21996 ;; This function uses a non-reentrant model
 21997 ;;
 21998                           
 21999                           	psect	text27
 22000  00AA62                     __ptext27:
 22001                           	opt stack 0
 22002  00AA62                     _IsAlphaNumericString:
 22003                           	opt stack 22
 22004                           
 22005                           ;MISC.c: 161: while(*data != 0)
 22006                           
 22007                           ; BSR set to: 0
 22008                           ;incstack = 0
 22009  00AA62  D010               	goto	l11716
 22010  00AA64                     l11708:
 22011                           
 22012                           ;MISC.c: 162: {
 22013                           ;MISC.c: 163: if(!IsAlphaNumeric(*data))
 22014  00AA64  C062  FFD9         	movff	IsAlphaNumericString@data,fsr2l
 22015  00AA68  C063  FFDA         	movff	IsAlphaNumericString@data+1,fsr2h
 22016  00AA6C  50DF               	movf	indf2,w,c
 22017  00AA6E  EC4C  F055         	call	_IsAlphaNumeric
 22018  00AA72  0900               	iorlw	0
 22019  00AA74  A4D8               	btfss	status,2,c
 22020  00AA76  D002               	goto	l11714
 22021                           
 22022                           ;MISC.c: 164: {
 22023                           ;MISC.c: 165: return 0;
 22024  00AA78  0E00               	movlw	0
 22025  00AA7A  0012               	return	
 22026  00AA7C                     l11714:
 22027                           
 22028                           ;MISC.c: 166: }
 22029                           ;MISC.c: 167: data++;
 22030  00AA7C  0100               	movlb	0	; () banked
 22031  00AA7E  4B62               	infsnz	IsAlphaNumericString@data& (0+255),f,b
 22032  00AA80  2B63               	incf	(IsAlphaNumericString@data+1)& (0+255),f,b
 22033  00AA82  D000               	goto	l11716
 22034  00AA84                     l11716:
 22035  00AA84  C062  FFD9         	movff	IsAlphaNumericString@data,fsr2l
 22036  00AA88  C063  FFDA         	movff	IsAlphaNumericString@data+1,fsr2h
 22037  00AA8C  50DF               	movf	indf2,w,c
 22038  00AA8E  A4D8               	btfss	status,2,c
 22039  00AA90  D7E9               	goto	l11708
 22040                           
 22041                           ;MISC.c: 168: }
 22042                           ;MISC.c: 169: return 1;
 22043  00AA92  0E01               	movlw	1
 22044  00AA94  0012               	return	
 22045  00AA96  0012               	return		;funcret
 22046  00AA98                     __end_of_IsAlphaNumericString:
 22047                           	opt stack 0
 22048                           tblptru	equ	0xFF8
 22049                           tblptrh	equ	0xFF7
 22050                           tblptrl	equ	0xFF6
 22051                           tablat	equ	0xFF5
 22052                           prodh	equ	0xFF4
 22053                           prodl	equ	0xFF3
 22054                           intcon	equ	0xFF2
 22055                           indf0	equ	0xFEF
 22056                           postinc0	equ	0xFEE
 22057                           plusw0	equ	0xFEB
 22058                           fsr0h	equ	0xFEA
 22059                           fsr0l	equ	0xFE9
 22060                           wreg	equ	0xFE8
 22061                           indf1	equ	0xFE7
 22062                           postdec1	equ	0xFE5
 22063                           fsr1h	equ	0xFE2
 22064                           fsr1l	equ	0xFE1
 22065                           indf2	equ	0xFDF
 22066                           postinc2	equ	0xFDE
 22067                           postdec2	equ	0xFDD
 22068                           plusw2	equ	0xFDB
 22069                           fsr2h	equ	0xFDA
 22070                           fsr2l	equ	0xFD9
 22071                           status	equ	0xFD8
 22072                           
 22073 ;; *************** function _IsAlphaNumeric *****************
 22074 ;; Defined at:
 22075 ;;		line 144 in file "MISC.c"
 22076 ;; Parameters:    Size  Location     Type
 22077 ;;  data            1    wreg     unsigned char 
 22078 ;; Auto vars:     Size  Location     Type
 22079 ;;  data            1    1[BANK0 ] unsigned char 
 22080 ;; Return value:  Size  Location     Type
 22081 ;;                  1    wreg      unsigned char 
 22082 ;; Registers used:
 22083 ;;		wreg, status,2, status,0, cstack
 22084 ;; Tracked objects:
 22085 ;;		On entry : 0/0
 22086 ;;		On exit  : 0/0
 22087 ;;		Unchanged: 0/0
 22088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22093 ;;Total ram usage:        1 bytes
 22094 ;; Hardware stack levels used:    1
 22095 ;; Hardware stack levels required when called:    6
 22096 ;; This function calls:
 22097 ;;		_IsLetter
 22098 ;;		_IsNumber
 22099 ;; This function is called by:
 22100 ;;		_IsAlphaNumericString
 22101 ;; This function uses a non-reentrant model
 22102 ;;
 22103                           
 22104                           	psect	text28
 22105  00AA98                     __ptext28:
 22106                           	opt stack 0
 22107  00AA98                     _IsAlphaNumeric:
 22108                           	opt stack 22
 22109                           
 22110                           ;incstack = 0
 22111                           ;IsAlphaNumeric@data stored from wreg
 22112  00AA98  0100               	movlb	0	; () banked
 22113  00AA9A  6F61               	movwf	IsAlphaNumeric@data& (0+255),b
 22114                           
 22115                           ; BSR set to: 0
 22116                           ;MISC.c: 146: if(IsLetter(data) || IsNumber(data) || data == ' ')
 22117  00AA9C  0100               	movlb	0	; () banked
 22118  00AA9E  5161               	movf	IsAlphaNumeric@data& (0+255),w,b
 22119  00AAA0  EC7F  F055         	call	_IsLetter
 22120  00AAA4  0900               	iorlw	0
 22121  00AAA6  A4D8               	btfss	status,2,c
 22122  00AAA8  D00C               	goto	l10848
 22123  00AAAA  0100               	movlb	0	; () banked
 22124  00AAAC  5161               	movf	IsAlphaNumeric@data& (0+255),w,b
 22125  00AAAE  EC84  F056         	call	_IsNumber
 22126  00AAB2  0900               	iorlw	0
 22127  00AAB4  A4D8               	btfss	status,2,c
 22128  00AAB6  D005               	goto	l10848
 22129  00AAB8  0E20               	movlw	32
 22130  00AABA  0100               	movlb	0	; () banked
 22131  00AABC  1961               	xorwf	IsAlphaNumeric@data& (0+255),w,b
 22132  00AABE  A4D8               	btfss	status,2,c
 22133  00AAC0  D002               	goto	l10852
 22134  00AAC2                     l10848:
 22135                           
 22136                           ;MISC.c: 147: {
 22137                           ;MISC.c: 148: return 1;
 22138  00AAC2  0E01               	movlw	1
 22139  00AAC4  0012               	return	
 22140  00AAC6                     l10852:
 22141                           
 22142                           ;MISC.c: 149: }
 22143                           ;MISC.c: 150: return 0;
 22144  00AAC6  0E00               	movlw	0
 22145  00AAC8  0012               	return	
 22146  00AACA  0012               	return		;funcret
 22147  00AACC                     __end_of_IsAlphaNumeric:
 22148                           	opt stack 0
 22149                           tblptru	equ	0xFF8
 22150                           tblptrh	equ	0xFF7
 22151                           tblptrl	equ	0xFF6
 22152                           tablat	equ	0xFF5
 22153                           prodh	equ	0xFF4
 22154                           prodl	equ	0xFF3
 22155                           intcon	equ	0xFF2
 22156                           indf0	equ	0xFEF
 22157                           postinc0	equ	0xFEE
 22158                           plusw0	equ	0xFEB
 22159                           fsr0h	equ	0xFEA
 22160                           fsr0l	equ	0xFE9
 22161                           wreg	equ	0xFE8
 22162                           indf1	equ	0xFE7
 22163                           postdec1	equ	0xFE5
 22164                           fsr1h	equ	0xFE2
 22165                           fsr1l	equ	0xFE1
 22166                           indf2	equ	0xFDF
 22167                           postinc2	equ	0xFDE
 22168                           postdec2	equ	0xFDD
 22169                           plusw2	equ	0xFDB
 22170                           fsr2h	equ	0xFDA
 22171                           fsr2l	equ	0xFD9
 22172                           status	equ	0xFD8
 22173                           
 22174 ;; *************** function _IsNumber *****************
 22175 ;; Defined at:
 22176 ;;		line 115 in file "MISC.c"
 22177 ;; Parameters:    Size  Location     Type
 22178 ;;  data            1    wreg     unsigned char 
 22179 ;; Auto vars:     Size  Location     Type
 22180 ;;  data            1    0[BANK0 ] unsigned char 
 22181 ;; Return value:  Size  Location     Type
 22182 ;;                  1    wreg      unsigned char 
 22183 ;; Registers used:
 22184 ;;		wreg, status,2, status,0
 22185 ;; Tracked objects:
 22186 ;;		On entry : 0/0
 22187 ;;		On exit  : 0/0
 22188 ;;		Unchanged: 0/0
 22189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22194 ;;Total ram usage:        1 bytes
 22195 ;; Hardware stack levels used:    1
 22196 ;; Hardware stack levels required when called:    5
 22197 ;; This function calls:
 22198 ;;		Nothing
 22199 ;; This function is called by:
 22200 ;;		_IsAlphaNumeric
 22201 ;; This function uses a non-reentrant model
 22202 ;;
 22203                           
 22204                           	psect	text29
 22205  00AD08                     __ptext29:
 22206                           	opt stack 0
 22207  00AD08                     _IsNumber:
 22208                           	opt stack 22
 22209                           
 22210                           ;incstack = 0
 22211                           ;IsNumber@data stored from wreg
 22212  00AD08  0100               	movlb	0	; () banked
 22213  00AD0A  6F60               	movwf	IsNumber@data& (0+255),b
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;MISC.c: 117: if(data >= '0' && data <= '9')
 22217  00AD0C  0E2F               	movlw	47
 22218  00AD0E  0100               	movlb	0	; () banked
 22219  00AD10  6560               	cpfsgt	IsNumber@data& (0+255),b
 22220  00AD12  D006               	goto	l10522
 22221                           
 22222                           ; BSR set to: 0
 22223  00AD14  0E3A               	movlw	58
 22224  00AD16  0100               	movlb	0	; () banked
 22225  00AD18  6160               	cpfslt	IsNumber@data& (0+255),b
 22226  00AD1A  D002               	goto	l10522
 22227                           
 22228                           ; BSR set to: 0
 22229                           ;MISC.c: 118: {
 22230                           ;MISC.c: 119: return 1;
 22231  00AD1C  0E01               	movlw	1
 22232                           
 22233                           ; BSR set to: 0
 22234  00AD1E  0012               	return	
 22235  00AD20                     l10522:
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;MISC.c: 120: }
 22239                           ;MISC.c: 121: return 0;
 22240  00AD20  0E00               	movlw	0
 22241  00AD22  0012               	return	
 22242                           
 22243                           ; BSR set to: 0
 22244                           
 22245                           ; BSR set to: 0
 22246  00AD24  0012               	return		;funcret
 22247  00AD26                     __end_of_IsNumber:
 22248                           	opt stack 0
 22249                           tblptru	equ	0xFF8
 22250                           tblptrh	equ	0xFF7
 22251                           tblptrl	equ	0xFF6
 22252                           tablat	equ	0xFF5
 22253                           prodh	equ	0xFF4
 22254                           prodl	equ	0xFF3
 22255                           intcon	equ	0xFF2
 22256                           indf0	equ	0xFEF
 22257                           postinc0	equ	0xFEE
 22258                           plusw0	equ	0xFEB
 22259                           fsr0h	equ	0xFEA
 22260                           fsr0l	equ	0xFE9
 22261                           wreg	equ	0xFE8
 22262                           indf1	equ	0xFE7
 22263                           postdec1	equ	0xFE5
 22264                           fsr1h	equ	0xFE2
 22265                           fsr1l	equ	0xFE1
 22266                           indf2	equ	0xFDF
 22267                           postinc2	equ	0xFDE
 22268                           postdec2	equ	0xFDD
 22269                           plusw2	equ	0xFDB
 22270                           fsr2h	equ	0xFDA
 22271                           fsr2l	equ	0xFD9
 22272                           status	equ	0xFD8
 22273                           
 22274 ;; *************** function _GetStringAfterComma *****************
 22275 ;; Defined at:
 22276 ;;		line 847 in file "MISC.c"
 22277 ;; Parameters:    Size  Location     Type
 22278 ;;  This            2    0[BANK0 ] PTR unsigned char 
 22279 ;;		 -> main@BluetoothString(100), 
 22280 ;;  CommaNumber     1    2[BANK0 ] unsigned char 
 22281 ;;  result          2    3[BANK0 ] PTR unsigned char 
 22282 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 22283 ;; Auto vars:     Size  Location     Type
 22284 ;;  count           1    7[BANK0 ] unsigned char 
 22285 ;;  tempCommaNum    1    6[BANK0 ] unsigned char 
 22286 ;; Return value:  Size  Location     Type
 22287 ;;                  1    wreg      unsigned char 
 22288 ;; Registers used:
 22289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22290 ;; Tracked objects:
 22291 ;;		On entry : 0/0
 22292 ;;		On exit  : 0/0
 22293 ;;		Unchanged: 0/0
 22294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22295 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22297 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22298 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22299 ;;Total ram usage:        8 bytes
 22300 ;; Hardware stack levels used:    1
 22301 ;; Hardware stack levels required when called:    5
 22302 ;; This function calls:
 22303 ;;		Nothing
 22304 ;; This function is called by:
 22305 ;;		_UseBluetooth
 22306 ;; This function uses a non-reentrant model
 22307 ;;
 22308                           
 22309                           	psect	text30
 22310  008E12                     __ptext30:
 22311                           	opt stack 0
 22312  008E12                     _GetStringAfterComma:
 22313                           	opt stack 24
 22314                           
 22315                           ;MISC.c: 849: unsigned char tempCommaNumber = 1;
 22316                           
 22317                           ; BSR set to: 0
 22318                           ;incstack = 0
 22319  008E12  0E01               	movlw	1
 22320  008E14  0100               	movlb	0	; () banked
 22321  008E16  6F66               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 22322                           
 22323                           ;MISC.c: 850: unsigned char count = 0;
 22324  008E18  0E00               	movlw	0
 22325  008E1A  0100               	movlb	0	; () banked
 22326  008E1C  6F67               	movwf	GetStringAfterComma@count& (0+255),b
 22327                           
 22328                           ; BSR set to: 0
 22329                           
 22330                           ;MISC.c: 852: SCAN:while(*This != ',' && *This != 0)
 22331  008E1E  D001               	goto	l12198
 22332                           
 22333                           ; BSR set to: 0
 22334  008E20  D02B               	goto	L11
 22335  008E22                     l12198:
 22336                           
 22337                           ; BSR set to: 0
 22338  008E22  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22339  008E26  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22340  008E2A  0E2C               	movlw	44
 22341  008E2C  18DE               	xorwf	postinc2,w,c
 22342  008E2E  B4D8               	btfsc	status,2,c
 22343  008E30  D009               	goto	l12202
 22344                           
 22345                           ; BSR set to: 0
 22346  008E32  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22347  008E36  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22348  008E3A  50DF               	movf	indf2,w,c
 22349  008E3C  B4D8               	btfsc	status,2,c
 22350  008E3E  D002               	goto	l12202
 22351  008E40  D01B               	goto	L11
 22352                           
 22353                           ; BSR set to: 0
 22354  008E42  D000               	goto	l12202
 22355  008E44                     l12202:
 22356                           
 22357                           ; BSR set to: 0
 22358                           ;MISC.c: 856: }
 22359                           ;MISC.c: 857: if(*This == 0)
 22360  008E44  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22361  008E48  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22362  008E4C  50DF               	movf	indf2,w,c
 22363  008E4E  A4D8               	btfss	status,2,c
 22364  008E50  D003               	goto	l12210
 22365                           
 22366                           ; BSR set to: 0
 22367                           ;MISC.c: 858: {
 22368                           ;MISC.c: 859: return 1;
 22369  008E52  0E01               	movlw	1
 22370                           
 22371                           ; BSR set to: 0
 22372  008E54  0012               	return	
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;MISC.c: 860: }
 22376  008E56  D015               	goto	l12216
 22377  008E58                     l12210:
 22378                           
 22379                           ; BSR set to: 0
 22380                           ;MISC.c: 861: else if(*This != ',')
 22381  008E58  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22382  008E5C  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22383  008E60  0E2C               	movlw	44
 22384  008E62  18DE               	xorwf	postinc2,w,c
 22385  008E64  B4D8               	btfsc	status,2,c
 22386  008E66  D00D               	goto	l12216
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;MISC.c: 862: {
 22390                           ;MISC.c: 863: if(tempCommaNumber < CommaNumber)
 22391  008E68  0100               	movlb	0	; () banked
 22392  008E6A  5162               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 22393  008E6C  0100               	movlb	0	; () banked
 22394  008E6E  5D66               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 22395  008E70  B0D8               	btfsc	status,0,c
 22396  008E72  D007               	goto	l12216
 22397                           
 22398                           ; BSR set to: 0
 22399                           ;MISC.c: 864: {
 22400                           ;MISC.c: 865: tempCommaNumber++;
 22401  008E74  0100               	movlb	0	; () banked
 22402  008E76  2B66               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 22403  008E78                     L11:
 22404                           
 22405                           ;MISC.c: 866: This++;
 22406  008E78  0100               	movlb	0	; () banked
 22407  008E7A  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 22408  008E7C  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 22409                           
 22410                           ;MISC.c: 867: goto SCAN;
 22411  008E7E  D7D1               	goto	l12198
 22412                           
 22413                           ; BSR set to: 0
 22414                           
 22415                           ; BSR set to: 0
 22416  008E80  D000               	goto	l12216
 22417  008E82                     l12216:
 22418                           
 22419                           ; BSR set to: 0
 22420                           ;MISC.c: 868: }
 22421                           ;MISC.c: 869: }
 22422                           ;MISC.c: 870: if(*This == 0)
 22423  008E82  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22424  008E86  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22425  008E8A  50DF               	movf	indf2,w,c
 22426  008E8C  A4D8               	btfss	status,2,c
 22427  008E8E  D002               	goto	l12222
 22428                           
 22429                           ; BSR set to: 0
 22430                           ;MISC.c: 871: {
 22431                           ;MISC.c: 872: return 1;
 22432  008E90  0E01               	movlw	1
 22433                           
 22434                           ; BSR set to: 0
 22435  008E92  0012               	return	
 22436  008E94                     l12222:
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;MISC.c: 873: }
 22440                           ;MISC.c: 874: This++;
 22441  008E94  0100               	movlb	0	; () banked
 22442  008E96  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 22443  008E98  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;MISC.c: 875: if(*This == ' ')
 22447  008E9A  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22448  008E9E  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22449  008EA2  0E20               	movlw	32
 22450  008EA4  18DE               	xorwf	postinc2,w,c
 22451  008EA6  A4D8               	btfss	status,2,c
 22452  008EA8  D004               	goto	l12228
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;MISC.c: 876: {
 22456                           ;MISC.c: 877: This++;
 22457  008EAA  0100               	movlb	0	; () banked
 22458  008EAC  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 22459  008EAE  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 22460                           
 22461                           ;MISC.c: 879: }
 22462  008EB0  D028               	goto	l12250
 22463  008EB2                     l12228:
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;MISC.c: 880: else if (*This == ',')
 22467  008EB2  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22468  008EB6  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22469  008EBA  0E2C               	movlw	44
 22470  008EBC  18DE               	xorwf	postinc2,w,c
 22471  008EBE  A4D8               	btfss	status,2,c
 22472  008EC0  D003               	goto	l12236
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;MISC.c: 881: {
 22476                           ;MISC.c: 882: return 2;
 22477  008EC2  0E02               	movlw	2
 22478                           
 22479                           ; BSR set to: 0
 22480  008EC4  0012               	return	
 22481                           
 22482                           ; BSR set to: 0
 22483                           ;MISC.c: 883: }
 22484  008EC6  D01D               	goto	l12250
 22485  008EC8                     l12236:
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;MISC.c: 884: else if(*This == 0)
 22489  008EC8  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22490  008ECC  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22491  008ED0  50DF               	movf	indf2,w,c
 22492  008ED2  A4D8               	btfss	status,2,c
 22493  008ED4  D016               	goto	l12250
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;MISC.c: 885: {
 22497                           ;MISC.c: 886: return 3;
 22498  008ED6  0E03               	movlw	3
 22499                           
 22500                           ; BSR set to: 0
 22501  008ED8  0012               	return	
 22502                           
 22503                           ; BSR set to: 0
 22504                           ;MISC.c: 887: }
 22505                           ;MISC.c: 888: while(*This != 0 && *This != ' ' && count < 10)
 22506                           
 22507                           ; BSR set to: 0
 22508                           
 22509                           ; BSR set to: 0
 22510  008EDA  D013               	goto	l12250
 22511  008EDC                     l12242:
 22512                           
 22513                           ; BSR set to: 0
 22514                           ;MISC.c: 889: {
 22515                           ;MISC.c: 890: *result = *This;
 22516  008EDC  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22517  008EE0  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22518  008EE4  C063  FFE1         	movff	GetStringAfterComma@result,fsr1l
 22519  008EE8  C064  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 22520  008EEC  CFDF FFE7          	movff	indf2,indf1
 22521                           
 22522                           ; BSR set to: 0
 22523                           ;MISC.c: 891: result++;
 22524  008EF0  0100               	movlb	0	; () banked
 22525  008EF2  4B63               	infsnz	GetStringAfterComma@result& (0+255),f,b
 22526  008EF4  2B64               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 22527                           
 22528                           ; BSR set to: 0
 22529                           ;MISC.c: 892: This++;
 22530  008EF6  0100               	movlb	0	; () banked
 22531  008EF8  4B60               	infsnz	GetStringAfterComma@This& (0+255),f,b
 22532  008EFA  2B61               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 22533                           
 22534                           ; BSR set to: 0
 22535                           ;MISC.c: 893: count++;
 22536  008EFC  0100               	movlb	0	; () banked
 22537  008EFE  2B67               	incf	GetStringAfterComma@count& (0+255),f,b
 22538  008F00  D000               	goto	l12250
 22539  008F02                     l12250:
 22540                           
 22541                           ; BSR set to: 0
 22542  008F02  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22543  008F06  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22544  008F0A  50DF               	movf	indf2,w,c
 22545  008F0C  B4D8               	btfsc	status,2,c
 22546  008F0E  D00D               	goto	l12256
 22547                           
 22548                           ; BSR set to: 0
 22549  008F10  C060  FFD9         	movff	GetStringAfterComma@This,fsr2l
 22550  008F14  C061  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 22551  008F18  0E20               	movlw	32
 22552  008F1A  18DE               	xorwf	postinc2,w,c
 22553  008F1C  B4D8               	btfsc	status,2,c
 22554  008F1E  D005               	goto	l12256
 22555                           
 22556                           ; BSR set to: 0
 22557  008F20  0E09               	movlw	9
 22558  008F22  0100               	movlb	0	; () banked
 22559  008F24  6567               	cpfsgt	GetStringAfterComma@count& (0+255),b
 22560  008F26  D7DA               	goto	l12242
 22561                           
 22562                           ; BSR set to: 0
 22563  008F28  D000               	goto	l12256
 22564  008F2A                     l12256:
 22565                           
 22566                           ; BSR set to: 0
 22567                           ;MISC.c: 894: }
 22568                           ;MISC.c: 895: return 0;
 22569  008F2A  0E00               	movlw	0
 22570  008F2C  0012               	return	
 22571                           
 22572                           ; BSR set to: 0
 22573                           
 22574                           ; BSR set to: 0
 22575  008F2E  0012               	return		;funcret
 22576  008F30                     __end_of_GetStringAfterComma:
 22577                           	opt stack 0
 22578                           tblptru	equ	0xFF8
 22579                           tblptrh	equ	0xFF7
 22580                           tblptrl	equ	0xFF6
 22581                           tablat	equ	0xFF5
 22582                           prodh	equ	0xFF4
 22583                           prodl	equ	0xFF3
 22584                           intcon	equ	0xFF2
 22585                           indf0	equ	0xFEF
 22586                           postinc0	equ	0xFEE
 22587                           plusw0	equ	0xFEB
 22588                           fsr0h	equ	0xFEA
 22589                           fsr0l	equ	0xFE9
 22590                           wreg	equ	0xFE8
 22591                           indf1	equ	0xFE7
 22592                           postdec1	equ	0xFE5
 22593                           fsr1h	equ	0xFE2
 22594                           fsr1l	equ	0xFE1
 22595                           indf2	equ	0xFDF
 22596                           postinc2	equ	0xFDE
 22597                           postdec2	equ	0xFDD
 22598                           plusw2	equ	0xFDB
 22599                           fsr2h	equ	0xFDA
 22600                           fsr2l	equ	0xFD9
 22601                           status	equ	0xFD8
 22602                           
 22603 ;; *************** function _GetNumberUnsigned *****************
 22604 ;; Defined at:
 22605 ;;		line 665 in file "MISC.c"
 22606 ;; Parameters:    Size  Location     Type
 22607 ;;  This            2   12[BANK0 ] PTR unsigned char 
 22608 ;;		 -> main@BluetoothString(100), 
 22609 ;;  CommaNumber     1   14[BANK0 ] unsigned char 
 22610 ;;  result          2   15[BANK0 ] PTR unsigned long 
 22611 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 22612 ;; Auto vars:     Size  Location     Type
 22613 ;;  temp            4   26[BANK0 ] long 
 22614 ;;  tempThis        1   30[BANK0 ] unsigned char 
 22615 ;;  i               1   25[BANK0 ] unsigned char 
 22616 ;;  Hex             1   24[BANK0 ] unsigned char 
 22617 ;;  count           1   23[BANK0 ] unsigned char 
 22618 ;;  tempCommaNum    1   22[BANK0 ] unsigned char 
 22619 ;; Return value:  Size  Location     Type
 22620 ;;                  1    wreg      unsigned char 
 22621 ;; Registers used:
 22622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22623 ;; Tracked objects:
 22624 ;;		On entry : 0/0
 22625 ;;		On exit  : 0/0
 22626 ;;		Unchanged: 0/0
 22627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22628 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22629 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22630 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22631 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22632 ;;Total ram usage:       19 bytes
 22633 ;; Hardware stack levels used:    1
 22634 ;; Hardware stack levels required when called:    6
 22635 ;; This function calls:
 22636 ;;		_IsLetter
 22637 ;;		___lmul
 22638 ;;		_lowercaseChar
 22639 ;; This function is called by:
 22640 ;;		_UseBluetooth
 22641 ;; This function uses a non-reentrant model
 22642 ;;
 22643                           
 22644                           	psect	text31
 22645  00654E                     __ptext31:
 22646                           	opt stack 0
 22647  00654E                     _GetNumberUnsigned:
 22648                           	opt stack 23
 22649                           
 22650                           ;MISC.c: 667: unsigned char i =0;
 22651                           
 22652                           ; BSR set to: 0
 22653                           ;incstack = 0
 22654  00654E  0E00               	movlw	0
 22655  006550  0100               	movlb	0	; () banked
 22656  006552  6F79               	movwf	GetNumberUnsigned@i& (0+255),b
 22657                           
 22658                           ;MISC.c: 668: long temp =0;
 22659  006554  0E00               	movlw	0
 22660  006556  0100               	movlb	0	; () banked
 22661  006558  6F7A               	movwf	GetNumberUnsigned@temp& (0+255),b
 22662  00655A  0E00               	movlw	0
 22663  00655C  6F7B               	movwf	(GetNumberUnsigned@temp+1)& (0+255),b
 22664  00655E  0E00               	movlw	0
 22665  006560  6F7C               	movwf	(GetNumberUnsigned@temp+2)& (0+255),b
 22666  006562  0E00               	movlw	0
 22667  006564  6F7D               	movwf	(GetNumberUnsigned@temp+3)& (0+255),b
 22668                           
 22669                           ;MISC.c: 669: unsigned char tempCommaNumber = 1;
 22670  006566  0E01               	movlw	1
 22671  006568  0100               	movlb	0	; () banked
 22672  00656A  6F76               	movwf	GetNumberUnsigned@tempCommaNumber& (0+255),b
 22673                           
 22674                           ;MISC.c: 670: unsigned char count =0;
 22675  00656C  0E00               	movlw	0
 22676  00656E  0100               	movlb	0	; () banked
 22677  006570  6F77               	movwf	GetNumberUnsigned@count& (0+255),b
 22678                           
 22679                           ;MISC.c: 671: unsigned char Hex = 0;
 22680  006572  0E00               	movlw	0
 22681  006574  0100               	movlb	0	; () banked
 22682  006576  6F78               	movwf	GetNumberUnsigned@Hex& (0+255),b
 22683                           
 22684                           ;MISC.c: 672: unsigned char tempThis;
 22685                           ;MISC.c: 674: while(*This != 0)
 22686  006578  D038               	goto	l11982
 22687  00657A                     l11962:
 22688                           
 22689                           ; BSR set to: 0
 22690                           ;MISC.c: 675: {
 22691                           ;MISC.c: 676: if(*This == '0')
 22692  00657A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22693  00657E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22694  006582  0E30               	movlw	48
 22695  006584  18DE               	xorwf	postinc2,w,c
 22696  006586  A4D8               	btfss	status,2,c
 22697  006588  D02A               	goto	l11978
 22698                           
 22699                           ; BSR set to: 0
 22700                           ;MISC.c: 677: {
 22701                           ;MISC.c: 678: count++;
 22702  00658A  0100               	movlb	0	; () banked
 22703  00658C  2B77               	incf	GetNumberUnsigned@count& (0+255),f,b
 22704                           
 22705                           ;MISC.c: 679: This++;
 22706  00658E  0100               	movlb	0	; () banked
 22707  006590  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22708  006592  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22709                           
 22710                           ; BSR set to: 0
 22711                           ;MISC.c: 680: if(*This == 'x' || *This == 'X')
 22712  006594  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22713  006598  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22714  00659C  0E78               	movlw	120
 22715  00659E  18DE               	xorwf	postinc2,w,c
 22716  0065A0  B4D8               	btfsc	status,2,c
 22717  0065A2  D008               	goto	l11970
 22718                           
 22719                           ; BSR set to: 0
 22720  0065A4  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22721  0065A8  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22722  0065AC  0E58               	movlw	88
 22723  0065AE  18DE               	xorwf	postinc2,w,c
 22724  0065B0  A4D8               	btfss	status,2,c
 22725  0065B2  D015               	goto	l11978
 22726  0065B4                     l11970:
 22727                           
 22728                           ; BSR set to: 0
 22729                           ;MISC.c: 681: {
 22730                           ;MISC.c: 682: This++;
 22731  0065B4  0100               	movlb	0	; () banked
 22732  0065B6  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22733  0065B8  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22734                           
 22735                           ; BSR set to: 0
 22736                           ;MISC.c: 683: if(*This >='0' && *This <='9')
 22737  0065BA  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22738  0065BE  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22739  0065C2  0E2F               	movlw	47
 22740  0065C4  64DF               	cpfsgt	indf2,c
 22741  0065C6  D00B               	goto	l11978
 22742                           
 22743                           ; BSR set to: 0
 22744  0065C8  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22745  0065CC  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22746  0065D0  0E3A               	movlw	58
 22747  0065D2  60DF               	cpfslt	indf2,c
 22748  0065D4  D004               	goto	l11978
 22749                           
 22750                           ; BSR set to: 0
 22751                           ;MISC.c: 684: {
 22752                           ;MISC.c: 685: Hex = 1;
 22753  0065D6  0E01               	movlw	1
 22754  0065D8  0100               	movlb	0	; () banked
 22755  0065DA  6F78               	movwf	GetNumberUnsigned@Hex& (0+255),b
 22756                           
 22757                           ; BSR set to: 0
 22758                           
 22759                           ; BSR set to: 0
 22760  0065DC  D000               	goto	l11978
 22761  0065DE                     l11978:
 22762                           
 22763                           ; BSR set to: 0
 22764                           ;MISC.c: 686: }
 22765                           ;MISC.c: 687: }
 22766                           ;MISC.c: 688: }
 22767                           ;MISC.c: 689: count++;
 22768  0065DE  0100               	movlb	0	; () banked
 22769  0065E0  2B77               	incf	GetNumberUnsigned@count& (0+255),f,b
 22770                           
 22771                           ; BSR set to: 0
 22772                           ;MISC.c: 690: This++;
 22773  0065E2  0100               	movlb	0	; () banked
 22774  0065E4  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22775  0065E6  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22776  0065E8  D000               	goto	l11982
 22777  0065EA                     l11982:
 22778                           
 22779                           ; BSR set to: 0
 22780  0065EA  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22781  0065EE  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22782  0065F2  50DF               	movf	indf2,w,c
 22783  0065F4  A4D8               	btfss	status,2,c
 22784  0065F6  D7C1               	goto	l11962
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;MISC.c: 691: }
 22788                           ;MISC.c: 692: This-=count;
 22789                           
 22790                           ; BSR set to: 0
 22791  0065F8  0100               	movlb	0	; () banked
 22792  0065FA  5177               	movf	GetNumberUnsigned@count& (0+255),w,b
 22793  0065FC  0D01               	mullw	1
 22794  0065FE  50F3               	movf	prodl,w,c
 22795  006600  0100               	movlb	0	; () banked
 22796  006602  5F6C               	subwf	GetNumberUnsigned@This& (0+255),f,b
 22797  006604  50F4               	movf	prodh,w,c
 22798  006606  0100               	movlb	0	; () banked
 22799  006608  5B6D               	subwfb	(GetNumberUnsigned@This+1)& (0+255),f,b
 22800                           
 22801                           ; BSR set to: 0
 22802                           
 22803                           ;MISC.c: 694: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 22804  00660A  D001               	goto	l11988
 22805                           
 22806                           ; BSR set to: 0
 22807  00660C  D03B               	goto	L12
 22808  00660E                     l11988:
 22809                           
 22810                           ; BSR set to: 0
 22811  00660E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22812  006612  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22813  006616  0E3D               	movlw	61
 22814  006618  18DE               	xorwf	postinc2,w,c
 22815  00661A  B4D8               	btfsc	status,2,c
 22816  00661C  D011               	goto	l11994
 22817                           
 22818                           ; BSR set to: 0
 22819  00661E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22820  006622  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22821  006626  0E2C               	movlw	44
 22822  006628  18DE               	xorwf	postinc2,w,c
 22823  00662A  B4D8               	btfsc	status,2,c
 22824  00662C  D009               	goto	l11994
 22825                           
 22826                           ; BSR set to: 0
 22827  00662E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22828  006632  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22829  006636  50DF               	movf	indf2,w,c
 22830  006638  B4D8               	btfsc	status,2,c
 22831  00663A  D002               	goto	l11994
 22832  00663C  D023               	goto	L12
 22833                           
 22834                           ; BSR set to: 0
 22835  00663E  D000               	goto	l11994
 22836  006640                     l11994:
 22837                           
 22838                           ; BSR set to: 0
 22839                           ;MISC.c: 698: }
 22840                           ;MISC.c: 699: if(*This == 0)
 22841  006640  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22842  006644  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22843  006648  50DF               	movf	indf2,w,c
 22844  00664A  A4D8               	btfss	status,2,c
 22845  00664C  D003               	goto	l12002
 22846                           
 22847                           ; BSR set to: 0
 22848                           ;MISC.c: 700: {
 22849                           ;MISC.c: 701: return 1;
 22850  00664E  0E01               	movlw	1
 22851                           
 22852                           ; BSR set to: 0
 22853  006650  0012               	return	
 22854                           
 22855                           ; BSR set to: 0
 22856                           ;MISC.c: 702: }
 22857  006652  D01D               	goto	l12010
 22858  006654                     l12002:
 22859                           
 22860                           ; BSR set to: 0
 22861                           ;MISC.c: 703: else if(*This != '=' || *This != ',')
 22862  006654  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22863  006658  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22864  00665C  0E3D               	movlw	61
 22865  00665E  18DE               	xorwf	postinc2,w,c
 22866  006660  A4D8               	btfss	status,2,c
 22867  006662  D008               	goto	l12006
 22868                           
 22869                           ; BSR set to: 0
 22870  006664  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22871  006668  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22872  00666C  0E2C               	movlw	44
 22873  00666E  18DE               	xorwf	postinc2,w,c
 22874  006670  B4D8               	btfsc	status,2,c
 22875  006672  D00D               	goto	l12010
 22876  006674                     l12006:
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;MISC.c: 704: {
 22880                           ;MISC.c: 705: if(tempCommaNumber < CommaNumber)
 22881  006674  0100               	movlb	0	; () banked
 22882  006676  516E               	movf	GetNumberUnsigned@CommaNumber& (0+255),w,b
 22883  006678  0100               	movlb	0	; () banked
 22884  00667A  5D76               	subwf	GetNumberUnsigned@tempCommaNumber& (0+255),w,b
 22885  00667C  B0D8               	btfsc	status,0,c
 22886  00667E  D007               	goto	l12010
 22887                           
 22888                           ; BSR set to: 0
 22889                           ;MISC.c: 706: {
 22890                           ;MISC.c: 707: tempCommaNumber++;
 22891  006680  0100               	movlb	0	; () banked
 22892  006682  2B76               	incf	GetNumberUnsigned@tempCommaNumber& (0+255),f,b
 22893  006684                     L12:
 22894                           
 22895                           ;MISC.c: 708: This++;
 22896  006684  0100               	movlb	0	; () banked
 22897  006686  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22898  006688  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22899                           
 22900                           ;MISC.c: 709: goto SCAN;
 22901  00668A  D7C1               	goto	l11988
 22902                           
 22903                           ; BSR set to: 0
 22904                           
 22905                           ; BSR set to: 0
 22906  00668C  D000               	goto	l12010
 22907  00668E                     l12010:
 22908                           
 22909                           ; BSR set to: 0
 22910                           ;MISC.c: 710: }
 22911                           ;MISC.c: 711: }
 22912                           ;MISC.c: 712: if(*This == 0)
 22913  00668E  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22914  006692  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22915  006696  50DF               	movf	indf2,w,c
 22916  006698  A4D8               	btfss	status,2,c
 22917  00669A  D002               	goto	l12016
 22918                           
 22919                           ; BSR set to: 0
 22920                           ;MISC.c: 713: {
 22921                           ;MISC.c: 714: return 1;
 22922  00669C  0E01               	movlw	1
 22923                           
 22924                           ; BSR set to: 0
 22925  00669E  0012               	return	
 22926  0066A0                     l12016:
 22927                           
 22928                           ; BSR set to: 0
 22929                           ;MISC.c: 715: }
 22930                           ;MISC.c: 716: This++;
 22931  0066A0  0100               	movlb	0	; () banked
 22932  0066A2  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22933  0066A4  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22934                           
 22935                           ; BSR set to: 0
 22936                           ;MISC.c: 717: if(*This == ' ')
 22937  0066A6  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22938  0066AA  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22939  0066AE  0E20               	movlw	32
 22940  0066B0  18DE               	xorwf	postinc2,w,c
 22941  0066B2  A4D8               	btfss	status,2,c
 22942  0066B4  D004               	goto	l12022
 22943                           
 22944                           ; BSR set to: 0
 22945                           ;MISC.c: 718: {
 22946                           ;MISC.c: 719: This++;
 22947  0066B6  0100               	movlb	0	; () banked
 22948  0066B8  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 22949  0066BA  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 22950                           
 22951                           ;MISC.c: 721: }
 22952  0066BC  D028               	goto	l12046
 22953  0066BE                     l12022:
 22954                           
 22955                           ; BSR set to: 0
 22956                           ;MISC.c: 722: else if (*This == '=' || *This == ',')
 22957  0066BE  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22958  0066C2  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22959  0066C6  0E3D               	movlw	61
 22960  0066C8  18DE               	xorwf	postinc2,w,c
 22961  0066CA  B4D8               	btfsc	status,2,c
 22962  0066CC  D008               	goto	l12026
 22963                           
 22964                           ; BSR set to: 0
 22965  0066CE  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22966  0066D2  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22967  0066D6  0E2C               	movlw	44
 22968  0066D8  18DE               	xorwf	postinc2,w,c
 22969  0066DA  A4D8               	btfss	status,2,c
 22970  0066DC  D003               	goto	l12032
 22971  0066DE                     l12026:
 22972                           
 22973                           ; BSR set to: 0
 22974                           ;MISC.c: 723: {
 22975                           ;MISC.c: 724: return 2;
 22976  0066DE  0E02               	movlw	2
 22977                           
 22978                           ; BSR set to: 0
 22979  0066E0  0012               	return	
 22980                           
 22981                           ; BSR set to: 0
 22982                           ;MISC.c: 725: }
 22983  0066E2  D015               	goto	l12046
 22984  0066E4                     l12032:
 22985                           
 22986                           ; BSR set to: 0
 22987                           ;MISC.c: 726: else if(*This == '-')
 22988  0066E4  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 22989  0066E8  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 22990  0066EC  0E2D               	movlw	45
 22991  0066EE  18DE               	xorwf	postinc2,w,c
 22992  0066F0  A4D8               	btfss	status,2,c
 22993  0066F2  D003               	goto	l12040
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;MISC.c: 727: {
 22997                           ;MISC.c: 728: return 5;
 22998  0066F4  0E05               	movlw	5
 22999                           
 23000                           ; BSR set to: 0
 23001  0066F6  0012               	return	
 23002                           
 23003                           ; BSR set to: 0
 23004                           ;MISC.c: 730: }
 23005  0066F8  D00A               	goto	l12046
 23006  0066FA                     l12040:
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;MISC.c: 731: else if(*This == 0)
 23010  0066FA  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23011  0066FE  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23012  006702  50DF               	movf	indf2,w,c
 23013  006704  A4D8               	btfss	status,2,c
 23014  006706  D003               	goto	l12046
 23015                           
 23016                           ; BSR set to: 0
 23017                           ;MISC.c: 732: {
 23018                           ;MISC.c: 733: return 3;
 23019  006708  0E03               	movlw	3
 23020                           
 23021                           ; BSR set to: 0
 23022  00670A  0012               	return	
 23023                           
 23024                           ; BSR set to: 0
 23025                           
 23026                           ; BSR set to: 0
 23027                           
 23028                           ; BSR set to: 0
 23029  00670C  D000               	goto	l12046
 23030  00670E                     l12046:
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;MISC.c: 734: }
 23034                           ;MISC.c: 735: if(Hex)
 23035  00670E  0100               	movlb	0	; () banked
 23036  006710  5178               	movf	GetNumberUnsigned@Hex& (0+255),w,b
 23037  006712  0100               	movlb	0	; () banked
 23038  006714  A4D8               	btfss	status,2,c
 23039  006716  D006               	goto	l12052
 23040  006718  D119               	goto	l12110
 23041                           
 23042                           ; BSR set to: 0
 23043                           ;MISC.c: 736: {
 23044                           ;MISC.c: 737: while(*This != 'x' && *This != 'X')
 23045  00671A  D004               	goto	l12052
 23046  00671C                     l12050:
 23047                           
 23048                           ; BSR set to: 0
 23049                           ;MISC.c: 738: {
 23050                           ;MISC.c: 740: This++;
 23051  00671C  0100               	movlb	0	; () banked
 23052  00671E  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 23053  006720  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 23054  006722  D000               	goto	l12052
 23055  006724                     l12052:
 23056                           
 23057                           ; BSR set to: 0
 23058  006724  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23059  006728  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23060  00672C  0E78               	movlw	120
 23061  00672E  18DE               	xorwf	postinc2,w,c
 23062  006730  B4D8               	btfsc	status,2,c
 23063  006732  D108               	goto	l12108
 23064                           
 23065                           ; BSR set to: 0
 23066  006734  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23067  006738  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23068  00673C  0E58               	movlw	88
 23069  00673E  18DE               	xorwf	postinc2,w,c
 23070  006740  B4D8               	btfsc	status,2,c
 23071  006742  D100               	goto	l12108
 23072  006744  D7EB               	goto	l12050
 23073                           
 23074                           ; BSR set to: 0
 23075  006746  D0FE               	goto	l12108
 23076                           
 23077                           ; BSR set to: 0
 23078  006748  D0FD               	goto	l12108
 23079                           
 23080                           ; BSR set to: 0
 23081                           ;MISC.c: 743: }
 23082                           ;MISC.c: 744: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;MISC.c: 741: }
 23086                           ;MISC.c: 742: This++;
 23087  00674A  D100               	goto	l12110
 23088  00674C                     l12058:
 23089                           
 23090                           ; BSR set to: 0
 23091                           ;MISC.c: 745: {
 23092                           ;MISC.c: 746: if(!Hex)
 23093  00674C  0100               	movlb	0	; () banked
 23094  00674E  5178               	movf	GetNumberUnsigned@Hex& (0+255),w,b
 23095  006750  0100               	movlb	0	; () banked
 23096  006752  A4D8               	btfss	status,2,c
 23097  006754  D05B               	goto	l12076
 23098                           
 23099                           ; BSR set to: 0
 23100                           ;MISC.c: 747: {
 23101                           ;MISC.c: 748: if(*This >=48 && *This <= 57)
 23102  006756  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23103  00675A  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23104  00675E  0E2F               	movlw	47
 23105  006760  64DF               	cpfsgt	indf2,c
 23106  006762  D0F0               	goto	l12108
 23107                           
 23108                           ; BSR set to: 0
 23109  006764  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23110  006768  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23111  00676C  0E3A               	movlw	58
 23112  00676E  60DF               	cpfslt	indf2,c
 23113  006770  D0E9               	goto	l12108
 23114                           
 23115                           ; BSR set to: 0
 23116                           ;MISC.c: 749: {
 23117                           ;MISC.c: 750: temp = temp * 10;
 23118  006772  C07A  F060         	movff	GetNumberUnsigned@temp,___lmul@multiplier
 23119  006776  C07B  F061         	movff	GetNumberUnsigned@temp+1,___lmul@multiplier+1
 23120  00677A  C07C  F062         	movff	GetNumberUnsigned@temp+2,___lmul@multiplier+2
 23121  00677E  C07D  F063         	movff	GetNumberUnsigned@temp+3,___lmul@multiplier+3
 23122  006782  0E0A               	movlw	10
 23123  006784  0100               	movlb	0	; () banked
 23124  006786  6F64               	movwf	___lmul@multiplicand& (0+255),b
 23125  006788  0E00               	movlw	0
 23126  00678A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23127  00678C  0E00               	movlw	0
 23128  00678E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23129  006790  0E00               	movlw	0
 23130  006792  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23131  006794  ECF9  F051         	call	___lmul	;wreg free
 23132  006798  C060  F07A         	movff	?___lmul,GetNumberUnsigned@temp
 23133  00679C  C061  F07B         	movff	?___lmul+1,GetNumberUnsigned@temp+1
 23134  0067A0  C062  F07C         	movff	?___lmul+2,GetNumberUnsigned@temp+2
 23135  0067A4  C063  F07D         	movff	?___lmul+3,GetNumberUnsigned@temp+3
 23136                           
 23137                           ;MISC.c: 751: temp += *This - 48;
 23138  0067A8  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23139  0067AC  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23140  0067B0  50DF               	movf	indf2,w,c
 23141  0067B2  0100               	movlb	0	; () banked
 23142  0067B4  6F71               	movwf	??_GetNumberUnsigned& (0+255),b
 23143  0067B6  0ED0               	movlw	208
 23144  0067B8  0100               	movlb	0	; () banked
 23145  0067BA  2571               	addwf	??_GetNumberUnsigned& (0+255),w,b
 23146  0067BC  0100               	movlb	0	; () banked
 23147  0067BE  6F72               	movwf	(??_GetNumberUnsigned+1)& (0+255),b
 23148  0067C0  0100               	movlb	0	; () banked
 23149  0067C2  6B73               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 23150  0067C4  0EFF               	movlw	255
 23151  0067C6  2373               	addwfc	(??_GetNumberUnsigned+2)& (0+255),f,b
 23152  0067C8  0100               	movlb	0	; () banked
 23153  0067CA  6B74               	clrf	(??_GetNumberUnsigned+3)& (0+255),b
 23154  0067CC  0100               	movlb	0	; () banked
 23155  0067CE  BF73               	btfsc	(??_GetNumberUnsigned+2)& (0+255),7,b
 23156  0067D0  0774               	decf	(??_GetNumberUnsigned+3)& (0+255),f,b
 23157  0067D2  0100               	movlb	0	; () banked
 23158  0067D4  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 23159  0067D6  0100               	movlb	0	; () banked
 23160  0067D8  6F75               	movwf	(??_GetNumberUnsigned+4)& (0+255),b
 23161  0067DA  0100               	movlb	0	; () banked
 23162  0067DC  5172               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 23163  0067DE  0100               	movlb	0	; () banked
 23164  0067E0  277A               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 23165  0067E2  0100               	movlb	0	; () banked
 23166  0067E4  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 23167  0067E6  0100               	movlb	0	; () banked
 23168  0067E8  237B               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 23169  0067EA  0100               	movlb	0	; () banked
 23170  0067EC  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 23171  0067EE  0100               	movlb	0	; () banked
 23172  0067F0  237C               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 23173  0067F2  0100               	movlb	0	; () banked
 23174  0067F4  5175               	movf	(??_GetNumberUnsigned+4)& (0+255),w,b
 23175  0067F6  0100               	movlb	0	; () banked
 23176  0067F8  237D               	addwfc	(GetNumberUnsigned@temp+3)& (0+255),f,b
 23177                           
 23178                           ; BSR set to: 0
 23179                           ;MISC.c: 752: i++;
 23180  0067FA  0100               	movlb	0	; () banked
 23181  0067FC  2B79               	incf	GetNumberUnsigned@i& (0+255),f,b
 23182  0067FE                     l12070:
 23183                           
 23184                           ; BSR set to: 0
 23185                           ;MISC.c: 753: if(i>32)
 23186  0067FE  0E20               	movlw	32
 23187  006800  0100               	movlb	0	; () banked
 23188  006802  6579               	cpfsgt	GetNumberUnsigned@i& (0+255),b
 23189  006804  D09F               	goto	l12108
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;MISC.c: 754: {
 23193                           ;MISC.c: 755: return 4;
 23194  006806  0E04               	movlw	4
 23195                           
 23196                           ; BSR set to: 0
 23197  006808  0012               	return	
 23198                           
 23199                           ; BSR set to: 0
 23200                           ;MISC.c: 756: }
 23201                           ;MISC.c: 757: }
 23202                           ;MISC.c: 758: }
 23203                           
 23204                           ; BSR set to: 0
 23205  00680A  D09C               	goto	l12108
 23206  00680C                     l12076:
 23207                           
 23208                           ; BSR set to: 0
 23209                           ;MISC.c: 759: else
 23210                           ;MISC.c: 760: {
 23211                           ;MISC.c: 761: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 23212  00680C  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23213  006810  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23214  006814  0E2F               	movlw	47
 23215  006816  64DF               	cpfsgt	indf2,c
 23216  006818  D008               	goto	l12080
 23217                           
 23218                           ; BSR set to: 0
 23219  00681A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23220  00681E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23221  006822  0E39               	movlw	57
 23222  006824  64DF               	cpfsgt	indf2,c
 23223  006826  D01F               	goto	l12088
 23224  006828  D000               	goto	l12080
 23225  00682A                     l12080:
 23226                           
 23227                           ; BSR set to: 0
 23228  00682A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23229  00682E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23230  006832  0E40               	movlw	64
 23231  006834  64DF               	cpfsgt	indf2,c
 23232  006836  D008               	goto	l12084
 23233                           
 23234                           ; BSR set to: 0
 23235  006838  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23236  00683C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23237  006840  0E46               	movlw	70
 23238  006842  64DF               	cpfsgt	indf2,c
 23239  006844  D010               	goto	l12088
 23240  006846  D000               	goto	l12084
 23241  006848                     l12084:
 23242                           
 23243                           ; BSR set to: 0
 23244  006848  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23245  00684C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23246  006850  0E60               	movlw	96
 23247  006852  64DF               	cpfsgt	indf2,c
 23248  006854  D077               	goto	l12108
 23249                           
 23250                           ; BSR set to: 0
 23251  006856  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23252  00685A  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23253  00685E  0E67               	movlw	103
 23254  006860  60DF               	cpfslt	indf2,c
 23255  006862  D070               	goto	l12108
 23256  006864  D000               	goto	l12088
 23257  006866                     l12088:
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;MISC.c: 762: {
 23261                           ;MISC.c: 763: temp <<= 4;
 23262  006866  0100               	movlb	0	; () banked
 23263  006868  0E04               	movlw	4
 23264  00686A                     u13395:
 23265  00686A  90D8               	bcf	status,0,c
 23266  00686C  377A               	rlcf	GetNumberUnsigned@temp& (0+255),f,b
 23267  00686E  377B               	rlcf	(GetNumberUnsigned@temp+1)& (0+255),f,b
 23268  006870  377C               	rlcf	(GetNumberUnsigned@temp+2)& (0+255),f,b
 23269  006872  377D               	rlcf	(GetNumberUnsigned@temp+3)& (0+255),f,b
 23270  006874  2EE8               	decfsz	wreg,f,c
 23271  006876  D7F9               	goto	u13395
 23272                           
 23273                           ; BSR set to: 0
 23274                           ;MISC.c: 764: tempThis = *This;
 23275  006878  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23276  00687C  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23277  006880  50DF               	movf	indf2,w,c
 23278  006882  0100               	movlb	0	; () banked
 23279  006884  6F7E               	movwf	GetNumberUnsigned@tempThis& (0+255),b
 23280                           
 23281                           ; BSR set to: 0
 23282                           ;MISC.c: 765: if(IsLetter(tempThis))
 23283  006886  0100               	movlb	0	; () banked
 23284  006888  517E               	movf	GetNumberUnsigned@tempThis& (0+255),w,b
 23285  00688A  EC7F  F055         	call	_IsLetter
 23286  00688E  0900               	iorlw	0
 23287  006890  B4D8               	btfsc	status,2,c
 23288  006892  D029               	goto	l12098
 23289                           
 23290                           ;MISC.c: 766: {
 23291                           ;MISC.c: 767: lowercaseChar(&tempThis);
 23292  006894  0E7E               	movlw	low GetNumberUnsigned@tempThis
 23293  006896  0100               	movlb	0	; () banked
 23294  006898  6F60               	movwf	lowercaseChar@Input& (0+255),b
 23295  00689A  0E00               	movlw	high GetNumberUnsigned@tempThis
 23296  00689C  0100               	movlb	0	; () banked
 23297  00689E  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 23298  0068A0  EC0E  F056         	call	_lowercaseChar	;wreg free
 23299                           
 23300                           ;MISC.c: 768: temp += (tempThis - 87);
 23301  0068A4  0EA9               	movlw	169
 23302  0068A6  0100               	movlb	0	; () banked
 23303  0068A8  257E               	addwf	GetNumberUnsigned@tempThis& (0+255),w,b
 23304  0068AA  0100               	movlb	0	; () banked
 23305  0068AC  6F71               	movwf	??_GetNumberUnsigned& (0+255),b
 23306  0068AE  0100               	movlb	0	; () banked
 23307  0068B0  6B72               	clrf	(??_GetNumberUnsigned+1)& (0+255),b
 23308  0068B2  0EFF               	movlw	255
 23309  0068B4  2372               	addwfc	(??_GetNumberUnsigned+1)& (0+255),f,b
 23310  0068B6  0100               	movlb	0	; () banked
 23311  0068B8  6B73               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 23312  0068BA  0100               	movlb	0	; () banked
 23313  0068BC  BF72               	btfsc	(??_GetNumberUnsigned+1)& (0+255),7,b
 23314  0068BE  0773               	decf	(??_GetNumberUnsigned+2)& (0+255),f,b
 23315  0068C0  0100               	movlb	0	; () banked
 23316  0068C2  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 23317  0068C4  0100               	movlb	0	; () banked
 23318  0068C6  6F74               	movwf	(??_GetNumberUnsigned+3)& (0+255),b
 23319  0068C8  0100               	movlb	0	; () banked
 23320  0068CA  5171               	movf	??_GetNumberUnsigned& (0+255),w,b
 23321  0068CC  0100               	movlb	0	; () banked
 23322  0068CE  277A               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 23323  0068D0  0100               	movlb	0	; () banked
 23324  0068D2  5172               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 23325  0068D4  0100               	movlb	0	; () banked
 23326  0068D6  237B               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 23327  0068D8  0100               	movlb	0	; () banked
 23328  0068DA  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 23329  0068DC  0100               	movlb	0	; () banked
 23330  0068DE  237C               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 23331  0068E0  0100               	movlb	0	; () banked
 23332  0068E2  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 23333  0068E4  D027               	goto	L13
 23334  0068E6                     l12098:
 23335                           
 23336                           ;MISC.c: 770: else
 23337                           ;MISC.c: 771: {
 23338                           ;MISC.c: 772: temp += (*This - 48);
 23339  0068E6  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23340  0068EA  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23341  0068EE  50DF               	movf	indf2,w,c
 23342  0068F0  0100               	movlb	0	; () banked
 23343  0068F2  6F71               	movwf	??_GetNumberUnsigned& (0+255),b
 23344  0068F4  0ED0               	movlw	208
 23345  0068F6  0100               	movlb	0	; () banked
 23346  0068F8  2571               	addwf	??_GetNumberUnsigned& (0+255),w,b
 23347  0068FA  0100               	movlb	0	; () banked
 23348  0068FC  6F72               	movwf	(??_GetNumberUnsigned+1)& (0+255),b
 23349  0068FE  0100               	movlb	0	; () banked
 23350  006900  6B73               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 23351  006902  0EFF               	movlw	255
 23352  006904  2373               	addwfc	(??_GetNumberUnsigned+2)& (0+255),f,b
 23353  006906  0100               	movlb	0	; () banked
 23354  006908  6B74               	clrf	(??_GetNumberUnsigned+3)& (0+255),b
 23355  00690A  0100               	movlb	0	; () banked
 23356  00690C  BF73               	btfsc	(??_GetNumberUnsigned+2)& (0+255),7,b
 23357  00690E  0774               	decf	(??_GetNumberUnsigned+3)& (0+255),f,b
 23358  006910  0100               	movlb	0	; () banked
 23359  006912  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 23360  006914  0100               	movlb	0	; () banked
 23361  006916  6F75               	movwf	(??_GetNumberUnsigned+4)& (0+255),b
 23362  006918  0100               	movlb	0	; () banked
 23363  00691A  5172               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 23364  00691C  0100               	movlb	0	; () banked
 23365  00691E  277A               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 23366  006920  0100               	movlb	0	; () banked
 23367  006922  5173               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 23368  006924  0100               	movlb	0	; () banked
 23369  006926  237B               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 23370  006928  0100               	movlb	0	; () banked
 23371  00692A  5174               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 23372  00692C  0100               	movlb	0	; () banked
 23373  00692E  237C               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 23374  006930  0100               	movlb	0	; () banked
 23375  006932  5175               	movf	(??_GetNumberUnsigned+4)& (0+255),w,b
 23376  006934                     L13:
 23377  006934  0100               	movlb	0	; () banked
 23378  006936  237D               	addwfc	(GetNumberUnsigned@temp+3)& (0+255),f,b
 23379  006938  D000               	goto	l12100
 23380  00693A                     l12100:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;MISC.c: 773: }
 23384                           ;MISC.c: 774: i++;
 23385  00693A  0100               	movlb	0	; () banked
 23386  00693C  2B79               	incf	GetNumberUnsigned@i& (0+255),f,b
 23387  00693E  D75F               	goto	l12070
 23388                           
 23389                           ; BSR set to: 0
 23390                           
 23391                           ; BSR set to: 0
 23392                           ;MISC.c: 776: {
 23393                           ;MISC.c: 777: return 4;
 23394                           
 23395                           ; BSR set to: 0
 23396                           ;MISC.c: 775: if(i>32)
 23397  006940  0012               	return	
 23398                           
 23399                           ; BSR set to: 0
 23400                           
 23401                           ; BSR set to: 0
 23402  006942  D000               	goto	l12108
 23403  006944                     l12108:
 23404                           
 23405                           ; BSR set to: 0
 23406                           ;MISC.c: 778: }
 23407                           ;MISC.c: 779: }
 23408                           ;MISC.c: 780: }
 23409                           ;MISC.c: 781: This++;
 23410  006944  0100               	movlb	0	; () banked
 23411  006946  4B6C               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 23412  006948  2B6D               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 23413  00694A  D000               	goto	l12110
 23414  00694C                     l12110:
 23415                           
 23416                           ; BSR set to: 0
 23417  00694C  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23418  006950  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23419  006954  50DF               	movf	indf2,w,c
 23420  006956  B4D8               	btfsc	status,2,c
 23421  006958  D01A               	goto	l12118
 23422                           
 23423                           ; BSR set to: 0
 23424  00695A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23425  00695E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23426  006962  0E20               	movlw	32
 23427  006964  18DE               	xorwf	postinc2,w,c
 23428  006966  B4D8               	btfsc	status,2,c
 23429  006968  D012               	goto	l12118
 23430                           
 23431                           ; BSR set to: 0
 23432  00696A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23433  00696E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23434  006972  0E2C               	movlw	44
 23435  006974  18DE               	xorwf	postinc2,w,c
 23436  006976  B4D8               	btfsc	status,2,c
 23437  006978  D00A               	goto	l12118
 23438                           
 23439                           ; BSR set to: 0
 23440  00697A  C06C  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 23441  00697E  C06D  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 23442  006982  0E3D               	movlw	61
 23443  006984  18DE               	xorwf	postinc2,w,c
 23444  006986  B4D8               	btfsc	status,2,c
 23445  006988  D002               	goto	l12118
 23446  00698A  D6E0               	goto	l12058
 23447                           
 23448                           ; BSR set to: 0
 23449  00698C  D000               	goto	l12118
 23450  00698E                     l12118:
 23451                           
 23452                           ; BSR set to: 0
 23453                           ;MISC.c: 782: }
 23454                           ;MISC.c: 783: *result = temp;
 23455  00698E  C06F  FFD9         	movff	GetNumberUnsigned@result,fsr2l
 23456  006992  C070  FFDA         	movff	GetNumberUnsigned@result+1,fsr2h
 23457  006996  C07A  FFDE         	movff	GetNumberUnsigned@temp,postinc2
 23458  00699A  C07B  FFDE         	movff	GetNumberUnsigned@temp+1,postinc2
 23459  00699E  C07C  FFDE         	movff	GetNumberUnsigned@temp+2,postinc2
 23460  0069A2  C07D  FFDE         	movff	GetNumberUnsigned@temp+3,postinc2
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;MISC.c: 784: return 0;
 23464  0069A6  0E00               	movlw	0
 23465  0069A8  0012               	return	
 23466                           
 23467                           ; BSR set to: 0
 23468                           
 23469                           ; BSR set to: 0
 23470  0069AA  0012               	return		;funcret
 23471  0069AC                     __end_of_GetNumberUnsigned:
 23472                           	opt stack 0
 23473                           tblptru	equ	0xFF8
 23474                           tblptrh	equ	0xFF7
 23475                           tblptrl	equ	0xFF6
 23476                           tablat	equ	0xFF5
 23477                           prodh	equ	0xFF4
 23478                           prodl	equ	0xFF3
 23479                           intcon	equ	0xFF2
 23480                           indf0	equ	0xFEF
 23481                           postinc0	equ	0xFEE
 23482                           plusw0	equ	0xFEB
 23483                           fsr0h	equ	0xFEA
 23484                           fsr0l	equ	0xFE9
 23485                           wreg	equ	0xFE8
 23486                           indf1	equ	0xFE7
 23487                           postdec1	equ	0xFE5
 23488                           fsr1h	equ	0xFE2
 23489                           fsr1l	equ	0xFE1
 23490                           indf2	equ	0xFDF
 23491                           postinc2	equ	0xFDE
 23492                           postdec2	equ	0xFDD
 23493                           plusw2	equ	0xFDB
 23494                           fsr2h	equ	0xFDA
 23495                           fsr2l	equ	0xFD9
 23496                           status	equ	0xFD8
 23497                           
 23498 ;; *************** function _GetNumber *****************
 23499 ;; Defined at:
 23500 ;;		line 531 in file "MISC.c"
 23501 ;; Parameters:    Size  Location     Type
 23502 ;;  This            2   12[BANK0 ] PTR unsigned char 
 23503 ;;		 -> ReceivedString(100), 
 23504 ;;  CommaNumber     1   14[BANK0 ] unsigned char 
 23505 ;;  result          2   15[BANK0 ] PTR long 
 23506 ;;		 -> UseBluetooth@SerialNumberTEMP(4), 
 23507 ;; Auto vars:     Size  Location     Type
 23508 ;;  temp            4   28[BANK0 ] long 
 23509 ;;  tempThis        1   27[BANK0 ] unsigned char 
 23510 ;;  i               1   26[BANK0 ] unsigned char 
 23511 ;;  Hex             1   25[BANK0 ] unsigned char 
 23512 ;;  count           1   24[BANK0 ] unsigned char 
 23513 ;;  negative        1   23[BANK0 ] unsigned char 
 23514 ;;  tempCommaNum    1   22[BANK0 ] unsigned char 
 23515 ;; Return value:  Size  Location     Type
 23516 ;;                  1    wreg      unsigned char 
 23517 ;; Registers used:
 23518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23519 ;; Tracked objects:
 23520 ;;		On entry : 0/0
 23521 ;;		On exit  : 0/0
 23522 ;;		Unchanged: 0/0
 23523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23524 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23525 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23526 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23527 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23528 ;;Total ram usage:       20 bytes
 23529 ;; Hardware stack levels used:    1
 23530 ;; Hardware stack levels required when called:    6
 23531 ;; This function calls:
 23532 ;;		_IsLetter
 23533 ;;		___lmul
 23534 ;;		_lowercaseChar
 23535 ;; This function is called by:
 23536 ;;		_UseBluetooth
 23537 ;; This function uses a non-reentrant model
 23538 ;;
 23539                           
 23540                           	psect	text32
 23541  0060C8                     __ptext32:
 23542                           	opt stack 0
 23543  0060C8                     _GetNumber:
 23544                           	opt stack 23
 23545                           
 23546                           ;MISC.c: 533: unsigned char i =0;
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;incstack = 0
 23550  0060C8  0E00               	movlw	0
 23551  0060CA  0100               	movlb	0	; () banked
 23552  0060CC  6F7A               	movwf	GetNumber@i& (0+255),b
 23553                           
 23554                           ;MISC.c: 534: long temp =0;
 23555  0060CE  0E00               	movlw	0
 23556  0060D0  0100               	movlb	0	; () banked
 23557  0060D2  6F7C               	movwf	GetNumber@temp& (0+255),b
 23558  0060D4  0E00               	movlw	0
 23559  0060D6  6F7D               	movwf	(GetNumber@temp+1)& (0+255),b
 23560  0060D8  0E00               	movlw	0
 23561  0060DA  6F7E               	movwf	(GetNumber@temp+2)& (0+255),b
 23562  0060DC  0E00               	movlw	0
 23563  0060DE  6F7F               	movwf	(GetNumber@temp+3)& (0+255),b
 23564                           
 23565                           ;MISC.c: 535: unsigned char negative =0;
 23566  0060E0  0E00               	movlw	0
 23567  0060E2  0100               	movlb	0	; () banked
 23568  0060E4  6F77               	movwf	GetNumber@negative& (0+255),b
 23569                           
 23570                           ;MISC.c: 536: unsigned char tempCommaNumber = 1;
 23571  0060E6  0E01               	movlw	1
 23572  0060E8  0100               	movlb	0	; () banked
 23573  0060EA  6F76               	movwf	GetNumber@tempCommaNumber& (0+255),b
 23574                           
 23575                           ;MISC.c: 537: unsigned char count =0;
 23576  0060EC  0E00               	movlw	0
 23577  0060EE  0100               	movlb	0	; () banked
 23578  0060F0  6F78               	movwf	GetNumber@count& (0+255),b
 23579                           
 23580                           ;MISC.c: 538: unsigned char Hex = 0;
 23581  0060F2  0E00               	movlw	0
 23582  0060F4  0100               	movlb	0	; () banked
 23583  0060F6  6F79               	movwf	GetNumber@Hex& (0+255),b
 23584                           
 23585                           ;MISC.c: 539: unsigned char tempThis;
 23586                           ;MISC.c: 541: while(*This != 0)
 23587  0060F8  D038               	goto	l11816
 23588  0060FA                     l11796:
 23589                           
 23590                           ; BSR set to: 0
 23591                           ;MISC.c: 542: {
 23592                           ;MISC.c: 543: if(*This == '0')
 23593  0060FA  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23594  0060FE  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23595  006102  0E30               	movlw	48
 23596  006104  18DE               	xorwf	postinc2,w,c
 23597  006106  A4D8               	btfss	status,2,c
 23598  006108  D02A               	goto	l11812
 23599                           
 23600                           ; BSR set to: 0
 23601                           ;MISC.c: 544: {
 23602                           ;MISC.c: 545: count++;
 23603  00610A  0100               	movlb	0	; () banked
 23604  00610C  2B78               	incf	GetNumber@count& (0+255),f,b
 23605                           
 23606                           ;MISC.c: 546: This++;
 23607  00610E  0100               	movlb	0	; () banked
 23608  006110  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23609  006112  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23610                           
 23611                           ; BSR set to: 0
 23612                           ;MISC.c: 547: if(*This == 'x' || *This == 'X')
 23613  006114  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23614  006118  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23615  00611C  0E78               	movlw	120
 23616  00611E  18DE               	xorwf	postinc2,w,c
 23617  006120  B4D8               	btfsc	status,2,c
 23618  006122  D008               	goto	l11804
 23619                           
 23620                           ; BSR set to: 0
 23621  006124  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23622  006128  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23623  00612C  0E58               	movlw	88
 23624  00612E  18DE               	xorwf	postinc2,w,c
 23625  006130  A4D8               	btfss	status,2,c
 23626  006132  D015               	goto	l11812
 23627  006134                     l11804:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;MISC.c: 548: {
 23631                           ;MISC.c: 549: This++;
 23632  006134  0100               	movlb	0	; () banked
 23633  006136  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23634  006138  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23635                           
 23636                           ; BSR set to: 0
 23637                           ;MISC.c: 550: if(*This >='0' && *This <='9')
 23638  00613A  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23639  00613E  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23640  006142  0E2F               	movlw	47
 23641  006144  64DF               	cpfsgt	indf2,c
 23642  006146  D00B               	goto	l11812
 23643                           
 23644                           ; BSR set to: 0
 23645  006148  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23646  00614C  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23647  006150  0E3A               	movlw	58
 23648  006152  60DF               	cpfslt	indf2,c
 23649  006154  D004               	goto	l11812
 23650                           
 23651                           ; BSR set to: 0
 23652                           ;MISC.c: 551: {
 23653                           ;MISC.c: 552: Hex = 1;
 23654  006156  0E01               	movlw	1
 23655  006158  0100               	movlb	0	; () banked
 23656  00615A  6F79               	movwf	GetNumber@Hex& (0+255),b
 23657                           
 23658                           ; BSR set to: 0
 23659                           
 23660                           ; BSR set to: 0
 23661  00615C  D000               	goto	l11812
 23662  00615E                     l11812:
 23663                           
 23664                           ; BSR set to: 0
 23665                           ;MISC.c: 553: }
 23666                           ;MISC.c: 554: }
 23667                           ;MISC.c: 555: }
 23668                           ;MISC.c: 556: count++;
 23669  00615E  0100               	movlb	0	; () banked
 23670  006160  2B78               	incf	GetNumber@count& (0+255),f,b
 23671                           
 23672                           ; BSR set to: 0
 23673                           ;MISC.c: 557: This++;
 23674  006162  0100               	movlb	0	; () banked
 23675  006164  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23676  006166  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23677  006168  D000               	goto	l11816
 23678  00616A                     l11816:
 23679                           
 23680                           ; BSR set to: 0
 23681  00616A  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23682  00616E  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23683  006172  50DF               	movf	indf2,w,c
 23684  006174  A4D8               	btfss	status,2,c
 23685  006176  D7C1               	goto	l11796
 23686                           
 23687                           ; BSR set to: 0
 23688                           ;MISC.c: 558: }
 23689                           ;MISC.c: 559: This-=count;
 23690                           
 23691                           ; BSR set to: 0
 23692  006178  0100               	movlb	0	; () banked
 23693  00617A  5178               	movf	GetNumber@count& (0+255),w,b
 23694  00617C  0D01               	mullw	1
 23695  00617E  50F3               	movf	prodl,w,c
 23696  006180  0100               	movlb	0	; () banked
 23697  006182  5F6C               	subwf	GetNumber@This& (0+255),f,b
 23698  006184  50F4               	movf	prodh,w,c
 23699  006186  0100               	movlb	0	; () banked
 23700  006188  5B6D               	subwfb	(GetNumber@This+1)& (0+255),f,b
 23701                           
 23702                           ; BSR set to: 0
 23703                           
 23704                           ;MISC.c: 561: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 23705  00618A  D001               	goto	l11822
 23706                           
 23707                           ; BSR set to: 0
 23708  00618C  D03B               	goto	L14
 23709  00618E                     l11822:
 23710                           
 23711                           ; BSR set to: 0
 23712  00618E  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23713  006192  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23714  006196  0E3D               	movlw	61
 23715  006198  18DE               	xorwf	postinc2,w,c
 23716  00619A  B4D8               	btfsc	status,2,c
 23717  00619C  D011               	goto	l11828
 23718                           
 23719                           ; BSR set to: 0
 23720  00619E  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23721  0061A2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23722  0061A6  0E2C               	movlw	44
 23723  0061A8  18DE               	xorwf	postinc2,w,c
 23724  0061AA  B4D8               	btfsc	status,2,c
 23725  0061AC  D009               	goto	l11828
 23726                           
 23727                           ; BSR set to: 0
 23728  0061AE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23729  0061B2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23730  0061B6  50DF               	movf	indf2,w,c
 23731  0061B8  B4D8               	btfsc	status,2,c
 23732  0061BA  D002               	goto	l11828
 23733  0061BC  D023               	goto	L14
 23734                           
 23735                           ; BSR set to: 0
 23736  0061BE  D000               	goto	l11828
 23737  0061C0                     l11828:
 23738                           
 23739                           ; BSR set to: 0
 23740                           ;MISC.c: 565: }
 23741                           ;MISC.c: 566: if(*This == 0)
 23742  0061C0  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23743  0061C4  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23744  0061C8  50DF               	movf	indf2,w,c
 23745  0061CA  A4D8               	btfss	status,2,c
 23746  0061CC  D003               	goto	l11836
 23747                           
 23748                           ; BSR set to: 0
 23749                           ;MISC.c: 567: {
 23750                           ;MISC.c: 568: return 1;
 23751  0061CE  0E01               	movlw	1
 23752                           
 23753                           ; BSR set to: 0
 23754  0061D0  0012               	return	
 23755                           
 23756                           ; BSR set to: 0
 23757                           ;MISC.c: 569: }
 23758  0061D2  D01D               	goto	l11844
 23759  0061D4                     l11836:
 23760                           
 23761                           ; BSR set to: 0
 23762                           ;MISC.c: 570: else if(*This != '=' || *This != ',')
 23763  0061D4  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23764  0061D8  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23765  0061DC  0E3D               	movlw	61
 23766  0061DE  18DE               	xorwf	postinc2,w,c
 23767  0061E0  A4D8               	btfss	status,2,c
 23768  0061E2  D008               	goto	l11840
 23769                           
 23770                           ; BSR set to: 0
 23771  0061E4  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23772  0061E8  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23773  0061EC  0E2C               	movlw	44
 23774  0061EE  18DE               	xorwf	postinc2,w,c
 23775  0061F0  B4D8               	btfsc	status,2,c
 23776  0061F2  D00D               	goto	l11844
 23777  0061F4                     l11840:
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;MISC.c: 571: {
 23781                           ;MISC.c: 572: if(tempCommaNumber < CommaNumber)
 23782  0061F4  0100               	movlb	0	; () banked
 23783  0061F6  516E               	movf	GetNumber@CommaNumber& (0+255),w,b
 23784  0061F8  0100               	movlb	0	; () banked
 23785  0061FA  5D76               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 23786  0061FC  B0D8               	btfsc	status,0,c
 23787  0061FE  D007               	goto	l11844
 23788                           
 23789                           ; BSR set to: 0
 23790                           ;MISC.c: 573: {
 23791                           ;MISC.c: 574: tempCommaNumber++;
 23792  006200  0100               	movlb	0	; () banked
 23793  006202  2B76               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 23794  006204                     L14:
 23795                           
 23796                           ;MISC.c: 575: This++;
 23797  006204  0100               	movlb	0	; () banked
 23798  006206  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23799  006208  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23800                           
 23801                           ;MISC.c: 576: goto SCAN;
 23802  00620A  D7C1               	goto	l11822
 23803                           
 23804                           ; BSR set to: 0
 23805                           
 23806                           ; BSR set to: 0
 23807  00620C  D000               	goto	l11844
 23808  00620E                     l11844:
 23809                           
 23810                           ; BSR set to: 0
 23811                           ;MISC.c: 577: }
 23812                           ;MISC.c: 578: }
 23813                           ;MISC.c: 579: if(*This == 0)
 23814  00620E  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23815  006212  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23816  006216  50DF               	movf	indf2,w,c
 23817  006218  A4D8               	btfss	status,2,c
 23818  00621A  D002               	goto	l11850
 23819                           
 23820                           ; BSR set to: 0
 23821                           ;MISC.c: 580: {
 23822                           ;MISC.c: 581: return 1;
 23823  00621C  0E01               	movlw	1
 23824                           
 23825                           ; BSR set to: 0
 23826  00621E  0012               	return	
 23827  006220                     l11850:
 23828                           
 23829                           ; BSR set to: 0
 23830                           ;MISC.c: 582: }
 23831                           ;MISC.c: 583: This++;
 23832  006220  0100               	movlb	0	; () banked
 23833  006222  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23834  006224  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23835                           
 23836                           ; BSR set to: 0
 23837                           ;MISC.c: 584: if(*This == ' ')
 23838  006226  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23839  00622A  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23840  00622E  0E20               	movlw	32
 23841  006230  18DE               	xorwf	postinc2,w,c
 23842  006232  B4D8               	btfsc	status,2,c
 23843  006234  D01E               	goto	l11870
 23844                           
 23845                           ; BSR set to: 0
 23846                           ;MISC.c: 589: else if (*This == '=' || *This == ',')
 23847                           
 23848                           ; BSR set to: 0
 23849                           
 23850                           ;MISC.c: 588: }
 23851                           
 23852                           ; BSR set to: 0
 23853                           ;MISC.c: 585: {
 23854                           ;MISC.c: 586: This++;
 23855  006236  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23856  00623A  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23857  00623E  0E3D               	movlw	61
 23858  006240  18DE               	xorwf	postinc2,w,c
 23859  006242  B4D8               	btfsc	status,2,c
 23860  006244  D008               	goto	l11860
 23861                           
 23862                           ; BSR set to: 0
 23863  006246  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23864  00624A  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23865  00624E  0E2C               	movlw	44
 23866  006250  18DE               	xorwf	postinc2,w,c
 23867  006252  A4D8               	btfss	status,2,c
 23868  006254  D003               	goto	l11866
 23869  006256                     l11860:
 23870                           
 23871                           ; BSR set to: 0
 23872                           ;MISC.c: 590: {
 23873                           ;MISC.c: 591: return 2;
 23874  006256  0E02               	movlw	2
 23875                           
 23876                           ; BSR set to: 0
 23877  006258  0012               	return	
 23878                           
 23879                           ; BSR set to: 0
 23880                           ;MISC.c: 592: }
 23881  00625A  D019               	goto	l11878
 23882  00625C                     l11866:
 23883                           
 23884                           ; BSR set to: 0
 23885                           ;MISC.c: 593: else if(*This == '-')
 23886  00625C  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23887  006260  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23888  006264  0E2D               	movlw	45
 23889  006266  18DE               	xorwf	postinc2,w,c
 23890  006268  A4D8               	btfss	status,2,c
 23891  00626A  D007               	goto	l11872
 23892                           
 23893                           ; BSR set to: 0
 23894                           ;MISC.c: 594: {
 23895                           ;MISC.c: 595: negative = 1;
 23896  00626C  0E01               	movlw	1
 23897  00626E  0100               	movlb	0	; () banked
 23898  006270  6F77               	movwf	GetNumber@negative& (0+255),b
 23899  006272                     l11870:
 23900                           
 23901                           ; BSR set to: 0
 23902                           ;MISC.c: 596: This++;
 23903  006272  0100               	movlb	0	; () banked
 23904  006274  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23905  006276  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23906                           
 23907                           ;MISC.c: 598: }
 23908  006278  D00A               	goto	l11878
 23909  00627A                     l11872:
 23910                           
 23911                           ; BSR set to: 0
 23912                           ;MISC.c: 599: else if(*This == 0)
 23913  00627A  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23914  00627E  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23915  006282  50DF               	movf	indf2,w,c
 23916  006284  A4D8               	btfss	status,2,c
 23917  006286  D003               	goto	l11878
 23918                           
 23919                           ; BSR set to: 0
 23920                           ;MISC.c: 600: {
 23921                           ;MISC.c: 601: return 3;
 23922  006288  0E03               	movlw	3
 23923                           
 23924                           ; BSR set to: 0
 23925  00628A  0012               	return	
 23926                           
 23927                           ; BSR set to: 0
 23928                           
 23929                           ; BSR set to: 0
 23930                           
 23931                           ; BSR set to: 0
 23932  00628C  D000               	goto	l11878
 23933  00628E                     l11878:
 23934                           
 23935                           ; BSR set to: 0
 23936                           ;MISC.c: 602: }
 23937                           ;MISC.c: 603: if(Hex)
 23938  00628E  0100               	movlb	0	; () banked
 23939  006290  5179               	movf	GetNumber@Hex& (0+255),w,b
 23940  006292  0100               	movlb	0	; () banked
 23941  006294  B4D8               	btfsc	status,2,c
 23942  006296  D11C               	goto	l11942
 23943                           
 23944                           ; BSR set to: 0
 23945                           ;MISC.c: 604: {
 23946                           ;MISC.c: 605: negative = 0;
 23947  006298  0E00               	movlw	0
 23948  00629A  0100               	movlb	0	; () banked
 23949  00629C  6F77               	movwf	GetNumber@negative& (0+255),b
 23950                           
 23951                           ;MISC.c: 606: while(*This != 'x' && *This != 'X')
 23952  00629E  D004               	goto	l11884
 23953  0062A0                     l11882:
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;MISC.c: 607: {
 23957                           ;MISC.c: 609: This++;
 23958  0062A0  0100               	movlb	0	; () banked
 23959  0062A2  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 23960  0062A4  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 23961  0062A6  D000               	goto	l11884
 23962  0062A8                     l11884:
 23963                           
 23964                           ; BSR set to: 0
 23965  0062A8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23966  0062AC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23967  0062B0  0E78               	movlw	120
 23968  0062B2  18DE               	xorwf	postinc2,w,c
 23969  0062B4  B4D8               	btfsc	status,2,c
 23970  0062B6  D108               	goto	l11940
 23971                           
 23972                           ; BSR set to: 0
 23973  0062B8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 23974  0062BC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 23975  0062C0  0E58               	movlw	88
 23976  0062C2  18DE               	xorwf	postinc2,w,c
 23977  0062C4  B4D8               	btfsc	status,2,c
 23978  0062C6  D100               	goto	l11940
 23979  0062C8  D7EB               	goto	l11882
 23980                           
 23981                           ; BSR set to: 0
 23982  0062CA  D0FE               	goto	l11940
 23983                           
 23984                           ; BSR set to: 0
 23985  0062CC  D0FD               	goto	l11940
 23986                           
 23987                           ; BSR set to: 0
 23988                           ;MISC.c: 612: }
 23989                           ;MISC.c: 613: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;MISC.c: 610: }
 23993                           ;MISC.c: 611: This++;
 23994  0062CE  D100               	goto	l11942
 23995  0062D0                     l11890:
 23996                           
 23997                           ; BSR set to: 0
 23998                           ;MISC.c: 614: {
 23999                           ;MISC.c: 615: if(!Hex)
 24000  0062D0  0100               	movlb	0	; () banked
 24001  0062D2  5179               	movf	GetNumber@Hex& (0+255),w,b
 24002  0062D4  0100               	movlb	0	; () banked
 24003  0062D6  A4D8               	btfss	status,2,c
 24004  0062D8  D05B               	goto	l11908
 24005                           
 24006                           ; BSR set to: 0
 24007                           ;MISC.c: 616: {
 24008                           ;MISC.c: 617: if(*This >=48 && *This <= 57)
 24009  0062DA  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24010  0062DE  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24011  0062E2  0E2F               	movlw	47
 24012  0062E4  64DF               	cpfsgt	indf2,c
 24013  0062E6  D0F0               	goto	l11940
 24014                           
 24015                           ; BSR set to: 0
 24016  0062E8  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24017  0062EC  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24018  0062F0  0E3A               	movlw	58
 24019  0062F2  60DF               	cpfslt	indf2,c
 24020  0062F4  D0E9               	goto	l11940
 24021                           
 24022                           ; BSR set to: 0
 24023                           ;MISC.c: 618: {
 24024                           ;MISC.c: 619: temp = temp * 10;
 24025  0062F6  C07C  F060         	movff	GetNumber@temp,___lmul@multiplier
 24026  0062FA  C07D  F061         	movff	GetNumber@temp+1,___lmul@multiplier+1
 24027  0062FE  C07E  F062         	movff	GetNumber@temp+2,___lmul@multiplier+2
 24028  006302  C07F  F063         	movff	GetNumber@temp+3,___lmul@multiplier+3
 24029  006306  0E0A               	movlw	10
 24030  006308  0100               	movlb	0	; () banked
 24031  00630A  6F64               	movwf	___lmul@multiplicand& (0+255),b
 24032  00630C  0E00               	movlw	0
 24033  00630E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24034  006310  0E00               	movlw	0
 24035  006312  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24036  006314  0E00               	movlw	0
 24037  006316  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24038  006318  ECF9  F051         	call	___lmul	;wreg free
 24039  00631C  C060  F07C         	movff	?___lmul,GetNumber@temp
 24040  006320  C061  F07D         	movff	?___lmul+1,GetNumber@temp+1
 24041  006324  C062  F07E         	movff	?___lmul+2,GetNumber@temp+2
 24042  006328  C063  F07F         	movff	?___lmul+3,GetNumber@temp+3
 24043                           
 24044                           ;MISC.c: 620: temp += *This - 48;
 24045  00632C  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24046  006330  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24047  006334  50DF               	movf	indf2,w,c
 24048  006336  0100               	movlb	0	; () banked
 24049  006338  6F71               	movwf	??_GetNumber& (0+255),b
 24050  00633A  0ED0               	movlw	208
 24051  00633C  0100               	movlb	0	; () banked
 24052  00633E  2571               	addwf	??_GetNumber& (0+255),w,b
 24053  006340  0100               	movlb	0	; () banked
 24054  006342  6F72               	movwf	(??_GetNumber+1)& (0+255),b
 24055  006344  0100               	movlb	0	; () banked
 24056  006346  6B73               	clrf	(??_GetNumber+2)& (0+255),b
 24057  006348  0EFF               	movlw	255
 24058  00634A  2373               	addwfc	(??_GetNumber+2)& (0+255),f,b
 24059  00634C  0100               	movlb	0	; () banked
 24060  00634E  6B74               	clrf	(??_GetNumber+3)& (0+255),b
 24061  006350  0100               	movlb	0	; () banked
 24062  006352  BF73               	btfsc	(??_GetNumber+2)& (0+255),7,b
 24063  006354  0774               	decf	(??_GetNumber+3)& (0+255),f,b
 24064  006356  0100               	movlb	0	; () banked
 24065  006358  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 24066  00635A  0100               	movlb	0	; () banked
 24067  00635C  6F75               	movwf	(??_GetNumber+4)& (0+255),b
 24068  00635E  0100               	movlb	0	; () banked
 24069  006360  5172               	movf	(??_GetNumber+1)& (0+255),w,b
 24070  006362  0100               	movlb	0	; () banked
 24071  006364  277C               	addwf	GetNumber@temp& (0+255),f,b
 24072  006366  0100               	movlb	0	; () banked
 24073  006368  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 24074  00636A  0100               	movlb	0	; () banked
 24075  00636C  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 24076  00636E  0100               	movlb	0	; () banked
 24077  006370  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 24078  006372  0100               	movlb	0	; () banked
 24079  006374  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 24080  006376  0100               	movlb	0	; () banked
 24081  006378  5175               	movf	(??_GetNumber+4)& (0+255),w,b
 24082  00637A  0100               	movlb	0	; () banked
 24083  00637C  237F               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 24084                           
 24085                           ; BSR set to: 0
 24086                           ;MISC.c: 621: i++;
 24087  00637E  0100               	movlb	0	; () banked
 24088  006380  2B7A               	incf	GetNumber@i& (0+255),f,b
 24089  006382                     l11902:
 24090                           
 24091                           ; BSR set to: 0
 24092                           ;MISC.c: 622: if(i>32)
 24093  006382  0E20               	movlw	32
 24094  006384  0100               	movlb	0	; () banked
 24095  006386  657A               	cpfsgt	GetNumber@i& (0+255),b
 24096  006388  D09F               	goto	l11940
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;MISC.c: 623: {
 24100                           ;MISC.c: 624: return 4;
 24101  00638A  0E04               	movlw	4
 24102                           
 24103                           ; BSR set to: 0
 24104  00638C  0012               	return	
 24105                           
 24106                           ; BSR set to: 0
 24107                           ;MISC.c: 625: }
 24108                           ;MISC.c: 626: }
 24109                           ;MISC.c: 627: }
 24110                           
 24111                           ; BSR set to: 0
 24112  00638E  D09C               	goto	l11940
 24113  006390                     l11908:
 24114                           
 24115                           ; BSR set to: 0
 24116                           ;MISC.c: 628: else
 24117                           ;MISC.c: 629: {
 24118                           ;MISC.c: 630: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 24119  006390  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24120  006394  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24121  006398  0E2F               	movlw	47
 24122  00639A  64DF               	cpfsgt	indf2,c
 24123  00639C  D008               	goto	l11912
 24124                           
 24125                           ; BSR set to: 0
 24126  00639E  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24127  0063A2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24128  0063A6  0E39               	movlw	57
 24129  0063A8  64DF               	cpfsgt	indf2,c
 24130  0063AA  D01F               	goto	l11920
 24131  0063AC  D000               	goto	l11912
 24132  0063AE                     l11912:
 24133                           
 24134                           ; BSR set to: 0
 24135  0063AE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24136  0063B2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24137  0063B6  0E40               	movlw	64
 24138  0063B8  64DF               	cpfsgt	indf2,c
 24139  0063BA  D008               	goto	l11916
 24140                           
 24141                           ; BSR set to: 0
 24142  0063BC  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24143  0063C0  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24144  0063C4  0E46               	movlw	70
 24145  0063C6  64DF               	cpfsgt	indf2,c
 24146  0063C8  D010               	goto	l11920
 24147  0063CA  D000               	goto	l11916
 24148  0063CC                     l11916:
 24149                           
 24150                           ; BSR set to: 0
 24151  0063CC  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24152  0063D0  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24153  0063D4  0E60               	movlw	96
 24154  0063D6  64DF               	cpfsgt	indf2,c
 24155  0063D8  D077               	goto	l11940
 24156                           
 24157                           ; BSR set to: 0
 24158  0063DA  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24159  0063DE  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24160  0063E2  0E67               	movlw	103
 24161  0063E4  60DF               	cpfslt	indf2,c
 24162  0063E6  D070               	goto	l11940
 24163  0063E8  D000               	goto	l11920
 24164  0063EA                     l11920:
 24165                           
 24166                           ; BSR set to: 0
 24167                           ;MISC.c: 631: {
 24168                           ;MISC.c: 632: temp <<= 4;
 24169  0063EA  0100               	movlb	0	; () banked
 24170  0063EC  0E04               	movlw	4
 24171  0063EE                     u12995:
 24172  0063EE  90D8               	bcf	status,0,c
 24173  0063F0  377C               	rlcf	GetNumber@temp& (0+255),f,b
 24174  0063F2  377D               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 24175  0063F4  377E               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 24176  0063F6  377F               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 24177  0063F8  2EE8               	decfsz	wreg,f,c
 24178  0063FA  D7F9               	goto	u12995
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;MISC.c: 633: tempThis = *This;
 24182  0063FC  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24183  006400  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24184  006404  50DF               	movf	indf2,w,c
 24185  006406  0100               	movlb	0	; () banked
 24186  006408  6F7B               	movwf	GetNumber@tempThis& (0+255),b
 24187                           
 24188                           ; BSR set to: 0
 24189                           ;MISC.c: 634: if(IsLetter(tempThis))
 24190  00640A  0100               	movlb	0	; () banked
 24191  00640C  517B               	movf	GetNumber@tempThis& (0+255),w,b
 24192  00640E  EC7F  F055         	call	_IsLetter
 24193  006412  0900               	iorlw	0
 24194  006414  B4D8               	btfsc	status,2,c
 24195  006416  D029               	goto	l11930
 24196                           
 24197                           ;MISC.c: 635: {
 24198                           ;MISC.c: 636: lowercaseChar(&tempThis);
 24199  006418  0E7B               	movlw	low GetNumber@tempThis
 24200  00641A  0100               	movlb	0	; () banked
 24201  00641C  6F60               	movwf	lowercaseChar@Input& (0+255),b
 24202  00641E  0E00               	movlw	high GetNumber@tempThis
 24203  006420  0100               	movlb	0	; () banked
 24204  006422  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 24205  006424  EC0E  F056         	call	_lowercaseChar	;wreg free
 24206                           
 24207                           ;MISC.c: 637: temp += (tempThis - 87);
 24208  006428  0EA9               	movlw	169
 24209  00642A  0100               	movlb	0	; () banked
 24210  00642C  257B               	addwf	GetNumber@tempThis& (0+255),w,b
 24211  00642E  0100               	movlb	0	; () banked
 24212  006430  6F71               	movwf	??_GetNumber& (0+255),b
 24213  006432  0100               	movlb	0	; () banked
 24214  006434  6B72               	clrf	(??_GetNumber+1)& (0+255),b
 24215  006436  0EFF               	movlw	255
 24216  006438  2372               	addwfc	(??_GetNumber+1)& (0+255),f,b
 24217  00643A  0100               	movlb	0	; () banked
 24218  00643C  6B73               	clrf	(??_GetNumber+2)& (0+255),b
 24219  00643E  0100               	movlb	0	; () banked
 24220  006440  BF72               	btfsc	(??_GetNumber+1)& (0+255),7,b
 24221  006442  0773               	decf	(??_GetNumber+2)& (0+255),f,b
 24222  006444  0100               	movlb	0	; () banked
 24223  006446  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 24224  006448  0100               	movlb	0	; () banked
 24225  00644A  6F74               	movwf	(??_GetNumber+3)& (0+255),b
 24226  00644C  0100               	movlb	0	; () banked
 24227  00644E  5171               	movf	??_GetNumber& (0+255),w,b
 24228  006450  0100               	movlb	0	; () banked
 24229  006452  277C               	addwf	GetNumber@temp& (0+255),f,b
 24230  006454  0100               	movlb	0	; () banked
 24231  006456  5172               	movf	(??_GetNumber+1)& (0+255),w,b
 24232  006458  0100               	movlb	0	; () banked
 24233  00645A  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 24234  00645C  0100               	movlb	0	; () banked
 24235  00645E  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 24236  006460  0100               	movlb	0	; () banked
 24237  006462  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 24238  006464  0100               	movlb	0	; () banked
 24239  006466  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 24240  006468  D027               	goto	L15
 24241  00646A                     l11930:
 24242                           
 24243                           ;MISC.c: 639: else
 24244                           ;MISC.c: 640: {
 24245                           ;MISC.c: 641: temp += (*This - 48);
 24246  00646A  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24247  00646E  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24248  006472  50DF               	movf	indf2,w,c
 24249  006474  0100               	movlb	0	; () banked
 24250  006476  6F71               	movwf	??_GetNumber& (0+255),b
 24251  006478  0ED0               	movlw	208
 24252  00647A  0100               	movlb	0	; () banked
 24253  00647C  2571               	addwf	??_GetNumber& (0+255),w,b
 24254  00647E  0100               	movlb	0	; () banked
 24255  006480  6F72               	movwf	(??_GetNumber+1)& (0+255),b
 24256  006482  0100               	movlb	0	; () banked
 24257  006484  6B73               	clrf	(??_GetNumber+2)& (0+255),b
 24258  006486  0EFF               	movlw	255
 24259  006488  2373               	addwfc	(??_GetNumber+2)& (0+255),f,b
 24260  00648A  0100               	movlb	0	; () banked
 24261  00648C  6B74               	clrf	(??_GetNumber+3)& (0+255),b
 24262  00648E  0100               	movlb	0	; () banked
 24263  006490  BF73               	btfsc	(??_GetNumber+2)& (0+255),7,b
 24264  006492  0774               	decf	(??_GetNumber+3)& (0+255),f,b
 24265  006494  0100               	movlb	0	; () banked
 24266  006496  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 24267  006498  0100               	movlb	0	; () banked
 24268  00649A  6F75               	movwf	(??_GetNumber+4)& (0+255),b
 24269  00649C  0100               	movlb	0	; () banked
 24270  00649E  5172               	movf	(??_GetNumber+1)& (0+255),w,b
 24271  0064A0  0100               	movlb	0	; () banked
 24272  0064A2  277C               	addwf	GetNumber@temp& (0+255),f,b
 24273  0064A4  0100               	movlb	0	; () banked
 24274  0064A6  5173               	movf	(??_GetNumber+2)& (0+255),w,b
 24275  0064A8  0100               	movlb	0	; () banked
 24276  0064AA  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 24277  0064AC  0100               	movlb	0	; () banked
 24278  0064AE  5174               	movf	(??_GetNumber+3)& (0+255),w,b
 24279  0064B0  0100               	movlb	0	; () banked
 24280  0064B2  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 24281  0064B4  0100               	movlb	0	; () banked
 24282  0064B6  5175               	movf	(??_GetNumber+4)& (0+255),w,b
 24283  0064B8                     L15:
 24284  0064B8  0100               	movlb	0	; () banked
 24285  0064BA  237F               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 24286  0064BC  D000               	goto	l11932
 24287  0064BE                     l11932:
 24288                           
 24289                           ; BSR set to: 0
 24290                           ;MISC.c: 642: }
 24291                           ;MISC.c: 643: i++;
 24292  0064BE  0100               	movlb	0	; () banked
 24293  0064C0  2B7A               	incf	GetNumber@i& (0+255),f,b
 24294  0064C2  D75F               	goto	l11902
 24295                           
 24296                           ; BSR set to: 0
 24297                           
 24298                           ; BSR set to: 0
 24299                           ;MISC.c: 645: {
 24300                           ;MISC.c: 646: return 4;
 24301                           
 24302                           ; BSR set to: 0
 24303                           ;MISC.c: 644: if(i>32)
 24304  0064C4  0012               	return	
 24305                           
 24306                           ; BSR set to: 0
 24307                           
 24308                           ; BSR set to: 0
 24309  0064C6  D000               	goto	l11940
 24310  0064C8                     l11940:
 24311                           
 24312                           ; BSR set to: 0
 24313                           ;MISC.c: 647: }
 24314                           ;MISC.c: 648: }
 24315                           ;MISC.c: 649: }
 24316                           ;MISC.c: 650: This++;
 24317  0064C8  0100               	movlb	0	; () banked
 24318  0064CA  4B6C               	infsnz	GetNumber@This& (0+255),f,b
 24319  0064CC  2B6D               	incf	(GetNumber@This+1)& (0+255),f,b
 24320  0064CE  D000               	goto	l11942
 24321  0064D0                     l11942:
 24322                           
 24323                           ; BSR set to: 0
 24324  0064D0  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24325  0064D4  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24326  0064D8  50DF               	movf	indf2,w,c
 24327  0064DA  B4D8               	btfsc	status,2,c
 24328  0064DC  D01A               	goto	l11950
 24329                           
 24330                           ; BSR set to: 0
 24331  0064DE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24332  0064E2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24333  0064E6  0E20               	movlw	32
 24334  0064E8  18DE               	xorwf	postinc2,w,c
 24335  0064EA  B4D8               	btfsc	status,2,c
 24336  0064EC  D012               	goto	l11950
 24337                           
 24338                           ; BSR set to: 0
 24339  0064EE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24340  0064F2  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24341  0064F6  0E2C               	movlw	44
 24342  0064F8  18DE               	xorwf	postinc2,w,c
 24343  0064FA  B4D8               	btfsc	status,2,c
 24344  0064FC  D00A               	goto	l11950
 24345                           
 24346                           ; BSR set to: 0
 24347  0064FE  C06C  FFD9         	movff	GetNumber@This,fsr2l
 24348  006502  C06D  FFDA         	movff	GetNumber@This+1,fsr2h
 24349  006506  0E3D               	movlw	61
 24350  006508  18DE               	xorwf	postinc2,w,c
 24351  00650A  B4D8               	btfsc	status,2,c
 24352  00650C  D002               	goto	l11950
 24353  00650E  D6E0               	goto	l11890
 24354                           
 24355                           ; BSR set to: 0
 24356  006510  D000               	goto	l11950
 24357  006512                     l11950:
 24358                           
 24359                           ; BSR set to: 0
 24360                           ;MISC.c: 651: }
 24361                           ;MISC.c: 652: if(negative)
 24362  006512  0100               	movlb	0	; () banked
 24363  006514  5177               	movf	GetNumber@negative& (0+255),w,b
 24364  006516  0100               	movlb	0	; () banked
 24365  006518  B4D8               	btfsc	status,2,c
 24366  00651A  D00A               	goto	l11954
 24367                           
 24368                           ; BSR set to: 0
 24369                           ;MISC.c: 653: {
 24370                           ;MISC.c: 654: temp = (temp * -1);
 24371  00651C  0100               	movlb	0	; () banked
 24372  00651E  1F7F               	comf	(GetNumber@temp+3)& (0+255),f,b
 24373  006520  1F7E               	comf	(GetNumber@temp+2)& (0+255),f,b
 24374  006522  1F7D               	comf	(GetNumber@temp+1)& (0+255),f,b
 24375  006524  6D7C               	negf	GetNumber@temp& (0+255),b
 24376  006526  0E00               	movlw	0
 24377  006528  237D               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 24378  00652A  237E               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 24379  00652C  237F               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 24380  00652E  D000               	goto	l11954
 24381  006530                     l11954:
 24382                           
 24383                           ; BSR set to: 0
 24384                           ;MISC.c: 655: }
 24385                           ;MISC.c: 656: *result = temp;
 24386  006530  C06F  FFD9         	movff	GetNumber@result,fsr2l
 24387  006534  C070  FFDA         	movff	GetNumber@result+1,fsr2h
 24388  006538  C07C  FFDE         	movff	GetNumber@temp,postinc2
 24389  00653C  C07D  FFDE         	movff	GetNumber@temp+1,postinc2
 24390  006540  C07E  FFDE         	movff	GetNumber@temp+2,postinc2
 24391  006544  C07F  FFDE         	movff	GetNumber@temp+3,postinc2
 24392                           
 24393                           ; BSR set to: 0
 24394                           ;MISC.c: 657: return 0;
 24395  006548  0E00               	movlw	0
 24396  00654A  0012               	return	
 24397                           
 24398                           ; BSR set to: 0
 24399                           
 24400                           ; BSR set to: 0
 24401  00654C  0012               	return		;funcret
 24402  00654E                     __end_of_GetNumber:
 24403                           	opt stack 0
 24404                           tblptru	equ	0xFF8
 24405                           tblptrh	equ	0xFF7
 24406                           tblptrl	equ	0xFF6
 24407                           tablat	equ	0xFF5
 24408                           prodh	equ	0xFF4
 24409                           prodl	equ	0xFF3
 24410                           intcon	equ	0xFF2
 24411                           indf0	equ	0xFEF
 24412                           postinc0	equ	0xFEE
 24413                           plusw0	equ	0xFEB
 24414                           fsr0h	equ	0xFEA
 24415                           fsr0l	equ	0xFE9
 24416                           wreg	equ	0xFE8
 24417                           indf1	equ	0xFE7
 24418                           postdec1	equ	0xFE5
 24419                           fsr1h	equ	0xFE2
 24420                           fsr1l	equ	0xFE1
 24421                           indf2	equ	0xFDF
 24422                           postinc2	equ	0xFDE
 24423                           postdec2	equ	0xFDD
 24424                           plusw2	equ	0xFDB
 24425                           fsr2h	equ	0xFDA
 24426                           fsr2l	equ	0xFD9
 24427                           status	equ	0xFD8
 24428                           
 24429 ;; *************** function ___lmul *****************
 24430 ;; Defined at:
 24431 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 24432 ;; Parameters:    Size  Location     Type
 24433 ;;  multiplier      4    0[BANK0 ] unsigned long 
 24434 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 24435 ;; Auto vars:     Size  Location     Type
 24436 ;;  product         4    8[BANK0 ] unsigned long 
 24437 ;; Return value:  Size  Location     Type
 24438 ;;                  4    0[BANK0 ] unsigned long 
 24439 ;; Registers used:
 24440 ;;		wreg, status,2, status,0
 24441 ;; Tracked objects:
 24442 ;;		On entry : 0/0
 24443 ;;		On exit  : 0/0
 24444 ;;		Unchanged: 0/0
 24445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24446 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24447 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24449 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24450 ;;Total ram usage:       12 bytes
 24451 ;; Hardware stack levels used:    1
 24452 ;; Hardware stack levels required when called:    5
 24453 ;; This function calls:
 24454 ;;		Nothing
 24455 ;; This function is called by:
 24456 ;;		_GetNumber
 24457 ;;		_GetNumberUnsigned
 24458 ;; This function uses a non-reentrant model
 24459 ;;
 24460                           
 24461                           	psect	text33
 24462  00A3F2                     __ptext33:
 24463                           	opt stack 0
 24464  00A3F2                     ___lmul:
 24465                           	opt stack 23
 24466                           
 24467                           ; BSR set to: 0
 24468                           ;incstack = 0
 24469  00A3F2  0E00               	movlw	0
 24470  00A3F4  0100               	movlb	0	; () banked
 24471  00A3F6  6F68               	movwf	___lmul@product& (0+255),b
 24472  00A3F8  0E00               	movlw	0
 24473  00A3FA  6F69               	movwf	(___lmul@product+1)& (0+255),b
 24474  00A3FC  0E00               	movlw	0
 24475  00A3FE  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 24476  00A400  0E00               	movlw	0
 24477  00A402  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 24478  00A404  D000               	goto	l11404
 24479  00A406                     l11404:
 24480                           
 24481                           ; BSR set to: 0
 24482  00A406  0100               	movlb	0	; () banked
 24483  00A408  A160               	btfss	___lmul@multiplier& (0+255),0,b
 24484  00A40A  D011               	goto	l11408
 24485                           
 24486                           ; BSR set to: 0
 24487  00A40C  0100               	movlb	0	; () banked
 24488  00A40E  5164               	movf	___lmul@multiplicand& (0+255),w,b
 24489  00A410  0100               	movlb	0	; () banked
 24490  00A412  2768               	addwf	___lmul@product& (0+255),f,b
 24491  00A414  0100               	movlb	0	; () banked
 24492  00A416  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24493  00A418  0100               	movlb	0	; () banked
 24494  00A41A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 24495  00A41C  0100               	movlb	0	; () banked
 24496  00A41E  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24497  00A420  0100               	movlb	0	; () banked
 24498  00A422  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 24499  00A424  0100               	movlb	0	; () banked
 24500  00A426  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24501  00A428  0100               	movlb	0	; () banked
 24502  00A42A  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 24503  00A42C  D000               	goto	l11408
 24504  00A42E                     l11408:
 24505                           
 24506                           ; BSR set to: 0
 24507  00A42E  0100               	movlb	0	; () banked
 24508  00A430  90D8               	bcf	status,0,c
 24509  00A432  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 24510  00A434  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24511  00A436  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24512  00A438  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24513                           
 24514                           ; BSR set to: 0
 24515  00A43A  0100               	movlb	0	; () banked
 24516  00A43C  90D8               	bcf	status,0,c
 24517  00A43E  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24518  00A440  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24519  00A442  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24520  00A444  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 24521  00A446  0100               	movlb	0	; () banked
 24522  00A448  5160               	movf	___lmul@multiplier& (0+255),w,b
 24523  00A44A  0100               	movlb	0	; () banked
 24524  00A44C  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24525  00A44E  0100               	movlb	0	; () banked
 24526  00A450  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24527  00A452  0100               	movlb	0	; () banked
 24528  00A454  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24529  00A456  A4D8               	btfss	status,2,c
 24530  00A458  D7D6               	goto	l11404
 24531                           
 24532                           ; BSR set to: 0
 24533  00A45A  C068  F060         	movff	___lmul@product,?___lmul
 24534  00A45E  C069  F061         	movff	___lmul@product+1,?___lmul+1
 24535  00A462  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 24536  00A466  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 24537                           
 24538                           ; BSR set to: 0
 24539  00A46A  0012               	return		;funcret
 24540  00A46C                     __end_of___lmul:
 24541                           	opt stack 0
 24542                           tblptru	equ	0xFF8
 24543                           tblptrh	equ	0xFF7
 24544                           tblptrl	equ	0xFF6
 24545                           tablat	equ	0xFF5
 24546                           prodh	equ	0xFF4
 24547                           prodl	equ	0xFF3
 24548                           intcon	equ	0xFF2
 24549                           indf0	equ	0xFEF
 24550                           postinc0	equ	0xFEE
 24551                           plusw0	equ	0xFEB
 24552                           fsr0h	equ	0xFEA
 24553                           fsr0l	equ	0xFE9
 24554                           wreg	equ	0xFE8
 24555                           indf1	equ	0xFE7
 24556                           postdec1	equ	0xFE5
 24557                           fsr1h	equ	0xFE2
 24558                           fsr1l	equ	0xFE1
 24559                           indf2	equ	0xFDF
 24560                           postinc2	equ	0xFDE
 24561                           postdec2	equ	0xFDD
 24562                           plusw2	equ	0xFDB
 24563                           fsr2h	equ	0xFDA
 24564                           fsr2l	equ	0xFD9
 24565                           status	equ	0xFD8
 24566                           
 24567 ;; *************** function _IsLetter *****************
 24568 ;; Defined at:
 24569 ;;		line 101 in file "MISC.c"
 24570 ;; Parameters:    Size  Location     Type
 24571 ;;  data            1    wreg     unsigned char 
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;  data            1    0[BANK0 ] unsigned char 
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1    wreg      unsigned char 
 24576 ;; Registers used:
 24577 ;;		wreg, status,2, status,0
 24578 ;; Tracked objects:
 24579 ;;		On entry : 0/0
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24587 ;;Total ram usage:        1 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; Hardware stack levels required when called:    5
 24590 ;; This function calls:
 24591 ;;		Nothing
 24592 ;; This function is called by:
 24593 ;;		_IsAlphaNumeric
 24594 ;;		_GetNumber
 24595 ;;		_GetNumberUnsigned
 24596 ;; This function uses a non-reentrant model
 24597 ;;
 24598                           
 24599                           	psect	text34
 24600  00AAFE                     __ptext34:
 24601                           	opt stack 0
 24602  00AAFE                     _IsLetter:
 24603                           	opt stack 22
 24604                           
 24605                           ; BSR set to: 0
 24606                           ;incstack = 0
 24607                           ;IsLetter@data stored from wreg
 24608  00AAFE  0100               	movlb	0	; () banked
 24609  00AB00  6F60               	movwf	IsLetter@data& (0+255),b
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;MISC.c: 103: if((data >= 65 && data <= 90) || (data >= 97 && data <= 122))
 24613  00AB02  0E40               	movlw	64
 24614  00AB04  0100               	movlb	0	; () banked
 24615  00AB06  6560               	cpfsgt	IsLetter@data& (0+255),b
 24616  00AB08  D005               	goto	l10502
 24617                           
 24618                           ; BSR set to: 0
 24619  00AB0A  0E5A               	movlw	90
 24620  00AB0C  0100               	movlb	0	; () banked
 24621  00AB0E  6560               	cpfsgt	IsLetter@data& (0+255),b
 24622  00AB10  D00A               	goto	l10506
 24623  00AB12  D000               	goto	l10502
 24624  00AB14                     l10502:
 24625                           
 24626                           ; BSR set to: 0
 24627  00AB14  0E60               	movlw	96
 24628  00AB16  0100               	movlb	0	; () banked
 24629  00AB18  6560               	cpfsgt	IsLetter@data& (0+255),b
 24630  00AB1A  D007               	goto	l10510
 24631                           
 24632                           ; BSR set to: 0
 24633  00AB1C  0E7B               	movlw	123
 24634  00AB1E  0100               	movlb	0	; () banked
 24635  00AB20  6160               	cpfslt	IsLetter@data& (0+255),b
 24636  00AB22  D003               	goto	l10510
 24637  00AB24  D000               	goto	l10506
 24638  00AB26                     l10506:
 24639                           
 24640                           ; BSR set to: 0
 24641                           ;MISC.c: 104: {
 24642                           ;MISC.c: 105: return 1;
 24643  00AB26  0E01               	movlw	1
 24644                           
 24645                           ; BSR set to: 0
 24646  00AB28  0012               	return	
 24647  00AB2A                     l10510:
 24648                           
 24649                           ; BSR set to: 0
 24650                           ;MISC.c: 106: }
 24651                           ;MISC.c: 107: return 0;
 24652  00AB2A  0E00               	movlw	0
 24653  00AB2C  0012               	return	
 24654                           
 24655                           ; BSR set to: 0
 24656                           
 24657                           ; BSR set to: 0
 24658  00AB2E  0012               	return		;funcret
 24659  00AB30                     __end_of_IsLetter:
 24660                           	opt stack 0
 24661                           tblptru	equ	0xFF8
 24662                           tblptrh	equ	0xFF7
 24663                           tblptrl	equ	0xFF6
 24664                           tablat	equ	0xFF5
 24665                           prodh	equ	0xFF4
 24666                           prodl	equ	0xFF3
 24667                           intcon	equ	0xFF2
 24668                           indf0	equ	0xFEF
 24669                           postinc0	equ	0xFEE
 24670                           plusw0	equ	0xFEB
 24671                           fsr0h	equ	0xFEA
 24672                           fsr0l	equ	0xFE9
 24673                           wreg	equ	0xFE8
 24674                           indf1	equ	0xFE7
 24675                           postdec1	equ	0xFE5
 24676                           fsr1h	equ	0xFE2
 24677                           fsr1l	equ	0xFE1
 24678                           indf2	equ	0xFDF
 24679                           postinc2	equ	0xFDE
 24680                           postdec2	equ	0xFDD
 24681                           plusw2	equ	0xFDB
 24682                           fsr2h	equ	0xFDA
 24683                           fsr2l	equ	0xFD9
 24684                           status	equ	0xFD8
 24685                           
 24686 ;; *************** function _EncodeNEC *****************
 24687 ;; Defined at:
 24688 ;;		line 521 in file "IR.c"
 24689 ;; Parameters:    Size  Location     Type
 24690 ;;  address         1    wreg     unsigned char 
 24691 ;;  command         1    4[BANK0 ] unsigned char 
 24692 ;; Auto vars:     Size  Location     Type
 24693 ;;  address         1   44[BANK0 ] unsigned char 
 24694 ;;  temp4           4   40[BANK0 ] unsigned long 
 24695 ;;  temp3           4   36[BANK0 ] unsigned long 
 24696 ;;  temp2           4   32[BANK0 ] unsigned long 
 24697 ;;  temp1           4   28[BANK0 ] unsigned long 
 24698 ;; Return value:  Size  Location     Type
 24699 ;;                  4    4[BANK0 ] unsigned long 
 24700 ;; Registers used:
 24701 ;;		wreg, status,2, status,0, cstack
 24702 ;; Tracked objects:
 24703 ;;		On entry : 0/0
 24704 ;;		On exit  : 0/0
 24705 ;;		Unchanged: 0/0
 24706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24708 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24709 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24710 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;Total ram usage:       41 bytes
 24712 ;; Hardware stack levels used:    1
 24713 ;; Hardware stack levels required when called:    6
 24714 ;; This function calls:
 24715 ;;		_Reverse_Byte
 24716 ;; This function is called by:
 24717 ;;		_UseBluetooth
 24718 ;; This function uses a non-reentrant model
 24719 ;;
 24720                           
 24721                           	psect	text35
 24722  008820                     __ptext35:
 24723                           	opt stack 0
 24724  008820                     _EncodeNEC:
 24725                           	opt stack 23
 24726                           
 24727                           ; BSR set to: 0
 24728                           ;incstack = 0
 24729                           ;EncodeNEC@address stored from wreg
 24730  008820  0100               	movlb	0	; () banked
 24731  008822  6F8C               	movwf	EncodeNEC@address& (0+255),b
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;IR.c: 523: unsigned long temp1,
 24735                           ;IR.c: 524: temp2,
 24736                           ;IR.c: 525: temp3,
 24737                           ;IR.c: 526: temp4;
 24738                           ;IR.c: 534: temp1 = (unsigned long) Reverse_Byte(address);
 24739  008824  0100               	movlb	0	; () banked
 24740  008826  518C               	movf	EncodeNEC@address& (0+255),w,b
 24741  008828  EC71  F04D         	call	_Reverse_Byte
 24742  00882C  0100               	movlb	0	; () banked
 24743  00882E  6F68               	movwf	??_EncodeNEC& (0+255),b
 24744  008830  0100               	movlb	0	; () banked
 24745  008832  5168               	movf	??_EncodeNEC& (0+255),w,b
 24746  008834  0100               	movlb	0	; () banked
 24747  008836  6F7C               	movwf	EncodeNEC@temp1& (0+255),b
 24748  008838  6B7D               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 24749  00883A  6B7E               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 24750  00883C  6B7F               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 24751                           
 24752                           ;IR.c: 535: temp2 = (unsigned long) Reverse_Byte(~address);
 24753  00883E  0100               	movlb	0	; () banked
 24754  008840  518C               	movf	EncodeNEC@address& (0+255),w,b
 24755  008842  0AFF               	xorlw	255
 24756  008844  EC71  F04D         	call	_Reverse_Byte
 24757  008848  0100               	movlb	0	; () banked
 24758  00884A  6F68               	movwf	??_EncodeNEC& (0+255),b
 24759  00884C  0100               	movlb	0	; () banked
 24760  00884E  5168               	movf	??_EncodeNEC& (0+255),w,b
 24761  008850  0100               	movlb	0	; () banked
 24762  008852  6F80               	movwf	EncodeNEC@temp2& (0+255),b
 24763  008854  6B81               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 24764  008856  6B82               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 24765  008858  6B83               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 24766                           
 24767                           ;IR.c: 536: temp3 = (unsigned long) Reverse_Byte(command);
 24768  00885A  0100               	movlb	0	; () banked
 24769  00885C  5164               	movf	EncodeNEC@command& (0+255),w,b
 24770  00885E  EC71  F04D         	call	_Reverse_Byte
 24771  008862  0100               	movlb	0	; () banked
 24772  008864  6F68               	movwf	??_EncodeNEC& (0+255),b
 24773  008866  0100               	movlb	0	; () banked
 24774  008868  5168               	movf	??_EncodeNEC& (0+255),w,b
 24775  00886A  0100               	movlb	0	; () banked
 24776  00886C  6F84               	movwf	EncodeNEC@temp3& (0+255),b
 24777  00886E  6B85               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 24778  008870  6B86               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 24779  008872  6B87               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 24780                           
 24781                           ;IR.c: 537: temp4 = (unsigned long) Reverse_Byte(~command);
 24782  008874  0100               	movlb	0	; () banked
 24783  008876  5164               	movf	EncodeNEC@command& (0+255),w,b
 24784  008878  0AFF               	xorlw	255
 24785  00887A  EC71  F04D         	call	_Reverse_Byte
 24786  00887E  0100               	movlb	0	; () banked
 24787  008880  6F68               	movwf	??_EncodeNEC& (0+255),b
 24788  008882  0100               	movlb	0	; () banked
 24789  008884  5168               	movf	??_EncodeNEC& (0+255),w,b
 24790  008886  0100               	movlb	0	; () banked
 24791  008888  6F88               	movwf	EncodeNEC@temp4& (0+255),b
 24792  00888A  6B89               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 24793  00888C  6B8A               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 24794  00888E  6B8B               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 24795                           
 24796                           ; BSR set to: 0
 24797                           ;IR.c: 539: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 24798  008890  C084  F069         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 24799  008894  C085  F06A         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 24800  008898  C086  F06B         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 24801  00889C  0100               	movlb	0	; () banked
 24802  00889E  6B68               	clrf	??_EncodeNEC& (0+255),b
 24803  0088A0  C080  F06C         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 24804  0088A4  C081  F06D         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 24805  0088A8  C082  F06E         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 24806  0088AC  C083  F06F         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 24807  0088B0  C06D  F06F         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 24808  0088B4  C06C  F06E         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 24809  0088B8  0100               	movlb	0	; () banked
 24810  0088BA  6B6D               	clrf	(??_EncodeNEC+5)& (0+255),b
 24811  0088BC  6B6C               	clrf	(??_EncodeNEC+4)& (0+255),b
 24812  0088BE  C07C  F070         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 24813  0088C2  C07D  F071         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 24814  0088C6  C07E  F072         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 24815  0088CA  C07F  F073         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 24816  0088CE  C070  F073         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 24817  0088D2  0100               	movlb	0	; () banked
 24818  0088D4  6B72               	clrf	(??_EncodeNEC+10)& (0+255),b
 24819  0088D6  6B71               	clrf	(??_EncodeNEC+9)& (0+255),b
 24820  0088D8  6B70               	clrf	(??_EncodeNEC+8)& (0+255),b
 24821  0088DA  0100               	movlb	0	; () banked
 24822  0088DC  516C               	movf	(??_EncodeNEC+4)& (0+255),w,b
 24823  0088DE  0100               	movlb	0	; () banked
 24824  0088E0  2570               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 24825  0088E2  0100               	movlb	0	; () banked
 24826  0088E4  6F74               	movwf	(??_EncodeNEC+12)& (0+255),b
 24827  0088E6  0100               	movlb	0	; () banked
 24828  0088E8  516D               	movf	(??_EncodeNEC+5)& (0+255),w,b
 24829  0088EA  0100               	movlb	0	; () banked
 24830  0088EC  2171               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 24831  0088EE  0100               	movlb	0	; () banked
 24832  0088F0  6F75               	movwf	(??_EncodeNEC+13)& (0+255),b
 24833  0088F2  0100               	movlb	0	; () banked
 24834  0088F4  516E               	movf	(??_EncodeNEC+6)& (0+255),w,b
 24835  0088F6  0100               	movlb	0	; () banked
 24836  0088F8  2172               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 24837  0088FA  0100               	movlb	0	; () banked
 24838  0088FC  6F76               	movwf	(??_EncodeNEC+14)& (0+255),b
 24839  0088FE  0100               	movlb	0	; () banked
 24840  008900  516F               	movf	(??_EncodeNEC+7)& (0+255),w,b
 24841  008902  0100               	movlb	0	; () banked
 24842  008904  2173               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 24843  008906  0100               	movlb	0	; () banked
 24844  008908  6F77               	movwf	(??_EncodeNEC+15)& (0+255),b
 24845  00890A  0100               	movlb	0	; () banked
 24846  00890C  5168               	movf	??_EncodeNEC& (0+255),w,b
 24847  00890E  0100               	movlb	0	; () banked
 24848  008910  2574               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 24849  008912  0100               	movlb	0	; () banked
 24850  008914  6F78               	movwf	(??_EncodeNEC+16)& (0+255),b
 24851  008916  0100               	movlb	0	; () banked
 24852  008918  5169               	movf	(??_EncodeNEC+1)& (0+255),w,b
 24853  00891A  0100               	movlb	0	; () banked
 24854  00891C  2175               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 24855  00891E  0100               	movlb	0	; () banked
 24856  008920  6F79               	movwf	(??_EncodeNEC+17)& (0+255),b
 24857  008922  0100               	movlb	0	; () banked
 24858  008924  516A               	movf	(??_EncodeNEC+2)& (0+255),w,b
 24859  008926  0100               	movlb	0	; () banked
 24860  008928  2176               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 24861  00892A  0100               	movlb	0	; () banked
 24862  00892C  6F7A               	movwf	(??_EncodeNEC+18)& (0+255),b
 24863  00892E  0100               	movlb	0	; () banked
 24864  008930  516B               	movf	(??_EncodeNEC+3)& (0+255),w,b
 24865  008932  0100               	movlb	0	; () banked
 24866  008934  2177               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 24867  008936  0100               	movlb	0	; () banked
 24868  008938  6F7B               	movwf	(??_EncodeNEC+19)& (0+255),b
 24869  00893A  0100               	movlb	0	; () banked
 24870  00893C  5188               	movf	EncodeNEC@temp4& (0+255),w,b
 24871  00893E  0100               	movlb	0	; () banked
 24872  008940  2578               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 24873  008942  0100               	movlb	0	; () banked
 24874  008944  6F64               	movwf	?_EncodeNEC& (0+255),b
 24875  008946  0100               	movlb	0	; () banked
 24876  008948  5189               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 24877  00894A  0100               	movlb	0	; () banked
 24878  00894C  2179               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 24879  00894E  0100               	movlb	0	; () banked
 24880  008950  6F65               	movwf	(?_EncodeNEC+1)& (0+255),b
 24881  008952  0100               	movlb	0	; () banked
 24882  008954  518A               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 24883  008956  0100               	movlb	0	; () banked
 24884  008958  217A               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 24885  00895A  0100               	movlb	0	; () banked
 24886  00895C  6F66               	movwf	(?_EncodeNEC+2)& (0+255),b
 24887  00895E  0100               	movlb	0	; () banked
 24888  008960  518B               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 24889  008962  0100               	movlb	0	; () banked
 24890  008964  217B               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 24891  008966  0100               	movlb	0	; () banked
 24892  008968  6F67               	movwf	(?_EncodeNEC+3)& (0+255),b
 24893  00896A  0012               	return	
 24894                           
 24895                           ; BSR set to: 0
 24896                           
 24897                           ; BSR set to: 0
 24898  00896C  0012               	return		;funcret
 24899  00896E                     __end_of_EncodeNEC:
 24900                           	opt stack 0
 24901                           tblptru	equ	0xFF8
 24902                           tblptrh	equ	0xFF7
 24903                           tblptrl	equ	0xFF6
 24904                           tablat	equ	0xFF5
 24905                           prodh	equ	0xFF4
 24906                           prodl	equ	0xFF3
 24907                           intcon	equ	0xFF2
 24908                           indf0	equ	0xFEF
 24909                           postinc0	equ	0xFEE
 24910                           plusw0	equ	0xFEB
 24911                           fsr0h	equ	0xFEA
 24912                           fsr0l	equ	0xFE9
 24913                           wreg	equ	0xFE8
 24914                           indf1	equ	0xFE7
 24915                           postdec1	equ	0xFE5
 24916                           fsr1h	equ	0xFE2
 24917                           fsr1l	equ	0xFE1
 24918                           indf2	equ	0xFDF
 24919                           postinc2	equ	0xFDE
 24920                           postdec2	equ	0xFDD
 24921                           plusw2	equ	0xFDB
 24922                           fsr2h	equ	0xFDA
 24923                           fsr2l	equ	0xFD9
 24924                           status	equ	0xFD8
 24925                           
 24926 ;; *************** function _DisplayRF_Channel *****************
 24927 ;; Defined at:
 24928 ;;		line 260 in file "RF.c"
 24929 ;; Parameters:    Size  Location     Type
 24930 ;;  channel         1    wreg     unsigned char 
 24931 ;; Auto vars:     Size  Location     Type
 24932 ;;  channel         1    4[BANK0 ] unsigned char 
 24933 ;; Return value:  Size  Location     Type
 24934 ;;		None               void
 24935 ;; Registers used:
 24936 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24937 ;; Tracked objects:
 24938 ;;		On entry : 0/0
 24939 ;;		On exit  : 0/0
 24940 ;;		Unchanged: 0/0
 24941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24946 ;;Total ram usage:        1 bytes
 24947 ;; Hardware stack levels used:    1
 24948 ;; Hardware stack levels required when called:    7
 24949 ;; This function calls:
 24950 ;;		_UARTstring_CONST
 24951 ;; This function is called by:
 24952 ;;		_UseBluetooth
 24953 ;; This function uses a non-reentrant model
 24954 ;;
 24955                           
 24956                           	psect	text36
 24957  0096EA                     __ptext36:
 24958                           	opt stack 0
 24959  0096EA                     _DisplayRF_Channel:
 24960                           	opt stack 22
 24961                           
 24962                           ; BSR set to: 0
 24963                           ;incstack = 0
 24964                           ;DisplayRF_Channel@channel stored from wreg
 24965  0096EA  0100               	movlb	0	; () banked
 24966  0096EC  6F64               	movwf	DisplayRF_Channel@channel& (0+255),b
 24967                           
 24968                           ; BSR set to: 0
 24969                           ;RF.c: 262: switch(channel)
 24970  0096EE  D048               	goto	l12480
 24971  0096F0                     l12462:
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;RF.c: 265: UARTstring_CONST(Conf1_ChannelD_STR);
 24975  0096F0  0EC7               	movlw	low _Conf1_ChannelD_STR
 24976  0096F2  0100               	movlb	0	; () banked
 24977  0096F4  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 24978  0096F6  0EEE               	movlw	high _Conf1_ChannelD_STR
 24979  0096F8  0100               	movlb	0	; () banked
 24980  0096FA  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 24981  0096FC  EC98  F055         	call	_UARTstring_CONST	;wreg free
 24982                           
 24983                           ;RF.c: 266: break;
 24984  009700  0012               	return	
 24985  009702                     l12464:
 24986                           
 24987                           ;RF.c: 268: UARTstring_CONST(Conf1_ChannelE_STR);
 24988  009702  0ED6               	movlw	low _Conf1_ChannelE_STR
 24989  009704  0100               	movlb	0	; () banked
 24990  009706  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 24991  009708  0EEE               	movlw	high _Conf1_ChannelE_STR
 24992  00970A  0100               	movlb	0	; () banked
 24993  00970C  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 24994  00970E  EC98  F055         	call	_UARTstring_CONST	;wreg free
 24995                           
 24996                           ;RF.c: 269: break;
 24997  009712  0012               	return	
 24998  009714                     l12466:
 24999                           
 25000                           ;RF.c: 271: UARTstring_CONST(Conf1_ChannelF_STR);
 25001  009714  0EE5               	movlw	low _Conf1_ChannelF_STR
 25002  009716  0100               	movlb	0	; () banked
 25003  009718  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 25004  00971A  0EEE               	movlw	high _Conf1_ChannelF_STR
 25005  00971C  0100               	movlb	0	; () banked
 25006  00971E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 25007  009720  EC98  F055         	call	_UARTstring_CONST	;wreg free
 25008                           
 25009                           ;RF.c: 272: break;
 25010  009724  0012               	return	
 25011  009726                     l12468:
 25012                           
 25013                           ;RF.c: 274: UARTstring_CONST(Conf2_ChannelB_STR);
 25014  009726  0EF4               	movlw	low _Conf2_ChannelB_STR
 25015  009728  0100               	movlb	0	; () banked
 25016  00972A  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 25017  00972C  0EEE               	movlw	high _Conf2_ChannelB_STR
 25018  00972E  0100               	movlb	0	; () banked
 25019  009730  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 25020  009732  EC98  F055         	call	_UARTstring_CONST	;wreg free
 25021                           
 25022                           ;RF.c: 275: break;
 25023  009736  0012               	return	
 25024  009738                     l12470:
 25025                           
 25026                           ;RF.c: 277: UARTstring_CONST(Conf2_ChannelD_STR);
 25027  009738  0E03               	movlw	low _Conf2_ChannelD_STR
 25028  00973A  0100               	movlb	0	; () banked
 25029  00973C  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 25030  00973E  0EEF               	movlw	high _Conf2_ChannelD_STR
 25031  009740  0100               	movlb	0	; () banked
 25032  009742  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 25033  009744  EC98  F055         	call	_UARTstring_CONST	;wreg free
 25034                           
 25035                           ;RF.c: 278: break;
 25036  009748  0012               	return	
 25037  00974A                     l12472:
 25038                           
 25039                           ;RF.c: 280: UARTstring_CONST(Conf2_ChannelH_1_STR);
 25040  00974A  0EF4               	movlw	low _Conf2_ChannelH_1_STR
 25041  00974C  0100               	movlb	0	; () banked
 25042  00974E  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 25043  009750  0EED               	movlw	high _Conf2_ChannelH_1_STR
 25044  009752  0100               	movlb	0	; () banked
 25045  009754  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 25046  009756  EC98  F055         	call	_UARTstring_CONST	;wreg free
 25047                           
 25048                           ;RF.c: 281: break;
 25049  00975A  0012               	return	
 25050  00975C                     l12474:
 25051                           
 25052                           ;RF.c: 283: UARTstring_CONST(Conf2_ChannelH_2_STR);
 25053  00975C  0E05               	movlw	low _Conf2_ChannelH_2_STR
 25054  00975E  0100               	movlb	0	; () banked
 25055  009760  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 25056  009762  0EEE               	movlw	high _Conf2_ChannelH_2_STR
 25057  009764  0100               	movlb	0	; () banked
 25058  009766  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 25059  009768  EC98  F055         	call	_UARTstring_CONST	;wreg free
 25060                           
 25061                           ;RF.c: 284: break;
 25062  00976C  0012               	return	
 25063  00976E                     l12476:
 25064                           
 25065                           ;RF.c: 286: UARTstring_CONST(Conf2_ChannelH_3_STR);
 25066  00976E  0E16               	movlw	low _Conf2_ChannelH_3_STR
 25067  009770  0100               	movlb	0	; () banked
 25068  009772  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 25069  009774  0EEE               	movlw	high _Conf2_ChannelH_3_STR
 25070  009776  0100               	movlb	0	; () banked
 25071  009778  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 25072  00977A  EC98  F055         	call	_UARTstring_CONST	;wreg free
 25073                           
 25074                           ;RF.c: 290: }
 25075                           
 25076                           ;RF.c: 289: break;
 25077                           
 25078                           ;RF.c: 288: default:
 25079                           
 25080                           ;RF.c: 287: break;
 25081  00977E  0012               	return	
 25082  009780                     l12480:
 25083  009780  0100               	movlb	0	; () banked
 25084  009782  5164               	movf	DisplayRF_Channel@channel& (0+255),w,b
 25085                           
 25086                           ; Switch size 1, requested type "space"
 25087                           ; Number of cases is 8, Range of values is 0 to 7
 25088                           ; switch strategies available:
 25089                           ; Name         Instructions Cycles
 25090                           ; simple_byte           25    13 (average)
 25091                           ;	Chosen strategy is simple_byte
 25092  009784  0A00               	xorlw	0	; case 0
 25093  009786  B4D8               	btfsc	status,2,c
 25094  009788  D7B3               	goto	l12462
 25095  00978A  0A01               	xorlw	1	; case 1
 25096  00978C  B4D8               	btfsc	status,2,c
 25097  00978E  D7B9               	goto	l12464
 25098  009790  0A03               	xorlw	3	; case 2
 25099  009792  B4D8               	btfsc	status,2,c
 25100  009794  D7BF               	goto	l12466
 25101  009796  0A01               	xorlw	1	; case 3
 25102  009798  B4D8               	btfsc	status,2,c
 25103  00979A  D7C5               	goto	l12468
 25104  00979C  0A07               	xorlw	7	; case 4
 25105  00979E  B4D8               	btfsc	status,2,c
 25106  0097A0  D7CB               	goto	l12470
 25107  0097A2  0A01               	xorlw	1	; case 5
 25108  0097A4  B4D8               	btfsc	status,2,c
 25109  0097A6  D7D1               	goto	l12472
 25110  0097A8  0A03               	xorlw	3	; case 6
 25111  0097AA  B4D8               	btfsc	status,2,c
 25112  0097AC  D7D7               	goto	l12474
 25113  0097AE  0A01               	xorlw	1	; case 7
 25114  0097B0  A4D8               	btfss	status,2,c
 25115  0097B2  0012               	return	
 25116  0097B4  D7DC               	goto	l12476
 25117                           
 25118                           ; BSR set to: 0
 25119  0097B6  0012               	return		;funcret
 25120  0097B8                     __end_of_DisplayRF_Channel:
 25121                           	opt stack 0
 25122                           tblptru	equ	0xFF8
 25123                           tblptrh	equ	0xFF7
 25124                           tblptrl	equ	0xFF6
 25125                           tablat	equ	0xFF5
 25126                           prodh	equ	0xFF4
 25127                           prodl	equ	0xFF3
 25128                           intcon	equ	0xFF2
 25129                           indf0	equ	0xFEF
 25130                           postinc0	equ	0xFEE
 25131                           plusw0	equ	0xFEB
 25132                           fsr0h	equ	0xFEA
 25133                           fsr0l	equ	0xFE9
 25134                           wreg	equ	0xFE8
 25135                           indf1	equ	0xFE7
 25136                           postdec1	equ	0xFE5
 25137                           fsr1h	equ	0xFE2
 25138                           fsr1l	equ	0xFE1
 25139                           indf2	equ	0xFDF
 25140                           postinc2	equ	0xFDE
 25141                           postdec2	equ	0xFDD
 25142                           plusw2	equ	0xFDB
 25143                           fsr2h	equ	0xFDA
 25144                           fsr2l	equ	0xFD9
 25145                           status	equ	0xFD8
 25146                           
 25147 ;; *************** function _DecodeNEC *****************
 25148 ;; Defined at:
 25149 ;;		line 547 in file "IR.c"
 25150 ;; Parameters:    Size  Location     Type
 25151 ;;  Nec             4    4[BANK0 ] unsigned long 
 25152 ;;  address         2    8[BANK0 ] PTR unsigned char 
 25153 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 25154 ;;  command         2   10[BANK0 ] PTR unsigned char 
 25155 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 25156 ;; Auto vars:     Size  Location     Type
 25157 ;;  temp1           1   18[BANK0 ] unsigned char 
 25158 ;;  temp3           1   17[BANK0 ] unsigned char 
 25159 ;;  temp2           1   16[BANK0 ] unsigned char 
 25160 ;; Return value:  Size  Location     Type
 25161 ;;                  1    wreg      unsigned char 
 25162 ;; Registers used:
 25163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25164 ;; Tracked objects:
 25165 ;;		On entry : 0/0
 25166 ;;		On exit  : 0/0
 25167 ;;		Unchanged: 0/0
 25168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25169 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25170 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25172 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25173 ;;Total ram usage:       15 bytes
 25174 ;; Hardware stack levels used:    1
 25175 ;; Hardware stack levels required when called:    6
 25176 ;; This function calls:
 25177 ;;		_Reverse_Byte
 25178 ;; This function is called by:
 25179 ;;		_UseIRCode
 25180 ;;		_UseBluetooth
 25181 ;; This function uses a non-reentrant model
 25182 ;;
 25183                           
 25184                           	psect	text37
 25185  009C4C                     __ptext37:
 25186                           	opt stack 0
 25187  009C4C                     _DecodeNEC:
 25188                           	opt stack 23
 25189                           
 25190                           ;IR.c: 549: unsigned char temp1,
 25191                           ;IR.c: 550: temp2,
 25192                           ;IR.c: 551: temp3;
 25193                           ;IR.c: 553: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 25194                           
 25195                           ;incstack = 0
 25196  009C4C  0100               	movlb	0	; () banked
 25197  009C4E  5164               	movf	DecodeNEC@Nec& (0+255),w,b
 25198  009C50  EC71  F04D         	call	_Reverse_Byte
 25199  009C54  0AFF               	xorlw	255
 25200  009C56  0100               	movlb	0	; () banked
 25201  009C58  6F72               	movwf	DecodeNEC@temp1& (0+255),b
 25202                           
 25203                           ;IR.c: 554: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 25204  009C5A  0100               	movlb	0	; () banked
 25205  009C5C  5165               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 25206  009C5E  EC71  F04D         	call	_Reverse_Byte
 25207  009C62  0100               	movlb	0	; () banked
 25208  009C64  6F70               	movwf	DecodeNEC@temp2& (0+255),b
 25209                           
 25210                           ; BSR set to: 0
 25211                           ;IR.c: 555: if(temp1 != temp2)
 25212  009C66  0100               	movlb	0	; () banked
 25213  009C68  5170               	movf	DecodeNEC@temp2& (0+255),w,b
 25214  009C6A  0100               	movlb	0	; () banked
 25215  009C6C  1972               	xorwf	DecodeNEC@temp1& (0+255),w,b
 25216  009C6E  B4D8               	btfsc	status,2,c
 25217  009C70  D002               	goto	l12302
 25218                           
 25219                           ; BSR set to: 0
 25220                           ;IR.c: 556: {
 25221                           ;IR.c: 558: return 0;
 25222  009C72  0E00               	movlw	0
 25223                           
 25224                           ; BSR set to: 0
 25225  009C74  0012               	return	
 25226  009C76                     l12302:
 25227                           
 25228                           ; BSR set to: 0
 25229                           ;IR.c: 559: }
 25230                           ;IR.c: 560: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 25231  009C76  0100               	movlb	0	; () banked
 25232  009C78  5166               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 25233  009C7A  EC71  F04D         	call	_Reverse_Byte
 25234  009C7E  0AFF               	xorlw	255
 25235  009C80  0100               	movlb	0	; () banked
 25236  009C82  6F72               	movwf	DecodeNEC@temp1& (0+255),b
 25237                           
 25238                           ;IR.c: 561: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 25239  009C84  0E00               	movlw	0
 25240  009C86  0100               	movlb	0	; () banked
 25241  009C88  1564               	andwf	DecodeNEC@Nec& (0+255),w,b
 25242  009C8A  0100               	movlb	0	; () banked
 25243  009C8C  6F6C               	movwf	??_DecodeNEC& (0+255),b
 25244  009C8E  0E00               	movlw	0
 25245  009C90  0100               	movlb	0	; () banked
 25246  009C92  1565               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 25247  009C94  0100               	movlb	0	; () banked
 25248  009C96  6F6D               	movwf	(??_DecodeNEC+1)& (0+255),b
 25249  009C98  0E00               	movlw	0
 25250  009C9A  0100               	movlb	0	; () banked
 25251  009C9C  1566               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 25252  009C9E  0100               	movlb	0	; () banked
 25253  009CA0  6F6E               	movwf	(??_DecodeNEC+2)& (0+255),b
 25254  009CA2  0EFF               	movlw	255
 25255  009CA4  0100               	movlb	0	; () banked
 25256  009CA6  1567               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 25257  009CA8  0100               	movlb	0	; () banked
 25258  009CAA  6F6F               	movwf	(??_DecodeNEC+3)& (0+255),b
 25259  009CAC  0E19               	movlw	25
 25260  009CAE  D006               	goto	u13780
 25261  009CB0                     u13785:
 25262  009CB0  0100               	movlb	0	; () banked
 25263  009CB2  90D8               	bcf	status,0,c
 25264  009CB4  336F               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 25265  009CB6  336E               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 25266  009CB8  336D               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 25267  009CBA  336C               	rrcf	??_DecodeNEC& (0+255),f,b
 25268  009CBC                     u13780:
 25269  009CBC  2EE8               	decfsz	wreg,f,c
 25270  009CBE  D7F8               	goto	u13785
 25271  009CC0  0100               	movlb	0	; () banked
 25272  009CC2  516C               	movf	??_DecodeNEC& (0+255),w,b
 25273  009CC4  EC71  F04D         	call	_Reverse_Byte
 25274  009CC8  0100               	movlb	0	; () banked
 25275  009CCA  6F71               	movwf	DecodeNEC@temp3& (0+255),b
 25276                           
 25277                           ; BSR set to: 0
 25278                           ;IR.c: 562: if(temp1 != temp3)
 25279  009CCC  0100               	movlb	0	; () banked
 25280  009CCE  5171               	movf	DecodeNEC@temp3& (0+255),w,b
 25281  009CD0  0100               	movlb	0	; () banked
 25282  009CD2  1972               	xorwf	DecodeNEC@temp1& (0+255),w,b
 25283  009CD4  B4D8               	btfsc	status,2,c
 25284  009CD6  D002               	goto	l12310
 25285                           
 25286                           ; BSR set to: 0
 25287                           ;IR.c: 563: {
 25288                           ;IR.c: 565: return 0;
 25289  009CD8  0E00               	movlw	0
 25290                           
 25291                           ; BSR set to: 0
 25292  009CDA  0012               	return	
 25293  009CDC                     l12310:
 25294                           
 25295                           ; BSR set to: 0
 25296                           ;IR.c: 566: }
 25297                           ;IR.c: 567: *command = temp2;
 25298  009CDC  C06A  FFD9         	movff	DecodeNEC@command,fsr2l
 25299  009CE0  C06B  FFDA         	movff	DecodeNEC@command+1,fsr2h
 25300  009CE4  C070  FFDF         	movff	DecodeNEC@temp2,indf2
 25301                           
 25302                           ;IR.c: 568: *address = temp3;
 25303  009CE8  C068  FFD9         	movff	DecodeNEC@address,fsr2l
 25304  009CEC  C069  FFDA         	movff	DecodeNEC@address+1,fsr2h
 25305  009CF0  C071  FFDF         	movff	DecodeNEC@temp3,indf2
 25306                           
 25307                           ; BSR set to: 0
 25308                           ;IR.c: 569: return 1;
 25309  009CF4  0E01               	movlw	1
 25310  009CF6  0012               	return	
 25311                           
 25312                           ; BSR set to: 0
 25313                           
 25314                           ; BSR set to: 0
 25315  009CF8  0012               	return		;funcret
 25316  009CFA                     __end_of_DecodeNEC:
 25317                           	opt stack 0
 25318                           tblptru	equ	0xFF8
 25319                           tblptrh	equ	0xFF7
 25320                           tblptrl	equ	0xFF6
 25321                           tablat	equ	0xFF5
 25322                           prodh	equ	0xFF4
 25323                           prodl	equ	0xFF3
 25324                           intcon	equ	0xFF2
 25325                           indf0	equ	0xFEF
 25326                           postinc0	equ	0xFEE
 25327                           plusw0	equ	0xFEB
 25328                           fsr0h	equ	0xFEA
 25329                           fsr0l	equ	0xFE9
 25330                           wreg	equ	0xFE8
 25331                           indf1	equ	0xFE7
 25332                           postdec1	equ	0xFE5
 25333                           fsr1h	equ	0xFE2
 25334                           fsr1l	equ	0xFE1
 25335                           indf2	equ	0xFDF
 25336                           postinc2	equ	0xFDE
 25337                           postdec2	equ	0xFDD
 25338                           plusw2	equ	0xFDB
 25339                           fsr2h	equ	0xFDA
 25340                           fsr2l	equ	0xFD9
 25341                           status	equ	0xFD8
 25342                           
 25343 ;; *************** function _Reverse_Byte *****************
 25344 ;; Defined at:
 25345 ;;		line 436 in file "MISC.c"
 25346 ;; Parameters:    Size  Location     Type
 25347 ;;  This            1    wreg     unsigned char 
 25348 ;; Auto vars:     Size  Location     Type
 25349 ;;  This            1    3[BANK0 ] unsigned char 
 25350 ;;  temp            1    2[BANK0 ] unsigned char 
 25351 ;; Return value:  Size  Location     Type
 25352 ;;                  1    wreg      unsigned char 
 25353 ;; Registers used:
 25354 ;;		wreg, status,2, status,0
 25355 ;; Tracked objects:
 25356 ;;		On entry : 0/0
 25357 ;;		On exit  : 0/0
 25358 ;;		Unchanged: 0/0
 25359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25363 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25364 ;;Total ram usage:        4 bytes
 25365 ;; Hardware stack levels used:    1
 25366 ;; Hardware stack levels required when called:    5
 25367 ;; This function calls:
 25368 ;;		Nothing
 25369 ;; This function is called by:
 25370 ;;		_EncodeNEC
 25371 ;;		_DecodeNEC
 25372 ;; This function uses a non-reentrant model
 25373 ;;
 25374                           
 25375                           	psect	text38
 25376  009AE2                     __ptext38:
 25377                           	opt stack 0
 25378  009AE2                     _Reverse_Byte:
 25379                           	opt stack 23
 25380                           
 25381                           ; BSR set to: 0
 25382                           ;incstack = 0
 25383                           ;Reverse_Byte@This stored from wreg
 25384  009AE2  0100               	movlb	0	; () banked
 25385  009AE4  6F63               	movwf	Reverse_Byte@This& (0+255),b
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;MISC.c: 438: unsigned char temp=0;
 25389  009AE6  0E00               	movlw	0
 25390  009AE8  0100               	movlb	0	; () banked
 25391  009AEA  6F62               	movwf	Reverse_Byte@temp& (0+255),b
 25392                           
 25393                           ; BSR set to: 0
 25394                           ;MISC.c: 440: temp += (This & 0x01) << 7;
 25395  009AEC  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 25396  009AF0  0E01               	movlw	1
 25397  009AF2  0100               	movlb	0	; () banked
 25398  009AF4  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 25399  009AF6  0E00               	movlw	0
 25400  009AF8  B160               	btfsc	??_Reverse_Byte& (0+255),0,b
 25401  009AFA  0E80               	movlw	128
 25402  009AFC  6F60               	movwf	??_Reverse_Byte& (0+255),b
 25403  009AFE  0100               	movlb	0	; () banked
 25404  009B00  5160               	movf	??_Reverse_Byte& (0+255),w,b
 25405  009B02  0100               	movlb	0	; () banked
 25406  009B04  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25407                           
 25408                           ; BSR set to: 0
 25409                           ;MISC.c: 441: temp += (This & 0x02) << 5;
 25410  009B06  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 25411  009B0A  0E02               	movlw	2
 25412  009B0C  0100               	movlb	0	; () banked
 25413  009B0E  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 25414  009B10  0E05               	movlw	5
 25415  009B12  0100               	movlb	0	; () banked
 25416  009B14  6F61               	movwf	(??_Reverse_Byte+1)& (0+255),b
 25417  009B16                     u11595:
 25418  009B16  0100               	movlb	0	; () banked
 25419  009B18  90D8               	bcf	status,0,c
 25420  009B1A  3760               	rlcf	??_Reverse_Byte& (0+255),f,b
 25421  009B1C  0100               	movlb	0	; () banked
 25422  009B1E  2F61               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 25423  009B20  D7FA               	goto	u11595
 25424  009B22  0100               	movlb	0	; () banked
 25425  009B24  5160               	movf	??_Reverse_Byte& (0+255),w,b
 25426  009B26  0100               	movlb	0	; () banked
 25427  009B28  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25428                           
 25429                           ; BSR set to: 0
 25430                           ;MISC.c: 442: temp += (This & 0x04) << 3;
 25431  009B2A  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 25432  009B2E  0E04               	movlw	4
 25433  009B30  0100               	movlb	0	; () banked
 25434  009B32  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 25435  009B34  0100               	movlb	0	; () banked
 25436  009B36  90D8               	bcf	status,0,c
 25437  009B38  3760               	rlcf	??_Reverse_Byte& (0+255),f,b
 25438  009B3A  0100               	movlb	0	; () banked
 25439  009B3C  90D8               	bcf	status,0,c
 25440  009B3E  3760               	rlcf	??_Reverse_Byte& (0+255),f,b
 25441  009B40  0100               	movlb	0	; () banked
 25442  009B42  90D8               	bcf	status,0,c
 25443  009B44  3560               	rlcf	??_Reverse_Byte& (0+255),w,b
 25444  009B46  0100               	movlb	0	; () banked
 25445  009B48  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25446                           
 25447                           ; BSR set to: 0
 25448                           ;MISC.c: 443: temp += (This & 0x08) << 1;
 25449  009B4A  C063  F060         	movff	Reverse_Byte@This,??_Reverse_Byte
 25450  009B4E  0E08               	movlw	8
 25451  009B50  0100               	movlb	0	; () banked
 25452  009B52  1760               	andwf	??_Reverse_Byte& (0+255),f,b
 25453  009B54  0100               	movlb	0	; () banked
 25454  009B56  90D8               	bcf	status,0,c
 25455  009B58  3560               	rlcf	??_Reverse_Byte& (0+255),w,b
 25456  009B5A  0100               	movlb	0	; () banked
 25457  009B5C  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25458                           
 25459                           ; BSR set to: 0
 25460                           ;MISC.c: 444: temp += (This & 0x10) >> 1;
 25461  009B5E  0100               	movlb	0	; () banked
 25462  009B60  90D8               	bcf	status,0,c
 25463  009B62  3163               	rrcf	Reverse_Byte@This& (0+255),w,b
 25464  009B64  0B08               	andlw	8
 25465  009B66  0100               	movlb	0	; () banked
 25466  009B68  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25467                           
 25468                           ; BSR set to: 0
 25469                           ;MISC.c: 445: temp += (This & 0x20) >> 3;
 25470  009B6A  0100               	movlb	0	; () banked
 25471  009B6C  3963               	swapf	Reverse_Byte@This& (0+255),w,b
 25472  009B6E  46E8               	rlncf	wreg,f,c
 25473  009B70  0B1F               	andlw	31
 25474  009B72  0B04               	andlw	4
 25475  009B74  0100               	movlb	0	; () banked
 25476  009B76  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25477                           
 25478                           ; BSR set to: 0
 25479                           ;MISC.c: 446: temp += (This & 0x40) >> 5;
 25480  009B78  0100               	movlb	0	; () banked
 25481  009B7A  3963               	swapf	Reverse_Byte@This& (0+255),w,b
 25482  009B7C  42E8               	rrncf	wreg,f,c
 25483  009B7E  0B07               	andlw	7
 25484  009B80  0B02               	andlw	2
 25485  009B82  0100               	movlb	0	; () banked
 25486  009B84  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25487                           
 25488                           ; BSR set to: 0
 25489                           ;MISC.c: 447: temp += (This & 0x80) >> 7;
 25490  009B86  0100               	movlb	0	; () banked
 25491  009B88  4563               	rlncf	Reverse_Byte@This& (0+255),w,b
 25492  009B8A  0B01               	andlw	1
 25493  009B8C  0100               	movlb	0	; () banked
 25494  009B8E  2762               	addwf	Reverse_Byte@temp& (0+255),f,b
 25495                           
 25496                           ; BSR set to: 0
 25497                           ;MISC.c: 449: return temp;
 25498  009B90  0100               	movlb	0	; () banked
 25499  009B92  5162               	movf	Reverse_Byte@temp& (0+255),w,b
 25500  009B94  0012               	return	
 25501                           
 25502                           ; BSR set to: 0
 25503                           
 25504                           ; BSR set to: 0
 25505  009B96  0012               	return		;funcret
 25506  009B98                     __end_of_Reverse_Byte:
 25507                           	opt stack 0
 25508                           tblptru	equ	0xFF8
 25509                           tblptrh	equ	0xFF7
 25510                           tblptrl	equ	0xFF6
 25511                           tablat	equ	0xFF5
 25512                           prodh	equ	0xFF4
 25513                           prodl	equ	0xFF3
 25514                           intcon	equ	0xFF2
 25515                           indf0	equ	0xFEF
 25516                           postinc0	equ	0xFEE
 25517                           plusw0	equ	0xFEB
 25518                           fsr0h	equ	0xFEA
 25519                           fsr0l	equ	0xFE9
 25520                           wreg	equ	0xFE8
 25521                           indf1	equ	0xFE7
 25522                           postdec1	equ	0xFE5
 25523                           fsr1h	equ	0xFE2
 25524                           fsr1l	equ	0xFE1
 25525                           indf2	equ	0xFDF
 25526                           postinc2	equ	0xFDE
 25527                           postdec2	equ	0xFDD
 25528                           plusw2	equ	0xFDB
 25529                           fsr2h	equ	0xFDA
 25530                           fsr2l	equ	0xFD9
 25531                           status	equ	0xFD8
 25532                           
 25533 ;; *************** function _Init_System *****************
 25534 ;; Defined at:
 25535 ;;		line 109 in file "user.c"
 25536 ;; Parameters:    Size  Location     Type
 25537 ;;		None
 25538 ;; Auto vars:     Size  Location     Type
 25539 ;;  buf            50  187[BANK1 ] unsigned char [50]
 25540 ;; Return value:  Size  Location     Type
 25541 ;;		None               void
 25542 ;; Registers used:
 25543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25544 ;; Tracked objects:
 25545 ;;		On entry : 0/0
 25546 ;;		On exit  : 0/0
 25547 ;;		Unchanged: 0/0
 25548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25550 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25552 ;;      Totals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25553 ;;Total ram usage:       50 bytes
 25554 ;; Hardware stack levels used:    1
 25555 ;; Hardware stack levels required when called:   12
 25556 ;; This function calls:
 25557 ;;		_BufferCopy
 25558 ;;		_EEPROMinitialized
 25559 ;;		_InitADC
 25560 ;;		_InitBluetooth
 25561 ;;		_InitIR
 25562 ;;		_InitTimers
 25563 ;;		_InitUART
 25564 ;;		_SetEEPROM2
 25565 ;;		_SetEEPROMdefault
 25566 ;;		_SyncEEPROMToGlobal
 25567 ;;		_SyncGlobalToEEPROM
 25568 ;;		_cleanBuffer
 25569 ;;		_sprintf
 25570 ;; This function is called by:
 25571 ;;		_main
 25572 ;; This function uses a non-reentrant model
 25573 ;;
 25574                           
 25575                           	psect	text39
 25576  007FBC                     __ptext39:
 25577                           	opt stack 0
 25578  007FBC                     _Init_System:
 25579                           	opt stack 18
 25580                           
 25581                           ;user.c: 111: unsigned char buf[50];
 25582                           ;user.c: 113: cleanBuffer(ReceivedString, 100);
 25583                           
 25584                           ; BSR set to: 0
 25585                           ;incstack = 0
 25586  007FBC  0E64               	movlw	low _ReceivedString
 25587  007FBE  0100               	movlb	0	; () banked
 25588  007FC0  6F60               	movwf	cleanBuffer@data& (0+255),b
 25589  007FC2  0E04               	movlw	high _ReceivedString
 25590  007FC4  0100               	movlb	0	; () banked
 25591  007FC6  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 25592  007FC8  0E00               	movlw	0
 25593  007FCA  0100               	movlb	0	; () banked
 25594  007FCC  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 25595  007FCE  0E64               	movlw	100
 25596  007FD0  6F62               	movwf	cleanBuffer@count& (0+255),b
 25597  007FD2  EC3D  F053         	call	_cleanBuffer	;wreg free
 25598                           
 25599                           ;user.c: 116: IPR1bits.RCIP = 0;
 25600  007FD6  9A9F               	bcf	3999,5,c	;volatile
 25601                           
 25602                           ;user.c: 117: INTCON2bits.RBIP = 1;
 25603  007FD8  80F1               	bsf	intcon2,0,c	;volatile
 25604                           
 25605                           ;user.c: 118: INTCON2bits.TMR0IP = 1;
 25606  007FDA  84F1               	bsf	intcon2,2,c	;volatile
 25607                           
 25608                           ;user.c: 119: IPR1bits.TMR2IP = 1;
 25609  007FDC  829F               	bsf	3999,1,c	;volatile
 25610                           
 25611                           ;user.c: 120: IPR1bits.TMR1IP = 0;
 25612  007FDE  909F               	bcf	3999,0,c	;volatile
 25613                           
 25614                           ;user.c: 121: IPR2bits.TMR3IP = 1;
 25615  007FE0  82A2               	bsf	4002,1,c	;volatile
 25616                           
 25617                           ;user.c: 123: cleanBuffer(BluetoothFirmware1,30);
 25618  007FE2  0EC8               	movlw	low _BluetoothFirmware1
 25619  007FE4  0100               	movlb	0	; () banked
 25620  007FE6  6F60               	movwf	cleanBuffer@data& (0+255),b
 25621  007FE8  0E04               	movlw	high _BluetoothFirmware1
 25622  007FEA  0100               	movlb	0	; () banked
 25623  007FEC  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 25624  007FEE  0E00               	movlw	0
 25625  007FF0  0100               	movlb	0	; () banked
 25626  007FF2  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 25627  007FF4  0E1E               	movlw	30
 25628  007FF6  6F62               	movwf	cleanBuffer@count& (0+255),b
 25629  007FF8  EC3D  F053         	call	_cleanBuffer	;wreg free
 25630                           
 25631                           ;user.c: 124: cleanBuffer(BluetoothFirmware2,30);
 25632  007FFC  0E32               	movlw	low _BluetoothFirmware2
 25633  007FFE  0100               	movlb	0	; () banked
 25634  008000  6F60               	movwf	cleanBuffer@data& (0+255),b
 25635  008002  0E05               	movlw	high _BluetoothFirmware2
 25636  008004  0100               	movlb	0	; () banked
 25637  008006  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 25638  008008  0E00               	movlw	0
 25639  00800A  0100               	movlb	0	; () banked
 25640  00800C  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 25641  00800E  0E1E               	movlw	30
 25642  008010  6F62               	movwf	cleanBuffer@count& (0+255),b
 25643  008012  EC3D  F053         	call	_cleanBuffer	;wreg free
 25644                           
 25645                           ;user.c: 126: sprintf(buf,"System must be");
 25646  008016  0EBB               	movlw	low Init_System@buf
 25647  008018  0100               	movlb	0	; () banked
 25648  00801A  6FAE               	movwf	sprintf@sp& (0+255),b
 25649  00801C  0E01               	movlw	high Init_System@buf
 25650  00801E  0100               	movlb	0	; () banked
 25651  008020  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 25652  008022  0E42               	movlw	low STR_4
 25653  008024  0100               	movlb	0	; () banked
 25654  008026  6FB0               	movwf	sprintf@f& (0+255),b
 25655  008028  0EFE               	movlw	high STR_4
 25656  00802A  0100               	movlb	0	; () banked
 25657  00802C  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 25658  00802E  EC22  F016         	call	_sprintf	;wreg free
 25659                           
 25660                           ;user.c: 127: BufferCopy(buf, BluetoothFirmware1, 30, 0);
 25661  008032  0EBB               	movlw	low Init_System@buf
 25662  008034  0100               	movlb	0	; () banked
 25663  008036  6F68               	movwf	BufferCopy@from& (0+255),b
 25664  008038  0E01               	movlw	high Init_System@buf
 25665  00803A  0100               	movlb	0	; () banked
 25666  00803C  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 25667  00803E  0EC8               	movlw	low _BluetoothFirmware1
 25668  008040  0100               	movlb	0	; () banked
 25669  008042  6F6A               	movwf	BufferCopy@to& (0+255),b
 25670  008044  0E04               	movlw	high _BluetoothFirmware1
 25671  008046  0100               	movlb	0	; () banked
 25672  008048  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 25673  00804A  0E1E               	movlw	30
 25674  00804C  0100               	movlb	0	; () banked
 25675  00804E  6F6C               	movwf	BufferCopy@count& (0+255),b
 25676  008050  0E00               	movlw	0
 25677  008052  0100               	movlb	0	; () banked
 25678  008054  6F6D               	movwf	BufferCopy@shift& (0+255),b
 25679  008056  EC36  F051         	call	_BufferCopy	;wreg free
 25680                           
 25681                           ;user.c: 128: sprintf(buf,"RESET to read version!");
 25682  00805A  0EBB               	movlw	low Init_System@buf
 25683  00805C  0100               	movlb	0	; () banked
 25684  00805E  6FAE               	movwf	sprintf@sp& (0+255),b
 25685  008060  0E01               	movlw	high Init_System@buf
 25686  008062  0100               	movlb	0	; () banked
 25687  008064  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 25688  008066  0ED8               	movlw	low STR_5
 25689  008068  0100               	movlb	0	; () banked
 25690  00806A  6FB0               	movwf	sprintf@f& (0+255),b
 25691  00806C  0EFB               	movlw	high STR_5
 25692  00806E  0100               	movlb	0	; () banked
 25693  008070  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 25694  008072  EC22  F016         	call	_sprintf	;wreg free
 25695                           
 25696                           ;user.c: 129: BufferCopy(buf, BluetoothFirmware2, 30, 0);
 25697  008076  0EBB               	movlw	low Init_System@buf
 25698  008078  0100               	movlb	0	; () banked
 25699  00807A  6F68               	movwf	BufferCopy@from& (0+255),b
 25700  00807C  0E01               	movlw	high Init_System@buf
 25701  00807E  0100               	movlb	0	; () banked
 25702  008080  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 25703  008082  0E32               	movlw	low _BluetoothFirmware2
 25704  008084  0100               	movlb	0	; () banked
 25705  008086  6F6A               	movwf	BufferCopy@to& (0+255),b
 25706  008088  0E05               	movlw	high _BluetoothFirmware2
 25707  00808A  0100               	movlb	0	; () banked
 25708  00808C  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 25709  00808E  0E1E               	movlw	30
 25710  008090  0100               	movlb	0	; () banked
 25711  008092  6F6C               	movwf	BufferCopy@count& (0+255),b
 25712  008094  0E00               	movlw	0
 25713  008096  0100               	movlb	0	; () banked
 25714  008098  6F6D               	movwf	BufferCopy@shift& (0+255),b
 25715  00809A  EC36  F051         	call	_BufferCopy	;wreg free
 25716                           
 25717                           ;user.c: 132: RCONbits.IPEN = 1;
 25718  00809E  8ED0               	bsf	4048,7,c	;volatile
 25719                           
 25720                           ;user.c: 133: INTCONbits.PEIE = 1;
 25721  0080A0  8CF2               	bsf	intcon,6,c	;volatile
 25722                           
 25723                           ;user.c: 134: INTCONbits.GIE = 1;
 25724  0080A2  8EF2               	bsf	intcon,7,c	;volatile
 25725                           
 25726                           ;user.c: 136: SyncEEPROMToGlobal();
 25727  0080A4  EC83  F03C         	call	_SyncEEPROMToGlobal	;wreg free
 25728                           
 25729                           ;user.c: 137: if(!EEPROMinitialized())
 25730  0080A8  ECFC  F056         	call	_EEPROMinitialized	;wreg free
 25731  0080AC  0900               	iorlw	0
 25732  0080AE  A4D8               	btfss	status,2,c
 25733  0080B0  D008               	goto	l12612
 25734                           
 25735                           ;user.c: 138: {
 25736                           ;user.c: 139: SetEEPROMdefault();
 25737  0080B2  EC98  F047         	call	_SetEEPROMdefault	;wreg free
 25738                           
 25739                           ;user.c: 140: Global1.EEPROMinitFlag = 59;
 25740  0080B6  0E3B               	movlw	59
 25741  0080B8  0102               	movlb	2	; () banked
 25742  0080BA  6FEF               	movwf	(_Global1+29)& (0+255),b
 25743                           
 25744                           ; BSR set to: 2
 25745                           ;user.c: 141: SyncGlobalToEEPROM();
 25746  0080BC  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 25747  0080C0  D000               	goto	l12612
 25748  0080C2                     l12612:
 25749                           
 25750                           ;user.c: 142: }
 25751                           ;user.c: 144: if(Global2.SerialNumber == 0xFFFFFFFF)
 25752  0080C2  0102               	movlb	2	; () banked
 25753  0080C4  29CE               	incf	(_Global2+48)& (0+255),w,b
 25754  0080C6  E12A               	bnz	l12620
 25755  0080C8  0102               	movlb	2	; () banked
 25756  0080CA  29CF               	incf	(_Global2+49)& (0+255),w,b
 25757  0080CC  E127               	bnz	l12620
 25758  0080CE  0102               	movlb	2	; () banked
 25759  0080D0  29D0               	incf	(_Global2+50)& (0+255),w,b
 25760  0080D2  E124               	bnz	l12620
 25761  0080D4  0102               	movlb	2	; () banked
 25762  0080D6  29D1               	incf	(_Global2+51)& (0+255),w,b
 25763  0080D8  A4D8               	btfss	status,2,c
 25764  0080DA  D020               	goto	l12620
 25765                           
 25766                           ; BSR set to: 2
 25767                           ;user.c: 145: {
 25768                           ;user.c: 147: Global2.SerialNumber = 0;
 25769  0080DC  0E00               	movlw	0
 25770  0080DE  0102               	movlb	2	; () banked
 25771  0080E0  6FCE               	movwf	(_Global2+48)& (0+255),b
 25772  0080E2  0E00               	movlw	0
 25773  0080E4  6FCF               	movwf	(_Global2+49)& (0+255),b
 25774  0080E6  0E00               	movlw	0
 25775  0080E8  6FD0               	movwf	(_Global2+50)& (0+255),b
 25776  0080EA  0E00               	movlw	0
 25777  0080EC  6FD1               	movwf	(_Global2+51)& (0+255),b
 25778                           
 25779                           ; BSR set to: 2
 25780                           ;user.c: 148: SetEEPROM2(Global2,0x00000002);
 25781  0080EE  EE22  F09E         	lfsr	2,_Global2
 25782  0080F2  EE00  F096         	lfsr	0,SetEEPROM2@Temp
 25783  0080F6  0E33               	movlw	51
 25784  0080F8                     u14041:
 25785  0080F8  CFDB FFEB          	movff	plusw2,plusw0
 25786  0080FC  06E8               	decf	wreg,f,c
 25787  0080FE  E2FC               	bc	u14041
 25788  008100  0E02               	movlw	2
 25789  008102  0100               	movlb	0	; () banked
 25790  008104  6FCA               	movwf	SetEEPROM2@burn& (0+255),b
 25791  008106  0E00               	movlw	0
 25792  008108  6FCB               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 25793  00810A  0E00               	movlw	0
 25794  00810C  6FCC               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 25795  00810E  0E00               	movlw	0
 25796  008110  6FCD               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 25797  008112  ECB2  F048         	call	_SetEEPROM2	;wreg free
 25798                           
 25799                           ;user.c: 149: SyncEEPROMToGlobal();
 25800  008116  EC83  F03C         	call	_SyncEEPROMToGlobal	;wreg free
 25801  00811A  D000               	goto	l12620
 25802  00811C                     l12620:
 25803                           
 25804                           ;user.c: 150: }
 25805                           ;user.c: 152: InitADC();
 25806  00811C  ECD1  F056         	call	_InitADC	;wreg free
 25807                           
 25808                           ;user.c: 153: InitIR();
 25809  008120  EC13  F054         	call	_InitIR	;wreg free
 25810                           
 25811                           ;user.c: 155: InitUART(115200);
 25812  008124  0E00               	movlw	0
 25813  008126  0100               	movlb	0	; () banked
 25814  008128  6FB5               	movwf	InitUART@Baud& (0+255),b
 25815  00812A  0EC2               	movlw	194
 25816  00812C  6FB6               	movwf	(InitUART@Baud+1)& (0+255),b
 25817  00812E  0E01               	movlw	1
 25818  008130  6FB7               	movwf	(InitUART@Baud+2)& (0+255),b
 25819  008132  0E00               	movlw	0
 25820  008134  6FB8               	movwf	(InitUART@Baud+3)& (0+255),b
 25821  008136  EC27  F048         	call	_InitUART	;wreg free
 25822                           
 25823                           ;user.c: 156: InitBluetooth();
 25824  00813A  EC72  F052         	call	_InitBluetooth	;wreg free
 25825                           
 25826                           ;user.c: 158: InitTimers();
 25827  00813E  ECF2  F056         	call	_InitTimers	;wreg free
 25828  008142  0012               	return		;funcret
 25829  008144                     __end_of_Init_System:
 25830                           	opt stack 0
 25831                           tblptru	equ	0xFF8
 25832                           tblptrh	equ	0xFF7
 25833                           tblptrl	equ	0xFF6
 25834                           tablat	equ	0xFF5
 25835                           prodh	equ	0xFF4
 25836                           prodl	equ	0xFF3
 25837                           intcon	equ	0xFF2
 25838                           intcon2	equ	0xFF1
 25839                           indf0	equ	0xFEF
 25840                           postinc0	equ	0xFEE
 25841                           plusw0	equ	0xFEB
 25842                           fsr0h	equ	0xFEA
 25843                           fsr0l	equ	0xFE9
 25844                           wreg	equ	0xFE8
 25845                           indf1	equ	0xFE7
 25846                           postdec1	equ	0xFE5
 25847                           fsr1h	equ	0xFE2
 25848                           fsr1l	equ	0xFE1
 25849                           indf2	equ	0xFDF
 25850                           postinc2	equ	0xFDE
 25851                           postdec2	equ	0xFDD
 25852                           plusw2	equ	0xFDB
 25853                           fsr2h	equ	0xFDA
 25854                           fsr2l	equ	0xFD9
 25855                           status	equ	0xFD8
 25856                           
 25857 ;; *************** function _SyncEEPROMToGlobal *****************
 25858 ;; Defined at:
 25859 ;;		line 346 in file "EEPROM.c"
 25860 ;; Parameters:    Size  Location     Type
 25861 ;;		None
 25862 ;; Auto vars:     Size  Location     Type
 25863 ;;  Temp2          52   49[BANK0 ] struct EEdata2
 25864 ;;  Temp1          30  102[BANK0 ] struct EEdata
 25865 ;;  j               1  133[BANK0 ] unsigned char 
 25866 ;;  i               1  132[BANK0 ] unsigned char 
 25867 ;;  k               1  101[BANK0 ] unsigned char 
 25868 ;; Return value:  Size  Location     Type
 25869 ;;		None               void
 25870 ;; Registers used:
 25871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25872 ;; Tracked objects:
 25873 ;;		On entry : 0/0
 25874 ;;		On exit  : 0/0
 25875 ;;		Unchanged: 0/0
 25876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25878 ;;      Locals:         0      85       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25879 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25880 ;;      Totals:         0      89       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25881 ;;Total ram usage:       89 bytes
 25882 ;; Hardware stack levels used:    1
 25883 ;; Hardware stack levels required when called:    8
 25884 ;; This function calls:
 25885 ;;		_GetEEPROM1
 25886 ;;		_GetEEPROM2
 25887 ;; This function is called by:
 25888 ;;		_Init_System
 25889 ;;		_UseBluetooth
 25890 ;; This function uses a non-reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text40
 25894  007906                     __ptext40:
 25895                           	opt stack 0
 25896  007906                     _SyncEEPROMToGlobal:
 25897                           	opt stack 21
 25898                           
 25899                           ;EEPROM.c: 348: unsigned char i,j,k;
 25900                           ;EEPROM.c: 349: GBLdata1 Temp1;
 25901                           ;EEPROM.c: 350: GBLdata2 Temp2;
 25902                           ;EEPROM.c: 352: GetEEPROM1(&Temp1);
 25903                           
 25904                           ;incstack = 0
 25905  007906  0EC6               	movlw	low SyncEEPROMToGlobal@Temp1
 25906  007908  0100               	movlb	0	; () banked
 25907  00790A  6F85               	movwf	GetEEPROM1@Temp& (0+255),b
 25908  00790C  0E00               	movlw	high SyncEEPROMToGlobal@Temp1
 25909  00790E  0100               	movlb	0	; () banked
 25910  007910  6F86               	movwf	(GetEEPROM1@Temp+1)& (0+255),b
 25911  007912  EC9F  F04A         	call	_GetEEPROM1	;wreg free
 25912                           
 25913                           ;EEPROM.c: 353: GetEEPROM2(&Temp2);
 25914  007916  0E91               	movlw	low SyncEEPROMToGlobal@Temp2
 25915  007918  0100               	movlb	0	; () banked
 25916  00791A  6F85               	movwf	GetEEPROM2@Temp& (0+255),b
 25917  00791C  0E00               	movlw	high SyncEEPROMToGlobal@Temp2
 25918  00791E  0100               	movlb	0	; () banked
 25919  007920  6F86               	movwf	(GetEEPROM2@Temp+1)& (0+255),b
 25920  007922  ECA9  F04C         	call	_GetEEPROM2	;wreg free
 25921                           
 25922                           ;EEPROM.c: 355: Global1.BlueToothFlag = Temp1.BlueToothFlag;
 25923  007926  C0C6  F2D2         	movff	SyncEEPROMToGlobal@Temp1,_Global1
 25924                           
 25925                           ;EEPROM.c: 356: Global1.SWNECcode = Temp1.SWNECcode;
 25926  00792A  C0C7  F2D3         	movff	SyncEEPROMToGlobal@Temp1+1,_Global1+1
 25927  00792E  C0C8  F2D4         	movff	SyncEEPROMToGlobal@Temp1+2,_Global1+2
 25928  007932  C0C9  F2D5         	movff	SyncEEPROMToGlobal@Temp1+3,_Global1+3
 25929  007936  C0CA  F2D6         	movff	SyncEEPROMToGlobal@Temp1+4,_Global1+4
 25930                           
 25931                           ;EEPROM.c: 357: Global1.EEPROMinitFlag = Temp1.EEPROMinitFlag;
 25932  00793A  C0E3  F2EF         	movff	SyncEEPROMToGlobal@Temp1+29,_Global1+29
 25933                           
 25934                           ;EEPROM.c: 358: for(i=0; i< 12; i++)
 25935  00793E  0E00               	movlw	0
 25936  007940  0100               	movlb	0	; () banked
 25937  007942  6FE4               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 25938  007944  D04F               	goto	l11512
 25939                           
 25940                           ; BSR set to: 0
 25941                           
 25942                           ; BSR set to: 0
 25943  007946  D052               	goto	l1181
 25944  007948                     l11498:
 25945                           
 25946                           ; BSR set to: 0
 25947                           ;EEPROM.c: 359: {
 25948                           ;EEPROM.c: 360: for(j=0; j < 2; j++)
 25949  007948  0E00               	movlw	0
 25950  00794A  0100               	movlb	0	; () banked
 25951  00794C  6FE5               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 25952  00794E                     l11500:
 25953                           
 25954                           ; BSR set to: 0
 25955  00794E  0E01               	movlw	1
 25956  007950  0100               	movlb	0	; () banked
 25957  007952  65E5               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 25958  007954  D001               	goto	l11504
 25959                           
 25960                           ; BSR set to: 0
 25961  007956  D044               	goto	l11510
 25962  007958                     l11504:
 25963                           
 25964                           ; BSR set to: 0
 25965                           ;EEPROM.c: 361: {
 25966                           ;EEPROM.c: 362: Global1.RemoteButtonNEC[i][j] = Temp1.RemoteButtonNEC[i][j];
 25967  007958  0100               	movlb	0	; () banked
 25968  00795A  51E4               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 25969  00795C  0D02               	mullw	2
 25970  00795E  0EC6               	movlw	low SyncEEPROMToGlobal@Temp1
 25971  007960  0100               	movlb	0	; () banked
 25972  007962  6F8D               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 25973  007964  0E00               	movlw	high SyncEEPROMToGlobal@Temp1
 25974  007966  0100               	movlb	0	; () banked
 25975  007968  6F8E               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 25976  00796A  50F3               	movf	prodl,w,c
 25977  00796C  0100               	movlb	0	; () banked
 25978  00796E  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 25979  007970  50F4               	movf	prodh,w,c
 25980  007972  0100               	movlb	0	; () banked
 25981  007974  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 25982  007976  0100               	movlb	0	; () banked
 25983  007978  51E5               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 25984  00797A  0D01               	mullw	1
 25985  00797C  50F3               	movf	prodl,w,c
 25986  00797E  0100               	movlb	0	; () banked
 25987  007980  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 25988  007982  50F4               	movf	prodh,w,c
 25989  007984  0100               	movlb	0	; () banked
 25990  007986  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 25991  007988  0E05               	movlw	5
 25992  00798A  0100               	movlb	0	; () banked
 25993  00798C  258D               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 25994  00798E  6ED9               	movwf	fsr2l,c
 25995  007990  0E00               	movlw	0
 25996  007992  0100               	movlb	0	; () banked
 25997  007994  218E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 25998  007996  6EDA               	movwf	fsr2h,c
 25999  007998  0100               	movlb	0	; () banked
 26000  00799A  51E4               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 26001  00799C  0D02               	mullw	2
 26002  00799E  0ED2               	movlw	low _Global1
 26003  0079A0  0100               	movlb	0	; () banked
 26004  0079A2  6F8F               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 26005  0079A4  0E02               	movlw	high _Global1
 26006  0079A6  0100               	movlb	0	; () banked
 26007  0079A8  6F90               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 26008  0079AA  0E05               	movlw	5
 26009  0079AC  0100               	movlb	0	; () banked
 26010  0079AE  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 26011  0079B0  0E00               	movlw	0
 26012  0079B2  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 26013  0079B4  50F3               	movf	prodl,w,c
 26014  0079B6  0100               	movlb	0	; () banked
 26015  0079B8  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 26016  0079BA  50F4               	movf	prodh,w,c
 26017  0079BC  0100               	movlb	0	; () banked
 26018  0079BE  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 26019  0079C0  0100               	movlb	0	; () banked
 26020  0079C2  51E5               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 26021  0079C4  0D01               	mullw	1
 26022  0079C6  50F3               	movf	prodl,w,c
 26023  0079C8  0100               	movlb	0	; () banked
 26024  0079CA  258F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 26025  0079CC  6EE1               	movwf	fsr1l,c
 26026  0079CE  50F4               	movf	prodh,w,c
 26027  0079D0  0100               	movlb	0	; () banked
 26028  0079D2  2190               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 26029  0079D4  6EE2               	movwf	fsr1h,c
 26030  0079D6  CFDF FFE7          	movff	indf2,indf1
 26031                           
 26032                           ; BSR set to: 0
 26033  0079DA  0100               	movlb	0	; () banked
 26034  0079DC  2BE5               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 26035  0079DE  D7B7               	goto	l11500
 26036  0079E0                     l11510:
 26037                           
 26038                           ; BSR set to: 0
 26039  0079E0  0100               	movlb	0	; () banked
 26040  0079E2  2BE4               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 26041  0079E4                     l11512:
 26042                           
 26043                           ; BSR set to: 0
 26044  0079E4  0E0B               	movlw	11
 26045  0079E6  0100               	movlb	0	; () banked
 26046  0079E8  65E4               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 26047  0079EA  D7AE               	goto	l11498
 26048  0079EC                     l1181:
 26049                           
 26050                           ; BSR set to: 0
 26051                           ;EEPROM.c: 363: }
 26052                           ;EEPROM.c: 364: }
 26053                           ;EEPROM.c: 365: Global1.EEPROMinitFlag = Temp1.EEPROMinitFlag;
 26054  0079EC  C0E3  F2EF         	movff	SyncEEPROMToGlobal@Temp1+29,_Global1+29
 26055                           
 26056                           ; BSR set to: 0
 26057                           ;EEPROM.c: 366: for(i=0; i< 8; i++)
 26058  0079F0  0E00               	movlw	0
 26059  0079F2  0100               	movlb	0	; () banked
 26060  0079F4  6FE4               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 26061  0079F6  D061               	goto	l11544
 26062                           
 26063                           ; BSR set to: 0
 26064                           
 26065                           ; BSR set to: 0
 26066  0079F8  D064               	goto	l1185
 26067  0079FA                     l11520:
 26068                           
 26069                           ; BSR set to: 0
 26070                           ;EEPROM.c: 367: {
 26071                           ;EEPROM.c: 368: for(j=0; j < 3; j++)
 26072  0079FA  0E00               	movlw	0
 26073  0079FC  0100               	movlb	0	; () banked
 26074  0079FE  6FE5               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 26075  007A00                     l11522:
 26076                           
 26077                           ; BSR set to: 0
 26078  007A00  0E02               	movlw	2
 26079  007A02  0100               	movlb	0	; () banked
 26080  007A04  65E5               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 26081  007A06  D001               	goto	l11526
 26082                           
 26083                           ; BSR set to: 0
 26084  007A08  D056               	goto	l11542
 26085  007A0A                     l11526:
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;EEPROM.c: 369: {
 26089                           ;EEPROM.c: 370: for(k=0; k < 2; k++)
 26090  007A0A  0E00               	movlw	0
 26091  007A0C  0100               	movlb	0	; () banked
 26092  007A0E  6FC5               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 26093  007A10                     l11528:
 26094                           
 26095                           ; BSR set to: 0
 26096  007A10  0E01               	movlw	1
 26097  007A12  0100               	movlb	0	; () banked
 26098  007A14  65C5               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 26099  007A16  D001               	goto	l11532
 26100                           
 26101                           ; BSR set to: 0
 26102  007A18  D04B               	goto	l11538
 26103  007A1A                     l11532:
 26104                           
 26105                           ; BSR set to: 0
 26106                           ;EEPROM.c: 371: {
 26107                           ;EEPROM.c: 372: Global2.RemoteButtonRF[i][j][k] = Temp2.RemoteButtonRF[i][j][k];
 26108  007A1A  0100               	movlb	0	; () banked
 26109  007A1C  51E4               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 26110  007A1E  0D06               	mullw	6
 26111  007A20  0E91               	movlw	low SyncEEPROMToGlobal@Temp2
 26112  007A22  0100               	movlb	0	; () banked
 26113  007A24  6F8D               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 26114  007A26  0E00               	movlw	high SyncEEPROMToGlobal@Temp2
 26115  007A28  0100               	movlb	0	; () banked
 26116  007A2A  6F8E               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 26117  007A2C  50F3               	movf	prodl,w,c
 26118  007A2E  0100               	movlb	0	; () banked
 26119  007A30  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 26120  007A32  50F4               	movf	prodh,w,c
 26121  007A34  0100               	movlb	0	; () banked
 26122  007A36  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 26123  007A38  0100               	movlb	0	; () banked
 26124  007A3A  51E5               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 26125  007A3C  0D02               	mullw	2
 26126  007A3E  50F3               	movf	prodl,w,c
 26127  007A40  0100               	movlb	0	; () banked
 26128  007A42  278D               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 26129  007A44  50F4               	movf	prodh,w,c
 26130  007A46  0100               	movlb	0	; () banked
 26131  007A48  238E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 26132  007A4A  0100               	movlb	0	; () banked
 26133  007A4C  51C5               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 26134  007A4E  0D01               	mullw	1
 26135  007A50  50F3               	movf	prodl,w,c
 26136  007A52  0100               	movlb	0	; () banked
 26137  007A54  258D               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 26138  007A56  6ED9               	movwf	fsr2l,c
 26139  007A58  50F4               	movf	prodh,w,c
 26140  007A5A  0100               	movlb	0	; () banked
 26141  007A5C  218E               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 26142  007A5E  6EDA               	movwf	fsr2h,c
 26143  007A60  0100               	movlb	0	; () banked
 26144  007A62  51E4               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 26145  007A64  0D06               	mullw	6
 26146  007A66  0E9E               	movlw	low _Global2
 26147  007A68  0100               	movlb	0	; () banked
 26148  007A6A  6F8F               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 26149  007A6C  0E02               	movlw	high _Global2
 26150  007A6E  0100               	movlb	0	; () banked
 26151  007A70  6F90               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 26152  007A72  50F3               	movf	prodl,w,c
 26153  007A74  0100               	movlb	0	; () banked
 26154  007A76  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 26155  007A78  50F4               	movf	prodh,w,c
 26156  007A7A  0100               	movlb	0	; () banked
 26157  007A7C  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 26158  007A7E  0100               	movlb	0	; () banked
 26159  007A80  51E5               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 26160  007A82  0D02               	mullw	2
 26161  007A84  50F3               	movf	prodl,w,c
 26162  007A86  0100               	movlb	0	; () banked
 26163  007A88  278F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 26164  007A8A  50F4               	movf	prodh,w,c
 26165  007A8C  0100               	movlb	0	; () banked
 26166  007A8E  2390               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 26167  007A90  0100               	movlb	0	; () banked
 26168  007A92  51C5               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 26169  007A94  0D01               	mullw	1
 26170  007A96  50F3               	movf	prodl,w,c
 26171  007A98  0100               	movlb	0	; () banked
 26172  007A9A  258F               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 26173  007A9C  6EE1               	movwf	fsr1l,c
 26174  007A9E  50F4               	movf	prodh,w,c
 26175  007AA0  0100               	movlb	0	; () banked
 26176  007AA2  2190               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 26177  007AA4  6EE2               	movwf	fsr1h,c
 26178  007AA6  CFDF FFE7          	movff	indf2,indf1
 26179                           
 26180                           ; BSR set to: 0
 26181  007AAA  0100               	movlb	0	; () banked
 26182  007AAC  2BC5               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 26183  007AAE  D7B0               	goto	l11528
 26184  007AB0                     l11538:
 26185                           
 26186                           ; BSR set to: 0
 26187  007AB0  0100               	movlb	0	; () banked
 26188  007AB2  2BE5               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 26189  007AB4  D7A5               	goto	l11522
 26190  007AB6                     l11542:
 26191                           
 26192                           ; BSR set to: 0
 26193  007AB6  0100               	movlb	0	; () banked
 26194  007AB8  2BE4               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 26195  007ABA                     l11544:
 26196                           
 26197                           ; BSR set to: 0
 26198  007ABA  0E07               	movlw	7
 26199  007ABC  0100               	movlb	0	; () banked
 26200  007ABE  65E4               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 26201  007AC0  D79C               	goto	l11520
 26202  007AC2                     l1185:
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;EEPROM.c: 373: }
 26206                           ;EEPROM.c: 374: }
 26207                           ;EEPROM.c: 375: }
 26208                           ;EEPROM.c: 376: Global2.SerialNumber = Temp2.SerialNumber;
 26209  007AC2  C0C1  F2CE         	movff	SyncEEPROMToGlobal@Temp2+48,_Global2+48
 26210  007AC6  C0C2  F2CF         	movff	SyncEEPROMToGlobal@Temp2+49,_Global2+49
 26211  007ACA  C0C3  F2D0         	movff	SyncEEPROMToGlobal@Temp2+50,_Global2+50
 26212  007ACE  C0C4  F2D1         	movff	SyncEEPROMToGlobal@Temp2+51,_Global2+51
 26213                           
 26214                           ; BSR set to: 0
 26215  007AD2  0012               	return		;funcret
 26216  007AD4                     __end_of_SyncEEPROMToGlobal:
 26217                           	opt stack 0
 26218                           tblptru	equ	0xFF8
 26219                           tblptrh	equ	0xFF7
 26220                           tblptrl	equ	0xFF6
 26221                           tablat	equ	0xFF5
 26222                           prodh	equ	0xFF4
 26223                           prodl	equ	0xFF3
 26224                           intcon	equ	0xFF2
 26225                           intcon2	equ	0xFF1
 26226                           indf0	equ	0xFEF
 26227                           postinc0	equ	0xFEE
 26228                           plusw0	equ	0xFEB
 26229                           fsr0h	equ	0xFEA
 26230                           fsr0l	equ	0xFE9
 26231                           wreg	equ	0xFE8
 26232                           indf1	equ	0xFE7
 26233                           postdec1	equ	0xFE5
 26234                           fsr1h	equ	0xFE2
 26235                           fsr1l	equ	0xFE1
 26236                           indf2	equ	0xFDF
 26237                           postinc2	equ	0xFDE
 26238                           postdec2	equ	0xFDD
 26239                           plusw2	equ	0xFDB
 26240                           fsr2h	equ	0xFDA
 26241                           fsr2l	equ	0xFD9
 26242                           status	equ	0xFD8
 26243                           
 26244 ;; *************** function _GetEEPROM2 *****************
 26245 ;; Defined at:
 26246 ;;		line 156 in file "EEPROM.c"
 26247 ;; Parameters:    Size  Location     Type
 26248 ;;  Temp            2   37[BANK0 ] PTR struct EEdata2
 26249 ;;		 -> SyncEEPROMToGlobal@Temp2(52), 
 26250 ;; Auto vars:     Size  Location     Type
 26251 ;;  k               1   44[BANK0 ] unsigned char 
 26252 ;;  j               1   43[BANK0 ] unsigned char 
 26253 ;;  i               1   42[BANK0 ] unsigned char 
 26254 ;;  Arrayspot       1   41[BANK0 ] unsigned char 
 26255 ;; Return value:  Size  Location     Type
 26256 ;;		None               void
 26257 ;; Registers used:
 26258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26259 ;; Tracked objects:
 26260 ;;		On entry : 0/0
 26261 ;;		On exit  : 0/0
 26262 ;;		Unchanged: 0/0
 26263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26266 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26267 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26268 ;;Total ram usage:        8 bytes
 26269 ;; Hardware stack levels used:    1
 26270 ;; Hardware stack levels required when called:    7
 26271 ;; This function calls:
 26272 ;;		_GetMemoryChar
 26273 ;;		_GetMemoryLong
 26274 ;; This function is called by:
 26275 ;;		_SyncEEPROMToGlobal
 26276 ;; This function uses a non-reentrant model
 26277 ;;
 26278                           
 26279                           	psect	text41
 26280  009952                     __ptext41:
 26281                           	opt stack 0
 26282  009952                     _GetEEPROM2:
 26283                           	opt stack 21
 26284                           
 26285                           ;EEPROM.c: 158: unsigned char i,j,k;
 26286                           ;EEPROM.c: 159: unsigned char Arrayspot=(2*12 + 6);
 26287                           
 26288                           ; BSR set to: 0
 26289                           ;incstack = 0
 26290  009952  0E1E               	movlw	30
 26291  009954  0100               	movlb	0	; () banked
 26292  009956  6F89               	movwf	GetEEPROM2@Arrayspot& (0+255),b
 26293                           
 26294                           ;EEPROM.c: 161: for(i=0; i< 8; i++)
 26295  009958  0E00               	movlw	0
 26296  00995A  0100               	movlb	0	; () banked
 26297  00995C  6F8A               	movwf	GetEEPROM2@i& (0+255),b
 26298  00995E                     l11024:
 26299                           
 26300                           ; BSR set to: 0
 26301  00995E  0E07               	movlw	7
 26302  009960  0100               	movlb	0	; () banked
 26303  009962  658A               	cpfsgt	GetEEPROM2@i& (0+255),b
 26304  009964  D001               	goto	l11028
 26305                           
 26306                           ; BSR set to: 0
 26307  009966  D043               	goto	l11056
 26308  009968                     l11028:
 26309                           
 26310                           ; BSR set to: 0
 26311                           ;EEPROM.c: 162: {
 26312                           ;EEPROM.c: 163: for(j=0; j < 3; j++)
 26313  009968  0E00               	movlw	0
 26314  00996A  0100               	movlb	0	; () banked
 26315  00996C  6F8B               	movwf	GetEEPROM2@j& (0+255),b
 26316  00996E                     l11030:
 26317                           
 26318                           ; BSR set to: 0
 26319  00996E  0E02               	movlw	2
 26320  009970  0100               	movlb	0	; () banked
 26321  009972  658B               	cpfsgt	GetEEPROM2@j& (0+255),b
 26322  009974  D001               	goto	l11034
 26323                           
 26324                           ; BSR set to: 0
 26325  009976  D038               	goto	l11052
 26326  009978                     l11034:
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;EEPROM.c: 164: {
 26330                           ;EEPROM.c: 165: for(k=0; k < 2; k++)
 26331  009978  0E00               	movlw	0
 26332  00997A  0100               	movlb	0	; () banked
 26333  00997C  6F8C               	movwf	GetEEPROM2@k& (0+255),b
 26334  00997E                     l11036:
 26335                           
 26336                           ; BSR set to: 0
 26337  00997E  0E01               	movlw	1
 26338  009980  0100               	movlb	0	; () banked
 26339  009982  658C               	cpfsgt	GetEEPROM2@k& (0+255),b
 26340  009984  D001               	goto	l11040
 26341                           
 26342                           ; BSR set to: 0
 26343  009986  D02D               	goto	l11048
 26344  009988                     l11040:
 26345                           
 26346                           ; BSR set to: 0
 26347                           ;EEPROM.c: 166: {
 26348                           ;EEPROM.c: 167: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 26349  009988  0100               	movlb	0	; () banked
 26350  00998A  518A               	movf	GetEEPROM2@i& (0+255),w,b
 26351  00998C  0D06               	mullw	6
 26352  00998E  C085  F087         	movff	GetEEPROM2@Temp,??_GetEEPROM2
 26353  009992  C086  F088         	movff	GetEEPROM2@Temp+1,??_GetEEPROM2+1
 26354  009996  50F3               	movf	prodl,w,c
 26355  009998  0100               	movlb	0	; () banked
 26356  00999A  2787               	addwf	??_GetEEPROM2& (0+255),f,b
 26357  00999C  50F4               	movf	prodh,w,c
 26358  00999E  0100               	movlb	0	; () banked
 26359  0099A0  2388               	addwfc	(??_GetEEPROM2+1)& (0+255),f,b
 26360  0099A2  0100               	movlb	0	; () banked
 26361  0099A4  518B               	movf	GetEEPROM2@j& (0+255),w,b
 26362  0099A6  0D02               	mullw	2
 26363  0099A8  50F3               	movf	prodl,w,c
 26364  0099AA  0100               	movlb	0	; () banked
 26365  0099AC  2787               	addwf	??_GetEEPROM2& (0+255),f,b
 26366  0099AE  50F4               	movf	prodh,w,c
 26367  0099B0  0100               	movlb	0	; () banked
 26368  0099B2  2388               	addwfc	(??_GetEEPROM2+1)& (0+255),f,b
 26369  0099B4  0100               	movlb	0	; () banked
 26370  0099B6  518C               	movf	GetEEPROM2@k& (0+255),w,b
 26371  0099B8  0D01               	mullw	1
 26372  0099BA  50F3               	movf	prodl,w,c
 26373  0099BC  0100               	movlb	0	; () banked
 26374  0099BE  2587               	addwf	??_GetEEPROM2& (0+255),w,b
 26375  0099C0  6ED9               	movwf	fsr2l,c
 26376  0099C2  50F4               	movf	prodh,w,c
 26377  0099C4  0100               	movlb	0	; () banked
 26378  0099C6  2188               	addwfc	(??_GetEEPROM2+1)& (0+255),w,b
 26379  0099C8  6EDA               	movwf	fsr2h,c
 26380  0099CA  0100               	movlb	0	; () banked
 26381  0099CC  5189               	movf	GetEEPROM2@Arrayspot& (0+255),w,b
 26382  0099CE  EC24  F056         	call	_GetMemoryChar
 26383  0099D2  0100               	movlb	0	; () banked
 26384  0099D4  5164               	movf	?_GetMemoryChar& (0+255),w,b
 26385  0099D6  6EDF               	movwf	indf2,c
 26386                           
 26387                           ; BSR set to: 0
 26388  0099D8  0100               	movlb	0	; () banked
 26389  0099DA  2B89               	incf	GetEEPROM2@Arrayspot& (0+255),f,b
 26390                           
 26391                           ; BSR set to: 0
 26392  0099DC  0100               	movlb	0	; () banked
 26393  0099DE  2B8C               	incf	GetEEPROM2@k& (0+255),f,b
 26394  0099E0  D7CE               	goto	l11036
 26395  0099E2                     l11048:
 26396                           
 26397                           ; BSR set to: 0
 26398  0099E2  0100               	movlb	0	; () banked
 26399  0099E4  2B8B               	incf	GetEEPROM2@j& (0+255),f,b
 26400  0099E6  D7C3               	goto	l11030
 26401  0099E8                     l11052:
 26402                           
 26403                           ; BSR set to: 0
 26404  0099E8  0100               	movlb	0	; () banked
 26405  0099EA  2B8A               	incf	GetEEPROM2@i& (0+255),f,b
 26406  0099EC  D7B8               	goto	l11024
 26407  0099EE                     l11056:
 26408                           
 26409                           ; BSR set to: 0
 26410                           ;EEPROM.c: 168: }
 26411                           ;EEPROM.c: 169: }
 26412                           ;EEPROM.c: 170: }
 26413                           ;EEPROM.c: 171: Temp->SerialNumber = GetMemoryLong((2*12 + 2*3*8 + 6));
 26414  0099EE  0E4E               	movlw	78
 26415  0099F0  ECA2  F040         	call	_GetMemoryLong
 26416  0099F4  0100               	movlb	0	; () banked
 26417  0099F6  EE20 F030          	lfsr	2,48
 26418  0099FA  5185               	movf	GetEEPROM2@Temp& (0+255),w,b
 26419  0099FC  26D9               	addwf	fsr2l,f,c
 26420  0099FE  5186               	movf	(GetEEPROM2@Temp+1)& (0+255),w,b
 26421  009A00  22DA               	addwfc	fsr2h,f,c
 26422  009A02  0100               	movlb	0	; () banked
 26423  009A04  C064  FFDE         	movff	?_GetMemoryLong,postinc2
 26424  009A08  0100               	movlb	0	; () banked
 26425  009A0A  C065  FFDE         	movff	?_GetMemoryLong+1,postinc2
 26426  009A0E  0100               	movlb	0	; () banked
 26427  009A10  C066  FFDE         	movff	?_GetMemoryLong+2,postinc2
 26428  009A14  0100               	movlb	0	; () banked
 26429  009A16  C067  FFDE         	movff	?_GetMemoryLong+3,postinc2
 26430                           
 26431                           ; BSR set to: 0
 26432  009A1A  0012               	return		;funcret
 26433  009A1C                     __end_of_GetEEPROM2:
 26434                           	opt stack 0
 26435                           tblptru	equ	0xFF8
 26436                           tblptrh	equ	0xFF7
 26437                           tblptrl	equ	0xFF6
 26438                           tablat	equ	0xFF5
 26439                           prodh	equ	0xFF4
 26440                           prodl	equ	0xFF3
 26441                           intcon	equ	0xFF2
 26442                           intcon2	equ	0xFF1
 26443                           indf0	equ	0xFEF
 26444                           postinc0	equ	0xFEE
 26445                           plusw0	equ	0xFEB
 26446                           fsr0h	equ	0xFEA
 26447                           fsr0l	equ	0xFE9
 26448                           wreg	equ	0xFE8
 26449                           indf1	equ	0xFE7
 26450                           postdec1	equ	0xFE5
 26451                           fsr1h	equ	0xFE2
 26452                           fsr1l	equ	0xFE1
 26453                           indf2	equ	0xFDF
 26454                           postinc2	equ	0xFDE
 26455                           postdec2	equ	0xFDD
 26456                           plusw2	equ	0xFDB
 26457                           fsr2h	equ	0xFDA
 26458                           fsr2l	equ	0xFD9
 26459                           status	equ	0xFD8
 26460                           
 26461 ;; *************** function _GetEEPROM1 *****************
 26462 ;; Defined at:
 26463 ;;		line 134 in file "EEPROM.c"
 26464 ;; Parameters:    Size  Location     Type
 26465 ;;  Temp            2   37[BANK0 ] PTR struct EEdata
 26466 ;;		 -> SyncEEPROMToGlobal@Temp1(30), 
 26467 ;; Auto vars:     Size  Location     Type
 26468 ;;  j               1   43[BANK0 ] unsigned char 
 26469 ;;  i               1   42[BANK0 ] unsigned char 
 26470 ;;  Arrayspot       1   41[BANK0 ] unsigned char 
 26471 ;;  k               1    0        unsigned char 
 26472 ;; Return value:  Size  Location     Type
 26473 ;;		None               void
 26474 ;; Registers used:
 26475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26476 ;; Tracked objects:
 26477 ;;		On entry : 0/0
 26478 ;;		On exit  : 0/0
 26479 ;;		Unchanged: 0/0
 26480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26481 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26482 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26483 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26484 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26485 ;;Total ram usage:        7 bytes
 26486 ;; Hardware stack levels used:    1
 26487 ;; Hardware stack levels required when called:    7
 26488 ;; This function calls:
 26489 ;;		_GetMemoryChar
 26490 ;;		_GetMemoryLong
 26491 ;; This function is called by:
 26492 ;;		_SyncEEPROMToGlobal
 26493 ;; This function uses a non-reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text42
 26497  00953E                     __ptext42:
 26498                           	opt stack 0
 26499  00953E                     _GetEEPROM1:
 26500                           	opt stack 21
 26501                           
 26502                           ;EEPROM.c: 136: unsigned char i,j,k;
 26503                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 26504                           
 26505                           ; BSR set to: 0
 26506                           ;incstack = 0
 26507  00953E  0E05               	movlw	5
 26508  009540  0100               	movlb	0	; () banked
 26509  009542  6F89               	movwf	GetEEPROM1@Arrayspot& (0+255),b
 26510                           
 26511                           ; BSR set to: 0
 26512                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 26513  009544  0E00               	movlw	0
 26514  009546  EC24  F056         	call	_GetMemoryChar
 26515  00954A  0100               	movlb	0	; () banked
 26516  00954C  5164               	movf	?_GetMemoryChar& (0+255),w,b
 26517  00954E  C085  FFD9         	movff	GetEEPROM1@Temp,fsr2l
 26518  009552  C086  FFDA         	movff	GetEEPROM1@Temp+1,fsr2h
 26519  009556  6EDF               	movwf	indf2,c
 26520                           
 26521                           ; BSR set to: 0
 26522                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 26523  009558  0E01               	movlw	1
 26524  00955A  ECA2  F040         	call	_GetMemoryLong
 26525  00955E  0100               	movlb	0	; () banked
 26526  009560  EE20 F001          	lfsr	2,1
 26527  009564  5185               	movf	GetEEPROM1@Temp& (0+255),w,b
 26528  009566  26D9               	addwf	fsr2l,f,c
 26529  009568  5186               	movf	(GetEEPROM1@Temp+1)& (0+255),w,b
 26530  00956A  22DA               	addwfc	fsr2h,f,c
 26531  00956C  0100               	movlb	0	; () banked
 26532  00956E  C064  FFDE         	movff	?_GetMemoryLong,postinc2
 26533  009572  0100               	movlb	0	; () banked
 26534  009574  C065  FFDE         	movff	?_GetMemoryLong+1,postinc2
 26535  009578  0100               	movlb	0	; () banked
 26536  00957A  C066  FFDE         	movff	?_GetMemoryLong+2,postinc2
 26537  00957E  0100               	movlb	0	; () banked
 26538  009580  C067  FFDE         	movff	?_GetMemoryLong+3,postinc2
 26539                           
 26540                           ;EEPROM.c: 141: for(i=0; i< 12; i++)
 26541  009584  0E00               	movlw	0
 26542  009586  0100               	movlb	0	; () banked
 26543  009588  6F8A               	movwf	GetEEPROM1@i& (0+255),b
 26544  00958A                     l10998:
 26545                           
 26546                           ; BSR set to: 0
 26547  00958A  0E0B               	movlw	11
 26548  00958C  0100               	movlb	0	; () banked
 26549  00958E  658A               	cpfsgt	GetEEPROM1@i& (0+255),b
 26550  009590  D001               	goto	l11002
 26551                           
 26552                           ; BSR set to: 0
 26553  009592  D035               	goto	l11020
 26554  009594                     l11002:
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;EEPROM.c: 142: {
 26558                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 26559  009594  0E00               	movlw	0
 26560  009596  0100               	movlb	0	; () banked
 26561  009598  6F8B               	movwf	GetEEPROM1@j& (0+255),b
 26562  00959A                     l11004:
 26563                           
 26564                           ; BSR set to: 0
 26565  00959A  0E01               	movlw	1
 26566  00959C  0100               	movlb	0	; () banked
 26567  00959E  658B               	cpfsgt	GetEEPROM1@j& (0+255),b
 26568  0095A0  D001               	goto	l11008
 26569                           
 26570                           ; BSR set to: 0
 26571  0095A2  D02A               	goto	l11016
 26572  0095A4                     l11008:
 26573                           
 26574                           ; BSR set to: 0
 26575                           ;EEPROM.c: 144: {
 26576                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 26577  0095A4  0100               	movlb	0	; () banked
 26578  0095A6  518A               	movf	GetEEPROM1@i& (0+255),w,b
 26579  0095A8  0D02               	mullw	2
 26580  0095AA  C085  F087         	movff	GetEEPROM1@Temp,??_GetEEPROM1
 26581  0095AE  C086  F088         	movff	GetEEPROM1@Temp+1,??_GetEEPROM1+1
 26582  0095B2  50F3               	movf	prodl,w,c
 26583  0095B4  0100               	movlb	0	; () banked
 26584  0095B6  2787               	addwf	??_GetEEPROM1& (0+255),f,b
 26585  0095B8  50F4               	movf	prodh,w,c
 26586  0095BA  0100               	movlb	0	; () banked
 26587  0095BC  2388               	addwfc	(??_GetEEPROM1+1)& (0+255),f,b
 26588  0095BE  0100               	movlb	0	; () banked
 26589  0095C0  518B               	movf	GetEEPROM1@j& (0+255),w,b
 26590  0095C2  0D01               	mullw	1
 26591  0095C4  50F3               	movf	prodl,w,c
 26592  0095C6  0100               	movlb	0	; () banked
 26593  0095C8  2787               	addwf	??_GetEEPROM1& (0+255),f,b
 26594  0095CA  50F4               	movf	prodh,w,c
 26595  0095CC  0100               	movlb	0	; () banked
 26596  0095CE  2388               	addwfc	(??_GetEEPROM1+1)& (0+255),f,b
 26597  0095D0  0E05               	movlw	5
 26598  0095D2  0100               	movlb	0	; () banked
 26599  0095D4  2587               	addwf	??_GetEEPROM1& (0+255),w,b
 26600  0095D6  6ED9               	movwf	fsr2l,c
 26601  0095D8  0E00               	movlw	0
 26602  0095DA  0100               	movlb	0	; () banked
 26603  0095DC  2188               	addwfc	(??_GetEEPROM1+1)& (0+255),w,b
 26604  0095DE  6EDA               	movwf	fsr2h,c
 26605  0095E0  0100               	movlb	0	; () banked
 26606  0095E2  5189               	movf	GetEEPROM1@Arrayspot& (0+255),w,b
 26607  0095E4  EC24  F056         	call	_GetMemoryChar
 26608  0095E8  0100               	movlb	0	; () banked
 26609  0095EA  5164               	movf	?_GetMemoryChar& (0+255),w,b
 26610  0095EC  6EDF               	movwf	indf2,c
 26611                           
 26612                           ; BSR set to: 0
 26613  0095EE  0100               	movlb	0	; () banked
 26614  0095F0  2B89               	incf	GetEEPROM1@Arrayspot& (0+255),f,b
 26615                           
 26616                           ; BSR set to: 0
 26617  0095F2  0100               	movlb	0	; () banked
 26618  0095F4  2B8B               	incf	GetEEPROM1@j& (0+255),f,b
 26619  0095F6  D7D1               	goto	l11004
 26620  0095F8                     l11016:
 26621                           
 26622                           ; BSR set to: 0
 26623  0095F8  0100               	movlb	0	; () banked
 26624  0095FA  2B8A               	incf	GetEEPROM1@i& (0+255),f,b
 26625  0095FC  D7C6               	goto	l10998
 26626  0095FE                     l11020:
 26627                           
 26628                           ; BSR set to: 0
 26629                           ;EEPROM.c: 146: }
 26630                           ;EEPROM.c: 147: }
 26631                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*12 + 5));
 26632  0095FE  0100               	movlb	0	; () banked
 26633  009600  EE20 F01D          	lfsr	2,29
 26634  009604  5185               	movf	GetEEPROM1@Temp& (0+255),w,b
 26635  009606  26D9               	addwf	fsr2l,f,c
 26636  009608  5186               	movf	(GetEEPROM1@Temp+1)& (0+255),w,b
 26637  00960A  22DA               	addwfc	fsr2h,f,c
 26638  00960C  0E1D               	movlw	29
 26639  00960E  EC24  F056         	call	_GetMemoryChar
 26640  009612  0100               	movlb	0	; () banked
 26641  009614  5164               	movf	?_GetMemoryChar& (0+255),w,b
 26642  009616  6EDF               	movwf	indf2,c
 26643                           
 26644                           ; BSR set to: 0
 26645  009618  0012               	return		;funcret
 26646  00961A                     __end_of_GetEEPROM1:
 26647                           	opt stack 0
 26648                           tblptru	equ	0xFF8
 26649                           tblptrh	equ	0xFF7
 26650                           tblptrl	equ	0xFF6
 26651                           tablat	equ	0xFF5
 26652                           prodh	equ	0xFF4
 26653                           prodl	equ	0xFF3
 26654                           intcon	equ	0xFF2
 26655                           intcon2	equ	0xFF1
 26656                           indf0	equ	0xFEF
 26657                           postinc0	equ	0xFEE
 26658                           plusw0	equ	0xFEB
 26659                           fsr0h	equ	0xFEA
 26660                           fsr0l	equ	0xFE9
 26661                           wreg	equ	0xFE8
 26662                           indf1	equ	0xFE7
 26663                           postdec1	equ	0xFE5
 26664                           fsr1h	equ	0xFE2
 26665                           fsr1l	equ	0xFE1
 26666                           indf2	equ	0xFDF
 26667                           postinc2	equ	0xFDE
 26668                           postdec2	equ	0xFDD
 26669                           plusw2	equ	0xFDB
 26670                           fsr2h	equ	0xFDA
 26671                           fsr2l	equ	0xFD9
 26672                           status	equ	0xFD8
 26673                           
 26674 ;; *************** function _SetEEPROMdefault *****************
 26675 ;; Defined at:
 26676 ;;		line 299 in file "EEPROM.c"
 26677 ;; Parameters:    Size  Location     Type
 26678 ;;		None
 26679 ;; Auto vars:     Size  Location     Type
 26680 ;;  j               1  126[BANK0 ] unsigned char 
 26681 ;;  i               1  125[BANK0 ] unsigned char 
 26682 ;;  k               1  124[BANK0 ] unsigned char 
 26683 ;; Return value:  Size  Location     Type
 26684 ;;		None               void
 26685 ;; Registers used:
 26686 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26687 ;; Tracked objects:
 26688 ;;		On entry : 0/0
 26689 ;;		On exit  : 0/0
 26690 ;;		Unchanged: 0/0
 26691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26693 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26695 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26696 ;;Total ram usage:        5 bytes
 26697 ;; Hardware stack levels used:    1
 26698 ;; Hardware stack levels required when called:   10
 26699 ;; This function calls:
 26700 ;;		_SyncGlobalToEEPROM
 26701 ;; This function is called by:
 26702 ;;		_Init_System
 26703 ;; This function uses a non-reentrant model
 26704 ;;
 26705                           
 26706                           	psect	text43
 26707  008F30                     __ptext43:
 26708                           	opt stack 0
 26709  008F30                     _SetEEPROMdefault:
 26710                           	opt stack 19
 26711                           
 26712                           ;EEPROM.c: 301: unsigned char i,j,k;
 26713                           ;EEPROM.c: 303: Global1.BlueToothFlag = 0;
 26714                           
 26715                           ; BSR set to: 0
 26716                           ;incstack = 0
 26717  008F30  0E00               	movlw	0
 26718  008F32  0102               	movlb	2	; () banked
 26719  008F34  6FD2               	movwf	_Global1& (0+255),b
 26720                           
 26721                           ;EEPROM.c: 304: Global1.SWNECcode = 0x00FF00FF;
 26722  008F36  0EFF               	movlw	255
 26723  008F38  0102               	movlb	2	; () banked
 26724  008F3A  6FD3               	movwf	(_Global1+1)& (0+255),b
 26725  008F3C  0E00               	movlw	0
 26726  008F3E  6FD4               	movwf	(_Global1+2)& (0+255),b
 26727  008F40  0EFF               	movlw	255
 26728  008F42  6FD5               	movwf	(_Global1+3)& (0+255),b
 26729  008F44  0E00               	movlw	0
 26730  008F46  6FD6               	movwf	(_Global1+4)& (0+255),b
 26731                           
 26732                           ;EEPROM.c: 305: Global1.EEPROMinitFlag = 0;
 26733  008F48  0E00               	movlw	0
 26734  008F4A  0102               	movlb	2	; () banked
 26735  008F4C  6FEF               	movwf	(_Global1+29)& (0+255),b
 26736                           
 26737                           ;EEPROM.c: 306: for(i=0; i< 12; i++)
 26738  008F4E  0E00               	movlw	0
 26739  008F50  0100               	movlb	0	; () banked
 26740  008F52  6FDD               	movwf	SetEEPROMdefault@i& (0+255),b
 26741  008F54                     l11558:
 26742                           
 26743                           ; BSR set to: 0
 26744  008F54  0E0B               	movlw	11
 26745  008F56  0100               	movlb	0	; () banked
 26746  008F58  65DD               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 26747  008F5A  D001               	goto	l11562
 26748                           
 26749                           ; BSR set to: 0
 26750  008F5C  D02F               	goto	l11578
 26751  008F5E                     l11562:
 26752                           
 26753                           ; BSR set to: 0
 26754                           ;EEPROM.c: 307: {
 26755                           ;EEPROM.c: 308: for(j=0; j < 2; j++)
 26756  008F5E  0E00               	movlw	0
 26757  008F60  0100               	movlb	0	; () banked
 26758  008F62  6FDE               	movwf	SetEEPROMdefault@j& (0+255),b
 26759  008F64                     l11564:
 26760                           
 26761                           ; BSR set to: 0
 26762  008F64  0E01               	movlw	1
 26763  008F66  0100               	movlb	0	; () banked
 26764  008F68  65DE               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 26765  008F6A  D001               	goto	l11568
 26766                           
 26767                           ; BSR set to: 0
 26768  008F6C  D024               	goto	l11574
 26769  008F6E                     l11568:
 26770                           
 26771                           ; BSR set to: 0
 26772                           ;EEPROM.c: 309: {
 26773                           ;EEPROM.c: 310: Global1.RemoteButtonNEC[i][j] = 0x00;
 26774  008F6E  0100               	movlb	0	; () banked
 26775  008F70  51DD               	movf	SetEEPROMdefault@i& (0+255),w,b
 26776  008F72  0D02               	mullw	2
 26777  008F74  0ED2               	movlw	low _Global1
 26778  008F76  0100               	movlb	0	; () banked
 26779  008F78  6FDA               	movwf	??_SetEEPROMdefault& (0+255),b
 26780  008F7A  0E02               	movlw	high _Global1
 26781  008F7C  0100               	movlb	0	; () banked
 26782  008F7E  6FDB               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 26783  008F80  0E05               	movlw	5
 26784  008F82  0100               	movlb	0	; () banked
 26785  008F84  27DA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 26786  008F86  0E00               	movlw	0
 26787  008F88  23DB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 26788  008F8A  50F3               	movf	prodl,w,c
 26789  008F8C  0100               	movlb	0	; () banked
 26790  008F8E  27DA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 26791  008F90  50F4               	movf	prodh,w,c
 26792  008F92  0100               	movlb	0	; () banked
 26793  008F94  23DB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 26794  008F96  0100               	movlb	0	; () banked
 26795  008F98  51DE               	movf	SetEEPROMdefault@j& (0+255),w,b
 26796  008F9A  0D01               	mullw	1
 26797  008F9C  50F3               	movf	prodl,w,c
 26798  008F9E  0100               	movlb	0	; () banked
 26799  008FA0  25DA               	addwf	??_SetEEPROMdefault& (0+255),w,b
 26800  008FA2  6ED9               	movwf	fsr2l,c
 26801  008FA4  50F4               	movf	prodh,w,c
 26802  008FA6  0100               	movlb	0	; () banked
 26803  008FA8  21DB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 26804  008FAA  6EDA               	movwf	fsr2h,c
 26805  008FAC  0E00               	movlw	0
 26806  008FAE  6EDF               	movwf	indf2,c
 26807                           
 26808                           ; BSR set to: 0
 26809  008FB0  0100               	movlb	0	; () banked
 26810  008FB2  2BDE               	incf	SetEEPROMdefault@j& (0+255),f,b
 26811  008FB4  D7D7               	goto	l11564
 26812  008FB6                     l11574:
 26813                           
 26814                           ; BSR set to: 0
 26815  008FB6  0100               	movlb	0	; () banked
 26816  008FB8  2BDD               	incf	SetEEPROMdefault@i& (0+255),f,b
 26817  008FBA  D7CC               	goto	l11558
 26818  008FBC                     l11578:
 26819                           
 26820                           ; BSR set to: 0
 26821                           ;EEPROM.c: 311: }
 26822                           ;EEPROM.c: 312: }
 26823                           ;EEPROM.c: 313: for(i=0; i< 8; i++)
 26824  008FBC  0E00               	movlw	0
 26825  008FBE  0100               	movlb	0	; () banked
 26826  008FC0  6FDD               	movwf	SetEEPROMdefault@i& (0+255),b
 26827  008FC2                     l11580:
 26828                           
 26829                           ; BSR set to: 0
 26830  008FC2  0E07               	movlw	7
 26831  008FC4  0100               	movlb	0	; () banked
 26832  008FC6  65DD               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 26833  008FC8  D001               	goto	l11584
 26834                           
 26835                           ; BSR set to: 0
 26836  008FCA  D03E               	goto	l11610
 26837  008FCC                     l11584:
 26838                           
 26839                           ; BSR set to: 0
 26840                           ;EEPROM.c: 314: {
 26841                           ;EEPROM.c: 315: for(j=0; j < 3; j++)
 26842  008FCC  0E00               	movlw	0
 26843  008FCE  0100               	movlb	0	; () banked
 26844  008FD0  6FDE               	movwf	SetEEPROMdefault@j& (0+255),b
 26845  008FD2                     l11586:
 26846                           
 26847                           ; BSR set to: 0
 26848  008FD2  0E02               	movlw	2
 26849  008FD4  0100               	movlb	0	; () banked
 26850  008FD6  65DE               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 26851  008FD8  D001               	goto	l11590
 26852                           
 26853                           ; BSR set to: 0
 26854  008FDA  D033               	goto	l11606
 26855  008FDC                     l11590:
 26856                           
 26857                           ; BSR set to: 0
 26858                           ;EEPROM.c: 316: {
 26859                           ;EEPROM.c: 317: for(k=0; k < 2; k++)
 26860  008FDC  0E00               	movlw	0
 26861  008FDE  0100               	movlb	0	; () banked
 26862  008FE0  6FDC               	movwf	SetEEPROMdefault@k& (0+255),b
 26863  008FE2                     l11592:
 26864                           
 26865                           ; BSR set to: 0
 26866  008FE2  0E01               	movlw	1
 26867  008FE4  0100               	movlb	0	; () banked
 26868  008FE6  65DC               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 26869  008FE8  D001               	goto	l11596
 26870                           
 26871                           ; BSR set to: 0
 26872  008FEA  D028               	goto	l11602
 26873  008FEC                     l11596:
 26874                           
 26875                           ; BSR set to: 0
 26876                           ;EEPROM.c: 318: {
 26877                           ;EEPROM.c: 319: Global2.RemoteButtonRF[i][j][k] = 0x00;
 26878  008FEC  0100               	movlb	0	; () banked
 26879  008FEE  51DD               	movf	SetEEPROMdefault@i& (0+255),w,b
 26880  008FF0  0D06               	mullw	6
 26881  008FF2  0E9E               	movlw	low _Global2
 26882  008FF4  0100               	movlb	0	; () banked
 26883  008FF6  6FDA               	movwf	??_SetEEPROMdefault& (0+255),b
 26884  008FF8  0E02               	movlw	high _Global2
 26885  008FFA  0100               	movlb	0	; () banked
 26886  008FFC  6FDB               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 26887  008FFE  50F3               	movf	prodl,w,c
 26888  009000  0100               	movlb	0	; () banked
 26889  009002  27DA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 26890  009004  50F4               	movf	prodh,w,c
 26891  009006  0100               	movlb	0	; () banked
 26892  009008  23DB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 26893  00900A  0100               	movlb	0	; () banked
 26894  00900C  51DE               	movf	SetEEPROMdefault@j& (0+255),w,b
 26895  00900E  0D02               	mullw	2
 26896  009010  50F3               	movf	prodl,w,c
 26897  009012  0100               	movlb	0	; () banked
 26898  009014  27DA               	addwf	??_SetEEPROMdefault& (0+255),f,b
 26899  009016  50F4               	movf	prodh,w,c
 26900  009018  0100               	movlb	0	; () banked
 26901  00901A  23DB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 26902  00901C  0100               	movlb	0	; () banked
 26903  00901E  51DC               	movf	SetEEPROMdefault@k& (0+255),w,b
 26904  009020  0D01               	mullw	1
 26905  009022  50F3               	movf	prodl,w,c
 26906  009024  0100               	movlb	0	; () banked
 26907  009026  25DA               	addwf	??_SetEEPROMdefault& (0+255),w,b
 26908  009028  6ED9               	movwf	fsr2l,c
 26909  00902A  50F4               	movf	prodh,w,c
 26910  00902C  0100               	movlb	0	; () banked
 26911  00902E  21DB               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 26912  009030  6EDA               	movwf	fsr2h,c
 26913  009032  0E00               	movlw	0
 26914  009034  6EDF               	movwf	indf2,c
 26915                           
 26916                           ; BSR set to: 0
 26917  009036  0100               	movlb	0	; () banked
 26918  009038  2BDC               	incf	SetEEPROMdefault@k& (0+255),f,b
 26919  00903A  D7D3               	goto	l11592
 26920  00903C                     l11602:
 26921                           
 26922                           ; BSR set to: 0
 26923  00903C  0100               	movlb	0	; () banked
 26924  00903E  2BDE               	incf	SetEEPROMdefault@j& (0+255),f,b
 26925  009040  D7C8               	goto	l11586
 26926  009042                     l11606:
 26927                           
 26928                           ; BSR set to: 0
 26929  009042  0100               	movlb	0	; () banked
 26930  009044  2BDD               	incf	SetEEPROMdefault@i& (0+255),f,b
 26931  009046  D7BD               	goto	l11580
 26932  009048                     l11610:
 26933                           
 26934                           ; BSR set to: 0
 26935                           ;EEPROM.c: 320: }
 26936                           ;EEPROM.c: 321: }
 26937                           ;EEPROM.c: 322: }
 26938                           ;EEPROM.c: 323: SyncGlobalToEEPROM();
 26939  009048  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 26940  00904C  0012               	return		;funcret
 26941  00904E                     __end_of_SetEEPROMdefault:
 26942                           	opt stack 0
 26943                           tblptru	equ	0xFF8
 26944                           tblptrh	equ	0xFF7
 26945                           tblptrl	equ	0xFF6
 26946                           tablat	equ	0xFF5
 26947                           prodh	equ	0xFF4
 26948                           prodl	equ	0xFF3
 26949                           intcon	equ	0xFF2
 26950                           intcon2	equ	0xFF1
 26951                           indf0	equ	0xFEF
 26952                           postinc0	equ	0xFEE
 26953                           plusw0	equ	0xFEB
 26954                           fsr0h	equ	0xFEA
 26955                           fsr0l	equ	0xFE9
 26956                           wreg	equ	0xFE8
 26957                           indf1	equ	0xFE7
 26958                           postdec1	equ	0xFE5
 26959                           fsr1h	equ	0xFE2
 26960                           fsr1l	equ	0xFE1
 26961                           indf2	equ	0xFDF
 26962                           postinc2	equ	0xFDE
 26963                           postdec2	equ	0xFDD
 26964                           plusw2	equ	0xFDB
 26965                           fsr2h	equ	0xFDA
 26966                           fsr2l	equ	0xFD9
 26967                           status	equ	0xFD8
 26968                           
 26969 ;; *************** function _InitUART *****************
 26970 ;; Defined at:
 26971 ;;		line 85 in file "UART.c"
 26972 ;; Parameters:    Size  Location     Type
 26973 ;;  Baud            4   85[BANK0 ] unsigned long 
 26974 ;; Auto vars:     Size  Location     Type
 26975 ;;  temp            4   99[BANK0 ] unsigned long 
 26976 ;;  spbrg           2   96[BANK0 ] unsigned int 
 26977 ;;  config          1   98[BANK0 ] unsigned char 
 26978 ;; Return value:  Size  Location     Type
 26979 ;;		None               void
 26980 ;; Registers used:
 26981 ;;		wreg, status,2, status,0, cstack
 26982 ;; Tracked objects:
 26983 ;;		On entry : 0/0
 26984 ;;		On exit  : 0/0
 26985 ;;		Unchanged: 0/0
 26986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26987 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26988 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26990 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26991 ;;Total ram usage:       18 bytes
 26992 ;; Hardware stack levels used:    1
 26993 ;; Hardware stack levels required when called:    8
 26994 ;; This function calls:
 26995 ;;		_ClearUSART
 26996 ;;		_Local_CloseUSART
 26997 ;;		_OpenUSART
 26998 ;;		_Round
 26999 ;;		___fttol
 27000 ;;		___lldiv
 27001 ;;		___lltoft
 27002 ;; This function is called by:
 27003 ;;		_Init_System
 27004 ;; This function uses a non-reentrant model
 27005 ;;
 27006                           
 27007                           	psect	text44
 27008  00904E                     __ptext44:
 27009                           	opt stack 0
 27010  00904E                     _InitUART:
 27011                           	opt stack 21
 27012                           
 27013                           ;UART.c: 87: unsigned long temp;
 27014                           ;UART.c: 88: unsigned char config = 0;
 27015                           
 27016                           ;incstack = 0
 27017  00904E  0E00               	movlw	0
 27018  009050  0100               	movlb	0	; () banked
 27019  009052  6FC2               	movwf	InitUART@config& (0+255),b
 27020                           
 27021                           ; BSR set to: 0
 27022                           ;UART.c: 89: unsigned int spbrg;
 27023                           ;UART.c: 91: Local_CloseUSART();
 27024  009054  EC39  F057         	call	_Local_CloseUSART	;wreg free
 27025                           
 27026                           ;UART.c: 96: config |= 0b00001000;
 27027  009058  0100               	movlb	0	; () banked
 27028  00905A  87C2               	bsf	InitUART@config& (0+255),3,b
 27029                           
 27030                           ; BSR set to: 0
 27031                           ;UART.c: 97: config |= 0b00010000;
 27032  00905C  0100               	movlb	0	; () banked
 27033  00905E  89C2               	bsf	InitUART@config& (0+255),4,b
 27034                           
 27035                           ; BSR set to: 0
 27036                           ;UART.c: 98: config &= ~0b00000010;
 27037  009060  0100               	movlb	0	; () banked
 27038  009062  93C2               	bcf	InitUART@config& (0+255),1,b
 27039                           
 27040                           ; BSR set to: 0
 27041                           ;UART.c: 101: temp = (64000000L / Baud) - 1;
 27042  009064  0E00               	movlw	0
 27043  009066  0100               	movlb	0	; () banked
 27044  009068  6F60               	movwf	___lldiv@dividend& (0+255),b
 27045  00906A  0E90               	movlw	144
 27046  00906C  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 27047  00906E  0ED0               	movlw	208
 27048  009070  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 27049  009072  0E03               	movlw	3
 27050  009074  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 27051  009076  C0B5  F064         	movff	InitUART@Baud,___lldiv@divisor
 27052  00907A  C0B6  F065         	movff	InitUART@Baud+1,___lldiv@divisor+1
 27053  00907E  C0B7  F066         	movff	InitUART@Baud+2,___lldiv@divisor+2
 27054  009082  C0B8  F067         	movff	InitUART@Baud+3,___lldiv@divisor+3
 27055  009086  EC0E  F04D         	call	___lldiv	;wreg free
 27056  00908A  0EFF               	movlw	255
 27057  00908C  0100               	movlb	0	; () banked
 27058  00908E  2560               	addwf	?___lldiv& (0+255),w,b
 27059  009090  0100               	movlb	0	; () banked
 27060  009092  6FC3               	movwf	InitUART@temp& (0+255),b
 27061  009094  0EFF               	movlw	255
 27062  009096  0100               	movlb	0	; () banked
 27063  009098  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
 27064  00909A  0100               	movlb	0	; () banked
 27065  00909C  6FC4               	movwf	(InitUART@temp+1)& (0+255),b
 27066  00909E  0EFF               	movlw	255
 27067  0090A0  0100               	movlb	0	; () banked
 27068  0090A2  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
 27069  0090A4  0100               	movlb	0	; () banked
 27070  0090A6  6FC5               	movwf	(InitUART@temp+2)& (0+255),b
 27071  0090A8  0EFF               	movlw	255
 27072  0090AA  0100               	movlb	0	; () banked
 27073  0090AC  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
 27074  0090AE  0100               	movlb	0	; () banked
 27075  0090B0  6FC6               	movwf	(InitUART@temp+3)& (0+255),b
 27076                           
 27077                           ; BSR set to: 0
 27078                           ;UART.c: 102: temp = (temp >> 2) - 1;
 27079  0090B2  C0C3  F0B9         	movff	InitUART@temp,??_InitUART
 27080  0090B6  C0C4  F0BA         	movff	InitUART@temp+1,??_InitUART+1
 27081  0090BA  C0C5  F0BB         	movff	InitUART@temp+2,??_InitUART+2
 27082  0090BE  C0C6  F0BC         	movff	InitUART@temp+3,??_InitUART+3
 27083  0090C2  0E03               	movlw	3
 27084  0090C4  D006               	goto	u12510
 27085  0090C6                     u12515:
 27086  0090C6  0100               	movlb	0	; () banked
 27087  0090C8  90D8               	bcf	status,0,c
 27088  0090CA  33BC               	rrcf	(??_InitUART+3)& (0+255),f,b
 27089  0090CC  33BB               	rrcf	(??_InitUART+2)& (0+255),f,b
 27090  0090CE  33BA               	rrcf	(??_InitUART+1)& (0+255),f,b
 27091  0090D0  33B9               	rrcf	??_InitUART& (0+255),f,b
 27092  0090D2                     u12510:
 27093  0090D2  2EE8               	decfsz	wreg,f,c
 27094  0090D4  D7F8               	goto	u12515
 27095  0090D6  0EFF               	movlw	255
 27096  0090D8  0100               	movlb	0	; () banked
 27097  0090DA  25B9               	addwf	??_InitUART& (0+255),w,b
 27098  0090DC  0100               	movlb	0	; () banked
 27099  0090DE  6FC3               	movwf	InitUART@temp& (0+255),b
 27100  0090E0  0EFF               	movlw	255
 27101  0090E2  0100               	movlb	0	; () banked
 27102  0090E4  21BA               	addwfc	(??_InitUART+1)& (0+255),w,b
 27103  0090E6  0100               	movlb	0	; () banked
 27104  0090E8  6FC4               	movwf	(InitUART@temp+1)& (0+255),b
 27105  0090EA  0EFF               	movlw	255
 27106  0090EC  0100               	movlb	0	; () banked
 27107  0090EE  21BB               	addwfc	(??_InitUART+2)& (0+255),w,b
 27108  0090F0  0100               	movlb	0	; () banked
 27109  0090F2  6FC5               	movwf	(InitUART@temp+2)& (0+255),b
 27110  0090F4  0EFF               	movlw	255
 27111  0090F6  0100               	movlb	0	; () banked
 27112  0090F8  21BC               	addwfc	(??_InitUART+3)& (0+255),w,b
 27113  0090FA  0100               	movlb	0	; () banked
 27114  0090FC  6FC6               	movwf	(InitUART@temp+3)& (0+255),b
 27115                           
 27116                           ; BSR set to: 0
 27117                           ;UART.c: 103: spbrg = (unsigned int) Round(temp);
 27118  0090FE  C0C3  F068         	movff	InitUART@temp,___lltoft@c
 27119  009102  C0C4  F069         	movff	InitUART@temp+1,___lltoft@c+1
 27120  009106  C0C5  F06A         	movff	InitUART@temp+2,___lltoft@c+2
 27121  00910A  C0C6  F06B         	movff	InitUART@temp+3,___lltoft@c+3
 27122  00910E  EC7B  F051         	call	___lltoft	;wreg free
 27123  009112  C068  F0AE         	movff	?___lltoft,Round@input
 27124  009116  C069  F0AF         	movff	?___lltoft+1,Round@input+1
 27125  00911A  C06A  F0B0         	movff	?___lltoft+2,Round@input+2
 27126  00911E  ECAD  F052         	call	_Round	;wreg free
 27127  009122  C0AE  F0BD         	movff	?_Round,_InitUART$4112
 27128  009126  C0AF  F0BE         	movff	?_Round+1,_InitUART$4112+1
 27129  00912A  C0B0  F0BF         	movff	?_Round+2,_InitUART$4112+2
 27130                           
 27131                           ;UART.c: 103: spbrg = (unsigned int) Round(temp);
 27132  00912E  C0BD  F09F         	movff	_InitUART$4112,___fttol@f1
 27133  009132  C0BE  F0A0         	movff	_InitUART$4112+1,___fttol@f1+1
 27134  009136  C0BF  F0A1         	movff	_InitUART$4112+2,___fttol@f1+2
 27135  00913A  EC67  F043         	call	___fttol	;wreg free
 27136  00913E  C09F  F0C0         	movff	?___fttol,InitUART@spbrg
 27137  009142  C0A0  F0C1         	movff	?___fttol+1,InitUART@spbrg+1
 27138                           
 27139                           ;UART.c: 105: BAUDCONbits.BRG16 = 1;
 27140  009146  86B8               	bsf	4024,3,c	;volatile
 27141                           
 27142                           ;UART.c: 107: ClearUSART();
 27143  009148  EC18  F057         	call	_ClearUSART	;wreg free
 27144                           
 27145                           ;UART.c: 108: OpenUSART(config, spbrg);
 27146  00914C  C0C0  F060         	movff	InitUART@spbrg,OpenUSART@spbrg
 27147  009150  C0C1  F061         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 27148  009154  0100               	movlb	0	; () banked
 27149  009156  51C2               	movf	InitUART@config& (0+255),w,b
 27150  009158  ECBB  F051         	call	_OpenUSART
 27151                           
 27152                           ;UART.c: 110: PIR1bits.RCIF = 0;
 27153  00915C  9A9E               	bcf	3998,5,c	;volatile
 27154                           
 27155                           ;UART.c: 111: PIE1bits.RCIE = 0;
 27156  00915E  9A9D               	bcf	3997,5,c	;volatile
 27157                           
 27158                           ;UART.c: 112: INTCONbits.PEIE = 1;
 27159  009160  8CF2               	bsf	intcon,6,c	;volatile
 27160  009162  0012               	return		;funcret
 27161  009164                     __end_of_InitUART:
 27162                           	opt stack 0
 27163                           tblptru	equ	0xFF8
 27164                           tblptrh	equ	0xFF7
 27165                           tblptrl	equ	0xFF6
 27166                           tablat	equ	0xFF5
 27167                           prodh	equ	0xFF4
 27168                           prodl	equ	0xFF3
 27169                           intcon	equ	0xFF2
 27170                           intcon2	equ	0xFF1
 27171                           indf0	equ	0xFEF
 27172                           postinc0	equ	0xFEE
 27173                           plusw0	equ	0xFEB
 27174                           fsr0h	equ	0xFEA
 27175                           fsr0l	equ	0xFE9
 27176                           wreg	equ	0xFE8
 27177                           indf1	equ	0xFE7
 27178                           postdec1	equ	0xFE5
 27179                           fsr1h	equ	0xFE2
 27180                           fsr1l	equ	0xFE1
 27181                           indf2	equ	0xFDF
 27182                           postinc2	equ	0xFDE
 27183                           postdec2	equ	0xFDD
 27184                           plusw2	equ	0xFDB
 27185                           fsr2h	equ	0xFDA
 27186                           fsr2l	equ	0xFD9
 27187                           status	equ	0xFD8
 27188                           
 27189 ;; *************** function _Round *****************
 27190 ;; Defined at:
 27191 ;;		line 205 in file "MISC.c"
 27192 ;; Parameters:    Size  Location     Type
 27193 ;;  input           3   78[BANK0 ] unsigned char 
 27194 ;; Auto vars:     Size  Location     Type
 27195 ;;  temp            4   81[BANK0 ] long 
 27196 ;; Return value:  Size  Location     Type
 27197 ;;                  3   78[BANK0 ] long 
 27198 ;; Registers used:
 27199 ;;		wreg, status,2, status,0, cstack
 27200 ;; Tracked objects:
 27201 ;;		On entry : 0/0
 27202 ;;		On exit  : 0/0
 27203 ;;		Unchanged: 0/0
 27204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27205 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27206 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27208 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27209 ;;Total ram usage:        7 bytes
 27210 ;; Hardware stack levels used:    1
 27211 ;; Hardware stack levels required when called:    7
 27212 ;; This function calls:
 27213 ;;		___altoft
 27214 ;;		___ftadd
 27215 ;;		___fttol
 27216 ;; This function is called by:
 27217 ;;		_InitUART
 27218 ;; This function uses a non-reentrant model
 27219 ;;
 27220                           
 27221                           	psect	text45
 27222  00A55A                     __ptext45:
 27223                           	opt stack 0
 27224  00A55A                     _Round:
 27225                           	opt stack 21
 27226                           
 27227                           ;MISC.c: 207: long temp = (long)(input + 0.5);
 27228                           
 27229                           ;incstack = 0
 27230  00A55A  0E00               	movlw	0
 27231  00A55C  0100               	movlb	0	; () banked
 27232  00A55E  6F96               	movwf	___ftadd@f2& (0+255),b
 27233  00A560  0E00               	movlw	0
 27234  00A562  0100               	movlb	0	; () banked
 27235  00A564  6F97               	movwf	(___ftadd@f2+1)& (0+255),b
 27236  00A566  0E3F               	movlw	63
 27237  00A568  0100               	movlb	0	; () banked
 27238  00A56A  6F98               	movwf	(___ftadd@f2+2)& (0+255),b
 27239  00A56C  C0AE  F093         	movff	Round@input,___ftadd@f1
 27240  00A570  C0AF  F094         	movff	Round@input+1,___ftadd@f1+1
 27241  00A574  C0B0  F095         	movff	Round@input+2,___ftadd@f1+2
 27242  00A578  EC18  F039         	call	___ftadd	;wreg free
 27243  00A57C  C093  F09F         	movff	?___ftadd,___fttol@f1
 27244  00A580  C094  F0A0         	movff	?___ftadd+1,___fttol@f1+1
 27245  00A584  C095  F0A1         	movff	?___ftadd+2,___fttol@f1+2
 27246  00A588  EC67  F043         	call	___fttol	;wreg free
 27247  00A58C  C09F  F0B1         	movff	?___fttol,Round@temp
 27248  00A590  C0A0  F0B2         	movff	?___fttol+1,Round@temp+1
 27249  00A594  C0A1  F0B3         	movff	?___fttol+2,Round@temp+2
 27250  00A598  C0A2  F0B4         	movff	?___fttol+3,Round@temp+3
 27251                           
 27252                           ;MISC.c: 209: return temp;
 27253  00A59C  C0B1  F068         	movff	Round@temp,___altoft@c
 27254  00A5A0  C0B2  F069         	movff	Round@temp+1,___altoft@c+1
 27255  00A5A4  C0B3  F06A         	movff	Round@temp+2,___altoft@c+2
 27256  00A5A8  C0B4  F06B         	movff	Round@temp+3,___altoft@c+3
 27257  00A5AC  EC20  F04F         	call	___altoft	;wreg free
 27258  00A5B0  C068  F0AE         	movff	?___altoft,?_Round
 27259  00A5B4  C069  F0AF         	movff	?___altoft+1,?_Round+1
 27260  00A5B8  C06A  F0B0         	movff	?___altoft+2,?_Round+2
 27261  00A5BC  0012               	return	
 27262  00A5BE  0012               	return		;funcret
 27263  00A5C0                     __end_of_Round:
 27264                           	opt stack 0
 27265                           tblptru	equ	0xFF8
 27266                           tblptrh	equ	0xFF7
 27267                           tblptrl	equ	0xFF6
 27268                           tablat	equ	0xFF5
 27269                           prodh	equ	0xFF4
 27270                           prodl	equ	0xFF3
 27271                           intcon	equ	0xFF2
 27272                           intcon2	equ	0xFF1
 27273                           indf0	equ	0xFEF
 27274                           postinc0	equ	0xFEE
 27275                           plusw0	equ	0xFEB
 27276                           fsr0h	equ	0xFEA
 27277                           fsr0l	equ	0xFE9
 27278                           wreg	equ	0xFE8
 27279                           indf1	equ	0xFE7
 27280                           postdec1	equ	0xFE5
 27281                           fsr1h	equ	0xFE2
 27282                           fsr1l	equ	0xFE1
 27283                           indf2	equ	0xFDF
 27284                           postinc2	equ	0xFDE
 27285                           postdec2	equ	0xFDD
 27286                           plusw2	equ	0xFDB
 27287                           fsr2h	equ	0xFDA
 27288                           fsr2l	equ	0xFD9
 27289                           status	equ	0xFD8
 27290                           
 27291 ;; *************** function ___altoft *****************
 27292 ;; Defined at:
 27293 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 27294 ;; Parameters:    Size  Location     Type
 27295 ;;  c               4    8[BANK0 ] long 
 27296 ;; Auto vars:     Size  Location     Type
 27297 ;;  sign            1   17[BANK0 ] unsigned char 
 27298 ;;  exp             1   16[BANK0 ] unsigned char 
 27299 ;; Return value:  Size  Location     Type
 27300 ;;                  3    8[BANK0 ] float 
 27301 ;; Registers used:
 27302 ;;		wreg, status,2, status,0, cstack
 27303 ;; Tracked objects:
 27304 ;;		On entry : 0/0
 27305 ;;		On exit  : 0/0
 27306 ;;		Unchanged: 0/0
 27307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27308 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27309 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27310 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27311 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27312 ;;Total ram usage:       10 bytes
 27313 ;; Hardware stack levels used:    1
 27314 ;; Hardware stack levels required when called:    6
 27315 ;; This function calls:
 27316 ;;		___ftpack
 27317 ;; This function is called by:
 27318 ;;		_Round
 27319 ;; This function uses a non-reentrant model
 27320 ;;
 27321                           
 27322                           	psect	text46
 27323  009E40                     __ptext46:
 27324                           	opt stack 0
 27325  009E40                     ___altoft:
 27326                           	opt stack 21
 27327                           
 27328                           ;incstack = 0
 27329  009E40  0E00               	movlw	0
 27330  009E42  0100               	movlb	0	; () banked
 27331  009E44  6F71               	movwf	___altoft@sign& (0+255),b
 27332  009E46  0E8E               	movlw	142
 27333  009E48  0100               	movlb	0	; () banked
 27334  009E4A  6F70               	movwf	___altoft@exp& (0+255),b
 27335                           
 27336                           ; BSR set to: 0
 27337  009E4C  0100               	movlb	0	; () banked
 27338  009E4E  AF6B               	btfss	(___altoft@c+3)& (0+255),7,b
 27339  009E50  D016               	goto	l10808
 27340                           
 27341                           ; BSR set to: 0
 27342  009E52  0100               	movlb	0	; () banked
 27343  009E54  1F6B               	comf	(___altoft@c+3)& (0+255),f,b
 27344  009E56  1F6A               	comf	(___altoft@c+2)& (0+255),f,b
 27345  009E58  1F69               	comf	(___altoft@c+1)& (0+255),f,b
 27346  009E5A  6D68               	negf	___altoft@c& (0+255),b
 27347  009E5C  0E00               	movlw	0
 27348  009E5E  2369               	addwfc	(___altoft@c+1)& (0+255),f,b
 27349  009E60  236A               	addwfc	(___altoft@c+2)& (0+255),f,b
 27350  009E62  236B               	addwfc	(___altoft@c+3)& (0+255),f,b
 27351                           
 27352                           ; BSR set to: 0
 27353  009E64  0E01               	movlw	1
 27354  009E66  0100               	movlb	0	; () banked
 27355  009E68  6F71               	movwf	___altoft@sign& (0+255),b
 27356                           
 27357                           ; BSR set to: 0
 27358  009E6A  D009               	goto	l10808
 27359  009E6C                     l10806:
 27360                           
 27361                           ; BSR set to: 0
 27362  009E6C  0100               	movlb	0	; () banked
 27363  009E6E  90D8               	bcf	status,0,c
 27364  009E70  336B               	rrcf	(___altoft@c+3)& (0+255),f,b
 27365  009E72  336A               	rrcf	(___altoft@c+2)& (0+255),f,b
 27366  009E74  3369               	rrcf	(___altoft@c+1)& (0+255),f,b
 27367  009E76  3368               	rrcf	___altoft@c& (0+255),f,b
 27368  009E78  0100               	movlb	0	; () banked
 27369  009E7A  2B70               	incf	___altoft@exp& (0+255),f,b
 27370  009E7C  D000               	goto	l10808
 27371  009E7E                     l10808:
 27372                           
 27373                           ; BSR set to: 0
 27374  009E7E  0E00               	movlw	0
 27375  009E80  0100               	movlb	0	; () banked
 27376  009E82  1568               	andwf	___altoft@c& (0+255),w,b
 27377  009E84  0100               	movlb	0	; () banked
 27378  009E86  6F6C               	movwf	??___altoft& (0+255),b
 27379  009E88  0E00               	movlw	0
 27380  009E8A  0100               	movlb	0	; () banked
 27381  009E8C  1569               	andwf	(___altoft@c+1)& (0+255),w,b
 27382  009E8E  0100               	movlb	0	; () banked
 27383  009E90  6F6D               	movwf	(??___altoft+1)& (0+255),b
 27384  009E92  0E00               	movlw	0
 27385  009E94  0100               	movlb	0	; () banked
 27386  009E96  156A               	andwf	(___altoft@c+2)& (0+255),w,b
 27387  009E98  0100               	movlb	0	; () banked
 27388  009E9A  6F6E               	movwf	(??___altoft+2)& (0+255),b
 27389  009E9C  0EFF               	movlw	255
 27390  009E9E  0100               	movlb	0	; () banked
 27391  009EA0  156B               	andwf	(___altoft@c+3)& (0+255),w,b
 27392  009EA2  0100               	movlb	0	; () banked
 27393  009EA4  6F6F               	movwf	(??___altoft+3)& (0+255),b
 27394  009EA6  0100               	movlb	0	; () banked
 27395  009EA8  516C               	movf	??___altoft& (0+255),w,b
 27396  009EAA  0100               	movlb	0	; () banked
 27397  009EAC  116D               	iorwf	(??___altoft+1)& (0+255),w,b
 27398  009EAE  0100               	movlb	0	; () banked
 27399  009EB0  116E               	iorwf	(??___altoft+2)& (0+255),w,b
 27400  009EB2  0100               	movlb	0	; () banked
 27401  009EB4  116F               	iorwf	(??___altoft+3)& (0+255),w,b
 27402  009EB6  A4D8               	btfss	status,2,c
 27403  009EB8  D7D9               	goto	l10806
 27404                           
 27405                           ; BSR set to: 0
 27406                           
 27407                           ; BSR set to: 0
 27408  009EBA  C068  F060         	movff	___altoft@c,___ftpack@arg
 27409  009EBE  C069  F061         	movff	___altoft@c+1,___ftpack@arg+1
 27410  009EC2  C06A  F062         	movff	___altoft@c+2,___ftpack@arg+2
 27411  009EC6  C070  F063         	movff	___altoft@exp,___ftpack@exp
 27412  009ECA  C071  F064         	movff	___altoft@sign,___ftpack@sign
 27413  009ECE  ECEA  F045         	call	___ftpack	;wreg free
 27414  009ED2  C060  F068         	movff	?___ftpack,?___altoft
 27415  009ED6  C061  F069         	movff	?___ftpack+1,?___altoft+1
 27416  009EDA  C062  F06A         	movff	?___ftpack+2,?___altoft+2
 27417  009EDE  0012               	return	
 27418  009EE0  0012               	return		;funcret
 27419  009EE2                     __end_of___altoft:
 27420                           	opt stack 0
 27421                           tblptru	equ	0xFF8
 27422                           tblptrh	equ	0xFF7
 27423                           tblptrl	equ	0xFF6
 27424                           tablat	equ	0xFF5
 27425                           prodh	equ	0xFF4
 27426                           prodl	equ	0xFF3
 27427                           intcon	equ	0xFF2
 27428                           intcon2	equ	0xFF1
 27429                           indf0	equ	0xFEF
 27430                           postinc0	equ	0xFEE
 27431                           plusw0	equ	0xFEB
 27432                           fsr0h	equ	0xFEA
 27433                           fsr0l	equ	0xFE9
 27434                           wreg	equ	0xFE8
 27435                           indf1	equ	0xFE7
 27436                           postdec1	equ	0xFE5
 27437                           fsr1h	equ	0xFE2
 27438                           fsr1l	equ	0xFE1
 27439                           indf2	equ	0xFDF
 27440                           postinc2	equ	0xFDE
 27441                           postdec2	equ	0xFDD
 27442                           plusw2	equ	0xFDB
 27443                           fsr2h	equ	0xFDA
 27444                           fsr2l	equ	0xFD9
 27445                           status	equ	0xFD8
 27446                           
 27447 ;; *************** function _OpenUSART *****************
 27448 ;; Defined at:
 27449 ;;		line 120 in file "UART.c"
 27450 ;; Parameters:    Size  Location     Type
 27451 ;;  config          1    wreg     unsigned char 
 27452 ;;  spbrg           2    0[BANK0 ] unsigned int 
 27453 ;; Auto vars:     Size  Location     Type
 27454 ;;  config          1    2[BANK0 ] unsigned char 
 27455 ;; Return value:  Size  Location     Type
 27456 ;;		None               void
 27457 ;; Registers used:
 27458 ;;		wreg, status,2
 27459 ;; Tracked objects:
 27460 ;;		On entry : 0/0
 27461 ;;		On exit  : 0/0
 27462 ;;		Unchanged: 0/0
 27463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27467 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27468 ;;Total ram usage:        3 bytes
 27469 ;; Hardware stack levels used:    1
 27470 ;; Hardware stack levels required when called:    5
 27471 ;; This function calls:
 27472 ;;		Nothing
 27473 ;; This function is called by:
 27474 ;;		_InitUART
 27475 ;; This function uses a non-reentrant model
 27476 ;;
 27477                           
 27478                           	psect	text47
 27479  00A376                     __ptext47:
 27480                           	opt stack 0
 27481  00A376                     _OpenUSART:
 27482                           	opt stack 23
 27483                           
 27484                           ;incstack = 0
 27485                           ;OpenUSART@config stored from wreg
 27486  00A376  0100               	movlb	0	; () banked
 27487  00A378  6F62               	movwf	OpenUSART@config& (0+255),b
 27488                           
 27489                           ; BSR set to: 0
 27490                           ;UART.c: 122: TXSTA = 0;
 27491  00A37A  0E00               	movlw	0
 27492  00A37C  6EAC               	movwf	4012,c	;volatile
 27493                           
 27494                           ;UART.c: 123: RCSTA = 0;
 27495  00A37E  0E00               	movlw	0
 27496  00A380  6EAB               	movwf	4011,c	;volatile
 27497                           
 27498                           ; BSR set to: 0
 27499                           ;UART.c: 125: if(config&0x01)
 27500  00A382  0100               	movlb	0	; () banked
 27501  00A384  A162               	btfss	OpenUSART@config& (0+255),0,b
 27502  00A386  D002               	goto	l10898
 27503                           
 27504                           ; BSR set to: 0
 27505                           ;UART.c: 126: {
 27506                           ;UART.c: 127: TXSTAbits.SYNC = 1;
 27507  00A388  88AC               	bsf	4012,4,c	;volatile
 27508  00A38A  D000               	goto	l10898
 27509  00A38C                     l10898:
 27510                           
 27511                           ; BSR set to: 0
 27512                           ;UART.c: 128: }
 27513                           ;UART.c: 130: if(config&0x02)
 27514  00A38C  0100               	movlb	0	; () banked
 27515  00A38E  A362               	btfss	OpenUSART@config& (0+255),1,b
 27516  00A390  D003               	goto	l10902
 27517                           
 27518                           ; BSR set to: 0
 27519                           ;UART.c: 131: {
 27520                           ;UART.c: 132: TXSTAbits.TX9 = 1;
 27521  00A392  8CAC               	bsf	4012,6,c	;volatile
 27522                           
 27523                           ;UART.c: 133: RCSTAbits.RX9 = 1;
 27524  00A394  8CAB               	bsf	4011,6,c	;volatile
 27525  00A396  D000               	goto	l10902
 27526  00A398                     l10902:
 27527                           
 27528                           ; BSR set to: 0
 27529                           ;UART.c: 134: }
 27530                           ;UART.c: 136: if(config&0x04)
 27531  00A398  0100               	movlb	0	; () banked
 27532  00A39A  A562               	btfss	OpenUSART@config& (0+255),2,b
 27533  00A39C  D002               	goto	l10906
 27534                           
 27535                           ; BSR set to: 0
 27536                           ;UART.c: 137: {
 27537                           ;UART.c: 138: TXSTAbits.CSRC = 1;
 27538  00A39E  8EAC               	bsf	4012,7,c	;volatile
 27539  00A3A0  D000               	goto	l10906
 27540  00A3A2                     l10906:
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;UART.c: 139: }
 27544                           ;UART.c: 141: if(config&0x08)
 27545  00A3A2  0100               	movlb	0	; () banked
 27546  00A3A4  A762               	btfss	OpenUSART@config& (0+255),3,b
 27547  00A3A6  D002               	goto	l788
 27548                           
 27549                           ; BSR set to: 0
 27550                           ;UART.c: 142: {
 27551                           ;UART.c: 143: RCSTAbits.CREN = 1;
 27552  00A3A8  88AB               	bsf	4011,4,c	;volatile
 27553                           
 27554                           ;UART.c: 144: }
 27555  00A3AA  D002               	goto	l10910
 27556  00A3AC                     l788:
 27557                           
 27558                           ; BSR set to: 0
 27559                           ;UART.c: 145: else
 27560                           ;UART.c: 146: {
 27561                           ;UART.c: 147: RCSTAbits.SREN = 1;
 27562  00A3AC  8AAB               	bsf	4011,5,c	;volatile
 27563  00A3AE  D000               	goto	l10910
 27564  00A3B0                     l10910:
 27565                           
 27566                           ; BSR set to: 0
 27567                           ;UART.c: 148: }
 27568                           ;UART.c: 150: if(config&0x10)
 27569  00A3B0  0100               	movlb	0	; () banked
 27570  00A3B2  A962               	btfss	OpenUSART@config& (0+255),4,b
 27571  00A3B4  D002               	goto	l10914
 27572                           
 27573                           ; BSR set to: 0
 27574                           ;UART.c: 151: {
 27575                           ;UART.c: 152: TXSTAbits.BRGH = 1;
 27576  00A3B6  84AC               	bsf	4012,2,c	;volatile
 27577  00A3B8  D000               	goto	l10914
 27578  00A3BA                     l10914:
 27579                           
 27580                           ; BSR set to: 0
 27581                           ;UART.c: 153: }
 27582                           ;UART.c: 155: if(config&0x20)
 27583  00A3BA  0100               	movlb	0	; () banked
 27584  00A3BC  AB62               	btfss	OpenUSART@config& (0+255),5,b
 27585  00A3BE  D002               	goto	l10918
 27586                           
 27587                           ; BSR set to: 0
 27588                           ;UART.c: 156: {
 27589                           ;UART.c: 157: RCSTAbits.ADEN = 1;
 27590  00A3C0  86AB               	bsf	4011,3,c	;volatile
 27591  00A3C2  D000               	goto	l10918
 27592  00A3C4                     l10918:
 27593                           
 27594                           ; BSR set to: 0
 27595                           ;UART.c: 158: }
 27596                           ;UART.c: 160: if(config&0x40)
 27597  00A3C4  0100               	movlb	0	; () banked
 27598  00A3C6  AD62               	btfss	OpenUSART@config& (0+255),6,b
 27599  00A3C8  D003               	goto	l792
 27600                           
 27601                           ; BSR set to: 0
 27602                           ;UART.c: 161: {
 27603                           ;UART.c: 162: PIR1bits.RCIF = 0;
 27604  00A3CA  9A9E               	bcf	3998,5,c	;volatile
 27605                           
 27606                           ;UART.c: 163: PIE1bits.RCIE = 1;
 27607  00A3CC  8A9D               	bsf	3997,5,c	;volatile
 27608                           
 27609                           ;UART.c: 165: }
 27610  00A3CE  D002               	goto	l10922
 27611  00A3D0                     l792:
 27612                           
 27613                           ; BSR set to: 0
 27614                           ;UART.c: 166: else
 27615                           ;UART.c: 167: {
 27616                           ;UART.c: 168: PIE1bits.RCIE = 0;
 27617  00A3D0  9A9D               	bcf	3997,5,c	;volatile
 27618  00A3D2  D000               	goto	l10922
 27619  00A3D4                     l10922:
 27620                           
 27621                           ; BSR set to: 0
 27622                           ;UART.c: 169: }
 27623                           ;UART.c: 171: if(config&0x80)
 27624  00A3D4  0100               	movlb	0	; () banked
 27625  00A3D6  AF62               	btfss	OpenUSART@config& (0+255),7,b
 27626  00A3D8  D003               	goto	l794
 27627                           
 27628                           ; BSR set to: 0
 27629                           ;UART.c: 172: {
 27630                           ;UART.c: 173: PIR1bits.TXIF = 0;
 27631  00A3DA  989E               	bcf	3998,4,c	;volatile
 27632                           
 27633                           ;UART.c: 174: PIE1bits.TXIE = 1;
 27634  00A3DC  889D               	bsf	3997,4,c	;volatile
 27635                           
 27636                           ;UART.c: 175: }
 27637  00A3DE  D001               	goto	l795
 27638  00A3E0                     l794:
 27639                           
 27640                           ; BSR set to: 0
 27641                           ;UART.c: 176: else
 27642                           ;UART.c: 177: {
 27643                           ;UART.c: 178: PIE1bits.TXIE = 0;
 27644  00A3E0  989D               	bcf	3997,4,c	;volatile
 27645  00A3E2                     l795:
 27646                           
 27647                           ; BSR set to: 0
 27648                           ;UART.c: 179: }
 27649                           ;UART.c: 181: SPBRG = spbrg;
 27650  00A3E2  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 27651                           
 27652                           ; BSR set to: 0
 27653                           ;UART.c: 182: SPBRGH = spbrg >> 8;
 27654  00A3E6  0100               	movlb	0	; () banked
 27655  00A3E8  5161               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 27656  00A3EA  6EB0               	movwf	4016,c	;volatile
 27657                           
 27658                           ; BSR set to: 0
 27659                           ;UART.c: 184: TXSTAbits.TXEN = 1;
 27660  00A3EC  8AAC               	bsf	4012,5,c	;volatile
 27661                           
 27662                           ; BSR set to: 0
 27663                           ;UART.c: 185: RCSTAbits.SPEN = 1;
 27664  00A3EE  8EAB               	bsf	4011,7,c	;volatile
 27665                           
 27666                           ; BSR set to: 0
 27667  00A3F0  0012               	return		;funcret
 27668  00A3F2                     __end_of_OpenUSART:
 27669                           	opt stack 0
 27670                           tblptru	equ	0xFF8
 27671                           tblptrh	equ	0xFF7
 27672                           tblptrl	equ	0xFF6
 27673                           tablat	equ	0xFF5
 27674                           prodh	equ	0xFF4
 27675                           prodl	equ	0xFF3
 27676                           intcon	equ	0xFF2
 27677                           intcon2	equ	0xFF1
 27678                           indf0	equ	0xFEF
 27679                           postinc0	equ	0xFEE
 27680                           plusw0	equ	0xFEB
 27681                           fsr0h	equ	0xFEA
 27682                           fsr0l	equ	0xFE9
 27683                           wreg	equ	0xFE8
 27684                           indf1	equ	0xFE7
 27685                           postdec1	equ	0xFE5
 27686                           fsr1h	equ	0xFE2
 27687                           fsr1l	equ	0xFE1
 27688                           indf2	equ	0xFDF
 27689                           postinc2	equ	0xFDE
 27690                           postdec2	equ	0xFDD
 27691                           plusw2	equ	0xFDB
 27692                           fsr2h	equ	0xFDA
 27693                           fsr2l	equ	0xFD9
 27694                           status	equ	0xFD8
 27695                           
 27696 ;; *************** function _Local_CloseUSART *****************
 27697 ;; Defined at:
 27698 ;;		line 69 in file "UART.c"
 27699 ;; Parameters:    Size  Location     Type
 27700 ;;		None
 27701 ;; Auto vars:     Size  Location     Type
 27702 ;;		None
 27703 ;; Return value:  Size  Location     Type
 27704 ;;		None               void
 27705 ;; Registers used:
 27706 ;;		None
 27707 ;; Tracked objects:
 27708 ;;		On entry : 0/0
 27709 ;;		On exit  : 0/0
 27710 ;;		Unchanged: 0/0
 27711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27716 ;;Total ram usage:        0 bytes
 27717 ;; Hardware stack levels used:    1
 27718 ;; Hardware stack levels required when called:    5
 27719 ;; This function calls:
 27720 ;;		Nothing
 27721 ;; This function is called by:
 27722 ;;		_InitUART
 27723 ;; This function uses a non-reentrant model
 27724 ;;
 27725                           
 27726                           	psect	text48
 27727  00AE72                     __ptext48:
 27728                           	opt stack 0
 27729  00AE72                     _Local_CloseUSART:
 27730                           	opt stack 23
 27731                           
 27732                           ;UART.c: 71: PIE1bits.RCIE = 0;
 27733                           
 27734                           ; BSR set to: 0
 27735                           ;incstack = 0
 27736  00AE72  9A9D               	bcf	3997,5,c	;volatile
 27737                           
 27738                           ;UART.c: 72: PIE1bits.TXIE = 0;
 27739  00AE74  989D               	bcf	3997,4,c	;volatile
 27740                           
 27741                           ;UART.c: 73: RCSTAbits.SPEN = 0;
 27742  00AE76  9EAB               	bcf	4011,7,c	;volatile
 27743                           
 27744                           ;UART.c: 74: RCSTAbits.CREN = 0;
 27745  00AE78  98AB               	bcf	4011,4,c	;volatile
 27746                           
 27747                           ;UART.c: 75: RCSTAbits.FERR = 0;
 27748  00AE7A  94AB               	bcf	4011,2,c	;volatile
 27749                           
 27750                           ;UART.c: 76: TXSTAbits.TXEN = 0;
 27751  00AE7C  9AAC               	bcf	4012,5,c	;volatile
 27752  00AE7E  0012               	return		;funcret
 27753  00AE80                     __end_of_Local_CloseUSART:
 27754                           	opt stack 0
 27755                           tblptru	equ	0xFF8
 27756                           tblptrh	equ	0xFF7
 27757                           tblptrl	equ	0xFF6
 27758                           tablat	equ	0xFF5
 27759                           prodh	equ	0xFF4
 27760                           prodl	equ	0xFF3
 27761                           intcon	equ	0xFF2
 27762                           intcon2	equ	0xFF1
 27763                           indf0	equ	0xFEF
 27764                           postinc0	equ	0xFEE
 27765                           plusw0	equ	0xFEB
 27766                           fsr0h	equ	0xFEA
 27767                           fsr0l	equ	0xFE9
 27768                           wreg	equ	0xFE8
 27769                           indf1	equ	0xFE7
 27770                           postdec1	equ	0xFE5
 27771                           fsr1h	equ	0xFE2
 27772                           fsr1l	equ	0xFE1
 27773                           indf2	equ	0xFDF
 27774                           postinc2	equ	0xFDE
 27775                           postdec2	equ	0xFDD
 27776                           plusw2	equ	0xFDB
 27777                           fsr2h	equ	0xFDA
 27778                           fsr2l	equ	0xFD9
 27779                           status	equ	0xFD8
 27780                           
 27781 ;; *************** function _InitTimers *****************
 27782 ;; Defined at:
 27783 ;;		line 51 in file "Timer.c"
 27784 ;; Parameters:    Size  Location     Type
 27785 ;;		None
 27786 ;; Auto vars:     Size  Location     Type
 27787 ;;		None
 27788 ;; Return value:  Size  Location     Type
 27789 ;;		None               void
 27790 ;; Registers used:
 27791 ;;		wreg, status,2, cstack
 27792 ;; Tracked objects:
 27793 ;;		On entry : 0/0
 27794 ;;		On exit  : 0/0
 27795 ;;		Unchanged: 0/0
 27796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27801 ;;Total ram usage:        0 bytes
 27802 ;; Hardware stack levels used:    1
 27803 ;; Hardware stack levels required when called:    6
 27804 ;; This function calls:
 27805 ;;		_InitTimer1
 27806 ;;		_InitTimer2
 27807 ;;		_InitTimer3
 27808 ;; This function is called by:
 27809 ;;		_Init_System
 27810 ;; This function uses a non-reentrant model
 27811 ;;
 27812                           
 27813                           	psect	text49
 27814  00ADE4                     __ptext49:
 27815                           	opt stack 0
 27816  00ADE4                     _InitTimers:
 27817                           	opt stack 23
 27818                           
 27819                           ;Timer.c: 53: InitTimer1();
 27820                           
 27821                           ;incstack = 0
 27822  00ADE4  EC47  F057         	call	_InitTimer1	;wreg free
 27823                           
 27824                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 27825  00ADE8  809D               	bsf	3997,0,c	;volatile
 27826                           
 27827                           ;Timer.c: 55: InitTimer2();
 27828  00ADEA  EC40  F057         	call	_InitTimer2	;wreg free
 27829                           
 27830                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 27831  00ADEE  829D               	bsf	3997,1,c	;volatile
 27832                           
 27833                           ;Timer.c: 57: InitTimer3();
 27834  00ADF0  EC76  F057         	call	_InitTimer3	;wreg free
 27835                           
 27836                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 27837  00ADF4  82A0               	bsf	4000,1,c	;volatile
 27838  00ADF6  0012               	return		;funcret
 27839  00ADF8                     __end_of_InitTimers:
 27840                           	opt stack 0
 27841                           tblptru	equ	0xFF8
 27842                           tblptrh	equ	0xFF7
 27843                           tblptrl	equ	0xFF6
 27844                           tablat	equ	0xFF5
 27845                           prodh	equ	0xFF4
 27846                           prodl	equ	0xFF3
 27847                           intcon	equ	0xFF2
 27848                           intcon2	equ	0xFF1
 27849                           indf0	equ	0xFEF
 27850                           postinc0	equ	0xFEE
 27851                           plusw0	equ	0xFEB
 27852                           fsr0h	equ	0xFEA
 27853                           fsr0l	equ	0xFE9
 27854                           wreg	equ	0xFE8
 27855                           indf1	equ	0xFE7
 27856                           postdec1	equ	0xFE5
 27857                           fsr1h	equ	0xFE2
 27858                           fsr1l	equ	0xFE1
 27859                           indf2	equ	0xFDF
 27860                           postinc2	equ	0xFDE
 27861                           postdec2	equ	0xFDD
 27862                           plusw2	equ	0xFDB
 27863                           fsr2h	equ	0xFDA
 27864                           fsr2l	equ	0xFD9
 27865                           status	equ	0xFD8
 27866                           
 27867 ;; *************** function _InitTimer3 *****************
 27868 ;; Defined at:
 27869 ;;		line 163 in file "Timer.c"
 27870 ;; Parameters:    Size  Location     Type
 27871 ;;		None
 27872 ;; Auto vars:     Size  Location     Type
 27873 ;;		None
 27874 ;; Return value:  Size  Location     Type
 27875 ;;		None               void
 27876 ;; Registers used:
 27877 ;;		wreg, status,2
 27878 ;; Tracked objects:
 27879 ;;		On entry : 0/0
 27880 ;;		On exit  : 0/0
 27881 ;;		Unchanged: 0/0
 27882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27887 ;;Total ram usage:        0 bytes
 27888 ;; Hardware stack levels used:    1
 27889 ;; Hardware stack levels required when called:    5
 27890 ;; This function calls:
 27891 ;;		Nothing
 27892 ;; This function is called by:
 27893 ;;		_InitTimers
 27894 ;; This function uses a non-reentrant model
 27895 ;;
 27896                           
 27897                           	psect	text50
 27898  00AEEC                     __ptext50:
 27899                           	opt stack 0
 27900  00AEEC                     _InitTimer3:
 27901                           	opt stack 23
 27902                           
 27903                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 27904                           
 27905                           ;incstack = 0
 27906  00AEEC  8EB1               	bsf	4017,7,c	;volatile
 27907                           
 27908                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 27909  00AEEE  0E30               	movlw	48
 27910  00AEF0  12B1               	iorwf	4017,f,c	;volatile
 27911                           
 27912                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 27913  00AEF2  92B1               	bcf	4017,1,c	;volatile
 27914  00AEF4  0012               	return		;funcret
 27915  00AEF6                     __end_of_InitTimer3:
 27916                           	opt stack 0
 27917                           tblptru	equ	0xFF8
 27918                           tblptrh	equ	0xFF7
 27919                           tblptrl	equ	0xFF6
 27920                           tablat	equ	0xFF5
 27921                           prodh	equ	0xFF4
 27922                           prodl	equ	0xFF3
 27923                           intcon	equ	0xFF2
 27924                           intcon2	equ	0xFF1
 27925                           indf0	equ	0xFEF
 27926                           postinc0	equ	0xFEE
 27927                           plusw0	equ	0xFEB
 27928                           fsr0h	equ	0xFEA
 27929                           fsr0l	equ	0xFE9
 27930                           wreg	equ	0xFE8
 27931                           indf1	equ	0xFE7
 27932                           postdec1	equ	0xFE5
 27933                           fsr1h	equ	0xFE2
 27934                           fsr1l	equ	0xFE1
 27935                           indf2	equ	0xFDF
 27936                           postinc2	equ	0xFDE
 27937                           postdec2	equ	0xFDD
 27938                           plusw2	equ	0xFDB
 27939                           fsr2h	equ	0xFDA
 27940                           fsr2l	equ	0xFD9
 27941                           status	equ	0xFD8
 27942                           
 27943 ;; *************** function _InitTimer2 *****************
 27944 ;; Defined at:
 27945 ;;		line 138 in file "Timer.c"
 27946 ;; Parameters:    Size  Location     Type
 27947 ;;		None
 27948 ;; Auto vars:     Size  Location     Type
 27949 ;;		None
 27950 ;; Return value:  Size  Location     Type
 27951 ;;		None               void
 27952 ;; Registers used:
 27953 ;;		wreg, status,2
 27954 ;; Tracked objects:
 27955 ;;		On entry : 0/0
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27963 ;;Total ram usage:        0 bytes
 27964 ;; Hardware stack levels used:    1
 27965 ;; Hardware stack levels required when called:    5
 27966 ;; This function calls:
 27967 ;;		Nothing
 27968 ;; This function is called by:
 27969 ;;		_InitTimers
 27970 ;; This function uses a non-reentrant model
 27971 ;;
 27972                           
 27973                           	psect	text51
 27974  00AE80                     __ptext51:
 27975                           	opt stack 0
 27976  00AE80                     _InitTimer2:
 27977                           	opt stack 23
 27978                           
 27979                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 27980                           
 27981                           ;incstack = 0
 27982  00AE80  50CA               	movf	4042,w,c	;volatile
 27983  00AE82  0B87               	andlw	-121
 27984  00AE84  0970               	iorlw	112
 27985  00AE86  6ECA               	movwf	4042,c	;volatile
 27986                           
 27987                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 27988  00AE88  0E03               	movlw	3
 27989  00AE8A  12CA               	iorwf	4042,f,c	;volatile
 27990  00AE8C  0012               	return		;funcret
 27991  00AE8E                     __end_of_InitTimer2:
 27992                           	opt stack 0
 27993                           tblptru	equ	0xFF8
 27994                           tblptrh	equ	0xFF7
 27995                           tblptrl	equ	0xFF6
 27996                           tablat	equ	0xFF5
 27997                           prodh	equ	0xFF4
 27998                           prodl	equ	0xFF3
 27999                           intcon	equ	0xFF2
 28000                           intcon2	equ	0xFF1
 28001                           indf0	equ	0xFEF
 28002                           postinc0	equ	0xFEE
 28003                           plusw0	equ	0xFEB
 28004                           fsr0h	equ	0xFEA
 28005                           fsr0l	equ	0xFE9
 28006                           wreg	equ	0xFE8
 28007                           indf1	equ	0xFE7
 28008                           postdec1	equ	0xFE5
 28009                           fsr1h	equ	0xFE2
 28010                           fsr1l	equ	0xFE1
 28011                           indf2	equ	0xFDF
 28012                           postinc2	equ	0xFDE
 28013                           postdec2	equ	0xFDD
 28014                           plusw2	equ	0xFDB
 28015                           fsr2h	equ	0xFDA
 28016                           fsr2l	equ	0xFD9
 28017                           status	equ	0xFD8
 28018                           
 28019 ;; *************** function _InitTimer1 *****************
 28020 ;; Defined at:
 28021 ;;		line 109 in file "Timer.c"
 28022 ;; Parameters:    Size  Location     Type
 28023 ;;		None
 28024 ;; Auto vars:     Size  Location     Type
 28025 ;;		None
 28026 ;; Return value:  Size  Location     Type
 28027 ;;		None               void
 28028 ;; Registers used:
 28029 ;;		wreg, status,2
 28030 ;; Tracked objects:
 28031 ;;		On entry : 0/0
 28032 ;;		On exit  : 0/0
 28033 ;;		Unchanged: 0/0
 28034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28039 ;;Total ram usage:        0 bytes
 28040 ;; Hardware stack levels used:    1
 28041 ;; Hardware stack levels required when called:    5
 28042 ;; This function calls:
 28043 ;;		Nothing
 28044 ;; This function is called by:
 28045 ;;		_InitTimers
 28046 ;; This function uses a non-reentrant model
 28047 ;;
 28048                           
 28049                           	psect	text52
 28050  00AE8E                     __ptext52:
 28051                           	opt stack 0
 28052  00AE8E                     _InitTimer1:
 28053                           	opt stack 23
 28054                           
 28055                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 28056                           
 28057                           ;incstack = 0
 28058  00AE8E  8ECD               	bsf	4045,7,c	;volatile
 28059                           
 28060                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 28061  00AE90  9CCD               	bcf	4045,6,c	;volatile
 28062                           
 28063                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 28064  00AE92  0E30               	movlw	48
 28065  00AE94  12CD               	iorwf	4045,f,c	;volatile
 28066                           
 28067                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 28068  00AE96  96CD               	bcf	4045,3,c	;volatile
 28069                           
 28070                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 28071  00AE98  92CD               	bcf	4045,1,c	;volatile
 28072  00AE9A  0012               	return		;funcret
 28073  00AE9C                     __end_of_InitTimer1:
 28074                           	opt stack 0
 28075                           tblptru	equ	0xFF8
 28076                           tblptrh	equ	0xFF7
 28077                           tblptrl	equ	0xFF6
 28078                           tablat	equ	0xFF5
 28079                           prodh	equ	0xFF4
 28080                           prodl	equ	0xFF3
 28081                           intcon	equ	0xFF2
 28082                           intcon2	equ	0xFF1
 28083                           indf0	equ	0xFEF
 28084                           postinc0	equ	0xFEE
 28085                           plusw0	equ	0xFEB
 28086                           fsr0h	equ	0xFEA
 28087                           fsr0l	equ	0xFE9
 28088                           wreg	equ	0xFE8
 28089                           indf1	equ	0xFE7
 28090                           postdec1	equ	0xFE5
 28091                           fsr1h	equ	0xFE2
 28092                           fsr1l	equ	0xFE1
 28093                           indf2	equ	0xFDF
 28094                           postinc2	equ	0xFDE
 28095                           postdec2	equ	0xFDD
 28096                           plusw2	equ	0xFDB
 28097                           fsr2h	equ	0xFDA
 28098                           fsr2l	equ	0xFD9
 28099                           status	equ	0xFD8
 28100                           
 28101 ;; *************** function _InitIR *****************
 28102 ;; Defined at:
 28103 ;;		line 80 in file "IR.c"
 28104 ;; Parameters:    Size  Location     Type
 28105 ;;		None
 28106 ;; Auto vars:     Size  Location     Type
 28107 ;;		None
 28108 ;; Return value:  Size  Location     Type
 28109 ;;		None               void
 28110 ;; Registers used:
 28111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28112 ;; Tracked objects:
 28113 ;;		On entry : 0/0
 28114 ;;		On exit  : 0/0
 28115 ;;		Unchanged: 0/0
 28116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28121 ;;Total ram usage:        0 bytes
 28122 ;; Hardware stack levels used:    1
 28123 ;; Hardware stack levels required when called:    6
 28124 ;; This function calls:
 28125 ;;		_InitTimer0
 28126 ;;		_ReadIRpin
 28127 ;;		_ResetTimer0
 28128 ;;		_cleanBuffer16bit
 28129 ;; This function is called by:
 28130 ;;		_Init_System
 28131 ;; This function uses a non-reentrant model
 28132 ;;
 28133                           
 28134                           	psect	text53
 28135  00A826                     __ptext53:
 28136                           	opt stack 0
 28137  00A826                     _InitIR:
 28138                           	opt stack 23
 28139                           
 28140                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 28141                           
 28142                           ;incstack = 0
 28143  00A826  887D               	bsf	3965,4,c	;volatile
 28144                           
 28145                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 28146  00A828  EC4E  F057         	call	_ReadIRpin	;wreg free
 28147  00A82C  6E40               	movwf	_IRpinOLD,c
 28148                           
 28149                           ;IR.c: 87: InitTimer0();
 28150  00A82E  EC2A  F057         	call	_InitTimer0	;wreg free
 28151                           
 28152                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 28153  00A832  0E00               	movlw	low _IRRawCode
 28154  00A834  0100               	movlb	0	; () banked
 28155  00A836  6F60               	movwf	cleanBuffer16bit@data& (0+255),b
 28156  00A838  0E06               	movlw	high _IRRawCode
 28157  00A83A  0100               	movlb	0	; () banked
 28158  00A83C  6F61               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 28159  00A83E  0E00               	movlw	0
 28160  00A840  0100               	movlb	0	; () banked
 28161  00A842  6F63               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 28162  00A844  0E64               	movlw	100
 28163  00A846  6F62               	movwf	cleanBuffer16bit@count& (0+255),b
 28164  00A848  ECE0  F052         	call	_cleanBuffer16bit	;wreg free
 28165                           
 28166                           ;IR.c: 90: IR_NEC = 0;
 28167  00A84C  0E00               	movlw	0
 28168  00A84E  0103               	movlb	3	; () banked
 28169  00A850  6FEC               	movwf	_IR_NEC& (0+255),b
 28170  00A852  0E00               	movlw	0
 28171  00A854  6FED               	movwf	(_IR_NEC+1)& (0+255),b
 28172  00A856  0E00               	movlw	0
 28173  00A858  6FEE               	movwf	(_IR_NEC+2)& (0+255),b
 28174  00A85A  0E00               	movlw	0
 28175  00A85C  6FEF               	movwf	(_IR_NEC+3)& (0+255),b
 28176                           
 28177                           ; BSR set to: 3
 28178                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 28179  00A85E  9ED5               	bcf	4053,7,c	;volatile
 28180                           
 28181                           ; BSR set to: 3
 28182                           ;IR.c: 93: ResetTimer0();
 28183  00A860  EC7B  F057         	call	_ResetTimer0	;wreg free
 28184                           
 28185                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 28186  00A864  9AF2               	bcf	intcon,5,c	;volatile
 28187                           
 28188                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 28189  00A866  94F2               	bcf	intcon,2,c	;volatile
 28190                           
 28191                           ;IR.c: 98: INTCONbits.RBIF = 0;
 28192  00A868  90F2               	bcf	intcon,0,c	;volatile
 28193                           
 28194                           ;IR.c: 99: INTCONbits.RBIE = 1;
 28195  00A86A  86F2               	bsf	intcon,3,c	;volatile
 28196  00A86C  0012               	return		;funcret
 28197  00A86E                     __end_of_InitIR:
 28198                           	opt stack 0
 28199                           tblptru	equ	0xFF8
 28200                           tblptrh	equ	0xFF7
 28201                           tblptrl	equ	0xFF6
 28202                           tablat	equ	0xFF5
 28203                           prodh	equ	0xFF4
 28204                           prodl	equ	0xFF3
 28205                           intcon	equ	0xFF2
 28206                           intcon2	equ	0xFF1
 28207                           indf0	equ	0xFEF
 28208                           postinc0	equ	0xFEE
 28209                           plusw0	equ	0xFEB
 28210                           fsr0h	equ	0xFEA
 28211                           fsr0l	equ	0xFE9
 28212                           wreg	equ	0xFE8
 28213                           indf1	equ	0xFE7
 28214                           postdec1	equ	0xFE5
 28215                           fsr1h	equ	0xFE2
 28216                           fsr1l	equ	0xFE1
 28217                           indf2	equ	0xFDF
 28218                           postinc2	equ	0xFDE
 28219                           postdec2	equ	0xFDD
 28220                           plusw2	equ	0xFDB
 28221                           fsr2h	equ	0xFDA
 28222                           fsr2l	equ	0xFD9
 28223                           status	equ	0xFD8
 28224                           
 28225 ;; *************** function _cleanBuffer16bit *****************
 28226 ;; Defined at:
 28227 ;;		line 191 in file "MISC.c"
 28228 ;; Parameters:    Size  Location     Type
 28229 ;;  data            2    0[BANK0 ] PTR unsigned int 
 28230 ;;		 -> IRRawCode(200), 
 28231 ;;  count           2    2[BANK0 ] int 
 28232 ;; Auto vars:     Size  Location     Type
 28233 ;;  i               1    7[BANK0 ] unsigned char 
 28234 ;; Return value:  Size  Location     Type
 28235 ;;		None               void
 28236 ;; Registers used:
 28237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28238 ;; Tracked objects:
 28239 ;;		On entry : 0/0
 28240 ;;		On exit  : 0/0
 28241 ;;		Unchanged: 0/0
 28242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28245 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28247 ;;Total ram usage:        8 bytes
 28248 ;; Hardware stack levels used:    1
 28249 ;; Hardware stack levels required when called:    5
 28250 ;; This function calls:
 28251 ;;		Nothing
 28252 ;; This function is called by:
 28253 ;;		_InitIR
 28254 ;; This function uses a non-reentrant model
 28255 ;;
 28256                           
 28257                           	psect	text54
 28258  00A5C0                     __ptext54:
 28259                           	opt stack 0
 28260  00A5C0                     _cleanBuffer16bit:
 28261                           	opt stack 23
 28262                           
 28263                           ;MISC.c: 193: unsigned char i=0;
 28264                           
 28265                           ;incstack = 0
 28266  00A5C0  0E00               	movlw	0
 28267  00A5C2  0100               	movlb	0	; () banked
 28268  00A5C4  6F67               	movwf	cleanBuffer16bit@i& (0+255),b
 28269                           
 28270                           ;MISC.c: 194: for(i=0; i<count;i++)
 28271  00A5C6  0E00               	movlw	0
 28272  00A5C8  0100               	movlb	0	; () banked
 28273  00A5CA  6F67               	movwf	cleanBuffer16bit@i& (0+255),b
 28274  00A5CC  D012               	goto	l10862
 28275  00A5CE                     l10858:
 28276                           
 28277                           ; BSR set to: 0
 28278                           ;MISC.c: 195: {
 28279                           ;MISC.c: 196: data[i]= 0;
 28280  00A5CE  0100               	movlb	0	; () banked
 28281  00A5D0  5167               	movf	cleanBuffer16bit@i& (0+255),w,b
 28282  00A5D2  0D02               	mullw	2
 28283  00A5D4  50F3               	movf	prodl,w,c
 28284  00A5D6  0100               	movlb	0	; () banked
 28285  00A5D8  2560               	addwf	cleanBuffer16bit@data& (0+255),w,b
 28286  00A5DA  6ED9               	movwf	fsr2l,c
 28287  00A5DC  50F4               	movf	prodh,w,c
 28288  00A5DE  0100               	movlb	0	; () banked
 28289  00A5E0  2161               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 28290  00A5E2  6EDA               	movwf	fsr2h,c
 28291  00A5E4  0E00               	movlw	0
 28292  00A5E6  6EDE               	movwf	postinc2,c
 28293  00A5E8  0E00               	movlw	0
 28294  00A5EA  6EDD               	movwf	postdec2,c
 28295                           
 28296                           ; BSR set to: 0
 28297  00A5EC  0100               	movlb	0	; () banked
 28298  00A5EE  2B67               	incf	cleanBuffer16bit@i& (0+255),f,b
 28299  00A5F0  D000               	goto	l10862
 28300  00A5F2                     l10862:
 28301                           
 28302                           ; BSR set to: 0
 28303  00A5F2  0100               	movlb	0	; () banked
 28304  00A5F4  5167               	movf	cleanBuffer16bit@i& (0+255),w,b
 28305  00A5F6  0100               	movlb	0	; () banked
 28306  00A5F8  6F64               	movwf	??_cleanBuffer16bit& (0+255),b
 28307  00A5FA  6B65               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 28308  00A5FC  0100               	movlb	0	; () banked
 28309  00A5FE  5162               	movf	cleanBuffer16bit@count& (0+255),w,b
 28310  00A600  0100               	movlb	0	; () banked
 28311  00A602  5D64               	subwf	??_cleanBuffer16bit& (0+255),w,b
 28312  00A604  0100               	movlb	0	; () banked
 28313  00A606  5165               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 28314  00A608  0A80               	xorlw	128
 28315  00A60A  0100               	movlb	0	; () banked
 28316  00A60C  6F66               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 28317  00A60E  0100               	movlb	0	; () banked
 28318  00A610  5163               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 28319  00A612  0A80               	xorlw	128
 28320  00A614  0100               	movlb	0	; () banked
 28321  00A616  5966               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 28322  00A618  A0D8               	btfss	status,0,c
 28323  00A61A  D7D9               	goto	l10858
 28324                           
 28325                           ; BSR set to: 0
 28326                           
 28327                           ; BSR set to: 0
 28328  00A61C  0012               	return		;funcret
 28329  00A61E                     __end_of_cleanBuffer16bit:
 28330                           	opt stack 0
 28331                           tblptru	equ	0xFF8
 28332                           tblptrh	equ	0xFF7
 28333                           tblptrl	equ	0xFF6
 28334                           tablat	equ	0xFF5
 28335                           prodh	equ	0xFF4
 28336                           prodl	equ	0xFF3
 28337                           intcon	equ	0xFF2
 28338                           intcon2	equ	0xFF1
 28339                           indf0	equ	0xFEF
 28340                           postinc0	equ	0xFEE
 28341                           plusw0	equ	0xFEB
 28342                           fsr0h	equ	0xFEA
 28343                           fsr0l	equ	0xFE9
 28344                           wreg	equ	0xFE8
 28345                           indf1	equ	0xFE7
 28346                           postdec1	equ	0xFE5
 28347                           fsr1h	equ	0xFE2
 28348                           fsr1l	equ	0xFE1
 28349                           indf2	equ	0xFDF
 28350                           postinc2	equ	0xFDE
 28351                           postdec2	equ	0xFDD
 28352                           plusw2	equ	0xFDB
 28353                           fsr2h	equ	0xFDA
 28354                           fsr2l	equ	0xFD9
 28355                           status	equ	0xFD8
 28356                           
 28357 ;; *************** function _ResetTimer0 *****************
 28358 ;; Defined at:
 28359 ;;		line 79 in file "Timer.c"
 28360 ;; Parameters:    Size  Location     Type
 28361 ;;		None
 28362 ;; Auto vars:     Size  Location     Type
 28363 ;;		None
 28364 ;; Return value:  Size  Location     Type
 28365 ;;		None               void
 28366 ;; Registers used:
 28367 ;;		wreg, status,2
 28368 ;; Tracked objects:
 28369 ;;		On entry : 0/0
 28370 ;;		On exit  : 0/0
 28371 ;;		Unchanged: 0/0
 28372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28377 ;;Total ram usage:        0 bytes
 28378 ;; Hardware stack levels used:    1
 28379 ;; Hardware stack levels required when called:    5
 28380 ;; This function calls:
 28381 ;;		Nothing
 28382 ;; This function is called by:
 28383 ;;		_InitIR
 28384 ;; This function uses a non-reentrant model
 28385 ;;
 28386                           
 28387                           	psect	text55
 28388  00AEF6                     __ptext55:
 28389                           	opt stack 0
 28390  00AEF6                     _ResetTimer0:
 28391                           	opt stack 23
 28392                           
 28393                           ;Timer.c: 85: TMR0H = 0;
 28394                           
 28395                           ; BSR set to: 0
 28396                           ;incstack = 0
 28397  00AEF6  0E00               	movlw	0
 28398  00AEF8  6ED7               	movwf	4055,c	;volatile
 28399                           
 28400                           ;Timer.c: 86: TMR0L = 2;
 28401  00AEFA  0E02               	movlw	2
 28402  00AEFC  6ED6               	movwf	4054,c	;volatile
 28403  00AEFE  0012               	return		;funcret
 28404  00AF00                     __end_of_ResetTimer0:
 28405                           	opt stack 0
 28406                           tblptru	equ	0xFF8
 28407                           tblptrh	equ	0xFF7
 28408                           tblptrl	equ	0xFF6
 28409                           tablat	equ	0xFF5
 28410                           prodh	equ	0xFF4
 28411                           prodl	equ	0xFF3
 28412                           intcon	equ	0xFF2
 28413                           intcon2	equ	0xFF1
 28414                           indf0	equ	0xFEF
 28415                           postinc0	equ	0xFEE
 28416                           plusw0	equ	0xFEB
 28417                           fsr0h	equ	0xFEA
 28418                           fsr0l	equ	0xFE9
 28419                           wreg	equ	0xFE8
 28420                           indf1	equ	0xFE7
 28421                           postdec1	equ	0xFE5
 28422                           fsr1h	equ	0xFE2
 28423                           fsr1l	equ	0xFE1
 28424                           indf2	equ	0xFDF
 28425                           postinc2	equ	0xFDE
 28426                           postdec2	equ	0xFDD
 28427                           plusw2	equ	0xFDB
 28428                           fsr2h	equ	0xFDA
 28429                           fsr2l	equ	0xFD9
 28430                           status	equ	0xFD8
 28431                           
 28432 ;; *************** function _ReadIRpin *****************
 28433 ;; Defined at:
 28434 ;;		line 107 in file "IR.c"
 28435 ;; Parameters:    Size  Location     Type
 28436 ;;		None
 28437 ;; Auto vars:     Size  Location     Type
 28438 ;;		None
 28439 ;; Return value:  Size  Location     Type
 28440 ;;                  1    wreg      unsigned char 
 28441 ;; Registers used:
 28442 ;;		wreg
 28443 ;; Tracked objects:
 28444 ;;		On entry : 0/0
 28445 ;;		On exit  : 0/0
 28446 ;;		Unchanged: 0/0
 28447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28452 ;;Total ram usage:        0 bytes
 28453 ;; Hardware stack levels used:    1
 28454 ;; Hardware stack levels required when called:    5
 28455 ;; This function calls:
 28456 ;;		Nothing
 28457 ;; This function is called by:
 28458 ;;		_main
 28459 ;;		_InitIR
 28460 ;;		_UseIRCode
 28461 ;;		_SendNEC_wait
 28462 ;;		_SendRF_wait
 28463 ;; This function uses a non-reentrant model
 28464 ;;
 28465                           
 28466                           	psect	text56
 28467  00AE9C                     __ptext56:
 28468                           	opt stack 0
 28469  00AE9C                     _ReadIRpin:
 28470                           	opt stack 22
 28471                           
 28472                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 28473                           
 28474                           ;incstack = 0
 28475  00AE9C  A881               	btfss	3969,4,c	;volatile
 28476  00AE9E  D002               	goto	l10448
 28477                           
 28478                           ;IR.c: 111: {
 28479                           ;IR.c: 112: return (1);
 28480  00AEA0  0E01               	movlw	1
 28481                           
 28482                           ;IR.c: 113: }
 28483  00AEA2  0012               	return	
 28484  00AEA4                     l10448:
 28485                           
 28486                           ;IR.c: 114: else
 28487                           ;IR.c: 115: {
 28488                           ;IR.c: 116: return 0;
 28489  00AEA4  0E00               	movlw	0
 28490  00AEA6  0012               	return	
 28491  00AEA8  0012               	return		;funcret
 28492  00AEAA                     __end_of_ReadIRpin:
 28493                           	opt stack 0
 28494                           tblptru	equ	0xFF8
 28495                           tblptrh	equ	0xFF7
 28496                           tblptrl	equ	0xFF6
 28497                           tablat	equ	0xFF5
 28498                           prodh	equ	0xFF4
 28499                           prodl	equ	0xFF3
 28500                           intcon	equ	0xFF2
 28501                           intcon2	equ	0xFF1
 28502                           indf0	equ	0xFEF
 28503                           postinc0	equ	0xFEE
 28504                           plusw0	equ	0xFEB
 28505                           fsr0h	equ	0xFEA
 28506                           fsr0l	equ	0xFE9
 28507                           wreg	equ	0xFE8
 28508                           indf1	equ	0xFE7
 28509                           postdec1	equ	0xFE5
 28510                           fsr1h	equ	0xFE2
 28511                           fsr1l	equ	0xFE1
 28512                           indf2	equ	0xFDF
 28513                           postinc2	equ	0xFDE
 28514                           postdec2	equ	0xFDD
 28515                           plusw2	equ	0xFDB
 28516                           fsr2h	equ	0xFDA
 28517                           fsr2l	equ	0xFD9
 28518                           status	equ	0xFD8
 28519                           
 28520 ;; *************** function _InitTimer0 *****************
 28521 ;; Defined at:
 28522 ;;		line 66 in file "Timer.c"
 28523 ;; Parameters:    Size  Location     Type
 28524 ;;		None
 28525 ;; Auto vars:     Size  Location     Type
 28526 ;;		None
 28527 ;; Return value:  Size  Location     Type
 28528 ;;		None               void
 28529 ;; Registers used:
 28530 ;;		wreg, status,2
 28531 ;; Tracked objects:
 28532 ;;		On entry : 0/0
 28533 ;;		On exit  : 0/0
 28534 ;;		Unchanged: 0/0
 28535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28540 ;;Total ram usage:        0 bytes
 28541 ;; Hardware stack levels used:    1
 28542 ;; Hardware stack levels required when called:    5
 28543 ;; This function calls:
 28544 ;;		Nothing
 28545 ;; This function is called by:
 28546 ;;		_InitIR
 28547 ;; This function uses a non-reentrant model
 28548 ;;
 28549                           
 28550                           	psect	text57
 28551  00AE54                     __ptext57:
 28552                           	opt stack 0
 28553  00AE54                     _InitTimer0:
 28554                           	opt stack 23
 28555                           
 28556                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 28557                           
 28558                           ;incstack = 0
 28559  00AE54  9CD5               	bcf	4053,6,c	;volatile
 28560                           
 28561                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 28562  00AE56  9AD5               	bcf	4053,5,c	;volatile
 28563                           
 28564                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 28565  00AE58  96D5               	bcf	4053,3,c	;volatile
 28566                           
 28567                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 28568  00AE5A  50D5               	movf	4053,w,c	;volatile
 28569  00AE5C  0BF8               	andlw	-8
 28570  00AE5E  0904               	iorlw	4
 28571  00AE60  6ED5               	movwf	4053,c	;volatile
 28572  00AE62  0012               	return		;funcret
 28573  00AE64                     __end_of_InitTimer0:
 28574                           	opt stack 0
 28575                           tblptru	equ	0xFF8
 28576                           tblptrh	equ	0xFF7
 28577                           tblptrl	equ	0xFF6
 28578                           tablat	equ	0xFF5
 28579                           prodh	equ	0xFF4
 28580                           prodl	equ	0xFF3
 28581                           intcon	equ	0xFF2
 28582                           intcon2	equ	0xFF1
 28583                           indf0	equ	0xFEF
 28584                           postinc0	equ	0xFEE
 28585                           plusw0	equ	0xFEB
 28586                           fsr0h	equ	0xFEA
 28587                           fsr0l	equ	0xFE9
 28588                           wreg	equ	0xFE8
 28589                           indf1	equ	0xFE7
 28590                           postdec1	equ	0xFE5
 28591                           fsr1h	equ	0xFE2
 28592                           fsr1l	equ	0xFE1
 28593                           indf2	equ	0xFDF
 28594                           postinc2	equ	0xFDE
 28595                           postdec2	equ	0xFDD
 28596                           plusw2	equ	0xFDB
 28597                           fsr2h	equ	0xFDA
 28598                           fsr2l	equ	0xFD9
 28599                           status	equ	0xFD8
 28600                           
 28601 ;; *************** function _InitBluetooth *****************
 28602 ;; Defined at:
 28603 ;;		line 76 in file "Bluetooth.c"
 28604 ;; Parameters:    Size  Location     Type
 28605 ;;		None
 28606 ;; Auto vars:     Size  Location     Type
 28607 ;;		None
 28608 ;; Return value:  Size  Location     Type
 28609 ;;		None               void
 28610 ;; Registers used:
 28611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28612 ;; Tracked objects:
 28613 ;;		On entry : 0/0
 28614 ;;		On exit  : 0/0
 28615 ;;		Unchanged: 0/0
 28616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28621 ;;Total ram usage:        0 bytes
 28622 ;; Hardware stack levels used:    1
 28623 ;; Hardware stack levels required when called:   11
 28624 ;; This function calls:
 28625 ;;		_BluetoothConfigured
 28626 ;;		_BluetoothInitialSetup
 28627 ;;		_ClearUSART
 28628 ;;		_ResetBlue
 28629 ;;		_SyncGlobalToEEPROM
 28630 ;;		_cleanBuffer
 28631 ;; This function is called by:
 28632 ;;		_Init_System
 28633 ;; This function uses a non-reentrant model
 28634 ;;
 28635                           
 28636                           	psect	text58
 28637  00A4E4                     __ptext58:
 28638                           	opt stack 0
 28639  00A4E4                     _InitBluetooth:
 28640                           	opt stack 18
 28641                           
 28642                           ;Bluetooth.c: 78: cleanBuffer(ReceivedString,100);
 28643                           
 28644                           ;incstack = 0
 28645  00A4E4  0E64               	movlw	low _ReceivedString
 28646  00A4E6  0100               	movlb	0	; () banked
 28647  00A4E8  6F60               	movwf	cleanBuffer@data& (0+255),b
 28648  00A4EA  0E04               	movlw	high _ReceivedString
 28649  00A4EC  0100               	movlb	0	; () banked
 28650  00A4EE  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 28651  00A4F0  0E00               	movlw	0
 28652  00A4F2  0100               	movlb	0	; () banked
 28653  00A4F4  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 28654  00A4F6  0E64               	movlw	100
 28655  00A4F8  6F62               	movwf	cleanBuffer@count& (0+255),b
 28656  00A4FA  EC3D  F053         	call	_cleanBuffer	;wreg free
 28657                           
 28658                           ;Bluetooth.c: 79: ReceivedStringPos = 0;
 28659  00A4FE  0E00               	movlw	0
 28660  00A500  0103               	movlb	3	; () banked
 28661  00A502  6FEB               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 28662                           
 28663                           ; BSR set to: 3
 28664                           ;Bluetooth.c: 80: cleanBuffer(CommandString,100);
 28665  00A504  0E00               	movlw	low _CommandString
 28666  00A506  0100               	movlb	0	; () banked
 28667  00A508  6F60               	movwf	cleanBuffer@data& (0+255),b
 28668  00A50A  0E04               	movlw	high _CommandString
 28669  00A50C  0100               	movlb	0	; () banked
 28670  00A50E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 28671  00A510  0E00               	movlw	0
 28672  00A512  0100               	movlb	0	; () banked
 28673  00A514  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 28674  00A516  0E64               	movlw	100
 28675  00A518  6F62               	movwf	cleanBuffer@count& (0+255),b
 28676  00A51A  EC3D  F053         	call	_cleanBuffer	;wreg free
 28677                           
 28678                           ;Bluetooth.c: 81: CommandStringPos = 0;
 28679  00A51E  0E00               	movlw	0
 28680  00A520  6E3E               	movwf	_CommandStringPos,c	;volatile
 28681                           
 28682                           ;Bluetooth.c: 83: LATA &= ~0x10;
 28683  00A522  9889               	bcf	3977,4,c	;volatile
 28684                           
 28685                           ;Bluetooth.c: 84: LATA |= 0x08;
 28686  00A524  8689               	bsf	3977,3,c	;volatile
 28687                           
 28688                           ;Bluetooth.c: 85: LATA &= ~0x10;
 28689  00A526  9889               	bcf	3977,4,c	;volatile
 28690                           
 28691                           ;Bluetooth.c: 86: if(!BluetoothConfigured())
 28692  00A528  EC21  F057         	call	_BluetoothConfigured	;wreg free
 28693  00A52C  0900               	iorlw	0
 28694  00A52E  A4D8               	btfss	status,2,c
 28695  00A530  0012               	return	
 28696                           
 28697                           ;Bluetooth.c: 87: {
 28698                           ;Bluetooth.c: 88: if(BluetoothInitialSetup(1))
 28699  00A532  0E01               	movlw	1
 28700  00A534  EC1E  F024         	call	_BluetoothInitialSetup
 28701  00A538  0900               	iorlw	0
 28702  00A53A  B4D8               	btfsc	status,2,c
 28703  00A53C  D006               	goto	l11690
 28704                           
 28705                           ;Bluetooth.c: 89: {
 28706                           ;Bluetooth.c: 90: Global1.BlueToothFlag = 1;
 28707  00A53E  0E01               	movlw	1
 28708  00A540  0102               	movlb	2	; () banked
 28709  00A542  6FD2               	movwf	_Global1& (0+255),b
 28710                           
 28711                           ; BSR set to: 2
 28712                           ;Bluetooth.c: 91: SyncGlobalToEEPROM();
 28713  00A544  EC71  F04F         	call	_SyncGlobalToEEPROM	;wreg free
 28714  00A548  D000               	goto	l11690
 28715  00A54A                     l11690:
 28716                           
 28717                           ;Bluetooth.c: 92: }
 28718                           ;Bluetooth.c: 93: ResetBlue();
 28719  00A54A  EC2E  F04A         	call	_ResetBlue	;wreg free
 28720                           
 28721                           ;Bluetooth.c: 94: ClearUSART();
 28722  00A54E  EC18  F057         	call	_ClearUSART	;wreg free
 28723                           
 28724                           ;Bluetooth.c: 95: PIR1bits.RCIF = 0;
 28725  00A552  9A9E               	bcf	3998,5,c	;volatile
 28726                           
 28727                           ;Bluetooth.c: 96: PIE1bits.RCIE = 1;
 28728  00A554  8A9D               	bsf	3997,5,c	;volatile
 28729  00A556  0012               	return	
 28730  00A558  0012               	return		;funcret
 28731  00A55A                     __end_of_InitBluetooth:
 28732                           	opt stack 0
 28733                           tblptru	equ	0xFF8
 28734                           tblptrh	equ	0xFF7
 28735                           tblptrl	equ	0xFF6
 28736                           tablat	equ	0xFF5
 28737                           prodh	equ	0xFF4
 28738                           prodl	equ	0xFF3
 28739                           intcon	equ	0xFF2
 28740                           intcon2	equ	0xFF1
 28741                           indf0	equ	0xFEF
 28742                           postinc0	equ	0xFEE
 28743                           plusw0	equ	0xFEB
 28744                           fsr0h	equ	0xFEA
 28745                           fsr0l	equ	0xFE9
 28746                           wreg	equ	0xFE8
 28747                           indf1	equ	0xFE7
 28748                           postdec1	equ	0xFE5
 28749                           fsr1h	equ	0xFE2
 28750                           fsr1l	equ	0xFE1
 28751                           indf2	equ	0xFDF
 28752                           postinc2	equ	0xFDE
 28753                           postdec2	equ	0xFDD
 28754                           plusw2	equ	0xFDB
 28755                           fsr2h	equ	0xFDA
 28756                           fsr2l	equ	0xFD9
 28757                           status	equ	0xFD8
 28758                           
 28759 ;; *************** function _SyncGlobalToEEPROM *****************
 28760 ;; Defined at:
 28761 ;;		line 273 in file "EEPROM.c"
 28762 ;; Parameters:    Size  Location     Type
 28763 ;;		None
 28764 ;; Auto vars:     Size  Location     Type
 28765 ;;  ok              1  121[BANK0 ] unsigned char 
 28766 ;; Return value:  Size  Location     Type
 28767 ;;                  1    wreg      unsigned char 
 28768 ;; Registers used:
 28769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28770 ;; Tracked objects:
 28771 ;;		On entry : 0/0
 28772 ;;		On exit  : 0/0
 28773 ;;		Unchanged: 0/0
 28774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28779 ;;Total ram usage:        1 bytes
 28780 ;; Hardware stack levels used:    1
 28781 ;; Hardware stack levels required when called:    9
 28782 ;; This function calls:
 28783 ;;		_SetEEPROM1
 28784 ;;		_SetEEPROM2
 28785 ;; This function is called by:
 28786 ;;		_Init_System
 28787 ;;		_SetEEPROMdefault
 28788 ;;		_UseIRCode
 28789 ;;		_InitBluetooth
 28790 ;;		_UseBluetooth
 28791 ;; This function uses a non-reentrant model
 28792 ;;
 28793                           
 28794                           	psect	text59
 28795  009EE2                     __ptext59:
 28796                           	opt stack 0
 28797  009EE2                     _SyncGlobalToEEPROM:
 28798                           	opt stack 20
 28799                           
 28800                           ;EEPROM.c: 275: unsigned char ok = 1;
 28801                           
 28802                           ;incstack = 0
 28803  009EE2  0E01               	movlw	1
 28804  009EE4  0100               	movlb	0	; () banked
 28805  009EE6  6FD9               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 28806                           
 28807                           ; BSR set to: 0
 28808                           ;EEPROM.c: 278: if(SetEEPROM1(Global1,0xFFFFFFFF))
 28809  009EE8  EE22  F0D2         	lfsr	2,_Global1
 28810  009EEC  EE00  F096         	lfsr	0,SetEEPROM1@Temp
 28811  009EF0  0E1D               	movlw	29
 28812  009EF2                     u11501:
 28813  009EF2  CFDB FFEB          	movff	plusw2,plusw0
 28814  009EF6  06E8               	decf	wreg,f,c
 28815  009EF8  E2FC               	bc	u11501
 28816  009EFA  0EFF               	movlw	255
 28817  009EFC  0100               	movlb	0	; () banked
 28818  009EFE  6FB4               	movwf	SetEEPROM1@burn& (0+255),b
 28819  009F00  0EFF               	movlw	255
 28820  009F02  6FB5               	movwf	(SetEEPROM1@burn+1)& (0+255),b
 28821  009F04  0EFF               	movlw	255
 28822  009F06  6FB6               	movwf	(SetEEPROM1@burn+2)& (0+255),b
 28823  009F08  0EFF               	movlw	255
 28824  009F0A  6FB7               	movwf	(SetEEPROM1@burn+3)& (0+255),b
 28825  009F0C  EC54  F045         	call	_SetEEPROM1	;wreg free
 28826  009F10  0100               	movlb	0	; () banked
 28827  009F12  5196               	movf	?_SetEEPROM1& (0+255),w,b
 28828  009F14  0100               	movlb	0	; () banked
 28829  009F16  1197               	iorwf	(?_SetEEPROM1+1)& (0+255),w,b
 28830  009F18  0100               	movlb	0	; () banked
 28831  009F1A  1198               	iorwf	(?_SetEEPROM1+2)& (0+255),w,b
 28832  009F1C  0100               	movlb	0	; () banked
 28833  009F1E  1199               	iorwf	(?_SetEEPROM1+3)& (0+255),w,b
 28834  009F20  B4D8               	btfsc	status,2,c
 28835  009F22  D004               	goto	l10830
 28836                           
 28837                           ; BSR set to: 0
 28838                           ;EEPROM.c: 279: {
 28839                           ;EEPROM.c: 280: ok = 0;
 28840  009F24  0E00               	movlw	0
 28841  009F26  0100               	movlb	0	; () banked
 28842  009F28  6FD9               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 28843  009F2A  D000               	goto	l10830
 28844  009F2C                     l10830:
 28845                           
 28846                           ; BSR set to: 0
 28847                           ;EEPROM.c: 281: }
 28848                           ;EEPROM.c: 282: if(SetEEPROM2(Global2,0xFFFFFFFD))
 28849  009F2C  EE22  F09E         	lfsr	2,_Global2
 28850  009F30  EE00  F096         	lfsr	0,SetEEPROM2@Temp
 28851  009F34  0E33               	movlw	51
 28852  009F36                     u11521:
 28853  009F36  CFDB FFEB          	movff	plusw2,plusw0
 28854  009F3A  06E8               	decf	wreg,f,c
 28855  009F3C  E2FC               	bc	u11521
 28856  009F3E  0EFD               	movlw	253
 28857  009F40  0100               	movlb	0	; () banked
 28858  009F42  6FCA               	movwf	SetEEPROM2@burn& (0+255),b
 28859  009F44  0EFF               	movlw	255
 28860  009F46  6FCB               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 28861  009F48  0EFF               	movlw	255
 28862  009F4A  6FCC               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 28863  009F4C  0EFF               	movlw	255
 28864  009F4E  6FCD               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 28865  009F50  ECB2  F048         	call	_SetEEPROM2	;wreg free
 28866  009F54  0100               	movlb	0	; () banked
 28867  009F56  5196               	movf	?_SetEEPROM2& (0+255),w,b
 28868  009F58  0100               	movlb	0	; () banked
 28869  009F5A  1197               	iorwf	(?_SetEEPROM2+1)& (0+255),w,b
 28870  009F5C  0100               	movlb	0	; () banked
 28871  009F5E  1198               	iorwf	(?_SetEEPROM2+2)& (0+255),w,b
 28872  009F60  0100               	movlb	0	; () banked
 28873  009F62  1199               	iorwf	(?_SetEEPROM2+3)& (0+255),w,b
 28874  009F64  B4D8               	btfsc	status,2,c
 28875  009F66  D003               	goto	l1158
 28876                           
 28877                           ; BSR set to: 0
 28878                           ;EEPROM.c: 283: {
 28879                           ;EEPROM.c: 284: ok = 0;
 28880  009F68  0E00               	movlw	0
 28881  009F6A  0100               	movlb	0	; () banked
 28882  009F6C  6FD9               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 28883  009F6E                     l1158:
 28884                           
 28885                           ; BSR set to: 0
 28886                           ;EEPROM.c: 285: }
 28887                           ;EEPROM.c: 286: if(ok)
 28888  009F6E  0100               	movlb	0	; () banked
 28889  009F70  51D9               	movf	SyncGlobalToEEPROM@ok& (0+255),w,b
 28890  009F72  0100               	movlb	0	; () banked
 28891  009F74  B4D8               	btfsc	status,2,c
 28892  009F76  D002               	goto	l10838
 28893                           
 28894                           ; BSR set to: 0
 28895                           ;EEPROM.c: 287: {
 28896                           ;EEPROM.c: 288: return 1;
 28897  009F78  0E01               	movlw	1
 28898                           
 28899                           ; BSR set to: 0
 28900  009F7A  0012               	return	
 28901  009F7C                     l10838:
 28902                           
 28903                           ; BSR set to: 0
 28904                           ;EEPROM.c: 289: }
 28905                           ;EEPROM.c: 290: return 0;
 28906  009F7C  0E00               	movlw	0
 28907  009F7E  0012               	return	
 28908                           
 28909                           ; BSR set to: 0
 28910                           
 28911                           ; BSR set to: 0
 28912  009F80  0012               	return		;funcret
 28913  009F82                     __end_of_SyncGlobalToEEPROM:
 28914                           	opt stack 0
 28915                           tblptru	equ	0xFF8
 28916                           tblptrh	equ	0xFF7
 28917                           tblptrl	equ	0xFF6
 28918                           tablat	equ	0xFF5
 28919                           prodh	equ	0xFF4
 28920                           prodl	equ	0xFF3
 28921                           intcon	equ	0xFF2
 28922                           intcon2	equ	0xFF1
 28923                           indf0	equ	0xFEF
 28924                           postinc0	equ	0xFEE
 28925                           plusw0	equ	0xFEB
 28926                           fsr0h	equ	0xFEA
 28927                           fsr0l	equ	0xFE9
 28928                           wreg	equ	0xFE8
 28929                           indf1	equ	0xFE7
 28930                           postdec1	equ	0xFE5
 28931                           fsr1h	equ	0xFE2
 28932                           fsr1l	equ	0xFE1
 28933                           indf2	equ	0xFDF
 28934                           postinc2	equ	0xFDE
 28935                           postdec2	equ	0xFDD
 28936                           plusw2	equ	0xFDB
 28937                           fsr2h	equ	0xFDA
 28938                           fsr2l	equ	0xFD9
 28939                           status	equ	0xFD8
 28940                           
 28941 ;; *************** function _SetEEPROM2 *****************
 28942 ;; Defined at:
 28943 ;;		line 232 in file "EEPROM.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  Temp           52   54[BANK0 ] struct EEdata2
 28946 ;;  burn            4  106[BANK0 ] unsigned long 
 28947 ;; Auto vars:     Size  Location     Type
 28948 ;;  fail            4  113[BANK0 ] unsigned long 
 28949 ;;  k               1  120[BANK0 ] unsigned char 
 28950 ;;  j               1  119[BANK0 ] unsigned char 
 28951 ;;  i               1  118[BANK0 ] unsigned char 
 28952 ;;  Arrayspot       1  117[BANK0 ] unsigned char 
 28953 ;;  temp            1  112[BANK0 ] unsigned char 
 28954 ;; Return value:  Size  Location     Type
 28955 ;;                  4   54[BANK0 ] unsigned long 
 28956 ;; Registers used:
 28957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28958 ;; Tracked objects:
 28959 ;;		On entry : 0/0
 28960 ;;		On exit  : 0/0
 28961 ;;		Unchanged: 0/0
 28962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28963 ;;      Params:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28964 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28966 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28967 ;;Total ram usage:       67 bytes
 28968 ;; Hardware stack levels used:    1
 28969 ;; Hardware stack levels required when called:    8
 28970 ;; This function calls:
 28971 ;;		_SetMemoryChar
 28972 ;;		_SetMemoryLong
 28973 ;; This function is called by:
 28974 ;;		_Init_System
 28975 ;;		_SyncGlobalToEEPROM
 28976 ;;		_UseBluetooth
 28977 ;; This function uses a non-reentrant model
 28978 ;;
 28979                           
 28980                           	psect	text60
 28981  009164                     __ptext60:
 28982                           	opt stack 0
 28983  009164                     _SetEEPROM2:
 28984                           	opt stack 20
 28985                           
 28986                           ;EEPROM.c: 234: unsigned long fail = 0;
 28987                           
 28988                           ; BSR set to: 0
 28989                           ;incstack = 0
 28990  009164  0E00               	movlw	0
 28991  009166  0100               	movlb	0	; () banked
 28992  009168  6FD1               	movwf	SetEEPROM2@fail& (0+255),b
 28993  00916A  0E00               	movlw	0
 28994  00916C  6FD2               	movwf	(SetEEPROM2@fail+1)& (0+255),b
 28995  00916E  0E00               	movlw	0
 28996  009170  6FD3               	movwf	(SetEEPROM2@fail+2)& (0+255),b
 28997  009172  0E00               	movlw	0
 28998  009174  6FD4               	movwf	(SetEEPROM2@fail+3)& (0+255),b
 28999                           
 29000                           ;EEPROM.c: 235: unsigned char i,j,k,temp;
 29001                           ;EEPROM.c: 236: unsigned char Arrayspot=5;
 29002  009176  0E05               	movlw	5
 29003  009178  0100               	movlb	0	; () banked
 29004  00917A  6FD5               	movwf	SetEEPROM2@Arrayspot& (0+255),b
 29005                           
 29006                           ; BSR set to: 0
 29007                           ;EEPROM.c: 238: if(burn & 0x00000001)
 29008  00917C  0100               	movlb	0	; () banked
 29009  00917E  A1CA               	btfss	SetEEPROM2@burn& (0+255),0,b
 29010  009180  D058               	goto	l1144
 29011                           
 29012                           ; BSR set to: 0
 29013                           ;EEPROM.c: 239: {
 29014                           ;EEPROM.c: 240: Arrayspot=(2*12 + 6);
 29015  009182  0E1E               	movlw	30
 29016  009184  0100               	movlb	0	; () banked
 29017  009186  6FD5               	movwf	SetEEPROM2@Arrayspot& (0+255),b
 29018                           
 29019                           ;EEPROM.c: 241: for(i=0; i< 8; i++)
 29020  009188  0E00               	movlw	0
 29021  00918A  0100               	movlb	0	; () banked
 29022  00918C  6FD6               	movwf	SetEEPROM2@i& (0+255),b
 29023  00918E                     l10458:
 29024                           
 29025                           ; BSR set to: 0
 29026  00918E  0E07               	movlw	7
 29027  009190  0100               	movlb	0	; () banked
 29028  009192  65D6               	cpfsgt	SetEEPROM2@i& (0+255),b
 29029  009194  D001               	goto	l10462
 29030                           
 29031                           ; BSR set to: 0
 29032  009196  D04D               	goto	l1144
 29033  009198                     l10462:
 29034                           
 29035                           ; BSR set to: 0
 29036                           ;EEPROM.c: 242: {
 29037                           ;EEPROM.c: 243: for(j=0; j < 3; j++)
 29038  009198  0E00               	movlw	0
 29039  00919A  0100               	movlb	0	; () banked
 29040  00919C  6FD7               	movwf	SetEEPROM2@j& (0+255),b
 29041  00919E                     l10464:
 29042                           
 29043                           ; BSR set to: 0
 29044  00919E  0E02               	movlw	2
 29045  0091A0  0100               	movlb	0	; () banked
 29046  0091A2  65D7               	cpfsgt	SetEEPROM2@j& (0+255),b
 29047  0091A4  D001               	goto	l10468
 29048                           
 29049                           ; BSR set to: 0
 29050  0091A6  D042               	goto	l10486
 29051  0091A8                     l10468:
 29052                           
 29053                           ; BSR set to: 0
 29054                           ;EEPROM.c: 244: {
 29055                           ;EEPROM.c: 245: for(k=0; k < 2; k++)
 29056  0091A8  0E00               	movlw	0
 29057  0091AA  0100               	movlb	0	; () banked
 29058  0091AC  6FD8               	movwf	SetEEPROM2@k& (0+255),b
 29059  0091AE                     l10470:
 29060                           
 29061                           ; BSR set to: 0
 29062  0091AE  0E01               	movlw	1
 29063  0091B0  0100               	movlb	0	; () banked
 29064  0091B2  65D8               	cpfsgt	SetEEPROM2@k& (0+255),b
 29065  0091B4  D001               	goto	l10474
 29066                           
 29067                           ; BSR set to: 0
 29068  0091B6  D037               	goto	l10482
 29069  0091B8                     l10474:
 29070                           
 29071                           ; BSR set to: 0
 29072                           ;EEPROM.c: 246: {
 29073                           ;EEPROM.c: 247: temp = Temp.RemoteButtonRF[i][j][k];
 29074  0091B8  0100               	movlb	0	; () banked
 29075  0091BA  51D6               	movf	SetEEPROM2@i& (0+255),w,b
 29076  0091BC  0D06               	mullw	6
 29077  0091BE  0E96               	movlw	low SetEEPROM2@Temp
 29078  0091C0  0100               	movlb	0	; () banked
 29079  0091C2  6FCE               	movwf	??_SetEEPROM2& (0+255),b
 29080  0091C4  0E00               	movlw	high SetEEPROM2@Temp
 29081  0091C6  0100               	movlb	0	; () banked
 29082  0091C8  6FCF               	movwf	(??_SetEEPROM2+1)& (0+255),b
 29083  0091CA  50F3               	movf	prodl,w,c
 29084  0091CC  0100               	movlb	0	; () banked
 29085  0091CE  27CE               	addwf	??_SetEEPROM2& (0+255),f,b
 29086  0091D0  50F4               	movf	prodh,w,c
 29087  0091D2  0100               	movlb	0	; () banked
 29088  0091D4  23CF               	addwfc	(??_SetEEPROM2+1)& (0+255),f,b
 29089  0091D6  0100               	movlb	0	; () banked
 29090  0091D8  51D7               	movf	SetEEPROM2@j& (0+255),w,b
 29091  0091DA  0D02               	mullw	2
 29092  0091DC  50F3               	movf	prodl,w,c
 29093  0091DE  0100               	movlb	0	; () banked
 29094  0091E0  27CE               	addwf	??_SetEEPROM2& (0+255),f,b
 29095  0091E2  50F4               	movf	prodh,w,c
 29096  0091E4  0100               	movlb	0	; () banked
 29097  0091E6  23CF               	addwfc	(??_SetEEPROM2+1)& (0+255),f,b
 29098  0091E8  0100               	movlb	0	; () banked
 29099  0091EA  51D8               	movf	SetEEPROM2@k& (0+255),w,b
 29100  0091EC  0D01               	mullw	1
 29101  0091EE  50F3               	movf	prodl,w,c
 29102  0091F0  0100               	movlb	0	; () banked
 29103  0091F2  25CE               	addwf	??_SetEEPROM2& (0+255),w,b
 29104  0091F4  6ED9               	movwf	fsr2l,c
 29105  0091F6  50F4               	movf	prodh,w,c
 29106  0091F8  0100               	movlb	0	; () banked
 29107  0091FA  21CF               	addwfc	(??_SetEEPROM2+1)& (0+255),w,b
 29108  0091FC  6EDA               	movwf	fsr2h,c
 29109  0091FE  50DF               	movf	indf2,w,c
 29110  009200  0100               	movlb	0	; () banked
 29111  009202  6FD0               	movwf	SetEEPROM2@temp& (0+255),b
 29112                           
 29113                           ; BSR set to: 0
 29114                           ;EEPROM.c: 248: if(!SetMemoryChar(temp,Arrayspot++))
 29115  009204  0100               	movlb	0	; () banked
 29116  009206  2BD5               	incf	SetEEPROM2@Arrayspot& (0+255),f,b
 29117  009208  05D5               	decf	SetEEPROM2@Arrayspot& (0+255),w,b
 29118  00920A  0100               	movlb	0	; () banked
 29119  00920C  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 29120  00920E  0100               	movlb	0	; () banked
 29121  009210  51D0               	movf	SetEEPROM2@temp& (0+255),w,b
 29122  009212  ECDC  F054         	call	_SetMemoryChar
 29123  009216  0900               	iorlw	0
 29124  009218  A4D8               	btfss	status,2,c
 29125  00921A  D002               	goto	l1151
 29126                           
 29127                           ;EEPROM.c: 249: {
 29128                           ;EEPROM.c: 251: fail |= 0x00000001;
 29129  00921C  0100               	movlb	0	; () banked
 29130  00921E  81D1               	bsf	SetEEPROM2@fail& (0+255),0,b
 29131  009220                     l1151:
 29132  009220  0100               	movlb	0	; () banked
 29133  009222  2BD8               	incf	SetEEPROM2@k& (0+255),f,b
 29134  009224  D7C4               	goto	l10470
 29135  009226                     l10482:
 29136                           
 29137                           ; BSR set to: 0
 29138  009226  0100               	movlb	0	; () banked
 29139  009228  2BD7               	incf	SetEEPROM2@j& (0+255),f,b
 29140  00922A  D7B9               	goto	l10464
 29141  00922C                     l10486:
 29142                           
 29143                           ; BSR set to: 0
 29144  00922C  0100               	movlb	0	; () banked
 29145  00922E  2BD6               	incf	SetEEPROM2@i& (0+255),f,b
 29146  009230  D7AE               	goto	l10458
 29147  009232                     l1144:
 29148                           
 29149                           ; BSR set to: 0
 29150                           ;EEPROM.c: 252: }
 29151                           ;EEPROM.c: 253: }
 29152                           ;EEPROM.c: 254: }
 29153                           ;EEPROM.c: 255: }
 29154                           ;EEPROM.c: 256: }
 29155                           ;EEPROM.c: 257: if(burn & 0x00000002)
 29156  009232  0100               	movlb	0	; () banked
 29157  009234  A3CA               	btfss	SetEEPROM2@burn& (0+255),1,b
 29158  009236  D013               	goto	l10494
 29159                           
 29160                           ; BSR set to: 0
 29161                           ;EEPROM.c: 258: {
 29162                           ;EEPROM.c: 259: if(!SetMemoryLong(Temp.SerialNumber,(2*12 + 2*3*8 + 6)))
 29163  009238  C0C6  F085         	movff	SetEEPROM2@Temp+48,SetMemoryLong@Data
 29164  00923C  C0C7  F086         	movff	SetEEPROM2@Temp+49,SetMemoryLong@Data+1
 29165  009240  C0C8  F087         	movff	SetEEPROM2@Temp+50,SetMemoryLong@Data+2
 29166  009244  C0C9  F088         	movff	SetEEPROM2@Temp+51,SetMemoryLong@Data+3
 29167  009248  0E4E               	movlw	78
 29168  00924A  0100               	movlb	0	; () banked
 29169  00924C  6F89               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 29170  00924E  EC39  F049         	call	_SetMemoryLong	;wreg free
 29171  009252  0900               	iorlw	0
 29172  009254  A4D8               	btfss	status,2,c
 29173  009256  D003               	goto	l10494
 29174                           
 29175                           ;EEPROM.c: 260: {
 29176                           ;EEPROM.c: 262: fail |= 0x00000002;
 29177  009258  0100               	movlb	0	; () banked
 29178  00925A  83D1               	bsf	SetEEPROM2@fail& (0+255),1,b
 29179                           
 29180                           ; BSR set to: 0
 29181  00925C  D000               	goto	l10494
 29182  00925E                     l10494:
 29183                           
 29184                           ;EEPROM.c: 263: }
 29185                           ;EEPROM.c: 264: }
 29186                           ;EEPROM.c: 265: return fail;
 29187  00925E  C0D1  F096         	movff	SetEEPROM2@fail,?_SetEEPROM2
 29188  009262  C0D2  F097         	movff	SetEEPROM2@fail+1,?_SetEEPROM2+1
 29189  009266  C0D3  F098         	movff	SetEEPROM2@fail+2,?_SetEEPROM2+2
 29190  00926A  C0D4  F099         	movff	SetEEPROM2@fail+3,?_SetEEPROM2+3
 29191  00926E  0012               	return	
 29192  009270  0012               	return		;funcret
 29193  009272                     __end_of_SetEEPROM2:
 29194                           	opt stack 0
 29195                           tblptru	equ	0xFF8
 29196                           tblptrh	equ	0xFF7
 29197                           tblptrl	equ	0xFF6
 29198                           tablat	equ	0xFF5
 29199                           prodh	equ	0xFF4
 29200                           prodl	equ	0xFF3
 29201                           intcon	equ	0xFF2
 29202                           intcon2	equ	0xFF1
 29203                           indf0	equ	0xFEF
 29204                           postinc0	equ	0xFEE
 29205                           plusw0	equ	0xFEB
 29206                           fsr0h	equ	0xFEA
 29207                           fsr0l	equ	0xFE9
 29208                           wreg	equ	0xFE8
 29209                           indf1	equ	0xFE7
 29210                           postdec1	equ	0xFE5
 29211                           fsr1h	equ	0xFE2
 29212                           fsr1l	equ	0xFE1
 29213                           indf2	equ	0xFDF
 29214                           postinc2	equ	0xFDE
 29215                           postdec2	equ	0xFDD
 29216                           plusw2	equ	0xFDB
 29217                           fsr2h	equ	0xFDA
 29218                           fsr2l	equ	0xFD9
 29219                           status	equ	0xFD8
 29220                           
 29221 ;; *************** function _SetEEPROM1 *****************
 29222 ;; Defined at:
 29223 ;;		line 179 in file "EEPROM.c"
 29224 ;; Parameters:    Size  Location     Type
 29225 ;;  Temp           30   54[BANK0 ] struct EEdata
 29226 ;;  burn            4   84[BANK0 ] unsigned long 
 29227 ;; Auto vars:     Size  Location     Type
 29228 ;;  fail            4   92[BANK0 ] unsigned long 
 29229 ;;  j               1   97[BANK0 ] unsigned char 
 29230 ;;  i               1   96[BANK0 ] unsigned char 
 29231 ;;  Arrayspot       1   91[BANK0 ] unsigned char 
 29232 ;;  temp            1   90[BANK0 ] unsigned char 
 29233 ;;  k               1    0        unsigned char 
 29234 ;; Return value:  Size  Location     Type
 29235 ;;                  4   54[BANK0 ] unsigned long 
 29236 ;; Registers used:
 29237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29238 ;; Tracked objects:
 29239 ;;		On entry : 0/0
 29240 ;;		On exit  : 0/0
 29241 ;;		Unchanged: 0/0
 29242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29243 ;;      Params:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29244 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29246 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29247 ;;Total ram usage:       44 bytes
 29248 ;; Hardware stack levels used:    1
 29249 ;; Hardware stack levels required when called:    8
 29250 ;; This function calls:
 29251 ;;		_SetMemoryChar
 29252 ;;		_SetMemoryLong
 29253 ;; This function is called by:
 29254 ;;		_SyncGlobalToEEPROM
 29255 ;; This function uses a non-reentrant model
 29256 ;;
 29257                           
 29258                           	psect	text61
 29259  008AA8                     __ptext61:
 29260                           	opt stack 0
 29261  008AA8                     _SetEEPROM1:
 29262                           	opt stack 20
 29263                           
 29264                           ;EEPROM.c: 181: unsigned long fail = 0;
 29265                           
 29266                           ;incstack = 0
 29267  008AA8  0E00               	movlw	0
 29268  008AAA  0100               	movlb	0	; () banked
 29269  008AAC  6FBC               	movwf	SetEEPROM1@fail& (0+255),b
 29270  008AAE  0E00               	movlw	0
 29271  008AB0  6FBD               	movwf	(SetEEPROM1@fail+1)& (0+255),b
 29272  008AB2  0E00               	movlw	0
 29273  008AB4  6FBE               	movwf	(SetEEPROM1@fail+2)& (0+255),b
 29274  008AB6  0E00               	movlw	0
 29275  008AB8  6FBF               	movwf	(SetEEPROM1@fail+3)& (0+255),b
 29276                           
 29277                           ;EEPROM.c: 182: unsigned char i,j,k,temp;
 29278                           ;EEPROM.c: 183: unsigned char Arrayspot=5;
 29279  008ABA  0E05               	movlw	5
 29280  008ABC  0100               	movlb	0	; () banked
 29281  008ABE  6FBB               	movwf	SetEEPROM1@Arrayspot& (0+255),b
 29282                           
 29283                           ; BSR set to: 0
 29284                           ;EEPROM.c: 185: if(burn & 0x00000001)
 29285  008AC0  0100               	movlb	0	; () banked
 29286  008AC2  A1B4               	btfss	SetEEPROM1@burn& (0+255),0,b
 29287  008AC4  D00D               	goto	l10666
 29288                           
 29289                           ; BSR set to: 0
 29290                           ;EEPROM.c: 186: {
 29291                           ;EEPROM.c: 187: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 29292  008AC6  0E00               	movlw	0
 29293  008AC8  0100               	movlb	0	; () banked
 29294  008ACA  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 29295  008ACC  0100               	movlb	0	; () banked
 29296  008ACE  5196               	movf	SetEEPROM1@Temp& (0+255),w,b
 29297  008AD0  ECDC  F054         	call	_SetMemoryChar
 29298  008AD4  0900               	iorlw	0
 29299  008AD6  A4D8               	btfss	status,2,c
 29300  008AD8  D003               	goto	l10666
 29301                           
 29302                           ;EEPROM.c: 188: {
 29303                           ;EEPROM.c: 190: fail |= 0x00000001;
 29304  008ADA  0100               	movlb	0	; () banked
 29305  008ADC  81BC               	bsf	SetEEPROM1@fail& (0+255),0,b
 29306                           
 29307                           ; BSR set to: 0
 29308  008ADE  D000               	goto	l10666
 29309  008AE0                     l10666:
 29310                           
 29311                           ;EEPROM.c: 191: }
 29312                           ;EEPROM.c: 192: }
 29313                           ;EEPROM.c: 193: if(burn & 0x00000002)
 29314  008AE0  0100               	movlb	0	; () banked
 29315  008AE2  A3B4               	btfss	SetEEPROM1@burn& (0+255),1,b
 29316  008AE4  D013               	goto	l10672
 29317                           
 29318                           ; BSR set to: 0
 29319                           ;EEPROM.c: 194: {
 29320                           ;EEPROM.c: 195: if(!SetMemoryLong(Temp.SWNECcode,1))
 29321  008AE6  C097  F085         	movff	SetEEPROM1@Temp+1,SetMemoryLong@Data
 29322  008AEA  C098  F086         	movff	SetEEPROM1@Temp+2,SetMemoryLong@Data+1
 29323  008AEE  C099  F087         	movff	SetEEPROM1@Temp+3,SetMemoryLong@Data+2
 29324  008AF2  C09A  F088         	movff	SetEEPROM1@Temp+4,SetMemoryLong@Data+3
 29325  008AF6  0E01               	movlw	1
 29326  008AF8  0100               	movlb	0	; () banked
 29327  008AFA  6F89               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 29328  008AFC  EC39  F049         	call	_SetMemoryLong	;wreg free
 29329  008B00  0900               	iorlw	0
 29330  008B02  A4D8               	btfss	status,2,c
 29331  008B04  D003               	goto	l10672
 29332                           
 29333                           ;EEPROM.c: 196: {
 29334                           ;EEPROM.c: 198: fail |= 0x00000002;
 29335  008B06  0100               	movlb	0	; () banked
 29336  008B08  83BC               	bsf	SetEEPROM1@fail& (0+255),1,b
 29337                           
 29338                           ; BSR set to: 0
 29339  008B0A  D000               	goto	l10672
 29340  008B0C                     l10672:
 29341                           
 29342                           ;EEPROM.c: 199: }
 29343                           ;EEPROM.c: 200: }
 29344                           ;EEPROM.c: 201: if(burn & 0x00000004)
 29345  008B0C  0100               	movlb	0	; () banked
 29346  008B0E  A5B4               	btfss	SetEEPROM1@burn& (0+255),2,b
 29347  008B10  D047               	goto	l1133
 29348                           
 29349                           ; BSR set to: 0
 29350                           ;EEPROM.c: 202: {
 29351                           ;EEPROM.c: 203: for(i=0; i< 12; i++)
 29352  008B12  0E00               	movlw	0
 29353  008B14  0100               	movlb	0	; () banked
 29354  008B16  6FC0               	movwf	SetEEPROM1@i& (0+255),b
 29355  008B18                     l10676:
 29356                           
 29357                           ; BSR set to: 0
 29358  008B18  0E0B               	movlw	11
 29359  008B1A  0100               	movlb	0	; () banked
 29360  008B1C  65C0               	cpfsgt	SetEEPROM1@i& (0+255),b
 29361  008B1E  D001               	goto	l10680
 29362                           
 29363                           ; BSR set to: 0
 29364  008B20  D03F               	goto	l1133
 29365  008B22                     l10680:
 29366                           
 29367                           ; BSR set to: 0
 29368                           ;EEPROM.c: 204: {
 29369                           ;EEPROM.c: 205: for(j=0; j < 2; j++)
 29370  008B22  0E00               	movlw	0
 29371  008B24  0100               	movlb	0	; () banked
 29372  008B26  6FC1               	movwf	SetEEPROM1@j& (0+255),b
 29373  008B28                     l10682:
 29374                           
 29375                           ; BSR set to: 0
 29376  008B28  0E01               	movlw	1
 29377  008B2A  0100               	movlb	0	; () banked
 29378  008B2C  65C1               	cpfsgt	SetEEPROM1@j& (0+255),b
 29379  008B2E  D001               	goto	l10686
 29380                           
 29381                           ; BSR set to: 0
 29382  008B30  D034               	goto	l10694
 29383  008B32                     l10686:
 29384                           
 29385                           ; BSR set to: 0
 29386                           ;EEPROM.c: 206: {
 29387                           ;EEPROM.c: 207: temp = Temp.RemoteButtonNEC[i][j];
 29388  008B32  0100               	movlb	0	; () banked
 29389  008B34  51C0               	movf	SetEEPROM1@i& (0+255),w,b
 29390  008B36  0D02               	mullw	2
 29391  008B38  0E96               	movlw	low SetEEPROM1@Temp
 29392  008B3A  0100               	movlb	0	; () banked
 29393  008B3C  6FB8               	movwf	??_SetEEPROM1& (0+255),b
 29394  008B3E  0E00               	movlw	high SetEEPROM1@Temp
 29395  008B40  0100               	movlb	0	; () banked
 29396  008B42  6FB9               	movwf	(??_SetEEPROM1+1)& (0+255),b
 29397  008B44  50F3               	movf	prodl,w,c
 29398  008B46  0100               	movlb	0	; () banked
 29399  008B48  27B8               	addwf	??_SetEEPROM1& (0+255),f,b
 29400  008B4A  50F4               	movf	prodh,w,c
 29401  008B4C  0100               	movlb	0	; () banked
 29402  008B4E  23B9               	addwfc	(??_SetEEPROM1+1)& (0+255),f,b
 29403  008B50  0100               	movlb	0	; () banked
 29404  008B52  51C1               	movf	SetEEPROM1@j& (0+255),w,b
 29405  008B54  0D01               	mullw	1
 29406  008B56  50F3               	movf	prodl,w,c
 29407  008B58  0100               	movlb	0	; () banked
 29408  008B5A  27B8               	addwf	??_SetEEPROM1& (0+255),f,b
 29409  008B5C  50F4               	movf	prodh,w,c
 29410  008B5E  0100               	movlb	0	; () banked
 29411  008B60  23B9               	addwfc	(??_SetEEPROM1+1)& (0+255),f,b
 29412  008B62  0E05               	movlw	5
 29413  008B64  0100               	movlb	0	; () banked
 29414  008B66  25B8               	addwf	??_SetEEPROM1& (0+255),w,b
 29415  008B68  6ED9               	movwf	fsr2l,c
 29416  008B6A  0E00               	movlw	0
 29417  008B6C  0100               	movlb	0	; () banked
 29418  008B6E  21B9               	addwfc	(??_SetEEPROM1+1)& (0+255),w,b
 29419  008B70  6EDA               	movwf	fsr2h,c
 29420  008B72  50DF               	movf	indf2,w,c
 29421  008B74  0100               	movlb	0	; () banked
 29422  008B76  6FBA               	movwf	SetEEPROM1@temp& (0+255),b
 29423                           
 29424                           ; BSR set to: 0
 29425                           ;EEPROM.c: 208: if(!SetMemoryChar(temp,Arrayspot++))
 29426  008B78  0100               	movlb	0	; () banked
 29427  008B7A  2BBB               	incf	SetEEPROM1@Arrayspot& (0+255),f,b
 29428  008B7C  05BB               	decf	SetEEPROM1@Arrayspot& (0+255),w,b
 29429  008B7E  0100               	movlb	0	; () banked
 29430  008B80  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 29431  008B82  0100               	movlb	0	; () banked
 29432  008B84  51BA               	movf	SetEEPROM1@temp& (0+255),w,b
 29433  008B86  ECDC  F054         	call	_SetMemoryChar
 29434  008B8A  0900               	iorlw	0
 29435  008B8C  A4D8               	btfss	status,2,c
 29436  008B8E  D002               	goto	l1138
 29437                           
 29438                           ;EEPROM.c: 209: {
 29439                           ;EEPROM.c: 211: fail |= 0x00000004;
 29440  008B90  0100               	movlb	0	; () banked
 29441  008B92  85BC               	bsf	SetEEPROM1@fail& (0+255),2,b
 29442  008B94                     l1138:
 29443  008B94  0100               	movlb	0	; () banked
 29444  008B96  2BC1               	incf	SetEEPROM1@j& (0+255),f,b
 29445  008B98  D7C7               	goto	l10682
 29446  008B9A                     l10694:
 29447                           
 29448                           ; BSR set to: 0
 29449  008B9A  0100               	movlb	0	; () banked
 29450  008B9C  2BC0               	incf	SetEEPROM1@i& (0+255),f,b
 29451  008B9E  D7BC               	goto	l10676
 29452  008BA0                     l1133:
 29453                           
 29454                           ; BSR set to: 0
 29455                           ;EEPROM.c: 212: }
 29456                           ;EEPROM.c: 213: }
 29457                           ;EEPROM.c: 214: }
 29458                           ;EEPROM.c: 215: }
 29459                           ;EEPROM.c: 216: if(burn & 0x00000008)
 29460  008BA0  0100               	movlb	0	; () banked
 29461  008BA2  A7B4               	btfss	SetEEPROM1@burn& (0+255),3,b
 29462  008BA4  D00D               	goto	l10702
 29463                           
 29464                           ; BSR set to: 0
 29465                           ;EEPROM.c: 217: {
 29466                           ;EEPROM.c: 218: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*12 + 5)))
 29467  008BA6  0E1D               	movlw	29
 29468  008BA8  0100               	movlb	0	; () banked
 29469  008BAA  6F6A               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 29470  008BAC  0100               	movlb	0	; () banked
 29471  008BAE  51B3               	movf	(SetEEPROM1@Temp+29)& (0+255),w,b
 29472  008BB0  ECDC  F054         	call	_SetMemoryChar
 29473  008BB4  0900               	iorlw	0
 29474  008BB6  A4D8               	btfss	status,2,c
 29475  008BB8  D003               	goto	l10702
 29476                           
 29477                           ;EEPROM.c: 219: {
 29478                           ;EEPROM.c: 221: fail |= 0x00000008;
 29479  008BBA  0100               	movlb	0	; () banked
 29480  008BBC  87BC               	bsf	SetEEPROM1@fail& (0+255),3,b
 29481                           
 29482                           ; BSR set to: 0
 29483  008BBE  D000               	goto	l10702
 29484  008BC0                     l10702:
 29485                           
 29486                           ;EEPROM.c: 222: }
 29487                           ;EEPROM.c: 223: }
 29488                           ;EEPROM.c: 224: return fail;
 29489  008BC0  C0BC  F096         	movff	SetEEPROM1@fail,?_SetEEPROM1
 29490  008BC4  C0BD  F097         	movff	SetEEPROM1@fail+1,?_SetEEPROM1+1
 29491  008BC8  C0BE  F098         	movff	SetEEPROM1@fail+2,?_SetEEPROM1+2
 29492  008BCC  C0BF  F099         	movff	SetEEPROM1@fail+3,?_SetEEPROM1+3
 29493  008BD0  0012               	return	
 29494  008BD2  0012               	return		;funcret
 29495  008BD4                     __end_of_SetEEPROM1:
 29496                           	opt stack 0
 29497                           tblptru	equ	0xFF8
 29498                           tblptrh	equ	0xFF7
 29499                           tblptrl	equ	0xFF6
 29500                           tablat	equ	0xFF5
 29501                           prodh	equ	0xFF4
 29502                           prodl	equ	0xFF3
 29503                           intcon	equ	0xFF2
 29504                           intcon2	equ	0xFF1
 29505                           indf0	equ	0xFEF
 29506                           postinc0	equ	0xFEE
 29507                           plusw0	equ	0xFEB
 29508                           fsr0h	equ	0xFEA
 29509                           fsr0l	equ	0xFE9
 29510                           wreg	equ	0xFE8
 29511                           indf1	equ	0xFE7
 29512                           postdec1	equ	0xFE5
 29513                           fsr1h	equ	0xFE2
 29514                           fsr1l	equ	0xFE1
 29515                           indf2	equ	0xFDF
 29516                           postinc2	equ	0xFDE
 29517                           postdec2	equ	0xFDD
 29518                           plusw2	equ	0xFDB
 29519                           fsr2h	equ	0xFDA
 29520                           fsr2l	equ	0xFD9
 29521                           status	equ	0xFD8
 29522                           
 29523 ;; *************** function _SetMemoryLong *****************
 29524 ;; Defined at:
 29525 ;;		line 407 in file "EEPROM.c"
 29526 ;; Parameters:    Size  Location     Type
 29527 ;;  Data            4   37[BANK0 ] unsigned long 
 29528 ;;  AddressFirst    1   41[BANK0 ] unsigned char 
 29529 ;; Auto vars:     Size  Location     Type
 29530 ;;  Test            4   46[BANK0 ] unsigned long 
 29531 ;;  L               1   53[BANK0 ] unsigned char 
 29532 ;;  ML              1   52[BANK0 ] unsigned char 
 29533 ;;  MH              1   51[BANK0 ] unsigned char 
 29534 ;;  H               1   50[BANK0 ] unsigned char 
 29535 ;; Return value:  Size  Location     Type
 29536 ;;                  1    wreg      unsigned char 
 29537 ;; Registers used:
 29538 ;;		wreg, status,2, status,0, cstack
 29539 ;; Tracked objects:
 29540 ;;		On entry : 0/0
 29541 ;;		On exit  : 0/0
 29542 ;;		Unchanged: 0/0
 29543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29544 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29545 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29547 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29548 ;;Total ram usage:       17 bytes
 29549 ;; Hardware stack levels used:    1
 29550 ;; Hardware stack levels required when called:    7
 29551 ;; This function calls:
 29552 ;;		_GetMemoryLong
 29553 ;;		_WriteEEPROM_1Byte
 29554 ;; This function is called by:
 29555 ;;		_SetEEPROM1
 29556 ;;		_SetEEPROM2
 29557 ;; This function uses a non-reentrant model
 29558 ;;
 29559                           
 29560                           	psect	text62
 29561  009272                     __ptext62:
 29562                           	opt stack 0
 29563  009272                     _SetMemoryLong:
 29564                           	opt stack 20
 29565                           
 29566                           ;EEPROM.c: 409: unsigned char H;
 29567                           ;EEPROM.c: 410: unsigned char MH;
 29568                           ;EEPROM.c: 411: unsigned char ML;
 29569                           ;EEPROM.c: 412: unsigned char L;
 29570                           ;EEPROM.c: 413: unsigned long Test;
 29571                           ;EEPROM.c: 415: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 29572                           
 29573                           ;incstack = 0
 29574  009272  0E00               	movlw	0
 29575  009274  0100               	movlb	0	; () banked
 29576  009276  1585               	andwf	SetMemoryLong@Data& (0+255),w,b
 29577  009278  0100               	movlb	0	; () banked
 29578  00927A  6F8A               	movwf	??_SetMemoryLong& (0+255),b
 29579  00927C  0E00               	movlw	0
 29580  00927E  0100               	movlb	0	; () banked
 29581  009280  1586               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 29582  009282  0100               	movlb	0	; () banked
 29583  009284  6F8B               	movwf	(??_SetMemoryLong+1)& (0+255),b
 29584  009286  0E00               	movlw	0
 29585  009288  0100               	movlb	0	; () banked
 29586  00928A  1587               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 29587  00928C  0100               	movlb	0	; () banked
 29588  00928E  6F8C               	movwf	(??_SetMemoryLong+2)& (0+255),b
 29589  009290  0EFF               	movlw	255
 29590  009292  0100               	movlb	0	; () banked
 29591  009294  1588               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 29592  009296  0100               	movlb	0	; () banked
 29593  009298  6F8D               	movwf	(??_SetMemoryLong+3)& (0+255),b
 29594  00929A  0E19               	movlw	25
 29595  00929C  D006               	goto	u10560
 29596  00929E                     u10565:
 29597  00929E  0100               	movlb	0	; () banked
 29598  0092A0  90D8               	bcf	status,0,c
 29599  0092A2  338D               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 29600  0092A4  338C               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 29601  0092A6  338B               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 29602  0092A8  338A               	rrcf	??_SetMemoryLong& (0+255),f,b
 29603  0092AA                     u10560:
 29604  0092AA  2EE8               	decfsz	wreg,f,c
 29605  0092AC  D7F8               	goto	u10565
 29606  0092AE  0100               	movlb	0	; () banked
 29607  0092B0  518A               	movf	??_SetMemoryLong& (0+255),w,b
 29608  0092B2  0100               	movlb	0	; () banked
 29609  0092B4  6F92               	movwf	SetMemoryLong@H& (0+255),b
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;EEPROM.c: 416: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 29613  0092B6  C087  F093         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 29614                           
 29615                           ; BSR set to: 0
 29616                           ;EEPROM.c: 417: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 29617  0092BA  C086  F094         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;EEPROM.c: 418: L = (unsigned char) (Data & 0X000000FF);
 29621  0092BE  C085  F095         	movff	SetMemoryLong@Data,SetMemoryLong@L
 29622                           
 29623                           ; BSR set to: 0
 29624                           ;EEPROM.c: 421: WriteEEPROM_1Byte(AddressFirst, H);
 29625  0092C2  C089  F060         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 29626  0092C6  0100               	movlb	0	; () banked
 29627  0092C8  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 29628  0092CA  C092  F062         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 29629  0092CE  EC0F  F053         	call	_WriteEEPROM_1Byte	;wreg free
 29630                           
 29631                           ;EEPROM.c: 422: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 29632  0092D2  0E01               	movlw	1
 29633  0092D4  0100               	movlb	0	; () banked
 29634  0092D6  2589               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 29635  0092D8  0100               	movlb	0	; () banked
 29636  0092DA  6F60               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 29637  0092DC  0100               	movlb	0	; () banked
 29638  0092DE  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 29639  0092E0  0E00               	movlw	0
 29640  0092E2  2361               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 29641  0092E4  C093  F062         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 29642  0092E8  EC0F  F053         	call	_WriteEEPROM_1Byte	;wreg free
 29643                           
 29644                           ;EEPROM.c: 423: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 29645  0092EC  0E02               	movlw	2
 29646  0092EE  0100               	movlb	0	; () banked
 29647  0092F0  2589               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 29648  0092F2  0100               	movlb	0	; () banked
 29649  0092F4  6F60               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 29650  0092F6  0100               	movlb	0	; () banked
 29651  0092F8  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 29652  0092FA  0E00               	movlw	0
 29653  0092FC  2361               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 29654  0092FE  C094  F062         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 29655  009302  EC0F  F053         	call	_WriteEEPROM_1Byte	;wreg free
 29656                           
 29657                           ;EEPROM.c: 424: WriteEEPROM_1Byte((AddressFirst + 3), L);
 29658  009306  0E03               	movlw	3
 29659  009308  0100               	movlb	0	; () banked
 29660  00930A  2589               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 29661  00930C  0100               	movlb	0	; () banked
 29662  00930E  6F60               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 29663  009310  0100               	movlb	0	; () banked
 29664  009312  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 29665  009314  0E00               	movlw	0
 29666  009316  2361               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 29667  009318  C095  F062         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 29668  00931C  EC0F  F053         	call	_WriteEEPROM_1Byte	;wreg free
 29669                           
 29670                           ;EEPROM.c: 427: Test = GetMemoryLong(AddressFirst);
 29671  009320  0100               	movlb	0	; () banked
 29672  009322  5189               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 29673  009324  ECA2  F040         	call	_GetMemoryLong
 29674  009328  C064  F08E         	movff	?_GetMemoryLong,SetMemoryLong@Test
 29675  00932C  C065  F08F         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 29676  009330  C066  F090         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 29677  009334  C067  F091         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 29678                           
 29679                           ;EEPROM.c: 429: if(Test == Data)
 29680  009338  0100               	movlb	0	; () banked
 29681  00933A  5185               	movf	SetMemoryLong@Data& (0+255),w,b
 29682  00933C  0100               	movlb	0	; () banked
 29683  00933E  198E               	xorwf	SetMemoryLong@Test& (0+255),w,b
 29684  009340  E112               	bnz	l10382
 29685  009342  0100               	movlb	0	; () banked
 29686  009344  5186               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 29687  009346  0100               	movlb	0	; () banked
 29688  009348  198F               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 29689  00934A  E10D               	bnz	l10382
 29690  00934C  0100               	movlb	0	; () banked
 29691  00934E  5187               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 29692  009350  0100               	movlb	0	; () banked
 29693  009352  1990               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 29694  009354  E108               	bnz	l10382
 29695  009356  0100               	movlb	0	; () banked
 29696  009358  5188               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 29697  00935A  0100               	movlb	0	; () banked
 29698  00935C  1991               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 29699  00935E  A4D8               	btfss	status,2,c
 29700  009360  D002               	goto	l10382
 29701                           
 29702                           ; BSR set to: 0
 29703                           ;EEPROM.c: 430: {
 29704                           ;EEPROM.c: 431: return 1;
 29705  009362  0E01               	movlw	1
 29706                           
 29707                           ; BSR set to: 0
 29708  009364  0012               	return	
 29709  009366                     l10382:
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;EEPROM.c: 432: }
 29713                           ;EEPROM.c: 433: return 0;
 29714  009366  0E00               	movlw	0
 29715  009368  0012               	return	
 29716                           
 29717                           ; BSR set to: 0
 29718                           
 29719                           ; BSR set to: 0
 29720  00936A  0012               	return		;funcret
 29721  00936C                     __end_of_SetMemoryLong:
 29722                           	opt stack 0
 29723                           tblptru	equ	0xFF8
 29724                           tblptrh	equ	0xFF7
 29725                           tblptrl	equ	0xFF6
 29726                           tablat	equ	0xFF5
 29727                           prodh	equ	0xFF4
 29728                           prodl	equ	0xFF3
 29729                           intcon	equ	0xFF2
 29730                           intcon2	equ	0xFF1
 29731                           indf0	equ	0xFEF
 29732                           postinc0	equ	0xFEE
 29733                           plusw0	equ	0xFEB
 29734                           fsr0h	equ	0xFEA
 29735                           fsr0l	equ	0xFE9
 29736                           wreg	equ	0xFE8
 29737                           indf1	equ	0xFE7
 29738                           postdec1	equ	0xFE5
 29739                           fsr1h	equ	0xFE2
 29740                           fsr1l	equ	0xFE1
 29741                           indf2	equ	0xFDF
 29742                           postinc2	equ	0xFDE
 29743                           postdec2	equ	0xFDD
 29744                           plusw2	equ	0xFDB
 29745                           fsr2h	equ	0xFDA
 29746                           fsr2l	equ	0xFD9
 29747                           status	equ	0xFD8
 29748                           
 29749 ;; *************** function _GetMemoryLong *****************
 29750 ;; Defined at:
 29751 ;;		line 384 in file "EEPROM.c"
 29752 ;; Parameters:    Size  Location     Type
 29753 ;;  AddressFirst    1    wreg     unsigned char 
 29754 ;; Auto vars:     Size  Location     Type
 29755 ;;  AddressFirst    1   36[BANK0 ] unsigned char 
 29756 ;;  temp            4   28[BANK0 ] unsigned long 
 29757 ;;  L               1   35[BANK0 ] unsigned char 
 29758 ;;  ML              1   34[BANK0 ] unsigned char 
 29759 ;;  MH              1   33[BANK0 ] unsigned char 
 29760 ;;  H               1   32[BANK0 ] unsigned char 
 29761 ;; Return value:  Size  Location     Type
 29762 ;;                  4    4[BANK0 ] unsigned long 
 29763 ;; Registers used:
 29764 ;;		wreg, status,2, status,0, cstack
 29765 ;; Tracked objects:
 29766 ;;		On entry : 0/0
 29767 ;;		On exit  : 0/0
 29768 ;;		Unchanged: 0/0
 29769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29771 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29772 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29773 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29774 ;;Total ram usage:       33 bytes
 29775 ;; Hardware stack levels used:    1
 29776 ;; Hardware stack levels required when called:    6
 29777 ;; This function calls:
 29778 ;;		_ReadEEPROM_1Byte
 29779 ;; This function is called by:
 29780 ;;		_GetEEPROM1
 29781 ;;		_GetEEPROM2
 29782 ;;		_SetMemoryLong
 29783 ;; This function uses a non-reentrant model
 29784 ;;
 29785                           
 29786                           	psect	text63
 29787  008144                     __ptext63:
 29788                           	opt stack 0
 29789  008144                     _GetMemoryLong:
 29790                           	opt stack 20
 29791                           
 29792                           ; BSR set to: 0
 29793                           ;incstack = 0
 29794                           ;GetMemoryLong@AddressFirst stored from wreg
 29795  008144  0100               	movlb	0	; () banked
 29796  008146  6F84               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 29797                           
 29798                           ; BSR set to: 0
 29799                           ;EEPROM.c: 386: unsigned char H;
 29800                           ;EEPROM.c: 387: unsigned char MH;
 29801                           ;EEPROM.c: 388: unsigned char ML;
 29802                           ;EEPROM.c: 389: unsigned char L;
 29803                           ;EEPROM.c: 390: unsigned long temp =0;
 29804  008148  0E00               	movlw	0
 29805  00814A  0100               	movlb	0	; () banked
 29806  00814C  6F7C               	movwf	GetMemoryLong@temp& (0+255),b
 29807  00814E  0E00               	movlw	0
 29808  008150  6F7D               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 29809  008152  0E00               	movlw	0
 29810  008154  6F7E               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 29811  008156  0E00               	movlw	0
 29812  008158  6F7F               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 29813                           
 29814                           ; BSR set to: 0
 29815                           ;EEPROM.c: 392: H = ReadEEPROM_1Byte(AddressFirst);
 29816  00815A  C084  F060         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 29817  00815E  0100               	movlb	0	; () banked
 29818  008160  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 29819  008162  EC6A  F053         	call	_ReadEEPROM_1Byte	;wreg free
 29820  008166  0100               	movlb	0	; () banked
 29821  008168  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 29822  00816A  0100               	movlb	0	; () banked
 29823  00816C  6F80               	movwf	GetMemoryLong@H& (0+255),b
 29824                           
 29825                           ; BSR set to: 0
 29826                           ;EEPROM.c: 393: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 29827  00816E  0E01               	movlw	1
 29828  008170  0100               	movlb	0	; () banked
 29829  008172  2584               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 29830  008174  0100               	movlb	0	; () banked
 29831  008176  6F60               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 29832  008178  0100               	movlb	0	; () banked
 29833  00817A  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 29834  00817C  0E00               	movlw	0
 29835  00817E  2361               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 29836  008180  EC6A  F053         	call	_ReadEEPROM_1Byte	;wreg free
 29837  008184  0100               	movlb	0	; () banked
 29838  008186  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 29839  008188  0100               	movlb	0	; () banked
 29840  00818A  6F81               	movwf	GetMemoryLong@MH& (0+255),b
 29841                           
 29842                           ; BSR set to: 0
 29843                           ;EEPROM.c: 394: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 29844  00818C  0E02               	movlw	2
 29845  00818E  0100               	movlb	0	; () banked
 29846  008190  2584               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 29847  008192  0100               	movlb	0	; () banked
 29848  008194  6F60               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 29849  008196  0100               	movlb	0	; () banked
 29850  008198  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 29851  00819A  0E00               	movlw	0
 29852  00819C  2361               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 29853  00819E  EC6A  F053         	call	_ReadEEPROM_1Byte	;wreg free
 29854  0081A2  0100               	movlb	0	; () banked
 29855  0081A4  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 29856  0081A6  0100               	movlb	0	; () banked
 29857  0081A8  6F82               	movwf	GetMemoryLong@ML& (0+255),b
 29858                           
 29859                           ; BSR set to: 0
 29860                           ;EEPROM.c: 395: L = ReadEEPROM_1Byte(AddressFirst + 3);
 29861  0081AA  0E03               	movlw	3
 29862  0081AC  0100               	movlb	0	; () banked
 29863  0081AE  2584               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 29864  0081B0  0100               	movlb	0	; () banked
 29865  0081B2  6F60               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 29866  0081B4  0100               	movlb	0	; () banked
 29867  0081B6  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 29868  0081B8  0E00               	movlw	0
 29869  0081BA  2361               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 29870  0081BC  EC6A  F053         	call	_ReadEEPROM_1Byte	;wreg free
 29871  0081C0  0100               	movlb	0	; () banked
 29872  0081C2  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 29873  0081C4  0100               	movlb	0	; () banked
 29874  0081C6  6F83               	movwf	GetMemoryLong@L& (0+255),b
 29875                           
 29876                           ; BSR set to: 0
 29877                           ;EEPROM.c: 397: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 29878                           ;EEPROM.c: 398: + ((unsigned long)ML << 8) + (unsigned long)L);
 29879  0081C8  C082  F068         	movff	GetMemoryLong@ML,??_GetMemoryLong
 29880  0081CC  0100               	movlb	0	; () banked
 29881  0081CE  6B69               	clrf	(??_GetMemoryLong+1)& (0+255),b
 29882  0081D0  6B6A               	clrf	(??_GetMemoryLong+2)& (0+255),b
 29883  0081D2  6B6B               	clrf	(??_GetMemoryLong+3)& (0+255),b
 29884  0081D4  C06A  F06B         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 29885  0081D8  C069  F06A         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 29886  0081DC  C068  F069         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 29887  0081E0  0100               	movlb	0	; () banked
 29888  0081E2  6B68               	clrf	??_GetMemoryLong& (0+255),b
 29889  0081E4  C081  F06C         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 29890  0081E8  0100               	movlb	0	; () banked
 29891  0081EA  6B6D               	clrf	(??_GetMemoryLong+5)& (0+255),b
 29892  0081EC  6B6E               	clrf	(??_GetMemoryLong+6)& (0+255),b
 29893  0081EE  6B6F               	clrf	(??_GetMemoryLong+7)& (0+255),b
 29894  0081F0  C06D  F06F         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 29895  0081F4  C06C  F06E         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 29896  0081F8  0100               	movlb	0	; () banked
 29897  0081FA  6B6D               	clrf	(??_GetMemoryLong+5)& (0+255),b
 29898  0081FC  6B6C               	clrf	(??_GetMemoryLong+4)& (0+255),b
 29899  0081FE  C080  F070         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 29900  008202  0100               	movlb	0	; () banked
 29901  008204  6B71               	clrf	(??_GetMemoryLong+9)& (0+255),b
 29902  008206  6B72               	clrf	(??_GetMemoryLong+10)& (0+255),b
 29903  008208  6B73               	clrf	(??_GetMemoryLong+11)& (0+255),b
 29904  00820A  C070  F073         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 29905  00820E  0100               	movlb	0	; () banked
 29906  008210  6B72               	clrf	(??_GetMemoryLong+10)& (0+255),b
 29907  008212  6B71               	clrf	(??_GetMemoryLong+9)& (0+255),b
 29908  008214  6B70               	clrf	(??_GetMemoryLong+8)& (0+255),b
 29909  008216  0100               	movlb	0	; () banked
 29910  008218  516C               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 29911  00821A  0100               	movlb	0	; () banked
 29912  00821C  2570               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 29913  00821E  0100               	movlb	0	; () banked
 29914  008220  6F74               	movwf	(??_GetMemoryLong+12)& (0+255),b
 29915  008222  0100               	movlb	0	; () banked
 29916  008224  516D               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 29917  008226  0100               	movlb	0	; () banked
 29918  008228  2171               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 29919  00822A  0100               	movlb	0	; () banked
 29920  00822C  6F75               	movwf	(??_GetMemoryLong+13)& (0+255),b
 29921  00822E  0100               	movlb	0	; () banked
 29922  008230  516E               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 29923  008232  0100               	movlb	0	; () banked
 29924  008234  2172               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 29925  008236  0100               	movlb	0	; () banked
 29926  008238  6F76               	movwf	(??_GetMemoryLong+14)& (0+255),b
 29927  00823A  0100               	movlb	0	; () banked
 29928  00823C  516F               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 29929  00823E  0100               	movlb	0	; () banked
 29930  008240  2173               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 29931  008242  0100               	movlb	0	; () banked
 29932  008244  6F77               	movwf	(??_GetMemoryLong+15)& (0+255),b
 29933  008246  0100               	movlb	0	; () banked
 29934  008248  5168               	movf	??_GetMemoryLong& (0+255),w,b
 29935  00824A  0100               	movlb	0	; () banked
 29936  00824C  2574               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 29937  00824E  0100               	movlb	0	; () banked
 29938  008250  6F78               	movwf	(??_GetMemoryLong+16)& (0+255),b
 29939  008252  0100               	movlb	0	; () banked
 29940  008254  5169               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 29941  008256  0100               	movlb	0	; () banked
 29942  008258  2175               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 29943  00825A  0100               	movlb	0	; () banked
 29944  00825C  6F79               	movwf	(??_GetMemoryLong+17)& (0+255),b
 29945  00825E  0100               	movlb	0	; () banked
 29946  008260  516A               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 29947  008262  0100               	movlb	0	; () banked
 29948  008264  2176               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 29949  008266  0100               	movlb	0	; () banked
 29950  008268  6F7A               	movwf	(??_GetMemoryLong+18)& (0+255),b
 29951  00826A  0100               	movlb	0	; () banked
 29952  00826C  516B               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 29953  00826E  0100               	movlb	0	; () banked
 29954  008270  2177               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 29955  008272  0100               	movlb	0	; () banked
 29956  008274  6F7B               	movwf	(??_GetMemoryLong+19)& (0+255),b
 29957  008276  0100               	movlb	0	; () banked
 29958  008278  5183               	movf	GetMemoryLong@L& (0+255),w,b
 29959  00827A  0100               	movlb	0	; () banked
 29960  00827C  2578               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 29961  00827E  0100               	movlb	0	; () banked
 29962  008280  6F7C               	movwf	GetMemoryLong@temp& (0+255),b
 29963  008282  0E00               	movlw	0
 29964  008284  0100               	movlb	0	; () banked
 29965  008286  2179               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 29966  008288  0100               	movlb	0	; () banked
 29967  00828A  6F7D               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 29968  00828C  0E00               	movlw	0
 29969  00828E  0100               	movlb	0	; () banked
 29970  008290  217A               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 29971  008292  0100               	movlb	0	; () banked
 29972  008294  6F7E               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 29973  008296  0E00               	movlw	0
 29974  008298  0100               	movlb	0	; () banked
 29975  00829A  217B               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 29976  00829C  0100               	movlb	0	; () banked
 29977  00829E  6F7F               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;EEPROM.c: 399: return temp;
 29981  0082A0  C07C  F064         	movff	GetMemoryLong@temp,?_GetMemoryLong
 29982  0082A4  C07D  F065         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 29983  0082A8  C07E  F066         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 29984  0082AC  C07F  F067         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 29985  0082B0  0012               	return	
 29986                           
 29987                           ; BSR set to: 0
 29988                           
 29989                           ; BSR set to: 0
 29990  0082B2  0012               	return		;funcret
 29991  0082B4                     __end_of_GetMemoryLong:
 29992                           	opt stack 0
 29993                           tblptru	equ	0xFF8
 29994                           tblptrh	equ	0xFF7
 29995                           tblptrl	equ	0xFF6
 29996                           tablat	equ	0xFF5
 29997                           prodh	equ	0xFF4
 29998                           prodl	equ	0xFF3
 29999                           intcon	equ	0xFF2
 30000                           intcon2	equ	0xFF1
 30001                           indf0	equ	0xFEF
 30002                           postinc0	equ	0xFEE
 30003                           plusw0	equ	0xFEB
 30004                           fsr0h	equ	0xFEA
 30005                           fsr0l	equ	0xFE9
 30006                           wreg	equ	0xFE8
 30007                           indf1	equ	0xFE7
 30008                           postdec1	equ	0xFE5
 30009                           fsr1h	equ	0xFE2
 30010                           fsr1l	equ	0xFE1
 30011                           indf2	equ	0xFDF
 30012                           postinc2	equ	0xFDE
 30013                           postdec2	equ	0xFDD
 30014                           plusw2	equ	0xFDB
 30015                           fsr2h	equ	0xFDA
 30016                           fsr2l	equ	0xFD9
 30017                           status	equ	0xFD8
 30018                           
 30019 ;; *************** function _SetMemoryChar *****************
 30020 ;; Defined at:
 30021 ;;		line 501 in file "EEPROM.c"
 30022 ;; Parameters:    Size  Location     Type
 30023 ;;  Data            1    wreg     unsigned char 
 30024 ;;  AddressFirst    1   10[BANK0 ] unsigned char 
 30025 ;; Auto vars:     Size  Location     Type
 30026 ;;  Data            1   12[BANK0 ] unsigned char 
 30027 ;;  Test            1   11[BANK0 ] unsigned char 
 30028 ;; Return value:  Size  Location     Type
 30029 ;;                  1    wreg      unsigned char 
 30030 ;; Registers used:
 30031 ;;		wreg, status,2, status,0, cstack
 30032 ;; Tracked objects:
 30033 ;;		On entry : 0/0
 30034 ;;		On exit  : 0/0
 30035 ;;		Unchanged: 0/0
 30036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30037 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30040 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30041 ;;Total ram usage:        3 bytes
 30042 ;; Hardware stack levels used:    1
 30043 ;; Hardware stack levels required when called:    7
 30044 ;; This function calls:
 30045 ;;		_GetMemoryChar
 30046 ;;		_WriteEEPROM_1Byte
 30047 ;; This function is called by:
 30048 ;;		_SetEEPROM1
 30049 ;;		_SetEEPROM2
 30050 ;; This function uses a non-reentrant model
 30051 ;;
 30052                           
 30053                           	psect	text64
 30054  00A9B8                     __ptext64:
 30055                           	opt stack 0
 30056  00A9B8                     _SetMemoryChar:
 30057                           	opt stack 20
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;incstack = 0
 30061                           ;SetMemoryChar@Data stored from wreg
 30062  00A9B8  0100               	movlb	0	; () banked
 30063  00A9BA  6F6C               	movwf	SetMemoryChar@Data& (0+255),b
 30064                           
 30065                           ; BSR set to: 0
 30066                           ;EEPROM.c: 503: unsigned char Test;
 30067                           ;EEPROM.c: 505: WriteEEPROM_1Byte(AddressFirst, Data);
 30068  00A9BC  C06A  F060         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 30069  00A9C0  0100               	movlb	0	; () banked
 30070  00A9C2  6B61               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 30071  00A9C4  C06C  F062         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 30072  00A9C8  EC0F  F053         	call	_WriteEEPROM_1Byte	;wreg free
 30073                           
 30074                           ;EEPROM.c: 508: Test = GetMemoryChar(AddressFirst);
 30075  00A9CC  0100               	movlb	0	; () banked
 30076  00A9CE  516A               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 30077  00A9D0  EC24  F056         	call	_GetMemoryChar
 30078  00A9D4  0100               	movlb	0	; () banked
 30079  00A9D6  5164               	movf	?_GetMemoryChar& (0+255),w,b
 30080  00A9D8  0100               	movlb	0	; () banked
 30081  00A9DA  6F6B               	movwf	SetMemoryChar@Test& (0+255),b
 30082                           
 30083                           ; BSR set to: 0
 30084                           ;EEPROM.c: 510: if(Test == Data)
 30085  00A9DC  0100               	movlb	0	; () banked
 30086  00A9DE  516C               	movf	SetMemoryChar@Data& (0+255),w,b
 30087  00A9E0  0100               	movlb	0	; () banked
 30088  00A9E2  196B               	xorwf	SetMemoryChar@Test& (0+255),w,b
 30089  00A9E4  A4D8               	btfss	status,2,c
 30090  00A9E6  D002               	goto	l10354
 30091                           
 30092                           ; BSR set to: 0
 30093                           ;EEPROM.c: 511: {
 30094                           ;EEPROM.c: 512: return 1;
 30095  00A9E8  0E01               	movlw	1
 30096                           
 30097                           ; BSR set to: 0
 30098  00A9EA  0012               	return	
 30099  00A9EC                     l10354:
 30100                           
 30101                           ; BSR set to: 0
 30102                           ;EEPROM.c: 513: }
 30103                           ;EEPROM.c: 514: return 0;
 30104  00A9EC  0E00               	movlw	0
 30105  00A9EE  0012               	return	
 30106                           
 30107                           ; BSR set to: 0
 30108                           
 30109                           ; BSR set to: 0
 30110  00A9F0  0012               	return		;funcret
 30111  00A9F2                     __end_of_SetMemoryChar:
 30112                           	opt stack 0
 30113                           tblptru	equ	0xFF8
 30114                           tblptrh	equ	0xFF7
 30115                           tblptrl	equ	0xFF6
 30116                           tablat	equ	0xFF5
 30117                           prodh	equ	0xFF4
 30118                           prodl	equ	0xFF3
 30119                           intcon	equ	0xFF2
 30120                           intcon2	equ	0xFF1
 30121                           indf0	equ	0xFEF
 30122                           postinc0	equ	0xFEE
 30123                           plusw0	equ	0xFEB
 30124                           fsr0h	equ	0xFEA
 30125                           fsr0l	equ	0xFE9
 30126                           wreg	equ	0xFE8
 30127                           indf1	equ	0xFE7
 30128                           postdec1	equ	0xFE5
 30129                           fsr1h	equ	0xFE2
 30130                           fsr1l	equ	0xFE1
 30131                           indf2	equ	0xFDF
 30132                           postinc2	equ	0xFDE
 30133                           postdec2	equ	0xFDD
 30134                           plusw2	equ	0xFDB
 30135                           fsr2h	equ	0xFDA
 30136                           fsr2l	equ	0xFD9
 30137                           status	equ	0xFD8
 30138                           
 30139 ;; *************** function _WriteEEPROM_1Byte *****************
 30140 ;; Defined at:
 30141 ;;		line 102 in file "EEPROM.c"
 30142 ;; Parameters:    Size  Location     Type
 30143 ;;  address         2    0[BANK0 ] unsigned int 
 30144 ;;  data            1    2[BANK0 ] unsigned char 
 30145 ;; Auto vars:     Size  Location     Type
 30146 ;;  PEIEstatus      1    4[BANK0 ] unsigned char 
 30147 ;;  GIEstatus       1    3[BANK0 ] unsigned char 
 30148 ;; Return value:  Size  Location     Type
 30149 ;;		None               void
 30150 ;; Registers used:
 30151 ;;		wreg, status,2, status,0, cstack
 30152 ;; Tracked objects:
 30153 ;;		On entry : 0/0
 30154 ;;		On exit  : 0/0
 30155 ;;		Unchanged: 0/0
 30156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30157 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30160 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30161 ;;Total ram usage:        5 bytes
 30162 ;; Hardware stack levels used:    1
 30163 ;; Hardware stack levels required when called:    6
 30164 ;; This function calls:
 30165 ;;		_EEPROM_UNLOCK
 30166 ;; This function is called by:
 30167 ;;		_SetMemoryLong
 30168 ;;		_SetMemoryChar
 30169 ;;		_SetMemoryInt
 30170 ;; This function uses a non-reentrant model
 30171 ;;
 30172                           
 30173                           	psect	text65
 30174  00A61E                     __ptext65:
 30175                           	opt stack 0
 30176  00A61E                     _WriteEEPROM_1Byte:
 30177                           	opt stack 20
 30178                           
 30179                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 30180                           
 30181                           ; BSR set to: 0
 30182                           ;incstack = 0
 30183  00A61E  0E00               	movlw	0
 30184  00A620  BEF2               	btfsc	intcon,7,c	;volatile
 30185  00A622  0E01               	movlw	1
 30186  00A624  0100               	movlb	0	; () banked
 30187  00A626  6F63               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 30188                           
 30189                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 30190  00A628  0E00               	movlw	0
 30191  00A62A  BCF2               	btfsc	intcon,6,c	;volatile
 30192  00A62C  0E01               	movlw	1
 30193  00A62E  0100               	movlb	0	; () banked
 30194  00A630  6F64               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 30195                           
 30196                           ; BSR set to: 0
 30197                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 30198  00A632  9EF2               	bcf	intcon,7,c	;volatile
 30199                           
 30200                           ; BSR set to: 0
 30201                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 30202  00A634  9CF2               	bcf	intcon,6,c	;volatile
 30203                           
 30204                           ; BSR set to: 0
 30205                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 30206  00A636  0100               	movlb	0	; () banked
 30207  00A638  5161               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 30208  00A63A  0B03               	andlw	3
 30209  00A63C  6EAA               	movwf	4010,c	;volatile
 30210                           
 30211                           ; BSR set to: 0
 30212                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 30213  00A63E  C060  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 30214                           
 30215                           ; BSR set to: 0
 30216                           ;EEPROM.c: 110: EEDATA = data;
 30217  00A642  C062  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 30218                           
 30219                           ; BSR set to: 0
 30220                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 30221  00A646  9EA6               	bcf	4006,7,c	;volatile
 30222                           
 30223                           ; BSR set to: 0
 30224                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 30225  00A648  9CA6               	bcf	4006,6,c	;volatile
 30226                           
 30227                           ; BSR set to: 0
 30228                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 30229  00A64A  84A6               	bsf	4006,2,c	;volatile
 30230                           
 30231                           ; BSR set to: 0
 30232                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 30233  00A64C  9EF2               	bcf	intcon,7,c	;volatile
 30234                           
 30235                           ; BSR set to: 0
 30236                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 30237  00A64E  ECC6  F056         	call	_EEPROM_UNLOCK	;wreg free
 30238                           
 30239                           ;EEPROM.c: 116: EECON1bits.WR =1;
 30240  00A652  82A6               	bsf	4006,1,c	;volatile
 30241                           
 30242                           ;EEPROM.c: 117: while(EECON1bits.WR);
 30243  00A654  D000               	goto	l1105
 30244  00A656                     l1105:
 30245  00A656  B2A6               	btfsc	4006,1,c	;volatile
 30246  00A658  D7FE               	goto	l1105
 30247                           
 30248                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 30249  00A65A  94A6               	bcf	4006,2,c	;volatile
 30250                           
 30251                           ;EEPROM.c: 119: if(GIEstatus)
 30252  00A65C  0100               	movlb	0	; () banked
 30253  00A65E  5163               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 30254  00A660  0100               	movlb	0	; () banked
 30255  00A662  B4D8               	btfsc	status,2,c
 30256  00A664  D002               	goto	l9532
 30257                           
 30258                           ; BSR set to: 0
 30259                           ;EEPROM.c: 120: {
 30260                           ;EEPROM.c: 121: INTCONbits.GIE = 1;
 30261  00A666  8EF2               	bsf	intcon,7,c	;volatile
 30262  00A668  D000               	goto	l9532
 30263  00A66A                     l9532:
 30264                           
 30265                           ; BSR set to: 0
 30266                           ;EEPROM.c: 122: }
 30267                           ;EEPROM.c: 123: if(PEIEstatus)
 30268  00A66A  0100               	movlb	0	; () banked
 30269  00A66C  5164               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 30270  00A66E  0100               	movlb	0	; () banked
 30271  00A670  B4D8               	btfsc	status,2,c
 30272  00A672  0012               	return	
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;EEPROM.c: 124: {
 30276                           ;EEPROM.c: 125: INTCONbits.PEIE = 1;
 30277  00A674  8CF2               	bsf	intcon,6,c	;volatile
 30278  00A676  0012               	return	
 30279                           
 30280                           ; BSR set to: 0
 30281                           
 30282                           ; BSR set to: 0
 30283  00A678  0012               	return		;funcret
 30284  00A67A                     __end_of_WriteEEPROM_1Byte:
 30285                           	opt stack 0
 30286                           tblptru	equ	0xFF8
 30287                           tblptrh	equ	0xFF7
 30288                           tblptrl	equ	0xFF6
 30289                           tablat	equ	0xFF5
 30290                           prodh	equ	0xFF4
 30291                           prodl	equ	0xFF3
 30292                           intcon	equ	0xFF2
 30293                           intcon2	equ	0xFF1
 30294                           indf0	equ	0xFEF
 30295                           postinc0	equ	0xFEE
 30296                           plusw0	equ	0xFEB
 30297                           fsr0h	equ	0xFEA
 30298                           fsr0l	equ	0xFE9
 30299                           wreg	equ	0xFE8
 30300                           indf1	equ	0xFE7
 30301                           postdec1	equ	0xFE5
 30302                           fsr1h	equ	0xFE2
 30303                           fsr1l	equ	0xFE1
 30304                           indf2	equ	0xFDF
 30305                           postinc2	equ	0xFDE
 30306                           postdec2	equ	0xFDD
 30307                           plusw2	equ	0xFDB
 30308                           fsr2h	equ	0xFDA
 30309                           fsr2l	equ	0xFD9
 30310                           status	equ	0xFD8
 30311                           
 30312 ;; *************** function _EEPROM_UNLOCK *****************
 30313 ;; Defined at:
 30314 ;;		line 87 in file "EEPROM.c"
 30315 ;; Parameters:    Size  Location     Type
 30316 ;;		None
 30317 ;; Auto vars:     Size  Location     Type
 30318 ;;		None
 30319 ;; Return value:  Size  Location     Type
 30320 ;;		None               void
 30321 ;; Registers used:
 30322 ;;		wreg, status,2
 30323 ;; Tracked objects:
 30324 ;;		On entry : 0/0
 30325 ;;		On exit  : 0/0
 30326 ;;		Unchanged: 0/0
 30327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30332 ;;Total ram usage:        0 bytes
 30333 ;; Hardware stack levels used:    1
 30334 ;; Hardware stack levels required when called:    5
 30335 ;; This function calls:
 30336 ;;		Nothing
 30337 ;; This function is called by:
 30338 ;;		_WriteEEPROM_1Byte
 30339 ;; This function uses a non-reentrant model
 30340 ;;
 30341                           
 30342                           	psect	text66
 30343  00AD8C                     __ptext66:
 30344                           	opt stack 0
 30345  00AD8C                     _EEPROM_UNLOCK:
 30346                           	opt stack 20
 30347                           
 30348                           ;EEPROM.c: 89: EECON2 = 0x55;
 30349                           
 30350                           ; BSR set to: 0
 30351                           ;incstack = 0
 30352  00AD8C  0E55               	movlw	85
 30353  00AD8E  6EA7               	movwf	4007,c	;volatile
 30354                           
 30355                           ;EEPROM.c: 90: EECON2 = 0xAA;
 30356  00AD90  0EAA               	movlw	170
 30357  00AD92  6EA7               	movwf	4007,c	;volatile
 30358                           
 30359                           ;EEPROM.c: 91: EECON1bits.WR =1;
 30360  00AD94  82A6               	bsf	4006,1,c	;volatile
 30361                           
 30362                           ;EEPROM.c: 92: while(EECON1bits.WR);
 30363  00AD96  D000               	goto	l1099
 30364  00AD98                     l1099:
 30365  00AD98  B2A6               	btfsc	4006,1,c	;volatile
 30366  00AD9A  D7FE               	goto	l1099
 30367                           
 30368                           ;EEPROM.c: 93: __nop();
 30369  00AD9C  F000               	nop	
 30370                           
 30371                           ;EEPROM.c: 94: __nop();
 30372  00AD9E  F000               	nop	
 30373  00ADA0  0012               	return		;funcret
 30374  00ADA2                     __end_of_EEPROM_UNLOCK:
 30375                           	opt stack 0
 30376                           tblptru	equ	0xFF8
 30377                           tblptrh	equ	0xFF7
 30378                           tblptrl	equ	0xFF6
 30379                           tablat	equ	0xFF5
 30380                           prodh	equ	0xFF4
 30381                           prodl	equ	0xFF3
 30382                           intcon	equ	0xFF2
 30383                           intcon2	equ	0xFF1
 30384                           indf0	equ	0xFEF
 30385                           postinc0	equ	0xFEE
 30386                           plusw0	equ	0xFEB
 30387                           fsr0h	equ	0xFEA
 30388                           fsr0l	equ	0xFE9
 30389                           wreg	equ	0xFE8
 30390                           indf1	equ	0xFE7
 30391                           postdec1	equ	0xFE5
 30392                           fsr1h	equ	0xFE2
 30393                           fsr1l	equ	0xFE1
 30394                           indf2	equ	0xFDF
 30395                           postinc2	equ	0xFDE
 30396                           postdec2	equ	0xFDD
 30397                           plusw2	equ	0xFDB
 30398                           fsr2h	equ	0xFDA
 30399                           fsr2l	equ	0xFD9
 30400                           status	equ	0xFD8
 30401                           
 30402 ;; *************** function _GetMemoryChar *****************
 30403 ;; Defined at:
 30404 ;;		line 487 in file "EEPROM.c"
 30405 ;; Parameters:    Size  Location     Type
 30406 ;;  AddressFirst    1    wreg     unsigned char 
 30407 ;; Auto vars:     Size  Location     Type
 30408 ;;  AddressFirst    1    8[BANK0 ] unsigned char 
 30409 ;;  H               1    9[BANK0 ] unsigned char 
 30410 ;; Return value:  Size  Location     Type
 30411 ;;                  4    4[BANK0 ] unsigned long 
 30412 ;; Registers used:
 30413 ;;		wreg, status,2, status,0, cstack
 30414 ;; Tracked objects:
 30415 ;;		On entry : 0/0
 30416 ;;		On exit  : 0/0
 30417 ;;		Unchanged: 0/0
 30418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30422 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30423 ;;Total ram usage:        6 bytes
 30424 ;; Hardware stack levels used:    1
 30425 ;; Hardware stack levels required when called:    6
 30426 ;; This function calls:
 30427 ;;		_ReadEEPROM_1Byte
 30428 ;; This function is called by:
 30429 ;;		_GetEEPROM1
 30430 ;;		_GetEEPROM2
 30431 ;;		_SetMemoryChar
 30432 ;; This function uses a non-reentrant model
 30433 ;;
 30434                           
 30435                           	psect	text67
 30436  00AC48                     __ptext67:
 30437                           	opt stack 0
 30438  00AC48                     _GetMemoryChar:
 30439                           	opt stack 20
 30440                           
 30441                           ;incstack = 0
 30442                           ;GetMemoryChar@AddressFirst stored from wreg
 30443  00AC48  0100               	movlb	0	; () banked
 30444  00AC4A  6F68               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 30445                           
 30446                           ; BSR set to: 0
 30447                           ;EEPROM.c: 489: unsigned char H;
 30448                           ;EEPROM.c: 491: H = ReadEEPROM_1Byte(AddressFirst);
 30449  00AC4C  C068  F060         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 30450  00AC50  0100               	movlb	0	; () banked
 30451  00AC52  6B61               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 30452  00AC54  EC6A  F053         	call	_ReadEEPROM_1Byte	;wreg free
 30453  00AC58  0100               	movlb	0	; () banked
 30454  00AC5A  5160               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 30455  00AC5C  0100               	movlb	0	; () banked
 30456  00AC5E  6F69               	movwf	GetMemoryChar@H& (0+255),b
 30457                           
 30458                           ; BSR set to: 0
 30459                           ;EEPROM.c: 493: return H;
 30460  00AC60  0100               	movlb	0	; () banked
 30461  00AC62  5169               	movf	GetMemoryChar@H& (0+255),w,b
 30462  00AC64  0100               	movlb	0	; () banked
 30463  00AC66  6F64               	movwf	?_GetMemoryChar& (0+255),b
 30464  00AC68  6B65               	clrf	(?_GetMemoryChar+1)& (0+255),b
 30465  00AC6A  6B66               	clrf	(?_GetMemoryChar+2)& (0+255),b
 30466  00AC6C  6B67               	clrf	(?_GetMemoryChar+3)& (0+255),b
 30467  00AC6E  0012               	return	
 30468                           
 30469                           ; BSR set to: 0
 30470                           
 30471                           ; BSR set to: 0
 30472  00AC70  0012               	return		;funcret
 30473  00AC72                     __end_of_GetMemoryChar:
 30474                           	opt stack 0
 30475                           tblptru	equ	0xFF8
 30476                           tblptrh	equ	0xFF7
 30477                           tblptrl	equ	0xFF6
 30478                           tablat	equ	0xFF5
 30479                           prodh	equ	0xFF4
 30480                           prodl	equ	0xFF3
 30481                           intcon	equ	0xFF2
 30482                           intcon2	equ	0xFF1
 30483                           indf0	equ	0xFEF
 30484                           postinc0	equ	0xFEE
 30485                           plusw0	equ	0xFEB
 30486                           fsr0h	equ	0xFEA
 30487                           fsr0l	equ	0xFE9
 30488                           wreg	equ	0xFE8
 30489                           indf1	equ	0xFE7
 30490                           postdec1	equ	0xFE5
 30491                           fsr1h	equ	0xFE2
 30492                           fsr1l	equ	0xFE1
 30493                           indf2	equ	0xFDF
 30494                           postinc2	equ	0xFDE
 30495                           postdec2	equ	0xFDD
 30496                           plusw2	equ	0xFDB
 30497                           fsr2h	equ	0xFDA
 30498                           fsr2l	equ	0xFD9
 30499                           status	equ	0xFD8
 30500                           
 30501 ;; *************** function _ReadEEPROM_1Byte *****************
 30502 ;; Defined at:
 30503 ;;		line 55 in file "EEPROM.c"
 30504 ;; Parameters:    Size  Location     Type
 30505 ;;  address         2    0[BANK0 ] unsigned int 
 30506 ;; Auto vars:     Size  Location     Type
 30507 ;;  PEIEstatus      1    3[BANK0 ] unsigned char 
 30508 ;;  GIEstatus       1    2[BANK0 ] unsigned char 
 30509 ;; Return value:  Size  Location     Type
 30510 ;;                  2    0[BANK0 ] unsigned int 
 30511 ;; Registers used:
 30512 ;;		wreg, status,2, status,0
 30513 ;; Tracked objects:
 30514 ;;		On entry : 0/0
 30515 ;;		On exit  : 0/0
 30516 ;;		Unchanged: 0/0
 30517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30521 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30522 ;;Total ram usage:        4 bytes
 30523 ;; Hardware stack levels used:    1
 30524 ;; Hardware stack levels required when called:    5
 30525 ;; This function calls:
 30526 ;;		Nothing
 30527 ;; This function is called by:
 30528 ;;		_GetMemoryLong
 30529 ;;		_GetMemoryChar
 30530 ;;		_GetMemoryInt
 30531 ;; This function uses a non-reentrant model
 30532 ;;
 30533                           
 30534                           	psect	text68
 30535  00A6D4                     __ptext68:
 30536                           	opt stack 0
 30537  00A6D4                     _ReadEEPROM_1Byte:
 30538                           	opt stack 20
 30539                           
 30540                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 30541                           
 30542                           ; BSR set to: 0
 30543                           ;incstack = 0
 30544  00A6D4  0E00               	movlw	0
 30545  00A6D6  BEF2               	btfsc	intcon,7,c	;volatile
 30546  00A6D8  0E01               	movlw	1
 30547  00A6DA  0100               	movlb	0	; () banked
 30548  00A6DC  6F62               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 30549                           
 30550                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 30551  00A6DE  0E00               	movlw	0
 30552  00A6E0  BCF2               	btfsc	intcon,6,c	;volatile
 30553  00A6E2  0E01               	movlw	1
 30554  00A6E4  0100               	movlb	0	; () banked
 30555  00A6E6  6F63               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 30556                           
 30557                           ; BSR set to: 0
 30558                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 30559  00A6E8  9EF2               	bcf	intcon,7,c	;volatile
 30560                           
 30561                           ; BSR set to: 0
 30562                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 30563  00A6EA  9CF2               	bcf	intcon,6,c	;volatile
 30564                           
 30565                           ; BSR set to: 0
 30566                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 30567  00A6EC  9EA6               	bcf	4006,7,c	;volatile
 30568                           
 30569                           ; BSR set to: 0
 30570                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 30571  00A6EE  9CA6               	bcf	4006,6,c	;volatile
 30572                           
 30573                           ; BSR set to: 0
 30574                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 30575  00A6F0  0100               	movlb	0	; () banked
 30576  00A6F2  5161               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 30577  00A6F4  0B03               	andlw	3
 30578  00A6F6  6EAA               	movwf	4010,c	;volatile
 30579                           
 30580                           ; BSR set to: 0
 30581                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 30582  00A6F8  C060  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 30583                           
 30584                           ; BSR set to: 0
 30585                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 30586  00A6FC  9EF2               	bcf	intcon,7,c	;volatile
 30587                           
 30588                           ; BSR set to: 0
 30589                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 30590  00A6FE  80A6               	bsf	4006,0,c	;volatile
 30591                           
 30592                           ;EEPROM.c: 67: while(EECON1bits.RD);
 30593  00A700  D000               	goto	l1091
 30594  00A702                     l1091:
 30595  00A702  B0A6               	btfsc	4006,0,c	;volatile
 30596  00A704  D7FE               	goto	l1091
 30597                           
 30598                           ;EEPROM.c: 68: __nop();
 30599  00A706  F000               	nop	
 30600                           
 30601                           ;EEPROM.c: 69: __nop();
 30602  00A708  F000               	nop	
 30603                           
 30604                           ;EEPROM.c: 70: if(GIEstatus)
 30605  00A70A  0100               	movlb	0	; () banked
 30606  00A70C  5162               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 30607  00A70E  0100               	movlb	0	; () banked
 30608  00A710  B4D8               	btfsc	status,2,c
 30609  00A712  D002               	goto	l9270
 30610                           
 30611                           ; BSR set to: 0
 30612                           ;EEPROM.c: 71: {
 30613                           ;EEPROM.c: 72: INTCONbits.GIE = 1;
 30614  00A714  8EF2               	bsf	intcon,7,c	;volatile
 30615  00A716  D000               	goto	l9270
 30616  00A718                     l9270:
 30617                           
 30618                           ; BSR set to: 0
 30619                           ;EEPROM.c: 73: }
 30620                           ;EEPROM.c: 74: if(PEIEstatus)
 30621  00A718  0100               	movlb	0	; () banked
 30622  00A71A  5163               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 30623  00A71C  0100               	movlb	0	; () banked
 30624  00A71E  A4D8               	btfss	status,2,c
 30625                           
 30626                           ; BSR set to: 0
 30627                           ;EEPROM.c: 75: {
 30628                           ;EEPROM.c: 76: INTCONbits.PEIE = 1;
 30629  00A720  8CF2               	bsf	intcon,6,c	;volatile
 30630                           
 30631                           ; BSR set to: 0
 30632                           ;EEPROM.c: 77: }
 30633                           ;EEPROM.c: 78: return (EEDATA);
 30634  00A722  CFA8 F060          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 30635  00A726  0100               	movlb	0	; () banked
 30636  00A728  6B61               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 30637                           
 30638                           ; BSR set to: 0
 30639  00A72A  0012               	return		;funcret
 30640  00A72C                     __end_of_ReadEEPROM_1Byte:
 30641                           	opt stack 0
 30642                           tblptru	equ	0xFF8
 30643                           tblptrh	equ	0xFF7
 30644                           tblptrl	equ	0xFF6
 30645                           tablat	equ	0xFF5
 30646                           prodh	equ	0xFF4
 30647                           prodl	equ	0xFF3
 30648                           intcon	equ	0xFF2
 30649                           intcon2	equ	0xFF1
 30650                           indf0	equ	0xFEF
 30651                           postinc0	equ	0xFEE
 30652                           plusw0	equ	0xFEB
 30653                           fsr0h	equ	0xFEA
 30654                           fsr0l	equ	0xFE9
 30655                           wreg	equ	0xFE8
 30656                           indf1	equ	0xFE7
 30657                           postdec1	equ	0xFE5
 30658                           fsr1h	equ	0xFE2
 30659                           fsr1l	equ	0xFE1
 30660                           indf2	equ	0xFDF
 30661                           postinc2	equ	0xFDE
 30662                           postdec2	equ	0xFDD
 30663                           plusw2	equ	0xFDB
 30664                           fsr2h	equ	0xFDA
 30665                           fsr2l	equ	0xFD9
 30666                           status	equ	0xFD8
 30667                           
 30668 ;; *************** function _BluetoothInitialSetup *****************
 30669 ;; Defined at:
 30670 ;;		line 185 in file "Bluetooth.c"
 30671 ;; Parameters:    Size  Location     Type
 30672 ;;  Default         1    wreg     unsigned char 
 30673 ;; Auto vars:     Size  Location     Type
 30674 ;;  Default         1  183[BANK1 ] unsigned char 
 30675 ;;  buf            50  132[BANK1 ] unsigned char [50]
 30676 ;;  BluetoothVer   30   81[BANK1 ] unsigned char [30]
 30677 ;;  BluetoothVer   30   51[BANK1 ] unsigned char [30]
 30678 ;;  BroadcastTEM   21  111[BANK1 ] unsigned char [21]
 30679 ;;  i               1  186[BANK1 ] unsigned char 
 30680 ;;  ok              1  185[BANK1 ] unsigned char 
 30681 ;;  j               1  184[BANK1 ] unsigned char 
 30682 ;;  first           1  182[BANK1 ] unsigned char 
 30683 ;; Return value:  Size  Location     Type
 30684 ;;                  1    wreg      unsigned char 
 30685 ;; Registers used:
 30686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30687 ;; Tracked objects:
 30688 ;;		On entry : 0/0
 30689 ;;		On exit  : 0/0
 30690 ;;		Unchanged: 0/0
 30691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30693 ;;      Locals:         0       0     136       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30695 ;;      Totals:         0       1     136       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30696 ;;Total ram usage:      137 bytes
 30697 ;; Hardware stack levels used:    1
 30698 ;; Hardware stack levels required when called:   10
 30699 ;; This function calls:
 30700 ;;		_BufferCopy
 30701 ;;		_ClearUSART
 30702 ;;		_EnterCommandMode
 30703 ;;		_StringContains
 30704 ;;		_StringContainsCaseInsensitive
 30705 ;;		_UARTstring
 30706 ;;		_UARTstring_CONST
 30707 ;;		_cleanBuffer
 30708 ;;		_delayUS
 30709 ;;		_sprintf
 30710 ;; This function is called by:
 30711 ;;		_InitBluetooth
 30712 ;;		_UseBluetooth
 30713 ;; This function uses a non-reentrant model
 30714 ;;
 30715                           
 30716                           	psect	text69
 30717  00483C                     __ptext69:
 30718                           	opt stack 0
 30719  00483C                     _BluetoothInitialSetup:
 30720                           	opt stack 19
 30721                           
 30722                           ; BSR set to: 0
 30723                           ;incstack = 0
 30724                           ;BluetoothInitialSetup@Default stored from wreg
 30725  00483C  0101               	movlb	1	; () banked
 30726  00483E  6FB7               	movwf	BluetoothInitialSetup@Default& (0+255),b
 30727                           
 30728                           ; BSR set to: 1
 30729                           ;Bluetooth.c: 187: unsigned char buf[50];
 30730                           ;Bluetooth.c: 188: unsigned char ok = 1;
 30731  004840  0E01               	movlw	1
 30732  004842  0101               	movlb	1	; () banked
 30733  004844  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 30734                           
 30735                           ;Bluetooth.c: 189: unsigned char BluetoothVersionLine1[30];
 30736                           ;Bluetooth.c: 190: unsigned char BluetoothVersionLine2[30];
 30737                           ;Bluetooth.c: 191: unsigned char i = 0;
 30738  004846  0E00               	movlw	0
 30739  004848  0101               	movlb	1	; () banked
 30740  00484A  6FBA               	movwf	BluetoothInitialSetup@i& (0+255),b
 30741                           
 30742                           ;Bluetooth.c: 192: unsigned char j = 0;
 30743  00484C  0E00               	movlw	0
 30744  00484E  0101               	movlb	1	; () banked
 30745  004850  6FB8               	movwf	BluetoothInitialSetup@j& (0+255),b
 30746                           
 30747                           ;Bluetooth.c: 193: unsigned char first = 1;
 30748  004852  0E01               	movlw	1
 30749  004854  0101               	movlb	1	; () banked
 30750  004856  6FB6               	movwf	BluetoothInitialSetup@first& (0+255),b
 30751                           
 30752                           ; BSR set to: 1
 30753                           ;Bluetooth.c: 194: unsigned char BroadcastTEMP[21];
 30754                           ;Bluetooth.c: 196: cleanBuffer(buf,50);
 30755  004858  0E84               	movlw	low BluetoothInitialSetup@buf
 30756  00485A  0100               	movlb	0	; () banked
 30757  00485C  6F60               	movwf	cleanBuffer@data& (0+255),b
 30758  00485E  0E01               	movlw	high BluetoothInitialSetup@buf
 30759  004860  0100               	movlb	0	; () banked
 30760  004862  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30761  004864  0E00               	movlw	0
 30762  004866  0100               	movlb	0	; () banked
 30763  004868  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 30764  00486A  0E32               	movlw	50
 30765  00486C  6F62               	movwf	cleanBuffer@count& (0+255),b
 30766  00486E  EC3D  F053         	call	_cleanBuffer	;wreg free
 30767                           
 30768                           ;Bluetooth.c: 197: cleanBuffer(BroadcastTEMP,21);
 30769  004872  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 30770  004874  0100               	movlb	0	; () banked
 30771  004876  6F60               	movwf	cleanBuffer@data& (0+255),b
 30772  004878  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 30773  00487A  0100               	movlb	0	; () banked
 30774  00487C  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30775  00487E  0E00               	movlw	0
 30776  004880  0100               	movlb	0	; () banked
 30777  004882  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 30778  004884  0E15               	movlw	21
 30779  004886  6F62               	movwf	cleanBuffer@count& (0+255),b
 30780  004888  EC3D  F053         	call	_cleanBuffer	;wreg free
 30781                           
 30782                           ;Bluetooth.c: 198: cleanBuffer(BluetoothVersionLine1,30);
 30783  00488C  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 30784  00488E  0100               	movlb	0	; () banked
 30785  004890  6F60               	movwf	cleanBuffer@data& (0+255),b
 30786  004892  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 30787  004894  0100               	movlb	0	; () banked
 30788  004896  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30789  004898  0E00               	movlw	0
 30790  00489A  0100               	movlb	0	; () banked
 30791  00489C  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 30792  00489E  0E1E               	movlw	30
 30793  0048A0  6F62               	movwf	cleanBuffer@count& (0+255),b
 30794  0048A2  EC3D  F053         	call	_cleanBuffer	;wreg free
 30795                           
 30796                           ;Bluetooth.c: 199: cleanBuffer(BluetoothVersionLine2,30);
 30797  0048A6  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 30798  0048A8  0100               	movlb	0	; () banked
 30799  0048AA  6F60               	movwf	cleanBuffer@data& (0+255),b
 30800  0048AC  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 30801  0048AE  0100               	movlb	0	; () banked
 30802  0048B0  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30803  0048B2  0E00               	movlw	0
 30804  0048B4  0100               	movlb	0	; () banked
 30805  0048B6  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 30806  0048B8  0E1E               	movlw	30
 30807  0048BA  6F62               	movwf	cleanBuffer@count& (0+255),b
 30808  0048BC  EC3D  F053         	call	_cleanBuffer	;wreg free
 30809                           
 30810                           ;Bluetooth.c: 201: if(!EnterCommandMode())
 30811  0048C0  EC10  F042         	call	_EnterCommandMode	;wreg free
 30812  0048C4  0900               	iorlw	0
 30813  0048C6  A4D8               	btfss	status,2,c
 30814  0048C8  D002               	goto	l11114
 30815                           
 30816                           ;Bluetooth.c: 202: {
 30817                           ;Bluetooth.c: 203: return 0;
 30818  0048CA  0E00               	movlw	0
 30819  0048CC  0012               	return	
 30820  0048CE                     l11114:
 30821                           
 30822                           ;Bluetooth.c: 204: }
 30823                           ;Bluetooth.c: 206: cleanBuffer(CommandString,CommandStringPos);
 30824  0048CE  0E00               	movlw	low _CommandString
 30825  0048D0  0100               	movlb	0	; () banked
 30826  0048D2  6F60               	movwf	cleanBuffer@data& (0+255),b
 30827  0048D4  0E04               	movlw	high _CommandString
 30828  0048D6  0100               	movlb	0	; () banked
 30829  0048D8  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 30830  0048DA  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30831  0048DE  0100               	movlb	0	; () banked
 30832  0048E0  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 30833  0048E2  EC3D  F053         	call	_cleanBuffer	;wreg free
 30834                           
 30835                           ;Bluetooth.c: 207: CommandStringPos = 0;
 30836  0048E6  0E00               	movlw	0
 30837  0048E8  6E3E               	movwf	_CommandStringPos,c	;volatile
 30838                           
 30839                           ;Bluetooth.c: 208: ClearUSART();
 30840  0048EA  EC18  F057         	call	_ClearUSART	;wreg free
 30841                           
 30842                           ;Bluetooth.c: 209: PIR1bits.RCIF = 0;
 30843  0048EE  9A9E               	bcf	3998,5,c	;volatile
 30844                           
 30845                           ;Bluetooth.c: 210: PIE1bits.RCIE = 1;
 30846  0048F0  8A9D               	bsf	3997,5,c	;volatile
 30847                           
 30848                           ;Bluetooth.c: 211: UARTstring_CONST("V\r");
 30849  0048F2  0EFC               	movlw	low STR_8
 30850  0048F4  0100               	movlb	0	; () banked
 30851  0048F6  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 30852  0048F8  0EFF               	movlw	high STR_8
 30853  0048FA  0100               	movlb	0	; () banked
 30854  0048FC  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 30855  0048FE  EC98  F055         	call	_UARTstring_CONST	;wreg free
 30856                           
 30857                           ;Bluetooth.c: 212: delayUS(50000);
 30858  004902  0E50               	movlw	80
 30859  004904  0100               	movlb	0	; () banked
 30860  004906  6F60               	movwf	delayUS@US& (0+255),b
 30861  004908  0EC3               	movlw	195
 30862  00490A  6F61               	movwf	(delayUS@US+1)& (0+255),b
 30863  00490C  0E00               	movlw	0
 30864  00490E  6F62               	movwf	(delayUS@US+2)& (0+255),b
 30865  004910  0E00               	movlw	0
 30866  004912  6F63               	movwf	(delayUS@US+3)& (0+255),b
 30867  004914  EC96  F053         	call	_delayUS	;wreg free
 30868                           
 30869                           ;Bluetooth.c: 213: PIE1bits.RCIE = 0;
 30870  004918  9A9D               	bcf	3997,5,c	;volatile
 30871                           
 30872                           ;Bluetooth.c: 214: for(i=0; i < (30 * 2); i++)
 30873  00491A  0E00               	movlw	0
 30874  00491C  0101               	movlb	1	; () banked
 30875  00491E  6FBA               	movwf	BluetoothInitialSetup@i& (0+255),b
 30876  004920                     l11132:
 30877                           
 30878                           ; BSR set to: 1
 30879  004920  0E3B               	movlw	59
 30880  004922  0101               	movlb	1	; () banked
 30881  004924  65BA               	cpfsgt	BluetoothInitialSetup@i& (0+255),b
 30882  004926  D001               	goto	l11136
 30883                           
 30884                           ; BSR set to: 1
 30885  004928  D07A               	goto	l11166
 30886  00492A                     l11136:
 30887                           
 30888                           ; BSR set to: 1
 30889                           ;Bluetooth.c: 215: {
 30890                           ;Bluetooth.c: 216: if(first == 1)
 30891  00492A  0101               	movlb	1	; () banked
 30892  00492C  05B6               	decf	BluetoothInitialSetup@first& (0+255),w,b
 30893  00492E  A4D8               	btfss	status,2,c
 30894  004930  D037               	goto	l11148
 30895                           
 30896                           ; BSR set to: 1
 30897                           ;Bluetooth.c: 217: {
 30898                           ;Bluetooth.c: 218: if(CommandString[i] == '\n' || CommandString[i] == '\r')
 30899  004932  0101               	movlb	1	; () banked
 30900  004934  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 30901  004936  0D01               	mullw	1
 30902  004938  0E00               	movlw	low _CommandString
 30903  00493A  24F3               	addwf	prodl,w,c
 30904  00493C  6ED9               	movwf	fsr2l,c
 30905  00493E  0E04               	movlw	high _CommandString
 30906  004940  20F4               	addwfc	prodh,w,c
 30907  004942  6EDA               	movwf	fsr2h,c
 30908  004944  0E0A               	movlw	10
 30909  004946  18DE               	xorwf	postinc2,w,c
 30910  004948  B4D8               	btfsc	status,2,c
 30911  00494A  D00D               	goto	l11142
 30912                           
 30913                           ; BSR set to: 1
 30914  00494C  0101               	movlb	1	; () banked
 30915  00494E  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 30916  004950  0D01               	mullw	1
 30917  004952  0E00               	movlw	low _CommandString
 30918  004954  24F3               	addwf	prodl,w,c
 30919  004956  6ED9               	movwf	fsr2l,c
 30920  004958  0E04               	movlw	high _CommandString
 30921  00495A  20F4               	addwfc	prodh,w,c
 30922  00495C  6EDA               	movwf	fsr2h,c
 30923  00495E  0E0D               	movlw	13
 30924  004960  18DE               	xorwf	postinc2,w,c
 30925  004962  A4D8               	btfss	status,2,c
 30926  004964  D004               	goto	l11144
 30927  004966                     l11142:
 30928                           
 30929                           ; BSR set to: 1
 30930                           ;Bluetooth.c: 219: {
 30931                           ;Bluetooth.c: 220: first = 0;
 30932  004966  0E00               	movlw	0
 30933  004968  0101               	movlb	1	; () banked
 30934  00496A  6FB6               	movwf	BluetoothInitialSetup@first& (0+255),b
 30935                           
 30936                           ;Bluetooth.c: 221: }
 30937  00496C  D055               	goto	l11162
 30938  00496E                     l11144:
 30939                           
 30940                           ; BSR set to: 1
 30941                           ;Bluetooth.c: 222: else
 30942                           ;Bluetooth.c: 223: {
 30943                           ;Bluetooth.c: 224: if( i < (30 - 1))
 30944  00496E  0E1D               	movlw	29
 30945  004970  0101               	movlb	1	; () banked
 30946  004972  61BA               	cpfslt	BluetoothInitialSetup@i& (0+255),b
 30947  004974  D051               	goto	l11162
 30948                           
 30949                           ; BSR set to: 1
 30950                           ;Bluetooth.c: 225: {
 30951                           ;Bluetooth.c: 226: BluetoothVersionLine1[i] = CommandString[i];
 30952  004976  0101               	movlb	1	; () banked
 30953  004978  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 30954  00497A  0D01               	mullw	1
 30955  00497C  0E00               	movlw	low _CommandString
 30956  00497E  24F3               	addwf	prodl,w,c
 30957  004980  6ED9               	movwf	fsr2l,c
 30958  004982  0E04               	movlw	high _CommandString
 30959  004984  20F4               	addwfc	prodh,w,c
 30960  004986  6EDA               	movwf	fsr2h,c
 30961  004988  0101               	movlb	1	; () banked
 30962  00498A  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 30963  00498C  0D01               	mullw	1
 30964  00498E  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 30965  004990  24F3               	addwf	prodl,w,c
 30966  004992  6EE1               	movwf	fsr1l,c
 30967  004994  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 30968  004996  20F4               	addwfc	prodh,w,c
 30969  004998  6EE2               	movwf	fsr1h,c
 30970  00499A  CFDF FFE7          	movff	indf2,indf1
 30971                           
 30972                           ; BSR set to: 1
 30973                           ;Bluetooth.c: 227: }
 30974                           ;Bluetooth.c: 228: }
 30975                           ;Bluetooth.c: 229: }
 30976                           
 30977                           ; BSR set to: 1
 30978  00499E  D03C               	goto	l11162
 30979  0049A0                     l11148:
 30980                           
 30981                           ; BSR set to: 1
 30982                           ;Bluetooth.c: 230: else
 30983                           ;Bluetooth.c: 231: {
 30984                           ;Bluetooth.c: 232: if(CommandString[i] != '\n' && CommandString[i] != '\r')
 30985  0049A0  0101               	movlb	1	; () banked
 30986  0049A2  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 30987  0049A4  0D01               	mullw	1
 30988  0049A6  0E00               	movlw	low _CommandString
 30989  0049A8  24F3               	addwf	prodl,w,c
 30990  0049AA  6ED9               	movwf	fsr2l,c
 30991  0049AC  0E04               	movlw	high _CommandString
 30992  0049AE  20F4               	addwfc	prodh,w,c
 30993  0049B0  6EDA               	movwf	fsr2h,c
 30994  0049B2  0E0A               	movlw	10
 30995  0049B4  18DE               	xorwf	postinc2,w,c
 30996  0049B6  B4D8               	btfsc	status,2,c
 30997  0049B8  D029               	goto	l11158
 30998                           
 30999                           ; BSR set to: 1
 31000  0049BA  0101               	movlb	1	; () banked
 31001  0049BC  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 31002  0049BE  0D01               	mullw	1
 31003  0049C0  0E00               	movlw	low _CommandString
 31004  0049C2  24F3               	addwf	prodl,w,c
 31005  0049C4  6ED9               	movwf	fsr2l,c
 31006  0049C6  0E04               	movlw	high _CommandString
 31007  0049C8  20F4               	addwfc	prodh,w,c
 31008  0049CA  6EDA               	movwf	fsr2h,c
 31009  0049CC  0E0D               	movlw	13
 31010  0049CE  18DE               	xorwf	postinc2,w,c
 31011  0049D0  B4D8               	btfsc	status,2,c
 31012  0049D2  D01C               	goto	l11158
 31013                           
 31014                           ; BSR set to: 1
 31015                           ;Bluetooth.c: 233: {
 31016                           ;Bluetooth.c: 234: if( j < (30 - 1))
 31017  0049D4  0E1D               	movlw	29
 31018  0049D6  0101               	movlb	1	; () banked
 31019  0049D8  61B8               	cpfslt	BluetoothInitialSetup@j& (0+255),b
 31020  0049DA  D015               	goto	l11156
 31021                           
 31022                           ; BSR set to: 1
 31023                           ;Bluetooth.c: 235: {
 31024                           ;Bluetooth.c: 236: BluetoothVersionLine2[j] = CommandString[i];
 31025  0049DC  0101               	movlb	1	; () banked
 31026  0049DE  51BA               	movf	BluetoothInitialSetup@i& (0+255),w,b
 31027  0049E0  0D01               	mullw	1
 31028  0049E2  0E00               	movlw	low _CommandString
 31029  0049E4  24F3               	addwf	prodl,w,c
 31030  0049E6  6ED9               	movwf	fsr2l,c
 31031  0049E8  0E04               	movlw	high _CommandString
 31032  0049EA  20F4               	addwfc	prodh,w,c
 31033  0049EC  6EDA               	movwf	fsr2h,c
 31034  0049EE  0101               	movlb	1	; () banked
 31035  0049F0  51B8               	movf	BluetoothInitialSetup@j& (0+255),w,b
 31036  0049F2  0D01               	mullw	1
 31037  0049F4  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 31038  0049F6  24F3               	addwf	prodl,w,c
 31039  0049F8  6EE1               	movwf	fsr1l,c
 31040  0049FA  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 31041  0049FC  20F4               	addwfc	prodh,w,c
 31042  0049FE  6EE2               	movwf	fsr1h,c
 31043  004A00  CFDF FFE7          	movff	indf2,indf1
 31044  004A04  D000               	goto	l11156
 31045  004A06                     l11156:
 31046                           
 31047                           ; BSR set to: 1
 31048                           ;Bluetooth.c: 237: }
 31049                           ;Bluetooth.c: 238: j++;
 31050  004A06  0101               	movlb	1	; () banked
 31051  004A08  2BB8               	incf	BluetoothInitialSetup@j& (0+255),f,b
 31052                           
 31053                           ;Bluetooth.c: 239: }
 31054  004A0A  D006               	goto	l11162
 31055  004A0C                     l11158:
 31056                           
 31057                           ; BSR set to: 1
 31058                           ;Bluetooth.c: 240: else
 31059                           ;Bluetooth.c: 241: {
 31060                           ;Bluetooth.c: 242: if(j > 2)
 31061  004A0C  0E02               	movlw	2
 31062  004A0E  0101               	movlb	1	; () banked
 31063  004A10  65B8               	cpfsgt	BluetoothInitialSetup@j& (0+255),b
 31064  004A12  D002               	goto	l11162
 31065                           
 31066                           ; BSR set to: 1
 31067                           ;Bluetooth.c: 243: {
 31068                           ;Bluetooth.c: 245: break;
 31069  004A14  D004               	goto	l11166
 31070                           
 31071                           ; BSR set to: 1
 31072                           
 31073                           ; BSR set to: 1
 31074  004A16  D000               	goto	l11162
 31075  004A18                     l11162:
 31076                           
 31077                           ; BSR set to: 1
 31078  004A18  0101               	movlb	1	; () banked
 31079  004A1A  2BBA               	incf	BluetoothInitialSetup@i& (0+255),f,b
 31080  004A1C  D781               	goto	l11132
 31081  004A1E                     l11166:
 31082                           
 31083                           ; BSR set to: 1
 31084                           ;Bluetooth.c: 246: }
 31085                           ;Bluetooth.c: 247: }
 31086                           ;Bluetooth.c: 248: }
 31087                           ;Bluetooth.c: 249: }
 31088                           ;Bluetooth.c: 251: if(BluetoothVersionLine1[0] == 0 || BluetoothVersionLine2[0] == 0)
 31089  004A1E  0101               	movlb	1	; () banked
 31090  004A20  5133               	movf	BluetoothInitialSetup@BluetoothVersionLine1& (0+255),w,b
 31091  004A22  0101               	movlb	1	; () banked
 31092  004A24  B4D8               	btfsc	status,2,c
 31093  004A26  D005               	goto	l11170
 31094                           
 31095                           ; BSR set to: 1
 31096  004A28  0101               	movlb	1	; () banked
 31097  004A2A  5151               	movf	BluetoothInitialSetup@BluetoothVersionLine2& (0+255),w,b
 31098  004A2C  0101               	movlb	1	; () banked
 31099  004A2E  A4D8               	btfss	status,2,c
 31100  004A30  D004               	goto	l11172
 31101  004A32                     l11170:
 31102                           
 31103                           ; BSR set to: 1
 31104                           ;Bluetooth.c: 252: {
 31105                           ;Bluetooth.c: 253: ok = 0;
 31106  004A32  0E00               	movlw	0
 31107  004A34  0101               	movlb	1	; () banked
 31108  004A36  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31109                           
 31110                           ;Bluetooth.c: 254: }
 31111  004A38  D042               	goto	l2082
 31112  004A3A                     l11172:
 31113                           
 31114                           ; BSR set to: 1
 31115                           ;Bluetooth.c: 255: else
 31116                           ;Bluetooth.c: 256: {
 31117                           ;Bluetooth.c: 257: cleanBuffer(BluetoothFirmware1,30);
 31118  004A3A  0EC8               	movlw	low _BluetoothFirmware1
 31119  004A3C  0100               	movlb	0	; () banked
 31120  004A3E  6F60               	movwf	cleanBuffer@data& (0+255),b
 31121  004A40  0E04               	movlw	high _BluetoothFirmware1
 31122  004A42  0100               	movlb	0	; () banked
 31123  004A44  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31124  004A46  0E00               	movlw	0
 31125  004A48  0100               	movlb	0	; () banked
 31126  004A4A  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 31127  004A4C  0E1E               	movlw	30
 31128  004A4E  6F62               	movwf	cleanBuffer@count& (0+255),b
 31129  004A50  EC3D  F053         	call	_cleanBuffer	;wreg free
 31130                           
 31131                           ;Bluetooth.c: 258: cleanBuffer(BluetoothFirmware2,30);
 31132  004A54  0E32               	movlw	low _BluetoothFirmware2
 31133  004A56  0100               	movlb	0	; () banked
 31134  004A58  6F60               	movwf	cleanBuffer@data& (0+255),b
 31135  004A5A  0E05               	movlw	high _BluetoothFirmware2
 31136  004A5C  0100               	movlb	0	; () banked
 31137  004A5E  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31138  004A60  0E00               	movlw	0
 31139  004A62  0100               	movlb	0	; () banked
 31140  004A64  6F63               	movwf	(cleanBuffer@count+1)& (0+255),b
 31141  004A66  0E1E               	movlw	30
 31142  004A68  6F62               	movwf	cleanBuffer@count& (0+255),b
 31143  004A6A  EC3D  F053         	call	_cleanBuffer	;wreg free
 31144                           
 31145                           ;Bluetooth.c: 259: BufferCopy(BluetoothVersionLine1, BluetoothFirmware1, 30, 0);
 31146  004A6E  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 31147  004A70  0100               	movlb	0	; () banked
 31148  004A72  6F68               	movwf	BufferCopy@from& (0+255),b
 31149  004A74  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 31150  004A76  0100               	movlb	0	; () banked
 31151  004A78  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 31152  004A7A  0EC8               	movlw	low _BluetoothFirmware1
 31153  004A7C  0100               	movlb	0	; () banked
 31154  004A7E  6F6A               	movwf	BufferCopy@to& (0+255),b
 31155  004A80  0E04               	movlw	high _BluetoothFirmware1
 31156  004A82  0100               	movlb	0	; () banked
 31157  004A84  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 31158  004A86  0E1E               	movlw	30
 31159  004A88  0100               	movlb	0	; () banked
 31160  004A8A  6F6C               	movwf	BufferCopy@count& (0+255),b
 31161  004A8C  0E00               	movlw	0
 31162  004A8E  0100               	movlb	0	; () banked
 31163  004A90  6F6D               	movwf	BufferCopy@shift& (0+255),b
 31164  004A92  EC36  F051         	call	_BufferCopy	;wreg free
 31165                           
 31166                           ;Bluetooth.c: 260: BufferCopy(BluetoothVersionLine2, BluetoothFirmware2, 30, 0);
 31167  004A96  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 31168  004A98  0100               	movlb	0	; () banked
 31169  004A9A  6F68               	movwf	BufferCopy@from& (0+255),b
 31170  004A9C  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 31171  004A9E  0100               	movlb	0	; () banked
 31172  004AA0  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 31173  004AA2  0E32               	movlw	low _BluetoothFirmware2
 31174  004AA4  0100               	movlb	0	; () banked
 31175  004AA6  6F6A               	movwf	BufferCopy@to& (0+255),b
 31176  004AA8  0E05               	movlw	high _BluetoothFirmware2
 31177  004AAA  0100               	movlb	0	; () banked
 31178  004AAC  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 31179  004AAE  0E1E               	movlw	30
 31180  004AB0  0100               	movlb	0	; () banked
 31181  004AB2  6F6C               	movwf	BufferCopy@count& (0+255),b
 31182  004AB4  0E00               	movlw	0
 31183  004AB6  0100               	movlb	0	; () banked
 31184  004AB8  6F6D               	movwf	BufferCopy@shift& (0+255),b
 31185  004ABA  EC36  F051         	call	_BufferCopy	;wreg free
 31186  004ABE                     l2082:
 31187                           
 31188                           ;Bluetooth.c: 261: }
 31189                           ;Bluetooth.c: 262: cleanBuffer(CommandString,CommandStringPos);
 31190  004ABE  0E00               	movlw	low _CommandString
 31191  004AC0  0100               	movlb	0	; () banked
 31192  004AC2  6F60               	movwf	cleanBuffer@data& (0+255),b
 31193  004AC4  0E04               	movlw	high _CommandString
 31194  004AC6  0100               	movlb	0	; () banked
 31195  004AC8  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31196  004ACA  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31197  004ACE  0100               	movlb	0	; () banked
 31198  004AD0  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31199  004AD2  EC3D  F053         	call	_cleanBuffer	;wreg free
 31200                           
 31201                           ;Bluetooth.c: 263: CommandStringPos = 0;
 31202  004AD6  0E00               	movlw	0
 31203  004AD8  6E3E               	movwf	_CommandStringPos,c	;volatile
 31204                           
 31205                           ;Bluetooth.c: 265: if(Default)
 31206  004ADA  0101               	movlb	1	; () banked
 31207  004ADC  51B7               	movf	BluetoothInitialSetup@Default& (0+255),w,b
 31208  004ADE  0101               	movlb	1	; () banked
 31209  004AE0  B4D8               	btfsc	status,2,c
 31210  004AE2  D056               	goto	l11204
 31211                           
 31212                           ; BSR set to: 1
 31213                           ;Bluetooth.c: 266: {
 31214                           ;Bluetooth.c: 267: if(ok)
 31215  004AE4  0101               	movlb	1	; () banked
 31216  004AE6  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31217  004AE8  0101               	movlb	1	; () banked
 31218  004AEA  B4D8               	btfsc	status,2,c
 31219  004AEC  D0BC               	goto	l11232
 31220                           
 31221                           ; BSR set to: 1
 31222                           ;Bluetooth.c: 268: {
 31223                           ;Bluetooth.c: 269: sprintf(buf,"SN,Home Automation %lu\r",Global2.SerialNumber);
 31224  004AEE  0E84               	movlw	low BluetoothInitialSetup@buf
 31225  004AF0  0100               	movlb	0	; () banked
 31226  004AF2  6FAE               	movwf	sprintf@sp& (0+255),b
 31227  004AF4  0E01               	movlw	high BluetoothInitialSetup@buf
 31228  004AF6  0100               	movlb	0	; () banked
 31229  004AF8  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31230  004AFA  0E1B               	movlw	low STR_9
 31231  004AFC  0100               	movlb	0	; () banked
 31232  004AFE  6FB0               	movwf	sprintf@f& (0+255),b
 31233  004B00  0EFB               	movlw	high STR_9
 31234  004B02  0100               	movlb	0	; () banked
 31235  004B04  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31236  004B06  C2CE  F0B2         	movff	_Global2+48,?_sprintf+4
 31237  004B0A  C2CF  F0B3         	movff	_Global2+49,?_sprintf+5
 31238  004B0E  C2D0  F0B4         	movff	_Global2+50,?_sprintf+6
 31239  004B12  C2D1  F0B5         	movff	_Global2+51,?_sprintf+7
 31240  004B16  EC22  F016         	call	_sprintf	;wreg free
 31241                           
 31242                           ;Bluetooth.c: 270: ClearUSART();
 31243  004B1A  EC18  F057         	call	_ClearUSART	;wreg free
 31244                           
 31245                           ;Bluetooth.c: 271: PIR1bits.RCIF = 0;
 31246  004B1E  9A9E               	bcf	3998,5,c	;volatile
 31247                           
 31248                           ;Bluetooth.c: 272: PIE1bits.RCIE = 1;
 31249  004B20  8A9D               	bsf	3997,5,c	;volatile
 31250                           
 31251                           ;Bluetooth.c: 273: UARTstring(buf);
 31252  004B22  0E84               	movlw	low BluetoothInitialSetup@buf
 31253  004B24  0100               	movlb	0	; () banked
 31254  004B26  6F61               	movwf	UARTstring@data& (0+255),b
 31255  004B28  0E01               	movlw	high BluetoothInitialSetup@buf
 31256  004B2A  0100               	movlb	0	; () banked
 31257  004B2C  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 31258  004B2E  EC39  F056         	call	_UARTstring	;wreg free
 31259                           
 31260                           ;Bluetooth.c: 274: delayUS(50000);
 31261  004B32  0E50               	movlw	80
 31262  004B34  0100               	movlb	0	; () banked
 31263  004B36  6F60               	movwf	delayUS@US& (0+255),b
 31264  004B38  0EC3               	movlw	195
 31265  004B3A  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31266  004B3C  0E00               	movlw	0
 31267  004B3E  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31268  004B40  0E00               	movlw	0
 31269  004B42  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31270  004B44  EC96  F053         	call	_delayUS	;wreg free
 31271                           
 31272                           ;Bluetooth.c: 275: PIE1bits.RCIE = 0;
 31273  004B48  9A9D               	bcf	3997,5,c	;volatile
 31274                           
 31275                           ;Bluetooth.c: 276: sprintf(buf,"AOK");
 31276  004B4A  0E84               	movlw	low BluetoothInitialSetup@buf
 31277  004B4C  0100               	movlb	0	; () banked
 31278  004B4E  6FAE               	movwf	sprintf@sp& (0+255),b
 31279  004B50  0E01               	movlw	high BluetoothInitialSetup@buf
 31280  004B52  0100               	movlb	0	; () banked
 31281  004B54  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31282  004B56  0EF5               	movlw	low STR_10
 31283  004B58  0100               	movlb	0	; () banked
 31284  004B5A  6FB0               	movwf	sprintf@f& (0+255),b
 31285  004B5C  0EFF               	movlw	high STR_10
 31286  004B5E  0100               	movlb	0	; () banked
 31287  004B60  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31288  004B62  EC22  F016         	call	_sprintf	;wreg free
 31289                           
 31290                           ;Bluetooth.c: 277: if(!StringContains(CommandString,buf))
 31291  004B66  0E00               	movlw	low _CommandString
 31292  004B68  0100               	movlb	0	; () banked
 31293  004B6A  6F60               	movwf	StringContains@This& (0+255),b
 31294  004B6C  0E04               	movlw	high _CommandString
 31295  004B6E  0100               	movlb	0	; () banked
 31296  004B70  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31297  004B72  0E84               	movlw	low BluetoothInitialSetup@buf
 31298  004B74  0100               	movlb	0	; () banked
 31299  004B76  6F62               	movwf	StringContains@That& (0+255),b
 31300  004B78  0E01               	movlw	high BluetoothInitialSetup@buf
 31301  004B7A  0100               	movlb	0	; () banked
 31302  004B7C  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31303  004B7E  ECB7  F044         	call	_StringContains	;wreg free
 31304  004B82  0900               	iorlw	0
 31305  004B84  A4D8               	btfss	status,2,c
 31306  004B86  D06F               	goto	l11232
 31307                           
 31308                           ;Bluetooth.c: 278: {
 31309                           ;Bluetooth.c: 279: ok = 0;
 31310  004B88  0E00               	movlw	0
 31311  004B8A  0101               	movlb	1	; () banked
 31312  004B8C  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31313                           
 31314                           ; BSR set to: 1
 31315                           ;Bluetooth.c: 280: }
 31316                           ;Bluetooth.c: 281: }
 31317                           ;Bluetooth.c: 282: }
 31318                           
 31319                           ; BSR set to: 1
 31320  004B8E  D06B               	goto	l11232
 31321  004B90                     l11204:
 31322                           
 31323                           ; BSR set to: 1
 31324                           ;Bluetooth.c: 283: else
 31325                           ;Bluetooth.c: 284: {
 31326                           ;Bluetooth.c: 285: if(ok)
 31327  004B90  0101               	movlb	1	; () banked
 31328  004B92  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31329  004B94  0101               	movlb	1	; () banked
 31330  004B96  B4D8               	btfsc	status,2,c
 31331  004B98  D066               	goto	l11232
 31332                           
 31333                           ; BSR set to: 1
 31334                           ;Bluetooth.c: 286: {
 31335                           ;Bluetooth.c: 287: if(BluetoothBroadcast[21-1] == 0 )
 31336  004B9A  0104               	movlb	4	; () banked
 31337  004B9C  51FA               	movf	(_BluetoothBroadcast+20)& (0+255),w,b
 31338  004B9E  A4D8               	btfss	status,2,c
 31339  004BA0  D05E               	goto	l11230
 31340                           
 31341                           ; BSR set to: 4
 31342                           ;Bluetooth.c: 288: {
 31343                           ;Bluetooth.c: 289: BufferCopy(BluetoothBroadcast,BroadcastTEMP, 21, 0);
 31344  004BA2  0EE6               	movlw	low _BluetoothBroadcast
 31345  004BA4  0100               	movlb	0	; () banked
 31346  004BA6  6F68               	movwf	BufferCopy@from& (0+255),b
 31347  004BA8  0E04               	movlw	high _BluetoothBroadcast
 31348  004BAA  0100               	movlb	0	; () banked
 31349  004BAC  6F69               	movwf	(BufferCopy@from+1)& (0+255),b
 31350  004BAE  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 31351  004BB0  0100               	movlb	0	; () banked
 31352  004BB2  6F6A               	movwf	BufferCopy@to& (0+255),b
 31353  004BB4  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 31354  004BB6  0100               	movlb	0	; () banked
 31355  004BB8  6F6B               	movwf	(BufferCopy@to+1)& (0+255),b
 31356  004BBA  0E15               	movlw	21
 31357  004BBC  0100               	movlb	0	; () banked
 31358  004BBE  6F6C               	movwf	BufferCopy@count& (0+255),b
 31359  004BC0  0E00               	movlw	0
 31360  004BC2  0100               	movlb	0	; () banked
 31361  004BC4  6F6D               	movwf	BufferCopy@shift& (0+255),b
 31362  004BC6  EC36  F051         	call	_BufferCopy	;wreg free
 31363                           
 31364                           ;Bluetooth.c: 290: sprintf(buf,"SN,%s\r",BroadcastTEMP);
 31365  004BCA  0E84               	movlw	low BluetoothInitialSetup@buf
 31366  004BCC  0100               	movlb	0	; () banked
 31367  004BCE  6FAE               	movwf	sprintf@sp& (0+255),b
 31368  004BD0  0E01               	movlw	high BluetoothInitialSetup@buf
 31369  004BD2  0100               	movlb	0	; () banked
 31370  004BD4  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31371  004BD6  0E8C               	movlw	low STR_11
 31372  004BD8  0100               	movlb	0	; () banked
 31373  004BDA  6FB0               	movwf	sprintf@f& (0+255),b
 31374  004BDC  0EFF               	movlw	high STR_11
 31375  004BDE  0100               	movlb	0	; () banked
 31376  004BE0  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31377  004BE2  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 31378  004BE4  0100               	movlb	0	; () banked
 31379  004BE6  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 31380  004BE8  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 31381  004BEA  0100               	movlb	0	; () banked
 31382  004BEC  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 31383  004BEE  EC22  F016         	call	_sprintf	;wreg free
 31384                           
 31385                           ;Bluetooth.c: 291: ClearUSART();
 31386  004BF2  EC18  F057         	call	_ClearUSART	;wreg free
 31387                           
 31388                           ;Bluetooth.c: 292: PIR1bits.RCIF = 0;
 31389  004BF6  9A9E               	bcf	3998,5,c	;volatile
 31390                           
 31391                           ;Bluetooth.c: 293: PIE1bits.RCIE = 1;
 31392  004BF8  8A9D               	bsf	3997,5,c	;volatile
 31393                           
 31394                           ;Bluetooth.c: 294: UARTstring(buf);
 31395  004BFA  0E84               	movlw	low BluetoothInitialSetup@buf
 31396  004BFC  0100               	movlb	0	; () banked
 31397  004BFE  6F61               	movwf	UARTstring@data& (0+255),b
 31398  004C00  0E01               	movlw	high BluetoothInitialSetup@buf
 31399  004C02  0100               	movlb	0	; () banked
 31400  004C04  6F62               	movwf	(UARTstring@data+1)& (0+255),b
 31401  004C06  EC39  F056         	call	_UARTstring	;wreg free
 31402                           
 31403                           ;Bluetooth.c: 295: delayUS(50000);
 31404  004C0A  0E50               	movlw	80
 31405  004C0C  0100               	movlb	0	; () banked
 31406  004C0E  6F60               	movwf	delayUS@US& (0+255),b
 31407  004C10  0EC3               	movlw	195
 31408  004C12  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31409  004C14  0E00               	movlw	0
 31410  004C16  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31411  004C18  0E00               	movlw	0
 31412  004C1A  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31413  004C1C  EC96  F053         	call	_delayUS	;wreg free
 31414                           
 31415                           ;Bluetooth.c: 296: PIE1bits.RCIE = 0;
 31416  004C20  9A9D               	bcf	3997,5,c	;volatile
 31417                           
 31418                           ;Bluetooth.c: 297: sprintf(buf,"AOK");
 31419  004C22  0E84               	movlw	low BluetoothInitialSetup@buf
 31420  004C24  0100               	movlb	0	; () banked
 31421  004C26  6FAE               	movwf	sprintf@sp& (0+255),b
 31422  004C28  0E01               	movlw	high BluetoothInitialSetup@buf
 31423  004C2A  0100               	movlb	0	; () banked
 31424  004C2C  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31425  004C2E  0EF5               	movlw	low STR_10
 31426  004C30  0100               	movlb	0	; () banked
 31427  004C32  6FB0               	movwf	sprintf@f& (0+255),b
 31428  004C34  0EFF               	movlw	high STR_10
 31429  004C36  0100               	movlb	0	; () banked
 31430  004C38  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31431  004C3A  EC22  F016         	call	_sprintf	;wreg free
 31432                           
 31433                           ;Bluetooth.c: 298: if(!StringContains(CommandString,buf))
 31434  004C3E  0E00               	movlw	low _CommandString
 31435  004C40  0100               	movlb	0	; () banked
 31436  004C42  6F60               	movwf	StringContains@This& (0+255),b
 31437  004C44  0E04               	movlw	high _CommandString
 31438  004C46  0100               	movlb	0	; () banked
 31439  004C48  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31440  004C4A  0E84               	movlw	low BluetoothInitialSetup@buf
 31441  004C4C  0100               	movlb	0	; () banked
 31442  004C4E  6F62               	movwf	StringContains@That& (0+255),b
 31443  004C50  0E01               	movlw	high BluetoothInitialSetup@buf
 31444  004C52  0100               	movlb	0	; () banked
 31445  004C54  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31446  004C56  ECB7  F044         	call	_StringContains	;wreg free
 31447  004C5A  D793               	goto	L16
 31448                           
 31449                           ; BSR set to: 1
 31450                           ;Bluetooth.c: 301: }
 31451                           ;Bluetooth.c: 302: }
 31452                           
 31453                           ;Bluetooth.c: 299: {
 31454                           ;Bluetooth.c: 300: ok = 0;
 31455  004C5C  D004               	goto	l11232
 31456  004C5E                     l11230:
 31457                           
 31458                           ;Bluetooth.c: 303: else
 31459                           ;Bluetooth.c: 304: {
 31460                           ;Bluetooth.c: 305: ok = 0;
 31461  004C5E  0E00               	movlw	0
 31462  004C60  0101               	movlb	1	; () banked
 31463  004C62  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31464                           
 31465                           ; BSR set to: 1
 31466                           
 31467                           ; BSR set to: 1
 31468  004C64  D000               	goto	l11232
 31469  004C66                     l11232:
 31470                           
 31471                           ;Bluetooth.c: 306: }
 31472                           ;Bluetooth.c: 307: }
 31473                           ;Bluetooth.c: 308: }
 31474                           ;Bluetooth.c: 309: cleanBuffer(CommandString,CommandStringPos);
 31475  004C66  0E00               	movlw	low _CommandString
 31476  004C68  0100               	movlb	0	; () banked
 31477  004C6A  6F60               	movwf	cleanBuffer@data& (0+255),b
 31478  004C6C  0E04               	movlw	high _CommandString
 31479  004C6E  0100               	movlb	0	; () banked
 31480  004C70  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31481  004C72  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31482  004C76  0100               	movlb	0	; () banked
 31483  004C78  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31484  004C7A  EC3D  F053         	call	_cleanBuffer	;wreg free
 31485                           
 31486                           ;Bluetooth.c: 310: CommandStringPos = 0;
 31487  004C7E  0E00               	movlw	0
 31488  004C80  6E3E               	movwf	_CommandStringPos,c	;volatile
 31489                           
 31490                           ;Bluetooth.c: 312: if(ok)
 31491  004C82  0101               	movlb	1	; () banked
 31492  004C84  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31493  004C86  0101               	movlb	1	; () banked
 31494  004C88  B4D8               	btfsc	status,2,c
 31495  004C8A  D02D               	goto	l11254
 31496                           
 31497                           ; BSR set to: 1
 31498                           ;Bluetooth.c: 313: {
 31499                           ;Bluetooth.c: 314: ClearUSART();
 31500  004C8C  EC18  F057         	call	_ClearUSART	;wreg free
 31501                           
 31502                           ;Bluetooth.c: 315: PIR1bits.RCIF = 0;
 31503  004C90  9A9E               	bcf	3998,5,c	;volatile
 31504                           
 31505                           ;Bluetooth.c: 316: PIE1bits.RCIE = 1;
 31506  004C92  8A9D               	bsf	3997,5,c	;volatile
 31507                           
 31508                           ;Bluetooth.c: 317: UARTstring_CONST("SU,115K\r");
 31509  004C94  0E62               	movlw	low STR_13
 31510  004C96  0100               	movlb	0	; () banked
 31511  004C98  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 31512  004C9A  0EFF               	movlw	high STR_13
 31513  004C9C  0100               	movlb	0	; () banked
 31514  004C9E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 31515  004CA0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 31516                           
 31517                           ;Bluetooth.c: 318: delayUS(50000);
 31518  004CA4  0E50               	movlw	80
 31519  004CA6  0100               	movlb	0	; () banked
 31520  004CA8  6F60               	movwf	delayUS@US& (0+255),b
 31521  004CAA  0EC3               	movlw	195
 31522  004CAC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31523  004CAE  0E00               	movlw	0
 31524  004CB0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31525  004CB2  0E00               	movlw	0
 31526  004CB4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31527  004CB6  EC96  F053         	call	_delayUS	;wreg free
 31528                           
 31529                           ;Bluetooth.c: 319: PIE1bits.RCIE = 0;
 31530  004CBA  9A9D               	bcf	3997,5,c	;volatile
 31531                           
 31532                           ;Bluetooth.c: 320: if(!StringContains(CommandString,buf))
 31533  004CBC  0E00               	movlw	low _CommandString
 31534  004CBE  0100               	movlb	0	; () banked
 31535  004CC0  6F60               	movwf	StringContains@This& (0+255),b
 31536  004CC2  0E04               	movlw	high _CommandString
 31537  004CC4  0100               	movlb	0	; () banked
 31538  004CC6  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31539  004CC8  0E84               	movlw	low BluetoothInitialSetup@buf
 31540  004CCA  0100               	movlb	0	; () banked
 31541  004CCC  6F62               	movwf	StringContains@That& (0+255),b
 31542  004CCE  0E01               	movlw	high BluetoothInitialSetup@buf
 31543  004CD0  0100               	movlb	0	; () banked
 31544  004CD2  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31545  004CD4  ECB7  F044         	call	_StringContains	;wreg free
 31546  004CD8  0900               	iorlw	0
 31547  004CDA  A4D8               	btfss	status,2,c
 31548  004CDC  D004               	goto	l11254
 31549                           
 31550                           ;Bluetooth.c: 321: {
 31551                           ;Bluetooth.c: 322: ok = 0;
 31552  004CDE  0E00               	movlw	0
 31553  004CE0  0101               	movlb	1	; () banked
 31554  004CE2  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31555                           
 31556                           ; BSR set to: 1
 31557  004CE4  D000               	goto	l11254
 31558  004CE6                     l11254:
 31559                           
 31560                           ;Bluetooth.c: 323: }
 31561                           ;Bluetooth.c: 324: }
 31562                           ;Bluetooth.c: 325: cleanBuffer(CommandString,CommandStringPos);
 31563  004CE6  0E00               	movlw	low _CommandString
 31564  004CE8  0100               	movlb	0	; () banked
 31565  004CEA  6F60               	movwf	cleanBuffer@data& (0+255),b
 31566  004CEC  0E04               	movlw	high _CommandString
 31567  004CEE  0100               	movlb	0	; () banked
 31568  004CF0  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31569  004CF2  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31570  004CF6  0100               	movlb	0	; () banked
 31571  004CF8  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31572  004CFA  EC3D  F053         	call	_cleanBuffer	;wreg free
 31573                           
 31574                           ;Bluetooth.c: 326: CommandStringPos = 0;
 31575  004CFE  0E00               	movlw	0
 31576  004D00  6E3E               	movwf	_CommandStringPos,c	;volatile
 31577                           
 31578                           ;Bluetooth.c: 328: if(ok)
 31579  004D02  0101               	movlb	1	; () banked
 31580  004D04  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31581  004D06  0101               	movlb	1	; () banked
 31582  004D08  B4D8               	btfsc	status,2,c
 31583  004D0A  D02D               	goto	l11276
 31584                           
 31585                           ; BSR set to: 1
 31586                           ;Bluetooth.c: 329: {
 31587                           ;Bluetooth.c: 330: ClearUSART();
 31588  004D0C  EC18  F057         	call	_ClearUSART	;wreg free
 31589                           
 31590                           ;Bluetooth.c: 331: PIR1bits.RCIF = 0;
 31591  004D10  9A9E               	bcf	3998,5,c	;volatile
 31592                           
 31593                           ;Bluetooth.c: 332: PIE1bits.RCIE = 1;
 31594  004D12  8A9D               	bsf	3997,5,c	;volatile
 31595                           
 31596                           ;Bluetooth.c: 333: UARTstring_CONST("SS,Home Automation\r");
 31597  004D14  0EB0               	movlw	low STR_14
 31598  004D16  0100               	movlb	0	; () banked
 31599  004D18  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 31600  004D1A  0EFC               	movlw	high STR_14
 31601  004D1C  0100               	movlb	0	; () banked
 31602  004D1E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 31603  004D20  EC98  F055         	call	_UARTstring_CONST	;wreg free
 31604                           
 31605                           ;Bluetooth.c: 334: delayUS(50000);
 31606  004D24  0E50               	movlw	80
 31607  004D26  0100               	movlb	0	; () banked
 31608  004D28  6F60               	movwf	delayUS@US& (0+255),b
 31609  004D2A  0EC3               	movlw	195
 31610  004D2C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31611  004D2E  0E00               	movlw	0
 31612  004D30  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31613  004D32  0E00               	movlw	0
 31614  004D34  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31615  004D36  EC96  F053         	call	_delayUS	;wreg free
 31616                           
 31617                           ;Bluetooth.c: 335: PIE1bits.RCIE = 0;
 31618  004D3A  9A9D               	bcf	3997,5,c	;volatile
 31619                           
 31620                           ;Bluetooth.c: 336: if(!StringContains(CommandString,buf))
 31621  004D3C  0E00               	movlw	low _CommandString
 31622  004D3E  0100               	movlb	0	; () banked
 31623  004D40  6F60               	movwf	StringContains@This& (0+255),b
 31624  004D42  0E04               	movlw	high _CommandString
 31625  004D44  0100               	movlb	0	; () banked
 31626  004D46  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31627  004D48  0E84               	movlw	low BluetoothInitialSetup@buf
 31628  004D4A  0100               	movlb	0	; () banked
 31629  004D4C  6F62               	movwf	StringContains@That& (0+255),b
 31630  004D4E  0E01               	movlw	high BluetoothInitialSetup@buf
 31631  004D50  0100               	movlb	0	; () banked
 31632  004D52  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31633  004D54  ECB7  F044         	call	_StringContains	;wreg free
 31634  004D58  0900               	iorlw	0
 31635  004D5A  A4D8               	btfss	status,2,c
 31636  004D5C  D004               	goto	l11276
 31637                           
 31638                           ;Bluetooth.c: 337: {
 31639                           ;Bluetooth.c: 338: ok = 0;
 31640  004D5E  0E00               	movlw	0
 31641  004D60  0101               	movlb	1	; () banked
 31642  004D62  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31643                           
 31644                           ; BSR set to: 1
 31645  004D64  D000               	goto	l11276
 31646  004D66                     l11276:
 31647                           
 31648                           ;Bluetooth.c: 339: }
 31649                           ;Bluetooth.c: 340: }
 31650                           ;Bluetooth.c: 341: cleanBuffer(CommandString,CommandStringPos);
 31651  004D66  0E00               	movlw	low _CommandString
 31652  004D68  0100               	movlb	0	; () banked
 31653  004D6A  6F60               	movwf	cleanBuffer@data& (0+255),b
 31654  004D6C  0E04               	movlw	high _CommandString
 31655  004D6E  0100               	movlb	0	; () banked
 31656  004D70  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31657  004D72  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31658  004D76  0100               	movlb	0	; () banked
 31659  004D78  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31660  004D7A  EC3D  F053         	call	_cleanBuffer	;wreg free
 31661                           
 31662                           ;Bluetooth.c: 342: CommandStringPos = 0;
 31663  004D7E  0E00               	movlw	0
 31664  004D80  6E3E               	movwf	_CommandStringPos,c	;volatile
 31665                           
 31666                           ;Bluetooth.c: 344: if(ok)
 31667  004D82  0101               	movlb	1	; () banked
 31668  004D84  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31669  004D86  0101               	movlb	1	; () banked
 31670  004D88  B4D8               	btfsc	status,2,c
 31671  004D8A  D02D               	goto	l11298
 31672                           
 31673                           ; BSR set to: 1
 31674                           ;Bluetooth.c: 345: {
 31675                           ;Bluetooth.c: 346: ClearUSART();
 31676  004D8C  EC18  F057         	call	_ClearUSART	;wreg free
 31677                           
 31678                           ;Bluetooth.c: 347: PIR1bits.RCIF = 0;
 31679  004D90  9A9E               	bcf	3998,5,c	;volatile
 31680                           
 31681                           ;Bluetooth.c: 348: PIE1bits.RCIE = 1;
 31682  004D92  8A9D               	bsf	3997,5,c	;volatile
 31683                           
 31684                           ;Bluetooth.c: 349: UARTstring_CONST("SY,0010\r");
 31685  004D94  0E59               	movlw	low STR_15
 31686  004D96  0100               	movlb	0	; () banked
 31687  004D98  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 31688  004D9A  0EFF               	movlw	high STR_15
 31689  004D9C  0100               	movlb	0	; () banked
 31690  004D9E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 31691  004DA0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 31692                           
 31693                           ;Bluetooth.c: 350: delayUS(50000);
 31694  004DA4  0E50               	movlw	80
 31695  004DA6  0100               	movlb	0	; () banked
 31696  004DA8  6F60               	movwf	delayUS@US& (0+255),b
 31697  004DAA  0EC3               	movlw	195
 31698  004DAC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31699  004DAE  0E00               	movlw	0
 31700  004DB0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31701  004DB2  0E00               	movlw	0
 31702  004DB4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31703  004DB6  EC96  F053         	call	_delayUS	;wreg free
 31704                           
 31705                           ;Bluetooth.c: 351: PIE1bits.RCIE = 0;
 31706  004DBA  9A9D               	bcf	3997,5,c	;volatile
 31707                           
 31708                           ;Bluetooth.c: 352: if(!StringContains(CommandString,buf))
 31709  004DBC  0E00               	movlw	low _CommandString
 31710  004DBE  0100               	movlb	0	; () banked
 31711  004DC0  6F60               	movwf	StringContains@This& (0+255),b
 31712  004DC2  0E04               	movlw	high _CommandString
 31713  004DC4  0100               	movlb	0	; () banked
 31714  004DC6  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31715  004DC8  0E84               	movlw	low BluetoothInitialSetup@buf
 31716  004DCA  0100               	movlb	0	; () banked
 31717  004DCC  6F62               	movwf	StringContains@That& (0+255),b
 31718  004DCE  0E01               	movlw	high BluetoothInitialSetup@buf
 31719  004DD0  0100               	movlb	0	; () banked
 31720  004DD2  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31721  004DD4  ECB7  F044         	call	_StringContains	;wreg free
 31722  004DD8  0900               	iorlw	0
 31723  004DDA  A4D8               	btfss	status,2,c
 31724  004DDC  D004               	goto	l11298
 31725                           
 31726                           ;Bluetooth.c: 353: {
 31727                           ;Bluetooth.c: 354: ok = 0;
 31728  004DDE  0E00               	movlw	0
 31729  004DE0  0101               	movlb	1	; () banked
 31730  004DE2  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31731                           
 31732                           ; BSR set to: 1
 31733  004DE4  D000               	goto	l11298
 31734  004DE6                     l11298:
 31735                           
 31736                           ;Bluetooth.c: 355: }
 31737                           ;Bluetooth.c: 356: }
 31738                           ;Bluetooth.c: 357: cleanBuffer(CommandString,CommandStringPos);
 31739  004DE6  0E00               	movlw	low _CommandString
 31740  004DE8  0100               	movlb	0	; () banked
 31741  004DEA  6F60               	movwf	cleanBuffer@data& (0+255),b
 31742  004DEC  0E04               	movlw	high _CommandString
 31743  004DEE  0100               	movlb	0	; () banked
 31744  004DF0  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31745  004DF2  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31746  004DF6  0100               	movlb	0	; () banked
 31747  004DF8  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31748  004DFA  EC3D  F053         	call	_cleanBuffer	;wreg free
 31749                           
 31750                           ;Bluetooth.c: 358: CommandStringPos = 0;
 31751  004DFE  0E00               	movlw	0
 31752  004E00  6E3E               	movwf	_CommandStringPos,c	;volatile
 31753                           
 31754                           ;Bluetooth.c: 360: if(ok)
 31755  004E02  0101               	movlb	1	; () banked
 31756  004E04  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31757  004E06  0101               	movlb	1	; () banked
 31758  004E08  B4D8               	btfsc	status,2,c
 31759  004E0A  D02D               	goto	l11320
 31760                           
 31761                           ; BSR set to: 1
 31762                           ;Bluetooth.c: 361: {
 31763                           ;Bluetooth.c: 362: ClearUSART();
 31764  004E0C  EC18  F057         	call	_ClearUSART	;wreg free
 31765                           
 31766                           ;Bluetooth.c: 363: PIR1bits.RCIF = 0;
 31767  004E10  9A9E               	bcf	3998,5,c	;volatile
 31768                           
 31769                           ;Bluetooth.c: 364: PIE1bits.RCIE = 1;
 31770  004E12  8A9D               	bsf	3997,5,c	;volatile
 31771                           
 31772                           ;Bluetooth.c: 365: UARTstring_CONST("S~,0\r");
 31773  004E14  0EAF               	movlw	low STR_16
 31774  004E16  0100               	movlb	0	; () banked
 31775  004E18  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 31776  004E1A  0EFF               	movlw	high STR_16
 31777  004E1C  0100               	movlb	0	; () banked
 31778  004E1E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 31779  004E20  EC98  F055         	call	_UARTstring_CONST	;wreg free
 31780                           
 31781                           ;Bluetooth.c: 366: delayUS(50000);
 31782  004E24  0E50               	movlw	80
 31783  004E26  0100               	movlb	0	; () banked
 31784  004E28  6F60               	movwf	delayUS@US& (0+255),b
 31785  004E2A  0EC3               	movlw	195
 31786  004E2C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31787  004E2E  0E00               	movlw	0
 31788  004E30  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31789  004E32  0E00               	movlw	0
 31790  004E34  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31791  004E36  EC96  F053         	call	_delayUS	;wreg free
 31792                           
 31793                           ;Bluetooth.c: 367: PIE1bits.RCIE = 0;
 31794  004E3A  9A9D               	bcf	3997,5,c	;volatile
 31795                           
 31796                           ;Bluetooth.c: 368: if(!StringContains(CommandString,buf))
 31797  004E3C  0E00               	movlw	low _CommandString
 31798  004E3E  0100               	movlb	0	; () banked
 31799  004E40  6F60               	movwf	StringContains@This& (0+255),b
 31800  004E42  0E04               	movlw	high _CommandString
 31801  004E44  0100               	movlb	0	; () banked
 31802  004E46  6F61               	movwf	(StringContains@This+1)& (0+255),b
 31803  004E48  0E84               	movlw	low BluetoothInitialSetup@buf
 31804  004E4A  0100               	movlb	0	; () banked
 31805  004E4C  6F62               	movwf	StringContains@That& (0+255),b
 31806  004E4E  0E01               	movlw	high BluetoothInitialSetup@buf
 31807  004E50  0100               	movlb	0	; () banked
 31808  004E52  6F63               	movwf	(StringContains@That+1)& (0+255),b
 31809  004E54  ECB7  F044         	call	_StringContains	;wreg free
 31810  004E58  0900               	iorlw	0
 31811  004E5A  A4D8               	btfss	status,2,c
 31812  004E5C  D004               	goto	l11320
 31813                           
 31814                           ;Bluetooth.c: 369: {
 31815                           ;Bluetooth.c: 370: ok = 0;
 31816  004E5E  0E00               	movlw	0
 31817  004E60  0101               	movlb	1	; () banked
 31818  004E62  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31819                           
 31820                           ; BSR set to: 1
 31821  004E64  D000               	goto	l11320
 31822  004E66                     l11320:
 31823                           
 31824                           ;Bluetooth.c: 371: }
 31825                           ;Bluetooth.c: 372: }
 31826                           ;Bluetooth.c: 373: cleanBuffer(CommandString,CommandStringPos);
 31827  004E66  0E00               	movlw	low _CommandString
 31828  004E68  0100               	movlb	0	; () banked
 31829  004E6A  6F60               	movwf	cleanBuffer@data& (0+255),b
 31830  004E6C  0E04               	movlw	high _CommandString
 31831  004E6E  0100               	movlb	0	; () banked
 31832  004E70  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31833  004E72  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 31834  004E76  0100               	movlb	0	; () banked
 31835  004E78  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 31836  004E7A  EC3D  F053         	call	_cleanBuffer	;wreg free
 31837                           
 31838                           ;Bluetooth.c: 374: CommandStringPos = 0;
 31839  004E7E  0E00               	movlw	0
 31840  004E80  6E3E               	movwf	_CommandStringPos,c	;volatile
 31841                           
 31842                           ;Bluetooth.c: 376: if(ok)
 31843  004E82  0101               	movlb	1	; () banked
 31844  004E84  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 31845  004E86  0101               	movlb	1	; () banked
 31846  004E88  B4D8               	btfsc	status,2,c
 31847  004E8A  D06A               	goto	l11348
 31848                           
 31849                           ; BSR set to: 1
 31850                           ;Bluetooth.c: 377: {
 31851                           ;Bluetooth.c: 378: ClearUSART();
 31852  004E8C  EC18  F057         	call	_ClearUSART	;wreg free
 31853                           
 31854                           ;Bluetooth.c: 379: PIR1bits.RCIF = 0;
 31855  004E90  9A9E               	bcf	3998,5,c	;volatile
 31856                           
 31857                           ;Bluetooth.c: 380: PIE1bits.RCIE = 1;
 31858  004E92  8A9D               	bsf	3997,5,c	;volatile
 31859                           
 31860                           ;Bluetooth.c: 381: UARTstring_CONST("D\r");
 31861  004E94  0EF9               	movlw	low STR_17
 31862  004E96  0100               	movlb	0	; () banked
 31863  004E98  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 31864  004E9A  0EFF               	movlw	high STR_17
 31865  004E9C  0100               	movlb	0	; () banked
 31866  004E9E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 31867  004EA0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 31868                           
 31869                           ;Bluetooth.c: 382: delayUS(50000);
 31870  004EA4  0E50               	movlw	80
 31871  004EA6  0100               	movlb	0	; () banked
 31872  004EA8  6F60               	movwf	delayUS@US& (0+255),b
 31873  004EAA  0EC3               	movlw	195
 31874  004EAC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 31875  004EAE  0E00               	movlw	0
 31876  004EB0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 31877  004EB2  0E00               	movlw	0
 31878  004EB4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 31879  004EB6  EC96  F053         	call	_delayUS	;wreg free
 31880                           
 31881                           ;Bluetooth.c: 383: PIE1bits.RCIE = 0;
 31882  004EBA  9A9D               	bcf	3997,5,c	;volatile
 31883                           
 31884                           ;Bluetooth.c: 384: if(Default)
 31885  004EBC  0101               	movlb	1	; () banked
 31886  004EBE  51B7               	movf	BluetoothInitialSetup@Default& (0+255),w,b
 31887  004EC0  0101               	movlb	1	; () banked
 31888  004EC2  B4D8               	btfsc	status,2,c
 31889  004EC4  D017               	goto	l11342
 31890                           
 31891                           ; BSR set to: 1
 31892                           ;Bluetooth.c: 385: {
 31893                           ;Bluetooth.c: 386: sprintf(buf,"BTName=Home Automation %lu\r",Global2.SerialNumber);
 31894  004EC6  0E84               	movlw	low BluetoothInitialSetup@buf
 31895  004EC8  0100               	movlb	0	; () banked
 31896  004ECA  6FAE               	movwf	sprintf@sp& (0+255),b
 31897  004ECC  0E01               	movlw	high BluetoothInitialSetup@buf
 31898  004ECE  0100               	movlb	0	; () banked
 31899  004ED0  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31900  004ED2  0E5D               	movlw	low STR_18
 31901  004ED4  0100               	movlb	0	; () banked
 31902  004ED6  6FB0               	movwf	sprintf@f& (0+255),b
 31903  004ED8  0EFA               	movlw	high STR_18
 31904  004EDA  0100               	movlb	0	; () banked
 31905  004EDC  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31906  004EDE  C2CE  F0B2         	movff	_Global2+48,?_sprintf+4
 31907  004EE2  C2CF  F0B3         	movff	_Global2+49,?_sprintf+5
 31908  004EE6  C2D0  F0B4         	movff	_Global2+50,?_sprintf+6
 31909  004EEA  C2D1  F0B5         	movff	_Global2+51,?_sprintf+7
 31910  004EEE  EC22  F016         	call	_sprintf	;wreg free
 31911                           
 31912                           ;Bluetooth.c: 387: }
 31913  004EF2  D014               	goto	l2101
 31914  004EF4                     l11342:
 31915                           
 31916                           ;Bluetooth.c: 388: else
 31917                           ;Bluetooth.c: 389: {
 31918                           ;Bluetooth.c: 390: sprintf(buf,"BTName=%s\r",BroadcastTEMP);
 31919  004EF4  0E84               	movlw	low BluetoothInitialSetup@buf
 31920  004EF6  0100               	movlb	0	; () banked
 31921  004EF8  6FAE               	movwf	sprintf@sp& (0+255),b
 31922  004EFA  0E01               	movlw	high BluetoothInitialSetup@buf
 31923  004EFC  0100               	movlb	0	; () banked
 31924  004EFE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 31925  004F00  0EE2               	movlw	low STR_19
 31926  004F02  0100               	movlb	0	; () banked
 31927  004F04  6FB0               	movwf	sprintf@f& (0+255),b
 31928  004F06  0EFE               	movlw	high STR_19
 31929  004F08  0100               	movlb	0	; () banked
 31930  004F0A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 31931  004F0C  0E6F               	movlw	low BluetoothInitialSetup@BroadcastTEMP
 31932  004F0E  0100               	movlb	0	; () banked
 31933  004F10  6FB2               	movwf	(?_sprintf+4)& (0+255),b
 31934  004F12  0E01               	movlw	high BluetoothInitialSetup@BroadcastTEMP
 31935  004F14  0100               	movlb	0	; () banked
 31936  004F16  6FB3               	movwf	(?_sprintf+5)& (0+255),b
 31937  004F18  EC22  F016         	call	_sprintf	;wreg free
 31938  004F1C                     l2101:
 31939                           
 31940                           ;Bluetooth.c: 391: }
 31941                           ;Bluetooth.c: 392: if(!StringContainsCaseInsensitive(CommandString, buf))
 31942  004F1C  0E00               	movlw	low _CommandString
 31943  004F1E  0100               	movlb	0	; () banked
 31944  004F20  6F63               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 31945  004F22  0E04               	movlw	high _CommandString
 31946  004F24  0100               	movlb	0	; () banked
 31947  004F26  6F64               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 31948  004F28  0E84               	movlw	low BluetoothInitialSetup@buf
 31949  004F2A  0100               	movlb	0	; () banked
 31950  004F2C  6F65               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 31951  004F2E  0E01               	movlw	high BluetoothInitialSetup@buf
 31952  004F30  0100               	movlb	0	; () banked
 31953  004F32  6F66               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 31954  004F34  EC6A  F03D         	call	_StringContainsCaseInsensitive	;wreg free
 31955  004F38  0900               	iorlw	0
 31956  004F3A  A4D8               	btfss	status,2,c
 31957  004F3C  D011               	goto	l11348
 31958                           
 31959                           ;Bluetooth.c: 393: {
 31960                           ;Bluetooth.c: 394: if(Global2.SerialNumber != 0xFFFFFFFF)
 31961  004F3E  0102               	movlb	2	; () banked
 31962  004F40  29CE               	incf	(_Global2+48)& (0+255),w,b
 31963  004F42  E10A               	bnz	u12170
 31964  004F44  0102               	movlb	2	; () banked
 31965  004F46  29CF               	incf	(_Global2+49)& (0+255),w,b
 31966  004F48  E107               	bnz	u12170
 31967  004F4A  0102               	movlb	2	; () banked
 31968  004F4C  29D0               	incf	(_Global2+50)& (0+255),w,b
 31969  004F4E  E104               	bnz	u12170
 31970  004F50  0102               	movlb	2	; () banked
 31971  004F52  29D1               	incf	(_Global2+51)& (0+255),w,b
 31972  004F54  B4D8               	btfsc	status,2,c
 31973  004F56  D004               	goto	l11348
 31974  004F58                     u12170:
 31975                           
 31976                           ; BSR set to: 2
 31977                           ;Bluetooth.c: 395: {
 31978                           ;Bluetooth.c: 396: ok = 0;
 31979  004F58  0E00               	movlw	0
 31980  004F5A  0101               	movlb	1	; () banked
 31981  004F5C  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 31982                           
 31983                           ; BSR set to: 1
 31984                           
 31985                           ; BSR set to: 1
 31986  004F5E  D000               	goto	l11348
 31987  004F60                     l11348:
 31988                           
 31989                           ;Bluetooth.c: 397: }
 31990                           ;Bluetooth.c: 398: }
 31991                           ;Bluetooth.c: 399: }
 31992                           ;Bluetooth.c: 400: cleanBuffer(CommandString,CommandStringPos);
 31993  004F60  0E00               	movlw	low _CommandString
 31994  004F62  0100               	movlb	0	; () banked
 31995  004F64  6F60               	movwf	cleanBuffer@data& (0+255),b
 31996  004F66  0E04               	movlw	high _CommandString
 31997  004F68  0100               	movlb	0	; () banked
 31998  004F6A  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 31999  004F6C  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 32000  004F70  0100               	movlb	0	; () banked
 32001  004F72  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 32002  004F74  EC3D  F053         	call	_cleanBuffer	;wreg free
 32003                           
 32004                           ;Bluetooth.c: 401: CommandStringPos = 0;
 32005  004F78  0E00               	movlw	0
 32006  004F7A  6E3E               	movwf	_CommandStringPos,c	;volatile
 32007                           
 32008                           ;Bluetooth.c: 403: ClearUSART();
 32009  004F7C  EC18  F057         	call	_ClearUSART	;wreg free
 32010                           
 32011                           ;Bluetooth.c: 404: PIR1bits.RCIF = 0;
 32012  004F80  9A9E               	bcf	3998,5,c	;volatile
 32013                           
 32014                           ;Bluetooth.c: 405: PIE1bits.RCIE = 1;
 32015  004F82  8A9D               	bsf	3997,5,c	;volatile
 32016                           
 32017                           ;Bluetooth.c: 406: UARTstring_CONST("---\r");
 32018  004F84  0ECD               	movlw	low STR_20
 32019  004F86  0100               	movlb	0	; () banked
 32020  004F88  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 32021  004F8A  0EFF               	movlw	high STR_20
 32022  004F8C  0100               	movlb	0	; () banked
 32023  004F8E  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 32024  004F90  EC98  F055         	call	_UARTstring_CONST	;wreg free
 32025                           
 32026                           ;Bluetooth.c: 407: delayUS(50000);
 32027  004F94  0E50               	movlw	80
 32028  004F96  0100               	movlb	0	; () banked
 32029  004F98  6F60               	movwf	delayUS@US& (0+255),b
 32030  004F9A  0EC3               	movlw	195
 32031  004F9C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32032  004F9E  0E00               	movlw	0
 32033  004FA0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32034  004FA2  0E00               	movlw	0
 32035  004FA4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32036  004FA6  EC96  F053         	call	_delayUS	;wreg free
 32037                           
 32038                           ;Bluetooth.c: 408: sprintf(buf,"END");
 32039  004FAA  0E84               	movlw	low BluetoothInitialSetup@buf
 32040  004FAC  0100               	movlb	0	; () banked
 32041  004FAE  6FAE               	movwf	sprintf@sp& (0+255),b
 32042  004FB0  0E01               	movlw	high BluetoothInitialSetup@buf
 32043  004FB2  0100               	movlb	0	; () banked
 32044  004FB4  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 32045  004FB6  0EF1               	movlw	low STR_21
 32046  004FB8  0100               	movlb	0	; () banked
 32047  004FBA  6FB0               	movwf	sprintf@f& (0+255),b
 32048  004FBC  0EFF               	movlw	high STR_21
 32049  004FBE  0100               	movlb	0	; () banked
 32050  004FC0  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 32051  004FC2  EC22  F016         	call	_sprintf	;wreg free
 32052                           
 32053                           ;Bluetooth.c: 409: PIE1bits.RCIE = 0;
 32054  004FC6  9A9D               	bcf	3997,5,c	;volatile
 32055                           
 32056                           ;Bluetooth.c: 410: if(!StringContains(CommandString,buf))
 32057  004FC8  0E00               	movlw	low _CommandString
 32058  004FCA  0100               	movlb	0	; () banked
 32059  004FCC  6F60               	movwf	StringContains@This& (0+255),b
 32060  004FCE  0E04               	movlw	high _CommandString
 32061  004FD0  0100               	movlb	0	; () banked
 32062  004FD2  6F61               	movwf	(StringContains@This+1)& (0+255),b
 32063  004FD4  0E84               	movlw	low BluetoothInitialSetup@buf
 32064  004FD6  0100               	movlb	0	; () banked
 32065  004FD8  6F62               	movwf	StringContains@That& (0+255),b
 32066  004FDA  0E01               	movlw	high BluetoothInitialSetup@buf
 32067  004FDC  0100               	movlb	0	; () banked
 32068  004FDE  6F63               	movwf	(StringContains@That+1)& (0+255),b
 32069  004FE0  ECB7  F044         	call	_StringContains	;wreg free
 32070  004FE4  0900               	iorlw	0
 32071  004FE6  A4D8               	btfss	status,2,c
 32072  004FE8  D004               	goto	l11370
 32073                           
 32074                           ;Bluetooth.c: 411: {
 32075                           ;Bluetooth.c: 412: ok = 0;
 32076  004FEA  0E00               	movlw	0
 32077  004FEC  0101               	movlb	1	; () banked
 32078  004FEE  6FB9               	movwf	BluetoothInitialSetup@ok& (0+255),b
 32079  004FF0  D000               	goto	l11370
 32080  004FF2                     l11370:
 32081                           
 32082                           ;Bluetooth.c: 413: }
 32083                           ;Bluetooth.c: 414: cleanBuffer(CommandString,CommandStringPos);
 32084  004FF2  0E00               	movlw	low _CommandString
 32085  004FF4  0100               	movlb	0	; () banked
 32086  004FF6  6F60               	movwf	cleanBuffer@data& (0+255),b
 32087  004FF8  0E04               	movlw	high _CommandString
 32088  004FFA  0100               	movlb	0	; () banked
 32089  004FFC  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 32090  004FFE  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 32091  005002  0100               	movlb	0	; () banked
 32092  005004  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 32093  005006  EC3D  F053         	call	_cleanBuffer	;wreg free
 32094                           
 32095                           ;Bluetooth.c: 415: CommandStringPos = 0;
 32096  00500A  0E00               	movlw	0
 32097  00500C  6E3E               	movwf	_CommandStringPos,c	;volatile
 32098                           
 32099                           ;Bluetooth.c: 417: if(ok)
 32100  00500E  0101               	movlb	1	; () banked
 32101  005010  51B9               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 32102  005012  0101               	movlb	1	; () banked
 32103  005014  B4D8               	btfsc	status,2,c
 32104  005016  D002               	goto	l11380
 32105                           
 32106                           ; BSR set to: 1
 32107                           ;Bluetooth.c: 418: {
 32108                           ;Bluetooth.c: 419: return 1;
 32109  005018  0E01               	movlw	1
 32110                           
 32111                           ; BSR set to: 1
 32112  00501A  0012               	return	
 32113  00501C                     l11380:
 32114                           
 32115                           ; BSR set to: 1
 32116                           ;Bluetooth.c: 420: }
 32117                           ;Bluetooth.c: 421: return 0;
 32118  00501C  0E00               	movlw	0
 32119  00501E  0012               	return	
 32120                           
 32121                           ; BSR set to: 1
 32122  005020  0012               	return		;funcret
 32123  005022                     __end_of_BluetoothInitialSetup:
 32124                           	opt stack 0
 32125                           tblptru	equ	0xFF8
 32126                           tblptrh	equ	0xFF7
 32127                           tblptrl	equ	0xFF6
 32128                           tablat	equ	0xFF5
 32129                           prodh	equ	0xFF4
 32130                           prodl	equ	0xFF3
 32131                           intcon	equ	0xFF2
 32132                           intcon2	equ	0xFF1
 32133                           indf0	equ	0xFEF
 32134                           postinc0	equ	0xFEE
 32135                           plusw0	equ	0xFEB
 32136                           fsr0h	equ	0xFEA
 32137                           fsr0l	equ	0xFE9
 32138                           wreg	equ	0xFE8
 32139                           indf1	equ	0xFE7
 32140                           postdec1	equ	0xFE5
 32141                           fsr1h	equ	0xFE2
 32142                           fsr1l	equ	0xFE1
 32143                           indf2	equ	0xFDF
 32144                           postinc2	equ	0xFDE
 32145                           postdec2	equ	0xFDD
 32146                           plusw2	equ	0xFDB
 32147                           fsr2h	equ	0xFDA
 32148                           fsr2l	equ	0xFD9
 32149                           status	equ	0xFD8
 32150                           
 32151 ;; *************** function _UARTstring *****************
 32152 ;; Defined at:
 32153 ;;		line 222 in file "UART.c"
 32154 ;; Parameters:    Size  Location     Type
 32155 ;;  data            2    1[BANK0 ] PTR unsigned char 
 32156 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), ReceivedString(100), 
 32157 ;; Auto vars:     Size  Location     Type
 32158 ;;		None
 32159 ;; Return value:  Size  Location     Type
 32160 ;;		None               void
 32161 ;; Registers used:
 32162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32163 ;; Tracked objects:
 32164 ;;		On entry : 0/0
 32165 ;;		On exit  : 0/0
 32166 ;;		Unchanged: 0/0
 32167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32171 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32172 ;;Total ram usage:        2 bytes
 32173 ;; Hardware stack levels used:    1
 32174 ;; Hardware stack levels required when called:    6
 32175 ;; This function calls:
 32176 ;;		_UARTchar
 32177 ;; This function is called by:
 32178 ;;		_BluetoothInitialSetup
 32179 ;;		_UseBluetooth
 32180 ;; This function uses a non-reentrant model
 32181 ;;
 32182                           
 32183                           	psect	text70
 32184  00AC72                     __ptext70:
 32185                           	opt stack 0
 32186  00AC72                     _UARTstring:
 32187                           	opt stack 23
 32188                           
 32189                           ;UART.c: 224: while(*data != 0)
 32190                           
 32191                           ;incstack = 0
 32192  00AC72  D00B               	goto	l10656
 32193  00AC74                     l10652:
 32194                           
 32195                           ;UART.c: 225: {
 32196                           ;UART.c: 226: UARTchar(*data);
 32197  00AC74  C061  FFD9         	movff	UARTstring@data,fsr2l
 32198  00AC78  C062  FFDA         	movff	UARTstring@data+1,fsr2h
 32199  00AC7C  50DF               	movf	indf2,w,c
 32200  00AC7E  EC93  F056         	call	_UARTchar
 32201                           
 32202                           ;UART.c: 227: *data++;
 32203  00AC82  0100               	movlb	0	; () banked
 32204  00AC84  4B61               	infsnz	UARTstring@data& (0+255),f,b
 32205  00AC86  2B62               	incf	(UARTstring@data+1)& (0+255),f,b
 32206  00AC88  D000               	goto	l10656
 32207  00AC8A                     l10656:
 32208  00AC8A  C061  FFD9         	movff	UARTstring@data,fsr2l
 32209  00AC8E  C062  FFDA         	movff	UARTstring@data+1,fsr2h
 32210  00AC92  50DF               	movf	indf2,w,c
 32211  00AC94  A4D8               	btfss	status,2,c
 32212  00AC96  D7EE               	goto	l10652
 32213  00AC98  0012               	return		;funcret
 32214  00AC9A                     __end_of_UARTstring:
 32215                           	opt stack 0
 32216                           tblptru	equ	0xFF8
 32217                           tblptrh	equ	0xFF7
 32218                           tblptrl	equ	0xFF6
 32219                           tablat	equ	0xFF5
 32220                           prodh	equ	0xFF4
 32221                           prodl	equ	0xFF3
 32222                           intcon	equ	0xFF2
 32223                           intcon2	equ	0xFF1
 32224                           indf0	equ	0xFEF
 32225                           postinc0	equ	0xFEE
 32226                           plusw0	equ	0xFEB
 32227                           fsr0h	equ	0xFEA
 32228                           fsr0l	equ	0xFE9
 32229                           wreg	equ	0xFE8
 32230                           indf1	equ	0xFE7
 32231                           postdec1	equ	0xFE5
 32232                           fsr1h	equ	0xFE2
 32233                           fsr1l	equ	0xFE1
 32234                           indf2	equ	0xFDF
 32235                           postinc2	equ	0xFDE
 32236                           postdec2	equ	0xFDD
 32237                           plusw2	equ	0xFDB
 32238                           fsr2h	equ	0xFDA
 32239                           fsr2l	equ	0xFD9
 32240                           status	equ	0xFD8
 32241                           
 32242 ;; *************** function _UARTchar *****************
 32243 ;; Defined at:
 32244 ;;		line 193 in file "UART.c"
 32245 ;; Parameters:    Size  Location     Type
 32246 ;;  data            1    wreg     unsigned char 
 32247 ;; Auto vars:     Size  Location     Type
 32248 ;;  data            1    0[BANK0 ] unsigned char 
 32249 ;; Return value:  Size  Location     Type
 32250 ;;		None               void
 32251 ;; Registers used:
 32252 ;;		wreg, status,2
 32253 ;; Tracked objects:
 32254 ;;		On entry : 0/0
 32255 ;;		On exit  : 0/0
 32256 ;;		Unchanged: 0/0
 32257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32262 ;;Total ram usage:        1 bytes
 32263 ;; Hardware stack levels used:    1
 32264 ;; Hardware stack levels required when called:    5
 32265 ;; This function calls:
 32266 ;;		Nothing
 32267 ;; This function is called by:
 32268 ;;		_main
 32269 ;;		_UARTstring
 32270 ;;		_UARTstringCRLN
 32271 ;;		_UARTcommandMenu
 32272 ;;		_UseBluetooth
 32273 ;; This function uses a non-reentrant model
 32274 ;;
 32275                           
 32276                           	psect	text71
 32277  00AD26                     __ptext71:
 32278                           	opt stack 0
 32279  00AD26                     _UARTchar:
 32280                           	opt stack 23
 32281                           
 32282                           ;incstack = 0
 32283                           ;UARTchar@data stored from wreg
 32284  00AD26  0100               	movlb	0	; () banked
 32285  00AD28  6F60               	movwf	UARTchar@data& (0+255),b
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;UART.c: 195: if(data != 0)
 32289  00AD2A  0100               	movlb	0	; () banked
 32290  00AD2C  5160               	movf	UARTchar@data& (0+255),w,b
 32291  00AD2E  0100               	movlb	0	; () banked
 32292  00AD30  B4D8               	btfsc	status,2,c
 32293  00AD32  0012               	return	
 32294                           
 32295                           ; BSR set to: 0
 32296                           ;UART.c: 196: {
 32297                           ;UART.c: 197: while(!TXSTAbits.TRMT);
 32298  00AD34  D000               	goto	l800
 32299  00AD36                     l800:
 32300                           
 32301                           ; BSR set to: 0
 32302  00AD36  A2AC               	btfss	4012,1,c	;volatile
 32303  00AD38  D7FE               	goto	l800
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;UART.c: 198: TXREG = data;
 32307                           
 32308                           ; BSR set to: 0
 32309  00AD3A  C060  FFAD         	movff	UARTchar@data,4013	;volatile
 32310  00AD3E  0012               	return	
 32311                           
 32312                           ; BSR set to: 0
 32313                           
 32314                           ; BSR set to: 0
 32315  00AD40  0012               	return		;funcret
 32316  00AD42                     __end_of_UARTchar:
 32317                           	opt stack 0
 32318                           tblptru	equ	0xFF8
 32319                           tblptrh	equ	0xFF7
 32320                           tblptrl	equ	0xFF6
 32321                           tablat	equ	0xFF5
 32322                           prodh	equ	0xFF4
 32323                           prodl	equ	0xFF3
 32324                           intcon	equ	0xFF2
 32325                           intcon2	equ	0xFF1
 32326                           indf0	equ	0xFEF
 32327                           postinc0	equ	0xFEE
 32328                           plusw0	equ	0xFEB
 32329                           fsr0h	equ	0xFEA
 32330                           fsr0l	equ	0xFE9
 32331                           wreg	equ	0xFE8
 32332                           indf1	equ	0xFE7
 32333                           postdec1	equ	0xFE5
 32334                           fsr1h	equ	0xFE2
 32335                           fsr1l	equ	0xFE1
 32336                           indf2	equ	0xFDF
 32337                           postinc2	equ	0xFDE
 32338                           postdec2	equ	0xFDD
 32339                           plusw2	equ	0xFDB
 32340                           fsr2h	equ	0xFDA
 32341                           fsr2l	equ	0xFD9
 32342                           status	equ	0xFD8
 32343                           
 32344 ;; *************** function _StringContainsCaseInsensitive *****************
 32345 ;; Defined at:
 32346 ;;		line 351 in file "MISC.c"
 32347 ;; Parameters:    Size  Location     Type
 32348 ;;  This            2    3[BANK0 ] PTR const unsigned char 
 32349 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), CommandString(100), main@BluetoothString(100), 
 32350 ;;  That            2    5[BANK0 ] PTR const unsigned char 
 32351 ;;		 -> STR_66(7), STR_65(9), STR_64(7), STR_50(4), 
 32352 ;;		 -> STR_49(13), STR_28(4), STR_26(6), STR_24(6), 
 32353 ;;		 -> UseBluetooth@rfchannelSTR(10), BluetoothInitialSetup@buf(50), 
 32354 ;; Auto vars:     Size  Location     Type
 32355 ;;  i               1   13[BANK0 ] unsigned char 
 32356 ;;  tempThat        1   12[BANK0 ] unsigned char 
 32357 ;;  tempThis        1   11[BANK0 ] unsigned char 
 32358 ;;  MatchCount      1   10[BANK0 ] unsigned char 
 32359 ;;  MatchAmount     1    9[BANK0 ] unsigned char 
 32360 ;; Return value:  Size  Location     Type
 32361 ;;                  1    wreg      unsigned char 
 32362 ;; Registers used:
 32363 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32364 ;; Tracked objects:
 32365 ;;		On entry : 0/0
 32366 ;;		On exit  : 0/0
 32367 ;;		Unchanged: 0/0
 32368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32370 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32371 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32372 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32373 ;;Total ram usage:       11 bytes
 32374 ;; Hardware stack levels used:    1
 32375 ;; Hardware stack levels required when called:    6
 32376 ;; This function calls:
 32377 ;;		_lowercaseChar
 32378 ;; This function is called by:
 32379 ;;		_BluetoothInitialSetup
 32380 ;;		_UseBluetooth
 32381 ;; This function uses a non-reentrant model
 32382 ;;
 32383                           
 32384                           	psect	text72
 32385  007AD4                     __ptext72:
 32386                           	opt stack 0
 32387  007AD4                     _StringContainsCaseInsensitive:
 32388                           	opt stack 23
 32389                           
 32390                           ;MISC.c: 353: unsigned char tempThis,
 32391                           ;MISC.c: 354: tempThat;
 32392                           ;MISC.c: 355: unsigned char MatchCount = 0;
 32393                           
 32394                           ; BSR set to: 0
 32395                           ;incstack = 0
 32396  007AD4  0E00               	movlw	0
 32397  007AD6  0100               	movlb	0	; () banked
 32398  007AD8  6F6A               	movwf	StringContainsCaseInsensitive@MatchCount& (0+255),b
 32399                           
 32400                           ;MISC.c: 356: unsigned char MatchAmount = 0;
 32401  007ADA  0E00               	movlw	0
 32402  007ADC  0100               	movlb	0	; () banked
 32403  007ADE  6F69               	movwf	StringContainsCaseInsensitive@MatchAmount& (0+255),b
 32404                           
 32405                           ;MISC.c: 357: unsigned char i = 0;
 32406  007AE0  0E00               	movlw	0
 32407  007AE2  0100               	movlb	0	; () banked
 32408  007AE4  6F6D               	movwf	StringContainsCaseInsensitive@i& (0+255),b
 32409                           
 32410                           ;MISC.c: 359: for(i=0;i<254;i++)
 32411  007AE6  0E00               	movlw	0
 32412  007AE8  0100               	movlb	0	; () banked
 32413  007AEA  6F6D               	movwf	StringContainsCaseInsensitive@i& (0+255),b
 32414  007AEC                     l10528:
 32415                           
 32416                           ; BSR set to: 0
 32417  007AEC  0EFD               	movlw	253
 32418  007AEE  0100               	movlb	0	; () banked
 32419  007AF0  656D               	cpfsgt	StringContainsCaseInsensitive@i& (0+255),b
 32420  007AF2  D001               	goto	l10532
 32421                           
 32422                           ; BSR set to: 0
 32423  007AF4  D0AF               	goto	l10574
 32424  007AF6                     l10532:
 32425                           
 32426                           ; BSR set to: 0
 32427                           ;MISC.c: 360: {
 32428                           ;MISC.c: 361: if(That[i] == 0)
 32429  007AF6  0100               	movlb	0	; () banked
 32430  007AF8  516D               	movf	StringContainsCaseInsensitive@i& (0+255),w,b
 32431  007AFA  0D01               	mullw	1
 32432  007AFC  C065  F067         	movff	StringContainsCaseInsensitive@That,??_StringContainsCaseInsensitive
 32433  007B00  C066  F068         	movff	StringContainsCaseInsensitive@That+1,??_StringContainsCaseInsensitive+1
 32434  007B04  50F3               	movf	prodl,w,c
 32435  007B06  0100               	movlb	0	; () banked
 32436  007B08  2767               	addwf	??_StringContainsCaseInsensitive& (0+255),f,b
 32437  007B0A  50F4               	movf	prodh,w,c
 32438  007B0C  0100               	movlb	0	; () banked
 32439  007B0E  2368               	addwfc	(??_StringContainsCaseInsensitive+1)& (0+255),f,b
 32440  007B10  C067  FFF6         	movff	??_StringContainsCaseInsensitive,tblptrl
 32441  007B14  C068  FFF7         	movff	??_StringContainsCaseInsensitive+1,tblptrh
 32442  007B18  0E00               	movlw	low (__mediumconst shr (0+16))
 32443  007B1A  6EF8               	movwf	tblptru,c
 32444  007B1C  0E0F               	movlw	(high __ramtop+-1)
 32445  007B1E  64F7               	cpfsgt	tblptrh,c
 32446  007B20  D003               	bra	u10807
 32447  007B22  0008               	tblrd		*
 32448  007B24  50F5               	movf	tablat,w,c
 32449  007B26  D005               	bra	u10800
 32450  007B28                     u10807:
 32451  007B28  CFF6 FFE9          	movff	tblptrl,fsr0l
 32452  007B2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32453  007B30  50EF               	movf	indf0,w,c
 32454  007B32                     u10800:
 32455  007B32  0900               	iorlw	0
 32456  007B34  A4D8               	btfss	status,2,c
 32457  007B36  D003               	goto	l10536
 32458                           
 32459                           ;MISC.c: 362: {
 32460                           ;MISC.c: 363: MatchAmount = i;
 32461  007B38  C06D  F069         	movff	StringContainsCaseInsensitive@i,StringContainsCaseInsensitive@MatchAmount
 32462                           
 32463                           ;MISC.c: 364: break;
 32464  007B3C  D08B               	goto	l10574
 32465  007B3E                     l10536:
 32466  007B3E  0100               	movlb	0	; () banked
 32467  007B40  2B6D               	incf	StringContainsCaseInsensitive@i& (0+255),f,b
 32468  007B42  D7D4               	goto	l10528
 32469                           
 32470                           ; BSR set to: 0
 32471                           ;MISC.c: 365: }
 32472                           ;MISC.c: 366: }
 32473                           ;MISC.c: 367: while(*This != 0)
 32474                           
 32475                           ; BSR set to: 0
 32476  007B44  D087               	goto	l10574
 32477  007B46                     l10540:
 32478                           
 32479                           ;MISC.c: 368: {
 32480                           ;MISC.c: 369: tempThis = *This;
 32481  007B46  C063  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 32482  007B4A  C064  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 32483  007B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 32484  007B50  6EF8               	movwf	tblptru,c
 32485  007B52  0E0F               	movlw	(high __ramtop+-1)
 32486  007B54  64F7               	cpfsgt	tblptrh,c
 32487  007B56  D003               	bra	u10837
 32488  007B58  0008               	tblrd		*
 32489  007B5A  50F5               	movf	tablat,w,c
 32490  007B5C  D005               	bra	u10830
 32491  007B5E                     u10837:
 32492  007B5E  CFF6 FFE9          	movff	tblptrl,fsr0l
 32493  007B62  CFF7 FFEA          	movff	tblptrh,fsr0h
 32494  007B66  50EF               	movf	indf0,w,c
 32495  007B68                     u10830:
 32496  007B68  0100               	movlb	0	; () banked
 32497  007B6A  6F6B               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 32498                           
 32499                           ;MISC.c: 370: tempThat = *That;
 32500  007B6C  C065  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 32501  007B70  C066  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 32502  007B74  0E00               	movlw	low (__mediumconst shr (0+16))
 32503  007B76  6EF8               	movwf	tblptru,c
 32504  007B78  0E0F               	movlw	(high __ramtop+-1)
 32505  007B7A  64F7               	cpfsgt	tblptrh,c
 32506  007B7C  D003               	bra	u10847
 32507  007B7E  0008               	tblrd		*
 32508  007B80  50F5               	movf	tablat,w,c
 32509  007B82  D005               	bra	u10840
 32510  007B84                     u10847:
 32511  007B84  CFF6 FFE9          	movff	tblptrl,fsr0l
 32512  007B88  CFF7 FFEA          	movff	tblptrh,fsr0h
 32513  007B8C  50EF               	movf	indf0,w,c
 32514  007B8E                     u10840:
 32515  007B8E  0100               	movlb	0	; () banked
 32516  007B90  6F6C               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 32517                           
 32518                           ; BSR set to: 0
 32519                           ;MISC.c: 371: lowercaseChar(&tempThis);
 32520  007B92  0E6B               	movlw	low StringContainsCaseInsensitive@tempThis
 32521  007B94  0100               	movlb	0	; () banked
 32522  007B96  6F60               	movwf	lowercaseChar@Input& (0+255),b
 32523  007B98  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 32524  007B9A  0100               	movlb	0	; () banked
 32525  007B9C  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 32526  007B9E  EC0E  F056         	call	_lowercaseChar	;wreg free
 32527                           
 32528                           ;MISC.c: 372: lowercaseChar(&tempThat);
 32529  007BA2  0E6C               	movlw	low StringContainsCaseInsensitive@tempThat
 32530  007BA4  0100               	movlb	0	; () banked
 32531  007BA6  6F60               	movwf	lowercaseChar@Input& (0+255),b
 32532  007BA8  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 32533  007BAA  0100               	movlb	0	; () banked
 32534  007BAC  6F61               	movwf	(lowercaseChar@Input+1)& (0+255),b
 32535  007BAE  EC0E  F056         	call	_lowercaseChar	;wreg free
 32536                           
 32537                           ;MISC.c: 374: if(tempThis == tempThat)
 32538  007BB2  0100               	movlb	0	; () banked
 32539  007BB4  516C               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 32540  007BB6  0100               	movlb	0	; () banked
 32541  007BB8  196B               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 32542  007BBA  A4D8               	btfss	status,2,c
 32543  007BBC  D03A               	goto	l10568
 32544                           
 32545                           ; BSR set to: 0
 32546                           ;MISC.c: 375: {
 32547                           ;MISC.c: 376: MatchCount++;
 32548  007BBE  0100               	movlb	0	; () banked
 32549  007BC0  2B6A               	incf	StringContainsCaseInsensitive@MatchCount& (0+255),f,b
 32550                           
 32551                           ;MISC.c: 377: That++;
 32552  007BC2  0100               	movlb	0	; () banked
 32553  007BC4  4B65               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 32554  007BC6  2B66               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 32555                           
 32556                           ; BSR set to: 0
 32557                           ;MISC.c: 378: if(*That == 0)
 32558  007BC8  C065  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 32559  007BCC  C066  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 32560  007BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 32561  007BD2  6EF8               	movwf	tblptru,c
 32562  007BD4  0E0F               	movlw	(high __ramtop+-1)
 32563  007BD6  64F7               	cpfsgt	tblptrh,c
 32564  007BD8  D003               	bra	u10867
 32565  007BDA  0008               	tblrd		*
 32566  007BDC  50F5               	movf	tablat,w,c
 32567  007BDE  D005               	bra	u10860
 32568  007BE0                     u10867:
 32569  007BE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 32570  007BE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 32571  007BE8  50EF               	movf	indf0,w,c
 32572  007BEA                     u10860:
 32573  007BEA  0900               	iorlw	0
 32574  007BEC  A4D8               	btfss	status,2,c
 32575  007BEE  D00A               	goto	l10562
 32576                           
 32577                           ;MISC.c: 379: {
 32578                           ;MISC.c: 380: if(MatchAmount == MatchCount)
 32579  007BF0  0100               	movlb	0	; () banked
 32580  007BF2  516A               	movf	StringContainsCaseInsensitive@MatchCount& (0+255),w,b
 32581  007BF4  0100               	movlb	0	; () banked
 32582  007BF6  1969               	xorwf	StringContainsCaseInsensitive@MatchAmount& (0+255),w,b
 32583  007BF8  A4D8               	btfss	status,2,c
 32584  007BFA  D002               	goto	l10558
 32585                           
 32586                           ; BSR set to: 0
 32587                           ;MISC.c: 381: {
 32588                           ;MISC.c: 382: return 1;
 32589  007BFC  0E01               	movlw	1
 32590                           
 32591                           ; BSR set to: 0
 32592  007BFE  0012               	return	
 32593  007C00                     l10558:
 32594                           
 32595                           ; BSR set to: 0
 32596                           ;MISC.c: 383: }
 32597                           ;MISC.c: 384: return 0;
 32598  007C00  0E00               	movlw	0
 32599                           
 32600                           ; BSR set to: 0
 32601  007C02  0012               	return	
 32602  007C04                     l10562:
 32603                           
 32604                           ;MISC.c: 385: }
 32605                           ;MISC.c: 386: if(*This == 0)
 32606  007C04  C063  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 32607  007C08  C064  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 32608  007C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 32609  007C0E  6EF8               	movwf	tblptru,c
 32610  007C10  0E0F               	movlw	(high __ramtop+-1)
 32611  007C12  64F7               	cpfsgt	tblptrh,c
 32612  007C14  D003               	bra	u10897
 32613  007C16  0008               	tblrd		*
 32614  007C18  50F5               	movf	tablat,w,c
 32615  007C1A  D005               	bra	u10890
 32616  007C1C                     u10897:
 32617  007C1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 32618  007C20  CFF7 FFEA          	movff	tblptrh,fsr0h
 32619  007C24  50EF               	movf	indf0,w,c
 32620  007C26                     u10890:
 32621  007C26  0900               	iorlw	0
 32622  007C28  A4D8               	btfss	status,2,c
 32623  007C2A  D010               	goto	l10572
 32624                           
 32625                           ;MISC.c: 387: {
 32626                           ;MISC.c: 388: return 0;
 32627  007C2C  0E00               	movlw	0
 32628  007C2E  0012               	return	
 32629                           
 32630                           ;MISC.c: 389: }
 32631                           ;MISC.c: 390: }
 32632  007C30  D00D               	goto	l10572
 32633  007C32                     l10568:
 32634                           
 32635                           ;MISC.c: 391: else
 32636                           ;MISC.c: 392: {
 32637                           ;MISC.c: 393: That -= MatchCount;
 32638  007C32  0100               	movlb	0	; () banked
 32639  007C34  516A               	movf	StringContainsCaseInsensitive@MatchCount& (0+255),w,b
 32640  007C36  0D01               	mullw	1
 32641  007C38  50F3               	movf	prodl,w,c
 32642  007C3A  0100               	movlb	0	; () banked
 32643  007C3C  5F65               	subwf	StringContainsCaseInsensitive@That& (0+255),f,b
 32644  007C3E  50F4               	movf	prodh,w,c
 32645  007C40  0100               	movlb	0	; () banked
 32646  007C42  5B66               	subwfb	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 32647                           
 32648                           ; BSR set to: 0
 32649                           ;MISC.c: 394: MatchCount = 0;
 32650  007C44  0E00               	movlw	0
 32651  007C46  0100               	movlb	0	; () banked
 32652  007C48  6F6A               	movwf	StringContainsCaseInsensitive@MatchCount& (0+255),b
 32653  007C4A  D000               	goto	l10572
 32654  007C4C                     l10572:
 32655                           
 32656                           ;MISC.c: 395: }
 32657                           ;MISC.c: 396: This++;
 32658  007C4C  0100               	movlb	0	; () banked
 32659  007C4E  4B63               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 32660  007C50  2B64               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 32661  007C52  D000               	goto	l10574
 32662  007C54                     l10574:
 32663  007C54  C063  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 32664  007C58  C064  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 32665  007C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 32666  007C5E  6EF8               	movwf	tblptru,c
 32667  007C60  0E0F               	movlw	(high __ramtop+-1)
 32668  007C62  64F7               	cpfsgt	tblptrh,c
 32669  007C64  D003               	bra	u10917
 32670  007C66  0008               	tblrd		*
 32671  007C68  50F5               	movf	tablat,w,c
 32672  007C6A  D005               	bra	u10910
 32673  007C6C                     u10917:
 32674  007C6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 32675  007C70  CFF7 FFEA          	movff	tblptrh,fsr0h
 32676  007C74  50EF               	movf	indf0,w,c
 32677  007C76                     u10910:
 32678  007C76  0900               	iorlw	0
 32679  007C78  A4D8               	btfss	status,2,c
 32680  007C7A  D765               	goto	l10540
 32681                           
 32682                           ;MISC.c: 397: }
 32683                           ;MISC.c: 398: return 0;
 32684  007C7C  0E00               	movlw	0
 32685  007C7E  0012               	return	
 32686  007C80  0012               	return		;funcret
 32687  007C82                     __end_of_StringContainsCaseInsensitive:
 32688                           	opt stack 0
 32689                           tblptru	equ	0xFF8
 32690                           tblptrh	equ	0xFF7
 32691                           tblptrl	equ	0xFF6
 32692                           tablat	equ	0xFF5
 32693                           prodh	equ	0xFF4
 32694                           prodl	equ	0xFF3
 32695                           intcon	equ	0xFF2
 32696                           intcon2	equ	0xFF1
 32697                           indf0	equ	0xFEF
 32698                           postinc0	equ	0xFEE
 32699                           plusw0	equ	0xFEB
 32700                           fsr0h	equ	0xFEA
 32701                           fsr0l	equ	0xFE9
 32702                           wreg	equ	0xFE8
 32703                           indf1	equ	0xFE7
 32704                           postdec1	equ	0xFE5
 32705                           fsr1h	equ	0xFE2
 32706                           fsr1l	equ	0xFE1
 32707                           indf2	equ	0xFDF
 32708                           postinc2	equ	0xFDE
 32709                           postdec2	equ	0xFDD
 32710                           plusw2	equ	0xFDB
 32711                           fsr2h	equ	0xFDA
 32712                           fsr2l	equ	0xFD9
 32713                           status	equ	0xFD8
 32714                           
 32715 ;; *************** function _lowercaseChar *****************
 32716 ;; Defined at:
 32717 ;;		line 423 in file "MISC.c"
 32718 ;; Parameters:    Size  Location     Type
 32719 ;;  Input           2    0[BANK0 ] PTR unsigned char 
 32720 ;;		 -> GetNumberUnsigned@tempThis(1), GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsC
      +aseInsensitive@tempThis(1), 
 32721 ;;		 -> StringMatchCaseInsensitive@tempThat(1), StringMatchCaseInsensitive@tempThis(1), 
 32722 ;; Auto vars:     Size  Location     Type
 32723 ;;		None
 32724 ;; Return value:  Size  Location     Type
 32725 ;;		None               void
 32726 ;; Registers used:
 32727 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32728 ;; Tracked objects:
 32729 ;;		On entry : 0/0
 32730 ;;		On exit  : 0/0
 32731 ;;		Unchanged: 0/0
 32732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32736 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32737 ;;Total ram usage:        3 bytes
 32738 ;; Hardware stack levels used:    1
 32739 ;; Hardware stack levels required when called:    5
 32740 ;; This function calls:
 32741 ;;		Nothing
 32742 ;; This function is called by:
 32743 ;;		_StringMatchCaseInsensitive
 32744 ;;		_StringContainsCaseInsensitive
 32745 ;;		_GetNumber
 32746 ;;		_GetNumberUnsigned
 32747 ;; This function uses a non-reentrant model
 32748 ;;
 32749                           
 32750                           	psect	text73
 32751  00AC1C                     __ptext73:
 32752                           	opt stack 0
 32753  00AC1C                     _lowercaseChar:
 32754                           	opt stack 23
 32755                           
 32756                           ;MISC.c: 425: if((*Input >= 65) && (*Input <= 90 ))
 32757                           
 32758                           ;incstack = 0
 32759  00AC1C  C060  FFD9         	movff	lowercaseChar@Input,fsr2l
 32760  00AC20  C061  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 32761  00AC24  0E40               	movlw	64
 32762  00AC26  64DF               	cpfsgt	indf2,c
 32763  00AC28  0012               	return	
 32764  00AC2A  C060  FFD9         	movff	lowercaseChar@Input,fsr2l
 32765  00AC2E  C061  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 32766  00AC32  0E5B               	movlw	91
 32767  00AC34  60DF               	cpfslt	indf2,c
 32768  00AC36  0012               	return	
 32769                           
 32770                           ;MISC.c: 426: {
 32771                           ;MISC.c: 427: *Input += 32;
 32772  00AC38  C060  FFD9         	movff	lowercaseChar@Input,fsr2l
 32773  00AC3C  C061  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 32774  00AC40  0E20               	movlw	32
 32775  00AC42  26DF               	addwf	indf2,f,c
 32776  00AC44  0012               	return	
 32777  00AC46  0012               	return		;funcret
 32778  00AC48                     __end_of_lowercaseChar:
 32779                           	opt stack 0
 32780                           tblptru	equ	0xFF8
 32781                           tblptrh	equ	0xFF7
 32782                           tblptrl	equ	0xFF6
 32783                           tablat	equ	0xFF5
 32784                           prodh	equ	0xFF4
 32785                           prodl	equ	0xFF3
 32786                           intcon	equ	0xFF2
 32787                           intcon2	equ	0xFF1
 32788                           indf0	equ	0xFEF
 32789                           postinc0	equ	0xFEE
 32790                           plusw0	equ	0xFEB
 32791                           fsr0h	equ	0xFEA
 32792                           fsr0l	equ	0xFE9
 32793                           wreg	equ	0xFE8
 32794                           indf1	equ	0xFE7
 32795                           postdec1	equ	0xFE5
 32796                           fsr1h	equ	0xFE2
 32797                           fsr1l	equ	0xFE1
 32798                           indf2	equ	0xFDF
 32799                           postinc2	equ	0xFDE
 32800                           postdec2	equ	0xFDD
 32801                           plusw2	equ	0xFDB
 32802                           fsr2h	equ	0xFDA
 32803                           fsr2l	equ	0xFD9
 32804                           status	equ	0xFD8
 32805                           
 32806 ;; *************** function _EnterCommandMode *****************
 32807 ;; Defined at:
 32808 ;;		line 141 in file "Bluetooth.c"
 32809 ;; Parameters:    Size  Location     Type
 32810 ;;		None
 32811 ;; Auto vars:     Size  Location     Type
 32812 ;;  buf            50    0[BANK1 ] unsigned char [50]
 32813 ;;  count           1   50[BANK1 ] unsigned char 
 32814 ;; Return value:  Size  Location     Type
 32815 ;;                  1    wreg      unsigned char 
 32816 ;; Registers used:
 32817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32818 ;; Tracked objects:
 32819 ;;		On entry : 0/0
 32820 ;;		On exit  : 0/0
 32821 ;;		Unchanged: 0/0
 32822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32824 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32826 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32827 ;;Total ram usage:       51 bytes
 32828 ;; Hardware stack levels used:    1
 32829 ;; Hardware stack levels required when called:    9
 32830 ;; This function calls:
 32831 ;;		_BlueConnected
 32832 ;;		_ClearUSART
 32833 ;;		_ResetBlue
 32834 ;;		_StringContains
 32835 ;;		_UARTstring_CONST
 32836 ;;		_cleanBuffer
 32837 ;;		_delayUS
 32838 ;;		_sprintf
 32839 ;; This function is called by:
 32840 ;;		_BluetoothInitialSetup
 32841 ;; This function uses a non-reentrant model
 32842 ;;
 32843                           
 32844                           	psect	text74
 32845  008420                     __ptext74:
 32846                           	opt stack 0
 32847  008420                     _EnterCommandMode:
 32848                           	opt stack 19
 32849                           
 32850                           ;Bluetooth.c: 143: unsigned char count = 0;
 32851                           
 32852                           ;incstack = 0
 32853  008420  0E00               	movlw	0
 32854  008422  0101               	movlb	1	; () banked
 32855  008424  6F32               	movwf	EnterCommandMode@count& (0+255),b
 32856                           
 32857                           ;Bluetooth.c: 144: unsigned char buf[50];
 32858                           ;Bluetooth.c: 145: while(BlueConnected())
 32859  008426  D04D               	goto	l10720
 32860  008428                     l10708:
 32861                           
 32862                           ;Bluetooth.c: 146: {
 32863                           ;Bluetooth.c: 147: ResetBlue();
 32864  008428  EC2E  F04A         	call	_ResetBlue	;wreg free
 32865                           
 32866                           ;Bluetooth.c: 148: count++;
 32867  00842C  0101               	movlb	1	; () banked
 32868  00842E  2B32               	incf	EnterCommandMode@count& (0+255),f,b
 32869                           
 32870                           ; BSR set to: 1
 32871                           ;Bluetooth.c: 149: if(count > 4)
 32872  008430  0E04               	movlw	4
 32873  008432  0101               	movlb	1	; () banked
 32874  008434  6532               	cpfsgt	EnterCommandMode@count& (0+255),b
 32875  008436  D002               	goto	l10718
 32876                           
 32877                           ; BSR set to: 1
 32878                           ;Bluetooth.c: 150: {
 32879                           ;Bluetooth.c: 152: return 0;
 32880  008438  0E00               	movlw	0
 32881                           
 32882                           ; BSR set to: 1
 32883  00843A  0012               	return	
 32884  00843C                     l10718:
 32885                           
 32886                           ; BSR set to: 1
 32887                           ;Bluetooth.c: 153: }
 32888                           ;Bluetooth.c: 154: delayUS(50000);
 32889  00843C  0E50               	movlw	80
 32890  00843E  0100               	movlb	0	; () banked
 32891  008440  6F60               	movwf	delayUS@US& (0+255),b
 32892  008442  0EC3               	movlw	195
 32893  008444  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32894  008446  0E00               	movlw	0
 32895  008448  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32896  00844A  0E00               	movlw	0
 32897  00844C  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32898  00844E  EC96  F053         	call	_delayUS	;wreg free
 32899                           
 32900                           ;Bluetooth.c: 155: delayUS(50000);
 32901  008452  0E50               	movlw	80
 32902  008454  0100               	movlb	0	; () banked
 32903  008456  6F60               	movwf	delayUS@US& (0+255),b
 32904  008458  0EC3               	movlw	195
 32905  00845A  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32906  00845C  0E00               	movlw	0
 32907  00845E  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32908  008460  0E00               	movlw	0
 32909  008462  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32910  008464  EC96  F053         	call	_delayUS	;wreg free
 32911                           
 32912                           ;Bluetooth.c: 156: delayUS(50000);
 32913  008468  0E50               	movlw	80
 32914  00846A  0100               	movlb	0	; () banked
 32915  00846C  6F60               	movwf	delayUS@US& (0+255),b
 32916  00846E  0EC3               	movlw	195
 32917  008470  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32918  008472  0E00               	movlw	0
 32919  008474  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32920  008476  0E00               	movlw	0
 32921  008478  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32922  00847A  EC96  F053         	call	_delayUS	;wreg free
 32923                           
 32924                           ;Bluetooth.c: 157: delayUS(50000);
 32925  00847E  0E50               	movlw	80
 32926  008480  0100               	movlb	0	; () banked
 32927  008482  6F60               	movwf	delayUS@US& (0+255),b
 32928  008484  0EC3               	movlw	195
 32929  008486  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32930  008488  0E00               	movlw	0
 32931  00848A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32932  00848C  0E00               	movlw	0
 32933  00848E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32934  008490  EC96  F053         	call	_delayUS	;wreg free
 32935                           
 32936                           ;Bluetooth.c: 158: delayUS(50000);
 32937  008494  0E50               	movlw	80
 32938  008496  0100               	movlb	0	; () banked
 32939  008498  6F60               	movwf	delayUS@US& (0+255),b
 32940  00849A  0EC3               	movlw	195
 32941  00849C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32942  00849E  0E00               	movlw	0
 32943  0084A0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32944  0084A2  0E00               	movlw	0
 32945  0084A4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32946  0084A6  EC96  F053         	call	_delayUS	;wreg free
 32947                           
 32948                           ;Bluetooth.c: 159: delayUS(50000);
 32949  0084AA  0E50               	movlw	80
 32950  0084AC  0100               	movlb	0	; () banked
 32951  0084AE  6F60               	movwf	delayUS@US& (0+255),b
 32952  0084B0  0EC3               	movlw	195
 32953  0084B2  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32954  0084B4  0E00               	movlw	0
 32955  0084B6  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32956  0084B8  0E00               	movlw	0
 32957  0084BA  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32958  0084BC  EC96  F053         	call	_delayUS	;wreg free
 32959  0084C0  D000               	goto	l10720
 32960  0084C2                     l10720:
 32961  0084C2  EC55  F057         	call	_BlueConnected	;wreg free
 32962  0084C6  0900               	iorlw	0
 32963  0084C8  A4D8               	btfss	status,2,c
 32964  0084CA  D7AE               	goto	l10708
 32965                           
 32966                           ;Bluetooth.c: 160: }
 32967                           ;Bluetooth.c: 162: ClearUSART();
 32968  0084CC  EC18  F057         	call	_ClearUSART	;wreg free
 32969                           
 32970                           ;Bluetooth.c: 163: PIR1bits.RCIF = 0;
 32971  0084D0  9A9E               	bcf	3998,5,c	;volatile
 32972                           
 32973                           ;Bluetooth.c: 164: PIE1bits.RCIE = 1;
 32974  0084D2  8A9D               	bsf	3997,5,c	;volatile
 32975                           
 32976                           ;Bluetooth.c: 165: UARTstring_CONST("$$$");
 32977  0084D4  0EE1               	movlw	low STR_6
 32978  0084D6  0100               	movlb	0	; () banked
 32979  0084D8  6F62               	movwf	UARTstring_CONST@data& (0+255),b
 32980  0084DA  0EFF               	movlw	high STR_6
 32981  0084DC  0100               	movlb	0	; () banked
 32982  0084DE  6F63               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 32983  0084E0  EC98  F055         	call	_UARTstring_CONST	;wreg free
 32984                           
 32985                           ;Bluetooth.c: 166: delayUS(50000);
 32986  0084E4  0E50               	movlw	80
 32987  0084E6  0100               	movlb	0	; () banked
 32988  0084E8  6F60               	movwf	delayUS@US& (0+255),b
 32989  0084EA  0EC3               	movlw	195
 32990  0084EC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 32991  0084EE  0E00               	movlw	0
 32992  0084F0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 32993  0084F2  0E00               	movlw	0
 32994  0084F4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 32995  0084F6  EC96  F053         	call	_delayUS	;wreg free
 32996                           
 32997                           ;Bluetooth.c: 167: PIE1bits.RCIE = 0;
 32998  0084FA  9A9D               	bcf	3997,5,c	;volatile
 32999                           
 33000                           ;Bluetooth.c: 168: sprintf(buf,"CMD");
 33001  0084FC  0E00               	movlw	low EnterCommandMode@buf
 33002  0084FE  0100               	movlb	0	; () banked
 33003  008500  6FAE               	movwf	sprintf@sp& (0+255),b
 33004  008502  0E01               	movlw	high EnterCommandMode@buf
 33005  008504  0100               	movlb	0	; () banked
 33006  008506  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
 33007  008508  0EED               	movlw	low STR_7
 33008  00850A  0100               	movlb	0	; () banked
 33009  00850C  6FB0               	movwf	sprintf@f& (0+255),b
 33010  00850E  0EFF               	movlw	high STR_7
 33011  008510  0100               	movlb	0	; () banked
 33012  008512  6FB1               	movwf	(sprintf@f+1)& (0+255),b
 33013  008514  EC22  F016         	call	_sprintf	;wreg free
 33014                           
 33015                           ;Bluetooth.c: 169: if(StringContains(CommandString,buf))
 33016  008518  0E00               	movlw	low _CommandString
 33017  00851A  0100               	movlb	0	; () banked
 33018  00851C  6F60               	movwf	StringContains@This& (0+255),b
 33019  00851E  0E04               	movlw	high _CommandString
 33020  008520  0100               	movlb	0	; () banked
 33021  008522  6F61               	movwf	(StringContains@This+1)& (0+255),b
 33022  008524  0E00               	movlw	low EnterCommandMode@buf
 33023  008526  0100               	movlb	0	; () banked
 33024  008528  6F62               	movwf	StringContains@That& (0+255),b
 33025  00852A  0E01               	movlw	high EnterCommandMode@buf
 33026  00852C  0100               	movlb	0	; () banked
 33027  00852E  6F63               	movwf	(StringContains@That+1)& (0+255),b
 33028  008530  ECB7  F044         	call	_StringContains	;wreg free
 33029  008534  0900               	iorlw	0
 33030  008536  B4D8               	btfsc	status,2,c
 33031  008538  D010               	goto	l10746
 33032                           
 33033                           ;Bluetooth.c: 170: {
 33034                           ;Bluetooth.c: 171: cleanBuffer(CommandString,CommandStringPos);
 33035  00853A  0E00               	movlw	low _CommandString
 33036  00853C  0100               	movlb	0	; () banked
 33037  00853E  6F60               	movwf	cleanBuffer@data& (0+255),b
 33038  008540  0E04               	movlw	high _CommandString
 33039  008542  0100               	movlb	0	; () banked
 33040  008544  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 33041  008546  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 33042  00854A  0100               	movlb	0	; () banked
 33043  00854C  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 33044  00854E  EC3D  F053         	call	_cleanBuffer	;wreg free
 33045                           
 33046                           ;Bluetooth.c: 172: CommandStringPos = 0;
 33047  008552  0E00               	movlw	0
 33048  008554  6E3E               	movwf	_CommandStringPos,c	;volatile
 33049                           
 33050                           ;Bluetooth.c: 173: return 1;
 33051  008556  0E01               	movlw	1
 33052  008558  0012               	return	
 33053  00855A                     l10746:
 33054                           
 33055                           ;Bluetooth.c: 174: }
 33056                           ;Bluetooth.c: 175: cleanBuffer(CommandString,CommandStringPos);
 33057  00855A  0E00               	movlw	low _CommandString
 33058  00855C  0100               	movlb	0	; () banked
 33059  00855E  6F60               	movwf	cleanBuffer@data& (0+255),b
 33060  008560  0E04               	movlw	high _CommandString
 33061  008562  0100               	movlb	0	; () banked
 33062  008564  6F61               	movwf	(cleanBuffer@data+1)& (0+255),b
 33063  008566  C03E  F062         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 33064  00856A  0100               	movlb	0	; () banked
 33065  00856C  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 33066  00856E  EC3D  F053         	call	_cleanBuffer	;wreg free
 33067                           
 33068                           ;Bluetooth.c: 176: CommandStringPos = 0;
 33069  008572  0E00               	movlw	0
 33070  008574  6E3E               	movwf	_CommandStringPos,c	;volatile
 33071                           
 33072                           ;Bluetooth.c: 177: return 0;
 33073  008576  0E00               	movlw	0
 33074  008578  0012               	return	
 33075  00857A  0012               	return		;funcret
 33076  00857C                     __end_of_EnterCommandMode:
 33077                           	opt stack 0
 33078                           tblptru	equ	0xFF8
 33079                           tblptrh	equ	0xFF7
 33080                           tblptrl	equ	0xFF6
 33081                           tablat	equ	0xFF5
 33082                           prodh	equ	0xFF4
 33083                           prodl	equ	0xFF3
 33084                           intcon	equ	0xFF2
 33085                           intcon2	equ	0xFF1
 33086                           indf0	equ	0xFEF
 33087                           postinc0	equ	0xFEE
 33088                           plusw0	equ	0xFEB
 33089                           fsr0h	equ	0xFEA
 33090                           fsr0l	equ	0xFE9
 33091                           wreg	equ	0xFE8
 33092                           indf1	equ	0xFE7
 33093                           postdec1	equ	0xFE5
 33094                           fsr1h	equ	0xFE2
 33095                           fsr1l	equ	0xFE1
 33096                           indf2	equ	0xFDF
 33097                           postinc2	equ	0xFDE
 33098                           postdec2	equ	0xFDD
 33099                           plusw2	equ	0xFDB
 33100                           fsr2h	equ	0xFDA
 33101                           fsr2l	equ	0xFD9
 33102                           status	equ	0xFD8
 33103                           
 33104 ;; *************** function _sprintf *****************
 33105 ;; Defined at:
 33106 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 33107 ;; Parameters:    Size  Location     Type
 33108 ;;  sp              2   78[BANK0 ] PTR unsigned char 
 33109 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), EnterCommandMode@buf(50), Init_System@buf(50), 
 33110 ;;		 -> main@buf(100), 
 33111 ;;  f               2   80[BANK0 ] PTR const unsigned char 
 33112 ;;		 -> STR_140(19), STR_138(15), STR_120(19), STR_118(27), 
 33113 ;;		 -> STR_117(16), STR_114(21), STR_112(20), STR_97(27), 
 33114 ;;		 -> STR_83(44), STR_82(54), STR_81(54), STR_80(63), 
 33115 ;;		 -> STR_69(42), STR_55(44), STR_54(46), STR_52(44), 
 33116 ;;		 -> STR_51(21), STR_37(17), STR_36(17), STR_35(20), 
 33117 ;;		 -> STR_33(23), STR_32(21), STR_31(21), STR_21(4), 
 33118 ;;		 -> STR_19(11), STR_18(28), STR_12(4), STR_11(7), 
 33119 ;;		 -> STR_10(4), STR_9(24), STR_7(4), STR_5(23), 
 33120 ;;		 -> STR_4(15), STR_1(50), 
 33121 ;; Auto vars:     Size  Location     Type
 33122 ;;  idx             1  101[BANK0 ] unsigned char 
 33123 ;;  val             4  116[BANK0 ] unsigned long 
 33124 ;;  tmpval          4  110[BANK0 ] struct .
 33125 ;;  fval            3  120[BANK0 ] struct .
 33126 ;;  flag            2  125[BANK0 ] unsigned short 
 33127 ;;  width           2  123[BANK0 ] int 
 33128 ;;  exp             2  114[BANK0 ] int 
 33129 ;;  prec            2  108[BANK0 ] int 
 33130 ;;  ap              2  106[BANK0 ] PTR void [1]
 33131 ;;		 -> ?_sprintf(2), 
 33132 ;;  len             2  104[BANK0 ] unsigned int 
 33133 ;;  cp              2  102[BANK0 ] PTR const unsigned char 
 33134 ;;		 -> STR_189(7), sprintf@c(1), Frequency(4), PCBVersion(5), 
 33135 ;;		 -> FirmVersion(9), BluetoothInitialSetup@BroadcastTEMP(21), GetNumber@temp(4), main@BroadcastTEMP(21), 
 33136 ;;  c               1  127[BANK0 ] char 
 33137 ;;  d               1    0        unsigned char 
 33138 ;; Return value:  Size  Location     Type
 33139 ;;                  2   78[BANK0 ] int 
 33140 ;; Registers used:
 33141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33142 ;; Tracked objects:
 33143 ;;		On entry : 0/0
 33144 ;;		On exit  : 0/0
 33145 ;;		Unchanged: 0/0
 33146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33147 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33148 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33149 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33150 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33151 ;;Total ram usage:       50 bytes
 33152 ;; Hardware stack levels used:    1
 33153 ;; Hardware stack levels required when called:    8
 33154 ;; This function calls:
 33155 ;;		___awdiv
 33156 ;;		___ftadd
 33157 ;;		___ftge
 33158 ;;		___ftmul
 33159 ;;		___ftneg
 33160 ;;		___ftsub
 33161 ;;		___fttol
 33162 ;;		___lldiv
 33163 ;;		___llmod
 33164 ;;		___lltoft
 33165 ;;		___wmul
 33166 ;;		__div_to_l_
 33167 ;;		__tdiv_to_l_
 33168 ;;		_fround
 33169 ;;		_isdigit
 33170 ;;		_scale
 33171 ;; This function is called by:
 33172 ;;		_main
 33173 ;;		_Init_System
 33174 ;;		_EnterCommandMode
 33175 ;;		_BluetoothInitialSetup
 33176 ;;		_UseBluetooth
 33177 ;; This function uses a non-reentrant model
 33178 ;;
 33179                           
 33180                           	psect	text75
 33181  002C44                     __ptext75:
 33182                           	opt stack 0
 33183  002C44                     _sprintf:
 33184                           	opt stack 22
 33185                           
 33186                           ;doprnt.c: 494: va_list ap;
 33187                           ;doprnt.c: 499: signed char c;
 33188                           ;doprnt.c: 501: int width;
 33189                           ;doprnt.c: 504: int prec;
 33190                           ;doprnt.c: 508: unsigned short flag;
 33191                           ;doprnt.c: 515: char d;
 33192                           ;doprnt.c: 516: double fval;
 33193                           ;doprnt.c: 517: int exp;
 33194                           ;doprnt.c: 523: union {
 33195                           ;doprnt.c: 524: unsigned long vd;
 33196                           ;doprnt.c: 525: double integ;
 33197                           ;doprnt.c: 526: } tmpval;
 33198                           ;doprnt.c: 528: unsigned long val;
 33199                           ;doprnt.c: 529: unsigned len;
 33200                           ;doprnt.c: 530: const char * cp;
 33201                           ;doprnt.c: 533: *ap = __va_start();
 33202                           
 33203                           ;incstack = 0
 33204  002C44  0EB2               	movlw	low (?_sprintf+4)
 33205  002C46  0100               	movlb	0	; () banked
 33206  002C48  6FCA               	movwf	sprintf@ap& (0+255),b
 33207  002C4A  0E00               	movlw	high (?_sprintf+4)
 33208  002C4C  0100               	movlb	0	; () banked
 33209  002C4E  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
 33210                           
 33211                           ;doprnt.c: 536: while(c = *f++) {
 33212  002C50  EFC5  F01D         	goto	l10274
 33213  002C54                     l9898:
 33214                           
 33215                           ; BSR set to: 0
 33216                           ;doprnt.c: 538: if(c != '%')
 33217  002C54  0E25               	movlw	37
 33218  002C56  0100               	movlb	0	; () banked
 33219  002C58  19DF               	xorwf	sprintf@c& (0+255),w,b
 33220  002C5A  B4D8               	btfsc	status,2,c
 33221  002C5C  D00B               	goto	l9904
 33222                           
 33223                           ; BSR set to: 0
 33224                           ;doprnt.c: 540: {
 33225                           ;doprnt.c: 541: ((*sp++ = (c)));
 33226  002C5E  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33227  002C62  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33228  002C66  C0DF  FFDF         	movff	sprintf@c,indf2
 33229                           
 33230                           ; BSR set to: 0
 33231  002C6A  0100               	movlb	0	; () banked
 33232  002C6C  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33233  002C6E  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33234                           
 33235                           ;doprnt.c: 542: continue;
 33236  002C70  EFC5  F01D         	goto	l10274
 33237  002C74                     l9904:
 33238                           
 33239                           ; BSR set to: 0
 33240                           ;doprnt.c: 543: }
 33241                           ;doprnt.c: 546: width = 0;
 33242  002C74  0E00               	movlw	0
 33243  002C76  0100               	movlb	0	; () banked
 33244  002C78  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 33245  002C7A  0E00               	movlw	0
 33246  002C7C  6FDB               	movwf	sprintf@width& (0+255),b
 33247                           
 33248                           ;doprnt.c: 548: flag = 0;
 33249  002C7E  0E00               	movlw	0
 33250  002C80  0100               	movlb	0	; () banked
 33251  002C82  6FDE               	movwf	(sprintf@flag+1)& (0+255),b
 33252  002C84  0E00               	movlw	0
 33253  002C86  6FDD               	movwf	sprintf@flag& (0+255),b
 33254                           
 33255                           ; BSR set to: 0
 33256                           ;doprnt.c: 551: switch(*f) {
 33257                           
 33258                           ;doprnt.c: 550: for(;;) {
 33259  002C88  D007               	goto	l9910
 33260  002C8A                     l9906:
 33261                           
 33262                           ;doprnt.c: 580: flag |= 0x04;
 33263  002C8A  0100               	movlb	0	; () banked
 33264  002C8C  85DD               	bsf	sprintf@flag& (0+255),2,b
 33265                           
 33266                           ;doprnt.c: 581: f++;
 33267  002C8E  0100               	movlb	0	; () banked
 33268  002C90  4BB0               	infsnz	sprintf@f& (0+255),f,b
 33269  002C92  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 33270                           
 33271                           ;doprnt.c: 582: continue;
 33272  002C94  D001               	goto	l9910
 33273                           
 33274                           ; BSR set to: 0
 33275                           ;doprnt.c: 584: }
 33276  002C96  D00C               	goto	l9912
 33277  002C98                     l9910:
 33278  002C98  C0B0  FFF6         	movff	sprintf@f,tblptrl
 33279  002C9C  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 33280  002CA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33281  002CA0  6AF8               	clrf	tblptru,c
 33282  002CA2                     	endif
 33283  002CA2                     	if	0	;tblptru may be non-zero
 33284  002CA2                     	endif
 33285  002CA2  0008               	tblrd		*
 33286  002CA4  50F5               	movf	tablat,w,c
 33287                           
 33288                           ; Switch size 1, requested type "space"
 33289                           ; Number of cases is 1, Range of values is 48 to 48
 33290                           ; switch strategies available:
 33291                           ; Name         Instructions Cycles
 33292                           ; simple_byte            4     3 (average)
 33293                           ;	Chosen strategy is simple_byte
 33294  002CA6  0A30               	xorlw	48	; case 48
 33295  002CA8  B4D8               	btfsc	status,2,c
 33296  002CAA  D7EF               	goto	l9906
 33297                           
 33298                           ;doprnt.c: 585: break;
 33299  002CAC  D001               	goto	l9912
 33300                           
 33301                           ;doprnt.c: 586: }
 33302  002CAE  D7F4               	goto	l9910
 33303  002CB0                     l9912:
 33304                           
 33305                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 33306  002CB0  C0B0  FFF6         	movff	sprintf@f,tblptrl
 33307  002CB4  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 33308  002CB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33309  002CB8  6AF8               	clrf	tblptru,c
 33310  002CBA                     	endif
 33311  002CBA                     	if	0	;tblptru may be non-zero
 33312  002CBA                     	endif
 33313  002CBA  0008               	tblrd		*
 33314  002CBC  50F5               	movf	tablat,w,c
 33315  002CBE  ECE1  F055         	call	_isdigit
 33316  002CC2  A0D8               	btfss	status,0,c
 33317  002CC4  D110               	goto	l9976
 33318                           
 33319                           ;doprnt.c: 598: width = 0;
 33320  002CC6  0E00               	movlw	0
 33321  002CC8  0100               	movlb	0	; () banked
 33322  002CCA  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 33323  002CCC  0E00               	movlw	0
 33324  002CCE  6FDB               	movwf	sprintf@width& (0+255),b
 33325  002CD0  D000               	goto	l9916
 33326  002CD2                     l9916:
 33327                           
 33328                           ;doprnt.c: 600: width *= 10;
 33329  002CD2  C0DB  F06E         	movff	sprintf@width,___wmul@multiplier
 33330  002CD6  C0DC  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
 33331  002CDA  0E00               	movlw	0
 33332  002CDC  0100               	movlb	0	; () banked
 33333  002CDE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33334  002CE0  0E0A               	movlw	10
 33335  002CE2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 33336  002CE4  EC15  F055         	call	___wmul	;wreg free
 33337  002CE8  C06E  F0DB         	movff	?___wmul,sprintf@width
 33338  002CEC  C06F  F0DC         	movff	?___wmul+1,sprintf@width+1
 33339                           
 33340                           ;doprnt.c: 601: width += *f++ - '0';
 33341  002CF0  0ED0               	movlw	208
 33342  002CF2  0100               	movlb	0	; () banked
 33343  002CF4  6FBC               	movwf	??_sprintf& (0+255),b
 33344  002CF6  0EFF               	movlw	255
 33345  002CF8  0100               	movlb	0	; () banked
 33346  002CFA  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33347  002CFC  C0B0  FFF6         	movff	sprintf@f,tblptrl
 33348  002D00  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 33349  002D04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33350  002D04  6AF8               	clrf	tblptru,c
 33351  002D06                     	endif
 33352  002D06                     	if	0	;tblptru may be non-zero
 33353  002D06                     	endif
 33354  002D06  0008               	tblrd		*
 33355  002D08  50F5               	movf	tablat,w,c
 33356  002D0A  0100               	movlb	0	; () banked
 33357  002D0C  6FBE               	movwf	(??_sprintf+2)& (0+255),b
 33358  002D0E  6BBF               	clrf	(??_sprintf+3)& (0+255),b
 33359  002D10  0100               	movlb	0	; () banked
 33360  002D12  51BC               	movf	??_sprintf& (0+255),w,b
 33361  002D14  0100               	movlb	0	; () banked
 33362  002D16  27BE               	addwf	(??_sprintf+2)& (0+255),f,b
 33363  002D18  0100               	movlb	0	; () banked
 33364  002D1A  51BD               	movf	(??_sprintf+1)& (0+255),w,b
 33365  002D1C  0100               	movlb	0	; () banked
 33366  002D1E  23BF               	addwfc	(??_sprintf+3)& (0+255),f,b
 33367  002D20  0100               	movlb	0	; () banked
 33368  002D22  51BE               	movf	(??_sprintf+2)& (0+255),w,b
 33369  002D24  0100               	movlb	0	; () banked
 33370  002D26  27DB               	addwf	sprintf@width& (0+255),f,b
 33371  002D28  0100               	movlb	0	; () banked
 33372  002D2A  51BF               	movf	(??_sprintf+3)& (0+255),w,b
 33373  002D2C  0100               	movlb	0	; () banked
 33374  002D2E  23DC               	addwfc	(sprintf@width+1)& (0+255),f,b
 33375                           
 33376                           ; BSR set to: 0
 33377  002D30  0100               	movlb	0	; () banked
 33378  002D32  4BB0               	infsnz	sprintf@f& (0+255),f,b
 33379  002D34  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 33380                           
 33381                           ; BSR set to: 0
 33382                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 33383  002D36  C0B0  FFF6         	movff	sprintf@f,tblptrl
 33384  002D3A  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 33385  002D3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33386  002D3E  6AF8               	clrf	tblptru,c
 33387  002D40                     	endif
 33388  002D40                     	if	0	;tblptru may be non-zero
 33389  002D40                     	endif
 33390  002D40  0008               	tblrd		*
 33391  002D42  50F5               	movf	tablat,w,c
 33392  002D44  ECE1  F055         	call	_isdigit
 33393  002D48  A0D8               	btfss	status,0,c
 33394  002D4A  D0CD               	goto	l9976
 33395  002D4C  D7C2               	goto	l9916
 33396                           
 33397                           ;doprnt.c: 635: switch(c = *f++) {
 33398                           
 33399                           ;doprnt.c: 608: }
 33400                           ;doprnt.c: 633: loop:
 33401  002D4E  D0CB               	goto	l9976
 33402                           
 33403                           ;doprnt.c: 638: goto alldone;
 33404                           
 33405                           ;doprnt.c: 637: case 0:
 33406  002D50  EFD7  F01D         	goto	l10276
 33407  002D54                     l9924:
 33408                           
 33409                           ;doprnt.c: 643: flag |= 0x10;
 33410  002D54  0100               	movlb	0	; () banked
 33411  002D56  89DD               	bsf	sprintf@flag& (0+255),4,b
 33412                           
 33413                           ;doprnt.c: 644: goto loop;
 33414  002D58  D0C6               	goto	l9976
 33415  002D5A                     l9926:
 33416                           
 33417                           ; BSR set to: 0
 33418                           ;doprnt.c: 663: flag |= 0x400;
 33419  002D5A  0100               	movlb	0	; () banked
 33420  002D5C  85DE               	bsf	(sprintf@flag+1)& (0+255),2,b
 33421                           
 33422                           ; BSR set to: 0
 33423                           ;doprnt.c: 698: case 'i':
 33424                           ;doprnt.c: 699: break;
 33425                           
 33426                           ; BSR set to: 0
 33427                           
 33428                           ;doprnt.c: 697: case 'd':
 33429                           
 33430                           ;doprnt.c: 664: break;
 33431  002D5E  D0F0               	goto	l9978
 33432                           
 33433                           ; BSR set to: 0
 33434                           
 33435                           ;doprnt.c: 712: case 'X':
 33436  002D60  D000               	goto	l9928
 33437  002D62                     l9928:
 33438                           
 33439                           ; BSR set to: 0
 33440                           ;doprnt.c: 718: case 'x':
 33441                           ;doprnt.c: 721: flag |= 0x80;
 33442  002D62  0100               	movlb	0	; () banked
 33443  002D64  8FDD               	bsf	sprintf@flag& (0+255),7,b
 33444                           
 33445                           ;doprnt.c: 723: break;
 33446  002D66  D0EC               	goto	l9978
 33447  002D68                     l9930:
 33448                           
 33449                           ; BSR set to: 0
 33450                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 33451  002D68  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33452  002D6C  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33453  002D70  CFDE F0C6          	movff	postinc2,sprintf@cp
 33454  002D74  CFDD F0C7          	movff	postdec2,sprintf@cp+1
 33455                           
 33456                           ; BSR set to: 0
 33457  002D78  0E02               	movlw	2
 33458  002D7A  0100               	movlb	0	; () banked
 33459  002D7C  27CA               	addwf	sprintf@ap& (0+255),f,b
 33460  002D7E  0E00               	movlw	0
 33461  002D80  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 33462                           
 33463                           ; BSR set to: 0
 33464                           ;doprnt.c: 740: if(!cp)
 33465  002D82  0100               	movlb	0	; () banked
 33466  002D84  51C6               	movf	sprintf@cp& (0+255),w,b
 33467  002D86  0100               	movlb	0	; () banked
 33468  002D88  11C7               	iorwf	(sprintf@cp+1)& (0+255),w,b
 33469  002D8A  A4D8               	btfss	status,2,c
 33470  002D8C  D007               	goto	l9938
 33471                           
 33472                           ; BSR set to: 0
 33473                           ;doprnt.c: 741: cp = "(null)";
 33474  002D8E  0E85               	movlw	low STR_189
 33475  002D90  0100               	movlb	0	; () banked
 33476  002D92  6FC6               	movwf	sprintf@cp& (0+255),b
 33477  002D94  0EFF               	movlw	high STR_189
 33478  002D96  0100               	movlb	0	; () banked
 33479  002D98  6FC7               	movwf	(sprintf@cp+1)& (0+255),b
 33480  002D9A  D000               	goto	l9938
 33481  002D9C                     l9938:
 33482                           
 33483                           ; BSR set to: 0
 33484                           ;doprnt.c: 745: len = 0;
 33485  002D9C  0E00               	movlw	0
 33486  002D9E  0100               	movlb	0	; () banked
 33487  002DA0  6FC9               	movwf	(sprintf@len+1)& (0+255),b
 33488  002DA2  0E00               	movlw	0
 33489  002DA4  6FC8               	movwf	sprintf@len& (0+255),b
 33490                           
 33491                           ;doprnt.c: 746: while(cp[len])
 33492  002DA6  D004               	goto	l9942
 33493  002DA8                     l9940:
 33494                           
 33495                           ;doprnt.c: 747: len++;
 33496  002DA8  0100               	movlb	0	; () banked
 33497  002DAA  4BC8               	infsnz	sprintf@len& (0+255),f,b
 33498  002DAC  2BC9               	incf	(sprintf@len+1)& (0+255),f,b
 33499  002DAE  D000               	goto	l9942
 33500  002DB0                     l9942:
 33501                           
 33502                           ; BSR set to: 0
 33503  002DB0  0100               	movlb	0	; () banked
 33504  002DB2  51C8               	movf	sprintf@len& (0+255),w,b
 33505  002DB4  0100               	movlb	0	; () banked
 33506  002DB6  25C6               	addwf	sprintf@cp& (0+255),w,b
 33507  002DB8  0100               	movlb	0	; () banked
 33508  002DBA  6FBC               	movwf	??_sprintf& (0+255),b
 33509  002DBC  0100               	movlb	0	; () banked
 33510  002DBE  51C9               	movf	(sprintf@len+1)& (0+255),w,b
 33511  002DC0  0100               	movlb	0	; () banked
 33512  002DC2  21C7               	addwfc	(sprintf@cp+1)& (0+255),w,b
 33513  002DC4  0100               	movlb	0	; () banked
 33514  002DC6  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33515  002DC8  C0BC  FFF6         	movff	??_sprintf,tblptrl
 33516  002DCC  C0BD  FFF7         	movff	??_sprintf+1,tblptrh
 33517  002DD0  0E00               	movlw	low (__mediumconst shr (0+16))
 33518  002DD2  6EF8               	movwf	tblptru,c
 33519  002DD4  0E0F               	movlw	(high __ramtop+-1)
 33520  002DD6  64F7               	cpfsgt	tblptrh,c
 33521  002DD8  D003               	bra	u9837
 33522  002DDA  0008               	tblrd		*
 33523  002DDC  50F5               	movf	tablat,w,c
 33524  002DDE  D005               	bra	u9830
 33525  002DE0                     u9837:
 33526  002DE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 33527  002DE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 33528  002DE8  50EF               	movf	indf0,w,c
 33529  002DEA                     u9830:
 33530  002DEA  0900               	iorlw	0
 33531  002DEC  B4D8               	btfsc	status,2,c
 33532  002DEE  D002               	goto	l9944
 33533  002DF0  D7DB               	goto	l9940
 33534  002DF2  D000               	goto	l9944
 33535  002DF4                     l9944:
 33536                           
 33537                           ;doprnt.c: 757: if(width > len)
 33538  002DF4  0100               	movlb	0	; () banked
 33539  002DF6  51DB               	movf	sprintf@width& (0+255),w,b
 33540  002DF8  0100               	movlb	0	; () banked
 33541  002DFA  5DC8               	subwf	sprintf@len& (0+255),w,b
 33542  002DFC  0100               	movlb	0	; () banked
 33543  002DFE  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 33544  002E00  0100               	movlb	0	; () banked
 33545  002E02  59C9               	subwfb	(sprintf@len+1)& (0+255),w,b
 33546  002E04  B0D8               	btfsc	status,0,c
 33547  002E06  D009               	goto	l9948
 33548                           
 33549                           ; BSR set to: 0
 33550                           ;doprnt.c: 758: width -= len;
 33551  002E08  0100               	movlb	0	; () banked
 33552  002E0A  51C8               	movf	sprintf@len& (0+255),w,b
 33553  002E0C  0100               	movlb	0	; () banked
 33554  002E0E  5FDB               	subwf	sprintf@width& (0+255),f,b
 33555  002E10  0100               	movlb	0	; () banked
 33556  002E12  51C9               	movf	(sprintf@len+1)& (0+255),w,b
 33557  002E14  0100               	movlb	0	; () banked
 33558  002E16  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
 33559  002E18  D010               	goto	l9954
 33560  002E1A                     l9948:
 33561                           
 33562                           ; BSR set to: 0
 33563                           ;doprnt.c: 759: else
 33564                           ;doprnt.c: 760: width = 0;
 33565  002E1A  0E00               	movlw	0
 33566  002E1C  0100               	movlb	0	; () banked
 33567  002E1E  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 33568  002E20  0E00               	movlw	0
 33569  002E22  6FDB               	movwf	sprintf@width& (0+255),b
 33570                           
 33571                           ; BSR set to: 0
 33572                           ;doprnt.c: 764: while(width--)
 33573  002E24  D00A               	goto	l9954
 33574  002E26                     l9950:
 33575                           
 33576                           ; BSR set to: 0
 33577                           ;doprnt.c: 765: ((*sp++ = (' ')));
 33578  002E26  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33579  002E2A  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33580  002E2E  0E20               	movlw	32
 33581  002E30  6EDF               	movwf	indf2,c
 33582                           
 33583                           ; BSR set to: 0
 33584  002E32  0100               	movlb	0	; () banked
 33585  002E34  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33586  002E36  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33587  002E38  D000               	goto	l9954
 33588  002E3A                     l9954:
 33589                           
 33590                           ; BSR set to: 0
 33591  002E3A  0100               	movlb	0	; () banked
 33592  002E3C  07DB               	decf	sprintf@width& (0+255),f,b
 33593  002E3E  A0D8               	btfss	status,0,c
 33594  002E40  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 33595  002E42  0100               	movlb	0	; () banked
 33596  002E44  29DB               	incf	sprintf@width& (0+255),w,b
 33597  002E46  E1EF               	bnz	l9950
 33598  002E48  0100               	movlb	0	; () banked
 33599  002E4A  29DC               	incf	(sprintf@width+1)& (0+255),w,b
 33600  002E4C  B4D8               	btfsc	status,2,c
 33601  002E4E  D01F               	goto	l9962
 33602  002E50  D7EA               	goto	l9950
 33603                           
 33604                           ; BSR set to: 0
 33605                           ;doprnt.c: 767: while(len--)
 33606  002E52  D01D               	goto	l9962
 33607  002E54                     l9956:
 33608                           
 33609                           ; BSR set to: 0
 33610                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 33611  002E54  C0C6  FFF6         	movff	sprintf@cp,tblptrl
 33612  002E58  C0C7  FFF7         	movff	sprintf@cp+1,tblptrh
 33613  002E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 33614  002E5E  6EF8               	movwf	tblptru,c
 33615  002E60  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 33616  002E64  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 33617  002E68  0E0F               	movlw	(high __ramtop+-1)
 33618  002E6A  64F7               	cpfsgt	tblptrh,c
 33619  002E6C  D003               	bra	u9877
 33620  002E6E  0008               	tblrd		*
 33621  002E70  50F5               	movf	tablat,w,c
 33622  002E72  D005               	bra	u9870
 33623  002E74                     u9877:
 33624  002E74  CFF6 FFE9          	movff	tblptrl,fsr0l
 33625  002E78  CFF7 FFEA          	movff	tblptrh,fsr0h
 33626  002E7C  50EF               	movf	indf0,w,c
 33627  002E7E                     u9870:
 33628  002E7E  6EDF               	movwf	indf2,c
 33629  002E80  0100               	movlb	0	; () banked
 33630  002E82  4BC6               	infsnz	sprintf@cp& (0+255),f,b
 33631  002E84  2BC7               	incf	(sprintf@cp+1)& (0+255),f,b
 33632                           
 33633                           ; BSR set to: 0
 33634  002E86  0100               	movlb	0	; () banked
 33635  002E88  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 33636  002E8A  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 33637  002E8C  D000               	goto	l9962
 33638  002E8E                     l9962:
 33639                           
 33640                           ; BSR set to: 0
 33641  002E8E  0100               	movlb	0	; () banked
 33642  002E90  07C8               	decf	sprintf@len& (0+255),f,b
 33643  002E92  A0D8               	btfss	status,0,c
 33644  002E94  07C9               	decf	(sprintf@len+1)& (0+255),f,b
 33645  002E96  0100               	movlb	0	; () banked
 33646  002E98  29C8               	incf	sprintf@len& (0+255),w,b
 33647  002E9A  E1DC               	bnz	l9956
 33648  002E9C  0100               	movlb	0	; () banked
 33649  002E9E  29C9               	incf	(sprintf@len+1)& (0+255),w,b
 33650  002EA0  B4D8               	btfsc	status,2,c
 33651  002EA2  EFC5  F01D         	goto	l10274
 33652  002EA6  D7D6               	goto	l9956
 33653                           
 33654                           ; BSR set to: 0
 33655                           ;doprnt.c: 774: continue;
 33656  002EA8  EFC5  F01D         	goto	l10274
 33657  002EAC                     l9964:
 33658                           
 33659                           ; BSR set to: 0
 33660                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 33661  002EAC  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33662  002EB0  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33663  002EB4  50DF               	movf	indf2,w,c
 33664  002EB6  0100               	movlb	0	; () banked
 33665  002EB8  6FDF               	movwf	sprintf@c& (0+255),b
 33666                           
 33667                           ; BSR set to: 0
 33668  002EBA  0E02               	movlw	2
 33669  002EBC  0100               	movlb	0	; () banked
 33670  002EBE  27CA               	addwf	sprintf@ap& (0+255),f,b
 33671  002EC0  0E00               	movlw	0
 33672  002EC2  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 33673  002EC4  D000               	goto	l9968
 33674  002EC6                     l9968:
 33675                           
 33676                           ; BSR set to: 0
 33677                           ;doprnt.c: 805: cp = (char *)&c;
 33678  002EC6  0EDF               	movlw	low sprintf@c
 33679  002EC8  0100               	movlb	0	; () banked
 33680  002ECA  6FC6               	movwf	sprintf@cp& (0+255),b
 33681  002ECC  0E00               	movlw	high sprintf@c
 33682  002ECE  0100               	movlb	0	; () banked
 33683  002ED0  6FC7               	movwf	(sprintf@cp+1)& (0+255),b
 33684                           
 33685                           ; BSR set to: 0
 33686                           ;doprnt.c: 806: len = 1;
 33687  002ED2  0E00               	movlw	0
 33688  002ED4  0100               	movlb	0	; () banked
 33689  002ED6  6FC9               	movwf	(sprintf@len+1)& (0+255),b
 33690  002ED8  0E01               	movlw	1
 33691  002EDA  6FC8               	movwf	sprintf@len& (0+255),b
 33692                           
 33693                           ;doprnt.c: 807: goto dostring;
 33694  002EDC  D78B               	goto	l9944
 33695  002EDE                     l9972:
 33696                           
 33697                           ; BSR set to: 0
 33698                           ;doprnt.c: 818: flag |= 0xC0;
 33699  002EDE  0EC0               	movlw	192
 33700  002EE0  0100               	movlb	0	; () banked
 33701  002EE2  13DD               	iorwf	sprintf@flag& (0+255),f,b
 33702                           
 33703                           ; BSR set to: 0
 33704                           ;doprnt.c: 822: }
 33705                           
 33706                           ;doprnt.c: 819: break;
 33707  002EE4  D02D               	goto	l9978
 33708  002EE6                     l9976:
 33709  002EE6  C0B0  FFF6         	movff	sprintf@f,tblptrl
 33710  002EEA  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 33711  002EEE  0100               	movlb	0	; () banked
 33712  002EF0  4BB0               	infsnz	sprintf@f& (0+255),f,b
 33713  002EF2  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 33714  002EF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33715  002EF4  6AF8               	clrf	tblptru,c
 33716  002EF6                     	endif
 33717  002EF6                     	if	0	;tblptru may be non-zero
 33718  002EF6                     	endif
 33719  002EF6  0008               	tblrd		*
 33720  002EF8  CFF5 F0DF          	movff	tablat,sprintf@c
 33721  002EFC  0100               	movlb	0	; () banked
 33722  002EFE  51DF               	movf	sprintf@c& (0+255),w,b
 33723                           
 33724                           ; Switch size 1, requested type "space"
 33725                           ; Number of cases is 10, Range of values is 0 to 120
 33726                           ; switch strategies available:
 33727                           ; Name         Instructions Cycles
 33728                           ; simple_byte           31    16 (average)
 33729                           ;	Chosen strategy is simple_byte
 33730  002F00  0A00               	xorlw	0	; case 0
 33731  002F02  B4D8               	btfsc	status,2,c
 33732  002F04  EFD7  F01D         	goto	l10276
 33733  002F08  0A58               	xorlw	88	; case 88
 33734  002F0A  B4D8               	btfsc	status,2,c
 33735  002F0C  D72A               	goto	l9928
 33736  002F0E  0A3B               	xorlw	59	; case 99
 33737  002F10  B4D8               	btfsc	status,2,c
 33738  002F12  D7CC               	goto	l9964
 33739  002F14  0A07               	xorlw	7	; case 100
 33740  002F16  B4D8               	btfsc	status,2,c
 33741  002F18  D013               	goto	l9978
 33742  002F1A  0A02               	xorlw	2	; case 102
 33743  002F1C  B4D8               	btfsc	status,2,c
 33744  002F1E  D71D               	goto	l9926
 33745  002F20  0A0F               	xorlw	15	; case 105
 33746  002F22  B4D8               	btfsc	status,2,c
 33747  002F24  D00D               	goto	l9978
 33748  002F26  0A05               	xorlw	5	; case 108
 33749  002F28  B4D8               	btfsc	status,2,c
 33750  002F2A  D714               	goto	l9924
 33751  002F2C  0A1F               	xorlw	31	; case 115
 33752  002F2E  B4D8               	btfsc	status,2,c
 33753  002F30  D71B               	goto	l9930
 33754  002F32  0A06               	xorlw	6	; case 117
 33755  002F34  B4D8               	btfsc	status,2,c
 33756  002F36  D7D3               	goto	l9972
 33757  002F38  0A0D               	xorlw	13	; case 120
 33758  002F3A  B4D8               	btfsc	status,2,c
 33759  002F3C  D712               	goto	l9928
 33760  002F3E  D7C3               	goto	l9968
 33761  002F40                     l9978:
 33762                           
 33763                           ; BSR set to: 0
 33764                           ;doprnt.c: 825: if(flag & (0x700)) {
 33765  002F40  0E07               	movlw	7
 33766  002F42  0100               	movlb	0	; () banked
 33767  002F44  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 33768  002F46  B4D8               	btfsc	status,2,c
 33769  002F48  D3ED               	goto	l10156
 33770                           
 33771                           ; BSR set to: 0
 33772                           ;doprnt.c: 829: prec = 6;
 33773  002F4A  0E00               	movlw	0
 33774  002F4C  0100               	movlb	0	; () banked
 33775  002F4E  6FCD               	movwf	(sprintf@prec+1)& (0+255),b
 33776  002F50  0E06               	movlw	6
 33777  002F52  6FCC               	movwf	sprintf@prec& (0+255),b
 33778                           
 33779                           ; BSR set to: 0
 33780                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 33781  002F54  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 33782  002F58  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 33783  002F5C  CFDE F0D8          	movff	postinc2,sprintf@fval
 33784  002F60  CFDE F0D9          	movff	postinc2,sprintf@fval+1
 33785  002F64  CFDD F0DA          	movff	postdec2,sprintf@fval+2
 33786                           
 33787                           ; BSR set to: 0
 33788  002F68  0E03               	movlw	3
 33789  002F6A  0100               	movlb	0	; () banked
 33790  002F6C  27CA               	addwf	sprintf@ap& (0+255),f,b
 33791  002F6E  0E00               	movlw	0
 33792  002F70  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 33793                           
 33794                           ; BSR set to: 0
 33795                           ;doprnt.c: 831: if(fval < 0.0) {
 33796  002F72  0100               	movlb	0	; () banked
 33797  002F74  AFDA               	btfss	(sprintf@fval+2)& (0+255),7,b
 33798  002F76  D012               	goto	l9992
 33799                           
 33800                           ; BSR set to: 0
 33801                           ;doprnt.c: 832: fval = -fval;
 33802  002F78  C0D8  F060         	movff	sprintf@fval,___ftneg@f1
 33803  002F7C  C0D9  F061         	movff	sprintf@fval+1,___ftneg@f1+1
 33804  002F80  C0DA  F062         	movff	sprintf@fval+2,___ftneg@f1+2
 33805  002F84  ECB1  F055         	call	___ftneg	;wreg free
 33806  002F88  C060  F0D8         	movff	?___ftneg,sprintf@fval
 33807  002F8C  C061  F0D9         	movff	?___ftneg+1,sprintf@fval+1
 33808  002F90  C062  F0DA         	movff	?___ftneg+2,sprintf@fval+2
 33809                           
 33810                           ;doprnt.c: 833: flag |= 0x03;
 33811  002F94  0E03               	movlw	3
 33812  002F96  0100               	movlb	0	; () banked
 33813  002F98  13DD               	iorwf	sprintf@flag& (0+255),f,b
 33814  002F9A  D000               	goto	l9992
 33815  002F9C                     l9992:
 33816                           
 33817                           ; BSR set to: 0
 33818                           ;doprnt.c: 834: }
 33819                           ;doprnt.c: 835: exp = 0;
 33820  002F9C  0E00               	movlw	0
 33821  002F9E  0100               	movlb	0	; () banked
 33822  002FA0  6FD3               	movwf	(sprintf@exp+1)& (0+255),b
 33823  002FA2  0E00               	movlw	0
 33824  002FA4  6FD2               	movwf	sprintf@exp& (0+255),b
 33825                           
 33826                           ; BSR set to: 0
 33827                           ;doprnt.c: 836: if( fval!=0) {
 33828  002FA6  0100               	movlb	0	; () banked
 33829  002FA8  51D8               	movf	sprintf@fval& (0+255),w,b
 33830  002FAA  0100               	movlb	0	; () banked
 33831  002FAC  11D9               	iorwf	(sprintf@fval+1)& (0+255),w,b
 33832  002FAE  0100               	movlb	0	; () banked
 33833  002FB0  11DA               	iorwf	(sprintf@fval+2)& (0+255),w,b
 33834  002FB2  B4D8               	btfsc	status,2,c
 33835  002FB4  D09D               	goto	l10020
 33836                           
 33837                           ; BSR set to: 0
 33838                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 33839  002FB6  0E82               	movlw	130
 33840  002FB8  0100               	movlb	0	; () banked
 33841  002FBA  6FBC               	movwf	??_sprintf& (0+255),b
 33842  002FBC  0EFF               	movlw	255
 33843  002FBE  0100               	movlb	0	; () banked
 33844  002FC0  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 33845  002FC2  C0D8  F0BE         	movff	sprintf@fval,??_sprintf+2
 33846  002FC6  C0D9  F0BF         	movff	sprintf@fval+1,??_sprintf+3
 33847  002FCA  C0DA  F0C0         	movff	sprintf@fval+2,??_sprintf+4
 33848  002FCE  C0DB  F0C1         	movff	sprintf@fval+3,??_sprintf+5
 33849  002FD2  0E10               	movlw	16
 33850  002FD4  D006               	goto	u9920
 33851  002FD6                     u9925:
 33852  002FD6  0100               	movlb	0	; () banked
 33853  002FD8  90D8               	bcf	status,0,c
 33854  002FDA  33C1               	rrcf	(??_sprintf+5)& (0+255),f,b
 33855  002FDC  33C0               	rrcf	(??_sprintf+4)& (0+255),f,b
 33856  002FDE  33BF               	rrcf	(??_sprintf+3)& (0+255),f,b
 33857  002FE0  33BE               	rrcf	(??_sprintf+2)& (0+255),f,b
 33858  002FE2                     u9920:
 33859  002FE2  2EE8               	decfsz	wreg,f,c
 33860  002FE4  D7F8               	goto	u9925
 33861  002FE6  0100               	movlb	0	; () banked
 33862  002FE8  51BE               	movf	(??_sprintf+2)& (0+255),w,b
 33863  002FEA  0100               	movlb	0	; () banked
 33864  002FEC  25BC               	addwf	??_sprintf& (0+255),w,b
 33865  002FEE  0100               	movlb	0	; () banked
 33866  002FF0  6FD2               	movwf	sprintf@exp& (0+255),b
 33867  002FF2  0E00               	movlw	0
 33868  002FF4  0100               	movlb	0	; () banked
 33869  002FF6  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
 33870  002FF8  0100               	movlb	0	; () banked
 33871  002FFA  6FD3               	movwf	(sprintf@exp+1)& (0+255),b
 33872                           
 33873                           ; BSR set to: 0
 33874                           ;doprnt.c: 838: exp--;
 33875  002FFC  0100               	movlb	0	; () banked
 33876  002FFE  07D2               	decf	sprintf@exp& (0+255),f,b
 33877  003000  A0D8               	btfss	status,0,c
 33878  003002  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 33879                           
 33880                           ; BSR set to: 0
 33881                           ;doprnt.c: 839: exp *= 3;
 33882  003004  C0D2  F06E         	movff	sprintf@exp,___wmul@multiplier
 33883  003008  C0D3  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
 33884  00300C  0E00               	movlw	0
 33885  00300E  0100               	movlb	0	; () banked
 33886  003010  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33887  003012  0E03               	movlw	3
 33888  003014  6F70               	movwf	___wmul@multiplicand& (0+255),b
 33889  003016  EC15  F055         	call	___wmul	;wreg free
 33890  00301A  C06E  F0D2         	movff	?___wmul,sprintf@exp
 33891  00301E  C06F  F0D3         	movff	?___wmul+1,sprintf@exp+1
 33892                           
 33893                           ;doprnt.c: 840: exp /= 10;
 33894  003022  C0D2  F066         	movff	sprintf@exp,___awdiv@dividend
 33895  003026  C0D3  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
 33896  00302A  0E00               	movlw	0
 33897  00302C  0100               	movlb	0	; () banked
 33898  00302E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 33899  003030  0E0A               	movlw	10
 33900  003032  6F68               	movwf	___awdiv@divisor& (0+255),b
 33901  003034  EC0D  F04B         	call	___awdiv	;wreg free
 33902  003038  C066  F0D2         	movff	?___awdiv,sprintf@exp
 33903  00303C  C067  F0D3         	movff	?___awdiv+1,sprintf@exp+1
 33904                           
 33905                           ;doprnt.c: 841: if(exp < 0)
 33906  003040  0100               	movlb	0	; () banked
 33907  003042  AFD3               	btfss	(sprintf@exp+1)& (0+255),7,b
 33908  003044  D005               	goto	l10008
 33909                           
 33910                           ; BSR set to: 0
 33911                           ;doprnt.c: 842: exp--;
 33912  003046  0100               	movlb	0	; () banked
 33913  003048  07D2               	decf	sprintf@exp& (0+255),f,b
 33914  00304A  A0D8               	btfss	status,0,c
 33915  00304C  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 33916  00304E  D000               	goto	l10008
 33917  003050                     l10008:
 33918                           
 33919                           ; BSR set to: 0
 33920                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 33921  003050  0100               	movlb	0	; () banked
 33922  003052  51D2               	movf	sprintf@exp& (0+255),w,b
 33923  003054  0800               	sublw	0
 33924  003056  ECE2  F02D         	call	_scale
 33925  00305A  C089  F0CE         	movff	?_scale,sprintf@tmpval
 33926  00305E  C08A  F0CF         	movff	?_scale+1,sprintf@tmpval+1
 33927  003062  C08B  F0D0         	movff	?_scale+2,sprintf@tmpval+2
 33928                           
 33929                           ;doprnt.c: 847: tmpval.integ *= fval;
 33930  003066  C0CE  F07A         	movff	sprintf@tmpval,___ftmul@f1
 33931  00306A  C0CF  F07B         	movff	sprintf@tmpval+1,___ftmul@f1+1
 33932  00306E  C0D0  F07C         	movff	sprintf@tmpval+2,___ftmul@f1+2
 33933  003072  C0D8  F07D         	movff	sprintf@fval,___ftmul@f2
 33934  003076  C0D9  F07E         	movff	sprintf@fval+1,___ftmul@f2+1
 33935  00307A  C0DA  F07F         	movff	sprintf@fval+2,___ftmul@f2+2
 33936  00307E  EC5A  F041         	call	___ftmul	;wreg free
 33937  003082  C07A  F0CE         	movff	?___ftmul,sprintf@tmpval
 33938  003086  C07B  F0CF         	movff	?___ftmul+1,sprintf@tmpval+1
 33939  00308A  C07C  F0D0         	movff	?___ftmul+2,sprintf@tmpval+2
 33940                           
 33941                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 33942  00308E  C0CE  F060         	movff	sprintf@tmpval,___ftge@ff1
 33943  003092  C0CF  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 33944  003096  C0D0  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 33945  00309A  0E00               	movlw	0
 33946  00309C  0100               	movlb	0	; () banked
 33947  00309E  6F63               	movwf	___ftge@ff2& (0+255),b
 33948  0030A0  0E80               	movlw	128
 33949  0030A2  0100               	movlb	0	; () banked
 33950  0030A4  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 33951  0030A6  0E3F               	movlw	63
 33952  0030A8  0100               	movlb	0	; () banked
 33953  0030AA  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 33954  0030AC  ECDC  F04B         	call	___ftge	;wreg free
 33955  0030B0  0100               	movlb	0	; () banked
 33956  0030B2  B0D8               	btfsc	status,0,c
 33957  0030B4  D005               	goto	l10016
 33958                           
 33959                           ; BSR set to: 0
 33960                           ;doprnt.c: 849: exp--;
 33961  0030B6  0100               	movlb	0	; () banked
 33962  0030B8  07D2               	decf	sprintf@exp& (0+255),f,b
 33963  0030BA  A0D8               	btfss	status,0,c
 33964  0030BC  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 33965  0030BE  D018               	goto	l10020
 33966  0030C0                     l10016:
 33967                           
 33968                           ; BSR set to: 0
 33969                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 33970  0030C0  C0CE  F060         	movff	sprintf@tmpval,___ftge@ff1
 33971  0030C4  C0CF  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 33972  0030C8  C0D0  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 33973  0030CC  0E00               	movlw	0
 33974  0030CE  0100               	movlb	0	; () banked
 33975  0030D0  6F63               	movwf	___ftge@ff2& (0+255),b
 33976  0030D2  0E20               	movlw	32
 33977  0030D4  0100               	movlb	0	; () banked
 33978  0030D6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 33979  0030D8  0E41               	movlw	65
 33980  0030DA  0100               	movlb	0	; () banked
 33981  0030DC  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 33982  0030DE  ECDC  F04B         	call	___ftge	;wreg free
 33983  0030E2  0100               	movlb	0	; () banked
 33984  0030E4  A0D8               	btfss	status,0,c
 33985  0030E6  D004               	goto	l10020
 33986                           
 33987                           ; BSR set to: 0
 33988                           ;doprnt.c: 851: exp++;
 33989  0030E8  0100               	movlb	0	; () banked
 33990  0030EA  4BD2               	infsnz	sprintf@exp& (0+255),f,b
 33991  0030EC  2BD3               	incf	(sprintf@exp+1)& (0+255),f,b
 33992                           
 33993                           ; BSR set to: 0
 33994                           
 33995                           ; BSR set to: 0
 33996  0030EE  D000               	goto	l10020
 33997  0030F0                     l10020:
 33998                           
 33999                           ; BSR set to: 0
 34000                           ;doprnt.c: 852: }
 34001                           ;doprnt.c: 1112: if(prec <= 12)
 34002  0030F0  0100               	movlb	0	; () banked
 34003  0030F2  BFCD               	btfsc	(sprintf@prec+1)& (0+255),7,b
 34004  0030F4  D008               	goto	l10022
 34005  0030F6  0100               	movlb	0	; () banked
 34006  0030F8  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
 34007  0030FA  E11E               	bnz	l10024
 34008  0030FC  0E0D               	movlw	13
 34009  0030FE  0100               	movlb	0	; () banked
 34010  003100  5DCC               	subwf	sprintf@prec& (0+255),w,b
 34011  003102  B0D8               	btfsc	status,0,c
 34012  003104  D019               	goto	l10024
 34013  003106                     l10022:
 34014                           
 34015                           ; BSR set to: 0
 34016                           ;doprnt.c: 1113: fval += fround(prec);
 34017  003106  C0D8  F093         	movff	sprintf@fval,___ftadd@f1
 34018  00310A  C0D9  F094         	movff	sprintf@fval+1,___ftadd@f1+1
 34019  00310E  C0DA  F095         	movff	sprintf@fval+2,___ftadd@f1+2
 34020  003112  0100               	movlb	0	; () banked
 34021  003114  51CC               	movf	sprintf@prec& (0+255),w,b
 34022  003116  EC6C  F036         	call	_fround
 34023  00311A  C089  F096         	movff	?_fround,___ftadd@f2
 34024  00311E  C08A  F097         	movff	?_fround+1,___ftadd@f2+1
 34025  003122  C08B  F098         	movff	?_fround+2,___ftadd@f2+2
 34026  003126  EC18  F039         	call	___ftadd	;wreg free
 34027  00312A  C093  F0D8         	movff	?___ftadd,sprintf@fval
 34028  00312E  C094  F0D9         	movff	?___ftadd+1,sprintf@fval+1
 34029  003132  C095  F0DA         	movff	?___ftadd+2,sprintf@fval+2
 34030  003136  D000               	goto	l10024
 34031  003138                     l10024:
 34032                           
 34033                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 34034  003138  0100               	movlb	0	; () banked
 34035  00313A  BFD3               	btfsc	(sprintf@exp+1)& (0+255),7,b
 34036  00313C  D008               	goto	l10026
 34037  00313E  0100               	movlb	0	; () banked
 34038  003140  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 34039  003142  E12C               	bnz	l10032
 34040  003144  0E0A               	movlw	10
 34041  003146  0100               	movlb	0	; () banked
 34042  003148  5DD2               	subwf	sprintf@exp& (0+255),w,b
 34043  00314A  B0D8               	btfsc	status,0,c
 34044  00314C  D027               	goto	l10032
 34045  00314E                     l10026:
 34046                           
 34047                           ; BSR set to: 0
 34048  00314E  0100               	movlb	0	; () banked
 34049  003150  51D8               	movf	sprintf@fval& (0+255),w,b
 34050  003152  0100               	movlb	0	; () banked
 34051  003154  11D9               	iorwf	(sprintf@fval+1)& (0+255),w,b
 34052  003156  0100               	movlb	0	; () banked
 34053  003158  11DA               	iorwf	(sprintf@fval+2)& (0+255),w,b
 34054  00315A  B4D8               	btfsc	status,2,c
 34055  00315C  D07F               	goto	l10046
 34056                           
 34057                           ; BSR set to: 0
 34058  00315E  C0D8  F09F         	movff	sprintf@fval,___fttol@f1
 34059  003162  C0D9  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
 34060  003166  C0DA  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
 34061  00316A  EC67  F043         	call	___fttol	;wreg free
 34062  00316E  0100               	movlb	0	; () banked
 34063  003170  519F               	movf	?___fttol& (0+255),w,b
 34064  003172  0100               	movlb	0	; () banked
 34065  003174  11A0               	iorwf	(?___fttol+1)& (0+255),w,b
 34066  003176  0100               	movlb	0	; () banked
 34067  003178  11A1               	iorwf	(?___fttol+2)& (0+255),w,b
 34068  00317A  0100               	movlb	0	; () banked
 34069  00317C  11A2               	iorwf	(?___fttol+3)& (0+255),w,b
 34070  00317E  A4D8               	btfss	status,2,c
 34071  003180  D06D               	goto	l10046
 34072                           
 34073                           ; BSR set to: 0
 34074  003182  0100               	movlb	0	; () banked
 34075  003184  BFD3               	btfsc	(sprintf@exp+1)& (0+255),7,b
 34076  003186  D06A               	goto	l10046
 34077  003188  0100               	movlb	0	; () banked
 34078  00318A  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 34079  00318C  E107               	bnz	l10032
 34080  00318E  0E02               	movlw	2
 34081  003190  0100               	movlb	0	; () banked
 34082  003192  5DD2               	subwf	sprintf@exp& (0+255),w,b
 34083  003194  B0D8               	btfsc	status,0,c
 34084  003196  D002               	goto	l10032
 34085  003198  D061               	goto	l10046
 34086  00319A  D000               	goto	l10032
 34087  00319C                     l10032:
 34088                           
 34089                           ; BSR set to: 0
 34090                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 34091  00319C  C0CE  F060         	movff	sprintf@tmpval,___ftge@ff1
 34092  0031A0  C0CF  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
 34093  0031A4  C0D0  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
 34094  0031A8  0E70               	movlw	112
 34095  0031AA  0100               	movlb	0	; () banked
 34096  0031AC  6F63               	movwf	___ftge@ff2& (0+255),b
 34097  0031AE  0E89               	movlw	137
 34098  0031B0  0100               	movlb	0	; () banked
 34099  0031B2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 34100  0031B4  0E40               	movlw	64
 34101  0031B6  0100               	movlb	0	; () banked
 34102  0031B8  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 34103  0031BA  ECDC  F04B         	call	___ftge	;wreg free
 34104  0031BE  0100               	movlb	0	; () banked
 34105  0031C0  B0D8               	btfsc	status,0,c
 34106  0031C2  D003               	goto	l10036
 34107                           
 34108                           ; BSR set to: 0
 34109                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 34110  0031C4  0100               	movlb	0	; () banked
 34111  0031C6  0EF7               	movlw	247
 34112  0031C8  D002               	goto	L17
 34113  0031CA                     l10036:
 34114                           
 34115                           ; BSR set to: 0
 34116                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 34117  0031CA  0100               	movlb	0	; () banked
 34118  0031CC  0EF8               	movlw	248
 34119  0031CE                     L17:
 34120  0031CE  27D2               	addwf	sprintf@exp& (0+255),f,b
 34121  0031D0  0EFF               	movlw	255
 34122  0031D2  23D3               	addwfc	(sprintf@exp+1)& (0+255),f,b
 34123  0031D4  D000               	goto	l10038
 34124  0031D6                     l10038:
 34125                           
 34126                           ; BSR set to: 0
 34127                           ;doprnt.c: 1124: }
 34128                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 34129  0031D6  0100               	movlb	0	; () banked
 34130  0031D8  51D2               	movf	sprintf@exp& (0+255),w,b
 34131  0031DA  ECE2  F02D         	call	_scale
 34132  0031DE  C089  F0CE         	movff	?_scale,sprintf@tmpval
 34133  0031E2  C08A  F0CF         	movff	?_scale+1,sprintf@tmpval+1
 34134  0031E6  C08B  F0D0         	movff	?_scale+2,sprintf@tmpval+2
 34135                           
 34136                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 34137  0031EA  D017               	goto	l10042
 34138  0031EC  C0D8  F060         	movff	sprintf@fval,__div_to_l_@f1
 34139  0031F0  C0D9  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
 34140  0031F4  C0DA  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
 34141  0031F8  C0CE  F063         	movff	sprintf@tmpval,__div_to_l_@f2
 34142  0031FC  C0CF  F064         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 34143  003200  C0D0  F065         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 34144  003204  EC14  F03F         	call	__div_to_l_	;wreg free
 34145  003208  C060  F0D4         	movff	?__div_to_l_,sprintf@val
 34146  00320C  C061  F0D5         	movff	?__div_to_l_+1,sprintf@val+1
 34147  003210  C062  F0D6         	movff	?__div_to_l_+2,sprintf@val+2
 34148  003214  C063  F0D7         	movff	?__div_to_l_+3,sprintf@val+3
 34149  003218  D017               	goto	l10044
 34150  00321A                     l10042:
 34151  00321A  C0D8  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
 34152  00321E  C0D9  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 34153  003222  C0DA  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 34154  003226  C0CE  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 34155  00322A  C0CF  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 34156  00322E  C0D0  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 34157  003232  EC41  F03E         	call	__tdiv_to_l_	;wreg free
 34158  003236  C060  F0D4         	movff	?__tdiv_to_l_,sprintf@val
 34159  00323A  C061  F0D5         	movff	?__tdiv_to_l_+1,sprintf@val+1
 34160  00323E  C062  F0D6         	movff	?__tdiv_to_l_+2,sprintf@val+2
 34161  003242  C063  F0D7         	movff	?__tdiv_to_l_+3,sprintf@val+3
 34162  003246  D000               	goto	l10044
 34163  003248                     l10044:
 34164                           
 34165                           ;doprnt.c: 1129: fval = 0.0;
 34166  003248  0E00               	movlw	0
 34167  00324A  0100               	movlb	0	; () banked
 34168  00324C  6FD8               	movwf	sprintf@fval& (0+255),b
 34169  00324E  0E00               	movlw	0
 34170  003250  0100               	movlb	0	; () banked
 34171  003252  6FD9               	movwf	(sprintf@fval+1)& (0+255),b
 34172  003254  0E00               	movlw	0
 34173  003256  0100               	movlb	0	; () banked
 34174  003258  6FDA               	movwf	(sprintf@fval+2)& (0+255),b
 34175                           
 34176                           ;doprnt.c: 1130: } else {
 34177  00325A  D034               	goto	l10050
 34178  00325C                     l10046:
 34179                           
 34180                           ; BSR set to: 0
 34181                           ;doprnt.c: 1131: val = (unsigned long)fval;
 34182  00325C  C0D8  F09F         	movff	sprintf@fval,___fttol@f1
 34183  003260  C0D9  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
 34184  003264  C0DA  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
 34185  003268  EC67  F043         	call	___fttol	;wreg free
 34186  00326C  C09F  F0D4         	movff	?___fttol,sprintf@val
 34187  003270  C0A0  F0D5         	movff	?___fttol+1,sprintf@val+1
 34188  003274  C0A1  F0D6         	movff	?___fttol+2,sprintf@val+2
 34189  003278  C0A2  F0D7         	movff	?___fttol+3,sprintf@val+3
 34190                           
 34191                           ;doprnt.c: 1132: fval -= (double)val;
 34192  00327C  C0D8  F09F         	movff	sprintf@fval,___ftsub@f1
 34193  003280  C0D9  F0A0         	movff	sprintf@fval+1,___ftsub@f1+1
 34194  003284  C0DA  F0A1         	movff	sprintf@fval+2,___ftsub@f1+2
 34195  003288  C0D4  F068         	movff	sprintf@val,___lltoft@c
 34196  00328C  C0D5  F069         	movff	sprintf@val+1,___lltoft@c+1
 34197  003290  C0D6  F06A         	movff	sprintf@val+2,___lltoft@c+2
 34198  003294  C0D7  F06B         	movff	sprintf@val+3,___lltoft@c+3
 34199  003298  EC7B  F051         	call	___lltoft	;wreg free
 34200  00329C  C068  F0A2         	movff	?___lltoft,___ftsub@f2
 34201  0032A0  C069  F0A3         	movff	?___lltoft+1,___ftsub@f2+1
 34202  0032A4  C06A  F0A4         	movff	?___lltoft+2,___ftsub@f2+2
 34203  0032A8  ECEB  F053         	call	___ftsub	;wreg free
 34204  0032AC  C09F  F0D8         	movff	?___ftsub,sprintf@fval
 34205  0032B0  C0A0  F0D9         	movff	?___ftsub+1,sprintf@fval+1
 34206  0032B4  C0A1  F0DA         	movff	?___ftsub+2,sprintf@fval+2
 34207                           
 34208                           ;doprnt.c: 1133: exp = 0;
 34209  0032B8  0E00               	movlw	0
 34210  0032BA  0100               	movlb	0	; () banked
 34211  0032BC  6FD3               	movwf	(sprintf@exp+1)& (0+255),b
 34212  0032BE  0E00               	movlw	0
 34213  0032C0  6FD2               	movwf	sprintf@exp& (0+255),b
 34214  0032C2  D000               	goto	l10050
 34215  0032C4                     l10050:
 34216                           
 34217                           ; BSR set to: 0
 34218                           ;doprnt.c: 1134: }
 34219                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 34220  0032C4  0E01               	movlw	1
 34221  0032C6  0100               	movlb	0	; () banked
 34222  0032C8  6FDF               	movwf	sprintf@c& (0+255),b
 34223  0032CA                     l10052:
 34224                           
 34225                           ; BSR set to: 0
 34226  0032CA  0E0A               	movlw	10
 34227  0032CC  0100               	movlb	0	; () banked
 34228  0032CE  19DF               	xorwf	sprintf@c& (0+255),w,b
 34229  0032D0  B4D8               	btfsc	status,2,c
 34230  0032D2  D025               	goto	l10064
 34231  0032D4  D001               	goto	l10056
 34232                           
 34233                           ; BSR set to: 0
 34234  0032D6  D023               	goto	l10064
 34235  0032D8                     l10056:
 34236                           
 34237                           ; BSR set to: 0
 34238                           ;doprnt.c: 1137: if(val < dpowers[c])
 34239  0032D8  0100               	movlb	0	; () banked
 34240  0032DA  51DF               	movf	sprintf@c& (0+255),w,b
 34241  0032DC  0D04               	mullw	4
 34242  0032DE  0E7F               	movlw	low _dpowers
 34243  0032E0  24F3               	addwf	prodl,w,c
 34244  0032E2  6EF6               	movwf	tblptrl,c
 34245  0032E4  0EEC               	movlw	high _dpowers
 34246  0032E6  20F4               	addwfc	prodh,w,c
 34247  0032E8  6EF7               	movwf	tblptrh,c
 34248  0032EA                     	if	1	;There are 3 active tblptr bytes
 34249  0032EA  6AF8               	clrf	tblptru,c
 34250  0032EC  0E00               	movlw	low (__mediumconst shr (0+16))
 34251  0032EE  22F8               	addwfc	tblptru,f,c
 34252  0032F0                     	endif
 34253  0032F0  0009               	tblrd		*+
 34254  0032F2  50F5               	movf	tablat,w,c
 34255  0032F4  0100               	movlb	0	; () banked
 34256  0032F6  5DD4               	subwf	sprintf@val& (0+255),w,b
 34257  0032F8  0009               	tblrd		*+
 34258  0032FA  50F5               	movf	tablat,w,c
 34259  0032FC  0100               	movlb	0	; () banked
 34260  0032FE  59D5               	subwfb	(sprintf@val+1)& (0+255),w,b
 34261  003300  0009               	tblrd		*+
 34262  003302  50F5               	movf	tablat,w,c
 34263  003304  0100               	movlb	0	; () banked
 34264  003306  59D6               	subwfb	(sprintf@val+2)& (0+255),w,b
 34265  003308  0009               	tblrd		*+
 34266  00330A  50F5               	movf	tablat,w,c
 34267  00330C  0100               	movlb	0	; () banked
 34268  00330E  59D7               	subwfb	(sprintf@val+3)& (0+255),w,b
 34269  003310  A0D8               	btfss	status,0,c
 34270  003312  D005               	goto	l10064
 34271  003314  D001               	goto	l10060
 34272                           
 34273                           ; BSR set to: 0
 34274                           ;doprnt.c: 1138: break;
 34275  003316  D003               	goto	l10064
 34276  003318                     l10060:
 34277                           
 34278                           ; BSR set to: 0
 34279  003318  0100               	movlb	0	; () banked
 34280  00331A  2BDF               	incf	sprintf@c& (0+255),f,b
 34281  00331C  D7D6               	goto	l10052
 34282  00331E                     l10064:
 34283                           
 34284                           ; BSR set to: 0
 34285                           ;doprnt.c: 1142: width -= prec + c + exp;
 34286  00331E  C0DF  F0BC         	movff	sprintf@c,??_sprintf
 34287  003322  0100               	movlb	0	; () banked
 34288  003324  6BBD               	clrf	(??_sprintf+1)& (0+255),b
 34289  003326  BFBC               	btfsc	??_sprintf& (0+255),7,b
 34290  003328  07BD               	decf	(??_sprintf+1)& (0+255),f,b
 34291  00332A  0100               	movlb	0	; () banked
 34292  00332C  51CC               	movf	sprintf@prec& (0+255),w,b
 34293  00332E  0100               	movlb	0	; () banked
 34294  003330  27BC               	addwf	??_sprintf& (0+255),f,b
 34295  003332  0100               	movlb	0	; () banked
 34296  003334  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
 34297  003336  0100               	movlb	0	; () banked
 34298  003338  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
 34299  00333A  0100               	movlb	0	; () banked
 34300  00333C  51D2               	movf	sprintf@exp& (0+255),w,b
 34301  00333E  0100               	movlb	0	; () banked
 34302  003340  27BC               	addwf	??_sprintf& (0+255),f,b
 34303  003342  0100               	movlb	0	; () banked
 34304  003344  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 34305  003346  0100               	movlb	0	; () banked
 34306  003348  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
 34307  00334A  0100               	movlb	0	; () banked
 34308  00334C  51BC               	movf	??_sprintf& (0+255),w,b
 34309  00334E  0100               	movlb	0	; () banked
 34310  003350  5FDB               	subwf	sprintf@width& (0+255),f,b
 34311  003352  0100               	movlb	0	; () banked
 34312  003354  51BD               	movf	(??_sprintf+1)& (0+255),w,b
 34313  003356  0100               	movlb	0	; () banked
 34314  003358  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
 34315                           
 34316                           ;doprnt.c: 1143: if(
 34317                           ;doprnt.c: 1147: prec)
 34318  00335A  0100               	movlb	0	; () banked
 34319  00335C  51CC               	movf	sprintf@prec& (0+255),w,b
 34320  00335E  0100               	movlb	0	; () banked
 34321  003360  11CD               	iorwf	(sprintf@prec+1)& (0+255),w,b
 34322  003362  B4D8               	btfsc	status,2,c
 34323  003364  D005               	goto	l10068
 34324                           
 34325                           ; BSR set to: 0
 34326                           ;doprnt.c: 1148: width--;
 34327  003366  0100               	movlb	0	; () banked
 34328  003368  07DB               	decf	sprintf@width& (0+255),f,b
 34329  00336A  A0D8               	btfss	status,0,c
 34330  00336C  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34331  00336E  D000               	goto	l10068
 34332  003370                     l10068:
 34333                           
 34334                           ; BSR set to: 0
 34335                           ;doprnt.c: 1149: if(flag & 0x03)
 34336  003370  0E03               	movlw	3
 34337  003372  0100               	movlb	0	; () banked
 34338  003374  15DD               	andwf	sprintf@flag& (0+255),w,b
 34339  003376  0100               	movlb	0	; () banked
 34340  003378  6FBC               	movwf	??_sprintf& (0+255),b
 34341  00337A  0E00               	movlw	0
 34342  00337C  0100               	movlb	0	; () banked
 34343  00337E  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34344  003380  0100               	movlb	0	; () banked
 34345  003382  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34346  003384  0100               	movlb	0	; () banked
 34347  003386  51BC               	movf	??_sprintf& (0+255),w,b
 34348  003388  0100               	movlb	0	; () banked
 34349  00338A  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34350  00338C  B4D8               	btfsc	status,2,c
 34351  00338E  D005               	goto	l10072
 34352                           
 34353                           ; BSR set to: 0
 34354                           ;doprnt.c: 1150: width--;
 34355  003390  0100               	movlb	0	; () banked
 34356  003392  07DB               	decf	sprintf@width& (0+255),f,b
 34357  003394  A0D8               	btfss	status,0,c
 34358  003396  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34359  003398  D000               	goto	l10072
 34360  00339A                     l10072:
 34361                           
 34362                           ; BSR set to: 0
 34363                           ;doprnt.c: 1153: if(flag & 0x04) {
 34364  00339A  0100               	movlb	0	; () banked
 34365  00339C  A5DD               	btfss	sprintf@flag& (0+255),2,b
 34366  00339E  D043               	goto	l10094
 34367                           
 34368                           ; BSR set to: 0
 34369                           ;doprnt.c: 1157: if(flag & 0x03)
 34370  0033A0  0E03               	movlw	3
 34371  0033A2  0100               	movlb	0	; () banked
 34372  0033A4  15DD               	andwf	sprintf@flag& (0+255),w,b
 34373  0033A6  0100               	movlb	0	; () banked
 34374  0033A8  6FBC               	movwf	??_sprintf& (0+255),b
 34375  0033AA  0E00               	movlw	0
 34376  0033AC  0100               	movlb	0	; () banked
 34377  0033AE  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34378  0033B0  0100               	movlb	0	; () banked
 34379  0033B2  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34380  0033B4  0100               	movlb	0	; () banked
 34381  0033B6  51BC               	movf	??_sprintf& (0+255),w,b
 34382  0033B8  0100               	movlb	0	; () banked
 34383  0033BA  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34384  0033BC  B4D8               	btfsc	status,2,c
 34385  0033BE  D018               	goto	l10086
 34386                           
 34387                           ; BSR set to: 0
 34388                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 34389  0033C0  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34390  0033C4  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34391  0033C8  0E2D               	movlw	45
 34392  0033CA  6EDF               	movwf	indf2,c
 34393                           
 34394                           ; BSR set to: 0
 34395  0033CC  0100               	movlb	0	; () banked
 34396  0033CE  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34397  0033D0  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34398                           
 34399                           ; BSR set to: 0
 34400                           ;doprnt.c: 1168: while(width > 0) {
 34401  0033D2  D00E               	goto	l10086
 34402  0033D4                     l10080:
 34403                           
 34404                           ; BSR set to: 0
 34405                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 34406  0033D4  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34407  0033D8  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34408  0033DC  0E30               	movlw	48
 34409  0033DE  6EDF               	movwf	indf2,c
 34410                           
 34411                           ; BSR set to: 0
 34412  0033E0  0100               	movlb	0	; () banked
 34413  0033E2  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34414  0033E4  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34415                           
 34416                           ; BSR set to: 0
 34417                           ;doprnt.c: 1170: width--;
 34418  0033E6  0100               	movlb	0	; () banked
 34419  0033E8  07DB               	decf	sprintf@width& (0+255),f,b
 34420  0033EA  A0D8               	btfss	status,0,c
 34421  0033EC  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34422  0033EE  D000               	goto	l10086
 34423  0033F0                     l10086:
 34424                           
 34425                           ; BSR set to: 0
 34426  0033F0  0100               	movlb	0	; () banked
 34427  0033F2  BFDC               	btfsc	(sprintf@width+1)& (0+255),7,b
 34428  0033F4  D08A               	goto	l10110
 34429  0033F6  0100               	movlb	0	; () banked
 34430  0033F8  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 34431  0033FA  E1EC               	bnz	l10080
 34432  0033FC  0100               	movlb	0	; () banked
 34433  0033FE  05DB               	decf	sprintf@width& (0+255),w,b
 34434  003400  A0D8               	btfss	status,0,c
 34435  003402  D083               	goto	l10110
 34436  003404  D7E7               	goto	l10080
 34437                           
 34438                           ; BSR set to: 0
 34439                           ;doprnt.c: 1171: }
 34440                           ;doprnt.c: 1173: } else
 34441  003406  D081               	goto	l10110
 34442                           
 34443                           ; BSR set to: 0
 34444                           ;doprnt.c: 1175: {
 34445                           ;doprnt.c: 1180: while(width > 0) {
 34446  003408  D00E               	goto	l10094
 34447  00340A                     l10088:
 34448                           
 34449                           ; BSR set to: 0
 34450                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 34451  00340A  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34452  00340E  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34453  003412  0E20               	movlw	32
 34454  003414  6EDF               	movwf	indf2,c
 34455                           
 34456                           ; BSR set to: 0
 34457  003416  0100               	movlb	0	; () banked
 34458  003418  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34459  00341A  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34460                           
 34461                           ; BSR set to: 0
 34462                           ;doprnt.c: 1182: width--;
 34463  00341C  0100               	movlb	0	; () banked
 34464  00341E  07DB               	decf	sprintf@width& (0+255),f,b
 34465  003420  A0D8               	btfss	status,0,c
 34466  003422  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 34467  003424  D000               	goto	l10094
 34468  003426                     l10094:
 34469                           
 34470                           ; BSR set to: 0
 34471  003426  0100               	movlb	0	; () banked
 34472  003428  BFDC               	btfsc	(sprintf@width+1)& (0+255),7,b
 34473  00342A  D007               	goto	l10096
 34474  00342C  0100               	movlb	0	; () banked
 34475  00342E  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 34476  003430  E1EC               	bnz	l10088
 34477  003432  0100               	movlb	0	; () banked
 34478  003434  05DB               	decf	sprintf@width& (0+255),w,b
 34479  003436  B0D8               	btfsc	status,0,c
 34480  003438  D7E8               	goto	l10088
 34481  00343A                     l10096:
 34482                           
 34483                           ; BSR set to: 0
 34484                           ;doprnt.c: 1183: }
 34485                           ;doprnt.c: 1188: if(flag & 0x03)
 34486  00343A  0E03               	movlw	3
 34487  00343C  0100               	movlb	0	; () banked
 34488  00343E  15DD               	andwf	sprintf@flag& (0+255),w,b
 34489  003440  0100               	movlb	0	; () banked
 34490  003442  6FBC               	movwf	??_sprintf& (0+255),b
 34491  003444  0E00               	movlw	0
 34492  003446  0100               	movlb	0	; () banked
 34493  003448  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34494  00344A  0100               	movlb	0	; () banked
 34495  00344C  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34496  00344E  0100               	movlb	0	; () banked
 34497  003450  51BC               	movf	??_sprintf& (0+255),w,b
 34498  003452  0100               	movlb	0	; () banked
 34499  003454  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34500  003456  B4D8               	btfsc	status,2,c
 34501  003458  D058               	goto	l10110
 34502                           
 34503                           ; BSR set to: 0
 34504                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 34505  00345A  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34506  00345E  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34507  003462  0E2D               	movlw	45
 34508  003464  D050               	goto	L18
 34509  003466                     l10100:
 34510                           
 34511                           ; BSR set to: 0
 34512  003466  0100               	movlb	0	; () banked
 34513  003468  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34514  00346A  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34515                           
 34516                           ; BSR set to: 0
 34517                           ;doprnt.c: 1195: }
 34518                           ;doprnt.c: 1196: while(c--) {
 34519                           
 34520                           ; BSR set to: 0
 34521  00346C  D04E               	goto	l10110
 34522  00346E                     l10102:
 34523                           
 34524                           ; BSR set to: 0
 34525                           ;doprnt.c: 1200: {
 34526                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 34527  00346E  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 34528  003472  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 34529  003476  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 34530  00347A  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 34531  00347E  0100               	movlb	0	; () banked
 34532  003480  51DF               	movf	sprintf@c& (0+255),w,b
 34533  003482  0D04               	mullw	4
 34534  003484  0E7F               	movlw	low _dpowers
 34535  003486  24F3               	addwf	prodl,w,c
 34536  003488  6EF6               	movwf	tblptrl,c
 34537  00348A  0EEC               	movlw	high _dpowers
 34538  00348C  20F4               	addwfc	prodh,w,c
 34539  00348E  6EF7               	movwf	tblptrh,c
 34540  003490                     	if	1	;There are 3 active tblptr bytes
 34541  003490  6AF8               	clrf	tblptru,c
 34542  003492  0E00               	movlw	low (__mediumconst shr (0+16))
 34543  003494  22F8               	addwfc	tblptru,f,c
 34544  003496                     	endif
 34545  003496  0009               	tblrd		*+
 34546  003498  CFF5 F064          	movff	tablat,___lldiv@divisor
 34547  00349C  0009               	tblrd		*+
 34548  00349E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 34549  0034A2  0009               	tblrd		*+
 34550  0034A4  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 34551  0034A8  000A               	tblrd		*-
 34552  0034AA  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 34553  0034AE  EC0E  F04D         	call	___lldiv	;wreg free
 34554  0034B2  C060  F0CE         	movff	?___lldiv,sprintf@tmpval
 34555  0034B6  C061  F0CF         	movff	?___lldiv+1,sprintf@tmpval+1
 34556  0034BA  C062  F0D0         	movff	?___lldiv+2,sprintf@tmpval+2
 34557  0034BE  C063  F0D1         	movff	?___lldiv+3,sprintf@tmpval+3
 34558                           
 34559                           ;doprnt.c: 1202: tmpval.vd %= 10;
 34560  0034C2  C0CE  F06D         	movff	sprintf@tmpval,___llmod@dividend
 34561  0034C6  C0CF  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 34562  0034CA  C0D0  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 34563  0034CE  C0D1  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 34564  0034D2  0E0A               	movlw	10
 34565  0034D4  0100               	movlb	0	; () banked
 34566  0034D6  6F71               	movwf	___llmod@divisor& (0+255),b
 34567  0034D8  0E00               	movlw	0
 34568  0034DA  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 34569  0034DC  0E00               	movlw	0
 34570  0034DE  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 34571  0034E0  0E00               	movlw	0
 34572  0034E2  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 34573  0034E4  EC7D  F04E         	call	___llmod	;wreg free
 34574  0034E8  C06D  F0CE         	movff	?___llmod,sprintf@tmpval
 34575  0034EC  C06E  F0CF         	movff	?___llmod+1,sprintf@tmpval+1
 34576  0034F0  C06F  F0D0         	movff	?___llmod+2,sprintf@tmpval+2
 34577  0034F4  C070  F0D1         	movff	?___llmod+3,sprintf@tmpval+3
 34578                           
 34579                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 34580  0034F8  0100               	movlb	0	; () banked
 34581  0034FA  51CE               	movf	sprintf@tmpval& (0+255),w,b
 34582  0034FC  0F30               	addlw	48
 34583  0034FE  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34584  003502  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34585  003506                     L18:
 34586  003506  6EDF               	movwf	indf2,c
 34587  003508  D7AE               	goto	l10100
 34588  00350A                     l10110:
 34589                           
 34590                           ; BSR set to: 0
 34591  00350A  0100               	movlb	0	; () banked
 34592  00350C  07DF               	decf	sprintf@c& (0+255),f,b
 34593  00350E  0100               	movlb	0	; () banked
 34594  003510  29DF               	incf	sprintf@c& (0+255),w,b
 34595  003512  B4D8               	btfsc	status,2,c
 34596  003514  D010               	goto	l10118
 34597  003516  D7AB               	goto	l10102
 34598                           
 34599                           ; BSR set to: 0
 34600                           ;doprnt.c: 1204: }
 34601                           ;doprnt.c: 1206: }
 34602                           ;doprnt.c: 1207: while(exp > 0) {
 34603  003518  D00E               	goto	l10118
 34604  00351A                     l10112:
 34605                           
 34606                           ; BSR set to: 0
 34607                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 34608  00351A  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34609  00351E  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34610  003522  0E30               	movlw	48
 34611  003524  6EDF               	movwf	indf2,c
 34612                           
 34613                           ; BSR set to: 0
 34614  003526  0100               	movlb	0	; () banked
 34615  003528  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34616  00352A  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34617                           
 34618                           ; BSR set to: 0
 34619                           ;doprnt.c: 1209: exp--;
 34620  00352C  0100               	movlb	0	; () banked
 34621  00352E  07D2               	decf	sprintf@exp& (0+255),f,b
 34622  003530  A0D8               	btfss	status,0,c
 34623  003532  07D3               	decf	(sprintf@exp+1)& (0+255),f,b
 34624  003534  D000               	goto	l10118
 34625  003536                     l10118:
 34626                           
 34627                           ; BSR set to: 0
 34628  003536  0100               	movlb	0	; () banked
 34629  003538  BFD3               	btfsc	(sprintf@exp+1)& (0+255),7,b
 34630  00353A  D007               	goto	l10120
 34631  00353C  0100               	movlb	0	; () banked
 34632  00353E  51D3               	movf	(sprintf@exp+1)& (0+255),w,b
 34633  003540  E1EC               	bnz	l10112
 34634  003542  0100               	movlb	0	; () banked
 34635  003544  05D2               	decf	sprintf@exp& (0+255),w,b
 34636  003546  B0D8               	btfsc	status,0,c
 34637  003548  D7E8               	goto	l10112
 34638  00354A                     l10120:
 34639                           
 34640                           ; BSR set to: 0
 34641                           ;doprnt.c: 1210: }
 34642                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 34643  00354A  0100               	movlb	0	; () banked
 34644  00354C  BFCD               	btfsc	(sprintf@prec+1)& (0+255),7,b
 34645  00354E  D00C               	goto	l2690
 34646  003550  0100               	movlb	0	; () banked
 34647  003552  51CD               	movf	(sprintf@prec+1)& (0+255),w,b
 34648  003554  E105               	bnz	u10140
 34649  003556  0E09               	movlw	9
 34650  003558  0100               	movlb	0	; () banked
 34651  00355A  5DCC               	subwf	sprintf@prec& (0+255),w,b
 34652  00355C  A0D8               	btfss	status,0,c
 34653  00355E  D004               	goto	l2690
 34654  003560                     u10140:
 34655                           
 34656                           ; BSR set to: 0
 34657                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 34658  003560  0E08               	movlw	8
 34659  003562  0100               	movlb	0	; () banked
 34660  003564  6FDF               	movwf	sprintf@c& (0+255),b
 34661  003566  D003               	goto	l10124
 34662  003568                     l2690:
 34663                           
 34664                           ; BSR set to: 0
 34665                           ;doprnt.c: 1213: else
 34666                           ;doprnt.c: 1214: c = prec;
 34667  003568  C0CC  F0DF         	movff	sprintf@prec,sprintf@c
 34668  00356C  D000               	goto	l10124
 34669  00356E                     l10124:
 34670                           
 34671                           ; BSR set to: 0
 34672                           ;doprnt.c: 1215: prec -= c;
 34673  00356E  0100               	movlb	0	; () banked
 34674  003570  51DF               	movf	sprintf@c& (0+255),w,b
 34675  003572  0100               	movlb	0	; () banked
 34676  003574  5FCC               	subwf	sprintf@prec& (0+255),f,b
 34677  003576  0E00               	movlw	0
 34678  003578  0100               	movlb	0	; () banked
 34679  00357A  BFDF               	btfsc	sprintf@c& (0+255),7,b
 34680  00357C  0EFF               	movlw	255
 34681  00357E  0100               	movlb	0	; () banked
 34682  003580  5BCD               	subwfb	(sprintf@prec+1)& (0+255),f,b
 34683                           
 34684                           ; BSR set to: 0
 34685                           ;doprnt.c: 1219: if(c)
 34686  003582  0100               	movlb	0	; () banked
 34687  003584  51DF               	movf	sprintf@c& (0+255),w,b
 34688  003586  0100               	movlb	0	; () banked
 34689  003588  B4D8               	btfsc	status,2,c
 34690  00358A  D00A               	goto	l10132
 34691                           
 34692                           ; BSR set to: 0
 34693                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 34694  00358C  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34695  003590  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34696  003594  0E2E               	movlw	46
 34697  003596  6EDF               	movwf	indf2,c
 34698                           
 34699                           ; BSR set to: 0
 34700  003598  0100               	movlb	0	; () banked
 34701  00359A  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34702  00359C  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34703  00359E  D000               	goto	l10132
 34704  0035A0                     l10132:
 34705                           
 34706                           ; BSR set to: 0
 34707                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 34708  0035A0  0100               	movlb	0	; () banked
 34709  0035A2  51DF               	movf	sprintf@c& (0+255),w,b
 34710  0035A4  ECE2  F02D         	call	_scale
 34711  0035A8  C089  F0C2         	movff	?_scale,_sprintf$4116
 34712  0035AC  C08A  F0C3         	movff	?_scale+1,_sprintf$4116+1
 34713  0035B0  C08B  F0C4         	movff	?_scale+2,_sprintf$4116+2
 34714                           
 34715                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 34716  0035B4  C0D8  F07D         	movff	sprintf@fval,___ftmul@f2
 34717  0035B8  C0D9  F07E         	movff	sprintf@fval+1,___ftmul@f2+1
 34718  0035BC  C0DA  F07F         	movff	sprintf@fval+2,___ftmul@f2+2
 34719  0035C0  C0C2  F07A         	movff	_sprintf$4116,___ftmul@f1
 34720  0035C4  C0C3  F07B         	movff	_sprintf$4116+1,___ftmul@f1+1
 34721  0035C8  C0C4  F07C         	movff	_sprintf$4116+2,___ftmul@f1+2
 34722  0035CC  EC5A  F041         	call	___ftmul	;wreg free
 34723  0035D0  C07A  F09F         	movff	?___ftmul,___fttol@f1
 34724  0035D4  C07B  F0A0         	movff	?___ftmul+1,___fttol@f1+1
 34725  0035D8  C07C  F0A1         	movff	?___ftmul+2,___fttol@f1+2
 34726  0035DC  EC67  F043         	call	___fttol	;wreg free
 34727  0035E0  C09F  F0D4         	movff	?___fttol,sprintf@val
 34728  0035E4  C0A0  F0D5         	movff	?___fttol+1,sprintf@val+1
 34729  0035E8  C0A1  F0D6         	movff	?___fttol+2,sprintf@val+2
 34730  0035EC  C0A2  F0D7         	movff	?___fttol+3,sprintf@val+3
 34731                           
 34732                           ;doprnt.c: 1228: while(c--) {
 34733  0035F0  D07B               	goto	l10146
 34734  0035F2                     l10136:
 34735                           
 34736                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 34737  0035F2  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 34738  0035F6  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 34739  0035FA  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 34740  0035FE  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 34741  003602  0100               	movlb	0	; () banked
 34742  003604  51DF               	movf	sprintf@c& (0+255),w,b
 34743  003606  0D04               	mullw	4
 34744  003608  0E7F               	movlw	low _dpowers
 34745  00360A  24F3               	addwf	prodl,w,c
 34746  00360C  6EF6               	movwf	tblptrl,c
 34747  00360E  0EEC               	movlw	high _dpowers
 34748  003610  20F4               	addwfc	prodh,w,c
 34749  003612  6EF7               	movwf	tblptrh,c
 34750  003614                     	if	1	;There are 3 active tblptr bytes
 34751  003614  6AF8               	clrf	tblptru,c
 34752  003616  0E00               	movlw	low (__mediumconst shr (0+16))
 34753  003618  22F8               	addwfc	tblptru,f,c
 34754  00361A                     	endif
 34755  00361A  0009               	tblrd		*+
 34756  00361C  CFF5 F064          	movff	tablat,___lldiv@divisor
 34757  003620  0009               	tblrd		*+
 34758  003622  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 34759  003626  0009               	tblrd		*+
 34760  003628  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 34761  00362C  000A               	tblrd		*-
 34762  00362E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 34763  003632  EC0E  F04D         	call	___lldiv	;wreg free
 34764  003636  C060  F0CE         	movff	?___lldiv,sprintf@tmpval
 34765  00363A  C061  F0CF         	movff	?___lldiv+1,sprintf@tmpval+1
 34766  00363E  C062  F0D0         	movff	?___lldiv+2,sprintf@tmpval+2
 34767  003642  C063  F0D1         	movff	?___lldiv+3,sprintf@tmpval+3
 34768                           
 34769                           ;doprnt.c: 1230: tmpval.vd %= 10;
 34770  003646  C0CE  F06D         	movff	sprintf@tmpval,___llmod@dividend
 34771  00364A  C0CF  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
 34772  00364E  C0D0  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
 34773  003652  C0D1  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
 34774  003656  0E0A               	movlw	10
 34775  003658  0100               	movlb	0	; () banked
 34776  00365A  6F71               	movwf	___llmod@divisor& (0+255),b
 34777  00365C  0E00               	movlw	0
 34778  00365E  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 34779  003660  0E00               	movlw	0
 34780  003662  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 34781  003664  0E00               	movlw	0
 34782  003666  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 34783  003668  EC7D  F04E         	call	___llmod	;wreg free
 34784  00366C  C06D  F0CE         	movff	?___llmod,sprintf@tmpval
 34785  003670  C06E  F0CF         	movff	?___llmod+1,sprintf@tmpval+1
 34786  003674  C06F  F0D0         	movff	?___llmod+2,sprintf@tmpval+2
 34787  003678  C070  F0D1         	movff	?___llmod+3,sprintf@tmpval+3
 34788                           
 34789                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 34790  00367C  0100               	movlb	0	; () banked
 34791  00367E  51CE               	movf	sprintf@tmpval& (0+255),w,b
 34792  003680  0F30               	addlw	48
 34793  003682  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34794  003686  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34795  00368A  6EDF               	movwf	indf2,c
 34796                           
 34797                           ; BSR set to: 0
 34798  00368C  0100               	movlb	0	; () banked
 34799  00368E  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34800  003690  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34801                           
 34802                           ; BSR set to: 0
 34803                           ;doprnt.c: 1232: val %= dpowers[c];
 34804  003692  C0D4  F06D         	movff	sprintf@val,___llmod@dividend
 34805  003696  C0D5  F06E         	movff	sprintf@val+1,___llmod@dividend+1
 34806  00369A  C0D6  F06F         	movff	sprintf@val+2,___llmod@dividend+2
 34807  00369E  C0D7  F070         	movff	sprintf@val+3,___llmod@dividend+3
 34808  0036A2  0100               	movlb	0	; () banked
 34809  0036A4  51DF               	movf	sprintf@c& (0+255),w,b
 34810  0036A6  0D04               	mullw	4
 34811  0036A8  0E7F               	movlw	low _dpowers
 34812  0036AA  24F3               	addwf	prodl,w,c
 34813  0036AC  6EF6               	movwf	tblptrl,c
 34814  0036AE  0EEC               	movlw	high _dpowers
 34815  0036B0  20F4               	addwfc	prodh,w,c
 34816  0036B2  6EF7               	movwf	tblptrh,c
 34817  0036B4                     	if	1	;There are 3 active tblptr bytes
 34818  0036B4  6AF8               	clrf	tblptru,c
 34819  0036B6  0E00               	movlw	low (__mediumconst shr (0+16))
 34820  0036B8  22F8               	addwfc	tblptru,f,c
 34821  0036BA                     	endif
 34822  0036BA  0009               	tblrd		*+
 34823  0036BC  CFF5 F071          	movff	tablat,___llmod@divisor
 34824  0036C0  0009               	tblrd		*+
 34825  0036C2  CFF5 F072          	movff	tablat,___llmod@divisor+1
 34826  0036C6  0009               	tblrd		*+
 34827  0036C8  CFF5 F073          	movff	tablat,___llmod@divisor+2
 34828  0036CC  000A               	tblrd		*-
 34829  0036CE  CFF5 F074          	movff	tablat,___llmod@divisor+3
 34830  0036D2  EC7D  F04E         	call	___llmod	;wreg free
 34831  0036D6  C06D  F0D4         	movff	?___llmod,sprintf@val
 34832  0036DA  C06E  F0D5         	movff	?___llmod+1,sprintf@val+1
 34833  0036DE  C06F  F0D6         	movff	?___llmod+2,sprintf@val+2
 34834  0036E2  C070  F0D7         	movff	?___llmod+3,sprintf@val+3
 34835  0036E6  D000               	goto	l10146
 34836  0036E8                     l10146:
 34837  0036E8  0100               	movlb	0	; () banked
 34838  0036EA  07DF               	decf	sprintf@c& (0+255),f,b
 34839  0036EC  0100               	movlb	0	; () banked
 34840  0036EE  29DF               	incf	sprintf@c& (0+255),w,b
 34841  0036F0  B4D8               	btfsc	status,2,c
 34842  0036F2  D010               	goto	l10154
 34843  0036F4  D77E               	goto	l10136
 34844                           
 34845                           ; BSR set to: 0
 34846                           ;doprnt.c: 1233: }
 34847                           ;doprnt.c: 1235: while(prec) {
 34848  0036F6  D00E               	goto	l10154
 34849  0036F8                     l10148:
 34850                           
 34851                           ; BSR set to: 0
 34852                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 34853  0036F8  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 34854  0036FC  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 34855  003700  0E30               	movlw	48
 34856  003702  6EDF               	movwf	indf2,c
 34857                           
 34858                           ; BSR set to: 0
 34859  003704  0100               	movlb	0	; () banked
 34860  003706  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 34861  003708  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 34862                           
 34863                           ; BSR set to: 0
 34864                           ;doprnt.c: 1237: prec--;
 34865  00370A  0100               	movlb	0	; () banked
 34866  00370C  07CC               	decf	sprintf@prec& (0+255),f,b
 34867  00370E  A0D8               	btfss	status,0,c
 34868  003710  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
 34869  003712  D000               	goto	l10154
 34870  003714                     l10154:
 34871                           
 34872                           ; BSR set to: 0
 34873  003714  0100               	movlb	0	; () banked
 34874  003716  51CC               	movf	sprintf@prec& (0+255),w,b
 34875  003718  0100               	movlb	0	; () banked
 34876  00371A  11CD               	iorwf	(sprintf@prec+1)& (0+255),w,b
 34877  00371C  B4D8               	btfsc	status,2,c
 34878  00371E  D235               	goto	l10274
 34879  003720  D7EB               	goto	l10148
 34880                           
 34881                           ; BSR set to: 0
 34882                           ;doprnt.c: 1238: }
 34883                           ;doprnt.c: 1245: continue;
 34884  003722  D233               	goto	l10274
 34885  003724                     l10156:
 34886                           
 34887                           ; BSR set to: 0
 34888                           ;doprnt.c: 1246: }
 34889                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 34890  003724  0EC0               	movlw	192
 34891  003726  0100               	movlb	0	; () banked
 34892  003728  15DD               	andwf	sprintf@flag& (0+255),w,b
 34893  00372A  0100               	movlb	0	; () banked
 34894  00372C  6FBC               	movwf	??_sprintf& (0+255),b
 34895  00372E  0E00               	movlw	0
 34896  003730  0100               	movlb	0	; () banked
 34897  003732  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 34898  003734  0100               	movlb	0	; () banked
 34899  003736  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 34900  003738  0100               	movlb	0	; () banked
 34901  00373A  51BC               	movf	??_sprintf& (0+255),w,b
 34902  00373C  0100               	movlb	0	; () banked
 34903  00373E  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 34904  003740  A4D8               	btfss	status,2,c
 34905  003742  D035               	goto	l2699
 34906                           
 34907                           ; BSR set to: 0
 34908                           ;doprnt.c: 1253: {
 34909                           ;doprnt.c: 1255: if(flag & 0x10)
 34910  003744  0100               	movlb	0	; () banked
 34911  003746  A9DD               	btfss	sprintf@flag& (0+255),4,b
 34912  003748  D00E               	goto	l10164
 34913                           
 34914                           ; BSR set to: 0
 34915                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 34916  00374A  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 34917  00374E  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 34918  003752  CFDE F0D4          	movff	postinc2,sprintf@val
 34919  003756  CFDE F0D5          	movff	postinc2,sprintf@val+1
 34920  00375A  CFDE F0D6          	movff	postinc2,sprintf@val+2
 34921  00375E  CFDE F0D7          	movff	postinc2,sprintf@val+3
 34922                           
 34923                           ; BSR set to: 0
 34924  003762  0E04               	movlw	4
 34925  003764  D00F               	goto	L19
 34926  003766                     l10164:
 34927                           
 34928                           ; BSR set to: 0
 34929                           ;doprnt.c: 1257: else
 34930                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 34931  003766  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 34932  00376A  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 34933  00376E  CFDE F0D4          	movff	postinc2,sprintf@val
 34934  003772  CFDD F0D5          	movff	postdec2,sprintf@val+1
 34935  003776  0100               	movlb	0	; () banked
 34936  003778  0E00               	movlw	0
 34937  00377A  BFD5               	btfsc	(sprintf@val+1)& (0+255),7,b
 34938  00377C  0EFF               	movlw	-1
 34939  00377E  6FD6               	movwf	(sprintf@val+2)& (0+255),b
 34940  003780  6FD7               	movwf	(sprintf@val+3)& (0+255),b
 34941                           
 34942                           ; BSR set to: 0
 34943  003782  0E02               	movlw	2
 34944  003784                     L19:
 34945  003784  0100               	movlb	0	; () banked
 34946  003786  27CA               	addwf	sprintf@ap& (0+255),f,b
 34947  003788  0E00               	movlw	0
 34948  00378A  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 34949  00378C  D000               	goto	l10168
 34950  00378E                     l10168:
 34951                           
 34952                           ; BSR set to: 0
 34953                           ;doprnt.c: 1261: if((long)val < 0) {
 34954  00378E  0100               	movlb	0	; () banked
 34955  003790  AFD7               	btfss	(sprintf@val+3)& (0+255),7,b
 34956  003792  D090               	goto	l10212
 34957                           
 34958                           ; BSR set to: 0
 34959                           ;doprnt.c: 1262: flag |= 0x03;
 34960  003794  0E03               	movlw	3
 34961  003796  0100               	movlb	0	; () banked
 34962  003798  13DD               	iorwf	sprintf@flag& (0+255),f,b
 34963                           
 34964                           ; BSR set to: 0
 34965                           ;doprnt.c: 1263: val = -val;
 34966  00379A  0100               	movlb	0	; () banked
 34967  00379C  1FD7               	comf	(sprintf@val+3)& (0+255),f,b
 34968  00379E  1FD6               	comf	(sprintf@val+2)& (0+255),f,b
 34969  0037A0  1FD5               	comf	(sprintf@val+1)& (0+255),f,b
 34970  0037A2  6DD4               	negf	sprintf@val& (0+255),b
 34971  0037A4  0E00               	movlw	0
 34972  0037A6  23D5               	addwfc	(sprintf@val+1)& (0+255),f,b
 34973  0037A8  23D6               	addwfc	(sprintf@val+2)& (0+255),f,b
 34974  0037AA  23D7               	addwfc	(sprintf@val+3)& (0+255),f,b
 34975                           
 34976                           ; BSR set to: 0
 34977                           ;doprnt.c: 1264: }
 34978                           ;doprnt.c: 1266: }
 34979  0037AC  D083               	goto	l10212
 34980  0037AE                     l2699:
 34981                           
 34982                           ; BSR set to: 0
 34983                           ;doprnt.c: 1268: else
 34984                           ;doprnt.c: 1273: {
 34985                           ;doprnt.c: 1281: if(flag & 0x10)
 34986  0037AE  0100               	movlb	0	; () banked
 34987  0037B0  A9DD               	btfss	sprintf@flag& (0+255),4,b
 34988  0037B2  D00E               	goto	l10178
 34989                           
 34990                           ; BSR set to: 0
 34991                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 34992  0037B4  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 34993  0037B8  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 34994  0037BC  CFDE F0D4          	movff	postinc2,sprintf@val
 34995  0037C0  CFDE F0D5          	movff	postinc2,sprintf@val+1
 34996  0037C4  CFDE F0D6          	movff	postinc2,sprintf@val+2
 34997  0037C8  CFDE F0D7          	movff	postinc2,sprintf@val+3
 34998                           
 34999                           ; BSR set to: 0
 35000  0037CC  0E04               	movlw	4
 35001  0037CE  D010               	goto	L20
 35002  0037D0                     l10178:
 35003                           
 35004                           ; BSR set to: 0
 35005                           ;doprnt.c: 1283: else
 35006                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 35007  0037D0  C0CA  FFD9         	movff	sprintf@ap,fsr2l
 35008  0037D4  C0CB  FFDA         	movff	sprintf@ap+1,fsr2h
 35009  0037D8  CFDE F0BC          	movff	postinc2,??_sprintf
 35010  0037DC  CFDD F0BD          	movff	postdec2,??_sprintf+1
 35011  0037E0  C0BC  F0D4         	movff	??_sprintf,sprintf@val
 35012  0037E4  C0BD  F0D5         	movff	??_sprintf+1,sprintf@val+1
 35013  0037E8  0100               	movlb	0	; () banked
 35014  0037EA  6BD6               	clrf	(sprintf@val+2)& (0+255),b
 35015  0037EC  6BD7               	clrf	(sprintf@val+3)& (0+255),b
 35016                           
 35017                           ; BSR set to: 0
 35018  0037EE  0E02               	movlw	2
 35019  0037F0                     L20:
 35020  0037F0  0100               	movlb	0	; () banked
 35021  0037F2  27CA               	addwf	sprintf@ap& (0+255),f,b
 35022  0037F4  0E00               	movlw	0
 35023  0037F6  23CB               	addwfc	(sprintf@ap+1)& (0+255),f,b
 35024                           
 35025                           ; BSR set to: 0
 35026                           ;doprnt.c: 1287: }
 35027                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 35028                           
 35029                           ; BSR set to: 0
 35030  0037F8  D05D               	goto	l10212
 35031                           
 35032                           ; BSR set to: 0
 35033                           
 35034                           ;doprnt.c: 1299: case 0x00:
 35035  0037FA  D000               	goto	l10182
 35036  0037FC                     l10182:
 35037                           
 35038                           ; BSR set to: 0
 35039                           ;doprnt.c: 1302: case 0xC0:
 35040                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 35041  0037FC  0E01               	movlw	1
 35042  0037FE  0100               	movlb	0	; () banked
 35043  003800  6FDF               	movwf	sprintf@c& (0+255),b
 35044  003802                     l10184:
 35045                           
 35046                           ; BSR set to: 0
 35047  003802  0E0A               	movlw	10
 35048  003804  0100               	movlb	0	; () banked
 35049  003806  19DF               	xorwf	sprintf@c& (0+255),w,b
 35050  003808  B4D8               	btfsc	status,2,c
 35051  00380A  D061               	goto	l10214
 35052  00380C  D001               	goto	l10188
 35053                           
 35054                           ; BSR set to: 0
 35055  00380E  D05F               	goto	l10214
 35056  003810                     l10188:
 35057                           
 35058                           ; BSR set to: 0
 35059                           ;doprnt.c: 1306: if(val < dpowers[c])
 35060  003810  0100               	movlb	0	; () banked
 35061  003812  51DF               	movf	sprintf@c& (0+255),w,b
 35062  003814  0D04               	mullw	4
 35063  003816  0E7F               	movlw	low _dpowers
 35064  003818  24F3               	addwf	prodl,w,c
 35065  00381A  6EF6               	movwf	tblptrl,c
 35066  00381C  0EEC               	movlw	high _dpowers
 35067  00381E  20F4               	addwfc	prodh,w,c
 35068  003820  6EF7               	movwf	tblptrh,c
 35069  003822                     	if	1	;There are 3 active tblptr bytes
 35070  003822  6AF8               	clrf	tblptru,c
 35071  003824  0E00               	movlw	low (__mediumconst shr (0+16))
 35072  003826  22F8               	addwfc	tblptru,f,c
 35073  003828                     	endif
 35074  003828  0009               	tblrd		*+
 35075  00382A  50F5               	movf	tablat,w,c
 35076  00382C  0100               	movlb	0	; () banked
 35077  00382E  5DD4               	subwf	sprintf@val& (0+255),w,b
 35078  003830  0009               	tblrd		*+
 35079  003832  50F5               	movf	tablat,w,c
 35080  003834  0100               	movlb	0	; () banked
 35081  003836  59D5               	subwfb	(sprintf@val+1)& (0+255),w,b
 35082  003838  0009               	tblrd		*+
 35083  00383A  50F5               	movf	tablat,w,c
 35084  00383C  0100               	movlb	0	; () banked
 35085  00383E  59D6               	subwfb	(sprintf@val+2)& (0+255),w,b
 35086  003840  0009               	tblrd		*+
 35087  003842  50F5               	movf	tablat,w,c
 35088  003844  0100               	movlb	0	; () banked
 35089  003846  59D7               	subwfb	(sprintf@val+3)& (0+255),w,b
 35090  003848  A0D8               	btfss	status,0,c
 35091  00384A  D041               	goto	l10214
 35092  00384C  D001               	goto	l10192
 35093                           
 35094                           ; BSR set to: 0
 35095                           ;doprnt.c: 1307: break;
 35096  00384E  D03F               	goto	l10214
 35097  003850                     l10192:
 35098                           
 35099                           ; BSR set to: 0
 35100  003850  0100               	movlb	0	; () banked
 35101  003852  2BDF               	incf	sprintf@c& (0+255),f,b
 35102  003854  D7D6               	goto	l10184
 35103                           
 35104                           ; BSR set to: 0
 35105                           ;doprnt.c: 1309: break;
 35106                           
 35107                           ; BSR set to: 0
 35108  003856  D03B               	goto	l10214
 35109  003858                     l10196:
 35110                           
 35111                           ; BSR set to: 0
 35112                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 35113  003858  0E01               	movlw	1
 35114  00385A  0100               	movlb	0	; () banked
 35115  00385C  6FDF               	movwf	sprintf@c& (0+255),b
 35116  00385E                     l10198:
 35117                           
 35118                           ; BSR set to: 0
 35119  00385E  0E08               	movlw	8
 35120  003860  0100               	movlb	0	; () banked
 35121  003862  19DF               	xorwf	sprintf@c& (0+255),w,b
 35122  003864  B4D8               	btfsc	status,2,c
 35123  003866  D033               	goto	l10214
 35124  003868  D001               	goto	l10202
 35125                           
 35126                           ; BSR set to: 0
 35127  00386A  D031               	goto	l10214
 35128  00386C                     l10202:
 35129                           
 35130                           ; BSR set to: 0
 35131                           ;doprnt.c: 1317: if(val < hexpowers[c])
 35132  00386C  0100               	movlb	0	; () banked
 35133  00386E  51DF               	movf	sprintf@c& (0+255),w,b
 35134  003870  0D04               	mullw	4
 35135  003872  0EF5               	movlw	low _hexpowers
 35136  003874  24F3               	addwf	prodl,w,c
 35137  003876  6EF6               	movwf	tblptrl,c
 35138  003878  0EEC               	movlw	high _hexpowers
 35139  00387A  20F4               	addwfc	prodh,w,c
 35140  00387C  6EF7               	movwf	tblptrh,c
 35141  00387E                     	if	1	;There are 3 active tblptr bytes
 35142  00387E  6AF8               	clrf	tblptru,c
 35143  003880  0E00               	movlw	low (__mediumconst shr (0+16))
 35144  003882  22F8               	addwfc	tblptru,f,c
 35145  003884                     	endif
 35146  003884  0009               	tblrd		*+
 35147  003886  50F5               	movf	tablat,w,c
 35148  003888  0100               	movlb	0	; () banked
 35149  00388A  5DD4               	subwf	sprintf@val& (0+255),w,b
 35150  00388C  0009               	tblrd		*+
 35151  00388E  50F5               	movf	tablat,w,c
 35152  003890  0100               	movlb	0	; () banked
 35153  003892  59D5               	subwfb	(sprintf@val+1)& (0+255),w,b
 35154  003894  0009               	tblrd		*+
 35155  003896  50F5               	movf	tablat,w,c
 35156  003898  0100               	movlb	0	; () banked
 35157  00389A  59D6               	subwfb	(sprintf@val+2)& (0+255),w,b
 35158  00389C  0009               	tblrd		*+
 35159  00389E  50F5               	movf	tablat,w,c
 35160  0038A0  0100               	movlb	0	; () banked
 35161  0038A2  59D7               	subwfb	(sprintf@val+3)& (0+255),w,b
 35162  0038A4  A0D8               	btfss	status,0,c
 35163  0038A6  D013               	goto	l10214
 35164  0038A8  D001               	goto	l10206
 35165                           
 35166                           ; BSR set to: 0
 35167                           ;doprnt.c: 1318: break;
 35168  0038AA  D011               	goto	l10214
 35169  0038AC                     l10206:
 35170                           
 35171                           ; BSR set to: 0
 35172  0038AC  0100               	movlb	0	; () banked
 35173  0038AE  2BDF               	incf	sprintf@c& (0+255),f,b
 35174  0038B0  D7D6               	goto	l10198
 35175                           
 35176                           ; BSR set to: 0
 35177                           ;doprnt.c: 1336: }
 35178                           
 35179                           ; BSR set to: 0
 35180                           ;doprnt.c: 1320: break;
 35181                           
 35182                           ; BSR set to: 0
 35183  0038B2  D00D               	goto	l10214
 35184  0038B4                     l10212:
 35185                           
 35186                           ; BSR set to: 0
 35187  0038B4  0100               	movlb	0	; () banked
 35188  0038B6  51DD               	movf	sprintf@flag& (0+255),w,b
 35189  0038B8  0BC0               	andlw	192
 35190                           
 35191                           ; Switch size 1, requested type "space"
 35192                           ; Number of cases is 3, Range of values is 0 to 192
 35193                           ; switch strategies available:
 35194                           ; Name         Instructions Cycles
 35195                           ; simple_byte           10     6 (average)
 35196                           ;	Chosen strategy is simple_byte
 35197  0038BA  0A00               	xorlw	0	; case 0
 35198  0038BC  B4D8               	btfsc	status,2,c
 35199  0038BE  D79E               	goto	l10182
 35200  0038C0  0A80               	xorlw	128	; case 128
 35201  0038C2  B4D8               	btfsc	status,2,c
 35202  0038C4  D7C9               	goto	l10196
 35203  0038C6  0A40               	xorlw	64	; case 192
 35204  0038C8  B4D8               	btfsc	status,2,c
 35205  0038CA  D798               	goto	l10182
 35206  0038CC  D000               	goto	l10214
 35207  0038CE                     l10214:
 35208                           
 35209                           ; BSR set to: 0
 35210                           ;doprnt.c: 1345: if(width && flag & 0x03)
 35211  0038CE  0100               	movlb	0	; () banked
 35212  0038D0  51DB               	movf	sprintf@width& (0+255),w,b
 35213  0038D2  0100               	movlb	0	; () banked
 35214  0038D4  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 35215  0038D6  B4D8               	btfsc	status,2,c
 35216  0038D8  D015               	goto	l10220
 35217                           
 35218                           ; BSR set to: 0
 35219  0038DA  0E03               	movlw	3
 35220  0038DC  0100               	movlb	0	; () banked
 35221  0038DE  15DD               	andwf	sprintf@flag& (0+255),w,b
 35222  0038E0  0100               	movlb	0	; () banked
 35223  0038E2  6FBC               	movwf	??_sprintf& (0+255),b
 35224  0038E4  0E00               	movlw	0
 35225  0038E6  0100               	movlb	0	; () banked
 35226  0038E8  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 35227  0038EA  0100               	movlb	0	; () banked
 35228  0038EC  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 35229  0038EE  0100               	movlb	0	; () banked
 35230  0038F0  51BC               	movf	??_sprintf& (0+255),w,b
 35231  0038F2  0100               	movlb	0	; () banked
 35232  0038F4  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 35233  0038F6  B4D8               	btfsc	status,2,c
 35234  0038F8  D005               	goto	l10220
 35235                           
 35236                           ; BSR set to: 0
 35237                           ;doprnt.c: 1346: width--;
 35238  0038FA  0100               	movlb	0	; () banked
 35239  0038FC  07DB               	decf	sprintf@width& (0+255),f,b
 35240  0038FE  A0D8               	btfss	status,0,c
 35241  003900  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 35242  003902  D000               	goto	l10220
 35243  003904                     l10220:
 35244                           
 35245                           ; BSR set to: 0
 35246                           ;doprnt.c: 1381: if(width > c)
 35247  003904  0E80               	movlw	128
 35248  003906  0100               	movlb	0	; () banked
 35249  003908  BFDF               	btfsc	sprintf@c& (0+255),7,b
 35250  00390A  0E7F               	movlw	127
 35251  00390C  0100               	movlb	0	; () banked
 35252  00390E  6FBC               	movwf	??_sprintf& (0+255),b
 35253  003910  0100               	movlb	0	; () banked
 35254  003912  51DB               	movf	sprintf@width& (0+255),w,b
 35255  003914  0100               	movlb	0	; () banked
 35256  003916  5DDF               	subwf	sprintf@c& (0+255),w,b
 35257  003918  0100               	movlb	0	; () banked
 35258  00391A  51DC               	movf	(sprintf@width+1)& (0+255),w,b
 35259  00391C  0A80               	xorlw	128
 35260  00391E  0100               	movlb	0	; () banked
 35261  003920  59BC               	subwfb	??_sprintf& (0+255),w,b
 35262  003922  B0D8               	btfsc	status,0,c
 35263  003924  D00B               	goto	l10224
 35264                           
 35265                           ; BSR set to: 0
 35266                           ;doprnt.c: 1382: width -= c;
 35267  003926  0100               	movlb	0	; () banked
 35268  003928  51DF               	movf	sprintf@c& (0+255),w,b
 35269  00392A  0100               	movlb	0	; () banked
 35270  00392C  5FDB               	subwf	sprintf@width& (0+255),f,b
 35271  00392E  0E00               	movlw	0
 35272  003930  0100               	movlb	0	; () banked
 35273  003932  BFDF               	btfsc	sprintf@c& (0+255),7,b
 35274  003934  0EFF               	movlw	255
 35275  003936  0100               	movlb	0	; () banked
 35276  003938  5BDC               	subwfb	(sprintf@width+1)& (0+255),f,b
 35277  00393A  D006               	goto	l10226
 35278  00393C                     l10224:
 35279                           
 35280                           ; BSR set to: 0
 35281                           ;doprnt.c: 1383: else
 35282                           ;doprnt.c: 1384: width = 0;
 35283  00393C  0E00               	movlw	0
 35284  00393E  0100               	movlb	0	; () banked
 35285  003940  6FDC               	movwf	(sprintf@width+1)& (0+255),b
 35286  003942  0E00               	movlw	0
 35287  003944  6FDB               	movwf	sprintf@width& (0+255),b
 35288  003946  D000               	goto	l10226
 35289  003948                     l10226:
 35290                           
 35291                           ; BSR set to: 0
 35292                           ;doprnt.c: 1387: if(flag & 0x04) {
 35293  003948  0100               	movlb	0	; () banked
 35294  00394A  A5DD               	btfss	sprintf@flag& (0+255),2,b
 35295  00394C  D035               	goto	l10242
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;doprnt.c: 1392: if(flag & 0x03)
 35299  00394E  0E03               	movlw	3
 35300  003950  0100               	movlb	0	; () banked
 35301  003952  15DD               	andwf	sprintf@flag& (0+255),w,b
 35302  003954  0100               	movlb	0	; () banked
 35303  003956  6FBC               	movwf	??_sprintf& (0+255),b
 35304  003958  0E00               	movlw	0
 35305  00395A  0100               	movlb	0	; () banked
 35306  00395C  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 35307  00395E  0100               	movlb	0	; () banked
 35308  003960  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 35309  003962  0100               	movlb	0	; () banked
 35310  003964  51BC               	movf	??_sprintf& (0+255),w,b
 35311  003966  0100               	movlb	0	; () banked
 35312  003968  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 35313  00396A  B4D8               	btfsc	status,2,c
 35314  00396C  D00A               	goto	l10234
 35315                           
 35316                           ; BSR set to: 0
 35317                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 35318  00396E  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 35319  003972  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 35320  003976  0E2D               	movlw	45
 35321  003978  6EDF               	movwf	indf2,c
 35322                           
 35323                           ; BSR set to: 0
 35324  00397A  0100               	movlb	0	; () banked
 35325  00397C  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 35326  00397E  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 35327  003980  D000               	goto	l10234
 35328  003982                     l10234:
 35329                           
 35330                           ; BSR set to: 0
 35331                           ;doprnt.c: 1415: if(width)
 35332  003982  0100               	movlb	0	; () banked
 35333  003984  51DB               	movf	sprintf@width& (0+255),w,b
 35334  003986  0100               	movlb	0	; () banked
 35335  003988  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 35336  00398A  B4D8               	btfsc	status,2,c
 35337  00398C  D04A               	goto	l10256
 35338  00398E                     l10236:
 35339                           
 35340                           ; BSR set to: 0
 35341                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 35342  00398E  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 35343  003992  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 35344  003996  0E30               	movlw	48
 35345  003998  6EDF               	movwf	indf2,c
 35346                           
 35347                           ; BSR set to: 0
 35348  00399A  0100               	movlb	0	; () banked
 35349  00399C  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 35350  00399E  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 35351                           
 35352                           ; BSR set to: 0
 35353                           ;doprnt.c: 1418: while(--width);
 35354  0039A0  0100               	movlb	0	; () banked
 35355  0039A2  07DB               	decf	sprintf@width& (0+255),f,b
 35356  0039A4  A0D8               	btfss	status,0,c
 35357  0039A6  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 35358  0039A8  0100               	movlb	0	; () banked
 35359  0039AA  51DB               	movf	sprintf@width& (0+255),w,b
 35360  0039AC  0100               	movlb	0	; () banked
 35361  0039AE  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 35362  0039B0  B4D8               	btfsc	status,2,c
 35363  0039B2  D037               	goto	l10256
 35364  0039B4  D7EC               	goto	l10236
 35365                           
 35366                           ; BSR set to: 0
 35367                           ;doprnt.c: 1420: } else
 35368                           
 35369                           ; BSR set to: 0
 35370  0039B6  D035               	goto	l10256
 35371  0039B8                     l10242:
 35372                           
 35373                           ; BSR set to: 0
 35374                           ;doprnt.c: 1422: {
 35375                           ;doprnt.c: 1424: if(width
 35376                           ;doprnt.c: 1428: )
 35377  0039B8  0100               	movlb	0	; () banked
 35378  0039BA  51DB               	movf	sprintf@width& (0+255),w,b
 35379  0039BC  0100               	movlb	0	; () banked
 35380  0039BE  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 35381  0039C0  B4D8               	btfsc	status,2,c
 35382  0039C2  D015               	goto	l10250
 35383  0039C4                     l10244:
 35384                           
 35385                           ; BSR set to: 0
 35386                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 35387  0039C4  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 35388  0039C8  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 35389  0039CC  0E20               	movlw	32
 35390  0039CE  6EDF               	movwf	indf2,c
 35391                           
 35392                           ; BSR set to: 0
 35393  0039D0  0100               	movlb	0	; () banked
 35394  0039D2  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 35395  0039D4  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 35396                           
 35397                           ; BSR set to: 0
 35398                           ;doprnt.c: 1431: while(--width);
 35399  0039D6  0100               	movlb	0	; () banked
 35400  0039D8  07DB               	decf	sprintf@width& (0+255),f,b
 35401  0039DA  A0D8               	btfss	status,0,c
 35402  0039DC  07DC               	decf	(sprintf@width+1)& (0+255),f,b
 35403  0039DE  0100               	movlb	0	; () banked
 35404  0039E0  51DB               	movf	sprintf@width& (0+255),w,b
 35405  0039E2  0100               	movlb	0	; () banked
 35406  0039E4  11DC               	iorwf	(sprintf@width+1)& (0+255),w,b
 35407  0039E6  B4D8               	btfsc	status,2,c
 35408  0039E8  D002               	goto	l10250
 35409  0039EA  D7EC               	goto	l10244
 35410                           
 35411                           ; BSR set to: 0
 35412  0039EC  D000               	goto	l10250
 35413  0039EE                     l10250:
 35414                           
 35415                           ; BSR set to: 0
 35416                           ;doprnt.c: 1438: if(flag & 0x03)
 35417  0039EE  0E03               	movlw	3
 35418  0039F0  0100               	movlb	0	; () banked
 35419  0039F2  15DD               	andwf	sprintf@flag& (0+255),w,b
 35420  0039F4  0100               	movlb	0	; () banked
 35421  0039F6  6FBC               	movwf	??_sprintf& (0+255),b
 35422  0039F8  0E00               	movlw	0
 35423  0039FA  0100               	movlb	0	; () banked
 35424  0039FC  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
 35425  0039FE  0100               	movlb	0	; () banked
 35426  003A00  6FBD               	movwf	(??_sprintf+1)& (0+255),b
 35427  003A02  0100               	movlb	0	; () banked
 35428  003A04  51BC               	movf	??_sprintf& (0+255),w,b
 35429  003A06  0100               	movlb	0	; () banked
 35430  003A08  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
 35431  003A0A  B4D8               	btfsc	status,2,c
 35432  003A0C  D00A               	goto	l10256
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 35436  003A0E  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 35437  003A12  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 35438  003A16  0E2D               	movlw	45
 35439  003A18  6EDF               	movwf	indf2,c
 35440                           
 35441                           ; BSR set to: 0
 35442  003A1A  0100               	movlb	0	; () banked
 35443  003A1C  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 35444  003A1E  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 35445                           
 35446                           ; BSR set to: 0
 35447  003A20  D000               	goto	l10256
 35448  003A22                     l10256:
 35449                           
 35450                           ; BSR set to: 0
 35451                           ;doprnt.c: 1469: }
 35452                           ;doprnt.c: 1472: prec = c;
 35453  003A22  0100               	movlb	0	; () banked
 35454  003A24  51DF               	movf	sprintf@c& (0+255),w,b
 35455  003A26  0100               	movlb	0	; () banked
 35456  003A28  6FCC               	movwf	sprintf@prec& (0+255),b
 35457  003A2A  6BCD               	clrf	(sprintf@prec+1)& (0+255),b
 35458  003A2C  BFCC               	btfsc	sprintf@prec& (0+255),7,b
 35459  003A2E  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
 35460                           
 35461                           ;doprnt.c: 1474: while(prec--) {
 35462  003A30  D09F               	goto	l10272
 35463                           
 35464                           ; BSR set to: 0
 35465                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 35466  003A32  D087               	goto	l10266
 35467                           
 35468                           ; BSR set to: 0
 35469                           
 35470                           ;doprnt.c: 1478: {
 35471                           ;doprnt.c: 1483: case 0x00:
 35472  003A34  D000               	goto	l10258
 35473  003A36                     l10258:
 35474                           
 35475                           ; BSR set to: 0
 35476                           ;doprnt.c: 1486: case 0xC0:
 35477                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 35478  003A36  C0CC  F0BC         	movff	sprintf@prec,??_sprintf
 35479  003A3A  C0CD  F0BD         	movff	sprintf@prec+1,??_sprintf+1
 35480  003A3E  0100               	movlb	0	; () banked
 35481  003A40  90D8               	bcf	status,0,c
 35482  003A42  37BC               	rlcf	??_sprintf& (0+255),f,b
 35483  003A44  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 35484  003A46  0100               	movlb	0	; () banked
 35485  003A48  90D8               	bcf	status,0,c
 35486  003A4A  37BC               	rlcf	??_sprintf& (0+255),f,b
 35487  003A4C  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 35488  003A4E  0E7F               	movlw	low _dpowers
 35489  003A50  0100               	movlb	0	; () banked
 35490  003A52  25BC               	addwf	??_sprintf& (0+255),w,b
 35491  003A54  6EF6               	movwf	tblptrl,c
 35492  003A56  0EEC               	movlw	high _dpowers
 35493  003A58  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
 35494  003A5A  6EF7               	movwf	tblptrh,c
 35495  003A5C                     	if	1	;There are 3 active tblptr bytes
 35496  003A5C  6AF8               	clrf	tblptru,c
 35497  003A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 35498  003A60  22F8               	addwfc	tblptru,f,c
 35499  003A62                     	endif
 35500  003A62  0009               	tblrd		*+
 35501  003A64  CFF5 F064          	movff	tablat,___lldiv@divisor
 35502  003A68  0009               	tblrd		*+
 35503  003A6A  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 35504  003A6E  0009               	tblrd		*+
 35505  003A70  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 35506  003A74  000A               	tblrd		*-
 35507  003A76  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 35508  003A7A  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 35509  003A7E  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 35510  003A82  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 35511  003A86  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 35512  003A8A  EC0E  F04D         	call	___lldiv	;wreg free
 35513  003A8E  C060  F06D         	movff	?___lldiv,___llmod@dividend
 35514  003A92  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 35515  003A96  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 35516  003A9A  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 35517  003A9E  0E0A               	movlw	10
 35518  003AA0  0100               	movlb	0	; () banked
 35519  003AA2  6F71               	movwf	___llmod@divisor& (0+255),b
 35520  003AA4  0E00               	movlw	0
 35521  003AA6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 35522  003AA8  0E00               	movlw	0
 35523  003AAA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 35524  003AAC  0E00               	movlw	0
 35525  003AAE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 35526  003AB0  EC7D  F04E         	call	___llmod	;wreg free
 35527  003AB4  0100               	movlb	0	; () banked
 35528  003AB6  516D               	movf	?___llmod& (0+255),w,b
 35529  003AB8  0F30               	addlw	48
 35530  003ABA  0100               	movlb	0	; () banked
 35531  003ABC  6FDF               	movwf	sprintf@c& (0+255),b
 35532                           
 35533                           ;doprnt.c: 1491: break;
 35534  003ABE  D04E               	goto	l10268
 35535  003AC0                     l10260:
 35536                           
 35537                           ; BSR set to: 0
 35538                           ;doprnt.c: 1499: {
 35539                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 35540  003AC0  C0D4  F060         	movff	sprintf@val,___lldiv@dividend
 35541  003AC4  C0D5  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 35542  003AC8  C0D6  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 35543  003ACC  C0D7  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 35544  003AD0  C0CC  F0BC         	movff	sprintf@prec,??_sprintf
 35545  003AD4  C0CD  F0BD         	movff	sprintf@prec+1,??_sprintf+1
 35546  003AD8  0100               	movlb	0	; () banked
 35547  003ADA  90D8               	bcf	status,0,c
 35548  003ADC  37BC               	rlcf	??_sprintf& (0+255),f,b
 35549  003ADE  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 35550  003AE0  0100               	movlb	0	; () banked
 35551  003AE2  90D8               	bcf	status,0,c
 35552  003AE4  37BC               	rlcf	??_sprintf& (0+255),f,b
 35553  003AE6  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
 35554  003AE8  0EF5               	movlw	low _hexpowers
 35555  003AEA  0100               	movlb	0	; () banked
 35556  003AEC  25BC               	addwf	??_sprintf& (0+255),w,b
 35557  003AEE  6EF6               	movwf	tblptrl,c
 35558  003AF0  0EEC               	movlw	high _hexpowers
 35559  003AF2  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
 35560  003AF4  6EF7               	movwf	tblptrh,c
 35561  003AF6                     	if	1	;There are 3 active tblptr bytes
 35562  003AF6  6AF8               	clrf	tblptru,c
 35563  003AF8  0E00               	movlw	low (__mediumconst shr (0+16))
 35564  003AFA  22F8               	addwfc	tblptru,f,c
 35565  003AFC                     	endif
 35566  003AFC  0009               	tblrd		*+
 35567  003AFE  CFF5 F064          	movff	tablat,___lldiv@divisor
 35568  003B02  0009               	tblrd		*+
 35569  003B04  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 35570  003B08  0009               	tblrd		*+
 35571  003B0A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 35572  003B0E  000A               	tblrd		*-
 35573  003B10  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 35574  003B14  EC0E  F04D         	call	___lldiv	;wreg free
 35575  003B18  0100               	movlb	0	; () banked
 35576  003B1A  5160               	movf	?___lldiv& (0+255),w,b
 35577  003B1C  0B0F               	andlw	15
 35578  003B1E  0100               	movlb	0	; () banked
 35579  003B20  6FC5               	movwf	sprintf@idx& (0+255),b
 35580                           
 35581                           ; BSR set to: 0
 35582                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 35583  003B22  0100               	movlb	0	; () banked
 35584  003B24  51C5               	movf	sprintf@idx& (0+255),w,b
 35585  003B26  0D01               	mullw	1
 35586  003B28  0ED0               	movlw	low STR_190
 35587  003B2A  24F3               	addwf	prodl,w,c
 35588  003B2C  6EF6               	movwf	tblptrl,c
 35589  003B2E  0EFD               	movlw	high STR_190
 35590  003B30  20F4               	addwfc	prodh,w,c
 35591  003B32  6EF7               	movwf	tblptrh,c
 35592  003B34                     	if	1	;There are 3 active tblptr bytes
 35593  003B34  6AF8               	clrf	tblptru,c
 35594  003B36  0E00               	movlw	low (__mediumconst shr (0+16))
 35595  003B38  22F8               	addwfc	tblptru,f,c
 35596  003B3A                     	endif
 35597  003B3A  0008               	tblrd		*
 35598  003B3C  CFF5 F0DF          	movff	tablat,sprintf@c
 35599                           
 35600                           ; BSR set to: 0
 35601                           ;doprnt.c: 1523: }
 35602                           
 35603                           ;doprnt.c: 1508: }
 35604                           ;doprnt.c: 1510: break;
 35605  003B40  D00D               	goto	l10268
 35606  003B42                     l10266:
 35607                           
 35608                           ; BSR set to: 0
 35609  003B42  0100               	movlb	0	; () banked
 35610  003B44  51DD               	movf	sprintf@flag& (0+255),w,b
 35611  003B46  0BC0               	andlw	192
 35612                           
 35613                           ; Switch size 1, requested type "space"
 35614                           ; Number of cases is 3, Range of values is 0 to 192
 35615                           ; switch strategies available:
 35616                           ; Name         Instructions Cycles
 35617                           ; simple_byte           10     6 (average)
 35618                           ;	Chosen strategy is simple_byte
 35619  003B48  0A00               	xorlw	0	; case 0
 35620  003B4A  B4D8               	btfsc	status,2,c
 35621  003B4C  D774               	goto	l10258
 35622  003B4E  0A80               	xorlw	128	; case 128
 35623  003B50  B4D8               	btfsc	status,2,c
 35624  003B52  D7B6               	goto	l10260
 35625  003B54  0A40               	xorlw	64	; case 192
 35626  003B56  B4D8               	btfsc	status,2,c
 35627  003B58  D76E               	goto	l10258
 35628  003B5A  D000               	goto	l10268
 35629  003B5C                     l10268:
 35630                           
 35631                           ; BSR set to: 0
 35632                           ;doprnt.c: 1524: ((*sp++ = (c)));
 35633  003B5C  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 35634  003B60  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 35635  003B64  C0DF  FFDF         	movff	sprintf@c,indf2
 35636                           
 35637                           ; BSR set to: 0
 35638  003B68  0100               	movlb	0	; () banked
 35639  003B6A  4BAE               	infsnz	sprintf@sp& (0+255),f,b
 35640  003B6C  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
 35641  003B6E  D000               	goto	l10272
 35642  003B70                     l10272:
 35643                           
 35644                           ; BSR set to: 0
 35645  003B70  0100               	movlb	0	; () banked
 35646  003B72  07CC               	decf	sprintf@prec& (0+255),f,b
 35647  003B74  A0D8               	btfss	status,0,c
 35648  003B76  07CD               	decf	(sprintf@prec+1)& (0+255),f,b
 35649  003B78  0100               	movlb	0	; () banked
 35650  003B7A  29CC               	incf	sprintf@prec& (0+255),w,b
 35651  003B7C  E1E2               	bnz	l10266
 35652  003B7E  0100               	movlb	0	; () banked
 35653  003B80  29CD               	incf	(sprintf@prec+1)& (0+255),w,b
 35654  003B82  B4D8               	btfsc	status,2,c
 35655  003B84  D002               	goto	l10274
 35656  003B86  D7DD               	goto	l10266
 35657                           
 35658                           ; BSR set to: 0
 35659  003B88  D000               	goto	l10274
 35660  003B8A                     l10274:
 35661                           
 35662                           ; BSR set to: 0
 35663  003B8A  C0B0  FFF6         	movff	sprintf@f,tblptrl
 35664  003B8E  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
 35665  003B92  0100               	movlb	0	; () banked
 35666  003B94  4BB0               	infsnz	sprintf@f& (0+255),f,b
 35667  003B96  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
 35668  003B98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35669  003B98  6AF8               	clrf	tblptru,c
 35670  003B9A                     	endif
 35671  003B9A                     	if	0	;tblptru may be non-zero
 35672  003B9A                     	endif
 35673  003B9A  0008               	tblrd		*
 35674  003B9C  CFF5 F0DF          	movff	tablat,sprintf@c
 35675  003BA0  0100               	movlb	0	; () banked
 35676  003BA2  51DF               	movf	sprintf@c& (0+255),w,b
 35677  003BA4  B4D8               	btfsc	status,2,c
 35678  003BA6  D003               	goto	l10276
 35679  003BA8  EF2A  F016         	goto	l9898
 35680                           
 35681                           ; BSR set to: 0
 35682  003BAC  D000               	goto	l10276
 35683  003BAE                     l10276:
 35684                           
 35685                           ;doprnt.c: 1538: *sp = 0;
 35686  003BAE  C0AE  FFD9         	movff	sprintf@sp,fsr2l
 35687  003BB2  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
 35688  003BB6  0E00               	movlw	0
 35689  003BB8  6EDF               	movwf	indf2,c
 35690  003BBA  0012               	return	
 35691                           
 35692                           ;doprnt.c: 1540: return 0;
 35693                           ;	Return value of _sprintf is never used
 35694  003BBC  0012               	return		;funcret
 35695  003BBE                     __end_of_sprintf:
 35696                           	opt stack 0
 35697                           tblptru	equ	0xFF8
 35698                           tblptrh	equ	0xFF7
 35699                           tblptrl	equ	0xFF6
 35700                           tablat	equ	0xFF5
 35701                           prodh	equ	0xFF4
 35702                           prodl	equ	0xFF3
 35703                           intcon	equ	0xFF2
 35704                           intcon2	equ	0xFF1
 35705                           indf0	equ	0xFEF
 35706                           postinc0	equ	0xFEE
 35707                           plusw0	equ	0xFEB
 35708                           fsr0h	equ	0xFEA
 35709                           fsr0l	equ	0xFE9
 35710                           wreg	equ	0xFE8
 35711                           indf1	equ	0xFE7
 35712                           postdec1	equ	0xFE5
 35713                           fsr1h	equ	0xFE2
 35714                           fsr1l	equ	0xFE1
 35715                           indf2	equ	0xFDF
 35716                           postinc2	equ	0xFDE
 35717                           postdec2	equ	0xFDD
 35718                           plusw2	equ	0xFDB
 35719                           fsr2h	equ	0xFDA
 35720                           fsr2l	equ	0xFD9
 35721                           status	equ	0xFD8
 35722                           
 35723 ;; *************** function _scale *****************
 35724 ;; Defined at:
 35725 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 35726 ;; Parameters:    Size  Location     Type
 35727 ;;  scl             1    wreg     char 
 35728 ;; Auto vars:     Size  Location     Type
 35729 ;;  scl             1   47[BANK0 ] char 
 35730 ;; Return value:  Size  Location     Type
 35731 ;;                  3   41[BANK0 ] char 
 35732 ;; Registers used:
 35733 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35734 ;; Tracked objects:
 35735 ;;		On entry : 0/0
 35736 ;;		On exit  : 0/0
 35737 ;;		Unchanged: 0/0
 35738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35739 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35740 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35742 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35743 ;;Total ram usage:        7 bytes
 35744 ;; Hardware stack levels used:    1
 35745 ;; Hardware stack levels required when called:    7
 35746 ;; This function calls:
 35747 ;;		___awdiv
 35748 ;;		___awmod
 35749 ;;		___ftmul
 35750 ;;		___wmul
 35751 ;; This function is called by:
 35752 ;;		_sprintf
 35753 ;; This function uses a non-reentrant model
 35754 ;;
 35755                           
 35756                           	psect	text76
 35757  005BC4                     __ptext76:
 35758                           	opt stack 0
 35759  005BC4                     _scale:
 35760                           	opt stack 22
 35761                           
 35762                           ;incstack = 0
 35763                           ;scale@scl stored from wreg
 35764  005BC4  0100               	movlb	0	; () banked
 35765  005BC6  6F8F               	movwf	scale@scl& (0+255),b
 35766                           
 35767                           ; BSR set to: 0
 35768                           ;doprnt.c: 428: if(scl < 0) {
 35769  005BC8  0100               	movlb	0	; () banked
 35770  005BCA  AF8F               	btfss	scale@scl& (0+255),7,b
 35771  005BCC  D13F               	goto	l9600
 35772                           
 35773                           ; BSR set to: 0
 35774                           ;doprnt.c: 429: scl = -scl;
 35775  005BCE  0100               	movlb	0	; () banked
 35776  005BD0  6D8F               	negf	scale@scl& (0+255),b
 35777                           
 35778                           ;doprnt.c: 430: if(scl>=110)
 35779  005BD2  0100               	movlb	0	; () banked
 35780  005BD4  518F               	movf	scale@scl& (0+255),w,b
 35781  005BD6  0A80               	xorlw	128
 35782  005BD8  0F12               	addlw	-238
 35783  005BDA  A0D8               	btfss	status,0,c
 35784  005BDC  D0B6               	goto	l9590
 35785                           
 35786                           ; BSR set to: 0
 35787                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 35788  005BDE  0E00               	movlw	0
 35789  005BE0  0100               	movlb	0	; () banked
 35790  005BE2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35791  005BE4  0E03               	movlw	3
 35792  005BE6  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35793  005BE8  0E00               	movlw	0
 35794  005BEA  0100               	movlb	0	; () banked
 35795  005BEC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35796  005BEE  0E0A               	movlw	10
 35797  005BF0  6F68               	movwf	___awdiv@divisor& (0+255),b
 35798  005BF2  0E00               	movlw	0
 35799  005BF4  0100               	movlb	0	; () banked
 35800  005BF6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35801  005BF8  0E64               	movlw	100
 35802  005BFA  6F62               	movwf	___awmod@divisor& (0+255),b
 35803  005BFC  0100               	movlb	0	; () banked
 35804  005BFE  518F               	movf	scale@scl& (0+255),w,b
 35805  005C00  0100               	movlb	0	; () banked
 35806  005C02  6F60               	movwf	___awmod@dividend& (0+255),b
 35807  005C04  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35808  005C06  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 35809  005C08  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 35810  005C0A  ECCC  F04D         	call	___awmod	;wreg free
 35811  005C0E  C060  F066         	movff	?___awmod,___awdiv@dividend
 35812  005C12  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 35813  005C16  EC0D  F04B         	call	___awdiv	;wreg free
 35814  005C1A  0E09               	movlw	9
 35815  005C1C  0100               	movlb	0	; () banked
 35816  005C1E  2566               	addwf	?___awdiv& (0+255),w,b
 35817  005C20  0100               	movlb	0	; () banked
 35818  005C22  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35819  005C24  0E00               	movlw	0
 35820  005C26  0100               	movlb	0	; () banked
 35821  005C28  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35822  005C2A  0100               	movlb	0	; () banked
 35823  005C2C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35824  005C2E  EC15  F055         	call	___wmul	;wreg free
 35825  005C32  0EA7               	movlw	low __npowers_
 35826  005C34  0100               	movlb	0	; () banked
 35827  005C36  256E               	addwf	?___wmul& (0+255),w,b
 35828  005C38  6EF6               	movwf	tblptrl,c
 35829  005C3A  0EEC               	movlw	high __npowers_
 35830  005C3C  0100               	movlb	0	; () banked
 35831  005C3E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35832  005C40  6EF7               	movwf	tblptrh,c
 35833  005C42                     	if	1	;There are 3 active tblptr bytes
 35834  005C42  6AF8               	clrf	tblptru,c
 35835  005C44  0E00               	movlw	low (__mediumconst shr (0+16))
 35836  005C46  22F8               	addwfc	tblptru,f,c
 35837  005C48                     	endif
 35838  005C48  0009               	tblrd		*+
 35839  005C4A  CFF5 F07D          	movff	tablat,___ftmul@f2
 35840  005C4E  0009               	tblrd		*+
 35841  005C50  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35842  005C54  000A               	tblrd		*-
 35843  005C56  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35844  005C5A  0E00               	movlw	0
 35845  005C5C  0100               	movlb	0	; () banked
 35846  005C5E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35847  005C60  0E64               	movlw	100
 35848  005C62  6F68               	movwf	___awdiv@divisor& (0+255),b
 35849  005C64  0100               	movlb	0	; () banked
 35850  005C66  518F               	movf	scale@scl& (0+255),w,b
 35851  005C68  0100               	movlb	0	; () banked
 35852  005C6A  6F66               	movwf	___awdiv@dividend& (0+255),b
 35853  005C6C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 35854  005C6E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 35855  005C70  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 35856  005C72  EC0D  F04B         	call	___awdiv	;wreg free
 35857  005C76  0E12               	movlw	18
 35858  005C78  0100               	movlb	0	; () banked
 35859  005C7A  2566               	addwf	?___awdiv& (0+255),w,b
 35860  005C7C  0100               	movlb	0	; () banked
 35861  005C7E  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35862  005C80  0E00               	movlw	0
 35863  005C82  0100               	movlb	0	; () banked
 35864  005C84  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35865  005C86  0100               	movlb	0	; () banked
 35866  005C88  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35867  005C8A  0E00               	movlw	0
 35868  005C8C  0100               	movlb	0	; () banked
 35869  005C8E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35870  005C90  0E03               	movlw	3
 35871  005C92  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35872  005C94  EC15  F055         	call	___wmul	;wreg free
 35873  005C98  0EA7               	movlw	low __npowers_
 35874  005C9A  0100               	movlb	0	; () banked
 35875  005C9C  256E               	addwf	?___wmul& (0+255),w,b
 35876  005C9E  6EF6               	movwf	tblptrl,c
 35877  005CA0  0EEC               	movlw	high __npowers_
 35878  005CA2  0100               	movlb	0	; () banked
 35879  005CA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35880  005CA6  6EF7               	movwf	tblptrh,c
 35881  005CA8                     	if	1	;There are 3 active tblptr bytes
 35882  005CA8  6AF8               	clrf	tblptru,c
 35883  005CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 35884  005CAC  22F8               	addwfc	tblptru,f,c
 35885  005CAE                     	endif
 35886  005CAE  0009               	tblrd		*+
 35887  005CB0  CFF5 F07A          	movff	tablat,___ftmul@f1
 35888  005CB4  0009               	tblrd		*+
 35889  005CB6  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 35890  005CBA  000A               	tblrd		*-
 35891  005CBC  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 35892  005CC0  EC5A  F041         	call	___ftmul	;wreg free
 35893  005CC4  C07A  F08C         	movff	?___ftmul,_scale$4115
 35894  005CC8  C07B  F08D         	movff	?___ftmul+1,_scale$4115+1
 35895  005CCC  C07C  F08E         	movff	?___ftmul+2,_scale$4115+2
 35896                           
 35897                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 35898  005CD0  C08C  F07A         	movff	_scale$4115,___ftmul@f1
 35899  005CD4  C08D  F07B         	movff	_scale$4115+1,___ftmul@f1+1
 35900  005CD8  C08E  F07C         	movff	_scale$4115+2,___ftmul@f1+2
 35901  005CDC  0E00               	movlw	0
 35902  005CDE  0100               	movlb	0	; () banked
 35903  005CE0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35904  005CE2  0E03               	movlw	3
 35905  005CE4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35906  005CE6  0E00               	movlw	0
 35907  005CE8  0100               	movlb	0	; () banked
 35908  005CEA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 35909  005CEC  0E0A               	movlw	10
 35910  005CEE  6F62               	movwf	___awmod@divisor& (0+255),b
 35911  005CF0  0100               	movlb	0	; () banked
 35912  005CF2  518F               	movf	scale@scl& (0+255),w,b
 35913  005CF4  0100               	movlb	0	; () banked
 35914  005CF6  6F60               	movwf	___awmod@dividend& (0+255),b
 35915  005CF8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 35916  005CFA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 35917  005CFC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 35918  005CFE  ECCC  F04D         	call	___awmod	;wreg free
 35919  005D02  C060  F06E         	movff	?___awmod,___wmul@multiplier
 35920  005D06  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 35921  005D0A  EC15  F055         	call	___wmul	;wreg free
 35922  005D0E  0EA7               	movlw	low __npowers_
 35923  005D10  0100               	movlb	0	; () banked
 35924  005D12  256E               	addwf	?___wmul& (0+255),w,b
 35925  005D14  6EF6               	movwf	tblptrl,c
 35926  005D16  0EEC               	movlw	high __npowers_
 35927  005D18  0100               	movlb	0	; () banked
 35928  005D1A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35929  005D1C  6EF7               	movwf	tblptrh,c
 35930  005D1E                     	if	1	;There are 3 active tblptr bytes
 35931  005D1E  6AF8               	clrf	tblptru,c
 35932  005D20  0E00               	movlw	low (__mediumconst shr (0+16))
 35933  005D22  22F8               	addwfc	tblptru,f,c
 35934  005D24                     	endif
 35935  005D24  0009               	tblrd		*+
 35936  005D26  CFF5 F07D          	movff	tablat,___ftmul@f2
 35937  005D2A  0009               	tblrd		*+
 35938  005D2C  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 35939  005D30  000A               	tblrd		*-
 35940  005D32  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 35941  005D36  EC5A  F041         	call	___ftmul	;wreg free
 35942  005D3A  C07A  F089         	movff	?___ftmul,?_scale
 35943  005D3E  C07B  F08A         	movff	?___ftmul+1,?_scale+1
 35944  005D42  C07C  F08B         	movff	?___ftmul+2,?_scale+2
 35945  005D46  0012               	return	
 35946  005D48  D06B               	goto	l9596
 35947  005D4A                     l9590:
 35948                           
 35949                           ;doprnt.c: 432: else if(scl > 10)
 35950  005D4A  0100               	movlb	0	; () banked
 35951  005D4C  518F               	movf	scale@scl& (0+255),w,b
 35952  005D4E  0A80               	xorlw	128
 35953  005D50  0F75               	addlw	-139
 35954  005D52  A0D8               	btfss	status,0,c
 35955  005D54  D065               	goto	l9596
 35956                           
 35957                           ; BSR set to: 0
 35958                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 35959  005D56  0E00               	movlw	0
 35960  005D58  0100               	movlb	0	; () banked
 35961  005D5A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 35962  005D5C  0E0A               	movlw	10
 35963  005D5E  6F68               	movwf	___awdiv@divisor& (0+255),b
 35964  005D60  0100               	movlb	0	; () banked
 35965  005D62  518F               	movf	scale@scl& (0+255),w,b
 35966  005D64  0100               	movlb	0	; () banked
 35967  005D66  6F66               	movwf	___awdiv@dividend& (0+255),b
 35968  005D68  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 35969  005D6A  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 35970  005D6C  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 35971  005D6E  EC0D  F04B         	call	___awdiv	;wreg free
 35972  005D72  0E09               	movlw	9
 35973  005D74  0100               	movlb	0	; () banked
 35974  005D76  2566               	addwf	?___awdiv& (0+255),w,b
 35975  005D78  0100               	movlb	0	; () banked
 35976  005D7A  6F6E               	movwf	___wmul@multiplier& (0+255),b
 35977  005D7C  0E00               	movlw	0
 35978  005D7E  0100               	movlb	0	; () banked
 35979  005D80  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 35980  005D82  0100               	movlb	0	; () banked
 35981  005D84  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 35982  005D86  0E00               	movlw	0
 35983  005D88  0100               	movlb	0	; () banked
 35984  005D8A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 35985  005D8C  0E03               	movlw	3
 35986  005D8E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 35987  005D90  EC15  F055         	call	___wmul	;wreg free
 35988  005D94  0EA7               	movlw	low __npowers_
 35989  005D96  0100               	movlb	0	; () banked
 35990  005D98  256E               	addwf	?___wmul& (0+255),w,b
 35991  005D9A  6EF6               	movwf	tblptrl,c
 35992  005D9C  0EEC               	movlw	high __npowers_
 35993  005D9E  0100               	movlb	0	; () banked
 35994  005DA0  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 35995  005DA2  6EF7               	movwf	tblptrh,c
 35996  005DA4                     	if	1	;There are 3 active tblptr bytes
 35997  005DA4  6AF8               	clrf	tblptru,c
 35998  005DA6  0E00               	movlw	low (__mediumconst shr (0+16))
 35999  005DA8  22F8               	addwfc	tblptru,f,c
 36000  005DAA                     	endif
 36001  005DAA  0009               	tblrd		*+
 36002  005DAC  CFF5 F07A          	movff	tablat,___ftmul@f1
 36003  005DB0  0009               	tblrd		*+
 36004  005DB2  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 36005  005DB6  000A               	tblrd		*-
 36006  005DB8  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 36007  005DBC  0E00               	movlw	0
 36008  005DBE  0100               	movlb	0	; () banked
 36009  005DC0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36010  005DC2  0E03               	movlw	3
 36011  005DC4  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36012  005DC6  0E00               	movlw	0
 36013  005DC8  0100               	movlb	0	; () banked
 36014  005DCA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36015  005DCC  0E0A               	movlw	10
 36016  005DCE  6F62               	movwf	___awmod@divisor& (0+255),b
 36017  005DD0  0100               	movlb	0	; () banked
 36018  005DD2  518F               	movf	scale@scl& (0+255),w,b
 36019  005DD4  0100               	movlb	0	; () banked
 36020  005DD6  6F60               	movwf	___awmod@dividend& (0+255),b
 36021  005DD8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36022  005DDA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 36023  005DDC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 36024  005DDE  ECCC  F04D         	call	___awmod	;wreg free
 36025  005DE2  C060  F06E         	movff	?___awmod,___wmul@multiplier
 36026  005DE6  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 36027  005DEA  EC15  F055         	call	___wmul	;wreg free
 36028  005DEE  0EA7               	movlw	low __npowers_
 36029  005DF0  0100               	movlb	0	; () banked
 36030  005DF2  256E               	addwf	?___wmul& (0+255),w,b
 36031  005DF4  6EF6               	movwf	tblptrl,c
 36032  005DF6  0EEC               	movlw	high __npowers_
 36033  005DF8  0100               	movlb	0	; () banked
 36034  005DFA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36035  005DFC  6EF7               	movwf	tblptrh,c
 36036  005DFE                     	if	1	;There are 3 active tblptr bytes
 36037  005DFE  6AF8               	clrf	tblptru,c
 36038  005E00  0E00               	movlw	low (__mediumconst shr (0+16))
 36039  005E02  22F8               	addwfc	tblptru,f,c
 36040  005E04                     	endif
 36041  005E04  0009               	tblrd		*+
 36042  005E06  CFF5 F07D          	movff	tablat,___ftmul@f2
 36043  005E0A  0009               	tblrd		*+
 36044  005E0C  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36045  005E10  000A               	tblrd		*-
 36046  005E12  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36047  005E16  EC5A  F041         	call	___ftmul	;wreg free
 36048  005E1A  D78F               	goto	L21
 36049  005E1C  0012               	return	
 36050  005E1E  D000               	goto	l9596
 36051  005E20                     l9596:
 36052                           
 36053                           ;doprnt.c: 434: return _npowers_[scl];
 36054  005E20  0100               	movlb	0	; () banked
 36055  005E22  518F               	movf	scale@scl& (0+255),w,b
 36056  005E24  0D03               	mullw	3
 36057  005E26  0EA7               	movlw	low __npowers_
 36058  005E28  24F3               	addwf	prodl,w,c
 36059  005E2A  6EF6               	movwf	tblptrl,c
 36060  005E2C  0EEC               	movlw	high __npowers_
 36061  005E2E  20F4               	addwfc	prodh,w,c
 36062  005E30  6EF7               	movwf	tblptrh,c
 36063  005E32                     	if	1	;There are 3 active tblptr bytes
 36064  005E32  6AF8               	clrf	tblptru,c
 36065  005E34  0E00               	movlw	low (__mediumconst shr (0+16))
 36066  005E36  22F8               	addwfc	tblptru,f,c
 36067  005E38                     	endif
 36068  005E38  0009               	tblrd		*+
 36069  005E3A  CFF5 F089          	movff	tablat,?_scale
 36070  005E3E  0009               	tblrd		*+
 36071  005E40  CFF5 F08A          	movff	tablat,?_scale+1
 36072  005E44  000A               	tblrd		*-
 36073  005E46  CFF5 F08B          	movff	tablat,?_scale+2
 36074                           
 36075                           ; BSR set to: 0
 36076  005E4A  0012               	return	
 36077  005E4C                     l9600:
 36078                           
 36079                           ; BSR set to: 0
 36080                           ;doprnt.c: 435: }
 36081                           ;doprnt.c: 436: if(scl>=110)
 36082  005E4C  0100               	movlb	0	; () banked
 36083  005E4E  518F               	movf	scale@scl& (0+255),w,b
 36084  005E50  0A80               	xorlw	128
 36085  005E52  0F12               	addlw	-238
 36086  005E54  A0D8               	btfss	status,0,c
 36087  005E56  D0B6               	goto	l9608
 36088                           
 36089                           ; BSR set to: 0
 36090                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 36091  005E58  0E00               	movlw	0
 36092  005E5A  0100               	movlb	0	; () banked
 36093  005E5C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36094  005E5E  0E03               	movlw	3
 36095  005E60  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36096  005E62  0E00               	movlw	0
 36097  005E64  0100               	movlb	0	; () banked
 36098  005E66  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 36099  005E68  0E0A               	movlw	10
 36100  005E6A  6F68               	movwf	___awdiv@divisor& (0+255),b
 36101  005E6C  0E00               	movlw	0
 36102  005E6E  0100               	movlb	0	; () banked
 36103  005E70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36104  005E72  0E64               	movlw	100
 36105  005E74  6F62               	movwf	___awmod@divisor& (0+255),b
 36106  005E76  0100               	movlb	0	; () banked
 36107  005E78  518F               	movf	scale@scl& (0+255),w,b
 36108  005E7A  0100               	movlb	0	; () banked
 36109  005E7C  6F60               	movwf	___awmod@dividend& (0+255),b
 36110  005E7E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36111  005E80  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 36112  005E82  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 36113  005E84  ECCC  F04D         	call	___awmod	;wreg free
 36114  005E88  C060  F066         	movff	?___awmod,___awdiv@dividend
 36115  005E8C  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 36116  005E90  EC0D  F04B         	call	___awdiv	;wreg free
 36117  005E94  0E09               	movlw	9
 36118  005E96  0100               	movlb	0	; () banked
 36119  005E98  2566               	addwf	?___awdiv& (0+255),w,b
 36120  005E9A  0100               	movlb	0	; () banked
 36121  005E9C  6F6E               	movwf	___wmul@multiplier& (0+255),b
 36122  005E9E  0E00               	movlw	0
 36123  005EA0  0100               	movlb	0	; () banked
 36124  005EA2  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 36125  005EA4  0100               	movlb	0	; () banked
 36126  005EA6  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 36127  005EA8  EC15  F055         	call	___wmul	;wreg free
 36128  005EAC  0ECE               	movlw	low __powers_
 36129  005EAE  0100               	movlb	0	; () banked
 36130  005EB0  256E               	addwf	?___wmul& (0+255),w,b
 36131  005EB2  6EF6               	movwf	tblptrl,c
 36132  005EB4  0EEC               	movlw	high __powers_
 36133  005EB6  0100               	movlb	0	; () banked
 36134  005EB8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36135  005EBA  6EF7               	movwf	tblptrh,c
 36136  005EBC                     	if	1	;There are 3 active tblptr bytes
 36137  005EBC  6AF8               	clrf	tblptru,c
 36138  005EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 36139  005EC0  22F8               	addwfc	tblptru,f,c
 36140  005EC2                     	endif
 36141  005EC2  0009               	tblrd		*+
 36142  005EC4  CFF5 F07D          	movff	tablat,___ftmul@f2
 36143  005EC8  0009               	tblrd		*+
 36144  005ECA  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36145  005ECE  000A               	tblrd		*-
 36146  005ED0  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36147  005ED4  0E00               	movlw	0
 36148  005ED6  0100               	movlb	0	; () banked
 36149  005ED8  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 36150  005EDA  0E64               	movlw	100
 36151  005EDC  6F68               	movwf	___awdiv@divisor& (0+255),b
 36152  005EDE  0100               	movlb	0	; () banked
 36153  005EE0  518F               	movf	scale@scl& (0+255),w,b
 36154  005EE2  0100               	movlb	0	; () banked
 36155  005EE4  6F66               	movwf	___awdiv@dividend& (0+255),b
 36156  005EE6  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 36157  005EE8  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 36158  005EEA  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 36159  005EEC  EC0D  F04B         	call	___awdiv	;wreg free
 36160  005EF0  0E12               	movlw	18
 36161  005EF2  0100               	movlb	0	; () banked
 36162  005EF4  2566               	addwf	?___awdiv& (0+255),w,b
 36163  005EF6  0100               	movlb	0	; () banked
 36164  005EF8  6F6E               	movwf	___wmul@multiplier& (0+255),b
 36165  005EFA  0E00               	movlw	0
 36166  005EFC  0100               	movlb	0	; () banked
 36167  005EFE  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 36168  005F00  0100               	movlb	0	; () banked
 36169  005F02  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 36170  005F04  0E00               	movlw	0
 36171  005F06  0100               	movlb	0	; () banked
 36172  005F08  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36173  005F0A  0E03               	movlw	3
 36174  005F0C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36175  005F0E  EC15  F055         	call	___wmul	;wreg free
 36176  005F12  0ECE               	movlw	low __powers_
 36177  005F14  0100               	movlb	0	; () banked
 36178  005F16  256E               	addwf	?___wmul& (0+255),w,b
 36179  005F18  6EF6               	movwf	tblptrl,c
 36180  005F1A  0EEC               	movlw	high __powers_
 36181  005F1C  0100               	movlb	0	; () banked
 36182  005F1E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36183  005F20  6EF7               	movwf	tblptrh,c
 36184  005F22                     	if	1	;There are 3 active tblptr bytes
 36185  005F22  6AF8               	clrf	tblptru,c
 36186  005F24  0E00               	movlw	low (__mediumconst shr (0+16))
 36187  005F26  22F8               	addwfc	tblptru,f,c
 36188  005F28                     	endif
 36189  005F28  0009               	tblrd		*+
 36190  005F2A  CFF5 F07A          	movff	tablat,___ftmul@f1
 36191  005F2E  0009               	tblrd		*+
 36192  005F30  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 36193  005F34  000A               	tblrd		*-
 36194  005F36  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 36195  005F3A  EC5A  F041         	call	___ftmul	;wreg free
 36196  005F3E  C07A  F08C         	movff	?___ftmul,_scale$4115
 36197  005F42  C07B  F08D         	movff	?___ftmul+1,_scale$4115+1
 36198  005F46  C07C  F08E         	movff	?___ftmul+2,_scale$4115+2
 36199                           
 36200                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 36201  005F4A  C08C  F07A         	movff	_scale$4115,___ftmul@f1
 36202  005F4E  C08D  F07B         	movff	_scale$4115+1,___ftmul@f1+1
 36203  005F52  C08E  F07C         	movff	_scale$4115+2,___ftmul@f1+2
 36204  005F56  0E00               	movlw	0
 36205  005F58  0100               	movlb	0	; () banked
 36206  005F5A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36207  005F5C  0E03               	movlw	3
 36208  005F5E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36209  005F60  0E00               	movlw	0
 36210  005F62  0100               	movlb	0	; () banked
 36211  005F64  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36212  005F66  0E0A               	movlw	10
 36213  005F68  6F62               	movwf	___awmod@divisor& (0+255),b
 36214  005F6A  0100               	movlb	0	; () banked
 36215  005F6C  518F               	movf	scale@scl& (0+255),w,b
 36216  005F6E  0100               	movlb	0	; () banked
 36217  005F70  6F60               	movwf	___awmod@dividend& (0+255),b
 36218  005F72  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36219  005F74  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 36220  005F76  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 36221  005F78  ECCC  F04D         	call	___awmod	;wreg free
 36222  005F7C  C060  F06E         	movff	?___awmod,___wmul@multiplier
 36223  005F80  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 36224  005F84  EC15  F055         	call	___wmul	;wreg free
 36225  005F88  0ECE               	movlw	low __powers_
 36226  005F8A  0100               	movlb	0	; () banked
 36227  005F8C  256E               	addwf	?___wmul& (0+255),w,b
 36228  005F8E  6EF6               	movwf	tblptrl,c
 36229  005F90  0EEC               	movlw	high __powers_
 36230  005F92  0100               	movlb	0	; () banked
 36231  005F94  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36232  005F96  6EF7               	movwf	tblptrh,c
 36233  005F98                     	if	1	;There are 3 active tblptr bytes
 36234  005F98  6AF8               	clrf	tblptru,c
 36235  005F9A  0E00               	movlw	low (__mediumconst shr (0+16))
 36236  005F9C  22F8               	addwfc	tblptru,f,c
 36237  005F9E                     	endif
 36238  005F9E  0009               	tblrd		*+
 36239  005FA0  CFF5 F07D          	movff	tablat,___ftmul@f2
 36240  005FA4  0009               	tblrd		*+
 36241  005FA6  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36242  005FAA  000A               	tblrd		*-
 36243  005FAC  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36244  005FB0  EC5A  F041         	call	___ftmul	;wreg free
 36245  005FB4  C07A  F089         	movff	?___ftmul,?_scale
 36246  005FB8  C07B  F08A         	movff	?___ftmul+1,?_scale+1
 36247  005FBC  C07C  F08B         	movff	?___ftmul+2,?_scale+2
 36248  005FC0  0012               	return	
 36249  005FC2  D06B               	goto	l9614
 36250  005FC4                     l9608:
 36251                           
 36252                           ;doprnt.c: 438: else if(scl > 10)
 36253  005FC4  0100               	movlb	0	; () banked
 36254  005FC6  518F               	movf	scale@scl& (0+255),w,b
 36255  005FC8  0A80               	xorlw	128
 36256  005FCA  0F75               	addlw	-139
 36257  005FCC  A0D8               	btfss	status,0,c
 36258  005FCE  D065               	goto	l9614
 36259                           
 36260                           ; BSR set to: 0
 36261                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 36262  005FD0  0E00               	movlw	0
 36263  005FD2  0100               	movlb	0	; () banked
 36264  005FD4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 36265  005FD6  0E0A               	movlw	10
 36266  005FD8  6F68               	movwf	___awdiv@divisor& (0+255),b
 36267  005FDA  0100               	movlb	0	; () banked
 36268  005FDC  518F               	movf	scale@scl& (0+255),w,b
 36269  005FDE  0100               	movlb	0	; () banked
 36270  005FE0  6F66               	movwf	___awdiv@dividend& (0+255),b
 36271  005FE2  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 36272  005FE4  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
 36273  005FE6  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
 36274  005FE8  EC0D  F04B         	call	___awdiv	;wreg free
 36275  005FEC  0E09               	movlw	9
 36276  005FEE  0100               	movlb	0	; () banked
 36277  005FF0  2566               	addwf	?___awdiv& (0+255),w,b
 36278  005FF2  0100               	movlb	0	; () banked
 36279  005FF4  6F6E               	movwf	___wmul@multiplier& (0+255),b
 36280  005FF6  0E00               	movlw	0
 36281  005FF8  0100               	movlb	0	; () banked
 36282  005FFA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 36283  005FFC  0100               	movlb	0	; () banked
 36284  005FFE  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 36285  006000  0E00               	movlw	0
 36286  006002  0100               	movlb	0	; () banked
 36287  006004  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36288  006006  0E03               	movlw	3
 36289  006008  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36290  00600A  EC15  F055         	call	___wmul	;wreg free
 36291  00600E  0ECE               	movlw	low __powers_
 36292  006010  0100               	movlb	0	; () banked
 36293  006012  256E               	addwf	?___wmul& (0+255),w,b
 36294  006014  6EF6               	movwf	tblptrl,c
 36295  006016  0EEC               	movlw	high __powers_
 36296  006018  0100               	movlb	0	; () banked
 36297  00601A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36298  00601C  6EF7               	movwf	tblptrh,c
 36299  00601E                     	if	1	;There are 3 active tblptr bytes
 36300  00601E  6AF8               	clrf	tblptru,c
 36301  006020  0E00               	movlw	low (__mediumconst shr (0+16))
 36302  006022  22F8               	addwfc	tblptru,f,c
 36303  006024                     	endif
 36304  006024  0009               	tblrd		*+
 36305  006026  CFF5 F07A          	movff	tablat,___ftmul@f1
 36306  00602A  0009               	tblrd		*+
 36307  00602C  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 36308  006030  000A               	tblrd		*-
 36309  006032  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 36310  006036  0E00               	movlw	0
 36311  006038  0100               	movlb	0	; () banked
 36312  00603A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36313  00603C  0E03               	movlw	3
 36314  00603E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36315  006040  0E00               	movlw	0
 36316  006042  0100               	movlb	0	; () banked
 36317  006044  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36318  006046  0E0A               	movlw	10
 36319  006048  6F62               	movwf	___awmod@divisor& (0+255),b
 36320  00604A  0100               	movlb	0	; () banked
 36321  00604C  518F               	movf	scale@scl& (0+255),w,b
 36322  00604E  0100               	movlb	0	; () banked
 36323  006050  6F60               	movwf	___awmod@dividend& (0+255),b
 36324  006052  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36325  006054  BF60               	btfsc	___awmod@dividend& (0+255),7,b
 36326  006056  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
 36327  006058  ECCC  F04D         	call	___awmod	;wreg free
 36328  00605C  C060  F06E         	movff	?___awmod,___wmul@multiplier
 36329  006060  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 36330  006064  EC15  F055         	call	___wmul	;wreg free
 36331  006068  0ECE               	movlw	low __powers_
 36332  00606A  0100               	movlb	0	; () banked
 36333  00606C  256E               	addwf	?___wmul& (0+255),w,b
 36334  00606E  6EF6               	movwf	tblptrl,c
 36335  006070  0EEC               	movlw	high __powers_
 36336  006072  0100               	movlb	0	; () banked
 36337  006074  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36338  006076  6EF7               	movwf	tblptrh,c
 36339  006078                     	if	1	;There are 3 active tblptr bytes
 36340  006078  6AF8               	clrf	tblptru,c
 36341  00607A  0E00               	movlw	low (__mediumconst shr (0+16))
 36342  00607C  22F8               	addwfc	tblptru,f,c
 36343  00607E                     	endif
 36344  00607E  0009               	tblrd		*+
 36345  006080  CFF5 F07D          	movff	tablat,___ftmul@f2
 36346  006084  0009               	tblrd		*+
 36347  006086  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36348  00608A  000A               	tblrd		*-
 36349  00608C  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36350  006090  EC5A  F041         	call	___ftmul	;wreg free
 36351  006094  D78F               	goto	L22
 36352  006096  0012               	return	
 36353  006098  D000               	goto	l9614
 36354  00609A                     l9614:
 36355                           
 36356                           ;doprnt.c: 440: return _powers_[scl];
 36357  00609A  0100               	movlb	0	; () banked
 36358  00609C  518F               	movf	scale@scl& (0+255),w,b
 36359  00609E  0D03               	mullw	3
 36360  0060A0  0ECE               	movlw	low __powers_
 36361  0060A2  24F3               	addwf	prodl,w,c
 36362  0060A4  6EF6               	movwf	tblptrl,c
 36363  0060A6  0EEC               	movlw	high __powers_
 36364  0060A8  20F4               	addwfc	prodh,w,c
 36365  0060AA  6EF7               	movwf	tblptrh,c
 36366  0060AC                     	if	1	;There are 3 active tblptr bytes
 36367  0060AC  6AF8               	clrf	tblptru,c
 36368  0060AE  0E00               	movlw	low (__mediumconst shr (0+16))
 36369  0060B0  22F8               	addwfc	tblptru,f,c
 36370  0060B2                     	endif
 36371  0060B2  0009               	tblrd		*+
 36372  0060B4  CFF5 F089          	movff	tablat,?_scale
 36373  0060B8  0009               	tblrd		*+
 36374  0060BA  CFF5 F08A          	movff	tablat,?_scale+1
 36375  0060BE  000A               	tblrd		*-
 36376  0060C0  CFF5 F08B          	movff	tablat,?_scale+2
 36377  0060C4  0012               	return	
 36378                           
 36379                           ; BSR set to: 0
 36380  0060C6  0012               	return		;funcret
 36381  0060C8                     __end_of_scale:
 36382                           	opt stack 0
 36383                           tblptru	equ	0xFF8
 36384                           tblptrh	equ	0xFF7
 36385                           tblptrl	equ	0xFF6
 36386                           tablat	equ	0xFF5
 36387                           prodh	equ	0xFF4
 36388                           prodl	equ	0xFF3
 36389                           intcon	equ	0xFF2
 36390                           intcon2	equ	0xFF1
 36391                           indf0	equ	0xFEF
 36392                           postinc0	equ	0xFEE
 36393                           plusw0	equ	0xFEB
 36394                           fsr0h	equ	0xFEA
 36395                           fsr0l	equ	0xFE9
 36396                           wreg	equ	0xFE8
 36397                           indf1	equ	0xFE7
 36398                           postdec1	equ	0xFE5
 36399                           fsr1h	equ	0xFE2
 36400                           fsr1l	equ	0xFE1
 36401                           indf2	equ	0xFDF
 36402                           postinc2	equ	0xFDE
 36403                           postdec2	equ	0xFDD
 36404                           plusw2	equ	0xFDB
 36405                           fsr2h	equ	0xFDA
 36406                           fsr2l	equ	0xFD9
 36407                           status	equ	0xFD8
 36408                           
 36409 ;; *************** function _isdigit *****************
 36410 ;; Defined at:
 36411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 36412 ;; Parameters:    Size  Location     Type
 36413 ;;  c               1    wreg     unsigned char 
 36414 ;; Auto vars:     Size  Location     Type
 36415 ;;  c               1    2[BANK0 ] unsigned char 
 36416 ;; Return value:  Size  Location     Type
 36417 ;;		None               void
 36418 ;; Registers used:
 36419 ;;		wreg, status,2, status,0
 36420 ;; Tracked objects:
 36421 ;;		On entry : 0/0
 36422 ;;		On exit  : 0/0
 36423 ;;		Unchanged: 0/0
 36424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36428 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36429 ;;Total ram usage:        3 bytes
 36430 ;; Hardware stack levels used:    1
 36431 ;; Hardware stack levels required when called:    5
 36432 ;; This function calls:
 36433 ;;		Nothing
 36434 ;; This function is called by:
 36435 ;;		_sprintf
 36436 ;; This function uses a non-reentrant model
 36437 ;;
 36438                           
 36439                           	psect	text77
 36440  00ABC2                     __ptext77:
 36441                           	opt stack 0
 36442  00ABC2                     _isdigit:
 36443                           	opt stack 24
 36444                           
 36445                           ;incstack = 0
 36446                           ;isdigit@c stored from wreg
 36447  00ABC2  0100               	movlb	0	; () banked
 36448  00ABC4  6F62               	movwf	isdigit@c& (0+255),b
 36449                           
 36450                           ; BSR set to: 0
 36451  00ABC6  0E00               	movlw	0
 36452  00ABC8  0100               	movlb	0	; () banked
 36453  00ABCA  6F61               	movwf	_isdigit$3767& (0+255),b
 36454                           
 36455                           ; BSR set to: 0
 36456  00ABCC  0E3A               	movlw	58
 36457  00ABCE  0100               	movlb	0	; () banked
 36458  00ABD0  6162               	cpfslt	isdigit@c& (0+255),b
 36459  00ABD2  D008               	goto	l9626
 36460                           
 36461                           ; BSR set to: 0
 36462  00ABD4  0E2F               	movlw	47
 36463  00ABD6  0100               	movlb	0	; () banked
 36464  00ABD8  6562               	cpfsgt	isdigit@c& (0+255),b
 36465  00ABDA  D004               	goto	l9626
 36466                           
 36467                           ; BSR set to: 0
 36468  00ABDC  0E01               	movlw	1
 36469  00ABDE  0100               	movlb	0	; () banked
 36470  00ABE0  6F61               	movwf	_isdigit$3767& (0+255),b
 36471  00ABE2  D000               	goto	l9626
 36472  00ABE4                     l9626:
 36473                           
 36474                           ; BSR set to: 0
 36475  00ABE4  C061  F060         	movff	_isdigit$3767,??_isdigit
 36476  00ABE8  0100               	movlb	0	; () banked
 36477  00ABEA  3160               	rrcf	??_isdigit& (0+255),w,b
 36478  00ABEC  0012               	return	
 36479                           
 36480                           ; BSR set to: 0
 36481                           
 36482                           ; BSR set to: 0
 36483  00ABEE  0012               	return		;funcret
 36484  00ABF0                     __end_of_isdigit:
 36485                           	opt stack 0
 36486                           tblptru	equ	0xFF8
 36487                           tblptrh	equ	0xFF7
 36488                           tblptrl	equ	0xFF6
 36489                           tablat	equ	0xFF5
 36490                           prodh	equ	0xFF4
 36491                           prodl	equ	0xFF3
 36492                           intcon	equ	0xFF2
 36493                           intcon2	equ	0xFF1
 36494                           indf0	equ	0xFEF
 36495                           postinc0	equ	0xFEE
 36496                           plusw0	equ	0xFEB
 36497                           fsr0h	equ	0xFEA
 36498                           fsr0l	equ	0xFE9
 36499                           wreg	equ	0xFE8
 36500                           indf1	equ	0xFE7
 36501                           postdec1	equ	0xFE5
 36502                           fsr1h	equ	0xFE2
 36503                           fsr1l	equ	0xFE1
 36504                           indf2	equ	0xFDF
 36505                           postinc2	equ	0xFDE
 36506                           postdec2	equ	0xFDD
 36507                           plusw2	equ	0xFDB
 36508                           fsr2h	equ	0xFDA
 36509                           fsr2l	equ	0xFD9
 36510                           status	equ	0xFD8
 36511                           
 36512 ;; *************** function _fround *****************
 36513 ;; Defined at:
 36514 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 36515 ;; Parameters:    Size  Location     Type
 36516 ;;  prec            1    wreg     unsigned char 
 36517 ;; Auto vars:     Size  Location     Type
 36518 ;;  prec            1   50[BANK0 ] unsigned char 
 36519 ;; Return value:  Size  Location     Type
 36520 ;;                  3   41[BANK0 ] unsigned char 
 36521 ;; Registers used:
 36522 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36523 ;; Tracked objects:
 36524 ;;		On entry : 0/0
 36525 ;;		On exit  : 0/0
 36526 ;;		Unchanged: 0/0
 36527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36528 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36529 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36531 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36532 ;;Total ram usage:       10 bytes
 36533 ;; Hardware stack levels used:    1
 36534 ;; Hardware stack levels required when called:    7
 36535 ;; This function calls:
 36536 ;;		___awdiv
 36537 ;;		___awmod
 36538 ;;		___ftmul
 36539 ;;		___wmul
 36540 ;; This function is called by:
 36541 ;;		_sprintf
 36542 ;; This function uses a non-reentrant model
 36543 ;;
 36544                           
 36545                           	psect	text78
 36546  006CD8                     __ptext78:
 36547                           	opt stack 0
 36548  006CD8                     _fround:
 36549                           	opt stack 22
 36550                           
 36551                           ; BSR set to: 0
 36552                           ;incstack = 0
 36553                           ;fround@prec stored from wreg
 36554  006CD8  0100               	movlb	0	; () banked
 36555  006CDA  6F92               	movwf	fround@prec& (0+255),b
 36556                           
 36557                           ; BSR set to: 0
 36558                           ;doprnt.c: 413: if(prec>=110)
 36559  006CDC  0E6D               	movlw	109
 36560  006CDE  0100               	movlb	0	; () banked
 36561  006CE0  6592               	cpfsgt	fround@prec& (0+255),b
 36562  006CE2  D0C4               	goto	l9568
 36563                           
 36564                           ; BSR set to: 0
 36565                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 36566  006CE4  0E00               	movlw	0
 36567  006CE6  0100               	movlb	0	; () banked
 36568  006CE8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36569  006CEA  0E03               	movlw	3
 36570  006CEC  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36571  006CEE  0E00               	movlw	0
 36572  006CF0  0100               	movlb	0	; () banked
 36573  006CF2  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 36574  006CF4  0E0A               	movlw	10
 36575  006CF6  6F68               	movwf	___awdiv@divisor& (0+255),b
 36576  006CF8  0E00               	movlw	0
 36577  006CFA  0100               	movlb	0	; () banked
 36578  006CFC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36579  006CFE  0E64               	movlw	100
 36580  006D00  6F62               	movwf	___awmod@divisor& (0+255),b
 36581  006D02  C092  F060         	movff	fround@prec,___awmod@dividend
 36582  006D06  0100               	movlb	0	; () banked
 36583  006D08  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36584  006D0A  ECCC  F04D         	call	___awmod	;wreg free
 36585  006D0E  C060  F066         	movff	?___awmod,___awdiv@dividend
 36586  006D12  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
 36587  006D16  EC0D  F04B         	call	___awdiv	;wreg free
 36588  006D1A  0E09               	movlw	9
 36589  006D1C  0100               	movlb	0	; () banked
 36590  006D1E  2566               	addwf	?___awdiv& (0+255),w,b
 36591  006D20  0100               	movlb	0	; () banked
 36592  006D22  6F6E               	movwf	___wmul@multiplier& (0+255),b
 36593  006D24  0E00               	movlw	0
 36594  006D26  0100               	movlb	0	; () banked
 36595  006D28  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 36596  006D2A  0100               	movlb	0	; () banked
 36597  006D2C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 36598  006D2E  EC15  F055         	call	___wmul	;wreg free
 36599  006D32  0EA7               	movlw	low __npowers_
 36600  006D34  0100               	movlb	0	; () banked
 36601  006D36  256E               	addwf	?___wmul& (0+255),w,b
 36602  006D38  6EF6               	movwf	tblptrl,c
 36603  006D3A  0EEC               	movlw	high __npowers_
 36604  006D3C  0100               	movlb	0	; () banked
 36605  006D3E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36606  006D40  6EF7               	movwf	tblptrh,c
 36607  006D42                     	if	1	;There are 3 active tblptr bytes
 36608  006D42  6AF8               	clrf	tblptru,c
 36609  006D44  0E00               	movlw	low (__mediumconst shr (0+16))
 36610  006D46  22F8               	addwfc	tblptru,f,c
 36611  006D48                     	endif
 36612  006D48  0009               	tblrd		*+
 36613  006D4A  CFF5 F07D          	movff	tablat,___ftmul@f2
 36614  006D4E  0009               	tblrd		*+
 36615  006D50  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36616  006D54  000A               	tblrd		*-
 36617  006D56  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36618  006D5A  0E00               	movlw	0
 36619  006D5C  0100               	movlb	0	; () banked
 36620  006D5E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 36621  006D60  0E64               	movlw	100
 36622  006D62  6F68               	movwf	___awdiv@divisor& (0+255),b
 36623  006D64  C092  F066         	movff	fround@prec,___awdiv@dividend
 36624  006D68  0100               	movlb	0	; () banked
 36625  006D6A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 36626  006D6C  EC0D  F04B         	call	___awdiv	;wreg free
 36627  006D70  0E12               	movlw	18
 36628  006D72  0100               	movlb	0	; () banked
 36629  006D74  2566               	addwf	?___awdiv& (0+255),w,b
 36630  006D76  0100               	movlb	0	; () banked
 36631  006D78  6F6E               	movwf	___wmul@multiplier& (0+255),b
 36632  006D7A  0E00               	movlw	0
 36633  006D7C  0100               	movlb	0	; () banked
 36634  006D7E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 36635  006D80  0100               	movlb	0	; () banked
 36636  006D82  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 36637  006D84  0E00               	movlw	0
 36638  006D86  0100               	movlb	0	; () banked
 36639  006D88  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36640  006D8A  0E03               	movlw	3
 36641  006D8C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36642  006D8E  EC15  F055         	call	___wmul	;wreg free
 36643  006D92  0EA7               	movlw	low __npowers_
 36644  006D94  0100               	movlb	0	; () banked
 36645  006D96  256E               	addwf	?___wmul& (0+255),w,b
 36646  006D98  6EF6               	movwf	tblptrl,c
 36647  006D9A  0EEC               	movlw	high __npowers_
 36648  006D9C  0100               	movlb	0	; () banked
 36649  006D9E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36650  006DA0  6EF7               	movwf	tblptrh,c
 36651  006DA2                     	if	1	;There are 3 active tblptr bytes
 36652  006DA2  6AF8               	clrf	tblptru,c
 36653  006DA4  0E00               	movlw	low (__mediumconst shr (0+16))
 36654  006DA6  22F8               	addwfc	tblptru,f,c
 36655  006DA8                     	endif
 36656  006DA8  0009               	tblrd		*+
 36657  006DAA  CFF5 F07A          	movff	tablat,___ftmul@f1
 36658  006DAE  0009               	tblrd		*+
 36659  006DB0  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 36660  006DB4  000A               	tblrd		*-
 36661  006DB6  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 36662  006DBA  EC5A  F041         	call	___ftmul	;wreg free
 36663  006DBE  C07A  F08F         	movff	?___ftmul,_fround$4113
 36664  006DC2  C07B  F090         	movff	?___ftmul+1,_fround$4113+1
 36665  006DC6  C07C  F091         	movff	?___ftmul+2,_fround$4113+2
 36666                           
 36667                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 36668  006DCA  0E00               	movlw	0
 36669  006DCC  0100               	movlb	0	; () banked
 36670  006DCE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36671  006DD0  0E03               	movlw	3
 36672  006DD2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36673  006DD4  0E00               	movlw	0
 36674  006DD6  0100               	movlb	0	; () banked
 36675  006DD8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36676  006DDA  0E0A               	movlw	10
 36677  006DDC  6F62               	movwf	___awmod@divisor& (0+255),b
 36678  006DDE  C092  F060         	movff	fround@prec,___awmod@dividend
 36679  006DE2  0100               	movlb	0	; () banked
 36680  006DE4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36681  006DE6  ECCC  F04D         	call	___awmod	;wreg free
 36682  006DEA  C060  F06E         	movff	?___awmod,___wmul@multiplier
 36683  006DEE  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 36684  006DF2  EC15  F055         	call	___wmul	;wreg free
 36685  006DF6  0EA7               	movlw	low __npowers_
 36686  006DF8  0100               	movlb	0	; () banked
 36687  006DFA  256E               	addwf	?___wmul& (0+255),w,b
 36688  006DFC  6EF6               	movwf	tblptrl,c
 36689  006DFE  0EEC               	movlw	high __npowers_
 36690  006E00  0100               	movlb	0	; () banked
 36691  006E02  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36692  006E04  6EF7               	movwf	tblptrh,c
 36693  006E06                     	if	1	;There are 3 active tblptr bytes
 36694  006E06  6AF8               	clrf	tblptru,c
 36695  006E08  0E00               	movlw	low (__mediumconst shr (0+16))
 36696  006E0A  22F8               	addwfc	tblptru,f,c
 36697  006E0C                     	endif
 36698  006E0C  0009               	tblrd		*+
 36699  006E0E  CFF5 F07D          	movff	tablat,___ftmul@f2
 36700  006E12  0009               	tblrd		*+
 36701  006E14  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36702  006E18  000A               	tblrd		*-
 36703  006E1A  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36704  006E1E  C08F  F07A         	movff	_fround$4113,___ftmul@f1
 36705  006E22  C090  F07B         	movff	_fround$4113+1,___ftmul@f1+1
 36706  006E26  C091  F07C         	movff	_fround$4113+2,___ftmul@f1+2
 36707  006E2A  EC5A  F041         	call	___ftmul	;wreg free
 36708  006E2E  C07A  F08C         	movff	?___ftmul,_fround$4114
 36709  006E32  C07B  F08D         	movff	?___ftmul+1,_fround$4114+1
 36710  006E36  C07C  F08E         	movff	?___ftmul+2,_fround$4114+2
 36711                           
 36712                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 36713  006E3A  C08C  F07A         	movff	_fround$4114,___ftmul@f1
 36714  006E3E  C08D  F07B         	movff	_fround$4114+1,___ftmul@f1+1
 36715  006E42  C08E  F07C         	movff	_fround$4114+2,___ftmul@f1+2
 36716  006E46  0E00               	movlw	0
 36717  006E48  0100               	movlb	0	; () banked
 36718  006E4A  6F7D               	movwf	___ftmul@f2& (0+255),b
 36719  006E4C  0E00               	movlw	0
 36720  006E4E  0100               	movlb	0	; () banked
 36721  006E50  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 36722  006E52  0E3F               	movlw	63
 36723  006E54  0100               	movlb	0	; () banked
 36724  006E56  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 36725  006E58  EC5A  F041         	call	___ftmul	;wreg free
 36726  006E5C  C07A  F089         	movff	?___ftmul,?_fround
 36727  006E60  C07B  F08A         	movff	?___ftmul+1,?_fround+1
 36728  006E64  C07C  F08B         	movff	?___ftmul+2,?_fround+2
 36729  006E68  0012               	return	
 36730  006E6A  D07A               	goto	l9576
 36731  006E6C                     l9568:
 36732                           
 36733                           ;doprnt.c: 415: else if(prec > 10)
 36734  006E6C  0E0A               	movlw	10
 36735  006E6E  0100               	movlb	0	; () banked
 36736  006E70  6592               	cpfsgt	fround@prec& (0+255),b
 36737  006E72  D076               	goto	l9576
 36738                           
 36739                           ; BSR set to: 0
 36740                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 36741  006E74  0E00               	movlw	0
 36742  006E76  0100               	movlb	0	; () banked
 36743  006E78  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36744  006E7A  0E03               	movlw	3
 36745  006E7C  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36746  006E7E  0E00               	movlw	0
 36747  006E80  0100               	movlb	0	; () banked
 36748  006E82  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 36749  006E84  0E0A               	movlw	10
 36750  006E86  6F62               	movwf	___awmod@divisor& (0+255),b
 36751  006E88  C092  F060         	movff	fround@prec,___awmod@dividend
 36752  006E8C  0100               	movlb	0	; () banked
 36753  006E8E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 36754  006E90  ECCC  F04D         	call	___awmod	;wreg free
 36755  006E94  C060  F06E         	movff	?___awmod,___wmul@multiplier
 36756  006E98  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
 36757  006E9C  EC15  F055         	call	___wmul	;wreg free
 36758  006EA0  0EA7               	movlw	low __npowers_
 36759  006EA2  0100               	movlb	0	; () banked
 36760  006EA4  256E               	addwf	?___wmul& (0+255),w,b
 36761  006EA6  6EF6               	movwf	tblptrl,c
 36762  006EA8  0EEC               	movlw	high __npowers_
 36763  006EAA  0100               	movlb	0	; () banked
 36764  006EAC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36765  006EAE  6EF7               	movwf	tblptrh,c
 36766  006EB0                     	if	1	;There are 3 active tblptr bytes
 36767  006EB0  6AF8               	clrf	tblptru,c
 36768  006EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 36769  006EB4  22F8               	addwfc	tblptru,f,c
 36770  006EB6                     	endif
 36771  006EB6  0009               	tblrd		*+
 36772  006EB8  CFF5 F07D          	movff	tablat,___ftmul@f2
 36773  006EBC  0009               	tblrd		*+
 36774  006EBE  CFF5 F07E          	movff	tablat,___ftmul@f2+1
 36775  006EC2  000A               	tblrd		*-
 36776  006EC4  CFF5 F07F          	movff	tablat,___ftmul@f2+2
 36777  006EC8  0E00               	movlw	0
 36778  006ECA  0100               	movlb	0	; () banked
 36779  006ECC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 36780  006ECE  0E0A               	movlw	10
 36781  006ED0  6F68               	movwf	___awdiv@divisor& (0+255),b
 36782  006ED2  C092  F066         	movff	fround@prec,___awdiv@dividend
 36783  006ED6  0100               	movlb	0	; () banked
 36784  006ED8  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 36785  006EDA  EC0D  F04B         	call	___awdiv	;wreg free
 36786  006EDE  0E09               	movlw	9
 36787  006EE0  0100               	movlb	0	; () banked
 36788  006EE2  2566               	addwf	?___awdiv& (0+255),w,b
 36789  006EE4  0100               	movlb	0	; () banked
 36790  006EE6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 36791  006EE8  0E00               	movlw	0
 36792  006EEA  0100               	movlb	0	; () banked
 36793  006EEC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
 36794  006EEE  0100               	movlb	0	; () banked
 36795  006EF0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
 36796  006EF2  0E00               	movlw	0
 36797  006EF4  0100               	movlb	0	; () banked
 36798  006EF6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36799  006EF8  0E03               	movlw	3
 36800  006EFA  6F70               	movwf	___wmul@multiplicand& (0+255),b
 36801  006EFC  EC15  F055         	call	___wmul	;wreg free
 36802  006F00  0EA7               	movlw	low __npowers_
 36803  006F02  0100               	movlb	0	; () banked
 36804  006F04  256E               	addwf	?___wmul& (0+255),w,b
 36805  006F06  6EF6               	movwf	tblptrl,c
 36806  006F08  0EEC               	movlw	high __npowers_
 36807  006F0A  0100               	movlb	0	; () banked
 36808  006F0C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 36809  006F0E  6EF7               	movwf	tblptrh,c
 36810  006F10                     	if	1	;There are 3 active tblptr bytes
 36811  006F10  6AF8               	clrf	tblptru,c
 36812  006F12  0E00               	movlw	low (__mediumconst shr (0+16))
 36813  006F14  22F8               	addwfc	tblptru,f,c
 36814  006F16                     	endif
 36815  006F16  0009               	tblrd		*+
 36816  006F18  CFF5 F07A          	movff	tablat,___ftmul@f1
 36817  006F1C  0009               	tblrd		*+
 36818  006F1E  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 36819  006F22  000A               	tblrd		*-
 36820  006F24  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 36821  006F28  EC5A  F041         	call	___ftmul	;wreg free
 36822  006F2C  C07A  F08F         	movff	?___ftmul,_fround$4113
 36823  006F30  C07B  F090         	movff	?___ftmul+1,_fround$4113+1
 36824  006F34  C07C  F091         	movff	?___ftmul+2,_fround$4113+2
 36825                           
 36826                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 36827  006F38  C08F  F07A         	movff	_fround$4113,___ftmul@f1
 36828  006F3C  C090  F07B         	movff	_fround$4113+1,___ftmul@f1+1
 36829  006F40  C091  F07C         	movff	_fround$4113+2,___ftmul@f1+2
 36830  006F44  0E00               	movlw	0
 36831  006F46  0100               	movlb	0	; () banked
 36832  006F48  6F7D               	movwf	___ftmul@f2& (0+255),b
 36833  006F4A  0E00               	movlw	0
 36834  006F4C  0100               	movlb	0	; () banked
 36835  006F4E  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 36836  006F50  0E3F               	movlw	63
 36837  006F52  0100               	movlb	0	; () banked
 36838  006F54  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 36839  006F56  EC5A  F041         	call	___ftmul	;wreg free
 36840  006F5A  D780               	goto	L23
 36841  006F5C  0012               	return	
 36842  006F5E  D000               	goto	l9576
 36843  006F60                     l9576:
 36844                           
 36845                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 36846  006F60  0100               	movlb	0	; () banked
 36847  006F62  5192               	movf	fround@prec& (0+255),w,b
 36848  006F64  0D03               	mullw	3
 36849  006F66  0EA7               	movlw	low __npowers_
 36850  006F68  24F3               	addwf	prodl,w,c
 36851  006F6A  6EF6               	movwf	tblptrl,c
 36852  006F6C  0EEC               	movlw	high __npowers_
 36853  006F6E  20F4               	addwfc	prodh,w,c
 36854  006F70  6EF7               	movwf	tblptrh,c
 36855  006F72                     	if	1	;There are 3 active tblptr bytes
 36856  006F72  6AF8               	clrf	tblptru,c
 36857  006F74  0E00               	movlw	low (__mediumconst shr (0+16))
 36858  006F76  22F8               	addwfc	tblptru,f,c
 36859  006F78                     	endif
 36860  006F78  0009               	tblrd		*+
 36861  006F7A  CFF5 F07A          	movff	tablat,___ftmul@f1
 36862  006F7E  0009               	tblrd		*+
 36863  006F80  CFF5 F07B          	movff	tablat,___ftmul@f1+1
 36864  006F84  000A               	tblrd		*-
 36865  006F86  CFF5 F07C          	movff	tablat,___ftmul@f1+2
 36866  006F8A  0E00               	movlw	0
 36867  006F8C  0100               	movlb	0	; () banked
 36868  006F8E  6F7D               	movwf	___ftmul@f2& (0+255),b
 36869  006F90  0E00               	movlw	0
 36870  006F92  0100               	movlb	0	; () banked
 36871  006F94  6F7E               	movwf	(___ftmul@f2+1)& (0+255),b
 36872  006F96  0E3F               	movlw	63
 36873  006F98  0100               	movlb	0	; () banked
 36874  006F9A  6F7F               	movwf	(___ftmul@f2+2)& (0+255),b
 36875  006F9C  EC5A  F041         	call	___ftmul	;wreg free
 36876  006FA0  C07A  F089         	movff	?___ftmul,?_fround
 36877  006FA4  C07B  F08A         	movff	?___ftmul+1,?_fround+1
 36878  006FA8  C07C  F08B         	movff	?___ftmul+2,?_fround+2
 36879  006FAC  0012               	return	
 36880  006FAE  0012               	return		;funcret
 36881  006FB0                     __end_of_fround:
 36882                           	opt stack 0
 36883                           tblptru	equ	0xFF8
 36884                           tblptrh	equ	0xFF7
 36885                           tblptrl	equ	0xFF6
 36886                           tablat	equ	0xFF5
 36887                           prodh	equ	0xFF4
 36888                           prodl	equ	0xFF3
 36889                           intcon	equ	0xFF2
 36890                           intcon2	equ	0xFF1
 36891                           indf0	equ	0xFEF
 36892                           postinc0	equ	0xFEE
 36893                           plusw0	equ	0xFEB
 36894                           fsr0h	equ	0xFEA
 36895                           fsr0l	equ	0xFE9
 36896                           wreg	equ	0xFE8
 36897                           indf1	equ	0xFE7
 36898                           postdec1	equ	0xFE5
 36899                           fsr1h	equ	0xFE2
 36900                           fsr1l	equ	0xFE1
 36901                           indf2	equ	0xFDF
 36902                           postinc2	equ	0xFDE
 36903                           postdec2	equ	0xFDD
 36904                           plusw2	equ	0xFDB
 36905                           fsr2h	equ	0xFDA
 36906                           fsr2l	equ	0xFD9
 36907                           status	equ	0xFD8
 36908                           
 36909 ;; *************** function ___wmul *****************
 36910 ;; Defined at:
 36911 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 36912 ;; Parameters:    Size  Location     Type
 36913 ;;  multiplier      2   14[BANK0 ] unsigned int 
 36914 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 36915 ;; Auto vars:     Size  Location     Type
 36916 ;;  product         2   18[BANK0 ] unsigned int 
 36917 ;; Return value:  Size  Location     Type
 36918 ;;                  2   14[BANK0 ] unsigned int 
 36919 ;; Registers used:
 36920 ;;		wreg, status,2, status,0, prodl, prodh
 36921 ;; Tracked objects:
 36922 ;;		On entry : 0/0
 36923 ;;		On exit  : 0/0
 36924 ;;		Unchanged: 0/0
 36925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36929 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36930 ;;Total ram usage:        6 bytes
 36931 ;; Hardware stack levels used:    1
 36932 ;; Hardware stack levels required when called:    5
 36933 ;; This function calls:
 36934 ;;		Nothing
 36935 ;; This function is called by:
 36936 ;;		_fround
 36937 ;;		_scale
 36938 ;;		_sprintf
 36939 ;; This function uses a non-reentrant model
 36940 ;;
 36941                           
 36942                           	psect	text79
 36943  00AA2A                     __ptext79:
 36944                           	opt stack 0
 36945  00AA2A                     ___wmul:
 36946                           	opt stack 23
 36947                           
 36948                           ;incstack = 0
 36949  00AA2A  0100               	movlb	0	; () banked
 36950  00AA2C  516E               	movf	___wmul@multiplier& (0+255),w,b
 36951  00AA2E  0100               	movlb	0	; () banked
 36952  00AA30  0370               	mulwf	___wmul@multiplicand& (0+255),b
 36953  00AA32  CFF3 F072          	movff	prodl,___wmul@product
 36954  00AA36  CFF4 F073          	movff	prodh,___wmul@product+1
 36955  00AA3A  0100               	movlb	0	; () banked
 36956  00AA3C  516E               	movf	___wmul@multiplier& (0+255),w,b
 36957  00AA3E  0100               	movlb	0	; () banked
 36958  00AA40  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36959  00AA42  50F3               	movf	prodl,w,c
 36960  00AA44  0100               	movlb	0	; () banked
 36961  00AA46  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 36962  00AA48  0100               	movlb	0	; () banked
 36963  00AA4A  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36964  00AA4C  0100               	movlb	0	; () banked
 36965  00AA4E  0370               	mulwf	___wmul@multiplicand& (0+255),b
 36966  00AA50  50F3               	movf	prodl,w,c
 36967  00AA52  0100               	movlb	0	; () banked
 36968  00AA54  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 36969                           
 36970                           ; BSR set to: 0
 36971  00AA56  C072  F06E         	movff	___wmul@product,?___wmul
 36972  00AA5A  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 36973  00AA5E  0012               	return	
 36974                           
 36975                           ; BSR set to: 0
 36976                           
 36977                           ; BSR set to: 0
 36978  00AA60  0012               	return		;funcret
 36979  00AA62                     __end_of___wmul:
 36980                           	opt stack 0
 36981                           tblptru	equ	0xFF8
 36982                           tblptrh	equ	0xFF7
 36983                           tblptrl	equ	0xFF6
 36984                           tablat	equ	0xFF5
 36985                           prodh	equ	0xFF4
 36986                           prodl	equ	0xFF3
 36987                           intcon	equ	0xFF2
 36988                           intcon2	equ	0xFF1
 36989                           indf0	equ	0xFEF
 36990                           postinc0	equ	0xFEE
 36991                           plusw0	equ	0xFEB
 36992                           fsr0h	equ	0xFEA
 36993                           fsr0l	equ	0xFE9
 36994                           wreg	equ	0xFE8
 36995                           indf1	equ	0xFE7
 36996                           postdec1	equ	0xFE5
 36997                           fsr1h	equ	0xFE2
 36998                           fsr1l	equ	0xFE1
 36999                           indf2	equ	0xFDF
 37000                           postinc2	equ	0xFDE
 37001                           postdec2	equ	0xFDD
 37002                           plusw2	equ	0xFDB
 37003                           fsr2h	equ	0xFDA
 37004                           fsr2l	equ	0xFD9
 37005                           status	equ	0xFD8
 37006                           
 37007 ;; *************** function ___ftmul *****************
 37008 ;; Defined at:
 37009 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 37010 ;; Parameters:    Size  Location     Type
 37011 ;;  f1              3   26[BANK0 ] float 
 37012 ;;  f2              3   29[BANK0 ] float 
 37013 ;; Auto vars:     Size  Location     Type
 37014 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
 37015 ;;  sign            1   40[BANK0 ] unsigned char 
 37016 ;;  cntr            1   39[BANK0 ] unsigned char 
 37017 ;;  exp             1   35[BANK0 ] unsigned char 
 37018 ;; Return value:  Size  Location     Type
 37019 ;;                  3   26[BANK0 ] float 
 37020 ;; Registers used:
 37021 ;;		wreg, status,2, status,0, cstack
 37022 ;; Tracked objects:
 37023 ;;		On entry : 0/0
 37024 ;;		On exit  : 0/0
 37025 ;;		Unchanged: 0/0
 37026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37027 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37028 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37029 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37030 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37031 ;;Total ram usage:       15 bytes
 37032 ;; Hardware stack levels used:    1
 37033 ;; Hardware stack levels required when called:    6
 37034 ;; This function calls:
 37035 ;;		___ftpack
 37036 ;; This function is called by:
 37037 ;;		_ReadVoltage
 37038 ;;		_fround
 37039 ;;		_scale
 37040 ;;		_sprintf
 37041 ;; This function uses a non-reentrant model
 37042 ;;
 37043                           
 37044                           	psect	text80
 37045  0082B4                     __ptext80:
 37046                           	opt stack 0
 37047  0082B4                     ___ftmul:
 37048                           	opt stack 22
 37049                           
 37050                           ; BSR set to: 0
 37051                           ;incstack = 0
 37052  0082B4  C07C  F080         	movff	___ftmul@f1+2,??___ftmul
 37053  0082B8  0100               	movlb	0	; () banked
 37054  0082BA  6B81               	clrf	(??___ftmul+1)& (0+255),b
 37055  0082BC  6B82               	clrf	(??___ftmul+2)& (0+255),b
 37056  0082BE  0100               	movlb	0	; () banked
 37057  0082C0  357B               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 37058  0082C2  0100               	movlb	0	; () banked
 37059  0082C4  3780               	rlcf	??___ftmul& (0+255),f,b
 37060  0082C6  E301               	bnc	u9061
 37061  0082C8  8181               	bsf	(??___ftmul+1)& (0+255),0,b
 37062  0082CA                     u9061:
 37063  0082CA  0100               	movlb	0	; () banked
 37064  0082CC  5180               	movf	??___ftmul& (0+255),w,b
 37065  0082CE  0100               	movlb	0	; () banked
 37066  0082D0  6F83               	movwf	___ftmul@exp& (0+255),b
 37067  0082D2  0100               	movlb	0	; () banked
 37068  0082D4  5183               	movf	___ftmul@exp& (0+255),w,b
 37069  0082D6  A4D8               	btfss	status,2,c
 37070  0082D8  D00A               	goto	l9360
 37071                           
 37072                           ; BSR set to: 0
 37073  0082DA  0E00               	movlw	0
 37074  0082DC  0100               	movlb	0	; () banked
 37075  0082DE  6F7A               	movwf	?___ftmul& (0+255),b
 37076  0082E0  0E00               	movlw	0
 37077  0082E2  0100               	movlb	0	; () banked
 37078  0082E4  6F7B               	movwf	(?___ftmul+1)& (0+255),b
 37079  0082E6  0E00               	movlw	0
 37080  0082E8  0100               	movlb	0	; () banked
 37081  0082EA  6F7C               	movwf	(?___ftmul+2)& (0+255),b
 37082                           
 37083                           ; BSR set to: 0
 37084  0082EC  0012               	return	
 37085  0082EE                     l9360:
 37086                           
 37087                           ; BSR set to: 0
 37088  0082EE  C07F  F080         	movff	___ftmul@f2+2,??___ftmul
 37089  0082F2  0100               	movlb	0	; () banked
 37090  0082F4  6B81               	clrf	(??___ftmul+1)& (0+255),b
 37091  0082F6  6B82               	clrf	(??___ftmul+2)& (0+255),b
 37092  0082F8  0100               	movlb	0	; () banked
 37093  0082FA  357E               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 37094  0082FC  0100               	movlb	0	; () banked
 37095  0082FE  3780               	rlcf	??___ftmul& (0+255),f,b
 37096  008300  E301               	bnc	u9081
 37097  008302  8181               	bsf	(??___ftmul+1)& (0+255),0,b
 37098  008304                     u9081:
 37099  008304  0100               	movlb	0	; () banked
 37100  008306  5180               	movf	??___ftmul& (0+255),w,b
 37101  008308  0100               	movlb	0	; () banked
 37102  00830A  6F88               	movwf	___ftmul@sign& (0+255),b
 37103  00830C  0100               	movlb	0	; () banked
 37104  00830E  5188               	movf	___ftmul@sign& (0+255),w,b
 37105  008310  A4D8               	btfss	status,2,c
 37106  008312  D00A               	goto	l9366
 37107                           
 37108                           ; BSR set to: 0
 37109  008314  0E00               	movlw	0
 37110  008316  0100               	movlb	0	; () banked
 37111  008318  6F7A               	movwf	?___ftmul& (0+255),b
 37112  00831A  0E00               	movlw	0
 37113  00831C  0100               	movlb	0	; () banked
 37114  00831E  6F7B               	movwf	(?___ftmul+1)& (0+255),b
 37115  008320  0E00               	movlw	0
 37116  008322  0100               	movlb	0	; () banked
 37117  008324  6F7C               	movwf	(?___ftmul+2)& (0+255),b
 37118                           
 37119                           ; BSR set to: 0
 37120  008326  0012               	return	
 37121  008328                     l9366:
 37122                           
 37123                           ; BSR set to: 0
 37124  008328  0100               	movlb	0	; () banked
 37125  00832A  5188               	movf	___ftmul@sign& (0+255),w,b
 37126  00832C  0F7B               	addlw	123
 37127  00832E  0100               	movlb	0	; () banked
 37128  008330  2783               	addwf	___ftmul@exp& (0+255),f,b
 37129                           
 37130                           ; BSR set to: 0
 37131  008332  C07C  F088         	movff	___ftmul@f1+2,___ftmul@sign
 37132  008336  0100               	movlb	0	; () banked
 37133  008338  517F               	movf	(___ftmul@f2+2)& (0+255),w,b
 37134  00833A  0100               	movlb	0	; () banked
 37135  00833C  1B88               	xorwf	___ftmul@sign& (0+255),f,b
 37136  00833E  0E80               	movlw	128
 37137  008340  0100               	movlb	0	; () banked
 37138  008342  1788               	andwf	___ftmul@sign& (0+255),f,b
 37139                           
 37140                           ; BSR set to: 0
 37141  008344  0100               	movlb	0	; () banked
 37142  008346  8F7B               	bsf	(___ftmul@f1+1)& (0+255),7,b
 37143                           
 37144                           ; BSR set to: 0
 37145  008348  0100               	movlb	0	; () banked
 37146  00834A  8F7E               	bsf	(___ftmul@f2+1)& (0+255),7,b
 37147                           
 37148                           ; BSR set to: 0
 37149  00834C  0EFF               	movlw	255
 37150  00834E  0100               	movlb	0	; () banked
 37151  008350  177D               	andwf	___ftmul@f2& (0+255),f,b
 37152  008352  0EFF               	movlw	255
 37153  008354  0100               	movlb	0	; () banked
 37154  008356  177E               	andwf	(___ftmul@f2+1)& (0+255),f,b
 37155  008358  0E00               	movlw	0
 37156  00835A  0100               	movlb	0	; () banked
 37157  00835C  177F               	andwf	(___ftmul@f2+2)& (0+255),f,b
 37158                           
 37159                           ; BSR set to: 0
 37160  00835E  0E00               	movlw	0
 37161  008360  0100               	movlb	0	; () banked
 37162  008362  6F84               	movwf	___ftmul@f3_as_product& (0+255),b
 37163  008364  0E00               	movlw	0
 37164  008366  0100               	movlb	0	; () banked
 37165  008368  6F85               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 37166  00836A  0E00               	movlw	0
 37167  00836C  0100               	movlb	0	; () banked
 37168  00836E  6F86               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 37169                           
 37170                           ; BSR set to: 0
 37171  008370  0E07               	movlw	7
 37172  008372  0100               	movlb	0	; () banked
 37173  008374  6F87               	movwf	___ftmul@cntr& (0+255),b
 37174  008376  D000               	goto	l9380
 37175  008378                     l9380:
 37176                           
 37177                           ; BSR set to: 0
 37178  008378  0100               	movlb	0	; () banked
 37179  00837A  A17A               	btfss	___ftmul@f1& (0+255),0,b
 37180  00837C  D00D               	goto	l9384
 37181                           
 37182                           ; BSR set to: 0
 37183  00837E  0100               	movlb	0	; () banked
 37184  008380  517D               	movf	___ftmul@f2& (0+255),w,b
 37185  008382  0100               	movlb	0	; () banked
 37186  008384  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
 37187  008386  0100               	movlb	0	; () banked
 37188  008388  517E               	movf	(___ftmul@f2+1)& (0+255),w,b
 37189  00838A  0100               	movlb	0	; () banked
 37190  00838C  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 37191  00838E  0100               	movlb	0	; () banked
 37192  008390  517F               	movf	(___ftmul@f2+2)& (0+255),w,b
 37193  008392  0100               	movlb	0	; () banked
 37194  008394  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 37195  008396  D000               	goto	l9384
 37196  008398                     l9384:
 37197                           
 37198                           ; BSR set to: 0
 37199  008398  0100               	movlb	0	; () banked
 37200  00839A  90D8               	bcf	status,0,c
 37201  00839C  337C               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 37202  00839E  337B               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 37203  0083A0  337A               	rrcf	___ftmul@f1& (0+255),f,b
 37204  0083A2  0100               	movlb	0	; () banked
 37205  0083A4  90D8               	bcf	status,0,c
 37206  0083A6  377D               	rlcf	___ftmul@f2& (0+255),f,b
 37207  0083A8  377E               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 37208  0083AA  377F               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 37209                           
 37210                           ; BSR set to: 0
 37211  0083AC  0100               	movlb	0	; () banked
 37212  0083AE  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
 37213  0083B0  D7E3               	goto	l9380
 37214  0083B2  D000               	goto	l9388
 37215  0083B4                     l9388:
 37216                           
 37217                           ; BSR set to: 0
 37218  0083B4  0E09               	movlw	9
 37219  0083B6  0100               	movlb	0	; () banked
 37220  0083B8  6F87               	movwf	___ftmul@cntr& (0+255),b
 37221  0083BA  D000               	goto	l9390
 37222  0083BC                     l9390:
 37223                           
 37224                           ; BSR set to: 0
 37225  0083BC  0100               	movlb	0	; () banked
 37226  0083BE  A17A               	btfss	___ftmul@f1& (0+255),0,b
 37227  0083C0  D00D               	goto	l9394
 37228                           
 37229                           ; BSR set to: 0
 37230  0083C2  0100               	movlb	0	; () banked
 37231  0083C4  517D               	movf	___ftmul@f2& (0+255),w,b
 37232  0083C6  0100               	movlb	0	; () banked
 37233  0083C8  2784               	addwf	___ftmul@f3_as_product& (0+255),f,b
 37234  0083CA  0100               	movlb	0	; () banked
 37235  0083CC  517E               	movf	(___ftmul@f2+1)& (0+255),w,b
 37236  0083CE  0100               	movlb	0	; () banked
 37237  0083D0  2385               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 37238  0083D2  0100               	movlb	0	; () banked
 37239  0083D4  517F               	movf	(___ftmul@f2+2)& (0+255),w,b
 37240  0083D6  0100               	movlb	0	; () banked
 37241  0083D8  2386               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 37242  0083DA  D000               	goto	l9394
 37243  0083DC                     l9394:
 37244                           
 37245                           ; BSR set to: 0
 37246  0083DC  0100               	movlb	0	; () banked
 37247  0083DE  90D8               	bcf	status,0,c
 37248  0083E0  337C               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 37249  0083E2  337B               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 37250  0083E4  337A               	rrcf	___ftmul@f1& (0+255),f,b
 37251  0083E6  0100               	movlb	0	; () banked
 37252  0083E8  90D8               	bcf	status,0,c
 37253  0083EA  3386               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 37254  0083EC  3385               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 37255  0083EE  3384               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 37256                           
 37257                           ; BSR set to: 0
 37258  0083F0  0100               	movlb	0	; () banked
 37259  0083F2  2F87               	decfsz	___ftmul@cntr& (0+255),f,b
 37260  0083F4  D7E3               	goto	l9390
 37261  0083F6  D000               	goto	l9398
 37262  0083F8                     l9398:
 37263                           
 37264                           ; BSR set to: 0
 37265  0083F8  C084  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 37266  0083FC  C085  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 37267  008400  C086  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 37268  008404  C083  F063         	movff	___ftmul@exp,___ftpack@exp
 37269  008408  C088  F064         	movff	___ftmul@sign,___ftpack@sign
 37270  00840C  ECEA  F045         	call	___ftpack	;wreg free
 37271  008410  C060  F07A         	movff	?___ftpack,?___ftmul
 37272  008414  C061  F07B         	movff	?___ftpack+1,?___ftmul+1
 37273  008418  C062  F07C         	movff	?___ftpack+2,?___ftmul+2
 37274  00841C  0012               	return	
 37275  00841E  0012               	return		;funcret
 37276  008420                     __end_of___ftmul:
 37277                           	opt stack 0
 37278                           tblptru	equ	0xFF8
 37279                           tblptrh	equ	0xFF7
 37280                           tblptrl	equ	0xFF6
 37281                           tablat	equ	0xFF5
 37282                           prodh	equ	0xFF4
 37283                           prodl	equ	0xFF3
 37284                           intcon	equ	0xFF2
 37285                           intcon2	equ	0xFF1
 37286                           indf0	equ	0xFEF
 37287                           postinc0	equ	0xFEE
 37288                           plusw0	equ	0xFEB
 37289                           fsr0h	equ	0xFEA
 37290                           fsr0l	equ	0xFE9
 37291                           wreg	equ	0xFE8
 37292                           indf1	equ	0xFE7
 37293                           postdec1	equ	0xFE5
 37294                           fsr1h	equ	0xFE2
 37295                           fsr1l	equ	0xFE1
 37296                           indf2	equ	0xFDF
 37297                           postinc2	equ	0xFDE
 37298                           postdec2	equ	0xFDD
 37299                           plusw2	equ	0xFDB
 37300                           fsr2h	equ	0xFDA
 37301                           fsr2l	equ	0xFD9
 37302                           status	equ	0xFD8
 37303                           
 37304 ;; *************** function ___awmod *****************
 37305 ;; Defined at:
 37306 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 37307 ;; Parameters:    Size  Location     Type
 37308 ;;  dividend        2    0[BANK0 ] int 
 37309 ;;  divisor         2    2[BANK0 ] int 
 37310 ;; Auto vars:     Size  Location     Type
 37311 ;;  sign            1    5[BANK0 ] unsigned char 
 37312 ;;  counter         1    4[BANK0 ] unsigned char 
 37313 ;; Return value:  Size  Location     Type
 37314 ;;                  2    0[BANK0 ] int 
 37315 ;; Registers used:
 37316 ;;		wreg, status,2, status,0
 37317 ;; Tracked objects:
 37318 ;;		On entry : 0/0
 37319 ;;		On exit  : 0/0
 37320 ;;		Unchanged: 0/0
 37321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37325 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37326 ;;Total ram usage:        6 bytes
 37327 ;; Hardware stack levels used:    1
 37328 ;; Hardware stack levels required when called:    5
 37329 ;; This function calls:
 37330 ;;		Nothing
 37331 ;; This function is called by:
 37332 ;;		_fround
 37333 ;;		_scale
 37334 ;; This function uses a non-reentrant model
 37335 ;;
 37336                           
 37337                           	psect	text81
 37338  009B98                     __ptext81:
 37339                           	opt stack 0
 37340  009B98                     ___awmod:
 37341                           	opt stack 23
 37342                           
 37343                           ;incstack = 0
 37344  009B98  0E00               	movlw	0
 37345  009B9A  0100               	movlb	0	; () banked
 37346  009B9C  6F65               	movwf	___awmod@sign& (0+255),b
 37347                           
 37348                           ; BSR set to: 0
 37349  009B9E  0100               	movlb	0	; () banked
 37350  009BA0  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37351  009BA2  D009               	goto	l9454
 37352                           
 37353                           ; BSR set to: 0
 37354  009BA4  0100               	movlb	0	; () banked
 37355  009BA6  6D60               	negf	___awmod@dividend& (0+255),b
 37356  009BA8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 37357  009BAA  B0D8               	btfsc	status,0,c
 37358  009BAC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 37359                           
 37360                           ; BSR set to: 0
 37361  009BAE  0E01               	movlw	1
 37362  009BB0  0100               	movlb	0	; () banked
 37363  009BB2  6F65               	movwf	___awmod@sign& (0+255),b
 37364  009BB4  D000               	goto	l9454
 37365  009BB6                     l9454:
 37366                           
 37367                           ; BSR set to: 0
 37368  009BB6  0100               	movlb	0	; () banked
 37369  009BB8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37370  009BBA  D006               	goto	l9458
 37371                           
 37372                           ; BSR set to: 0
 37373  009BBC  0100               	movlb	0	; () banked
 37374  009BBE  6D62               	negf	___awmod@divisor& (0+255),b
 37375  009BC0  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 37376  009BC2  B0D8               	btfsc	status,0,c
 37377  009BC4  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 37378  009BC6  D000               	goto	l9458
 37379  009BC8                     l9458:
 37380                           
 37381                           ; BSR set to: 0
 37382  009BC8  0100               	movlb	0	; () banked
 37383  009BCA  5162               	movf	___awmod@divisor& (0+255),w,b
 37384  009BCC  0100               	movlb	0	; () banked
 37385  009BCE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37386  009BD0  B4D8               	btfsc	status,2,c
 37387  009BD2  D02B               	goto	l9474
 37388                           
 37389                           ; BSR set to: 0
 37390  009BD4  0E01               	movlw	1
 37391  009BD6  0100               	movlb	0	; () banked
 37392  009BD8  6F64               	movwf	___awmod@counter& (0+255),b
 37393  009BDA  D007               	goto	l9464
 37394  009BDC                     l9462:
 37395                           
 37396                           ; BSR set to: 0
 37397  009BDC  0100               	movlb	0	; () banked
 37398  009BDE  90D8               	bcf	status,0,c
 37399  009BE0  3762               	rlcf	___awmod@divisor& (0+255),f,b
 37400  009BE2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37401  009BE4  0100               	movlb	0	; () banked
 37402  009BE6  2B64               	incf	___awmod@counter& (0+255),f,b
 37403  009BE8  D000               	goto	l9464
 37404  009BEA                     l9464:
 37405                           
 37406                           ; BSR set to: 0
 37407  009BEA  0100               	movlb	0	; () banked
 37408  009BEC  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 37409  009BEE  D002               	goto	l9466
 37410  009BF0  D7F5               	goto	l9462
 37411                           
 37412                           ; BSR set to: 0
 37413  009BF2  D000               	goto	l9466
 37414  009BF4                     l9466:
 37415                           
 37416                           ; BSR set to: 0
 37417  009BF4  0100               	movlb	0	; () banked
 37418  009BF6  5162               	movf	___awmod@divisor& (0+255),w,b
 37419  009BF8  0100               	movlb	0	; () banked
 37420  009BFA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 37421  009BFC  0100               	movlb	0	; () banked
 37422  009BFE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 37423  009C00  0100               	movlb	0	; () banked
 37424  009C02  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37425  009C04  A0D8               	btfss	status,0,c
 37426  009C06  D009               	goto	l9470
 37427                           
 37428                           ; BSR set to: 0
 37429  009C08  0100               	movlb	0	; () banked
 37430  009C0A  5162               	movf	___awmod@divisor& (0+255),w,b
 37431  009C0C  0100               	movlb	0	; () banked
 37432  009C0E  5F60               	subwf	___awmod@dividend& (0+255),f,b
 37433  009C10  0100               	movlb	0	; () banked
 37434  009C12  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 37435  009C14  0100               	movlb	0	; () banked
 37436  009C16  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37437  009C18  D000               	goto	l9470
 37438  009C1A                     l9470:
 37439                           
 37440                           ; BSR set to: 0
 37441  009C1A  0100               	movlb	0	; () banked
 37442  009C1C  90D8               	bcf	status,0,c
 37443  009C1E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37444  009C20  3362               	rrcf	___awmod@divisor& (0+255),f,b
 37445                           
 37446                           ; BSR set to: 0
 37447  009C22  0100               	movlb	0	; () banked
 37448  009C24  2F64               	decfsz	___awmod@counter& (0+255),f,b
 37449  009C26  D7E6               	goto	l9466
 37450                           
 37451                           ; BSR set to: 0
 37452  009C28  D000               	goto	l9474
 37453  009C2A                     l9474:
 37454                           
 37455                           ; BSR set to: 0
 37456  009C2A  0100               	movlb	0	; () banked
 37457  009C2C  5165               	movf	___awmod@sign& (0+255),w,b
 37458  009C2E  0100               	movlb	0	; () banked
 37459  009C30  B4D8               	btfsc	status,2,c
 37460  009C32  D006               	goto	l9478
 37461                           
 37462                           ; BSR set to: 0
 37463  009C34  0100               	movlb	0	; () banked
 37464  009C36  6D60               	negf	___awmod@dividend& (0+255),b
 37465  009C38  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 37466  009C3A  B0D8               	btfsc	status,0,c
 37467  009C3C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 37468  009C3E  D000               	goto	l9478
 37469  009C40                     l9478:
 37470                           
 37471                           ; BSR set to: 0
 37472  009C40  C060  F060         	movff	___awmod@dividend,?___awmod
 37473  009C44  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 37474  009C48  0012               	return	
 37475                           
 37476                           ; BSR set to: 0
 37477                           
 37478                           ; BSR set to: 0
 37479  009C4A  0012               	return		;funcret
 37480  009C4C                     __end_of___awmod:
 37481                           	opt stack 0
 37482                           tblptru	equ	0xFF8
 37483                           tblptrh	equ	0xFF7
 37484                           tblptrl	equ	0xFF6
 37485                           tablat	equ	0xFF5
 37486                           prodh	equ	0xFF4
 37487                           prodl	equ	0xFF3
 37488                           intcon	equ	0xFF2
 37489                           intcon2	equ	0xFF1
 37490                           indf0	equ	0xFEF
 37491                           postinc0	equ	0xFEE
 37492                           plusw0	equ	0xFEB
 37493                           fsr0h	equ	0xFEA
 37494                           fsr0l	equ	0xFE9
 37495                           wreg	equ	0xFE8
 37496                           indf1	equ	0xFE7
 37497                           postdec1	equ	0xFE5
 37498                           fsr1h	equ	0xFE2
 37499                           fsr1l	equ	0xFE1
 37500                           indf2	equ	0xFDF
 37501                           postinc2	equ	0xFDE
 37502                           postdec2	equ	0xFDD
 37503                           plusw2	equ	0xFDB
 37504                           fsr2h	equ	0xFDA
 37505                           fsr2l	equ	0xFD9
 37506                           status	equ	0xFD8
 37507                           
 37508 ;; *************** function ___awdiv *****************
 37509 ;; Defined at:
 37510 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 37511 ;; Parameters:    Size  Location     Type
 37512 ;;  dividend        2    6[BANK0 ] int 
 37513 ;;  divisor         2    8[BANK0 ] int 
 37514 ;; Auto vars:     Size  Location     Type
 37515 ;;  quotient        2   12[BANK0 ] int 
 37516 ;;  sign            1   11[BANK0 ] unsigned char 
 37517 ;;  counter         1   10[BANK0 ] unsigned char 
 37518 ;; Return value:  Size  Location     Type
 37519 ;;                  2    6[BANK0 ] int 
 37520 ;; Registers used:
 37521 ;;		wreg, status,2, status,0
 37522 ;; Tracked objects:
 37523 ;;		On entry : 0/0
 37524 ;;		On exit  : 0/0
 37525 ;;		Unchanged: 0/0
 37526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37528 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37530 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37531 ;;Total ram usage:        8 bytes
 37532 ;; Hardware stack levels used:    1
 37533 ;; Hardware stack levels required when called:    5
 37534 ;; This function calls:
 37535 ;;		Nothing
 37536 ;; This function is called by:
 37537 ;;		_fround
 37538 ;;		_scale
 37539 ;;		_sprintf
 37540 ;; This function uses a non-reentrant model
 37541 ;;
 37542                           
 37543                           	psect	text82
 37544  00961A                     __ptext82:
 37545                           	opt stack 0
 37546  00961A                     ___awdiv:
 37547                           	opt stack 23
 37548                           
 37549                           ; BSR set to: 0
 37550                           ;incstack = 0
 37551  00961A  0E00               	movlw	0
 37552  00961C  0100               	movlb	0	; () banked
 37553  00961E  6F6B               	movwf	___awdiv@sign& (0+255),b
 37554                           
 37555                           ; BSR set to: 0
 37556  009620  0100               	movlb	0	; () banked
 37557  009622  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37558  009624  D009               	goto	l9410
 37559                           
 37560                           ; BSR set to: 0
 37561  009626  0100               	movlb	0	; () banked
 37562  009628  6D68               	negf	___awdiv@divisor& (0+255),b
 37563  00962A  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 37564  00962C  B0D8               	btfsc	status,0,c
 37565  00962E  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 37566                           
 37567                           ; BSR set to: 0
 37568  009630  0E01               	movlw	1
 37569  009632  0100               	movlb	0	; () banked
 37570  009634  6F6B               	movwf	___awdiv@sign& (0+255),b
 37571  009636  D000               	goto	l9410
 37572  009638                     l9410:
 37573                           
 37574                           ; BSR set to: 0
 37575  009638  0100               	movlb	0	; () banked
 37576  00963A  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 37577  00963C  D009               	goto	l9416
 37578                           
 37579                           ; BSR set to: 0
 37580  00963E  0100               	movlb	0	; () banked
 37581  009640  6D66               	negf	___awdiv@dividend& (0+255),b
 37582  009642  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 37583  009644  B0D8               	btfsc	status,0,c
 37584  009646  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 37585                           
 37586                           ; BSR set to: 0
 37587  009648  0E01               	movlw	1
 37588  00964A  0100               	movlb	0	; () banked
 37589  00964C  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 37590  00964E  D000               	goto	l9416
 37591  009650                     l9416:
 37592                           
 37593                           ; BSR set to: 0
 37594  009650  0E00               	movlw	0
 37595  009652  0100               	movlb	0	; () banked
 37596  009654  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 37597  009656  0E00               	movlw	0
 37598  009658  6F6C               	movwf	___awdiv@quotient& (0+255),b
 37599                           
 37600                           ; BSR set to: 0
 37601  00965A  0100               	movlb	0	; () banked
 37602  00965C  5168               	movf	___awdiv@divisor& (0+255),w,b
 37603  00965E  0100               	movlb	0	; () banked
 37604  009660  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 37605  009662  B4D8               	btfsc	status,2,c
 37606  009664  D031               	goto	l9438
 37607                           
 37608                           ; BSR set to: 0
 37609  009666  0E01               	movlw	1
 37610  009668  0100               	movlb	0	; () banked
 37611  00966A  6F6A               	movwf	___awdiv@counter& (0+255),b
 37612  00966C  D007               	goto	l9424
 37613  00966E                     l9422:
 37614                           
 37615                           ; BSR set to: 0
 37616  00966E  0100               	movlb	0	; () banked
 37617  009670  90D8               	bcf	status,0,c
 37618  009672  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 37619  009674  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 37620  009676  0100               	movlb	0	; () banked
 37621  009678  2B6A               	incf	___awdiv@counter& (0+255),f,b
 37622  00967A  D000               	goto	l9424
 37623  00967C                     l9424:
 37624                           
 37625                           ; BSR set to: 0
 37626  00967C  0100               	movlb	0	; () banked
 37627  00967E  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 37628  009680  D002               	goto	l9426
 37629  009682  D7F5               	goto	l9422
 37630                           
 37631                           ; BSR set to: 0
 37632  009684  D000               	goto	l9426
 37633  009686                     l9426:
 37634                           
 37635                           ; BSR set to: 0
 37636  009686  0100               	movlb	0	; () banked
 37637  009688  90D8               	bcf	status,0,c
 37638  00968A  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 37639  00968C  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 37640                           
 37641                           ; BSR set to: 0
 37642  00968E  0100               	movlb	0	; () banked
 37643  009690  5168               	movf	___awdiv@divisor& (0+255),w,b
 37644  009692  0100               	movlb	0	; () banked
 37645  009694  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 37646  009696  0100               	movlb	0	; () banked
 37647  009698  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37648  00969A  0100               	movlb	0	; () banked
 37649  00969C  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 37650  00969E  A0D8               	btfss	status,0,c
 37651  0096A0  D00B               	goto	l9434
 37652                           
 37653                           ; BSR set to: 0
 37654  0096A2  0100               	movlb	0	; () banked
 37655  0096A4  5168               	movf	___awdiv@divisor& (0+255),w,b
 37656  0096A6  0100               	movlb	0	; () banked
 37657  0096A8  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 37658  0096AA  0100               	movlb	0	; () banked
 37659  0096AC  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37660  0096AE  0100               	movlb	0	; () banked
 37661  0096B0  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 37662                           
 37663                           ; BSR set to: 0
 37664  0096B2  0100               	movlb	0	; () banked
 37665  0096B4  816C               	bsf	___awdiv@quotient& (0+255),0,b
 37666  0096B6  D000               	goto	l9434
 37667  0096B8                     l9434:
 37668                           
 37669                           ; BSR set to: 0
 37670  0096B8  0100               	movlb	0	; () banked
 37671  0096BA  90D8               	bcf	status,0,c
 37672  0096BC  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 37673  0096BE  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 37674                           
 37675                           ; BSR set to: 0
 37676  0096C0  0100               	movlb	0	; () banked
 37677  0096C2  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 37678  0096C4  D7E0               	goto	l9426
 37679                           
 37680                           ; BSR set to: 0
 37681  0096C6  D000               	goto	l9438
 37682  0096C8                     l9438:
 37683                           
 37684                           ; BSR set to: 0
 37685  0096C8  0100               	movlb	0	; () banked
 37686  0096CA  516B               	movf	___awdiv@sign& (0+255),w,b
 37687  0096CC  0100               	movlb	0	; () banked
 37688  0096CE  B4D8               	btfsc	status,2,c
 37689  0096D0  D006               	goto	l9442
 37690                           
 37691                           ; BSR set to: 0
 37692  0096D2  0100               	movlb	0	; () banked
 37693  0096D4  6D6C               	negf	___awdiv@quotient& (0+255),b
 37694  0096D6  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 37695  0096D8  B0D8               	btfsc	status,0,c
 37696  0096DA  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 37697  0096DC  D000               	goto	l9442
 37698  0096DE                     l9442:
 37699                           
 37700                           ; BSR set to: 0
 37701  0096DE  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 37702  0096E2  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 37703  0096E6  0012               	return	
 37704                           
 37705                           ; BSR set to: 0
 37706                           
 37707                           ; BSR set to: 0
 37708  0096E8  0012               	return		;funcret
 37709  0096EA                     __end_of___awdiv:
 37710                           	opt stack 0
 37711                           tblptru	equ	0xFF8
 37712                           tblptrh	equ	0xFF7
 37713                           tblptrl	equ	0xFF6
 37714                           tablat	equ	0xFF5
 37715                           prodh	equ	0xFF4
 37716                           prodl	equ	0xFF3
 37717                           intcon	equ	0xFF2
 37718                           intcon2	equ	0xFF1
 37719                           indf0	equ	0xFEF
 37720                           postinc0	equ	0xFEE
 37721                           plusw0	equ	0xFEB
 37722                           fsr0h	equ	0xFEA
 37723                           fsr0l	equ	0xFE9
 37724                           wreg	equ	0xFE8
 37725                           indf1	equ	0xFE7
 37726                           postdec1	equ	0xFE5
 37727                           fsr1h	equ	0xFE2
 37728                           fsr1l	equ	0xFE1
 37729                           indf2	equ	0xFDF
 37730                           postinc2	equ	0xFDE
 37731                           postdec2	equ	0xFDD
 37732                           plusw2	equ	0xFDB
 37733                           fsr2h	equ	0xFDA
 37734                           fsr2l	equ	0xFD9
 37735                           status	equ	0xFD8
 37736                           
 37737 ;; *************** function __tdiv_to_l_ *****************
 37738 ;; Defined at:
 37739 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 37740 ;; Parameters:    Size  Location     Type
 37741 ;;  f1              3    0[BANK0 ] float 
 37742 ;;  f2              3    3[BANK0 ] float 
 37743 ;; Auto vars:     Size  Location     Type
 37744 ;;  quot            4    9[BANK0 ] unsigned long 
 37745 ;;  exp1            1   14[BANK0 ] unsigned char 
 37746 ;;  cntr            1   13[BANK0 ] unsigned char 
 37747 ;; Return value:  Size  Location     Type
 37748 ;;                  4    0[BANK0 ] unsigned long 
 37749 ;; Registers used:
 37750 ;;		wreg, status,2, status,0
 37751 ;; Tracked objects:
 37752 ;;		On entry : 0/0
 37753 ;;		On exit  : 0/0
 37754 ;;		Unchanged: 0/0
 37755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37756 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37757 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37758 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37759 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37760 ;;Total ram usage:       15 bytes
 37761 ;; Hardware stack levels used:    1
 37762 ;; Hardware stack levels required when called:    5
 37763 ;; This function calls:
 37764 ;;		Nothing
 37765 ;; This function is called by:
 37766 ;;		_sprintf
 37767 ;; This function uses a non-reentrant model
 37768 ;;
 37769                           
 37770                           	psect	text83
 37771  007C82                     __ptext83:
 37772                           	opt stack 0
 37773  007C82                     __tdiv_to_l_:
 37774                           	opt stack 24
 37775                           
 37776                           ; BSR set to: 0
 37777                           ;incstack = 0
 37778  007C82  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 37779  007C86  0100               	movlb	0	; () banked
 37780  007C88  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 37781  007C8A  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 37782  007C8C  0100               	movlb	0	; () banked
 37783  007C8E  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 37784  007C90  0100               	movlb	0	; () banked
 37785  007C92  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 37786  007C94  E301               	bnc	u9401
 37787  007C96  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 37788  007C98                     u9401:
 37789  007C98  0100               	movlb	0	; () banked
 37790  007C9A  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 37791  007C9C  0100               	movlb	0	; () banked
 37792  007C9E  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 37793  007CA0  0100               	movlb	0	; () banked
 37794  007CA2  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 37795  007CA4  A4D8               	btfss	status,2,c
 37796  007CA6  D00A               	goto	l9636
 37797                           
 37798                           ; BSR set to: 0
 37799  007CA8  0E00               	movlw	0
 37800  007CAA  0100               	movlb	0	; () banked
 37801  007CAC  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 37802  007CAE  0E00               	movlw	0
 37803  007CB0  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 37804  007CB2  0E00               	movlw	0
 37805  007CB4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 37806  007CB6  0E00               	movlw	0
 37807  007CB8  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 37808                           
 37809                           ; BSR set to: 0
 37810  007CBA  0012               	return	
 37811  007CBC                     l9636:
 37812                           
 37813                           ; BSR set to: 0
 37814  007CBC  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 37815  007CC0  0100               	movlb	0	; () banked
 37816  007CC2  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 37817  007CC4  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 37818  007CC6  0100               	movlb	0	; () banked
 37819  007CC8  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 37820  007CCA  0100               	movlb	0	; () banked
 37821  007CCC  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
 37822  007CCE  E301               	bnc	u9421
 37823  007CD0  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 37824  007CD2                     u9421:
 37825  007CD2  0100               	movlb	0	; () banked
 37826  007CD4  5166               	movf	??__tdiv_to_l_& (0+255),w,b
 37827  007CD6  0100               	movlb	0	; () banked
 37828  007CD8  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 37829  007CDA  0100               	movlb	0	; () banked
 37830  007CDC  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 37831  007CDE  A4D8               	btfss	status,2,c
 37832  007CE0  D00A               	goto	l9642
 37833                           
 37834                           ; BSR set to: 0
 37835  007CE2  0E00               	movlw	0
 37836  007CE4  0100               	movlb	0	; () banked
 37837  007CE6  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 37838  007CE8  0E00               	movlw	0
 37839  007CEA  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 37840  007CEC  0E00               	movlw	0
 37841  007CEE  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 37842  007CF0  0E00               	movlw	0
 37843  007CF2  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 37844                           
 37845                           ; BSR set to: 0
 37846  007CF4  0012               	return	
 37847  007CF6                     l9642:
 37848                           
 37849                           ; BSR set to: 0
 37850  007CF6  0100               	movlb	0	; () banked
 37851  007CF8  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 37852                           
 37853                           ; BSR set to: 0
 37854  007CFA  0EFF               	movlw	255
 37855  007CFC  0100               	movlb	0	; () banked
 37856  007CFE  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 37857  007D00  0EFF               	movlw	255
 37858  007D02  0100               	movlb	0	; () banked
 37859  007D04  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 37860  007D06  0E00               	movlw	0
 37861  007D08  0100               	movlb	0	; () banked
 37862  007D0A  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 37863  007D0C  0100               	movlb	0	; () banked
 37864  007D0E  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 37865                           
 37866                           ; BSR set to: 0
 37867  007D10  0EFF               	movlw	255
 37868  007D12  0100               	movlb	0	; () banked
 37869  007D14  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 37870  007D16  0EFF               	movlw	255
 37871  007D18  0100               	movlb	0	; () banked
 37872  007D1A  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 37873  007D1C  0E00               	movlw	0
 37874  007D1E  0100               	movlb	0	; () banked
 37875  007D20  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 37876                           
 37877                           ; BSR set to: 0
 37878  007D22  0E00               	movlw	0
 37879  007D24  0100               	movlb	0	; () banked
 37880  007D26  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
 37881  007D28  0E00               	movlw	0
 37882  007D2A  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 37883  007D2C  0E00               	movlw	0
 37884  007D2E  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 37885  007D30  0E00               	movlw	0
 37886  007D32  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 37887                           
 37888                           ; BSR set to: 0
 37889  007D34  0E7F               	movlw	127
 37890  007D36  0100               	movlb	0	; () banked
 37891  007D38  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 37892                           
 37893                           ; BSR set to: 0
 37894  007D3A  0100               	movlb	0	; () banked
 37895  007D3C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 37896  007D3E  0F98               	addlw	152
 37897  007D40  0100               	movlb	0	; () banked
 37898  007D42  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 37899                           
 37900                           ; BSR set to: 0
 37901  007D44  0E18               	movlw	24
 37902  007D46  0100               	movlb	0	; () banked
 37903  007D48  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 37904  007D4A                     l3149:
 37905                           
 37906                           ; BSR set to: 0
 37907  007D4A  0100               	movlb	0	; () banked
 37908  007D4C  90D8               	bcf	status,0,c
 37909  007D4E  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 37910  007D50  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 37911  007D52  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 37912  007D54  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 37913                           
 37914                           ; BSR set to: 0
 37915  007D56  0100               	movlb	0	; () banked
 37916  007D58  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 37917  007D5A  0100               	movlb	0	; () banked
 37918  007D5C  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 37919  007D5E  0100               	movlb	0	; () banked
 37920  007D60  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 37921  007D62  0100               	movlb	0	; () banked
 37922  007D64  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 37923  007D66  0100               	movlb	0	; () banked
 37924  007D68  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 37925  007D6A  0100               	movlb	0	; () banked
 37926  007D6C  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 37927  007D6E  A0D8               	btfss	status,0,c
 37928  007D70  D00E               	goto	l3150
 37929                           
 37930                           ; BSR set to: 0
 37931  007D72  0100               	movlb	0	; () banked
 37932  007D74  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
 37933  007D76  0100               	movlb	0	; () banked
 37934  007D78  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 37935  007D7A  0100               	movlb	0	; () banked
 37936  007D7C  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 37937  007D7E  0100               	movlb	0	; () banked
 37938  007D80  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 37939  007D82  0100               	movlb	0	; () banked
 37940  007D84  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 37941  007D86  0100               	movlb	0	; () banked
 37942  007D88  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 37943                           
 37944                           ; BSR set to: 0
 37945  007D8A  0100               	movlb	0	; () banked
 37946  007D8C  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 37947  007D8E                     l3150:
 37948                           
 37949                           ; BSR set to: 0
 37950  007D8E  0100               	movlb	0	; () banked
 37951  007D90  90D8               	bcf	status,0,c
 37952  007D92  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 37953  007D94  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 37954  007D96  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 37955                           
 37956                           ; BSR set to: 0
 37957  007D98  0100               	movlb	0	; () banked
 37958  007D9A  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 37959  007D9C  D7D6               	goto	l3149
 37960  007D9E  D000               	goto	l9664
 37961  007DA0                     l9664:
 37962                           
 37963                           ; BSR set to: 0
 37964  007DA0  0100               	movlb	0	; () banked
 37965  007DA2  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 37966  007DA4  D01B               	goto	l9676
 37967                           
 37968                           ; BSR set to: 0
 37969  007DA6  0100               	movlb	0	; () banked
 37970  007DA8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 37971  007DAA  0A80               	xorlw	128
 37972  007DAC  0F97               	addlw	151
 37973  007DAE  B0D8               	btfsc	status,0,c
 37974  007DB0  D00B               	goto	l9672
 37975                           
 37976                           ; BSR set to: 0
 37977  007DB2  0E00               	movlw	0
 37978  007DB4  0100               	movlb	0	; () banked
 37979  007DB6  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 37980  007DB8  0E00               	movlw	0
 37981  007DBA  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 37982  007DBC  0E00               	movlw	0
 37983  007DBE  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 37984  007DC0  0E00               	movlw	0
 37985  007DC2  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 37986                           
 37987                           ; BSR set to: 0
 37988  007DC4  0012               	return	
 37989                           
 37990                           ; BSR set to: 0
 37991  007DC6  D000               	goto	l9672
 37992  007DC8                     l9672:
 37993                           
 37994                           ; BSR set to: 0
 37995  007DC8  0100               	movlb	0	; () banked
 37996  007DCA  90D8               	bcf	status,0,c
 37997  007DCC  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 37998  007DCE  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 37999  007DD0  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 38000  007DD2  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 38001                           
 38002                           ; BSR set to: 0
 38003  007DD4  0100               	movlb	0	; () banked
 38004  007DD6  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 38005  007DD8  D7F7               	goto	l9672
 38006                           
 38007                           ; BSR set to: 0
 38008  007DDA  D01D               	goto	l3156
 38009  007DDC                     l9676:
 38010                           
 38011                           ; BSR set to: 0
 38012  007DDC  0E17               	movlw	23
 38013  007DDE  0100               	movlb	0	; () banked
 38014  007DE0  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 38015  007DE2  D014               	goto	l9684
 38016                           
 38017                           ; BSR set to: 0
 38018  007DE4  0E00               	movlw	0
 38019  007DE6  0100               	movlb	0	; () banked
 38020  007DE8  6F60               	movwf	?__tdiv_to_l_& (0+255),b
 38021  007DEA  0E00               	movlw	0
 38022  007DEC  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 38023  007DEE  0E00               	movlw	0
 38024  007DF0  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 38025  007DF2  0E00               	movlw	0
 38026  007DF4  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 38027                           
 38028                           ; BSR set to: 0
 38029  007DF6  0012               	return	
 38030                           
 38031                           ; BSR set to: 0
 38032  007DF8  D009               	goto	l9684
 38033  007DFA                     l9682:
 38034                           
 38035                           ; BSR set to: 0
 38036  007DFA  0100               	movlb	0	; () banked
 38037  007DFC  90D8               	bcf	status,0,c
 38038  007DFE  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 38039  007E00  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 38040  007E02  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 38041  007E04  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 38042  007E06  0100               	movlb	0	; () banked
 38043  007E08  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 38044  007E0A  D000               	goto	l9684
 38045  007E0C                     l9684:
 38046                           
 38047                           ; BSR set to: 0
 38048  007E0C  0100               	movlb	0	; () banked
 38049  007E0E  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 38050  007E10  0100               	movlb	0	; () banked
 38051  007E12  A4D8               	btfss	status,2,c
 38052  007E14  D7F2               	goto	l9682
 38053  007E16                     l3156:
 38054                           
 38055                           ; BSR set to: 0
 38056  007E16  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 38057  007E1A  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 38058  007E1E  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 38059  007E22  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 38060                           
 38061                           ; BSR set to: 0
 38062  007E26  0012               	return		;funcret
 38063  007E28                     __end_of__tdiv_to_l_:
 38064                           	opt stack 0
 38065                           tblptru	equ	0xFF8
 38066                           tblptrh	equ	0xFF7
 38067                           tblptrl	equ	0xFF6
 38068                           tablat	equ	0xFF5
 38069                           prodh	equ	0xFF4
 38070                           prodl	equ	0xFF3
 38071                           intcon	equ	0xFF2
 38072                           intcon2	equ	0xFF1
 38073                           indf0	equ	0xFEF
 38074                           postinc0	equ	0xFEE
 38075                           plusw0	equ	0xFEB
 38076                           fsr0h	equ	0xFEA
 38077                           fsr0l	equ	0xFE9
 38078                           wreg	equ	0xFE8
 38079                           indf1	equ	0xFE7
 38080                           postdec1	equ	0xFE5
 38081                           fsr1h	equ	0xFE2
 38082                           fsr1l	equ	0xFE1
 38083                           indf2	equ	0xFDF
 38084                           postinc2	equ	0xFDE
 38085                           postdec2	equ	0xFDD
 38086                           plusw2	equ	0xFDB
 38087                           fsr2h	equ	0xFDA
 38088                           fsr2l	equ	0xFD9
 38089                           status	equ	0xFD8
 38090                           
 38091 ;; *************** function __div_to_l_ *****************
 38092 ;; Defined at:
 38093 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 38094 ;; Parameters:    Size  Location     Type
 38095 ;;  f1              3    0[BANK0 ] unsigned long 
 38096 ;;  f2              3    3[BANK0 ] unsigned long 
 38097 ;; Auto vars:     Size  Location     Type
 38098 ;;  quot            4    6[BANK0 ] unsigned long 
 38099 ;;  exp1            1   11[BANK0 ] unsigned char 
 38100 ;;  cntr            1   10[BANK0 ] unsigned char 
 38101 ;; Return value:  Size  Location     Type
 38102 ;;                  4    0[BANK0 ] unsigned long 
 38103 ;; Registers used:
 38104 ;;		wreg, status,2, status,0
 38105 ;; Tracked objects:
 38106 ;;		On entry : 0/0
 38107 ;;		On exit  : 0/0
 38108 ;;		Unchanged: 0/0
 38109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38110 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38111 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38113 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38114 ;;Total ram usage:       12 bytes
 38115 ;; Hardware stack levels used:    1
 38116 ;; Hardware stack levels required when called:    5
 38117 ;; This function calls:
 38118 ;;		Nothing
 38119 ;; This function is called by:
 38120 ;;		_sprintf
 38121 ;; This function uses a non-reentrant model
 38122 ;;
 38123                           
 38124                           	psect	text84
 38125  007E28                     __ptext84:
 38126                           	opt stack 0
 38127  007E28                     __div_to_l_:
 38128                           	opt stack 24
 38129                           
 38130                           ; BSR set to: 0
 38131                           ;incstack = 0
 38132  007E28  0100               	movlb	0	; () banked
 38133  007E2A  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 38134  007E2C  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 38135  007E2E  0100               	movlb	0	; () banked
 38136  007E30  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
 38137  007E32  0100               	movlb	0	; () banked
 38138  007E34  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 38139  007E36  A4D8               	btfss	status,2,c
 38140  007E38  D00A               	goto	l9692
 38141                           
 38142                           ; BSR set to: 0
 38143  007E3A  0E00               	movlw	0
 38144  007E3C  0100               	movlb	0	; () banked
 38145  007E3E  6F60               	movwf	?__div_to_l_& (0+255),b
 38146  007E40  0E00               	movlw	0
 38147  007E42  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 38148  007E44  0E00               	movlw	0
 38149  007E46  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 38150  007E48  0E00               	movlw	0
 38151  007E4A  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 38152                           
 38153                           ; BSR set to: 0
 38154  007E4C  0012               	return	
 38155  007E4E                     l9692:
 38156                           
 38157                           ; BSR set to: 0
 38158  007E4E  0100               	movlb	0	; () banked
 38159  007E50  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 38160  007E52  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 38161  007E54  0100               	movlb	0	; () banked
 38162  007E56  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 38163  007E58  0100               	movlb	0	; () banked
 38164  007E5A  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 38165  007E5C  A4D8               	btfss	status,2,c
 38166  007E5E  D00A               	goto	l9698
 38167                           
 38168                           ; BSR set to: 0
 38169  007E60  0E00               	movlw	0
 38170  007E62  0100               	movlb	0	; () banked
 38171  007E64  6F60               	movwf	?__div_to_l_& (0+255),b
 38172  007E66  0E00               	movlw	0
 38173  007E68  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 38174  007E6A  0E00               	movlw	0
 38175  007E6C  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 38176  007E6E  0E00               	movlw	0
 38177  007E70  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 38178                           
 38179                           ; BSR set to: 0
 38180  007E72  0012               	return	
 38181  007E74                     l9698:
 38182                           
 38183                           ; BSR set to: 0
 38184  007E74  0100               	movlb	0	; () banked
 38185  007E76  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 38186                           
 38187                           ; BSR set to: 0
 38188  007E78  0EFF               	movlw	255
 38189  007E7A  0100               	movlb	0	; () banked
 38190  007E7C  1760               	andwf	__div_to_l_@f1& (0+255),f,b
 38191  007E7E  0EFF               	movlw	255
 38192  007E80  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 38193  007E82  0EFF               	movlw	255
 38194  007E84  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 38195  007E86  0E00               	movlw	0
 38196  007E88  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 38197                           
 38198                           ; BSR set to: 0
 38199  007E8A  0100               	movlb	0	; () banked
 38200  007E8C  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 38201  007E8E  0EFF               	movlw	255
 38202  007E90  0100               	movlb	0	; () banked
 38203  007E92  1763               	andwf	__div_to_l_@f2& (0+255),f,b
 38204  007E94  0EFF               	movlw	255
 38205  007E96  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 38206  007E98  0EFF               	movlw	255
 38207  007E9A  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 38208  007E9C  0E00               	movlw	0
 38209  007E9E  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 38210                           
 38211                           ; BSR set to: 0
 38212  007EA0  0E00               	movlw	0
 38213  007EA2  0100               	movlb	0	; () banked
 38214  007EA4  6F66               	movwf	__div_to_l_@quot& (0+255),b
 38215  007EA6  0E00               	movlw	0
 38216  007EA8  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
 38217  007EAA  0E00               	movlw	0
 38218  007EAC  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
 38219  007EAE  0E00               	movlw	0
 38220  007EB0  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
 38221                           
 38222                           ; BSR set to: 0
 38223  007EB2  0E7F               	movlw	127
 38224  007EB4  0100               	movlb	0	; () banked
 38225  007EB6  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 38226                           
 38227                           ; BSR set to: 0
 38228  007EB8  0100               	movlb	0	; () banked
 38229  007EBA  516A               	movf	__div_to_l_@cntr& (0+255),w,b
 38230  007EBC  0FA0               	addlw	160
 38231  007EBE  0100               	movlb	0	; () banked
 38232  007EC0  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
 38233                           
 38234                           ; BSR set to: 0
 38235  007EC2  0E20               	movlw	32
 38236  007EC4  0100               	movlb	0	; () banked
 38237  007EC6  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
 38238  007EC8  D000               	goto	l9712
 38239  007ECA                     l9712:
 38240                           
 38241                           ; BSR set to: 0
 38242  007ECA  0100               	movlb	0	; () banked
 38243  007ECC  90D8               	bcf	status,0,c
 38244  007ECE  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 38245  007ED0  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 38246  007ED2  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 38247  007ED4  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 38248                           
 38249                           ; BSR set to: 0
 38250  007ED6  0100               	movlb	0	; () banked
 38251  007ED8  5163               	movf	__div_to_l_@f2& (0+255),w,b
 38252  007EDA  0100               	movlb	0	; () banked
 38253  007EDC  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
 38254  007EDE  0100               	movlb	0	; () banked
 38255  007EE0  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 38256  007EE2  0100               	movlb	0	; () banked
 38257  007EE4  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 38258  007EE6  0100               	movlb	0	; () banked
 38259  007EE8  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 38260  007EEA  0100               	movlb	0	; () banked
 38261  007EEC  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 38262  007EEE  0100               	movlb	0	; () banked
 38263  007EF0  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 38264  007EF2  0100               	movlb	0	; () banked
 38265  007EF4  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 38266  007EF6  A0D8               	btfss	status,0,c
 38267  007EF8  D013               	goto	l9720
 38268                           
 38269                           ; BSR set to: 0
 38270  007EFA  0100               	movlb	0	; () banked
 38271  007EFC  5163               	movf	__div_to_l_@f2& (0+255),w,b
 38272  007EFE  0100               	movlb	0	; () banked
 38273  007F00  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
 38274  007F02  0100               	movlb	0	; () banked
 38275  007F04  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 38276  007F06  0100               	movlb	0	; () banked
 38277  007F08  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 38278  007F0A  0100               	movlb	0	; () banked
 38279  007F0C  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 38280  007F0E  0100               	movlb	0	; () banked
 38281  007F10  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 38282  007F12  0100               	movlb	0	; () banked
 38283  007F14  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 38284  007F16  0100               	movlb	0	; () banked
 38285  007F18  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 38286                           
 38287                           ; BSR set to: 0
 38288  007F1A  0100               	movlb	0	; () banked
 38289  007F1C  8166               	bsf	__div_to_l_@quot& (0+255),0,b
 38290  007F1E  D000               	goto	l9720
 38291  007F20                     l9720:
 38292                           
 38293                           ; BSR set to: 0
 38294  007F20  0100               	movlb	0	; () banked
 38295  007F22  90D8               	bcf	status,0,c
 38296  007F24  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
 38297  007F26  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 38298  007F28  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 38299  007F2A  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 38300                           
 38301                           ; BSR set to: 0
 38302  007F2C  0100               	movlb	0	; () banked
 38303  007F2E  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 38304  007F30  D7CC               	goto	l9712
 38305  007F32  D000               	goto	l9724
 38306  007F34                     l9724:
 38307                           
 38308                           ; BSR set to: 0
 38309  007F34  0100               	movlb	0	; () banked
 38310  007F36  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
 38311  007F38  D01B               	goto	l9736
 38312                           
 38313                           ; BSR set to: 0
 38314  007F3A  0100               	movlb	0	; () banked
 38315  007F3C  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 38316  007F3E  0A80               	xorlw	128
 38317  007F40  0F9F               	addlw	159
 38318  007F42  B0D8               	btfsc	status,0,c
 38319  007F44  D00B               	goto	l9732
 38320                           
 38321                           ; BSR set to: 0
 38322  007F46  0E00               	movlw	0
 38323  007F48  0100               	movlb	0	; () banked
 38324  007F4A  6F60               	movwf	?__div_to_l_& (0+255),b
 38325  007F4C  0E00               	movlw	0
 38326  007F4E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 38327  007F50  0E00               	movlw	0
 38328  007F52  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 38329  007F54  0E00               	movlw	0
 38330  007F56  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 38331                           
 38332                           ; BSR set to: 0
 38333  007F58  0012               	return	
 38334                           
 38335                           ; BSR set to: 0
 38336  007F5A  D000               	goto	l9732
 38337  007F5C                     l9732:
 38338                           
 38339                           ; BSR set to: 0
 38340  007F5C  0100               	movlb	0	; () banked
 38341  007F5E  90D8               	bcf	status,0,c
 38342  007F60  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 38343  007F62  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 38344  007F64  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 38345  007F66  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
 38346                           
 38347                           ; BSR set to: 0
 38348  007F68  0100               	movlb	0	; () banked
 38349  007F6A  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 38350  007F6C  D7F7               	goto	l9732
 38351                           
 38352                           ; BSR set to: 0
 38353  007F6E  D01D               	goto	l3035
 38354  007F70                     l9736:
 38355                           
 38356                           ; BSR set to: 0
 38357  007F70  0E1F               	movlw	31
 38358  007F72  0100               	movlb	0	; () banked
 38359  007F74  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 38360  007F76  D014               	goto	l9744
 38361                           
 38362                           ; BSR set to: 0
 38363  007F78  0E00               	movlw	0
 38364  007F7A  0100               	movlb	0	; () banked
 38365  007F7C  6F60               	movwf	?__div_to_l_& (0+255),b
 38366  007F7E  0E00               	movlw	0
 38367  007F80  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
 38368  007F82  0E00               	movlw	0
 38369  007F84  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
 38370  007F86  0E00               	movlw	0
 38371  007F88  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
 38372                           
 38373                           ; BSR set to: 0
 38374  007F8A  0012               	return	
 38375                           
 38376                           ; BSR set to: 0
 38377  007F8C  D009               	goto	l9744
 38378  007F8E                     l9742:
 38379                           
 38380                           ; BSR set to: 0
 38381  007F8E  0100               	movlb	0	; () banked
 38382  007F90  90D8               	bcf	status,0,c
 38383  007F92  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
 38384  007F94  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 38385  007F96  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 38386  007F98  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 38387  007F9A  0100               	movlb	0	; () banked
 38388  007F9C  076B               	decf	__div_to_l_@exp1& (0+255),f,b
 38389  007F9E  D000               	goto	l9744
 38390  007FA0                     l9744:
 38391                           
 38392                           ; BSR set to: 0
 38393  007FA0  0100               	movlb	0	; () banked
 38394  007FA2  516B               	movf	__div_to_l_@exp1& (0+255),w,b
 38395  007FA4  0100               	movlb	0	; () banked
 38396  007FA6  A4D8               	btfss	status,2,c
 38397  007FA8  D7F2               	goto	l9742
 38398  007FAA                     l3035:
 38399                           
 38400                           ; BSR set to: 0
 38401  007FAA  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
 38402  007FAE  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 38403  007FB2  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 38404  007FB6  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 38405                           
 38406                           ; BSR set to: 0
 38407  007FBA  0012               	return		;funcret
 38408  007FBC                     __end_of__div_to_l_:
 38409                           	opt stack 0
 38410                           tblptru	equ	0xFF8
 38411                           tblptrh	equ	0xFF7
 38412                           tblptrl	equ	0xFF6
 38413                           tablat	equ	0xFF5
 38414                           prodh	equ	0xFF4
 38415                           prodl	equ	0xFF3
 38416                           intcon	equ	0xFF2
 38417                           intcon2	equ	0xFF1
 38418                           indf0	equ	0xFEF
 38419                           postinc0	equ	0xFEE
 38420                           plusw0	equ	0xFEB
 38421                           fsr0h	equ	0xFEA
 38422                           fsr0l	equ	0xFE9
 38423                           wreg	equ	0xFE8
 38424                           indf1	equ	0xFE7
 38425                           postdec1	equ	0xFE5
 38426                           fsr1h	equ	0xFE2
 38427                           fsr1l	equ	0xFE1
 38428                           indf2	equ	0xFDF
 38429                           postinc2	equ	0xFDE
 38430                           postdec2	equ	0xFDD
 38431                           plusw2	equ	0xFDB
 38432                           fsr2h	equ	0xFDA
 38433                           fsr2l	equ	0xFD9
 38434                           status	equ	0xFD8
 38435                           
 38436 ;; *************** function ___lltoft *****************
 38437 ;; Defined at:
 38438 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 38439 ;; Parameters:    Size  Location     Type
 38440 ;;  c               4    8[BANK0 ] unsigned long 
 38441 ;; Auto vars:     Size  Location     Type
 38442 ;;  exp             1   16[BANK0 ] unsigned char 
 38443 ;; Return value:  Size  Location     Type
 38444 ;;                  3    8[BANK0 ] float 
 38445 ;; Registers used:
 38446 ;;		wreg, status,2, status,0, cstack
 38447 ;; Tracked objects:
 38448 ;;		On entry : 0/0
 38449 ;;		On exit  : 0/0
 38450 ;;		Unchanged: 0/0
 38451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38454 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38455 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38456 ;;Total ram usage:        9 bytes
 38457 ;; Hardware stack levels used:    1
 38458 ;; Hardware stack levels required when called:    6
 38459 ;; This function calls:
 38460 ;;		___ftpack
 38461 ;; This function is called by:
 38462 ;;		_InitUART
 38463 ;;		_sprintf
 38464 ;; This function uses a non-reentrant model
 38465 ;;
 38466                           
 38467                           	psect	text85
 38468  00A2F6                     __ptext85:
 38469                           	opt stack 0
 38470  00A2F6                     ___lltoft:
 38471                           	opt stack 23
 38472                           
 38473                           ; BSR set to: 0
 38474                           ;incstack = 0
 38475  00A2F6  0E8E               	movlw	142
 38476  00A2F8  0100               	movlb	0	; () banked
 38477  00A2FA  6F70               	movwf	___lltoft@exp& (0+255),b
 38478  00A2FC  D009               	goto	l9864
 38479  00A2FE                     l9862:
 38480                           
 38481                           ; BSR set to: 0
 38482  00A2FE  0100               	movlb	0	; () banked
 38483  00A300  90D8               	bcf	status,0,c
 38484  00A302  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 38485  00A304  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 38486  00A306  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 38487  00A308  3368               	rrcf	___lltoft@c& (0+255),f,b
 38488  00A30A  0100               	movlb	0	; () banked
 38489  00A30C  2B70               	incf	___lltoft@exp& (0+255),f,b
 38490  00A30E  D000               	goto	l9864
 38491  00A310                     l9864:
 38492                           
 38493                           ; BSR set to: 0
 38494  00A310  0E00               	movlw	0
 38495  00A312  0100               	movlb	0	; () banked
 38496  00A314  1568               	andwf	___lltoft@c& (0+255),w,b
 38497  00A316  0100               	movlb	0	; () banked
 38498  00A318  6F6C               	movwf	??___lltoft& (0+255),b
 38499  00A31A  0E00               	movlw	0
 38500  00A31C  0100               	movlb	0	; () banked
 38501  00A31E  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 38502  00A320  0100               	movlb	0	; () banked
 38503  00A322  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 38504  00A324  0E00               	movlw	0
 38505  00A326  0100               	movlb	0	; () banked
 38506  00A328  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 38507  00A32A  0100               	movlb	0	; () banked
 38508  00A32C  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 38509  00A32E  0EFF               	movlw	255
 38510  00A330  0100               	movlb	0	; () banked
 38511  00A332  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 38512  00A334  0100               	movlb	0	; () banked
 38513  00A336  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 38514  00A338  0100               	movlb	0	; () banked
 38515  00A33A  516C               	movf	??___lltoft& (0+255),w,b
 38516  00A33C  0100               	movlb	0	; () banked
 38517  00A33E  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 38518  00A340  0100               	movlb	0	; () banked
 38519  00A342  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 38520  00A344  0100               	movlb	0	; () banked
 38521  00A346  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 38522  00A348  A4D8               	btfss	status,2,c
 38523  00A34A  D7D9               	goto	l9862
 38524                           
 38525                           ; BSR set to: 0
 38526                           
 38527                           ; BSR set to: 0
 38528  00A34C  C068  F060         	movff	___lltoft@c,___ftpack@arg
 38529  00A350  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 38530  00A354  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 38531  00A358  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 38532  00A35C  0E00               	movlw	0
 38533  00A35E  0100               	movlb	0	; () banked
 38534  00A360  6F64               	movwf	___ftpack@sign& (0+255),b
 38535  00A362  ECEA  F045         	call	___ftpack	;wreg free
 38536  00A366  C060  F068         	movff	?___ftpack,?___lltoft
 38537  00A36A  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 38538  00A36E  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 38539  00A372  0012               	return	
 38540  00A374  0012               	return		;funcret
 38541  00A376                     __end_of___lltoft:
 38542                           	opt stack 0
 38543                           tblptru	equ	0xFF8
 38544                           tblptrh	equ	0xFF7
 38545                           tblptrl	equ	0xFF6
 38546                           tablat	equ	0xFF5
 38547                           prodh	equ	0xFF4
 38548                           prodl	equ	0xFF3
 38549                           intcon	equ	0xFF2
 38550                           intcon2	equ	0xFF1
 38551                           indf0	equ	0xFEF
 38552                           postinc0	equ	0xFEE
 38553                           plusw0	equ	0xFEB
 38554                           fsr0h	equ	0xFEA
 38555                           fsr0l	equ	0xFE9
 38556                           wreg	equ	0xFE8
 38557                           indf1	equ	0xFE7
 38558                           postdec1	equ	0xFE5
 38559                           fsr1h	equ	0xFE2
 38560                           fsr1l	equ	0xFE1
 38561                           indf2	equ	0xFDF
 38562                           postinc2	equ	0xFDE
 38563                           postdec2	equ	0xFDD
 38564                           plusw2	equ	0xFDB
 38565                           fsr2h	equ	0xFDA
 38566                           fsr2l	equ	0xFD9
 38567                           status	equ	0xFD8
 38568                           
 38569 ;; *************** function ___llmod *****************
 38570 ;; Defined at:
 38571 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 38572 ;; Parameters:    Size  Location     Type
 38573 ;;  dividend        4   13[BANK0 ] unsigned long 
 38574 ;;  divisor         4   17[BANK0 ] unsigned long 
 38575 ;; Auto vars:     Size  Location     Type
 38576 ;;  counter         1   21[BANK0 ] unsigned char 
 38577 ;; Return value:  Size  Location     Type
 38578 ;;                  4   13[BANK0 ] unsigned long 
 38579 ;; Registers used:
 38580 ;;		wreg, status,2, status,0
 38581 ;; Tracked objects:
 38582 ;;		On entry : 0/0
 38583 ;;		On exit  : 0/0
 38584 ;;		Unchanged: 0/0
 38585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38586 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38589 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38590 ;;Total ram usage:        9 bytes
 38591 ;; Hardware stack levels used:    1
 38592 ;; Hardware stack levels required when called:    5
 38593 ;; This function calls:
 38594 ;;		Nothing
 38595 ;; This function is called by:
 38596 ;;		_sprintf
 38597 ;; This function uses a non-reentrant model
 38598 ;;
 38599                           
 38600                           	psect	text86
 38601  009CFA                     __ptext86:
 38602                           	opt stack 0
 38603  009CFA                     ___llmod:
 38604                           	opt stack 24
 38605                           
 38606                           ;incstack = 0
 38607  009CFA  0100               	movlb	0	; () banked
 38608  009CFC  5171               	movf	___llmod@divisor& (0+255),w,b
 38609  009CFE  0100               	movlb	0	; () banked
 38610  009D00  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 38611  009D02  0100               	movlb	0	; () banked
 38612  009D04  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 38613  009D06  0100               	movlb	0	; () banked
 38614  009D08  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 38615  009D0A  B4D8               	btfsc	status,2,c
 38616  009D0C  D03F               	goto	l3246
 38617                           
 38618                           ; BSR set to: 0
 38619  009D0E  0E01               	movlw	1
 38620  009D10  0100               	movlb	0	; () banked
 38621  009D12  6F75               	movwf	___llmod@counter& (0+255),b
 38622  009D14  D009               	goto	l9850
 38623  009D16                     l9848:
 38624                           
 38625                           ; BSR set to: 0
 38626  009D16  0100               	movlb	0	; () banked
 38627  009D18  90D8               	bcf	status,0,c
 38628  009D1A  3771               	rlcf	___llmod@divisor& (0+255),f,b
 38629  009D1C  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 38630  009D1E  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 38631  009D20  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 38632  009D22  0100               	movlb	0	; () banked
 38633  009D24  2B75               	incf	___llmod@counter& (0+255),f,b
 38634  009D26  D000               	goto	l9850
 38635  009D28                     l9850:
 38636                           
 38637                           ; BSR set to: 0
 38638  009D28  0100               	movlb	0	; () banked
 38639  009D2A  BF74               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 38640  009D2C  D002               	goto	l9852
 38641  009D2E  D7F3               	goto	l9848
 38642                           
 38643                           ; BSR set to: 0
 38644  009D30  D000               	goto	l9852
 38645  009D32                     l9852:
 38646                           
 38647                           ; BSR set to: 0
 38648  009D32  0100               	movlb	0	; () banked
 38649  009D34  5171               	movf	___llmod@divisor& (0+255),w,b
 38650  009D36  0100               	movlb	0	; () banked
 38651  009D38  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 38652  009D3A  0100               	movlb	0	; () banked
 38653  009D3C  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 38654  009D3E  0100               	movlb	0	; () banked
 38655  009D40  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 38656  009D42  0100               	movlb	0	; () banked
 38657  009D44  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 38658  009D46  0100               	movlb	0	; () banked
 38659  009D48  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 38660  009D4A  0100               	movlb	0	; () banked
 38661  009D4C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 38662  009D4E  0100               	movlb	0	; () banked
 38663  009D50  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 38664  009D52  A0D8               	btfss	status,0,c
 38665  009D54  D011               	goto	l9856
 38666                           
 38667                           ; BSR set to: 0
 38668  009D56  0100               	movlb	0	; () banked
 38669  009D58  5171               	movf	___llmod@divisor& (0+255),w,b
 38670  009D5A  0100               	movlb	0	; () banked
 38671  009D5C  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 38672  009D5E  0100               	movlb	0	; () banked
 38673  009D60  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 38674  009D62  0100               	movlb	0	; () banked
 38675  009D64  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 38676  009D66  0100               	movlb	0	; () banked
 38677  009D68  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 38678  009D6A  0100               	movlb	0	; () banked
 38679  009D6C  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 38680  009D6E  0100               	movlb	0	; () banked
 38681  009D70  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 38682  009D72  0100               	movlb	0	; () banked
 38683  009D74  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 38684  009D76  D000               	goto	l9856
 38685  009D78                     l9856:
 38686                           
 38687                           ; BSR set to: 0
 38688  009D78  0100               	movlb	0	; () banked
 38689  009D7A  90D8               	bcf	status,0,c
 38690  009D7C  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 38691  009D7E  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 38692  009D80  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 38693  009D82  3371               	rrcf	___llmod@divisor& (0+255),f,b
 38694                           
 38695                           ; BSR set to: 0
 38696  009D84  0100               	movlb	0	; () banked
 38697  009D86  2F75               	decfsz	___llmod@counter& (0+255),f,b
 38698  009D88  D7D4               	goto	l9852
 38699  009D8A  D000               	goto	l3246
 38700  009D8C                     l3246:
 38701                           
 38702                           ; BSR set to: 0
 38703  009D8C  C06D  F06D         	movff	___llmod@dividend,?___llmod
 38704  009D90  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 38705  009D94  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 38706  009D98  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 38707                           
 38708                           ; BSR set to: 0
 38709  009D9C  0012               	return		;funcret
 38710  009D9E                     __end_of___llmod:
 38711                           	opt stack 0
 38712                           tblptru	equ	0xFF8
 38713                           tblptrh	equ	0xFF7
 38714                           tblptrl	equ	0xFF6
 38715                           tablat	equ	0xFF5
 38716                           prodh	equ	0xFF4
 38717                           prodl	equ	0xFF3
 38718                           intcon	equ	0xFF2
 38719                           intcon2	equ	0xFF1
 38720                           indf0	equ	0xFEF
 38721                           postinc0	equ	0xFEE
 38722                           plusw0	equ	0xFEB
 38723                           fsr0h	equ	0xFEA
 38724                           fsr0l	equ	0xFE9
 38725                           wreg	equ	0xFE8
 38726                           indf1	equ	0xFE7
 38727                           postdec1	equ	0xFE5
 38728                           fsr1h	equ	0xFE2
 38729                           fsr1l	equ	0xFE1
 38730                           indf2	equ	0xFDF
 38731                           postinc2	equ	0xFDE
 38732                           postdec2	equ	0xFDD
 38733                           plusw2	equ	0xFDB
 38734                           fsr2h	equ	0xFDA
 38735                           fsr2l	equ	0xFD9
 38736                           status	equ	0xFD8
 38737                           
 38738 ;; *************** function ___lldiv *****************
 38739 ;; Defined at:
 38740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 38741 ;; Parameters:    Size  Location     Type
 38742 ;;  dividend        4    0[BANK0 ] unsigned long 
 38743 ;;  divisor         4    4[BANK0 ] unsigned long 
 38744 ;; Auto vars:     Size  Location     Type
 38745 ;;  quotient        4    8[BANK0 ] unsigned long 
 38746 ;;  counter         1   12[BANK0 ] unsigned char 
 38747 ;; Return value:  Size  Location     Type
 38748 ;;                  4    0[BANK0 ] unsigned long 
 38749 ;; Registers used:
 38750 ;;		wreg, status,2, status,0
 38751 ;; Tracked objects:
 38752 ;;		On entry : 0/0
 38753 ;;		On exit  : 0/0
 38754 ;;		Unchanged: 0/0
 38755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38756 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38757 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38759 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38760 ;;Total ram usage:       13 bytes
 38761 ;; Hardware stack levels used:    1
 38762 ;; Hardware stack levels required when called:    5
 38763 ;; This function calls:
 38764 ;;		Nothing
 38765 ;; This function is called by:
 38766 ;;		_InitUART
 38767 ;;		_sprintf
 38768 ;; This function uses a non-reentrant model
 38769 ;;
 38770                           
 38771                           	psect	text87
 38772  009A1C                     __ptext87:
 38773                           	opt stack 0
 38774  009A1C                     ___lldiv:
 38775                           	opt stack 24
 38776                           
 38777                           ; BSR set to: 0
 38778                           ;incstack = 0
 38779  009A1C  0E00               	movlw	0
 38780  009A1E  0100               	movlb	0	; () banked
 38781  009A20  6F68               	movwf	___lldiv@quotient& (0+255),b
 38782  009A22  0E00               	movlw	0
 38783  009A24  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 38784  009A26  0E00               	movlw	0
 38785  009A28  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 38786  009A2A  0E00               	movlw	0
 38787  009A2C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 38788                           
 38789                           ; BSR set to: 0
 38790  009A2E  0100               	movlb	0	; () banked
 38791  009A30  5164               	movf	___lldiv@divisor& (0+255),w,b
 38792  009A32  0100               	movlb	0	; () banked
 38793  009A34  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 38794  009A36  0100               	movlb	0	; () banked
 38795  009A38  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 38796  009A3A  0100               	movlb	0	; () banked
 38797  009A3C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 38798  009A3E  B4D8               	btfsc	status,2,c
 38799  009A40  D047               	goto	l3236
 38800                           
 38801                           ; BSR set to: 0
 38802  009A42  0E01               	movlw	1
 38803  009A44  0100               	movlb	0	; () banked
 38804  009A46  6F6C               	movwf	___lldiv@counter& (0+255),b
 38805  009A48  D009               	goto	l9830
 38806  009A4A                     l9828:
 38807                           
 38808                           ; BSR set to: 0
 38809  009A4A  0100               	movlb	0	; () banked
 38810  009A4C  90D8               	bcf	status,0,c
 38811  009A4E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 38812  009A50  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 38813  009A52  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 38814  009A54  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 38815  009A56  0100               	movlb	0	; () banked
 38816  009A58  2B6C               	incf	___lldiv@counter& (0+255),f,b
 38817  009A5A  D000               	goto	l9830
 38818  009A5C                     l9830:
 38819                           
 38820                           ; BSR set to: 0
 38821  009A5C  0100               	movlb	0	; () banked
 38822  009A5E  BF67               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 38823  009A60  D002               	goto	l9832
 38824  009A62  D7F3               	goto	l9828
 38825                           
 38826                           ; BSR set to: 0
 38827  009A64  D000               	goto	l9832
 38828  009A66                     l9832:
 38829                           
 38830                           ; BSR set to: 0
 38831  009A66  0100               	movlb	0	; () banked
 38832  009A68  90D8               	bcf	status,0,c
 38833  009A6A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 38834  009A6C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 38835  009A6E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 38836  009A70  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 38837                           
 38838                           ; BSR set to: 0
 38839  009A72  0100               	movlb	0	; () banked
 38840  009A74  5164               	movf	___lldiv@divisor& (0+255),w,b
 38841  009A76  0100               	movlb	0	; () banked
 38842  009A78  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 38843  009A7A  0100               	movlb	0	; () banked
 38844  009A7C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 38845  009A7E  0100               	movlb	0	; () banked
 38846  009A80  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 38847  009A82  0100               	movlb	0	; () banked
 38848  009A84  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 38849  009A86  0100               	movlb	0	; () banked
 38850  009A88  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 38851  009A8A  0100               	movlb	0	; () banked
 38852  009A8C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 38853  009A8E  0100               	movlb	0	; () banked
 38854  009A90  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 38855  009A92  A0D8               	btfss	status,0,c
 38856  009A94  D013               	goto	l9840
 38857                           
 38858                           ; BSR set to: 0
 38859  009A96  0100               	movlb	0	; () banked
 38860  009A98  5164               	movf	___lldiv@divisor& (0+255),w,b
 38861  009A9A  0100               	movlb	0	; () banked
 38862  009A9C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 38863  009A9E  0100               	movlb	0	; () banked
 38864  009AA0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 38865  009AA2  0100               	movlb	0	; () banked
 38866  009AA4  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 38867  009AA6  0100               	movlb	0	; () banked
 38868  009AA8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 38869  009AAA  0100               	movlb	0	; () banked
 38870  009AAC  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 38871  009AAE  0100               	movlb	0	; () banked
 38872  009AB0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 38873  009AB2  0100               	movlb	0	; () banked
 38874  009AB4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 38875                           
 38876                           ; BSR set to: 0
 38877  009AB6  0100               	movlb	0	; () banked
 38878  009AB8  8168               	bsf	___lldiv@quotient& (0+255),0,b
 38879  009ABA  D000               	goto	l9840
 38880  009ABC                     l9840:
 38881                           
 38882                           ; BSR set to: 0
 38883  009ABC  0100               	movlb	0	; () banked
 38884  009ABE  90D8               	bcf	status,0,c
 38885  009AC0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 38886  009AC2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 38887  009AC4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 38888  009AC6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 38889                           
 38890                           ; BSR set to: 0
 38891  009AC8  0100               	movlb	0	; () banked
 38892  009ACA  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 38893  009ACC  D7CC               	goto	l9832
 38894  009ACE  D000               	goto	l3236
 38895  009AD0                     l3236:
 38896                           
 38897                           ; BSR set to: 0
 38898  009AD0  C068  F060         	movff	___lldiv@quotient,?___lldiv
 38899  009AD4  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 38900  009AD8  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 38901  009ADC  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 38902                           
 38903                           ; BSR set to: 0
 38904  009AE0  0012               	return		;funcret
 38905  009AE2                     __end_of___lldiv:
 38906                           	opt stack 0
 38907                           tblptru	equ	0xFF8
 38908                           tblptrh	equ	0xFF7
 38909                           tblptrl	equ	0xFF6
 38910                           tablat	equ	0xFF5
 38911                           prodh	equ	0xFF4
 38912                           prodl	equ	0xFF3
 38913                           intcon	equ	0xFF2
 38914                           intcon2	equ	0xFF1
 38915                           indf0	equ	0xFEF
 38916                           postinc0	equ	0xFEE
 38917                           plusw0	equ	0xFEB
 38918                           fsr0h	equ	0xFEA
 38919                           fsr0l	equ	0xFE9
 38920                           wreg	equ	0xFE8
 38921                           indf1	equ	0xFE7
 38922                           postdec1	equ	0xFE5
 38923                           fsr1h	equ	0xFE2
 38924                           fsr1l	equ	0xFE1
 38925                           indf2	equ	0xFDF
 38926                           postinc2	equ	0xFDE
 38927                           postdec2	equ	0xFDD
 38928                           plusw2	equ	0xFDB
 38929                           fsr2h	equ	0xFDA
 38930                           fsr2l	equ	0xFD9
 38931                           status	equ	0xFD8
 38932                           
 38933 ;; *************** function ___fttol *****************
 38934 ;; Defined at:
 38935 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 38936 ;; Parameters:    Size  Location     Type
 38937 ;;  f1              3   63[BANK0 ] float 
 38938 ;; Auto vars:     Size  Location     Type
 38939 ;;  lval            4   73[BANK0 ] unsigned long 
 38940 ;;  exp1            1   77[BANK0 ] unsigned char 
 38941 ;;  sign1           1   72[BANK0 ] unsigned char 
 38942 ;; Return value:  Size  Location     Type
 38943 ;;                  4   63[BANK0 ] long 
 38944 ;; Registers used:
 38945 ;;		wreg, status,2, status,0
 38946 ;; Tracked objects:
 38947 ;;		On entry : 0/0
 38948 ;;		On exit  : 0/0
 38949 ;;		Unchanged: 0/0
 38950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38952 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38953 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38954 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38955 ;;Total ram usage:       15 bytes
 38956 ;; Hardware stack levels used:    1
 38957 ;; Hardware stack levels required when called:    5
 38958 ;; This function calls:
 38959 ;;		Nothing
 38960 ;; This function is called by:
 38961 ;;		_Round
 38962 ;;		_InitUART
 38963 ;;		_sprintf
 38964 ;; This function uses a non-reentrant model
 38965 ;;
 38966                           
 38967                           	psect	text88
 38968  0086CE                     __ptext88:
 38969                           	opt stack 0
 38970  0086CE                     ___fttol:
 38971                           	opt stack 24
 38972                           
 38973                           ; BSR set to: 0
 38974                           ;incstack = 0
 38975  0086CE  C0A1  F0A3         	movff	___fttol@f1+2,??___fttol
 38976  0086D2  0100               	movlb	0	; () banked
 38977  0086D4  6BA4               	clrf	(??___fttol+1)& (0+255),b
 38978  0086D6  6BA5               	clrf	(??___fttol+2)& (0+255),b
 38979  0086D8  0100               	movlb	0	; () banked
 38980  0086DA  35A0               	rlcf	(___fttol@f1+1)& (0+255),w,b
 38981  0086DC  0100               	movlb	0	; () banked
 38982  0086DE  37A3               	rlcf	??___fttol& (0+255),f,b
 38983  0086E0  E301               	bnc	u9611
 38984  0086E2  81A4               	bsf	(??___fttol+1)& (0+255),0,b
 38985  0086E4                     u9611:
 38986  0086E4  0100               	movlb	0	; () banked
 38987  0086E6  51A3               	movf	??___fttol& (0+255),w,b
 38988  0086E8  0100               	movlb	0	; () banked
 38989  0086EA  6FAD               	movwf	___fttol@exp1& (0+255),b
 38990  0086EC  0100               	movlb	0	; () banked
 38991  0086EE  51AD               	movf	___fttol@exp1& (0+255),w,b
 38992  0086F0  A4D8               	btfss	status,2,c
 38993  0086F2  D00A               	goto	l9782
 38994                           
 38995                           ; BSR set to: 0
 38996  0086F4  0E00               	movlw	0
 38997  0086F6  0100               	movlb	0	; () banked
 38998  0086F8  6F9F               	movwf	?___fttol& (0+255),b
 38999  0086FA  0E00               	movlw	0
 39000  0086FC  6FA0               	movwf	(?___fttol+1)& (0+255),b
 39001  0086FE  0E00               	movlw	0
 39002  008700  6FA1               	movwf	(?___fttol+2)& (0+255),b
 39003  008702  0E00               	movlw	0
 39004  008704  6FA2               	movwf	(?___fttol+3)& (0+255),b
 39005                           
 39006                           ; BSR set to: 0
 39007  008706  0012               	return	
 39008  008708                     l9782:
 39009                           
 39010                           ; BSR set to: 0
 39011  008708  0E17               	movlw	23
 39012  00870A  0100               	movlb	0	; () banked
 39013  00870C  6FA3               	movwf	??___fttol& (0+255),b
 39014  00870E  C09F  F0A4         	movff	___fttol@f1,??___fttol+1
 39015  008712  C0A0  F0A5         	movff	___fttol@f1+1,??___fttol+2
 39016  008716  C0A1  F0A6         	movff	___fttol@f1+2,??___fttol+3
 39017  00871A  0100               	movlb	0	; () banked
 39018  00871C  29A3               	incf	??___fttol& (0+255),w,b
 39019  00871E  0100               	movlb	0	; () banked
 39020  008720  6FA7               	movwf	(??___fttol+4)& (0+255),b
 39021  008722  D005               	goto	u9630
 39022  008724                     u9635:
 39023  008724  0100               	movlb	0	; () banked
 39024  008726  90D8               	bcf	status,0,c
 39025  008728  33A6               	rrcf	(??___fttol+3)& (0+255),f,b
 39026  00872A  33A5               	rrcf	(??___fttol+2)& (0+255),f,b
 39027  00872C  33A4               	rrcf	(??___fttol+1)& (0+255),f,b
 39028  00872E                     u9630:
 39029  00872E  0100               	movlb	0	; () banked
 39030  008730  2FA7               	decfsz	(??___fttol+4)& (0+255),f,b
 39031  008732  D7F8               	goto	u9635
 39032  008734  0100               	movlb	0	; () banked
 39033  008736  51A4               	movf	(??___fttol+1)& (0+255),w,b
 39034  008738  0100               	movlb	0	; () banked
 39035  00873A  6FA8               	movwf	___fttol@sign1& (0+255),b
 39036                           
 39037                           ; BSR set to: 0
 39038  00873C  0100               	movlb	0	; () banked
 39039  00873E  8FA0               	bsf	(___fttol@f1+1)& (0+255),7,b
 39040                           
 39041                           ; BSR set to: 0
 39042  008740  0EFF               	movlw	255
 39043  008742  0100               	movlb	0	; () banked
 39044  008744  179F               	andwf	___fttol@f1& (0+255),f,b
 39045  008746  0EFF               	movlw	255
 39046  008748  0100               	movlb	0	; () banked
 39047  00874A  17A0               	andwf	(___fttol@f1+1)& (0+255),f,b
 39048  00874C  0E00               	movlw	0
 39049  00874E  0100               	movlb	0	; () banked
 39050  008750  17A1               	andwf	(___fttol@f1+2)& (0+255),f,b
 39051                           
 39052                           ; BSR set to: 0
 39053  008752  0100               	movlb	0	; () banked
 39054  008754  519F               	movf	___fttol@f1& (0+255),w,b
 39055  008756  0100               	movlb	0	; () banked
 39056  008758  6FA9               	movwf	___fttol@lval& (0+255),b
 39057  00875A  0100               	movlb	0	; () banked
 39058  00875C  51A0               	movf	(___fttol@f1+1)& (0+255),w,b
 39059  00875E  0100               	movlb	0	; () banked
 39060  008760  6FAA               	movwf	(___fttol@lval+1)& (0+255),b
 39061  008762  0100               	movlb	0	; () banked
 39062  008764  51A1               	movf	(___fttol@f1+2)& (0+255),w,b
 39063  008766  0100               	movlb	0	; () banked
 39064  008768  6FAB               	movwf	(___fttol@lval+2)& (0+255),b
 39065  00876A  0100               	movlb	0	; () banked
 39066  00876C  6BAC               	clrf	(___fttol@lval+3)& (0+255),b
 39067                           
 39068                           ; BSR set to: 0
 39069  00876E  0E8E               	movlw	142
 39070  008770  0100               	movlb	0	; () banked
 39071  008772  5FAD               	subwf	___fttol@exp1& (0+255),f,b
 39072                           
 39073                           ; BSR set to: 0
 39074  008774  0100               	movlb	0	; () banked
 39075  008776  AFAD               	btfss	___fttol@exp1& (0+255),7,b
 39076  008778  D01B               	goto	l9804
 39077                           
 39078                           ; BSR set to: 0
 39079  00877A  0100               	movlb	0	; () banked
 39080  00877C  51AD               	movf	___fttol@exp1& (0+255),w,b
 39081  00877E  0A80               	xorlw	128
 39082  008780  0F8F               	addlw	143
 39083  008782  B0D8               	btfsc	status,0,c
 39084  008784  D00B               	goto	l9800
 39085                           
 39086                           ; BSR set to: 0
 39087  008786  0E00               	movlw	0
 39088  008788  0100               	movlb	0	; () banked
 39089  00878A  6F9F               	movwf	?___fttol& (0+255),b
 39090  00878C  0E00               	movlw	0
 39091  00878E  6FA0               	movwf	(?___fttol+1)& (0+255),b
 39092  008790  0E00               	movlw	0
 39093  008792  6FA1               	movwf	(?___fttol+2)& (0+255),b
 39094  008794  0E00               	movlw	0
 39095  008796  6FA2               	movwf	(?___fttol+3)& (0+255),b
 39096                           
 39097                           ; BSR set to: 0
 39098  008798  0012               	return	
 39099                           
 39100                           ; BSR set to: 0
 39101  00879A  D000               	goto	l9800
 39102  00879C                     l9800:
 39103                           
 39104                           ; BSR set to: 0
 39105  00879C  0100               	movlb	0	; () banked
 39106  00879E  90D8               	bcf	status,0,c
 39107  0087A0  33AC               	rrcf	(___fttol@lval+3)& (0+255),f,b
 39108  0087A2  33AB               	rrcf	(___fttol@lval+2)& (0+255),f,b
 39109  0087A4  33AA               	rrcf	(___fttol@lval+1)& (0+255),f,b
 39110  0087A6  33A9               	rrcf	___fttol@lval& (0+255),f,b
 39111                           
 39112                           ; BSR set to: 0
 39113  0087A8  0100               	movlb	0	; () banked
 39114  0087AA  3FAD               	incfsz	___fttol@exp1& (0+255),f,b
 39115  0087AC  D7F7               	goto	l9800
 39116                           
 39117                           ; BSR set to: 0
 39118  0087AE  D01F               	goto	l9814
 39119  0087B0                     l9804:
 39120                           
 39121                           ; BSR set to: 0
 39122  0087B0  0E17               	movlw	23
 39123  0087B2  0100               	movlb	0	; () banked
 39124  0087B4  65AD               	cpfsgt	___fttol@exp1& (0+255),b
 39125  0087B6  D014               	goto	l9812
 39126                           
 39127                           ; BSR set to: 0
 39128  0087B8  0E00               	movlw	0
 39129  0087BA  0100               	movlb	0	; () banked
 39130  0087BC  6F9F               	movwf	?___fttol& (0+255),b
 39131  0087BE  0E00               	movlw	0
 39132  0087C0  6FA0               	movwf	(?___fttol+1)& (0+255),b
 39133  0087C2  0E00               	movlw	0
 39134  0087C4  6FA1               	movwf	(?___fttol+2)& (0+255),b
 39135  0087C6  0E00               	movlw	0
 39136  0087C8  6FA2               	movwf	(?___fttol+3)& (0+255),b
 39137                           
 39138                           ; BSR set to: 0
 39139  0087CA  0012               	return	
 39140                           
 39141                           ; BSR set to: 0
 39142  0087CC  D009               	goto	l9812
 39143  0087CE                     l9810:
 39144                           
 39145                           ; BSR set to: 0
 39146  0087CE  0100               	movlb	0	; () banked
 39147  0087D0  90D8               	bcf	status,0,c
 39148  0087D2  37A9               	rlcf	___fttol@lval& (0+255),f,b
 39149  0087D4  37AA               	rlcf	(___fttol@lval+1)& (0+255),f,b
 39150  0087D6  37AB               	rlcf	(___fttol@lval+2)& (0+255),f,b
 39151  0087D8  37AC               	rlcf	(___fttol@lval+3)& (0+255),f,b
 39152  0087DA  0100               	movlb	0	; () banked
 39153  0087DC  07AD               	decf	___fttol@exp1& (0+255),f,b
 39154  0087DE  D000               	goto	l9812
 39155  0087E0                     l9812:
 39156                           
 39157                           ; BSR set to: 0
 39158  0087E0  0100               	movlb	0	; () banked
 39159  0087E2  51AD               	movf	___fttol@exp1& (0+255),w,b
 39160  0087E4  0100               	movlb	0	; () banked
 39161  0087E6  B4D8               	btfsc	status,2,c
 39162  0087E8  D002               	goto	l9814
 39163  0087EA  D7F1               	goto	l9810
 39164                           
 39165                           ; BSR set to: 0
 39166  0087EC  D000               	goto	l9814
 39167  0087EE                     l9814:
 39168                           
 39169                           ; BSR set to: 0
 39170  0087EE  0100               	movlb	0	; () banked
 39171  0087F0  51A8               	movf	___fttol@sign1& (0+255),w,b
 39172  0087F2  0100               	movlb	0	; () banked
 39173  0087F4  B4D8               	btfsc	status,2,c
 39174  0087F6  D00A               	goto	l9818
 39175                           
 39176                           ; BSR set to: 0
 39177  0087F8  0100               	movlb	0	; () banked
 39178  0087FA  1FAC               	comf	(___fttol@lval+3)& (0+255),f,b
 39179  0087FC  1FAB               	comf	(___fttol@lval+2)& (0+255),f,b
 39180  0087FE  1FAA               	comf	(___fttol@lval+1)& (0+255),f,b
 39181  008800  6DA9               	negf	___fttol@lval& (0+255),b
 39182  008802  0E00               	movlw	0
 39183  008804  23AA               	addwfc	(___fttol@lval+1)& (0+255),f,b
 39184  008806  23AB               	addwfc	(___fttol@lval+2)& (0+255),f,b
 39185  008808  23AC               	addwfc	(___fttol@lval+3)& (0+255),f,b
 39186  00880A  D000               	goto	l9818
 39187  00880C                     l9818:
 39188                           
 39189                           ; BSR set to: 0
 39190  00880C  C0A9  F09F         	movff	___fttol@lval,?___fttol
 39191  008810  C0AA  F0A0         	movff	___fttol@lval+1,?___fttol+1
 39192  008814  C0AB  F0A1         	movff	___fttol@lval+2,?___fttol+2
 39193  008818  C0AC  F0A2         	movff	___fttol@lval+3,?___fttol+3
 39194  00881C  0012               	return	
 39195                           
 39196                           ; BSR set to: 0
 39197                           
 39198                           ; BSR set to: 0
 39199  00881E  0012               	return		;funcret
 39200  008820                     __end_of___fttol:
 39201                           	opt stack 0
 39202                           tblptru	equ	0xFF8
 39203                           tblptrh	equ	0xFF7
 39204                           tblptrl	equ	0xFF6
 39205                           tablat	equ	0xFF5
 39206                           prodh	equ	0xFF4
 39207                           prodl	equ	0xFF3
 39208                           intcon	equ	0xFF2
 39209                           intcon2	equ	0xFF1
 39210                           indf0	equ	0xFEF
 39211                           postinc0	equ	0xFEE
 39212                           plusw0	equ	0xFEB
 39213                           fsr0h	equ	0xFEA
 39214                           fsr0l	equ	0xFE9
 39215                           wreg	equ	0xFE8
 39216                           indf1	equ	0xFE7
 39217                           postdec1	equ	0xFE5
 39218                           fsr1h	equ	0xFE2
 39219                           fsr1l	equ	0xFE1
 39220                           indf2	equ	0xFDF
 39221                           postinc2	equ	0xFDE
 39222                           postdec2	equ	0xFDD
 39223                           plusw2	equ	0xFDB
 39224                           fsr2h	equ	0xFDA
 39225                           fsr2l	equ	0xFD9
 39226                           status	equ	0xFD8
 39227                           
 39228 ;; *************** function ___ftsub *****************
 39229 ;; Defined at:
 39230 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 39231 ;; Parameters:    Size  Location     Type
 39232 ;;  f1              3   63[BANK0 ] float 
 39233 ;;  f2              3   66[BANK0 ] float 
 39234 ;; Auto vars:     Size  Location     Type
 39235 ;;		None
 39236 ;; Return value:  Size  Location     Type
 39237 ;;                  3   63[BANK0 ] float 
 39238 ;; Registers used:
 39239 ;;		wreg, status,2, status,0, cstack
 39240 ;; Tracked objects:
 39241 ;;		On entry : 0/0
 39242 ;;		On exit  : 0/0
 39243 ;;		Unchanged: 0/0
 39244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39245 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39248 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39249 ;;Total ram usage:        6 bytes
 39250 ;; Hardware stack levels used:    1
 39251 ;; Hardware stack levels required when called:    7
 39252 ;; This function calls:
 39253 ;;		___ftadd
 39254 ;; This function is called by:
 39255 ;;		_main
 39256 ;;		_sprintf
 39257 ;; This function uses a non-reentrant model
 39258 ;;
 39259                           
 39260                           	psect	text89
 39261  00A7D6                     __ptext89:
 39262                           	opt stack 0
 39263  00A7D6                     ___ftsub:
 39264                           	opt stack 22
 39265                           
 39266                           ; BSR set to: 0
 39267                           ;incstack = 0
 39268  00A7D6  0100               	movlb	0	; () banked
 39269  00A7D8  51A2               	movf	___ftsub@f2& (0+255),w,b
 39270  00A7DA  0100               	movlb	0	; () banked
 39271  00A7DC  11A3               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 39272  00A7DE  0100               	movlb	0	; () banked
 39273  00A7E0  11A4               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 39274  00A7E2  B4D8               	btfsc	status,2,c
 39275  00A7E4  D00A               	goto	l9750
 39276                           
 39277                           ; BSR set to: 0
 39278  00A7E6  0E00               	movlw	0
 39279  00A7E8  0100               	movlb	0	; () banked
 39280  00A7EA  1BA2               	xorwf	___ftsub@f2& (0+255),f,b
 39281  00A7EC  0E00               	movlw	0
 39282  00A7EE  0100               	movlb	0	; () banked
 39283  00A7F0  1BA3               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 39284  00A7F2  0E80               	movlw	128
 39285  00A7F4  0100               	movlb	0	; () banked
 39286  00A7F6  1BA4               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 39287  00A7F8  D000               	goto	l9750
 39288  00A7FA                     l9750:
 39289                           
 39290                           ; BSR set to: 0
 39291  00A7FA  C09F  F093         	movff	___ftsub@f1,___ftadd@f1
 39292  00A7FE  C0A0  F094         	movff	___ftsub@f1+1,___ftadd@f1+1
 39293  00A802  C0A1  F095         	movff	___ftsub@f1+2,___ftadd@f1+2
 39294  00A806  C0A2  F096         	movff	___ftsub@f2,___ftadd@f2
 39295  00A80A  C0A3  F097         	movff	___ftsub@f2+1,___ftadd@f2+1
 39296  00A80E  C0A4  F098         	movff	___ftsub@f2+2,___ftadd@f2+2
 39297  00A812  EC18  F039         	call	___ftadd	;wreg free
 39298  00A816  C093  F09F         	movff	?___ftadd,?___ftsub
 39299  00A81A  C094  F0A0         	movff	?___ftadd+1,?___ftsub+1
 39300  00A81E  C095  F0A1         	movff	?___ftadd+2,?___ftsub+2
 39301  00A822  0012               	return	
 39302  00A824  0012               	return		;funcret
 39303  00A826                     __end_of___ftsub:
 39304                           	opt stack 0
 39305                           tblptru	equ	0xFF8
 39306                           tblptrh	equ	0xFF7
 39307                           tblptrl	equ	0xFF6
 39308                           tablat	equ	0xFF5
 39309                           prodh	equ	0xFF4
 39310                           prodl	equ	0xFF3
 39311                           intcon	equ	0xFF2
 39312                           intcon2	equ	0xFF1
 39313                           indf0	equ	0xFEF
 39314                           postinc0	equ	0xFEE
 39315                           plusw0	equ	0xFEB
 39316                           fsr0h	equ	0xFEA
 39317                           fsr0l	equ	0xFE9
 39318                           wreg	equ	0xFE8
 39319                           indf1	equ	0xFE7
 39320                           postdec1	equ	0xFE5
 39321                           fsr1h	equ	0xFE2
 39322                           fsr1l	equ	0xFE1
 39323                           indf2	equ	0xFDF
 39324                           postinc2	equ	0xFDE
 39325                           postdec2	equ	0xFDD
 39326                           plusw2	equ	0xFDB
 39327                           fsr2h	equ	0xFDA
 39328                           fsr2l	equ	0xFD9
 39329                           status	equ	0xFD8
 39330                           
 39331 ;; *************** function ___ftadd *****************
 39332 ;; Defined at:
 39333 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 39334 ;; Parameters:    Size  Location     Type
 39335 ;;  f1              3   51[BANK0 ] float 
 39336 ;;  f2              3   54[BANK0 ] float 
 39337 ;; Auto vars:     Size  Location     Type
 39338 ;;  exp1            1   62[BANK0 ] unsigned char 
 39339 ;;  exp2            1   61[BANK0 ] unsigned char 
 39340 ;;  sign            1   60[BANK0 ] unsigned char 
 39341 ;; Return value:  Size  Location     Type
 39342 ;;                  3   51[BANK0 ] float 
 39343 ;; Registers used:
 39344 ;;		wreg, status,2, status,0, cstack
 39345 ;; Tracked objects:
 39346 ;;		On entry : 0/0
 39347 ;;		On exit  : 0/0
 39348 ;;		Unchanged: 0/0
 39349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39350 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39351 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39352 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39353 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39354 ;;Total ram usage:       12 bytes
 39355 ;; Hardware stack levels used:    1
 39356 ;; Hardware stack levels required when called:    6
 39357 ;; This function calls:
 39358 ;;		___ftpack
 39359 ;; This function is called by:
 39360 ;;		_main
 39361 ;;		_Round
 39362 ;;		_sprintf
 39363 ;;		___ftsub
 39364 ;; This function uses a non-reentrant model
 39365 ;;
 39366                           
 39367                           	psect	text90
 39368  007230                     __ptext90:
 39369                           	opt stack 0
 39370  007230                     ___ftadd:
 39371                           	opt stack 22
 39372                           
 39373                           ;incstack = 0
 39374  007230  C095  F099         	movff	___ftadd@f1+2,??___ftadd
 39375  007234  0100               	movlb	0	; () banked
 39376  007236  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 39377  007238  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 39378  00723A  0100               	movlb	0	; () banked
 39379  00723C  3594               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 39380  00723E  0100               	movlb	0	; () banked
 39381  007240  3799               	rlcf	??___ftadd& (0+255),f,b
 39382  007242  E301               	bnc	u8851
 39383  007244  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 39384  007246                     u8851:
 39385  007246  0100               	movlb	0	; () banked
 39386  007248  5199               	movf	??___ftadd& (0+255),w,b
 39387  00724A  0100               	movlb	0	; () banked
 39388  00724C  6F9E               	movwf	___ftadd@exp1& (0+255),b
 39389  00724E  C098  F099         	movff	___ftadd@f2+2,??___ftadd
 39390  007252  0100               	movlb	0	; () banked
 39391  007254  6B9A               	clrf	(??___ftadd+1)& (0+255),b
 39392  007256  6B9B               	clrf	(??___ftadd+2)& (0+255),b
 39393  007258  0100               	movlb	0	; () banked
 39394  00725A  3597               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 39395  00725C  0100               	movlb	0	; () banked
 39396  00725E  3799               	rlcf	??___ftadd& (0+255),f,b
 39397  007260  E301               	bnc	u8861
 39398  007262  819A               	bsf	(??___ftadd+1)& (0+255),0,b
 39399  007264                     u8861:
 39400  007264  0100               	movlb	0	; () banked
 39401  007266  5199               	movf	??___ftadd& (0+255),w,b
 39402  007268  0100               	movlb	0	; () banked
 39403  00726A  6F9D               	movwf	___ftadd@exp2& (0+255),b
 39404                           
 39405                           ; BSR set to: 0
 39406  00726C  0100               	movlb	0	; () banked
 39407  00726E  519E               	movf	___ftadd@exp1& (0+255),w,b
 39408  007270  0100               	movlb	0	; () banked
 39409  007272  B4D8               	btfsc	status,2,c
 39410  007274  D011               	goto	l3107
 39411                           
 39412                           ; BSR set to: 0
 39413  007276  0100               	movlb	0	; () banked
 39414  007278  519D               	movf	___ftadd@exp2& (0+255),w,b
 39415  00727A  0100               	movlb	0	; () banked
 39416  00727C  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 39417  00727E  B0D8               	btfsc	status,0,c
 39418  007280  D012               	goto	l9292
 39419                           
 39420                           ; BSR set to: 0
 39421  007282  0100               	movlb	0	; () banked
 39422  007284  519E               	movf	___ftadd@exp1& (0+255),w,b
 39423  007286  0800               	sublw	0
 39424  007288  0100               	movlb	0	; () banked
 39425  00728A  259D               	addwf	___ftadd@exp2& (0+255),w,b
 39426  00728C  0100               	movlb	0	; () banked
 39427  00728E  6F99               	movwf	??___ftadd& (0+255),b
 39428  007290  0E18               	movlw	24
 39429  007292  0100               	movlb	0	; () banked
 39430  007294  6599               	cpfsgt	??___ftadd& (0+255),b
 39431  007296  D007               	goto	l9292
 39432  007298                     l3107:
 39433                           
 39434                           ; BSR set to: 0
 39435  007298  C096  F093         	movff	___ftadd@f2,?___ftadd
 39436  00729C  C097  F094         	movff	___ftadd@f2+1,?___ftadd+1
 39437  0072A0  C098  F095         	movff	___ftadd@f2+2,?___ftadd+2
 39438  0072A4  0012               	return	
 39439  0072A6                     l9292:
 39440                           
 39441                           ; BSR set to: 0
 39442  0072A6  0100               	movlb	0	; () banked
 39443  0072A8  519D               	movf	___ftadd@exp2& (0+255),w,b
 39444  0072AA  0100               	movlb	0	; () banked
 39445  0072AC  B4D8               	btfsc	status,2,c
 39446  0072AE  D011               	goto	l3111
 39447                           
 39448                           ; BSR set to: 0
 39449  0072B0  0100               	movlb	0	; () banked
 39450  0072B2  519E               	movf	___ftadd@exp1& (0+255),w,b
 39451  0072B4  0100               	movlb	0	; () banked
 39452  0072B6  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 39453  0072B8  B0D8               	btfsc	status,0,c
 39454  0072BA  D012               	goto	l9298
 39455                           
 39456                           ; BSR set to: 0
 39457  0072BC  0100               	movlb	0	; () banked
 39458  0072BE  519D               	movf	___ftadd@exp2& (0+255),w,b
 39459  0072C0  0800               	sublw	0
 39460  0072C2  0100               	movlb	0	; () banked
 39461  0072C4  259E               	addwf	___ftadd@exp1& (0+255),w,b
 39462  0072C6  0100               	movlb	0	; () banked
 39463  0072C8  6F99               	movwf	??___ftadd& (0+255),b
 39464  0072CA  0E18               	movlw	24
 39465  0072CC  0100               	movlb	0	; () banked
 39466  0072CE  6599               	cpfsgt	??___ftadd& (0+255),b
 39467  0072D0  D007               	goto	l9298
 39468  0072D2                     l3111:
 39469                           
 39470                           ; BSR set to: 0
 39471  0072D2  C093  F093         	movff	___ftadd@f1,?___ftadd
 39472  0072D6  C094  F094         	movff	___ftadd@f1+1,?___ftadd+1
 39473  0072DA  C095  F095         	movff	___ftadd@f1+2,?___ftadd+2
 39474  0072DE  0012               	return	
 39475  0072E0                     l9298:
 39476                           
 39477                           ; BSR set to: 0
 39478  0072E0  0E06               	movlw	6
 39479  0072E2  0100               	movlb	0	; () banked
 39480  0072E4  6F9C               	movwf	___ftadd@sign& (0+255),b
 39481                           
 39482                           ; BSR set to: 0
 39483  0072E6  0100               	movlb	0	; () banked
 39484  0072E8  AF95               	btfss	(___ftadd@f1+2)& (0+255),7,b
 39485  0072EA  D003               	goto	l9304
 39486                           
 39487                           ; BSR set to: 0
 39488  0072EC  0100               	movlb	0	; () banked
 39489  0072EE  8F9C               	bsf	___ftadd@sign& (0+255),7,b
 39490  0072F0  D000               	goto	l9304
 39491  0072F2                     l9304:
 39492                           
 39493                           ; BSR set to: 0
 39494  0072F2  0100               	movlb	0	; () banked
 39495  0072F4  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 39496  0072F6  D002               	goto	l3113
 39497                           
 39498                           ; BSR set to: 0
 39499  0072F8  0100               	movlb	0	; () banked
 39500  0072FA  8D9C               	bsf	___ftadd@sign& (0+255),6,b
 39501  0072FC                     l3113:
 39502                           
 39503                           ; BSR set to: 0
 39504  0072FC  0100               	movlb	0	; () banked
 39505  0072FE  8F94               	bsf	(___ftadd@f1+1)& (0+255),7,b
 39506                           
 39507                           ; BSR set to: 0
 39508  007300  0EFF               	movlw	255
 39509  007302  0100               	movlb	0	; () banked
 39510  007304  1793               	andwf	___ftadd@f1& (0+255),f,b
 39511  007306  0EFF               	movlw	255
 39512  007308  0100               	movlb	0	; () banked
 39513  00730A  1794               	andwf	(___ftadd@f1+1)& (0+255),f,b
 39514  00730C  0E00               	movlw	0
 39515  00730E  0100               	movlb	0	; () banked
 39516  007310  1795               	andwf	(___ftadd@f1+2)& (0+255),f,b
 39517  007312  0100               	movlb	0	; () banked
 39518  007314  8F97               	bsf	(___ftadd@f2+1)& (0+255),7,b
 39519                           
 39520                           ; BSR set to: 0
 39521  007316  0EFF               	movlw	255
 39522  007318  0100               	movlb	0	; () banked
 39523  00731A  1796               	andwf	___ftadd@f2& (0+255),f,b
 39524  00731C  0EFF               	movlw	255
 39525  00731E  0100               	movlb	0	; () banked
 39526  007320  1797               	andwf	(___ftadd@f2+1)& (0+255),f,b
 39527  007322  0E00               	movlw	0
 39528  007324  0100               	movlb	0	; () banked
 39529  007326  1798               	andwf	(___ftadd@f2+2)& (0+255),f,b
 39530                           
 39531                           ; BSR set to: 0
 39532  007328  0100               	movlb	0	; () banked
 39533  00732A  519D               	movf	___ftadd@exp2& (0+255),w,b
 39534  00732C  0100               	movlb	0	; () banked
 39535  00732E  5D9E               	subwf	___ftadd@exp1& (0+255),w,b
 39536  007330  B0D8               	btfsc	status,0,c
 39537  007332  D028               	goto	l9324
 39538  007334                     l9314:
 39539                           
 39540                           ; BSR set to: 0
 39541  007334  0100               	movlb	0	; () banked
 39542  007336  90D8               	bcf	status,0,c
 39543  007338  3796               	rlcf	___ftadd@f2& (0+255),f,b
 39544  00733A  3797               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 39545  00733C  3798               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 39546  00733E  0100               	movlb	0	; () banked
 39547  007340  079D               	decf	___ftadd@exp2& (0+255),f,b
 39548                           
 39549                           ; BSR set to: 0
 39550  007342  0100               	movlb	0	; () banked
 39551  007344  519E               	movf	___ftadd@exp1& (0+255),w,b
 39552  007346  0100               	movlb	0	; () banked
 39553  007348  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 39554  00734A  B4D8               	btfsc	status,2,c
 39555  00734C  D013               	goto	l9322
 39556                           
 39557                           ; BSR set to: 0
 39558  00734E  0100               	movlb	0	; () banked
 39559  007350  079C               	decf	___ftadd@sign& (0+255),f,b
 39560  007352  C09C  F099         	movff	___ftadd@sign,??___ftadd
 39561  007356  0E07               	movlw	7
 39562  007358  0100               	movlb	0	; () banked
 39563  00735A  1799               	andwf	??___ftadd& (0+255),f,b
 39564  00735C  B4D8               	btfsc	status,2,c
 39565  00735E  D00A               	goto	l9322
 39566  007360  D7E9               	goto	l9314
 39567                           
 39568                           ; BSR set to: 0
 39569                           
 39570                           ; BSR set to: 0
 39571  007362  D008               	goto	l9322
 39572  007364                     l9320:
 39573                           
 39574                           ; BSR set to: 0
 39575  007364  0100               	movlb	0	; () banked
 39576  007366  90D8               	bcf	status,0,c
 39577  007368  3395               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 39578  00736A  3394               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 39579  00736C  3393               	rrcf	___ftadd@f1& (0+255),f,b
 39580  00736E  0100               	movlb	0	; () banked
 39581  007370  2B9E               	incf	___ftadd@exp1& (0+255),f,b
 39582  007372  D000               	goto	l9322
 39583  007374                     l9322:
 39584                           
 39585                           ; BSR set to: 0
 39586  007374  0100               	movlb	0	; () banked
 39587  007376  519D               	movf	___ftadd@exp2& (0+255),w,b
 39588  007378  0100               	movlb	0	; () banked
 39589  00737A  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 39590  00737C  B4D8               	btfsc	status,2,c
 39591  00737E  D030               	goto	l3122
 39592  007380  D7F1               	goto	l9320
 39593                           
 39594                           ; BSR set to: 0
 39595  007382  D02E               	goto	l3122
 39596  007384                     l9324:
 39597                           
 39598                           ; BSR set to: 0
 39599  007384  0100               	movlb	0	; () banked
 39600  007386  519E               	movf	___ftadd@exp1& (0+255),w,b
 39601  007388  0100               	movlb	0	; () banked
 39602  00738A  5D9D               	subwf	___ftadd@exp2& (0+255),w,b
 39603  00738C  B0D8               	btfsc	status,0,c
 39604  00738E  D028               	goto	l3122
 39605  007390                     l9326:
 39606                           
 39607                           ; BSR set to: 0
 39608  007390  0100               	movlb	0	; () banked
 39609  007392  90D8               	bcf	status,0,c
 39610  007394  3793               	rlcf	___ftadd@f1& (0+255),f,b
 39611  007396  3794               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 39612  007398  3795               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 39613  00739A  0100               	movlb	0	; () banked
 39614  00739C  079E               	decf	___ftadd@exp1& (0+255),f,b
 39615                           
 39616                           ; BSR set to: 0
 39617  00739E  0100               	movlb	0	; () banked
 39618  0073A0  519E               	movf	___ftadd@exp1& (0+255),w,b
 39619  0073A2  0100               	movlb	0	; () banked
 39620  0073A4  199D               	xorwf	___ftadd@exp2& (0+255),w,b
 39621  0073A6  B4D8               	btfsc	status,2,c
 39622  0073A8  D013               	goto	l9334
 39623                           
 39624                           ; BSR set to: 0
 39625  0073AA  0100               	movlb	0	; () banked
 39626  0073AC  079C               	decf	___ftadd@sign& (0+255),f,b
 39627  0073AE  C09C  F099         	movff	___ftadd@sign,??___ftadd
 39628  0073B2  0E07               	movlw	7
 39629  0073B4  0100               	movlb	0	; () banked
 39630  0073B6  1799               	andwf	??___ftadd& (0+255),f,b
 39631  0073B8  B4D8               	btfsc	status,2,c
 39632  0073BA  D00A               	goto	l9334
 39633  0073BC  D7E9               	goto	l9326
 39634                           
 39635                           ; BSR set to: 0
 39636                           
 39637                           ; BSR set to: 0
 39638  0073BE  D008               	goto	l9334
 39639  0073C0                     l9332:
 39640                           
 39641                           ; BSR set to: 0
 39642  0073C0  0100               	movlb	0	; () banked
 39643  0073C2  90D8               	bcf	status,0,c
 39644  0073C4  3398               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 39645  0073C6  3397               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 39646  0073C8  3396               	rrcf	___ftadd@f2& (0+255),f,b
 39647  0073CA  0100               	movlb	0	; () banked
 39648  0073CC  2B9D               	incf	___ftadd@exp2& (0+255),f,b
 39649  0073CE  D000               	goto	l9334
 39650  0073D0                     l9334:
 39651                           
 39652                           ; BSR set to: 0
 39653  0073D0  0100               	movlb	0	; () banked
 39654  0073D2  519D               	movf	___ftadd@exp2& (0+255),w,b
 39655  0073D4  0100               	movlb	0	; () banked
 39656  0073D6  199E               	xorwf	___ftadd@exp1& (0+255),w,b
 39657  0073D8  B4D8               	btfsc	status,2,c
 39658  0073DA  D002               	goto	l3122
 39659  0073DC  D7F1               	goto	l9332
 39660                           
 39661                           ; BSR set to: 0
 39662  0073DE  D000               	goto	l3122
 39663  0073E0                     l3122:
 39664                           
 39665                           ; BSR set to: 0
 39666  0073E0  0100               	movlb	0	; () banked
 39667  0073E2  AF9C               	btfss	___ftadd@sign& (0+255),7,b
 39668  0073E4  D012               	goto	l3131
 39669                           
 39670                           ; BSR set to: 0
 39671  0073E6  0EFF               	movlw	255
 39672  0073E8  0100               	movlb	0	; () banked
 39673  0073EA  1B93               	xorwf	___ftadd@f1& (0+255),f,b
 39674  0073EC  0EFF               	movlw	255
 39675  0073EE  0100               	movlb	0	; () banked
 39676  0073F0  1B94               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 39677  0073F2  0EFF               	movlw	255
 39678  0073F4  0100               	movlb	0	; () banked
 39679  0073F6  1B95               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 39680  0073F8  0E01               	movlw	1
 39681  0073FA  0100               	movlb	0	; () banked
 39682  0073FC  2793               	addwf	___ftadd@f1& (0+255),f,b
 39683  0073FE  0E00               	movlw	0
 39684  007400  0100               	movlb	0	; () banked
 39685  007402  2394               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 39686  007404  0E00               	movlw	0
 39687  007406  0100               	movlb	0	; () banked
 39688  007408  2395               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 39689  00740A                     l3131:
 39690                           
 39691                           ; BSR set to: 0
 39692  00740A  0100               	movlb	0	; () banked
 39693  00740C  AD9C               	btfss	___ftadd@sign& (0+255),6,b
 39694  00740E  D013               	goto	l9340
 39695                           
 39696                           ; BSR set to: 0
 39697  007410  0EFF               	movlw	255
 39698  007412  0100               	movlb	0	; () banked
 39699  007414  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 39700  007416  0EFF               	movlw	255
 39701  007418  0100               	movlb	0	; () banked
 39702  00741A  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 39703  00741C  0EFF               	movlw	255
 39704  00741E  0100               	movlb	0	; () banked
 39705  007420  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 39706  007422  0E01               	movlw	1
 39707  007424  0100               	movlb	0	; () banked
 39708  007426  2796               	addwf	___ftadd@f2& (0+255),f,b
 39709  007428  0E00               	movlw	0
 39710  00742A  0100               	movlb	0	; () banked
 39711  00742C  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 39712  00742E  0E00               	movlw	0
 39713  007430  0100               	movlb	0	; () banked
 39714  007432  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 39715  007434  D000               	goto	l9340
 39716  007436                     l9340:
 39717                           
 39718                           ; BSR set to: 0
 39719  007436  0E00               	movlw	0
 39720  007438  0100               	movlb	0	; () banked
 39721  00743A  6F9C               	movwf	___ftadd@sign& (0+255),b
 39722                           
 39723                           ; BSR set to: 0
 39724  00743C  0100               	movlb	0	; () banked
 39725  00743E  5193               	movf	___ftadd@f1& (0+255),w,b
 39726  007440  0100               	movlb	0	; () banked
 39727  007442  2796               	addwf	___ftadd@f2& (0+255),f,b
 39728  007444  0100               	movlb	0	; () banked
 39729  007446  5194               	movf	(___ftadd@f1+1)& (0+255),w,b
 39730  007448  0100               	movlb	0	; () banked
 39731  00744A  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 39732  00744C  0100               	movlb	0	; () banked
 39733  00744E  5195               	movf	(___ftadd@f1+2)& (0+255),w,b
 39734  007450  0100               	movlb	0	; () banked
 39735  007452  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 39736                           
 39737                           ; BSR set to: 0
 39738  007454  0100               	movlb	0	; () banked
 39739  007456  AF98               	btfss	(___ftadd@f2+2)& (0+255),7,b
 39740  007458  D016               	goto	l9350
 39741                           
 39742                           ; BSR set to: 0
 39743  00745A  0EFF               	movlw	255
 39744  00745C  0100               	movlb	0	; () banked
 39745  00745E  1B96               	xorwf	___ftadd@f2& (0+255),f,b
 39746  007460  0EFF               	movlw	255
 39747  007462  0100               	movlb	0	; () banked
 39748  007464  1B97               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 39749  007466  0EFF               	movlw	255
 39750  007468  0100               	movlb	0	; () banked
 39751  00746A  1B98               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 39752  00746C  0E01               	movlw	1
 39753  00746E  0100               	movlb	0	; () banked
 39754  007470  2796               	addwf	___ftadd@f2& (0+255),f,b
 39755  007472  0E00               	movlw	0
 39756  007474  0100               	movlb	0	; () banked
 39757  007476  2397               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 39758  007478  0E00               	movlw	0
 39759  00747A  0100               	movlb	0	; () banked
 39760  00747C  2398               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 39761                           
 39762                           ; BSR set to: 0
 39763  00747E  0E01               	movlw	1
 39764  007480  0100               	movlb	0	; () banked
 39765  007482  6F9C               	movwf	___ftadd@sign& (0+255),b
 39766  007484  D000               	goto	l9350
 39767  007486                     l9350:
 39768                           
 39769                           ; BSR set to: 0
 39770  007486  C096  F060         	movff	___ftadd@f2,___ftpack@arg
 39771  00748A  C097  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 39772  00748E  C098  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 39773  007492  C09E  F063         	movff	___ftadd@exp1,___ftpack@exp
 39774  007496  C09C  F064         	movff	___ftadd@sign,___ftpack@sign
 39775  00749A  ECEA  F045         	call	___ftpack	;wreg free
 39776  00749E  C060  F093         	movff	?___ftpack,?___ftadd
 39777  0074A2  C061  F094         	movff	?___ftpack+1,?___ftadd+1
 39778  0074A6  C062  F095         	movff	?___ftpack+2,?___ftadd+2
 39779  0074AA  0012               	return	
 39780  0074AC  0012               	return		;funcret
 39781  0074AE                     __end_of___ftadd:
 39782                           	opt stack 0
 39783                           tblptru	equ	0xFF8
 39784                           tblptrh	equ	0xFF7
 39785                           tblptrl	equ	0xFF6
 39786                           tablat	equ	0xFF5
 39787                           prodh	equ	0xFF4
 39788                           prodl	equ	0xFF3
 39789                           intcon	equ	0xFF2
 39790                           intcon2	equ	0xFF1
 39791                           indf0	equ	0xFEF
 39792                           postinc0	equ	0xFEE
 39793                           plusw0	equ	0xFEB
 39794                           fsr0h	equ	0xFEA
 39795                           fsr0l	equ	0xFE9
 39796                           wreg	equ	0xFE8
 39797                           indf1	equ	0xFE7
 39798                           postdec1	equ	0xFE5
 39799                           fsr1h	equ	0xFE2
 39800                           fsr1l	equ	0xFE1
 39801                           indf2	equ	0xFDF
 39802                           postinc2	equ	0xFDE
 39803                           postdec2	equ	0xFDD
 39804                           plusw2	equ	0xFDB
 39805                           fsr2h	equ	0xFDA
 39806                           fsr2l	equ	0xFD9
 39807                           status	equ	0xFD8
 39808                           
 39809 ;; *************** function ___ftpack *****************
 39810 ;; Defined at:
 39811 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 39812 ;; Parameters:    Size  Location     Type
 39813 ;;  arg             3    0[BANK0 ] unsigned um
 39814 ;;  exp             1    3[BANK0 ] unsigned char 
 39815 ;;  sign            1    4[BANK0 ] unsigned char 
 39816 ;; Auto vars:     Size  Location     Type
 39817 ;;		None
 39818 ;; Return value:  Size  Location     Type
 39819 ;;                  3    0[BANK0 ] float 
 39820 ;; Registers used:
 39821 ;;		wreg, status,2, status,0
 39822 ;; Tracked objects:
 39823 ;;		On entry : 0/0
 39824 ;;		On exit  : 0/0
 39825 ;;		Unchanged: 0/0
 39826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39827 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39829 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39830 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39831 ;;Total ram usage:        8 bytes
 39832 ;; Hardware stack levels used:    1
 39833 ;; Hardware stack levels required when called:    5
 39834 ;; This function calls:
 39835 ;;		Nothing
 39836 ;; This function is called by:
 39837 ;;		___altoft
 39838 ;;		___ftadd
 39839 ;;		___ftdiv
 39840 ;;		___ftmul
 39841 ;;		___lltoft
 39842 ;;		___lwtoft
 39843 ;; This function uses a non-reentrant model
 39844 ;;
 39845                           
 39846                           	psect	text91
 39847  008BD4                     __ptext91:
 39848                           	opt stack 0
 39849  008BD4                     ___ftpack:
 39850                           	opt stack 22
 39851                           
 39852                           ;incstack = 0
 39853  008BD4  0100               	movlb	0	; () banked
 39854  008BD6  5163               	movf	___ftpack@exp& (0+255),w,b
 39855  008BD8  0100               	movlb	0	; () banked
 39856  008BDA  B4D8               	btfsc	status,2,c
 39857  008BDC  D008               	goto	l9216
 39858                           
 39859                           ; BSR set to: 0
 39860  008BDE  0100               	movlb	0	; () banked
 39861  008BE0  5160               	movf	___ftpack@arg& (0+255),w,b
 39862  008BE2  0100               	movlb	0	; () banked
 39863  008BE4  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 39864  008BE6  0100               	movlb	0	; () banked
 39865  008BE8  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 39866  008BEA  A4D8               	btfss	status,2,c
 39867  008BEC  D013               	goto	l9222
 39868  008BEE                     l9216:
 39869                           
 39870                           ; BSR set to: 0
 39871  008BEE  0E00               	movlw	0
 39872  008BF0  0100               	movlb	0	; () banked
 39873  008BF2  6F60               	movwf	?___ftpack& (0+255),b
 39874  008BF4  0E00               	movlw	0
 39875  008BF6  0100               	movlb	0	; () banked
 39876  008BF8  6F61               	movwf	(?___ftpack+1)& (0+255),b
 39877  008BFA  0E00               	movlw	0
 39878  008BFC  0100               	movlb	0	; () banked
 39879  008BFE  6F62               	movwf	(?___ftpack+2)& (0+255),b
 39880                           
 39881                           ; BSR set to: 0
 39882  008C00  0012               	return	
 39883                           
 39884                           ; BSR set to: 0
 39885  008C02  D008               	goto	l9222
 39886  008C04                     l9220:
 39887                           
 39888                           ; BSR set to: 0
 39889  008C04  0100               	movlb	0	; () banked
 39890  008C06  2B63               	incf	___ftpack@exp& (0+255),f,b
 39891  008C08  0100               	movlb	0	; () banked
 39892  008C0A  90D8               	bcf	status,0,c
 39893  008C0C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 39894  008C0E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 39895  008C10  3360               	rrcf	___ftpack@arg& (0+255),f,b
 39896  008C12  D000               	goto	l9222
 39897  008C14                     l9222:
 39898                           
 39899                           ; BSR set to: 0
 39900  008C14  0E00               	movlw	0
 39901  008C16  0100               	movlb	0	; () banked
 39902  008C18  1560               	andwf	___ftpack@arg& (0+255),w,b
 39903  008C1A  0100               	movlb	0	; () banked
 39904  008C1C  6F65               	movwf	??___ftpack& (0+255),b
 39905  008C1E  0E00               	movlw	0
 39906  008C20  0100               	movlb	0	; () banked
 39907  008C22  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 39908  008C24  0100               	movlb	0	; () banked
 39909  008C26  6F66               	movwf	(??___ftpack+1)& (0+255),b
 39910  008C28  0EFE               	movlw	254
 39911  008C2A  0100               	movlb	0	; () banked
 39912  008C2C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 39913  008C2E  0100               	movlb	0	; () banked
 39914  008C30  6F67               	movwf	(??___ftpack+2)& (0+255),b
 39915  008C32  0100               	movlb	0	; () banked
 39916  008C34  5165               	movf	??___ftpack& (0+255),w,b
 39917  008C36  0100               	movlb	0	; () banked
 39918  008C38  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 39919  008C3A  0100               	movlb	0	; () banked
 39920  008C3C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 39921  008C3E  B4D8               	btfsc	status,2,c
 39922  008C40  D013               	goto	l9228
 39923  008C42  D7E0               	goto	l9220
 39924                           
 39925                           ; BSR set to: 0
 39926  008C44  D011               	goto	l9228
 39927  008C46                     l9224:
 39928                           
 39929                           ; BSR set to: 0
 39930  008C46  0100               	movlb	0	; () banked
 39931  008C48  2B63               	incf	___ftpack@exp& (0+255),f,b
 39932                           
 39933                           ; BSR set to: 0
 39934  008C4A  0E01               	movlw	1
 39935  008C4C  0100               	movlb	0	; () banked
 39936  008C4E  2760               	addwf	___ftpack@arg& (0+255),f,b
 39937  008C50  0E00               	movlw	0
 39938  008C52  0100               	movlb	0	; () banked
 39939  008C54  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 39940  008C56  0E00               	movlw	0
 39941  008C58  0100               	movlb	0	; () banked
 39942  008C5A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 39943  008C5C  0100               	movlb	0	; () banked
 39944  008C5E  90D8               	bcf	status,0,c
 39945  008C60  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 39946  008C62  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 39947  008C64  3360               	rrcf	___ftpack@arg& (0+255),f,b
 39948  008C66  D000               	goto	l9228
 39949  008C68                     l9228:
 39950                           
 39951                           ; BSR set to: 0
 39952  008C68  0E00               	movlw	0
 39953  008C6A  0100               	movlb	0	; () banked
 39954  008C6C  1560               	andwf	___ftpack@arg& (0+255),w,b
 39955  008C6E  0100               	movlb	0	; () banked
 39956  008C70  6F65               	movwf	??___ftpack& (0+255),b
 39957  008C72  0E00               	movlw	0
 39958  008C74  0100               	movlb	0	; () banked
 39959  008C76  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 39960  008C78  0100               	movlb	0	; () banked
 39961  008C7A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 39962  008C7C  0EFF               	movlw	255
 39963  008C7E  0100               	movlb	0	; () banked
 39964  008C80  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 39965  008C82  0100               	movlb	0	; () banked
 39966  008C84  6F67               	movwf	(??___ftpack+2)& (0+255),b
 39967  008C86  0100               	movlb	0	; () banked
 39968  008C88  5165               	movf	??___ftpack& (0+255),w,b
 39969  008C8A  0100               	movlb	0	; () banked
 39970  008C8C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 39971  008C8E  0100               	movlb	0	; () banked
 39972  008C90  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 39973  008C92  B4D8               	btfsc	status,2,c
 39974  008C94  D00A               	goto	l9232
 39975  008C96  D7D7               	goto	l9224
 39976                           
 39977                           ; BSR set to: 0
 39978  008C98  D008               	goto	l9232
 39979  008C9A                     l9230:
 39980                           
 39981                           ; BSR set to: 0
 39982  008C9A  0100               	movlb	0	; () banked
 39983  008C9C  0763               	decf	___ftpack@exp& (0+255),f,b
 39984  008C9E  0100               	movlb	0	; () banked
 39985  008CA0  90D8               	bcf	status,0,c
 39986  008CA2  3760               	rlcf	___ftpack@arg& (0+255),f,b
 39987  008CA4  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 39988  008CA6  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 39989  008CA8  D000               	goto	l9232
 39990  008CAA                     l9232:
 39991                           
 39992                           ; BSR set to: 0
 39993  008CAA  0100               	movlb	0	; () banked
 39994  008CAC  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 39995  008CAE  D005               	goto	l3078
 39996                           
 39997                           ; BSR set to: 0
 39998  008CB0  0E02               	movlw	2
 39999  008CB2  0100               	movlb	0	; () banked
 40000  008CB4  6163               	cpfslt	___ftpack@exp& (0+255),b
 40001  008CB6  D7F1               	goto	l9230
 40002  008CB8  D000               	goto	l3078
 40003  008CBA                     l3078:
 40004                           
 40005                           ; BSR set to: 0
 40006  008CBA  0100               	movlb	0	; () banked
 40007  008CBC  B163               	btfsc	___ftpack@exp& (0+255),0,b
 40008  008CBE  D003               	goto	l9238
 40009                           
 40010                           ; BSR set to: 0
 40011  008CC0  0100               	movlb	0	; () banked
 40012  008CC2  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 40013  008CC4  D000               	goto	l9238
 40014  008CC6                     l9238:
 40015                           
 40016                           ; BSR set to: 0
 40017  008CC6  0100               	movlb	0	; () banked
 40018  008CC8  90D8               	bcf	status,0,c
 40019  008CCA  3363               	rrcf	___ftpack@exp& (0+255),f,b
 40020  008CCC  0100               	movlb	0	; () banked
 40021  008CCE  5163               	movf	___ftpack@exp& (0+255),w,b
 40022  008CD0  0100               	movlb	0	; () banked
 40023  008CD2  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 40024                           
 40025                           ; BSR set to: 0
 40026  008CD4  0100               	movlb	0	; () banked
 40027  008CD6  5164               	movf	___ftpack@sign& (0+255),w,b
 40028  008CD8  0100               	movlb	0	; () banked
 40029  008CDA  B4D8               	btfsc	status,2,c
 40030  008CDC  D003               	goto	l9244
 40031                           
 40032                           ; BSR set to: 0
 40033  008CDE  0100               	movlb	0	; () banked
 40034  008CE0  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 40035  008CE2  D000               	goto	l9244
 40036  008CE4                     l9244:
 40037                           
 40038                           ; BSR set to: 0
 40039  008CE4  C060  F060         	movff	___ftpack@arg,?___ftpack
 40040  008CE8  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 40041  008CEC  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 40042  008CF0  0012               	return	
 40043                           
 40044                           ; BSR set to: 0
 40045                           
 40046                           ; BSR set to: 0
 40047  008CF2  0012               	return		;funcret
 40048  008CF4                     __end_of___ftpack:
 40049                           	opt stack 0
 40050                           tblptru	equ	0xFF8
 40051                           tblptrh	equ	0xFF7
 40052                           tblptrl	equ	0xFF6
 40053                           tablat	equ	0xFF5
 40054                           prodh	equ	0xFF4
 40055                           prodl	equ	0xFF3
 40056                           intcon	equ	0xFF2
 40057                           intcon2	equ	0xFF1
 40058                           indf0	equ	0xFEF
 40059                           postinc0	equ	0xFEE
 40060                           plusw0	equ	0xFEB
 40061                           fsr0h	equ	0xFEA
 40062                           fsr0l	equ	0xFE9
 40063                           wreg	equ	0xFE8
 40064                           indf1	equ	0xFE7
 40065                           postdec1	equ	0xFE5
 40066                           fsr1h	equ	0xFE2
 40067                           fsr1l	equ	0xFE1
 40068                           indf2	equ	0xFDF
 40069                           postinc2	equ	0xFDE
 40070                           postdec2	equ	0xFDD
 40071                           plusw2	equ	0xFDB
 40072                           fsr2h	equ	0xFDA
 40073                           fsr2l	equ	0xFD9
 40074                           status	equ	0xFD8
 40075                           
 40076 ;; *************** function ___ftneg *****************
 40077 ;; Defined at:
 40078 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 40079 ;; Parameters:    Size  Location     Type
 40080 ;;  f1              3    0[BANK0 ] float 
 40081 ;; Auto vars:     Size  Location     Type
 40082 ;;		None
 40083 ;; Return value:  Size  Location     Type
 40084 ;;                  3    0[BANK0 ] float 
 40085 ;; Registers used:
 40086 ;;		wreg, status,2, status,0
 40087 ;; Tracked objects:
 40088 ;;		On entry : 0/0
 40089 ;;		On exit  : 0/0
 40090 ;;		Unchanged: 0/0
 40091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40092 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40095 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40096 ;;Total ram usage:        3 bytes
 40097 ;; Hardware stack levels used:    1
 40098 ;; Hardware stack levels required when called:    5
 40099 ;; This function calls:
 40100 ;;		Nothing
 40101 ;; This function is called by:
 40102 ;;		_sprintf
 40103 ;; This function uses a non-reentrant model
 40104 ;;
 40105                           
 40106                           	psect	text92
 40107  00AB62                     __ptext92:
 40108                           	opt stack 0
 40109  00AB62                     ___ftneg:
 40110                           	opt stack 24
 40111                           
 40112                           ; BSR set to: 0
 40113                           ;incstack = 0
 40114  00AB62  0100               	movlb	0	; () banked
 40115  00AB64  5160               	movf	___ftneg@f1& (0+255),w,b
 40116  00AB66  0100               	movlb	0	; () banked
 40117  00AB68  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 40118  00AB6A  0100               	movlb	0	; () banked
 40119  00AB6C  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 40120  00AB6E  B4D8               	btfsc	status,2,c
 40121  00AB70  D009               	goto	l3181
 40122                           
 40123                           ; BSR set to: 0
 40124  00AB72  0E00               	movlw	0
 40125  00AB74  0100               	movlb	0	; () banked
 40126  00AB76  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 40127  00AB78  0E00               	movlw	0
 40128  00AB7A  0100               	movlb	0	; () banked
 40129  00AB7C  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 40130  00AB7E  0E80               	movlw	128
 40131  00AB80  0100               	movlb	0	; () banked
 40132  00AB82  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 40133  00AB84                     l3181:
 40134                           
 40135                           ; BSR set to: 0
 40136  00AB84  C060  F060         	movff	___ftneg@f1,?___ftneg
 40137  00AB88  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 40138  00AB8C  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 40139                           
 40140                           ; BSR set to: 0
 40141  00AB90  0012               	return		;funcret
 40142  00AB92                     __end_of___ftneg:
 40143                           	opt stack 0
 40144                           tblptru	equ	0xFF8
 40145                           tblptrh	equ	0xFF7
 40146                           tblptrl	equ	0xFF6
 40147                           tablat	equ	0xFF5
 40148                           prodh	equ	0xFF4
 40149                           prodl	equ	0xFF3
 40150                           intcon	equ	0xFF2
 40151                           intcon2	equ	0xFF1
 40152                           indf0	equ	0xFEF
 40153                           postinc0	equ	0xFEE
 40154                           plusw0	equ	0xFEB
 40155                           fsr0h	equ	0xFEA
 40156                           fsr0l	equ	0xFE9
 40157                           wreg	equ	0xFE8
 40158                           indf1	equ	0xFE7
 40159                           postdec1	equ	0xFE5
 40160                           fsr1h	equ	0xFE2
 40161                           fsr1l	equ	0xFE1
 40162                           indf2	equ	0xFDF
 40163                           postinc2	equ	0xFDE
 40164                           postdec2	equ	0xFDD
 40165                           plusw2	equ	0xFDB
 40166                           fsr2h	equ	0xFDA
 40167                           fsr2l	equ	0xFD9
 40168                           status	equ	0xFD8
 40169                           
 40170 ;; *************** function ___ftge *****************
 40171 ;; Defined at:
 40172 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 40173 ;; Parameters:    Size  Location     Type
 40174 ;;  ff1             3    0[BANK0 ] float 
 40175 ;;  ff2             3    3[BANK0 ] float 
 40176 ;; Auto vars:     Size  Location     Type
 40177 ;;		None
 40178 ;; Return value:  Size  Location     Type
 40179 ;;		None               void
 40180 ;; Registers used:
 40181 ;;		wreg, status,2, status,0
 40182 ;; Tracked objects:
 40183 ;;		On entry : 0/0
 40184 ;;		On exit  : 0/0
 40185 ;;		Unchanged: 0/0
 40186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40189 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40190 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40191 ;;Total ram usage:        9 bytes
 40192 ;; Hardware stack levels used:    1
 40193 ;; Hardware stack levels required when called:    5
 40194 ;; This function calls:
 40195 ;;		Nothing
 40196 ;; This function is called by:
 40197 ;;		_main
 40198 ;;		_sprintf
 40199 ;; This function uses a non-reentrant model
 40200 ;;
 40201                           
 40202                           	psect	text93
 40203  0097B8                     __ptext93:
 40204                           	opt stack 0
 40205  0097B8                     ___ftge:
 40206                           	opt stack 24
 40207                           
 40208                           ; BSR set to: 0
 40209                           ;incstack = 0
 40210  0097B8  0100               	movlb	0	; () banked
 40211  0097BA  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 40212  0097BC  D01E               	goto	l9758
 40213                           
 40214                           ; BSR set to: 0
 40215  0097BE  C060  F066         	movff	___ftge@ff1,??___ftge
 40216  0097C2  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 40217  0097C6  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 40218  0097CA  0100               	movlb	0	; () banked
 40219  0097CC  1F66               	comf	??___ftge& (0+255),f,b
 40220  0097CE  1F67               	comf	(??___ftge+1)& (0+255),f,b
 40221  0097D0  1F68               	comf	(??___ftge+2)& (0+255),f,b
 40222  0097D2  2B66               	incf	??___ftge& (0+255),f,b
 40223  0097D4  0E00               	movlw	0
 40224  0097D6  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 40225  0097D8  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 40226  0097DA  0E00               	movlw	0
 40227  0097DC  0100               	movlb	0	; () banked
 40228  0097DE  2566               	addwf	??___ftge& (0+255),w,b
 40229  0097E0  0100               	movlb	0	; () banked
 40230  0097E2  6F60               	movwf	___ftge@ff1& (0+255),b
 40231  0097E4  0E00               	movlw	0
 40232  0097E6  0100               	movlb	0	; () banked
 40233  0097E8  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 40234  0097EA  0100               	movlb	0	; () banked
 40235  0097EC  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 40236  0097EE  0E80               	movlw	128
 40237  0097F0  0100               	movlb	0	; () banked
 40238  0097F2  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 40239  0097F4  0100               	movlb	0	; () banked
 40240  0097F6  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 40241  0097F8  D000               	goto	l9758
 40242  0097FA                     l9758:
 40243                           
 40244                           ; BSR set to: 0
 40245  0097FA  0100               	movlb	0	; () banked
 40246  0097FC  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 40247  0097FE  D01E               	goto	l9762
 40248                           
 40249                           ; BSR set to: 0
 40250  009800  C063  F066         	movff	___ftge@ff2,??___ftge
 40251  009804  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 40252  009808  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 40253  00980C  0100               	movlb	0	; () banked
 40254  00980E  1F66               	comf	??___ftge& (0+255),f,b
 40255  009810  1F67               	comf	(??___ftge+1)& (0+255),f,b
 40256  009812  1F68               	comf	(??___ftge+2)& (0+255),f,b
 40257  009814  2B66               	incf	??___ftge& (0+255),f,b
 40258  009816  0E00               	movlw	0
 40259  009818  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 40260  00981A  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 40261  00981C  0E00               	movlw	0
 40262  00981E  0100               	movlb	0	; () banked
 40263  009820  2566               	addwf	??___ftge& (0+255),w,b
 40264  009822  0100               	movlb	0	; () banked
 40265  009824  6F63               	movwf	___ftge@ff2& (0+255),b
 40266  009826  0E00               	movlw	0
 40267  009828  0100               	movlb	0	; () banked
 40268  00982A  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 40269  00982C  0100               	movlb	0	; () banked
 40270  00982E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 40271  009830  0E80               	movlw	128
 40272  009832  0100               	movlb	0	; () banked
 40273  009834  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 40274  009836  0100               	movlb	0	; () banked
 40275  009838  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 40276  00983A  D000               	goto	l9762
 40277  00983C                     l9762:
 40278                           
 40279                           ; BSR set to: 0
 40280  00983C  0E00               	movlw	0
 40281  00983E  0100               	movlb	0	; () banked
 40282  009840  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 40283  009842  0E00               	movlw	0
 40284  009844  0100               	movlb	0	; () banked
 40285  009846  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 40286  009848  0E80               	movlw	128
 40287  00984A  0100               	movlb	0	; () banked
 40288  00984C  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 40289                           
 40290                           ; BSR set to: 0
 40291  00984E  0E00               	movlw	0
 40292  009850  0100               	movlb	0	; () banked
 40293  009852  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 40294  009854  0E00               	movlw	0
 40295  009856  0100               	movlb	0	; () banked
 40296  009858  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 40297  00985A  0E80               	movlw	128
 40298  00985C  0100               	movlb	0	; () banked
 40299  00985E  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 40300  009860  0100               	movlb	0	; () banked
 40301  009862  5163               	movf	___ftge@ff2& (0+255),w,b
 40302  009864  0100               	movlb	0	; () banked
 40303  009866  5D60               	subwf	___ftge@ff1& (0+255),w,b
 40304  009868  0100               	movlb	0	; () banked
 40305  00986A  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 40306  00986C  0100               	movlb	0	; () banked
 40307  00986E  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 40308  009870  0100               	movlb	0	; () banked
 40309  009872  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 40310  009874  0100               	movlb	0	; () banked
 40311  009876  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 40312  009878  B0D8               	btfsc	status,0,c
 40313  00987A  D002               	goto	l9768
 40314                           
 40315                           ; BSR set to: 0
 40316  00987C  90D8               	bcf	status,0,c
 40317  00987E  0012               	return	
 40318  009880                     l9768:
 40319                           
 40320                           ; BSR set to: 0
 40321  009880  80D8               	bsf	status,0,c
 40322                           
 40323                           ; BSR set to: 0
 40324  009882  0012               	return	
 40325                           
 40326                           ; BSR set to: 0
 40327                           
 40328                           ; BSR set to: 0
 40329  009884  0012               	return		;funcret
 40330  009886                     __end_of___ftge:
 40331                           	opt stack 0
 40332                           tblptru	equ	0xFF8
 40333                           tblptrh	equ	0xFF7
 40334                           tblptrl	equ	0xFF6
 40335                           tablat	equ	0xFF5
 40336                           prodh	equ	0xFF4
 40337                           prodl	equ	0xFF3
 40338                           intcon	equ	0xFF2
 40339                           intcon2	equ	0xFF1
 40340                           indf0	equ	0xFEF
 40341                           postinc0	equ	0xFEE
 40342                           plusw0	equ	0xFEB
 40343                           fsr0h	equ	0xFEA
 40344                           fsr0l	equ	0xFE9
 40345                           wreg	equ	0xFE8
 40346                           indf1	equ	0xFE7
 40347                           postdec1	equ	0xFE5
 40348                           fsr1h	equ	0xFE2
 40349                           fsr1l	equ	0xFE1
 40350                           indf2	equ	0xFDF
 40351                           postinc2	equ	0xFDE
 40352                           postdec2	equ	0xFDD
 40353                           plusw2	equ	0xFDB
 40354                           fsr2h	equ	0xFDA
 40355                           fsr2l	equ	0xFD9
 40356                           status	equ	0xFD8
 40357                           
 40358 ;; *************** function _UARTstring_CONST *****************
 40359 ;; Defined at:
 40360 ;;		line 236 in file "UART.c"
 40361 ;; Parameters:    Size  Location     Type
 40362 ;;  data            2    2[BANK0 ] PTR const unsigned char 
 40363 ;;		 -> Conf2_ChannelH_3_STR(17), Conf2_ChannelH_2_STR(17), Conf2_ChannelH_1_STR(17), Conf2_ChannelD_STR(15), 
 40364 ;;		 -> Conf2_ChannelB_STR(15), STR_187(28), STR_122(13), STR_105(35), 
 40365 ;;		 -> STR_103(38), STR_94(24), STR_91(60), STR_86(32), 
 40366 ;;		 -> STR_75(14), STR_68(34), STR_67(35), SYNTAX_ERR(14), 
 40367 ;;		 -> Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), STR_23(6), 
 40368 ;;		 -> STR_20(5), STR_17(3), STR_16(6), STR_15(9), 
 40369 ;;		 -> STR_14(20), STR_13(9), STR_8(3), STR_6(4), 
 40370 ;;		 -> CRLN(3), 
 40371 ;; Auto vars:     Size  Location     Type
 40372 ;;		None
 40373 ;; Return value:  Size  Location     Type
 40374 ;;		None               void
 40375 ;; Registers used:
 40376 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40377 ;; Tracked objects:
 40378 ;;		On entry : 0/0
 40379 ;;		On exit  : 0/0
 40380 ;;		Unchanged: 0/0
 40381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40386 ;;Total ram usage:        2 bytes
 40387 ;; Hardware stack levels used:    1
 40388 ;; Hardware stack levels required when called:    6
 40389 ;; This function calls:
 40390 ;;		_UARTchar_CONST
 40391 ;; This function is called by:
 40392 ;;		_main
 40393 ;;		_UARTstringCRLN
 40394 ;;		_UARTstringCRLN_CONST
 40395 ;;		_UARTcommandMenu
 40396 ;;		_EnterCommandMode
 40397 ;;		_BluetoothInitialSetup
 40398 ;;		_UseBluetooth
 40399 ;;		_WaitForIRsignal
 40400 ;;		_DisplayRF_Channel
 40401 ;; This function uses a non-reentrant model
 40402 ;;
 40403                           
 40404                           	psect	text94
 40405  00AB30                     __ptext94:
 40406                           	opt stack 0
 40407  00AB30                     _UARTstring_CONST:
 40408                           	opt stack 22
 40409                           
 40410                           ;UART.c: 238: while(*data != 0)
 40411                           
 40412                           ; BSR set to: 0
 40413                           ;incstack = 0
 40414  00AB30  D00D               	goto	l9894
 40415  00AB32                     l9890:
 40416                           
 40417                           ;UART.c: 239: {
 40418                           ;UART.c: 240: UARTchar_CONST(*data);
 40419  00AB32  C062  FFF6         	movff	UARTstring_CONST@data,tblptrl
 40420  00AB36  C063  FFF7         	movff	UARTstring_CONST@data+1,tblptrh
 40421  00AB3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40422  00AB3A  6AF8               	clrf	tblptru,c
 40423  00AB3C                     	endif
 40424  00AB3C                     	if	0	;tblptru may be non-zero
 40425  00AB3C                     	endif
 40426  00AB3C  0008               	tblrd		*
 40427  00AB3E  50F5               	movf	tablat,w,c
 40428  00AB40  EC74  F056         	call	_UARTchar_CONST
 40429                           
 40430                           ;UART.c: 241: *data++;
 40431  00AB44  0100               	movlb	0	; () banked
 40432  00AB46  4B62               	infsnz	UARTstring_CONST@data& (0+255),f,b
 40433  00AB48  2B63               	incf	(UARTstring_CONST@data+1)& (0+255),f,b
 40434  00AB4A  D000               	goto	l9894
 40435  00AB4C                     l9894:
 40436  00AB4C  C062  FFF6         	movff	UARTstring_CONST@data,tblptrl
 40437  00AB50  C063  FFF7         	movff	UARTstring_CONST@data+1,tblptrh
 40438  00AB54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 40439  00AB54  6AF8               	clrf	tblptru,c
 40440  00AB56                     	endif
 40441  00AB56                     	if	0	;tblptru may be non-zero
 40442  00AB56                     	endif
 40443  00AB56  0008               	tblrd		*
 40444  00AB58  50F5               	movf	tablat,w,c
 40445  00AB5A  0900               	iorlw	0
 40446  00AB5C  A4D8               	btfss	status,2,c
 40447  00AB5E  D7E9               	goto	l9890
 40448  00AB60  0012               	return		;funcret
 40449  00AB62                     __end_of_UARTstring_CONST:
 40450                           	opt stack 0
 40451                           tblptru	equ	0xFF8
 40452                           tblptrh	equ	0xFF7
 40453                           tblptrl	equ	0xFF6
 40454                           tablat	equ	0xFF5
 40455                           prodh	equ	0xFF4
 40456                           prodl	equ	0xFF3
 40457                           intcon	equ	0xFF2
 40458                           intcon2	equ	0xFF1
 40459                           indf0	equ	0xFEF
 40460                           postinc0	equ	0xFEE
 40461                           plusw0	equ	0xFEB
 40462                           fsr0h	equ	0xFEA
 40463                           fsr0l	equ	0xFE9
 40464                           wreg	equ	0xFE8
 40465                           indf1	equ	0xFE7
 40466                           postdec1	equ	0xFE5
 40467                           fsr1h	equ	0xFE2
 40468                           fsr1l	equ	0xFE1
 40469                           indf2	equ	0xFDF
 40470                           postinc2	equ	0xFDE
 40471                           postdec2	equ	0xFDD
 40472                           plusw2	equ	0xFDB
 40473                           fsr2h	equ	0xFDA
 40474                           fsr2l	equ	0xFD9
 40475                           status	equ	0xFD8
 40476                           
 40477 ;; *************** function _UARTchar_CONST *****************
 40478 ;; Defined at:
 40479 ;;		line 207 in file "UART.c"
 40480 ;; Parameters:    Size  Location     Type
 40481 ;;  data            1    wreg     const unsigned char 
 40482 ;; Auto vars:     Size  Location     Type
 40483 ;;  data            1    0[BANK0 ] const unsigned char 
 40484 ;;  temp            1    1[BANK0 ] unsigned char 
 40485 ;; Return value:  Size  Location     Type
 40486 ;;		None               void
 40487 ;; Registers used:
 40488 ;;		wreg, status,2
 40489 ;; Tracked objects:
 40490 ;;		On entry : 0/0
 40491 ;;		On exit  : 0/0
 40492 ;;		Unchanged: 0/0
 40493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40498 ;;Total ram usage:        2 bytes
 40499 ;; Hardware stack levels used:    1
 40500 ;; Hardware stack levels required when called:    5
 40501 ;; This function calls:
 40502 ;;		Nothing
 40503 ;; This function is called by:
 40504 ;;		_main
 40505 ;;		_UARTstring_CONST
 40506 ;;		_UARTstringCRLN_CONST
 40507 ;;		_UseBluetooth
 40508 ;;		_WaitForIRsignal
 40509 ;; This function uses a non-reentrant model
 40510 ;;
 40511                           
 40512                           	psect	text95
 40513  00ACE8                     __ptext95:
 40514                           	opt stack 0
 40515  00ACE8                     _UARTchar_CONST:
 40516                           	opt stack 22
 40517                           
 40518                           ;incstack = 0
 40519                           ;UARTchar_CONST@data stored from wreg
 40520  00ACE8  0100               	movlb	0	; () banked
 40521  00ACEA  6F60               	movwf	UARTchar_CONST@data& (0+255),b
 40522                           
 40523                           ; BSR set to: 0
 40524                           ;UART.c: 209: unsigned char temp = data;
 40525  00ACEC  C060  F061         	movff	UARTchar_CONST@data,UARTchar_CONST@temp
 40526                           
 40527                           ; BSR set to: 0
 40528                           ;UART.c: 210: if(temp != 0)
 40529  00ACF0  0100               	movlb	0	; () banked
 40530  00ACF2  5161               	movf	UARTchar_CONST@temp& (0+255),w,b
 40531  00ACF4  0100               	movlb	0	; () banked
 40532  00ACF6  B4D8               	btfsc	status,2,c
 40533  00ACF8  0012               	return	
 40534                           
 40535                           ; BSR set to: 0
 40536                           ;UART.c: 211: {
 40537                           ;UART.c: 212: while(!TXSTAbits.TRMT);
 40538  00ACFA  D000               	goto	l807
 40539  00ACFC                     l807:
 40540                           
 40541                           ; BSR set to: 0
 40542  00ACFC  A2AC               	btfss	4012,1,c	;volatile
 40543  00ACFE  D7FE               	goto	l807
 40544                           
 40545                           ; BSR set to: 0
 40546                           ;UART.c: 213: TXREG = temp;
 40547  00AD00  C061  FFAD         	movff	UARTchar_CONST@temp,4013	;volatile
 40548  00AD04  0012               	return	
 40549                           
 40550                           ; BSR set to: 0
 40551                           
 40552                           ; BSR set to: 0
 40553  00AD06  0012               	return		;funcret
 40554  00AD08                     __end_of_UARTchar_CONST:
 40555                           	opt stack 0
 40556                           tblptru	equ	0xFF8
 40557                           tblptrh	equ	0xFF7
 40558                           tblptrl	equ	0xFF6
 40559                           tablat	equ	0xFF5
 40560                           prodh	equ	0xFF4
 40561                           prodl	equ	0xFF3
 40562                           intcon	equ	0xFF2
 40563                           intcon2	equ	0xFF1
 40564                           indf0	equ	0xFEF
 40565                           postinc0	equ	0xFEE
 40566                           plusw0	equ	0xFEB
 40567                           fsr0h	equ	0xFEA
 40568                           fsr0l	equ	0xFE9
 40569                           wreg	equ	0xFE8
 40570                           indf1	equ	0xFE7
 40571                           postdec1	equ	0xFE5
 40572                           fsr1h	equ	0xFE2
 40573                           fsr1l	equ	0xFE1
 40574                           indf2	equ	0xFDF
 40575                           postinc2	equ	0xFDE
 40576                           postdec2	equ	0xFDD
 40577                           plusw2	equ	0xFDB
 40578                           fsr2h	equ	0xFDA
 40579                           fsr2l	equ	0xFD9
 40580                           status	equ	0xFD8
 40581                           
 40582 ;; *************** function _StringContains *****************
 40583 ;; Defined at:
 40584 ;;		line 302 in file "MISC.c"
 40585 ;; Parameters:    Size  Location     Type
 40586 ;;  This            2    0[BANK0 ] PTR const unsigned char 
 40587 ;;		 -> CommandString(100), main@BluetoothString(100), 
 40588 ;;  That            2    2[BANK0 ] PTR const unsigned char 
 40589 ;;		 -> STR_39(2), BluetoothInitialSetup@buf(50), EnterCommandMode@buf(50), 
 40590 ;; Auto vars:     Size  Location     Type
 40591 ;;  i               1    8[BANK0 ] unsigned char 
 40592 ;;  MatchCount      1    7[BANK0 ] unsigned char 
 40593 ;;  MatchAmount     1    6[BANK0 ] unsigned char 
 40594 ;; Return value:  Size  Location     Type
 40595 ;;                  1    wreg      unsigned char 
 40596 ;; Registers used:
 40597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 40598 ;; Tracked objects:
 40599 ;;		On entry : 0/0
 40600 ;;		On exit  : 0/0
 40601 ;;		Unchanged: 0/0
 40602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40604 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40605 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40606 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40607 ;;Total ram usage:        9 bytes
 40608 ;; Hardware stack levels used:    1
 40609 ;; Hardware stack levels required when called:    5
 40610 ;; This function calls:
 40611 ;;		Nothing
 40612 ;; This function is called by:
 40613 ;;		_EnterCommandMode
 40614 ;;		_BluetoothInitialSetup
 40615 ;;		_UseBluetooth
 40616 ;; This function uses a non-reentrant model
 40617 ;;
 40618                           
 40619                           	psect	text96
 40620  00896E                     __ptext96:
 40621                           	opt stack 0
 40622  00896E                     _StringContains:
 40623                           	opt stack 24
 40624                           
 40625                           ;MISC.c: 304: unsigned char MatchCount = 0;
 40626                           
 40627                           ; BSR set to: 0
 40628                           ;incstack = 0
 40629  00896E  0E00               	movlw	0
 40630  008970  0100               	movlb	0	; () banked
 40631  008972  6F67               	movwf	StringContains@MatchCount& (0+255),b
 40632                           
 40633                           ;MISC.c: 305: unsigned char MatchAmount = 0;
 40634  008974  0E00               	movlw	0
 40635  008976  0100               	movlb	0	; () banked
 40636  008978  6F66               	movwf	StringContains@MatchAmount& (0+255),b
 40637                           
 40638                           ;MISC.c: 306: unsigned char i = 0;
 40639  00897A  0E00               	movlw	0
 40640  00897C  0100               	movlb	0	; () banked
 40641  00897E  6F68               	movwf	StringContains@i& (0+255),b
 40642                           
 40643                           ;MISC.c: 308: for(i=0;i<254;i++)
 40644  008980  0E00               	movlw	0
 40645  008982  0100               	movlb	0	; () banked
 40646  008984  6F68               	movwf	StringContains@i& (0+255),b
 40647  008986                     l10298:
 40648                           
 40649                           ; BSR set to: 0
 40650  008986  0EFD               	movlw	253
 40651  008988  0100               	movlb	0	; () banked
 40652  00898A  6568               	cpfsgt	StringContains@i& (0+255),b
 40653  00898C  D001               	goto	l10302
 40654                           
 40655                           ; BSR set to: 0
 40656  00898E  D082               	goto	l10338
 40657  008990                     l10302:
 40658                           
 40659                           ; BSR set to: 0
 40660                           ;MISC.c: 309: {
 40661                           ;MISC.c: 310: if(That[i] == 0)
 40662  008990  0100               	movlb	0	; () banked
 40663  008992  5168               	movf	StringContains@i& (0+255),w,b
 40664  008994  0D01               	mullw	1
 40665  008996  C062  F064         	movff	StringContains@That,??_StringContains
 40666  00899A  C063  F065         	movff	StringContains@That+1,??_StringContains+1
 40667  00899E  50F3               	movf	prodl,w,c
 40668  0089A0  0100               	movlb	0	; () banked
 40669  0089A2  2764               	addwf	??_StringContains& (0+255),f,b
 40670  0089A4  50F4               	movf	prodh,w,c
 40671  0089A6  0100               	movlb	0	; () banked
 40672  0089A8  2365               	addwfc	(??_StringContains+1)& (0+255),f,b
 40673  0089AA  C064  FFF6         	movff	??_StringContains,tblptrl
 40674  0089AE  C065  FFF7         	movff	??_StringContains+1,tblptrh
 40675  0089B2  0E00               	movlw	low (__mediumconst shr (0+16))
 40676  0089B4  6EF8               	movwf	tblptru,c
 40677  0089B6  0E0F               	movlw	(high __ramtop+-1)
 40678  0089B8  64F7               	cpfsgt	tblptrh,c
 40679  0089BA  D003               	bra	u10457
 40680  0089BC  0008               	tblrd		*
 40681  0089BE  50F5               	movf	tablat,w,c
 40682  0089C0  D005               	bra	u10450
 40683  0089C2                     u10457:
 40684  0089C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 40685  0089C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 40686  0089CA  50EF               	movf	indf0,w,c
 40687  0089CC                     u10450:
 40688  0089CC  0900               	iorlw	0
 40689  0089CE  A4D8               	btfss	status,2,c
 40690  0089D0  D003               	goto	l10306
 40691                           
 40692                           ;MISC.c: 311: {
 40693                           ;MISC.c: 312: MatchAmount = i;
 40694  0089D2  C068  F066         	movff	StringContains@i,StringContains@MatchAmount
 40695                           
 40696                           ;MISC.c: 313: break;
 40697  0089D6  D05E               	goto	l10338
 40698  0089D8                     l10306:
 40699  0089D8  0100               	movlb	0	; () banked
 40700  0089DA  2B68               	incf	StringContains@i& (0+255),f,b
 40701  0089DC  D7D4               	goto	l10298
 40702                           
 40703                           ; BSR set to: 0
 40704                           ;MISC.c: 314: }
 40705                           ;MISC.c: 315: }
 40706                           ;MISC.c: 316: while(*This != 0)
 40707                           
 40708                           ; BSR set to: 0
 40709  0089DE  D05A               	goto	l10338
 40710  0089E0                     l10310:
 40711                           
 40712                           ;MISC.c: 317: {
 40713                           ;MISC.c: 318: if(*This == *That)
 40714  0089E0  C060  FFD9         	movff	StringContains@This,fsr2l
 40715  0089E4  C061  FFDA         	movff	StringContains@This+1,fsr2h
 40716  0089E8  50DF               	movf	indf2,w,c
 40717  0089EA  0100               	movlb	0	; () banked
 40718  0089EC  6F64               	movwf	??_StringContains& (0+255),b
 40719  0089EE  C062  FFF6         	movff	StringContains@That,tblptrl
 40720  0089F2  C063  FFF7         	movff	StringContains@That+1,tblptrh
 40721  0089F6  0E00               	movlw	low (__mediumconst shr (0+16))
 40722  0089F8  6EF8               	movwf	tblptru,c
 40723  0089FA  0E0F               	movlw	(high __ramtop+-1)
 40724  0089FC  64F7               	cpfsgt	tblptrh,c
 40725  0089FE  D003               	bra	u10487
 40726  008A00  0008               	tblrd		*
 40727  008A02  50F5               	movf	tablat,w,c
 40728  008A04  D005               	bra	u10480
 40729  008A06                     u10487:
 40730  008A06  CFF6 FFE9          	movff	tblptrl,fsr0l
 40731  008A0A  CFF7 FFEA          	movff	tblptrh,fsr0h
 40732  008A0E  50EF               	movf	indf0,w,c
 40733  008A10                     u10480:
 40734  008A10  0100               	movlb	0	; () banked
 40735  008A12  1964               	xorwf	??_StringContains& (0+255),w,b
 40736  008A14  A4D8               	btfss	status,2,c
 40737  008A16  D02D               	goto	l10332
 40738                           
 40739                           ; BSR set to: 0
 40740                           ;MISC.c: 319: {
 40741                           ;MISC.c: 320: MatchCount++;
 40742  008A18  0100               	movlb	0	; () banked
 40743  008A1A  2B67               	incf	StringContains@MatchCount& (0+255),f,b
 40744                           
 40745                           ;MISC.c: 321: That++;
 40746  008A1C  0100               	movlb	0	; () banked
 40747  008A1E  4B62               	infsnz	StringContains@That& (0+255),f,b
 40748  008A20  2B63               	incf	(StringContains@That+1)& (0+255),f,b
 40749                           
 40750                           ; BSR set to: 0
 40751                           ;MISC.c: 322: if(*That == 0)
 40752  008A22  C062  FFF6         	movff	StringContains@That,tblptrl
 40753  008A26  C063  FFF7         	movff	StringContains@That+1,tblptrh
 40754  008A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 40755  008A2C  6EF8               	movwf	tblptru,c
 40756  008A2E  0E0F               	movlw	(high __ramtop+-1)
 40757  008A30  64F7               	cpfsgt	tblptrh,c
 40758  008A32  D003               	bra	u10507
 40759  008A34  0008               	tblrd		*
 40760  008A36  50F5               	movf	tablat,w,c
 40761  008A38  D005               	bra	u10500
 40762  008A3A                     u10507:
 40763  008A3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 40764  008A3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 40765  008A42  50EF               	movf	indf0,w,c
 40766  008A44                     u10500:
 40767  008A44  0900               	iorlw	0
 40768  008A46  A4D8               	btfss	status,2,c
 40769  008A48  D00A               	goto	l10326
 40770                           
 40771                           ;MISC.c: 323: {
 40772                           ;MISC.c: 324: if(MatchAmount == MatchCount)
 40773  008A4A  0100               	movlb	0	; () banked
 40774  008A4C  5167               	movf	StringContains@MatchCount& (0+255),w,b
 40775  008A4E  0100               	movlb	0	; () banked
 40776  008A50  1966               	xorwf	StringContains@MatchAmount& (0+255),w,b
 40777  008A52  A4D8               	btfss	status,2,c
 40778  008A54  D002               	goto	l10322
 40779                           
 40780                           ; BSR set to: 0
 40781                           ;MISC.c: 325: {
 40782                           ;MISC.c: 326: return 1;
 40783  008A56  0E01               	movlw	1
 40784                           
 40785                           ; BSR set to: 0
 40786  008A58  0012               	return	
 40787  008A5A                     l10322:
 40788                           
 40789                           ; BSR set to: 0
 40790                           ;MISC.c: 327: }
 40791                           ;MISC.c: 328: return 0;
 40792  008A5A  0E00               	movlw	0
 40793                           
 40794                           ; BSR set to: 0
 40795  008A5C  0012               	return	
 40796  008A5E                     l10326:
 40797                           
 40798                           ;MISC.c: 329: }
 40799                           ;MISC.c: 330: if(*This == 0)
 40800  008A5E  C060  FFD9         	movff	StringContains@This,fsr2l
 40801  008A62  C061  FFDA         	movff	StringContains@This+1,fsr2h
 40802  008A66  50DF               	movf	indf2,w,c
 40803  008A68  A4D8               	btfss	status,2,c
 40804  008A6A  D010               	goto	l10336
 40805                           
 40806                           ;MISC.c: 331: {
 40807                           ;MISC.c: 332: return 0;
 40808  008A6C  0E00               	movlw	0
 40809  008A6E  0012               	return	
 40810                           
 40811                           ;MISC.c: 333: }
 40812                           ;MISC.c: 334: }
 40813  008A70  D00D               	goto	l10336
 40814  008A72                     l10332:
 40815                           
 40816                           ;MISC.c: 335: else
 40817                           ;MISC.c: 336: {
 40818                           ;MISC.c: 337: That -= MatchCount;
 40819  008A72  0100               	movlb	0	; () banked
 40820  008A74  5167               	movf	StringContains@MatchCount& (0+255),w,b
 40821  008A76  0D01               	mullw	1
 40822  008A78  50F3               	movf	prodl,w,c
 40823  008A7A  0100               	movlb	0	; () banked
 40824  008A7C  5F62               	subwf	StringContains@That& (0+255),f,b
 40825  008A7E  50F4               	movf	prodh,w,c
 40826  008A80  0100               	movlb	0	; () banked
 40827  008A82  5B63               	subwfb	(StringContains@That+1)& (0+255),f,b
 40828                           
 40829                           ; BSR set to: 0
 40830                           ;MISC.c: 338: MatchCount = 0;
 40831  008A84  0E00               	movlw	0
 40832  008A86  0100               	movlb	0	; () banked
 40833  008A88  6F67               	movwf	StringContains@MatchCount& (0+255),b
 40834  008A8A  D000               	goto	l10336
 40835  008A8C                     l10336:
 40836                           
 40837                           ;MISC.c: 339: }
 40838                           ;MISC.c: 340: This++;
 40839  008A8C  0100               	movlb	0	; () banked
 40840  008A8E  4B60               	infsnz	StringContains@This& (0+255),f,b
 40841  008A90  2B61               	incf	(StringContains@This+1)& (0+255),f,b
 40842  008A92  D000               	goto	l10338
 40843  008A94                     l10338:
 40844  008A94  C060  FFD9         	movff	StringContains@This,fsr2l
 40845  008A98  C061  FFDA         	movff	StringContains@This+1,fsr2h
 40846  008A9C  50DF               	movf	indf2,w,c
 40847  008A9E  A4D8               	btfss	status,2,c
 40848  008AA0  D79F               	goto	l10310
 40849                           
 40850                           ;MISC.c: 341: }
 40851                           ;MISC.c: 342: return 0;
 40852  008AA2  0E00               	movlw	0
 40853  008AA4  0012               	return	
 40854  008AA6  0012               	return		;funcret
 40855  008AA8                     __end_of_StringContains:
 40856                           	opt stack 0
 40857                           tblptru	equ	0xFF8
 40858                           tblptrh	equ	0xFF7
 40859                           tblptrl	equ	0xFF6
 40860                           tablat	equ	0xFF5
 40861                           prodh	equ	0xFF4
 40862                           prodl	equ	0xFF3
 40863                           intcon	equ	0xFF2
 40864                           intcon2	equ	0xFF1
 40865                           indf0	equ	0xFEF
 40866                           postinc0	equ	0xFEE
 40867                           plusw0	equ	0xFEB
 40868                           fsr0h	equ	0xFEA
 40869                           fsr0l	equ	0xFE9
 40870                           wreg	equ	0xFE8
 40871                           indf1	equ	0xFE7
 40872                           postdec1	equ	0xFE5
 40873                           fsr1h	equ	0xFE2
 40874                           fsr1l	equ	0xFE1
 40875                           indf2	equ	0xFDF
 40876                           postinc2	equ	0xFDE
 40877                           postdec2	equ	0xFDD
 40878                           plusw2	equ	0xFDB
 40879                           fsr2h	equ	0xFDA
 40880                           fsr2l	equ	0xFD9
 40881                           status	equ	0xFD8
 40882                           
 40883 ;; *************** function _ResetBlue *****************
 40884 ;; Defined at:
 40885 ;;		line 120 in file "Bluetooth.c"
 40886 ;; Parameters:    Size  Location     Type
 40887 ;;		None
 40888 ;; Auto vars:     Size  Location     Type
 40889 ;;		None
 40890 ;; Return value:  Size  Location     Type
 40891 ;;		None               void
 40892 ;; Registers used:
 40893 ;;		wreg, status,2, status,0, cstack
 40894 ;; Tracked objects:
 40895 ;;		On entry : 0/0
 40896 ;;		On exit  : 0/0
 40897 ;;		Unchanged: 0/0
 40898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40903 ;;Total ram usage:        0 bytes
 40904 ;; Hardware stack levels used:    1
 40905 ;; Hardware stack levels required when called:    6
 40906 ;; This function calls:
 40907 ;;		_delayUS
 40908 ;; This function is called by:
 40909 ;;		_InitBluetooth
 40910 ;;		_EnterCommandMode
 40911 ;; This function uses a non-reentrant model
 40912 ;;
 40913                           
 40914                           	psect	text97
 40915  00945C                     __ptext97:
 40916                           	opt stack 0
 40917  00945C                     _ResetBlue:
 40918                           	opt stack 21
 40919                           
 40920                           ;Bluetooth.c: 122: LATA &= ~0x04;
 40921                           
 40922                           ;incstack = 0
 40923  00945C  9489               	bcf	3977,2,c	;volatile
 40924                           
 40925                           ;Bluetooth.c: 123: delayUS(50000);
 40926  00945E  0E50               	movlw	80
 40927  009460  0100               	movlb	0	; () banked
 40928  009462  6F60               	movwf	delayUS@US& (0+255),b
 40929  009464  0EC3               	movlw	195
 40930  009466  6F61               	movwf	(delayUS@US+1)& (0+255),b
 40931  009468  0E00               	movlw	0
 40932  00946A  6F62               	movwf	(delayUS@US+2)& (0+255),b
 40933  00946C  0E00               	movlw	0
 40934  00946E  6F63               	movwf	(delayUS@US+3)& (0+255),b
 40935  009470  EC96  F053         	call	_delayUS	;wreg free
 40936                           
 40937                           ;Bluetooth.c: 124: delayUS(50000);
 40938  009474  0E50               	movlw	80
 40939  009476  0100               	movlb	0	; () banked
 40940  009478  6F60               	movwf	delayUS@US& (0+255),b
 40941  00947A  0EC3               	movlw	195
 40942  00947C  6F61               	movwf	(delayUS@US+1)& (0+255),b
 40943  00947E  0E00               	movlw	0
 40944  009480  6F62               	movwf	(delayUS@US+2)& (0+255),b
 40945  009482  0E00               	movlw	0
 40946  009484  6F63               	movwf	(delayUS@US+3)& (0+255),b
 40947  009486  EC96  F053         	call	_delayUS	;wreg free
 40948                           
 40949                           ;Bluetooth.c: 125: delayUS(50000);
 40950  00948A  0E50               	movlw	80
 40951  00948C  0100               	movlb	0	; () banked
 40952  00948E  6F60               	movwf	delayUS@US& (0+255),b
 40953  009490  0EC3               	movlw	195
 40954  009492  6F61               	movwf	(delayUS@US+1)& (0+255),b
 40955  009494  0E00               	movlw	0
 40956  009496  6F62               	movwf	(delayUS@US+2)& (0+255),b
 40957  009498  0E00               	movlw	0
 40958  00949A  6F63               	movwf	(delayUS@US+3)& (0+255),b
 40959  00949C  EC96  F053         	call	_delayUS	;wreg free
 40960                           
 40961                           ;Bluetooth.c: 126: delayUS(50000);
 40962  0094A0  0E50               	movlw	80
 40963  0094A2  0100               	movlb	0	; () banked
 40964  0094A4  6F60               	movwf	delayUS@US& (0+255),b
 40965  0094A6  0EC3               	movlw	195
 40966  0094A8  6F61               	movwf	(delayUS@US+1)& (0+255),b
 40967  0094AA  0E00               	movlw	0
 40968  0094AC  6F62               	movwf	(delayUS@US+2)& (0+255),b
 40969  0094AE  0E00               	movlw	0
 40970  0094B0  6F63               	movwf	(delayUS@US+3)& (0+255),b
 40971  0094B2  EC96  F053         	call	_delayUS	;wreg free
 40972                           
 40973                           ;Bluetooth.c: 127: delayUS(50000);
 40974  0094B6  0E50               	movlw	80
 40975  0094B8  0100               	movlb	0	; () banked
 40976  0094BA  6F60               	movwf	delayUS@US& (0+255),b
 40977  0094BC  0EC3               	movlw	195
 40978  0094BE  6F61               	movwf	(delayUS@US+1)& (0+255),b
 40979  0094C0  0E00               	movlw	0
 40980  0094C2  6F62               	movwf	(delayUS@US+2)& (0+255),b
 40981  0094C4  0E00               	movlw	0
 40982  0094C6  6F63               	movwf	(delayUS@US+3)& (0+255),b
 40983  0094C8  EC96  F053         	call	_delayUS	;wreg free
 40984                           
 40985                           ;Bluetooth.c: 128: LATA |= 0x04;
 40986  0094CC  8489               	bsf	3977,2,c	;volatile
 40987                           
 40988                           ;Bluetooth.c: 129: delayUS(50000);
 40989  0094CE  0E50               	movlw	80
 40990  0094D0  0100               	movlb	0	; () banked
 40991  0094D2  6F60               	movwf	delayUS@US& (0+255),b
 40992  0094D4  0EC3               	movlw	195
 40993  0094D6  6F61               	movwf	(delayUS@US+1)& (0+255),b
 40994  0094D8  0E00               	movlw	0
 40995  0094DA  6F62               	movwf	(delayUS@US+2)& (0+255),b
 40996  0094DC  0E00               	movlw	0
 40997  0094DE  6F63               	movwf	(delayUS@US+3)& (0+255),b
 40998  0094E0  EC96  F053         	call	_delayUS	;wreg free
 40999                           
 41000                           ;Bluetooth.c: 130: delayUS(50000);
 41001  0094E4  0E50               	movlw	80
 41002  0094E6  0100               	movlb	0	; () banked
 41003  0094E8  6F60               	movwf	delayUS@US& (0+255),b
 41004  0094EA  0EC3               	movlw	195
 41005  0094EC  6F61               	movwf	(delayUS@US+1)& (0+255),b
 41006  0094EE  0E00               	movlw	0
 41007  0094F0  6F62               	movwf	(delayUS@US+2)& (0+255),b
 41008  0094F2  0E00               	movlw	0
 41009  0094F4  6F63               	movwf	(delayUS@US+3)& (0+255),b
 41010  0094F6  EC96  F053         	call	_delayUS	;wreg free
 41011                           
 41012                           ;Bluetooth.c: 131: delayUS(50000);
 41013  0094FA  0E50               	movlw	80
 41014  0094FC  0100               	movlb	0	; () banked
 41015  0094FE  6F60               	movwf	delayUS@US& (0+255),b
 41016  009500  0EC3               	movlw	195
 41017  009502  6F61               	movwf	(delayUS@US+1)& (0+255),b
 41018  009504  0E00               	movlw	0
 41019  009506  6F62               	movwf	(delayUS@US+2)& (0+255),b
 41020  009508  0E00               	movlw	0
 41021  00950A  6F63               	movwf	(delayUS@US+3)& (0+255),b
 41022  00950C  EC96  F053         	call	_delayUS	;wreg free
 41023                           
 41024                           ;Bluetooth.c: 132: delayUS(50000);
 41025  009510  0E50               	movlw	80
 41026  009512  0100               	movlb	0	; () banked
 41027  009514  6F60               	movwf	delayUS@US& (0+255),b
 41028  009516  0EC3               	movlw	195
 41029  009518  6F61               	movwf	(delayUS@US+1)& (0+255),b
 41030  00951A  0E00               	movlw	0
 41031  00951C  6F62               	movwf	(delayUS@US+2)& (0+255),b
 41032  00951E  0E00               	movlw	0
 41033  009520  6F63               	movwf	(delayUS@US+3)& (0+255),b
 41034  009522  EC96  F053         	call	_delayUS	;wreg free
 41035                           
 41036                           ;Bluetooth.c: 133: delayUS(50000);
 41037  009526  0E50               	movlw	80
 41038  009528  0100               	movlb	0	; () banked
 41039  00952A  6F60               	movwf	delayUS@US& (0+255),b
 41040  00952C  0EC3               	movlw	195
 41041  00952E  6F61               	movwf	(delayUS@US+1)& (0+255),b
 41042  009530  0E00               	movlw	0
 41043  009532  6F62               	movwf	(delayUS@US+2)& (0+255),b
 41044  009534  0E00               	movlw	0
 41045  009536  6F63               	movwf	(delayUS@US+3)& (0+255),b
 41046  009538  EC96  F053         	call	_delayUS	;wreg free
 41047  00953C  0012               	return		;funcret
 41048  00953E                     __end_of_ResetBlue:
 41049                           	opt stack 0
 41050                           tblptru	equ	0xFF8
 41051                           tblptrh	equ	0xFF7
 41052                           tblptrl	equ	0xFF6
 41053                           tablat	equ	0xFF5
 41054                           prodh	equ	0xFF4
 41055                           prodl	equ	0xFF3
 41056                           intcon	equ	0xFF2
 41057                           intcon2	equ	0xFF1
 41058                           indf0	equ	0xFEF
 41059                           postinc0	equ	0xFEE
 41060                           plusw0	equ	0xFEB
 41061                           fsr0h	equ	0xFEA
 41062                           fsr0l	equ	0xFE9
 41063                           wreg	equ	0xFE8
 41064                           indf1	equ	0xFE7
 41065                           postdec1	equ	0xFE5
 41066                           fsr1h	equ	0xFE2
 41067                           fsr1l	equ	0xFE1
 41068                           indf2	equ	0xFDF
 41069                           postinc2	equ	0xFDE
 41070                           postdec2	equ	0xFDD
 41071                           plusw2	equ	0xFDB
 41072                           fsr2h	equ	0xFDA
 41073                           fsr2l	equ	0xFD9
 41074                           status	equ	0xFD8
 41075                           
 41076 ;; *************** function _delayUS *****************
 41077 ;; Defined at:
 41078 ;;		line 53 in file "MISC.c"
 41079 ;; Parameters:    Size  Location     Type
 41080 ;;  US              4    0[BANK0 ] long 
 41081 ;; Auto vars:     Size  Location     Type
 41082 ;;  i               4    5[BANK0 ] long 
 41083 ;; Return value:  Size  Location     Type
 41084 ;;		None               void
 41085 ;; Registers used:
 41086 ;;		wreg, status,2, status,0
 41087 ;; Tracked objects:
 41088 ;;		On entry : 0/0
 41089 ;;		On exit  : 0/0
 41090 ;;		Unchanged: 0/0
 41091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41092 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41093 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41094 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41095 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41096 ;;Total ram usage:        9 bytes
 41097 ;; Hardware stack levels used:    1
 41098 ;; Hardware stack levels required when called:    5
 41099 ;; This function calls:
 41100 ;;		Nothing
 41101 ;; This function is called by:
 41102 ;;		_main
 41103 ;;		_InternalADC_Read
 41104 ;;		_UseIRCode
 41105 ;;		_SendNEC_wait
 41106 ;;		_ReadCodeButtons
 41107 ;;		_ResetBlue
 41108 ;;		_EnterCommandMode
 41109 ;;		_BluetoothInitialSetup
 41110 ;;		_UseBluetooth
 41111 ;;		_WaitForIRsignal
 41112 ;;		_CalibrateDelay
 41113 ;; This function uses a non-reentrant model
 41114 ;;
 41115                           
 41116                           	psect	text98
 41117  00A72C                     __ptext98:
 41118                           	opt stack 0
 41119  00A72C                     _delayUS:
 41120                           	opt stack 25
 41121                           
 41122                           ;MISC.c: 55: long i;
 41123                           ;MISC.c: 56: for(i=0; i<US; i += 2)
 41124                           
 41125                           ;incstack = 0
 41126  00A72C  0E00               	movlw	0
 41127  00A72E  0100               	movlb	0	; () banked
 41128  00A730  6F65               	movwf	delayUS@i& (0+255),b
 41129  00A732  0E00               	movlw	0
 41130  00A734  6F66               	movwf	(delayUS@i+1)& (0+255),b
 41131  00A736  0E00               	movlw	0
 41132  00A738  6F67               	movwf	(delayUS@i+2)& (0+255),b
 41133  00A73A  0E00               	movlw	0
 41134  00A73C  6F68               	movwf	(delayUS@i+3)& (0+255),b
 41135  00A73E  D008               	goto	l357
 41136  00A740                     l358:
 41137                           
 41138                           ; BSR set to: 0
 41139                           ;MISC.c: 57: {
 41140                           ;MISC.c: 58: __nop();
 41141  00A740  F000               	nop	
 41142  00A742  0E02               	movlw	2
 41143  00A744  0100               	movlb	0	; () banked
 41144  00A746  2765               	addwf	delayUS@i& (0+255),f,b
 41145  00A748  0E00               	movlw	0
 41146  00A74A  2366               	addwfc	(delayUS@i+1)& (0+255),f,b
 41147  00A74C  2367               	addwfc	(delayUS@i+2)& (0+255),f,b
 41148  00A74E  2368               	addwfc	(delayUS@i+3)& (0+255),f,b
 41149  00A750                     l357:
 41150                           
 41151                           ; BSR set to: 0
 41152  00A750  0100               	movlb	0	; () banked
 41153  00A752  5160               	movf	delayUS@US& (0+255),w,b
 41154  00A754  0100               	movlb	0	; () banked
 41155  00A756  5D65               	subwf	delayUS@i& (0+255),w,b
 41156  00A758  0100               	movlb	0	; () banked
 41157  00A75A  5161               	movf	(delayUS@US+1)& (0+255),w,b
 41158  00A75C  0100               	movlb	0	; () banked
 41159  00A75E  5966               	subwfb	(delayUS@i+1)& (0+255),w,b
 41160  00A760  0100               	movlb	0	; () banked
 41161  00A762  5162               	movf	(delayUS@US+2)& (0+255),w,b
 41162  00A764  0100               	movlb	0	; () banked
 41163  00A766  5967               	subwfb	(delayUS@i+2)& (0+255),w,b
 41164  00A768  0100               	movlb	0	; () banked
 41165  00A76A  5168               	movf	(delayUS@i+3)& (0+255),w,b
 41166  00A76C  0A80               	xorlw	128
 41167  00A76E  0100               	movlb	0	; () banked
 41168  00A770  6F64               	movwf	??_delayUS& (0+255),b
 41169  00A772  0100               	movlb	0	; () banked
 41170  00A774  5163               	movf	(delayUS@US+3)& (0+255),w,b
 41171  00A776  0A80               	xorlw	128
 41172  00A778  0100               	movlb	0	; () banked
 41173  00A77A  5964               	subwfb	??_delayUS& (0+255),w,b
 41174  00A77C  A0D8               	btfss	status,0,c
 41175  00A77E  D7E0               	goto	l358
 41176                           
 41177                           ; BSR set to: 0
 41178                           
 41179                           ; BSR set to: 0
 41180  00A780  0012               	return		;funcret
 41181  00A782                     __end_of_delayUS:
 41182                           	opt stack 0
 41183                           tblptru	equ	0xFF8
 41184                           tblptrh	equ	0xFF7
 41185                           tblptrl	equ	0xFF6
 41186                           tablat	equ	0xFF5
 41187                           prodh	equ	0xFF4
 41188                           prodl	equ	0xFF3
 41189                           intcon	equ	0xFF2
 41190                           intcon2	equ	0xFF1
 41191                           indf0	equ	0xFEF
 41192                           postinc0	equ	0xFEE
 41193                           plusw0	equ	0xFEB
 41194                           fsr0h	equ	0xFEA
 41195                           fsr0l	equ	0xFE9
 41196                           wreg	equ	0xFE8
 41197                           indf1	equ	0xFE7
 41198                           postdec1	equ	0xFE5
 41199                           fsr1h	equ	0xFE2
 41200                           fsr1l	equ	0xFE1
 41201                           indf2	equ	0xFDF
 41202                           postinc2	equ	0xFDE
 41203                           postdec2	equ	0xFDD
 41204                           plusw2	equ	0xFDB
 41205                           fsr2h	equ	0xFDA
 41206                           fsr2l	equ	0xFD9
 41207                           status	equ	0xFD8
 41208                           
 41209 ;; *************** function _ClearUSART *****************
 41210 ;; Defined at:
 41211 ;;		line 250 in file "UART.c"
 41212 ;; Parameters:    Size  Location     Type
 41213 ;;		None
 41214 ;; Auto vars:     Size  Location     Type
 41215 ;;		None
 41216 ;; Return value:  Size  Location     Type
 41217 ;;		None               void
 41218 ;; Registers used:
 41219 ;;		wreg, status,2, cstack
 41220 ;; Tracked objects:
 41221 ;;		On entry : 0/0
 41222 ;;		On exit  : 0/0
 41223 ;;		Unchanged: 0/0
 41224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41229 ;;Total ram usage:        0 bytes
 41230 ;; Hardware stack levels used:    1
 41231 ;; Hardware stack levels required when called:    6
 41232 ;; This function calls:
 41233 ;;		_ReadUSART
 41234 ;; This function is called by:
 41235 ;;		_main
 41236 ;;		_InitUART
 41237 ;;		_InitBluetooth
 41238 ;;		_EnterCommandMode
 41239 ;;		_BluetoothInitialSetup
 41240 ;;		_UseBluetooth
 41241 ;; This function uses a non-reentrant model
 41242 ;;
 41243                           
 41244                           	psect	text99
 41245  00AE30                     __ptext99:
 41246                           	opt stack 0
 41247  00AE30                     _ClearUSART:
 41248                           	opt stack 23
 41249                           
 41250                           ;UART.c: 252: RCSTAbits.CREN = 0;
 41251                           
 41252                           ; BSR set to: 0
 41253                           ;incstack = 0
 41254  00AE30  98AB               	bcf	4011,4,c	;volatile
 41255                           
 41256                           ;UART.c: 253: RCSTAbits.CREN = 1;
 41257  00AE32  88AB               	bsf	4011,4,c	;volatile
 41258                           
 41259                           ;UART.c: 254: ReadUSART();
 41260  00AE34  ECAE  F056         	call	_ReadUSART	;wreg free
 41261                           
 41262                           ;UART.c: 255: ReadUSART();
 41263  00AE38  ECAE  F056         	call	_ReadUSART	;wreg free
 41264                           
 41265                           ;UART.c: 256: ReadUSART();
 41266  00AE3C  ECAE  F056         	call	_ReadUSART	;wreg free
 41267  00AE40  0012               	return		;funcret
 41268  00AE42                     __end_of_ClearUSART:
 41269                           	opt stack 0
 41270                           tblptru	equ	0xFF8
 41271                           tblptrh	equ	0xFF7
 41272                           tblptrl	equ	0xFF6
 41273                           tablat	equ	0xFF5
 41274                           prodh	equ	0xFF4
 41275                           prodl	equ	0xFF3
 41276                           intcon	equ	0xFF2
 41277                           intcon2	equ	0xFF1
 41278                           indf0	equ	0xFEF
 41279                           postinc0	equ	0xFEE
 41280                           plusw0	equ	0xFEB
 41281                           fsr0h	equ	0xFEA
 41282                           fsr0l	equ	0xFE9
 41283                           wreg	equ	0xFE8
 41284                           indf1	equ	0xFE7
 41285                           postdec1	equ	0xFE5
 41286                           fsr1h	equ	0xFE2
 41287                           fsr1l	equ	0xFE1
 41288                           indf2	equ	0xFDF
 41289                           postinc2	equ	0xFDE
 41290                           postdec2	equ	0xFDD
 41291                           plusw2	equ	0xFDB
 41292                           fsr2h	equ	0xFDA
 41293                           fsr2l	equ	0xFD9
 41294                           status	equ	0xFD8
 41295                           
 41296 ;; *************** function _ReadUSART *****************
 41297 ;; Defined at:
 41298 ;;		line 263 in file "UART.c"
 41299 ;; Parameters:    Size  Location     Type
 41300 ;;		None
 41301 ;; Auto vars:     Size  Location     Type
 41302 ;;  data            1    0[BANK0 ] unsigned char 
 41303 ;; Return value:  Size  Location     Type
 41304 ;;                  1    wreg      unsigned char 
 41305 ;; Registers used:
 41306 ;;		wreg, status,2
 41307 ;; Tracked objects:
 41308 ;;		On entry : 0/0
 41309 ;;		On exit  : 0/0
 41310 ;;		Unchanged: 0/0
 41311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41316 ;;Total ram usage:        1 bytes
 41317 ;; Hardware stack levels used:    1
 41318 ;; Hardware stack levels required when called:    5
 41319 ;; This function calls:
 41320 ;;		Nothing
 41321 ;; This function is called by:
 41322 ;;		_ClearUSART
 41323 ;; This function uses a non-reentrant model
 41324 ;;
 41325                           
 41326                           	psect	text100
 41327  00AD5C                     __ptext100:
 41328                           	opt stack 0
 41329  00AD5C                     _ReadUSART:
 41330                           	opt stack 23
 41331                           
 41332                           ;UART.c: 265: unsigned char data;
 41333                           ;UART.c: 267: if(RCSTAbits.OERR)
 41334                           
 41335                           ;incstack = 0
 41336  00AD5C  A2AB               	btfss	4011,1,c	;volatile
 41337  00AD5E  D004               	goto	l828
 41338                           
 41339                           ;UART.c: 268: {
 41340                           ;UART.c: 270: RCSTAbits.CREN = 0;
 41341  00AD60  98AB               	bcf	4011,4,c	;volatile
 41342                           
 41343                           ;UART.c: 271: RCSTAbits.CREN = 1;
 41344  00AD62  88AB               	bsf	4011,4,c	;volatile
 41345                           
 41346                           ;UART.c: 272: return 0;
 41347  00AD64  0E00               	movlw	0
 41348  00AD66  0012               	return	
 41349  00AD68                     l828:
 41350                           
 41351                           ;UART.c: 273: }
 41352                           ;UART.c: 275: data = RCREG;
 41353  00AD68  CFAE F060          	movff	4014,ReadUSART@data	;volatile
 41354                           
 41355                           ;UART.c: 276: return (data);
 41356  00AD6C  0100               	movlb	0	; () banked
 41357  00AD6E  5160               	movf	ReadUSART@data& (0+255),w,b
 41358  00AD70  0012               	return	
 41359                           
 41360                           ; BSR set to: 0
 41361  00AD72  0012               	return		;funcret
 41362  00AD74                     __end_of_ReadUSART:
 41363                           	opt stack 0
 41364                           tblptru	equ	0xFF8
 41365                           tblptrh	equ	0xFF7
 41366                           tblptrl	equ	0xFF6
 41367                           tablat	equ	0xFF5
 41368                           prodh	equ	0xFF4
 41369                           prodl	equ	0xFF3
 41370                           intcon	equ	0xFF2
 41371                           intcon2	equ	0xFF1
 41372                           indf0	equ	0xFEF
 41373                           postinc0	equ	0xFEE
 41374                           plusw0	equ	0xFEB
 41375                           fsr0h	equ	0xFEA
 41376                           fsr0l	equ	0xFE9
 41377                           wreg	equ	0xFE8
 41378                           indf1	equ	0xFE7
 41379                           postdec1	equ	0xFE5
 41380                           fsr1h	equ	0xFE2
 41381                           fsr1l	equ	0xFE1
 41382                           indf2	equ	0xFDF
 41383                           postinc2	equ	0xFDE
 41384                           postdec2	equ	0xFDD
 41385                           plusw2	equ	0xFDB
 41386                           fsr2h	equ	0xFDA
 41387                           fsr2l	equ	0xFD9
 41388                           status	equ	0xFD8
 41389                           
 41390 ;; *************** function _BlueConnected *****************
 41391 ;; Defined at:
 41392 ;;		line 105 in file "Bluetooth.c"
 41393 ;; Parameters:    Size  Location     Type
 41394 ;;		None
 41395 ;; Auto vars:     Size  Location     Type
 41396 ;;		None
 41397 ;; Return value:  Size  Location     Type
 41398 ;;                  1    wreg      unsigned char 
 41399 ;; Registers used:
 41400 ;;		wreg
 41401 ;; Tracked objects:
 41402 ;;		On entry : 0/0
 41403 ;;		On exit  : 0/0
 41404 ;;		Unchanged: 0/0
 41405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41410 ;;Total ram usage:        0 bytes
 41411 ;; Hardware stack levels used:    1
 41412 ;; Hardware stack levels required when called:    5
 41413 ;; This function calls:
 41414 ;;		Nothing
 41415 ;; This function is called by:
 41416 ;;		_main
 41417 ;;		_EnterCommandMode
 41418 ;; This function uses a non-reentrant model
 41419 ;;
 41420                           
 41421                           	psect	text101
 41422  00AEAA                     __ptext101:
 41423                           	opt stack 0
 41424  00AEAA                     _BlueConnected:
 41425                           	opt stack 22
 41426                           
 41427                           ;Bluetooth.c: 108: if((PORTA & 0x02) == 0x02)
 41428                           
 41429                           ;incstack = 0
 41430  00AEAA  A280               	btfss	3968,1,c	;volatile
 41431  00AEAC  D002               	goto	l9884
 41432                           
 41433                           ;Bluetooth.c: 109: {
 41434                           ;Bluetooth.c: 110: return 1;
 41435  00AEAE  0E01               	movlw	1
 41436  00AEB0  0012               	return	
 41437  00AEB2                     l9884:
 41438                           
 41439                           ;Bluetooth.c: 111: }
 41440                           ;Bluetooth.c: 112: return 0;
 41441  00AEB2  0E00               	movlw	0
 41442  00AEB4  0012               	return	
 41443  00AEB6  0012               	return		;funcret
 41444  00AEB8                     __end_of_BlueConnected:
 41445                           	opt stack 0
 41446                           tblptru	equ	0xFF8
 41447                           tblptrh	equ	0xFF7
 41448                           tblptrl	equ	0xFF6
 41449                           tablat	equ	0xFF5
 41450                           prodh	equ	0xFF4
 41451                           prodl	equ	0xFF3
 41452                           intcon	equ	0xFF2
 41453                           intcon2	equ	0xFF1
 41454                           indf0	equ	0xFEF
 41455                           postinc0	equ	0xFEE
 41456                           plusw0	equ	0xFEB
 41457                           fsr0h	equ	0xFEA
 41458                           fsr0l	equ	0xFE9
 41459                           wreg	equ	0xFE8
 41460                           indf1	equ	0xFE7
 41461                           postdec1	equ	0xFE5
 41462                           fsr1h	equ	0xFE2
 41463                           fsr1l	equ	0xFE1
 41464                           indf2	equ	0xFDF
 41465                           postinc2	equ	0xFDE
 41466                           postdec2	equ	0xFDD
 41467                           plusw2	equ	0xFDB
 41468                           fsr2h	equ	0xFDA
 41469                           fsr2l	equ	0xFD9
 41470                           status	equ	0xFD8
 41471                           
 41472 ;; *************** function _BufferCopy *****************
 41473 ;; Defined at:
 41474 ;;		line 217 in file "MISC.c"
 41475 ;; Parameters:    Size  Location     Type
 41476 ;;  from            2    8[BANK0 ] PTR unsigned char 
 41477 ;;		 -> BluetoothInitialSetup@BluetoothVersionLine2(30), BluetoothInitialSetup@BluetoothVersionLine1(30), StringAddEqual
      +@temp(255), Init_System@buf(50), 
 41478 ;;		 -> BluetoothBroadcast(21), ReceivedString(100), 
 41479 ;;  to              2   10[BANK0 ] PTR unsigned char 
 41480 ;;		 -> BluetoothInitialSetup@BroadcastTEMP(21), BluetoothFirmware2(30), BluetoothFirmware1(30), BluetoothBroadcast(21),
      + 
 41481 ;;		 -> ReceivedString(100), main@BroadcastTEMP(21), main@BluetoothString(100), 
 41482 ;;  count           1   12[BANK0 ] unsigned char 
 41483 ;;  shift           1   13[BANK0 ] unsigned char 
 41484 ;; Auto vars:     Size  Location     Type
 41485 ;;  i               1   14[BANK0 ] unsigned char 
 41486 ;; Return value:  Size  Location     Type
 41487 ;;		None               void
 41488 ;; Registers used:
 41489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41490 ;; Tracked objects:
 41491 ;;		On entry : 0/0
 41492 ;;		On exit  : 0/0
 41493 ;;		Unchanged: 0/0
 41494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41495 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41498 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41499 ;;Total ram usage:        7 bytes
 41500 ;; Hardware stack levels used:    1
 41501 ;; Hardware stack levels required when called:    6
 41502 ;; This function calls:
 41503 ;;		_cleanBuffer
 41504 ;; This function is called by:
 41505 ;;		_main
 41506 ;;		_Init_System
 41507 ;;		_StringAddEqual
 41508 ;;		_BluetoothInitialSetup
 41509 ;;		_UseBluetooth
 41510 ;; This function uses a non-reentrant model
 41511 ;;
 41512                           
 41513                           	psect	text102
 41514  00A26C                     __ptext102:
 41515                           	opt stack 0
 41516  00A26C                     _BufferCopy:
 41517                           	opt stack 22
 41518                           
 41519                           ;MISC.c: 219: unsigned char i=0;
 41520                           
 41521                           ;incstack = 0
 41522  00A26C  0E00               	movlw	0
 41523  00A26E  0100               	movlb	0	; () banked
 41524  00A270  6F6E               	movwf	BufferCopy@i& (0+255),b
 41525                           
 41526                           ; BSR set to: 0
 41527                           ;MISC.c: 220: cleanBuffer(to,count);
 41528  00A272  C06A  F060         	movff	BufferCopy@to,cleanBuffer@data
 41529  00A276  C06B  F061         	movff	BufferCopy@to+1,cleanBuffer@data+1
 41530  00A27A  C06C  F062         	movff	BufferCopy@count,cleanBuffer@count
 41531  00A27E  0100               	movlb	0	; () banked
 41532  00A280  6B63               	clrf	(cleanBuffer@count+1)& (0+255),b
 41533  00A282  EC3D  F053         	call	_cleanBuffer	;wreg free
 41534                           
 41535                           ;MISC.c: 221: for(i = shift; i>0;i--)
 41536  00A286  C06D  F06E         	movff	BufferCopy@shift,BufferCopy@i
 41537  00A28A                     l10416:
 41538  00A28A  0100               	movlb	0	; () banked
 41539  00A28C  516E               	movf	BufferCopy@i& (0+255),w,b
 41540  00A28E  0100               	movlb	0	; () banked
 41541  00A290  B4D8               	btfsc	status,2,c
 41542  00A292  D022               	goto	l10436
 41543  00A294  D001               	goto	l10420
 41544                           
 41545                           ; BSR set to: 0
 41546  00A296  D020               	goto	l10436
 41547  00A298                     l10420:
 41548                           
 41549                           ; BSR set to: 0
 41550                           ;MISC.c: 222: {
 41551                           ;MISC.c: 223: *to = ' ';
 41552  00A298  C06A  FFD9         	movff	BufferCopy@to,fsr2l
 41553  00A29C  C06B  FFDA         	movff	BufferCopy@to+1,fsr2h
 41554  00A2A0  0E20               	movlw	32
 41555  00A2A2  6EDF               	movwf	indf2,c
 41556                           
 41557                           ; BSR set to: 0
 41558                           ;MISC.c: 224: to++;
 41559  00A2A4  0100               	movlb	0	; () banked
 41560  00A2A6  4B6A               	infsnz	BufferCopy@to& (0+255),f,b
 41561  00A2A8  2B6B               	incf	(BufferCopy@to+1)& (0+255),f,b
 41562                           
 41563                           ; BSR set to: 0
 41564  00A2AA  0100               	movlb	0	; () banked
 41565  00A2AC  076E               	decf	BufferCopy@i& (0+255),f,b
 41566  00A2AE  D7ED               	goto	l10416
 41567                           
 41568                           ; BSR set to: 0
 41569                           ;MISC.c: 225: }
 41570                           ;MISC.c: 226: while(*from != 0 && count >0)
 41571                           
 41572                           ; BSR set to: 0
 41573  00A2B0  D013               	goto	l10436
 41574  00A2B2                     l10428:
 41575                           
 41576                           ; BSR set to: 0
 41577                           ;MISC.c: 227: {
 41578                           ;MISC.c: 228: *to = *from;
 41579  00A2B2  C068  FFD9         	movff	BufferCopy@from,fsr2l
 41580  00A2B6  C069  FFDA         	movff	BufferCopy@from+1,fsr2h
 41581  00A2BA  C06A  FFE1         	movff	BufferCopy@to,fsr1l
 41582  00A2BE  C06B  FFE2         	movff	BufferCopy@to+1,fsr1h
 41583  00A2C2  CFDF FFE7          	movff	indf2,indf1
 41584                           
 41585                           ; BSR set to: 0
 41586                           ;MISC.c: 229: from++;
 41587  00A2C6  0100               	movlb	0	; () banked
 41588  00A2C8  4B68               	infsnz	BufferCopy@from& (0+255),f,b
 41589  00A2CA  2B69               	incf	(BufferCopy@from+1)& (0+255),f,b
 41590                           
 41591                           ; BSR set to: 0
 41592                           ;MISC.c: 230: to++;
 41593  00A2CC  0100               	movlb	0	; () banked
 41594  00A2CE  4B6A               	infsnz	BufferCopy@to& (0+255),f,b
 41595  00A2D0  2B6B               	incf	(BufferCopy@to+1)& (0+255),f,b
 41596                           
 41597                           ; BSR set to: 0
 41598                           ;MISC.c: 231: count--;
 41599  00A2D2  0100               	movlb	0	; () banked
 41600  00A2D4  076C               	decf	BufferCopy@count& (0+255),f,b
 41601  00A2D6  D000               	goto	l10436
 41602  00A2D8                     l10436:
 41603                           
 41604                           ; BSR set to: 0
 41605  00A2D8  C068  FFD9         	movff	BufferCopy@from,fsr2l
 41606  00A2DC  C069  FFDA         	movff	BufferCopy@from+1,fsr2h
 41607  00A2E0  50DF               	movf	indf2,w,c
 41608  00A2E2  B4D8               	btfsc	status,2,c
 41609  00A2E4  0012               	return	
 41610                           
 41611                           ; BSR set to: 0
 41612  00A2E6  0100               	movlb	0	; () banked
 41613  00A2E8  516C               	movf	BufferCopy@count& (0+255),w,b
 41614  00A2EA  0100               	movlb	0	; () banked
 41615  00A2EC  B4D8               	btfsc	status,2,c
 41616  00A2EE  0012               	return	
 41617  00A2F0  D7E0               	goto	l10428
 41618                           
 41619                           ; BSR set to: 0
 41620  00A2F2  0012               	return	
 41621                           
 41622                           ; BSR set to: 0
 41623                           
 41624                           ; BSR set to: 0
 41625  00A2F4  0012               	return		;funcret
 41626  00A2F6                     __end_of_BufferCopy:
 41627                           	opt stack 0
 41628                           tblptru	equ	0xFF8
 41629                           tblptrh	equ	0xFF7
 41630                           tblptrl	equ	0xFF6
 41631                           tablat	equ	0xFF5
 41632                           prodh	equ	0xFF4
 41633                           prodl	equ	0xFF3
 41634                           intcon	equ	0xFF2
 41635                           intcon2	equ	0xFF1
 41636                           indf0	equ	0xFEF
 41637                           postinc0	equ	0xFEE
 41638                           plusw0	equ	0xFEB
 41639                           fsr0h	equ	0xFEA
 41640                           fsr0l	equ	0xFE9
 41641                           wreg	equ	0xFE8
 41642                           indf1	equ	0xFE7
 41643                           postdec1	equ	0xFE5
 41644                           fsr1h	equ	0xFE2
 41645                           fsr1l	equ	0xFE1
 41646                           indf2	equ	0xFDF
 41647                           postinc2	equ	0xFDE
 41648                           postdec2	equ	0xFDD
 41649                           plusw2	equ	0xFDB
 41650                           fsr2h	equ	0xFDA
 41651                           fsr2l	equ	0xFD9
 41652                           status	equ	0xFD8
 41653                           
 41654 ;; *************** function _cleanBuffer *****************
 41655 ;; Defined at:
 41656 ;;		line 177 in file "MISC.c"
 41657 ;; Parameters:    Size  Location     Type
 41658 ;;  data            2    0[BANK0 ] PTR unsigned char 
 41659 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@BluetoothVersionLine2(30), Bluetooth
      +InitialSetup@BluetoothVersionLine1(30), 
 41660 ;;		 -> BluetoothInitialSetup@BroadcastTEMP(21), BluetoothInitialSetup@buf(50), CommandString(100), StringAddEqual@temp(
      +255), 
 41661 ;;		 -> BluetoothFirmware2(30), BluetoothFirmware1(30), BluetoothBroadcast(21), ReceivedString(100), 
 41662 ;;		 -> main@BroadcastTEMP(21), main@BluetoothString(100), main@buf(100), 
 41663 ;;  count           2    2[BANK0 ] int 
 41664 ;; Auto vars:     Size  Location     Type
 41665 ;;  i               1    7[BANK0 ] unsigned char 
 41666 ;; Return value:  Size  Location     Type
 41667 ;;		None               void
 41668 ;; Registers used:
 41669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41670 ;; Tracked objects:
 41671 ;;		On entry : 0/0
 41672 ;;		On exit  : 0/0
 41673 ;;		Unchanged: 0/0
 41674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41677 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41678 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41679 ;;Total ram usage:        8 bytes
 41680 ;; Hardware stack levels used:    1
 41681 ;; Hardware stack levels required when called:    5
 41682 ;; This function calls:
 41683 ;;		Nothing
 41684 ;; This function is called by:
 41685 ;;		_main
 41686 ;;		_Init_System
 41687 ;;		_BufferCopy
 41688 ;;		_StringAddEqual
 41689 ;;		_InitBluetooth
 41690 ;;		_EnterCommandMode
 41691 ;;		_BluetoothInitialSetup
 41692 ;;		_UseBluetooth
 41693 ;; This function uses a non-reentrant model
 41694 ;;
 41695                           
 41696                           	psect	text103
 41697  00A67A                     __ptext103:
 41698                           	opt stack 0
 41699  00A67A                     _cleanBuffer:
 41700                           	opt stack 25
 41701                           
 41702                           ;MISC.c: 179: unsigned char i=0;
 41703                           
 41704                           ; BSR set to: 0
 41705                           ;incstack = 0
 41706  00A67A  0E00               	movlw	0
 41707  00A67C  0100               	movlb	0	; () banked
 41708  00A67E  6F67               	movwf	cleanBuffer@i& (0+255),b
 41709                           
 41710                           ;MISC.c: 180: for(i=0; i<count;i++)
 41711  00A680  0E00               	movlw	0
 41712  00A682  0100               	movlb	0	; () banked
 41713  00A684  6F67               	movwf	cleanBuffer@i& (0+255),b
 41714  00A686  D010               	goto	l9876
 41715  00A688                     l9872:
 41716                           
 41717                           ; BSR set to: 0
 41718                           ;MISC.c: 181: {
 41719                           ;MISC.c: 182: data[i]= 0;
 41720  00A688  0100               	movlb	0	; () banked
 41721  00A68A  5167               	movf	cleanBuffer@i& (0+255),w,b
 41722  00A68C  0D01               	mullw	1
 41723  00A68E  50F3               	movf	prodl,w,c
 41724  00A690  0100               	movlb	0	; () banked
 41725  00A692  2560               	addwf	cleanBuffer@data& (0+255),w,b
 41726  00A694  6ED9               	movwf	fsr2l,c
 41727  00A696  50F4               	movf	prodh,w,c
 41728  00A698  0100               	movlb	0	; () banked
 41729  00A69A  2161               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 41730  00A69C  6EDA               	movwf	fsr2h,c
 41731  00A69E  0E00               	movlw	0
 41732  00A6A0  6EDF               	movwf	indf2,c
 41733                           
 41734                           ; BSR set to: 0
 41735  00A6A2  0100               	movlb	0	; () banked
 41736  00A6A4  2B67               	incf	cleanBuffer@i& (0+255),f,b
 41737  00A6A6  D000               	goto	l9876
 41738  00A6A8                     l9876:
 41739                           
 41740                           ; BSR set to: 0
 41741  00A6A8  0100               	movlb	0	; () banked
 41742  00A6AA  5167               	movf	cleanBuffer@i& (0+255),w,b
 41743  00A6AC  0100               	movlb	0	; () banked
 41744  00A6AE  6F64               	movwf	??_cleanBuffer& (0+255),b
 41745  00A6B0  6B65               	clrf	(??_cleanBuffer+1)& (0+255),b
 41746  00A6B2  0100               	movlb	0	; () banked
 41747  00A6B4  5162               	movf	cleanBuffer@count& (0+255),w,b
 41748  00A6B6  0100               	movlb	0	; () banked
 41749  00A6B8  5D64               	subwf	??_cleanBuffer& (0+255),w,b
 41750  00A6BA  0100               	movlb	0	; () banked
 41751  00A6BC  5165               	movf	(??_cleanBuffer+1)& (0+255),w,b
 41752  00A6BE  0A80               	xorlw	128
 41753  00A6C0  0100               	movlb	0	; () banked
 41754  00A6C2  6F66               	movwf	(??_cleanBuffer+2)& (0+255),b
 41755  00A6C4  0100               	movlb	0	; () banked
 41756  00A6C6  5163               	movf	(cleanBuffer@count+1)& (0+255),w,b
 41757  00A6C8  0A80               	xorlw	128
 41758  00A6CA  0100               	movlb	0	; () banked
 41759  00A6CC  5966               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 41760  00A6CE  A0D8               	btfss	status,0,c
 41761  00A6D0  D7DB               	goto	l9872
 41762                           
 41763                           ; BSR set to: 0
 41764                           
 41765                           ; BSR set to: 0
 41766  00A6D2  0012               	return		;funcret
 41767  00A6D4                     __end_of_cleanBuffer:
 41768                           	opt stack 0
 41769                           tblptru	equ	0xFF8
 41770                           tblptrh	equ	0xFF7
 41771                           tblptrl	equ	0xFF6
 41772                           tablat	equ	0xFF5
 41773                           prodh	equ	0xFF4
 41774                           prodl	equ	0xFF3
 41775                           intcon	equ	0xFF2
 41776                           intcon2	equ	0xFF1
 41777                           indf0	equ	0xFEF
 41778                           postinc0	equ	0xFEE
 41779                           plusw0	equ	0xFEB
 41780                           fsr0h	equ	0xFEA
 41781                           fsr0l	equ	0xFE9
 41782                           wreg	equ	0xFE8
 41783                           indf1	equ	0xFE7
 41784                           postdec1	equ	0xFE5
 41785                           fsr1h	equ	0xFE2
 41786                           fsr1l	equ	0xFE1
 41787                           indf2	equ	0xFDF
 41788                           postinc2	equ	0xFDE
 41789                           postdec2	equ	0xFDD
 41790                           plusw2	equ	0xFDB
 41791                           fsr2h	equ	0xFDA
 41792                           fsr2l	equ	0xFD9
 41793                           status	equ	0xFD8
 41794                           
 41795 ;; *************** function _BluetoothConfigured *****************
 41796 ;; Defined at:
 41797 ;;		line 429 in file "Bluetooth.c"
 41798 ;; Parameters:    Size  Location     Type
 41799 ;;		None
 41800 ;; Auto vars:     Size  Location     Type
 41801 ;;		None
 41802 ;; Return value:  Size  Location     Type
 41803 ;;                  1    wreg      unsigned char 
 41804 ;; Registers used:
 41805 ;;		wreg, status,2, status,0
 41806 ;; Tracked objects:
 41807 ;;		On entry : 0/0
 41808 ;;		On exit  : 0/0
 41809 ;;		Unchanged: 0/0
 41810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41815 ;;Total ram usage:        0 bytes
 41816 ;; Hardware stack levels used:    1
 41817 ;; Hardware stack levels required when called:    5
 41818 ;; This function calls:
 41819 ;;		Nothing
 41820 ;; This function is called by:
 41821 ;;		_InitBluetooth
 41822 ;; This function uses a non-reentrant model
 41823 ;;
 41824                           
 41825                           	psect	text104
 41826  00AE42                     __ptext104:
 41827                           	opt stack 0
 41828  00AE42                     _BluetoothConfigured:
 41829                           	opt stack 23
 41830                           
 41831                           ;Bluetooth.c: 431: if(Global1.BlueToothFlag != 1)
 41832                           
 41833                           ; BSR set to: 0
 41834                           ;incstack = 0
 41835  00AE42  0102               	movlb	2	; () banked
 41836  00AE44  05D2               	decf	_Global1& (0+255),w,b
 41837  00AE46  B4D8               	btfsc	status,2,c
 41838  00AE48  D002               	goto	l11094
 41839                           
 41840                           ; BSR set to: 2
 41841                           ;Bluetooth.c: 432: {
 41842                           ;Bluetooth.c: 433: return 0;
 41843  00AE4A  0E00               	movlw	0
 41844                           
 41845                           ; BSR set to: 2
 41846  00AE4C  0012               	return	
 41847  00AE4E                     l11094:
 41848                           
 41849                           ; BSR set to: 2
 41850                           ;Bluetooth.c: 434: }
 41851                           ;Bluetooth.c: 435: return 1;
 41852  00AE4E  0E01               	movlw	1
 41853  00AE50  0012               	return	
 41854                           
 41855                           ; BSR set to: 2
 41856                           
 41857                           ; BSR set to: 2
 41858  00AE52  0012               	return		;funcret
 41859  00AE54                     __end_of_BluetoothConfigured:
 41860                           	opt stack 0
 41861                           tblptru	equ	0xFF8
 41862                           tblptrh	equ	0xFF7
 41863                           tblptrl	equ	0xFF6
 41864                           tablat	equ	0xFF5
 41865                           prodh	equ	0xFF4
 41866                           prodl	equ	0xFF3
 41867                           intcon	equ	0xFF2
 41868                           intcon2	equ	0xFF1
 41869                           indf0	equ	0xFEF
 41870                           postinc0	equ	0xFEE
 41871                           plusw0	equ	0xFEB
 41872                           fsr0h	equ	0xFEA
 41873                           fsr0l	equ	0xFE9
 41874                           wreg	equ	0xFE8
 41875                           indf1	equ	0xFE7
 41876                           postdec1	equ	0xFE5
 41877                           fsr1h	equ	0xFE2
 41878                           fsr1l	equ	0xFE1
 41879                           indf2	equ	0xFDF
 41880                           postinc2	equ	0xFDE
 41881                           postdec2	equ	0xFDD
 41882                           plusw2	equ	0xFDB
 41883                           fsr2h	equ	0xFDA
 41884                           fsr2l	equ	0xFD9
 41885                           status	equ	0xFD8
 41886                           
 41887 ;; *************** function _InitADC *****************
 41888 ;; Defined at:
 41889 ;;		line 137 in file "ADC.c"
 41890 ;; Parameters:    Size  Location     Type
 41891 ;;		None
 41892 ;; Auto vars:     Size  Location     Type
 41893 ;;		None
 41894 ;; Return value:  Size  Location     Type
 41895 ;;		None               void
 41896 ;; Registers used:
 41897 ;;		wreg, status,2, cstack
 41898 ;; Tracked objects:
 41899 ;;		On entry : 0/0
 41900 ;;		On exit  : 0/0
 41901 ;;		Unchanged: 0/0
 41902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41907 ;;Total ram usage:        0 bytes
 41908 ;; Hardware stack levels used:    1
 41909 ;; Hardware stack levels required when called:    6
 41910 ;; This function calls:
 41911 ;;		_ResetADC
 41912 ;; This function is called by:
 41913 ;;		_Init_System
 41914 ;; This function uses a non-reentrant model
 41915 ;;
 41916                           
 41917                           	psect	text105
 41918  00ADA2                     __ptext105:
 41919                           	opt stack 0
 41920  00ADA2                     _InitADC:
 41921                           	opt stack 23
 41922                           
 41923                           ;ADC.c: 139: ResetADC();
 41924                           
 41925                           ; BSR set to: 2
 41926                           ;incstack = 0
 41927  00ADA2  EC5C  F057         	call	_ResetADC	;wreg free
 41928                           
 41929                           ;ADC.c: 140: ADCON2bits.ADFM = 1;
 41930  00ADA6  8EC0               	bsf	4032,7,c	;volatile
 41931                           
 41932                           ;ADC.c: 141: ADCON2bits.ACQT = 0x7;
 41933  00ADA8  86C0               	bsf	4032,3,c	;volatile
 41934  00ADAA  88C0               	bsf	4032,4,c	;volatile
 41935  00ADAC  8AC0               	bsf	4032,5,c	;volatile
 41936                           
 41937                           ;ADC.c: 142: ADCON2bits.ADCS = 0x4;
 41938  00ADAE  50C0               	movf	4032,w,c	;volatile
 41939  00ADB0  0BF8               	andlw	-8
 41940  00ADB2  0904               	iorlw	4
 41941  00ADB4  6EC0               	movwf	4032,c	;volatile
 41942  00ADB6  0012               	return		;funcret
 41943  00ADB8                     __end_of_InitADC:
 41944                           	opt stack 0
 41945                           tblptru	equ	0xFF8
 41946                           tblptrh	equ	0xFF7
 41947                           tblptrl	equ	0xFF6
 41948                           tablat	equ	0xFF5
 41949                           prodh	equ	0xFF4
 41950                           prodl	equ	0xFF3
 41951                           intcon	equ	0xFF2
 41952                           intcon2	equ	0xFF1
 41953                           indf0	equ	0xFEF
 41954                           postinc0	equ	0xFEE
 41955                           plusw0	equ	0xFEB
 41956                           fsr0h	equ	0xFEA
 41957                           fsr0l	equ	0xFE9
 41958                           wreg	equ	0xFE8
 41959                           indf1	equ	0xFE7
 41960                           postdec1	equ	0xFE5
 41961                           fsr1h	equ	0xFE2
 41962                           fsr1l	equ	0xFE1
 41963                           indf2	equ	0xFDF
 41964                           postinc2	equ	0xFDE
 41965                           postdec2	equ	0xFDD
 41966                           plusw2	equ	0xFDB
 41967                           fsr2h	equ	0xFDA
 41968                           fsr2l	equ	0xFD9
 41969                           status	equ	0xFD8
 41970                           
 41971 ;; *************** function _ResetADC *****************
 41972 ;; Defined at:
 41973 ;;		line 125 in file "ADC.c"
 41974 ;; Parameters:    Size  Location     Type
 41975 ;;		None
 41976 ;; Auto vars:     Size  Location     Type
 41977 ;;		None
 41978 ;; Return value:  Size  Location     Type
 41979 ;;		None               void
 41980 ;; Registers used:
 41981 ;;		wreg, status,2
 41982 ;; Tracked objects:
 41983 ;;		On entry : 0/0
 41984 ;;		On exit  : 0/0
 41985 ;;		Unchanged: 0/0
 41986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41991 ;;Total ram usage:        0 bytes
 41992 ;; Hardware stack levels used:    1
 41993 ;; Hardware stack levels required when called:    5
 41994 ;; This function calls:
 41995 ;;		Nothing
 41996 ;; This function is called by:
 41997 ;;		_InitADC
 41998 ;; This function uses a non-reentrant model
 41999 ;;
 42000                           
 42001                           	psect	text106
 42002  00AEB8                     __ptext106:
 42003                           	opt stack 0
 42004  00AEB8                     _ResetADC:
 42005                           	opt stack 23
 42006                           
 42007                           ;ADC.c: 127: ADCON0 =0;
 42008                           
 42009                           ;incstack = 0
 42010  00AEB8  0E00               	movlw	0
 42011  00AEBA  6EC2               	movwf	4034,c	;volatile
 42012                           
 42013                           ;ADC.c: 128: ADCON1 =0;
 42014  00AEBC  0E00               	movlw	0
 42015  00AEBE  6EC1               	movwf	4033,c	;volatile
 42016                           
 42017                           ;ADC.c: 129: ADCON2 =0;
 42018  00AEC0  0E00               	movlw	0
 42019  00AEC2  6EC0               	movwf	4032,c	;volatile
 42020  00AEC4  0012               	return		;funcret
 42021  00AEC6                     __end_of_ResetADC:
 42022                           	opt stack 0
 42023                           tblptru	equ	0xFF8
 42024                           tblptrh	equ	0xFF7
 42025                           tblptrl	equ	0xFF6
 42026                           tablat	equ	0xFF5
 42027                           prodh	equ	0xFF4
 42028                           prodl	equ	0xFF3
 42029                           intcon	equ	0xFF2
 42030                           intcon2	equ	0xFF1
 42031                           indf0	equ	0xFEF
 42032                           postinc0	equ	0xFEE
 42033                           plusw0	equ	0xFEB
 42034                           fsr0h	equ	0xFEA
 42035                           fsr0l	equ	0xFE9
 42036                           wreg	equ	0xFE8
 42037                           indf1	equ	0xFE7
 42038                           postdec1	equ	0xFE5
 42039                           fsr1h	equ	0xFE2
 42040                           fsr1l	equ	0xFE1
 42041                           indf2	equ	0xFDF
 42042                           postinc2	equ	0xFDE
 42043                           postdec2	equ	0xFDD
 42044                           plusw2	equ	0xFDB
 42045                           fsr2h	equ	0xFDA
 42046                           fsr2l	equ	0xFD9
 42047                           status	equ	0xFD8
 42048                           
 42049 ;; *************** function _EEPROMinitialized *****************
 42050 ;; Defined at:
 42051 ;;		line 332 in file "EEPROM.c"
 42052 ;; Parameters:    Size  Location     Type
 42053 ;;		None
 42054 ;; Auto vars:     Size  Location     Type
 42055 ;;		None
 42056 ;; Return value:  Size  Location     Type
 42057 ;;                  1    wreg      unsigned char 
 42058 ;; Registers used:
 42059 ;;		wreg, status,2, status,0
 42060 ;; Tracked objects:
 42061 ;;		On entry : 0/0
 42062 ;;		On exit  : 0/0
 42063 ;;		Unchanged: 0/0
 42064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42069 ;;Total ram usage:        0 bytes
 42070 ;; Hardware stack levels used:    1
 42071 ;; Hardware stack levels required when called:    5
 42072 ;; This function calls:
 42073 ;;		Nothing
 42074 ;; This function is called by:
 42075 ;;		_Init_System
 42076 ;; This function uses a non-reentrant model
 42077 ;;
 42078                           
 42079                           	psect	text107
 42080  00ADF8                     __ptext107:
 42081                           	opt stack 0
 42082  00ADF8                     _EEPROMinitialized:
 42083                           	opt stack 24
 42084                           
 42085                           ;EEPROM.c: 334: if(Global1.EEPROMinitFlag == 59)
 42086                           
 42087                           ;incstack = 0
 42088  00ADF8  0E3B               	movlw	59
 42089  00ADFA  0102               	movlb	2	; () banked
 42090  00ADFC  19EF               	xorwf	(_Global1+29)& (0+255),w,b
 42091  00ADFE  A4D8               	btfss	status,2,c
 42092  00AE00  D002               	goto	l11552
 42093                           
 42094                           ; BSR set to: 2
 42095                           ;EEPROM.c: 335: {
 42096                           ;EEPROM.c: 336: return 1;
 42097  00AE02  0E01               	movlw	1
 42098                           
 42099                           ; BSR set to: 2
 42100  00AE04  0012               	return	
 42101  00AE06                     l11552:
 42102                           
 42103                           ; BSR set to: 2
 42104                           ;EEPROM.c: 337: }
 42105                           ;EEPROM.c: 338: return 0;
 42106  00AE06  0E00               	movlw	0
 42107  00AE08  0012               	return	
 42108                           
 42109                           ; BSR set to: 2
 42110                           
 42111                           ; BSR set to: 2
 42112  00AE0A  0012               	return		;funcret
 42113  00AE0C                     __end_of_EEPROMinitialized:
 42114                           	opt stack 0
 42115                           tblptru	equ	0xFF8
 42116                           tblptrh	equ	0xFF7
 42117                           tblptrl	equ	0xFF6
 42118                           tablat	equ	0xFF5
 42119                           prodh	equ	0xFF4
 42120                           prodl	equ	0xFF3
 42121                           intcon	equ	0xFF2
 42122                           intcon2	equ	0xFF1
 42123                           indf0	equ	0xFEF
 42124                           postinc0	equ	0xFEE
 42125                           plusw0	equ	0xFEB
 42126                           fsr0h	equ	0xFEA
 42127                           fsr0l	equ	0xFE9
 42128                           wreg	equ	0xFE8
 42129                           indf1	equ	0xFE7
 42130                           postdec1	equ	0xFE5
 42131                           fsr1h	equ	0xFE2
 42132                           fsr1l	equ	0xFE1
 42133                           indf2	equ	0xFDF
 42134                           postinc2	equ	0xFDE
 42135                           postdec2	equ	0xFDD
 42136                           plusw2	equ	0xFDB
 42137                           fsr2h	equ	0xFDA
 42138                           fsr2l	equ	0xFD9
 42139                           status	equ	0xFD8
 42140                           
 42141 ;; *************** function _InitApp *****************
 42142 ;; Defined at:
 42143 ;;		line 64 in file "user.c"
 42144 ;; Parameters:    Size  Location     Type
 42145 ;;		None
 42146 ;; Auto vars:     Size  Location     Type
 42147 ;;		None
 42148 ;; Return value:  Size  Location     Type
 42149 ;;		None               void
 42150 ;; Registers used:
 42151 ;;		wreg, status,2, status,0
 42152 ;; Tracked objects:
 42153 ;;		On entry : 0/0
 42154 ;;		On exit  : 0/0
 42155 ;;		Unchanged: 0/0
 42156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42161 ;;Total ram usage:        0 bytes
 42162 ;; Hardware stack levels used:    1
 42163 ;; Hardware stack levels required when called:    5
 42164 ;; This function calls:
 42165 ;;		Nothing
 42166 ;; This function is called by:
 42167 ;;		_main
 42168 ;; This function uses a non-reentrant model
 42169 ;;
 42170                           
 42171                           	psect	text108
 42172  00A8B2                     __ptext108:
 42173                           	opt stack 0
 42174  00A8B2                     _InitApp:
 42175                           	opt stack 25
 42176                           
 42177                           ;user.c: 66: LATA = 0;
 42178                           
 42179                           ; BSR set to: 2
 42180                           ;incstack = 0
 42181  00A8B2  0E00               	movlw	0
 42182  00A8B4  6E89               	movwf	3977,c	;volatile
 42183                           
 42184                           ;user.c: 67: LATB = 0;
 42185  00A8B6  0E00               	movlw	0
 42186  00A8B8  6E8A               	movwf	3978,c	;volatile
 42187                           
 42188                           ;user.c: 68: LATC = 0;
 42189  00A8BA  0E00               	movlw	0
 42190  00A8BC  6E8B               	movwf	3979,c	;volatile
 42191                           
 42192                           ;user.c: 69: LATA |= 0x04;
 42193  00A8BE  8489               	bsf	3977,2,c	;volatile
 42194                           
 42195                           ;user.c: 71: TRISAbits.TRISA0 = 1;
 42196  00A8C0  8092               	bsf	3986,0,c	;volatile
 42197                           
 42198                           ;user.c: 72: TRISAbits.TRISA1 = 1;
 42199  00A8C2  8292               	bsf	3986,1,c	;volatile
 42200                           
 42201                           ;user.c: 73: TRISAbits.TRISA2 = 0;
 42202  00A8C4  9492               	bcf	3986,2,c	;volatile
 42203                           
 42204                           ;user.c: 74: TRISAbits.TRISA3 = 0;
 42205  00A8C6  9692               	bcf	3986,3,c	;volatile
 42206                           
 42207                           ;user.c: 75: TRISAbits.TRISA4 = 0;
 42208  00A8C8  9892               	bcf	3986,4,c	;volatile
 42209                           
 42210                           ;user.c: 76: TRISAbits.TRISA5 = 0;
 42211  00A8CA  9A92               	bcf	3986,5,c	;volatile
 42212                           
 42213                           ;user.c: 77: TRISCbits.TRISC0 = 1;
 42214  00A8CC  8094               	bsf	3988,0,c	;volatile
 42215                           
 42216                           ;user.c: 78: TRISCbits.TRISC1 = 0;
 42217  00A8CE  9294               	bcf	3988,1,c	;volatile
 42218                           
 42219                           ;user.c: 79: TRISCbits.TRISC2 = 0;
 42220  00A8D0  9494               	bcf	3988,2,c	;volatile
 42221                           
 42222                           ;user.c: 80: TRISCbits.TRISC3 = 0;
 42223  00A8D2  9694               	bcf	3988,3,c	;volatile
 42224                           
 42225                           ;user.c: 81: TRISCbits.TRISC4 = 0;
 42226  00A8D4  9894               	bcf	3988,4,c	;volatile
 42227                           
 42228                           ;user.c: 82: TRISCbits.TRISC5 = 0;
 42229  00A8D6  9A94               	bcf	3988,5,c	;volatile
 42230                           
 42231                           ;user.c: 83: TRISCbits.TRISC6 = 0;
 42232  00A8D8  9C94               	bcf	3988,6,c	;volatile
 42233                           
 42234                           ;user.c: 84: TRISCbits.TRISC7 = 1;
 42235  00A8DA  8E94               	bsf	3988,7,c	;volatile
 42236                           
 42237                           ;user.c: 85: TRISBbits.TRISB0 = 1;
 42238  00A8DC  8093               	bsf	3987,0,c	;volatile
 42239                           
 42240                           ;user.c: 86: TRISBbits.TRISB1 = 1;
 42241  00A8DE  8293               	bsf	3987,1,c	;volatile
 42242                           
 42243                           ;user.c: 87: TRISBbits.TRISB2 = 1;
 42244  00A8E0  8493               	bsf	3987,2,c	;volatile
 42245                           
 42246                           ;user.c: 88: TRISBbits.TRISB3 = 1;
 42247  00A8E2  8693               	bsf	3987,3,c	;volatile
 42248                           
 42249                           ;user.c: 89: TRISBbits.TRISB4 = 1;
 42250  00A8E4  8893               	bsf	3987,4,c	;volatile
 42251                           
 42252                           ;user.c: 95: ANSEL = 0x01;
 42253  00A8E6  0E01               	movlw	1
 42254  00A8E8  6E7E               	movwf	3966,c	;volatile
 42255                           
 42256                           ;user.c: 96: ANSELH = 0x00;
 42257  00A8EA  0E00               	movlw	0
 42258  00A8EC  6E7F               	movwf	3967,c	;volatile
 42259                           
 42260                           ;user.c: 99: INTCON2bits.RBPU = 0;
 42261  00A8EE  9EF1               	bcf	intcon2,7,c	;volatile
 42262                           
 42263                           ;user.c: 101: WPUB = 0x0F;
 42264  00A8F0  0E0F               	movlw	15
 42265  00A8F2  6E7C               	movwf	3964,c	;volatile
 42266  00A8F4  0012               	return		;funcret
 42267  00A8F6                     __end_of_InitApp:
 42268                           	opt stack 0
 42269                           tblptru	equ	0xFF8
 42270                           tblptrh	equ	0xFF7
 42271                           tblptrl	equ	0xFF6
 42272                           tablat	equ	0xFF5
 42273                           prodh	equ	0xFF4
 42274                           prodl	equ	0xFF3
 42275                           intcon	equ	0xFF2
 42276                           intcon2	equ	0xFF1
 42277                           indf0	equ	0xFEF
 42278                           postinc0	equ	0xFEE
 42279                           plusw0	equ	0xFEB
 42280                           fsr0h	equ	0xFEA
 42281                           fsr0l	equ	0xFE9
 42282                           wreg	equ	0xFE8
 42283                           indf1	equ	0xFE7
 42284                           postdec1	equ	0xFE5
 42285                           fsr1h	equ	0xFE2
 42286                           fsr1l	equ	0xFE1
 42287                           indf2	equ	0xFDF
 42288                           postinc2	equ	0xFDE
 42289                           postdec2	equ	0xFDD
 42290                           plusw2	equ	0xFDB
 42291                           fsr2h	equ	0xFDA
 42292                           fsr2l	equ	0xFD9
 42293                           status	equ	0xFD8
 42294                           
 42295 ;; *************** function _ConfigureOscillator *****************
 42296 ;; Defined at:
 42297 ;;		line 43 in file "system.c"
 42298 ;; Parameters:    Size  Location     Type
 42299 ;;		None
 42300 ;; Auto vars:     Size  Location     Type
 42301 ;;		None
 42302 ;; Return value:  Size  Location     Type
 42303 ;;		None               void
 42304 ;; Registers used:
 42305 ;;		None
 42306 ;; Tracked objects:
 42307 ;;		On entry : 0/0
 42308 ;;		On exit  : 0/0
 42309 ;;		Unchanged: 0/0
 42310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42315 ;;Total ram usage:        0 bytes
 42316 ;; Hardware stack levels used:    1
 42317 ;; Hardware stack levels required when called:    5
 42318 ;; This function calls:
 42319 ;;		Nothing
 42320 ;; This function is called by:
 42321 ;;		_main
 42322 ;; This function uses a non-reentrant model
 42323 ;;
 42324                           
 42325                           	psect	text109
 42326  00AF2A                     __ptext109:
 42327                           	opt stack 0
 42328  00AF2A                     _ConfigureOscillator:
 42329                           	opt stack 25
 42330                           
 42331                           ;incstack = 0
 42332  00AF2A  0012               	return		;funcret
 42333  00AF2C                     __end_of_ConfigureOscillator:
 42334                           	opt stack 0
 42335                           tblptru	equ	0xFF8
 42336                           tblptrh	equ	0xFF7
 42337                           tblptrl	equ	0xFF6
 42338                           tablat	equ	0xFF5
 42339                           prodh	equ	0xFF4
 42340                           prodl	equ	0xFF3
 42341                           intcon	equ	0xFF2
 42342                           intcon2	equ	0xFF1
 42343                           indf0	equ	0xFEF
 42344                           postinc0	equ	0xFEE
 42345                           plusw0	equ	0xFEB
 42346                           fsr0h	equ	0xFEA
 42347                           fsr0l	equ	0xFE9
 42348                           wreg	equ	0xFE8
 42349                           indf1	equ	0xFE7
 42350                           postdec1	equ	0xFE5
 42351                           fsr1h	equ	0xFE2
 42352                           fsr1l	equ	0xFE1
 42353                           indf2	equ	0xFDF
 42354                           postinc2	equ	0xFDE
 42355                           postdec2	equ	0xFDD
 42356                           plusw2	equ	0xFDB
 42357                           fsr2h	equ	0xFDA
 42358                           fsr2l	equ	0xFD9
 42359                           status	equ	0xFD8
 42360                           
 42361 ;; *************** function _low_isr *****************
 42362 ;; Defined at:
 42363 ;;		line 607 in file "interrupts.c"
 42364 ;; Parameters:    Size  Location     Type
 42365 ;;		None
 42366 ;; Auto vars:     Size  Location     Type
 42367 ;;  data            1   21[COMRAM] unsigned char 
 42368 ;; Return value:  Size  Location     Type
 42369 ;;		None               void
 42370 ;; Registers used:
 42371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42372 ;; Tracked objects:
 42373 ;;		On entry : 0/0
 42374 ;;		On exit  : 0/0
 42375 ;;		Unchanged: 0/0
 42376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42379 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42380 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42381 ;;Total ram usage:       18 bytes
 42382 ;; Hardware stack levels used:    1
 42383 ;; Hardware stack levels required when called:    4
 42384 ;; This function calls:
 42385 ;;		_EraseScreen
 42386 ;;		_IsCharacter
 42387 ;;		i1_BlueConnected
 42388 ;;		i1_ReadUSART
 42389 ;;		i1_UARTchar
 42390 ;;		i1_UARTchar_CONST
 42391 ;;		i1_UARTstring
 42392 ;;		i1_UARTstring_CONST
 42393 ;; This function is called by:
 42394 ;;		Interrupt level 1
 42395 ;; This function uses a non-reentrant model
 42396 ;;
 42397                           
 42398                           	psect	intcodelo
 42399  000018                     __pintcodelo:
 42400                           	opt stack 0
 42401  000018                     _low_isr:
 42402                           	opt stack 18
 42403                           
 42404                           ;incstack = 0
 42405  000018  CFD8 F005          	movff	status,??_low_isr
 42406  00001C  CFE8 F006          	movff	wreg,??_low_isr+1
 42407  000020  CFE0 F007          	movff	bsr,??_low_isr+2
 42408  000024  CFFA F008          	movff	pclath,??_low_isr+3
 42409  000028  CFFB F009          	movff	pclatu,??_low_isr+4
 42410  00002C  CFE9 F00A          	movff	fsr0l,??_low_isr+5
 42411  000030  CFEA F00B          	movff	fsr0h,??_low_isr+6
 42412  000034  CFE1 F00C          	movff	fsr1l,??_low_isr+7
 42413  000038  CFE2 F00D          	movff	fsr1h,??_low_isr+8
 42414  00003C  CFD9 F00E          	movff	fsr2l,??_low_isr+9
 42415  000040  CFDA F00F          	movff	fsr2h,??_low_isr+10
 42416  000044  CFF3 F010          	movff	prodl,??_low_isr+11
 42417  000048  CFF4 F011          	movff	prodh,??_low_isr+12
 42418  00004C  CFF6 F012          	movff	tblptrl,??_low_isr+13
 42419  000050  CFF7 F013          	movff	tblptrh,??_low_isr+14
 42420  000054  CFF8 F014          	movff	tblptru,??_low_isr+15
 42421  000058  CFF5 F015          	movff	tablat,??_low_isr+16
 42422                           
 42423                           ;interrupts.c: 616: char data = 0;
 42424  00005C  0E00               	movlw	0
 42425  00005E  6E16               	movwf	low_isr@data,c
 42426                           
 42427                           ;interrupts.c: 618: INTCONbits.PEIE = 0;
 42428  000060  9CF2               	bcf	intcon,6,c	;volatile
 42429                           
 42430                           ;interrupts.c: 620: if(PIR1bits.RCIF)
 42431  000062  AA9E               	btfss	3998,5,c	;volatile
 42432  000064  D07F               	goto	i1l1535
 42433                           
 42434                           ;interrupts.c: 621: {
 42435                           ;interrupts.c: 623: data = ReadUSART();
 42436  000066  ECDC  F056         	call	i1_ReadUSART	;wreg free
 42437  00006A  6E16               	movwf	low_isr@data,c
 42438                           
 42439                           ;interrupts.c: 625: if(!BlueConnected())
 42440  00006C  EC63  F057         	call	i1_BlueConnected	;wreg free
 42441  000070  0900               	iorlw	0
 42442  000072  A4D8               	btfss	status,2,c
 42443  000074  D00F               	goto	i1l14782
 42444                           
 42445                           ;interrupts.c: 626: {
 42446                           ;interrupts.c: 627: if(CommandStringPos < (100 - 1))
 42447  000076  0E63               	movlw	99
 42448  000078  603E               	cpfslt	_CommandStringPos,c	;volatile
 42449  00007A  D072               	goto	i1l14826
 42450                           
 42451                           ;interrupts.c: 628: {
 42452                           ;interrupts.c: 629: CommandString[CommandStringPos] = data;
 42453  00007C  503E               	movf	_CommandStringPos,w,c	;volatile
 42454  00007E  0D01               	mullw	1
 42455  000080  0E00               	movlw	low _CommandString
 42456  000082  24F3               	addwf	prodl,w,c
 42457  000084  6ED9               	movwf	fsr2l,c
 42458  000086  0E04               	movlw	high _CommandString
 42459  000088  20F4               	addwfc	prodh,w,c
 42460  00008A  6EDA               	movwf	fsr2h,c
 42461  00008C  C016  FFDF         	movff	low_isr@data,indf2
 42462                           
 42463                           ;interrupts.c: 630: CommandStringPos++;
 42464  000090  2A3E               	incf	_CommandStringPos,f,c	;volatile
 42465                           
 42466                           ;interrupts.c: 631: }
 42467                           ;interrupts.c: 632: }
 42468  000092  D066               	goto	i1l14826
 42469  000094                     i1l14782:
 42470                           
 42471                           ;interrupts.c: 633: else
 42472                           ;interrupts.c: 634: {
 42473                           ;interrupts.c: 635: if(data != '\r' && data != '\n')
 42474  000094  0E0D               	movlw	13
 42475  000096  1816               	xorwf	low_isr@data,w,c
 42476  000098  B4D8               	btfsc	status,2,c
 42477  00009A  D04F               	goto	i1l14816
 42478  00009C  0E0A               	movlw	10
 42479  00009E  1816               	xorwf	low_isr@data,w,c
 42480  0000A0  B4D8               	btfsc	status,2,c
 42481  0000A2  D04B               	goto	i1l14816
 42482                           
 42483                           ;interrupts.c: 636: {
 42484                           ;interrupts.c: 637: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 42485  0000A4  0E7F               	movlw	127
 42486  0000A6  1816               	xorwf	low_isr@data,w,c
 42487  0000A8  B4D8               	btfsc	status,2,c
 42488  0000AA  D004               	goto	i1l14790
 42489  0000AC  0E08               	movlw	8
 42490  0000AE  1816               	xorwf	low_isr@data,w,c
 42491  0000B0  A4D8               	btfss	status,2,c
 42492  0000B2  D01F               	goto	i1l14802
 42493  0000B4                     i1l14790:
 42494  0000B4  0103               	movlb	3	; () banked
 42495  0000B6  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 42496  0000B8  B4D8               	btfsc	status,2,c
 42497  0000BA  D01B               	goto	i1l14802
 42498                           
 42499                           ; BSR set to: 3
 42500                           ;interrupts.c: 638: {
 42501                           ;interrupts.c: 640: EraseScreen(ReceivedStringPos + 1);
 42502  0000BC  0103               	movlb	3	; () banked
 42503  0000BE  29EB               	incf	_ReceivedStringPos& (0+255),w,b	;volatile
 42504  0000C0  EC4D  F056         	call	_EraseScreen
 42505                           
 42506                           ;interrupts.c: 641: ReceivedStringPos--;
 42507  0000C4  0103               	movlb	3	; () banked
 42508  0000C6  07EB               	decf	_ReceivedStringPos& (0+255),f,b	;volatile
 42509                           
 42510                           ; BSR set to: 3
 42511                           ;interrupts.c: 642: ReceivedString[ReceivedStringPos] = '\0';
 42512  0000C8  0103               	movlb	3	; () banked
 42513  0000CA  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 42514  0000CC  0D01               	mullw	1
 42515  0000CE  0E64               	movlw	low _ReceivedString
 42516  0000D0  24F3               	addwf	prodl,w,c
 42517  0000D2  6ED9               	movwf	fsr2l,c
 42518  0000D4  0E04               	movlw	high _ReceivedString
 42519  0000D6  20F4               	addwfc	prodh,w,c
 42520  0000D8  6EDA               	movwf	fsr2h,c
 42521  0000DA  0E00               	movlw	0
 42522  0000DC  6EDF               	movwf	indf2,c
 42523                           
 42524                           ; BSR set to: 3
 42525                           ;interrupts.c: 643: UARTchar_CONST('>');
 42526  0000DE  0E3E               	movlw	62
 42527  0000E0  ECA1  F056         	call	i1_UARTchar_CONST
 42528                           
 42529                           ;interrupts.c: 644: UARTstring(ReceivedString);
 42530  0000E4  0E64               	movlw	low _ReceivedString
 42531  0000E6  6E02               	movwf	i1UARTstring@data,c
 42532  0000E8  0E04               	movlw	high _ReceivedString
 42533  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 42534  0000EC  EC61  F056         	call	i1_UARTstring	;wreg free
 42535                           
 42536                           ;interrupts.c: 645: }
 42537  0000F0  D037               	goto	i1l14826
 42538  0000F2                     i1l14802:
 42539                           
 42540                           ;interrupts.c: 646: else if(ReceivedStringPos < (100 - 2))
 42541  0000F2  0E62               	movlw	98
 42542  0000F4  0103               	movlb	3	; () banked
 42543  0000F6  61EB               	cpfslt	_ReceivedStringPos& (0+255),b	;volatile
 42544  0000F8  D01B               	goto	i1l1544
 42545                           
 42546                           ; BSR set to: 3
 42547                           ;interrupts.c: 647: {
 42548                           ;interrupts.c: 648: if(!NewReceivedString)
 42549  0000FA  0103               	movlb	3	; () banked
 42550  0000FC  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 42551  0000FE  A4D8               	btfss	status,2,c
 42552  000100  D02F               	goto	i1l14826
 42553                           
 42554                           ; BSR set to: 3
 42555                           ;interrupts.c: 649: {
 42556                           ;interrupts.c: 650: if(IsCharacter(data))
 42557  000102  5016               	movf	low_isr@data,w,c
 42558  000104  ECBA  F056         	call	_IsCharacter
 42559  000108  0900               	iorlw	0
 42560  00010A  B4D8               	btfsc	status,2,c
 42561  00010C  D029               	goto	i1l14826
 42562                           
 42563                           ;interrupts.c: 651: {
 42564                           ;interrupts.c: 652: UARTchar(data);
 42565  00010E  5016               	movf	low_isr@data,w,c
 42566  000110  ECE7  F056         	call	i1_UARTchar
 42567                           
 42568                           ;interrupts.c: 653: ReceivedString[ReceivedStringPos] = data;
 42569  000114  0103               	movlb	3	; () banked
 42570  000116  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 42571  000118  0D01               	mullw	1
 42572  00011A  0E64               	movlw	low _ReceivedString
 42573  00011C  24F3               	addwf	prodl,w,c
 42574  00011E  6ED9               	movwf	fsr2l,c
 42575  000120  0E04               	movlw	high _ReceivedString
 42576  000122  20F4               	addwfc	prodh,w,c
 42577  000124  6EDA               	movwf	fsr2h,c
 42578  000126  C016  FFDF         	movff	low_isr@data,indf2
 42579                           
 42580                           ; BSR set to: 3
 42581                           ;interrupts.c: 654: ReceivedStringPos++;
 42582  00012A  0103               	movlb	3	; () banked
 42583  00012C  2BEB               	incf	_ReceivedStringPos& (0+255),f,b	;volatile
 42584                           
 42585                           ; BSR set to: 3
 42586                           ;interrupts.c: 655: }
 42587                           ;interrupts.c: 656: }
 42588                           ;interrupts.c: 657: }
 42589                           
 42590                           ; BSR set to: 3
 42591  00012E  D018               	goto	i1l14826
 42592  000130                     i1l1544:
 42593                           
 42594                           ; BSR set to: 3
 42595                           ;interrupts.c: 658: else
 42596                           ;interrupts.c: 659: {
 42597                           ;interrupts.c: 660: PIE1bits.RCIE = 0;
 42598  000130  9A9D               	bcf	3997,5,c	;volatile
 42599                           
 42600                           ; BSR set to: 3
 42601                           ;interrupts.c: 661: BufferOverflow = 1;
 42602  000132  0E01               	movlw	1
 42603  000134  0103               	movlb	3	; () banked
 42604  000136  6FE9               	movwf	_BufferOverflow& (0+255),b
 42605                           
 42606                           ; BSR set to: 3
 42607                           ;interrupts.c: 662: }
 42608                           ;interrupts.c: 663: }
 42609                           
 42610                           ; BSR set to: 3
 42611  000138  D013               	goto	i1l14826
 42612  00013A                     i1l14816:
 42613                           
 42614                           ;interrupts.c: 664: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 42615  00013A  0103               	movlb	3	; () banked
 42616  00013C  51EB               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 42617  00013E  B4D8               	btfsc	status,2,c
 42618  000140  D00F               	goto	i1l14826
 42619                           
 42620                           ; BSR set to: 3
 42621  000142  0103               	movlb	3	; () banked
 42622  000144  51EA               	movf	_NewReceivedString& (0+255),w,b	;volatile
 42623  000146  A4D8               	btfss	status,2,c
 42624  000148  D00B               	goto	i1l14826
 42625                           
 42626                           ; BSR set to: 3
 42627                           ;interrupts.c: 665: {
 42628                           ;interrupts.c: 666: PIE1bits.RCIE = 0;
 42629  00014A  9A9D               	bcf	3997,5,c	;volatile
 42630                           
 42631                           ; BSR set to: 3
 42632                           ;interrupts.c: 667: UARTstring_CONST(CRLN);
 42633  00014C  0E5E               	movlw	low _CRLN
 42634  00014E  6E03               	movwf	i1UARTstring_CONST@data,c
 42635  000150  0EEF               	movlw	high _CRLN
 42636  000152  6E04               	movwf	i1UARTstring_CONST@data+1,c
 42637  000154  ECC9  F055         	call	i1_UARTstring_CONST	;wreg free
 42638                           
 42639                           ;interrupts.c: 668: NewReceivedString = 1;
 42640  000158  0E01               	movlw	1
 42641  00015A  0103               	movlb	3	; () banked
 42642  00015C  6FEA               	movwf	_NewReceivedString& (0+255),b	;volatile
 42643                           
 42644                           ; BSR set to: 3
 42645                           
 42646                           ; BSR set to: 3
 42647  00015E  D000               	goto	i1l14826
 42648  000160                     i1l14826:
 42649                           
 42650                           ;interrupts.c: 669: }
 42651                           ;interrupts.c: 670: }
 42652                           ;interrupts.c: 671: PIR1bits.RCIF = 0;
 42653  000160  9A9E               	bcf	3998,5,c	;volatile
 42654                           
 42655                           ;interrupts.c: 672: }
 42656  000162  D010               	goto	i1l1550
 42657  000164                     i1l1535:
 42658                           
 42659                           ;interrupts.c: 673: else if(PIR1bits.TMR1IF)
 42660  000164  A09E               	btfss	3998,0,c	;volatile
 42661  000166  D00C               	goto	i1l1551
 42662                           
 42663                           ;interrupts.c: 674: {
 42664                           ;interrupts.c: 675: Timer1_Postscaler++;
 42665  000168  2A49               	incf	_Timer1_Postscaler,f,c
 42666                           
 42667                           ;interrupts.c: 676: if(Timer1_Postscaler >= 3)
 42668  00016A  0E02               	movlw	2
 42669  00016C  6449               	cpfsgt	_Timer1_Postscaler,c
 42670  00016E  D006               	goto	i1l14838
 42671                           
 42672                           ;interrupts.c: 677: {
 42673                           ;interrupts.c: 678: (LATC &= ~0x04);
 42674  000170  948B               	bcf	3979,2,c	;volatile
 42675                           
 42676                           ;interrupts.c: 679: (LATC &= ~0x02);
 42677  000172  928B               	bcf	3979,1,c	;volatile
 42678                           
 42679                           ;interrupts.c: 680: (T1CONbits.TMR1ON = 0);
 42680  000174  90CD               	bcf	4045,0,c	;volatile
 42681                           
 42682                           ;interrupts.c: 681: Timer1_Postscaler = 0;
 42683  000176  0E00               	movlw	0
 42684  000178  6E49               	movwf	_Timer1_Postscaler,c
 42685  00017A  D000               	goto	i1l14838
 42686  00017C                     i1l14838:
 42687                           
 42688                           ;interrupts.c: 682: }
 42689                           ;interrupts.c: 683: PIR1bits.TMR1IF = 0;
 42690  00017C  909E               	bcf	3998,0,c	;volatile
 42691                           
 42692                           ;interrupts.c: 684: }
 42693  00017E  D002               	goto	i1l1550
 42694  000180                     i1l1551:
 42695                           
 42696                           ;interrupts.c: 685: else
 42697                           ;interrupts.c: 686: {
 42698                           ;interrupts.c: 688: __nop();
 42699  000180  F000               	nop	
 42700  000182  D000               	goto	i1l1550
 42701  000184                     i1l1550:
 42702                           
 42703                           ;interrupts.c: 689: }
 42704                           ;interrupts.c: 690: INTCONbits.PEIE = 1;
 42705  000184  8CF2               	bsf	intcon,6,c	;volatile
 42706  000186  C015  FFF5         	movff	??_low_isr+16,tablat
 42707  00018A  C014  FFF8         	movff	??_low_isr+15,tblptru
 42708  00018E  C013  FFF7         	movff	??_low_isr+14,tblptrh
 42709  000192  C012  FFF6         	movff	??_low_isr+13,tblptrl
 42710  000196  C011  FFF4         	movff	??_low_isr+12,prodh
 42711  00019A  C010  FFF3         	movff	??_low_isr+11,prodl
 42712  00019E  C00F  FFDA         	movff	??_low_isr+10,fsr2h
 42713  0001A2  C00E  FFD9         	movff	??_low_isr+9,fsr2l
 42714  0001A6  C00D  FFE2         	movff	??_low_isr+8,fsr1h
 42715  0001AA  C00C  FFE1         	movff	??_low_isr+7,fsr1l
 42716  0001AE  C00B  FFEA         	movff	??_low_isr+6,fsr0h
 42717  0001B2  C00A  FFE9         	movff	??_low_isr+5,fsr0l
 42718  0001B6  C009  FFFB         	movff	??_low_isr+4,pclatu
 42719  0001BA  C008  FFFA         	movff	??_low_isr+3,pclath
 42720  0001BE  C007  FFE0         	movff	??_low_isr+2,bsr
 42721  0001C2  C006  FFE8         	movff	??_low_isr+1,wreg
 42722  0001C6  C005  FFD8         	movff	??_low_isr,status
 42723  0001CA  0010               	retfie	
 42724  0001CC                     __end_of_low_isr:
 42725                           	opt stack 0
 42726                           pclatu	equ	0xFFB
 42727                           pclath	equ	0xFFA
 42728                           tblptru	equ	0xFF8
 42729                           tblptrh	equ	0xFF7
 42730                           tblptrl	equ	0xFF6
 42731                           tablat	equ	0xFF5
 42732                           prodh	equ	0xFF4
 42733                           prodl	equ	0xFF3
 42734                           intcon	equ	0xFF2
 42735                           intcon2	equ	0xFF1
 42736                           indf0	equ	0xFEF
 42737                           postinc0	equ	0xFEE
 42738                           plusw0	equ	0xFEB
 42739                           fsr0h	equ	0xFEA
 42740                           fsr0l	equ	0xFE9
 42741                           wreg	equ	0xFE8
 42742                           indf1	equ	0xFE7
 42743                           postdec1	equ	0xFE5
 42744                           fsr1h	equ	0xFE2
 42745                           fsr1l	equ	0xFE1
 42746                           bsr	equ	0xFE0
 42747                           indf2	equ	0xFDF
 42748                           postinc2	equ	0xFDE
 42749                           postdec2	equ	0xFDD
 42750                           plusw2	equ	0xFDB
 42751                           fsr2h	equ	0xFDA
 42752                           fsr2l	equ	0xFD9
 42753                           status	equ	0xFD8
 42754                           
 42755 ;; *************** function i1_UARTstring_CONST *****************
 42756 ;; Defined at:
 42757 ;;		line 236 in file "UART.c"
 42758 ;; Parameters:    Size  Location     Type
 42759 ;;  data            2    2[COMRAM] PTR const unsigned char 
 42760 ;;		 -> Conf2_ChannelH_3_STR(17), Conf2_ChannelH_2_STR(17), Conf2_ChannelH_1_STR(17), Conf2_ChannelD_STR(15), 
 42761 ;;		 -> Conf2_ChannelB_STR(15), STR_187(28), STR_122(13), STR_105(35), 
 42762 ;;		 -> STR_103(38), STR_94(24), STR_91(60), STR_86(32), 
 42763 ;;		 -> STR_75(14), STR_68(34), STR_67(35), SYNTAX_ERR(14), 
 42764 ;;		 -> Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), STR_23(6), 
 42765 ;;		 -> STR_20(5), STR_17(3), STR_16(6), STR_15(9), 
 42766 ;;		 -> STR_14(20), STR_13(9), STR_8(3), STR_6(4), 
 42767 ;;		 -> CRLN(3), 
 42768 ;; Auto vars:     Size  Location     Type
 42769 ;;		None
 42770 ;; Return value:  Size  Location     Type
 42771 ;;		None               void
 42772 ;; Registers used:
 42773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42774 ;; Tracked objects:
 42775 ;;		On entry : 0/0
 42776 ;;		On exit  : 0/0
 42777 ;;		Unchanged: 0/0
 42778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42783 ;;Total ram usage:        2 bytes
 42784 ;; Hardware stack levels used:    1
 42785 ;; Hardware stack levels required when called:    3
 42786 ;; This function calls:
 42787 ;;		i1_UARTchar_CONST
 42788 ;; This function is called by:
 42789 ;;		_low_isr
 42790 ;; This function uses a non-reentrant model
 42791 ;;
 42792                           
 42793                           	psect	text111
 42794  00AB92                     __ptext111:
 42795                           	opt stack 0
 42796  00AB92                     i1_UARTstring_CONST:
 42797                           	opt stack 18
 42798                           
 42799                           ;UART.c: 238: while(*data != 0)
 42800                           
 42801                           ;incstack = 0
 42802  00AB92  D00C               	goto	i1l14018
 42803  00AB94                     i1l14014:
 42804                           
 42805                           ;UART.c: 239: {
 42806                           ;UART.c: 240: UARTchar_CONST(*data);
 42807  00AB94  C003  FFF6         	movff	i1UARTstring_CONST@data,tblptrl
 42808  00AB98  C004  FFF7         	movff	i1UARTstring_CONST@data+1,tblptrh
 42809  00AB9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42810  00AB9C  6AF8               	clrf	tblptru,c
 42811  00AB9E                     	endif
 42812  00AB9E                     	if	0	;tblptru may be non-zero
 42813  00AB9E                     	endif
 42814  00AB9E  0008               	tblrd		*
 42815  00ABA0  50F5               	movf	tablat,w,c
 42816  00ABA2  ECA1  F056         	call	i1_UARTchar_CONST
 42817                           
 42818                           ;UART.c: 241: *data++;
 42819  00ABA6  4A03               	infsnz	i1UARTstring_CONST@data,f,c
 42820  00ABA8  2A04               	incf	i1UARTstring_CONST@data+1,f,c
 42821  00ABAA  D000               	goto	i1l14018
 42822  00ABAC                     i1l14018:
 42823  00ABAC  C003  FFF6         	movff	i1UARTstring_CONST@data,tblptrl
 42824  00ABB0  C004  FFF7         	movff	i1UARTstring_CONST@data+1,tblptrh
 42825  00ABB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42826  00ABB4  6AF8               	clrf	tblptru,c
 42827  00ABB6                     	endif
 42828  00ABB6                     	if	0	;tblptru may be non-zero
 42829  00ABB6                     	endif
 42830  00ABB6  0008               	tblrd		*
 42831  00ABB8  50F5               	movf	tablat,w,c
 42832  00ABBA  0900               	iorlw	0
 42833  00ABBC  A4D8               	btfss	status,2,c
 42834  00ABBE  D7EA               	goto	i1l14014
 42835  00ABC0  0012               	return		;funcret
 42836  00ABC2                     __end_ofi1_UARTstring_CONST:
 42837                           	opt stack 0
 42838                           pclatu	equ	0xFFB
 42839                           pclath	equ	0xFFA
 42840                           tblptru	equ	0xFF8
 42841                           tblptrh	equ	0xFF7
 42842                           tblptrl	equ	0xFF6
 42843                           tablat	equ	0xFF5
 42844                           prodh	equ	0xFF4
 42845                           prodl	equ	0xFF3
 42846                           intcon	equ	0xFF2
 42847                           intcon2	equ	0xFF1
 42848                           indf0	equ	0xFEF
 42849                           postinc0	equ	0xFEE
 42850                           plusw0	equ	0xFEB
 42851                           fsr0h	equ	0xFEA
 42852                           fsr0l	equ	0xFE9
 42853                           wreg	equ	0xFE8
 42854                           indf1	equ	0xFE7
 42855                           postdec1	equ	0xFE5
 42856                           fsr1h	equ	0xFE2
 42857                           fsr1l	equ	0xFE1
 42858                           bsr	equ	0xFE0
 42859                           indf2	equ	0xFDF
 42860                           postinc2	equ	0xFDE
 42861                           postdec2	equ	0xFDD
 42862                           plusw2	equ	0xFDB
 42863                           fsr2h	equ	0xFDA
 42864                           fsr2l	equ	0xFD9
 42865                           status	equ	0xFD8
 42866                           
 42867 ;; *************** function i1_UARTchar_CONST *****************
 42868 ;; Defined at:
 42869 ;;		line 207 in file "UART.c"
 42870 ;; Parameters:    Size  Location     Type
 42871 ;;  data            1    wreg     const unsigned char 
 42872 ;; Auto vars:     Size  Location     Type
 42873 ;;  data            1    0[COMRAM] const unsigned char 
 42874 ;;  UARTchar_CON    1    1[COMRAM] unsigned char 
 42875 ;; Return value:  Size  Location     Type
 42876 ;;		None               void
 42877 ;; Registers used:
 42878 ;;		wreg, status,2
 42879 ;; Tracked objects:
 42880 ;;		On entry : 0/0
 42881 ;;		On exit  : 0/0
 42882 ;;		Unchanged: 0/0
 42883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42888 ;;Total ram usage:        2 bytes
 42889 ;; Hardware stack levels used:    1
 42890 ;; Hardware stack levels required when called:    2
 42891 ;; This function calls:
 42892 ;;		Nothing
 42893 ;; This function is called by:
 42894 ;;		_low_isr
 42895 ;;		i1_UARTstring_CONST
 42896 ;; This function uses a non-reentrant model
 42897 ;;
 42898                           
 42899                           	psect	text112
 42900  00AD42                     __ptext112:
 42901                           	opt stack 0
 42902  00AD42                     i1_UARTchar_CONST:
 42903                           	opt stack 18
 42904                           
 42905                           ;incstack = 0
 42906                           ;i1UARTchar_CONST@data stored from wreg
 42907  00AD42  6E01               	movwf	i1UARTchar_CONST@data,c
 42908                           
 42909                           ;UART.c: 209: unsigned char temp = data;
 42910  00AD44  C001  F002         	movff	i1UARTchar_CONST@data,i1UARTchar_CONST@temp
 42911                           
 42912                           ;UART.c: 210: if(temp != 0)
 42913  00AD48  5002               	movf	i1UARTchar_CONST@temp,w,c
 42914  00AD4A  B4D8               	btfsc	status,2,c
 42915  00AD4C  0012               	return	
 42916                           
 42917                           ;UART.c: 211: {
 42918                           ;UART.c: 212: while(!TXSTAbits.TRMT);
 42919  00AD4E  D000               	goto	i1l807
 42920  00AD50                     i1l807:
 42921  00AD50  A2AC               	btfss	4012,1,c	;volatile
 42922  00AD52  D7FE               	goto	i1l807
 42923                           
 42924                           ;UART.c: 213: TXREG = temp;
 42925  00AD54  C002  FFAD         	movff	i1UARTchar_CONST@temp,4013	;volatile
 42926  00AD58  0012               	return	
 42927  00AD5A  0012               	return		;funcret
 42928  00AD5C                     __end_ofi1_UARTchar_CONST:
 42929                           	opt stack 0
 42930                           pclatu	equ	0xFFB
 42931                           pclath	equ	0xFFA
 42932                           tblptru	equ	0xFF8
 42933                           tblptrh	equ	0xFF7
 42934                           tblptrl	equ	0xFF6
 42935                           tablat	equ	0xFF5
 42936                           prodh	equ	0xFF4
 42937                           prodl	equ	0xFF3
 42938                           intcon	equ	0xFF2
 42939                           intcon2	equ	0xFF1
 42940                           indf0	equ	0xFEF
 42941                           postinc0	equ	0xFEE
 42942                           plusw0	equ	0xFEB
 42943                           fsr0h	equ	0xFEA
 42944                           fsr0l	equ	0xFE9
 42945                           wreg	equ	0xFE8
 42946                           indf1	equ	0xFE7
 42947                           postdec1	equ	0xFE5
 42948                           fsr1h	equ	0xFE2
 42949                           fsr1l	equ	0xFE1
 42950                           bsr	equ	0xFE0
 42951                           indf2	equ	0xFDF
 42952                           postinc2	equ	0xFDE
 42953                           postdec2	equ	0xFDD
 42954                           plusw2	equ	0xFDB
 42955                           fsr2h	equ	0xFDA
 42956                           fsr2l	equ	0xFD9
 42957                           status	equ	0xFD8
 42958                           
 42959 ;; *************** function i1_UARTstring *****************
 42960 ;; Defined at:
 42961 ;;		line 222 in file "UART.c"
 42962 ;; Parameters:    Size  Location     Type
 42963 ;;  data            2    1[COMRAM] PTR unsigned char 
 42964 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), ReceivedString(100), 
 42965 ;; Auto vars:     Size  Location     Type
 42966 ;;		None
 42967 ;; Return value:  Size  Location     Type
 42968 ;;		None               void
 42969 ;; Registers used:
 42970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42971 ;; Tracked objects:
 42972 ;;		On entry : 0/0
 42973 ;;		On exit  : 0/0
 42974 ;;		Unchanged: 0/0
 42975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42980 ;;Total ram usage:        2 bytes
 42981 ;; Hardware stack levels used:    1
 42982 ;; Hardware stack levels required when called:    3
 42983 ;; This function calls:
 42984 ;;		i1_UARTchar
 42985 ;; This function is called by:
 42986 ;;		_low_isr
 42987 ;; This function uses a non-reentrant model
 42988 ;;
 42989                           
 42990                           	psect	text113
 42991  00ACC2                     __ptext113:
 42992                           	opt stack 0
 42993  00ACC2                     i1_UARTstring:
 42994                           	opt stack 18
 42995                           
 42996                           ;UART.c: 224: while(*data != 0)
 42997                           
 42998                           ;incstack = 0
 42999  00ACC2  D00A               	goto	i1l14010
 43000  00ACC4                     i1l14006:
 43001                           
 43002                           ;UART.c: 225: {
 43003                           ;UART.c: 226: UARTchar(*data);
 43004  00ACC4  C002  FFD9         	movff	i1UARTstring@data,fsr2l
 43005  00ACC8  C003  FFDA         	movff	i1UARTstring@data+1,fsr2h
 43006  00ACCC  50DF               	movf	indf2,w,c
 43007  00ACCE  ECE7  F056         	call	i1_UARTchar
 43008                           
 43009                           ;UART.c: 227: *data++;
 43010  00ACD2  4A02               	infsnz	i1UARTstring@data,f,c
 43011  00ACD4  2A03               	incf	i1UARTstring@data+1,f,c
 43012  00ACD6  D000               	goto	i1l14010
 43013  00ACD8                     i1l14010:
 43014  00ACD8  C002  FFD9         	movff	i1UARTstring@data,fsr2l
 43015  00ACDC  C003  FFDA         	movff	i1UARTstring@data+1,fsr2h
 43016  00ACE0  50DF               	movf	indf2,w,c
 43017  00ACE2  A4D8               	btfss	status,2,c
 43018  00ACE4  D7EF               	goto	i1l14006
 43019  00ACE6  0012               	return		;funcret
 43020  00ACE8                     __end_ofi1_UARTstring:
 43021                           	opt stack 0
 43022                           pclatu	equ	0xFFB
 43023                           pclath	equ	0xFFA
 43024                           tblptru	equ	0xFF8
 43025                           tblptrh	equ	0xFF7
 43026                           tblptrl	equ	0xFF6
 43027                           tablat	equ	0xFF5
 43028                           prodh	equ	0xFF4
 43029                           prodl	equ	0xFF3
 43030                           intcon	equ	0xFF2
 43031                           intcon2	equ	0xFF1
 43032                           indf0	equ	0xFEF
 43033                           postinc0	equ	0xFEE
 43034                           plusw0	equ	0xFEB
 43035                           fsr0h	equ	0xFEA
 43036                           fsr0l	equ	0xFE9
 43037                           wreg	equ	0xFE8
 43038                           indf1	equ	0xFE7
 43039                           postdec1	equ	0xFE5
 43040                           fsr1h	equ	0xFE2
 43041                           fsr1l	equ	0xFE1
 43042                           bsr	equ	0xFE0
 43043                           indf2	equ	0xFDF
 43044                           postinc2	equ	0xFDE
 43045                           postdec2	equ	0xFDD
 43046                           plusw2	equ	0xFDB
 43047                           fsr2h	equ	0xFDA
 43048                           fsr2l	equ	0xFD9
 43049                           status	equ	0xFD8
 43050                           
 43051 ;; *************** function i1_ReadUSART *****************
 43052 ;; Defined at:
 43053 ;;		line 263 in file "UART.c"
 43054 ;; Parameters:    Size  Location     Type
 43055 ;;		None
 43056 ;; Auto vars:     Size  Location     Type
 43057 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 43058 ;; Return value:  Size  Location     Type
 43059 ;;                  1    wreg      unsigned char 
 43060 ;; Registers used:
 43061 ;;		wreg, status,2
 43062 ;; Tracked objects:
 43063 ;;		On entry : 0/0
 43064 ;;		On exit  : 0/0
 43065 ;;		Unchanged: 0/0
 43066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43071 ;;Total ram usage:        1 bytes
 43072 ;; Hardware stack levels used:    1
 43073 ;; Hardware stack levels required when called:    2
 43074 ;; This function calls:
 43075 ;;		Nothing
 43076 ;; This function is called by:
 43077 ;;		_low_isr
 43078 ;; This function uses a non-reentrant model
 43079 ;;
 43080                           
 43081                           	psect	text114
 43082  00ADB8                     __ptext114:
 43083                           	opt stack 0
 43084  00ADB8                     i1_ReadUSART:
 43085                           	opt stack 19
 43086                           
 43087                           ;UART.c: 265: unsigned char data;
 43088                           ;UART.c: 267: if(RCSTAbits.OERR)
 43089                           
 43090                           ;incstack = 0
 43091  00ADB8  A2AB               	btfss	4011,1,c	;volatile
 43092  00ADBA  D004               	goto	i1l828
 43093                           
 43094                           ;UART.c: 268: {
 43095                           ;UART.c: 270: RCSTAbits.CREN = 0;
 43096  00ADBC  98AB               	bcf	4011,4,c	;volatile
 43097                           
 43098                           ;UART.c: 271: RCSTAbits.CREN = 1;
 43099  00ADBE  88AB               	bsf	4011,4,c	;volatile
 43100                           
 43101                           ;UART.c: 272: return 0;
 43102  00ADC0  0E00               	movlw	0
 43103  00ADC2  0012               	return	
 43104  00ADC4                     i1l828:
 43105                           
 43106                           ;UART.c: 273: }
 43107                           ;UART.c: 275: data = RCREG;
 43108  00ADC4  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 43109                           
 43110                           ;UART.c: 276: return (data);
 43111  00ADC8  5001               	movf	i1ReadUSART@data,w,c
 43112  00ADCA  0012               	return	
 43113  00ADCC  0012               	return		;funcret
 43114  00ADCE                     __end_ofi1_ReadUSART:
 43115                           	opt stack 0
 43116                           pclatu	equ	0xFFB
 43117                           pclath	equ	0xFFA
 43118                           tblptru	equ	0xFF8
 43119                           tblptrh	equ	0xFF7
 43120                           tblptrl	equ	0xFF6
 43121                           tablat	equ	0xFF5
 43122                           prodh	equ	0xFF4
 43123                           prodl	equ	0xFF3
 43124                           intcon	equ	0xFF2
 43125                           intcon2	equ	0xFF1
 43126                           indf0	equ	0xFEF
 43127                           postinc0	equ	0xFEE
 43128                           plusw0	equ	0xFEB
 43129                           fsr0h	equ	0xFEA
 43130                           fsr0l	equ	0xFE9
 43131                           wreg	equ	0xFE8
 43132                           indf1	equ	0xFE7
 43133                           postdec1	equ	0xFE5
 43134                           fsr1h	equ	0xFE2
 43135                           fsr1l	equ	0xFE1
 43136                           bsr	equ	0xFE0
 43137                           indf2	equ	0xFDF
 43138                           postinc2	equ	0xFDE
 43139                           postdec2	equ	0xFDD
 43140                           plusw2	equ	0xFDB
 43141                           fsr2h	equ	0xFDA
 43142                           fsr2l	equ	0xFD9
 43143                           status	equ	0xFD8
 43144                           
 43145 ;; *************** function i1_BlueConnected *****************
 43146 ;; Defined at:
 43147 ;;		line 105 in file "Bluetooth.c"
 43148 ;; Parameters:    Size  Location     Type
 43149 ;;		None
 43150 ;; Auto vars:     Size  Location     Type
 43151 ;;		None
 43152 ;; Return value:  Size  Location     Type
 43153 ;;                  1    wreg      unsigned char 
 43154 ;; Registers used:
 43155 ;;		wreg
 43156 ;; Tracked objects:
 43157 ;;		On entry : 0/0
 43158 ;;		On exit  : 0/0
 43159 ;;		Unchanged: 0/0
 43160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43165 ;;Total ram usage:        0 bytes
 43166 ;; Hardware stack levels used:    1
 43167 ;; Hardware stack levels required when called:    2
 43168 ;; This function calls:
 43169 ;;		Nothing
 43170 ;; This function is called by:
 43171 ;;		_low_isr
 43172 ;; This function uses a non-reentrant model
 43173 ;;
 43174                           
 43175                           	psect	text115
 43176  00AEC6                     __ptext115:
 43177                           	opt stack 0
 43178  00AEC6                     i1_BlueConnected:
 43179                           	opt stack 19
 43180                           
 43181                           ;Bluetooth.c: 108: if((PORTA & 0x02) == 0x02)
 43182                           
 43183                           ;incstack = 0
 43184  00AEC6  A280               	btfss	3968,1,c	;volatile
 43185  00AEC8  D002               	goto	i1l14052
 43186                           
 43187                           ;Bluetooth.c: 109: {
 43188                           ;Bluetooth.c: 110: return 1;
 43189  00AECA  0E01               	movlw	1
 43190  00AECC  0012               	return	
 43191  00AECE                     i1l14052:
 43192                           
 43193                           ;Bluetooth.c: 111: }
 43194                           ;Bluetooth.c: 112: return 0;
 43195  00AECE  0E00               	movlw	0
 43196  00AED0  0012               	return	
 43197  00AED2  0012               	return		;funcret
 43198  00AED4                     __end_ofi1_BlueConnected:
 43199                           	opt stack 0
 43200                           pclatu	equ	0xFFB
 43201                           pclath	equ	0xFFA
 43202                           tblptru	equ	0xFF8
 43203                           tblptrh	equ	0xFF7
 43204                           tblptrl	equ	0xFF6
 43205                           tablat	equ	0xFF5
 43206                           prodh	equ	0xFF4
 43207                           prodl	equ	0xFF3
 43208                           intcon	equ	0xFF2
 43209                           intcon2	equ	0xFF1
 43210                           indf0	equ	0xFEF
 43211                           postinc0	equ	0xFEE
 43212                           plusw0	equ	0xFEB
 43213                           fsr0h	equ	0xFEA
 43214                           fsr0l	equ	0xFE9
 43215                           wreg	equ	0xFE8
 43216                           indf1	equ	0xFE7
 43217                           postdec1	equ	0xFE5
 43218                           fsr1h	equ	0xFE2
 43219                           fsr1l	equ	0xFE1
 43220                           bsr	equ	0xFE0
 43221                           indf2	equ	0xFDF
 43222                           postinc2	equ	0xFDE
 43223                           postdec2	equ	0xFDD
 43224                           plusw2	equ	0xFDB
 43225                           fsr2h	equ	0xFDA
 43226                           fsr2l	equ	0xFD9
 43227                           status	equ	0xFD8
 43228                           
 43229 ;; *************** function _IsCharacter *****************
 43230 ;; Defined at:
 43231 ;;		line 129 in file "MISC.c"
 43232 ;; Parameters:    Size  Location     Type
 43233 ;;  data            1    wreg     unsigned char 
 43234 ;; Auto vars:     Size  Location     Type
 43235 ;;  data            1    0[COMRAM] unsigned char 
 43236 ;; Return value:  Size  Location     Type
 43237 ;;                  1    wreg      unsigned char 
 43238 ;; Registers used:
 43239 ;;		wreg, status,2, status,0
 43240 ;; Tracked objects:
 43241 ;;		On entry : 0/0
 43242 ;;		On exit  : 0/0
 43243 ;;		Unchanged: 0/0
 43244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43249 ;;Total ram usage:        1 bytes
 43250 ;; Hardware stack levels used:    1
 43251 ;; Hardware stack levels required when called:    2
 43252 ;; This function calls:
 43253 ;;		Nothing
 43254 ;; This function is called by:
 43255 ;;		_low_isr
 43256 ;; This function uses a non-reentrant model
 43257 ;;
 43258                           
 43259                           	psect	text116
 43260  00AD74                     __ptext116:
 43261                           	opt stack 0
 43262  00AD74                     _IsCharacter:
 43263                           	opt stack 19
 43264                           
 43265                           ;incstack = 0
 43266                           ;IsCharacter@data stored from wreg
 43267  00AD74  6E01               	movwf	IsCharacter@data,c
 43268                           
 43269                           ;MISC.c: 131: if(data >= 32 && data <= 126)
 43270  00AD76  0E1F               	movlw	31
 43271  00AD78  6401               	cpfsgt	IsCharacter@data,c
 43272  00AD7A  D005               	goto	i1l13822
 43273  00AD7C  0E7F               	movlw	127
 43274  00AD7E  6001               	cpfslt	IsCharacter@data,c
 43275  00AD80  D002               	goto	i1l13822
 43276                           
 43277                           ;MISC.c: 132: {
 43278                           ;MISC.c: 133: return 1;
 43279  00AD82  0E01               	movlw	1
 43280  00AD84  0012               	return	
 43281  00AD86                     i1l13822:
 43282                           
 43283                           ;MISC.c: 134: }
 43284                           ;MISC.c: 135: return 0;
 43285  00AD86  0E00               	movlw	0
 43286  00AD88  0012               	return	
 43287  00AD8A  0012               	return		;funcret
 43288  00AD8C                     __end_of_IsCharacter:
 43289                           	opt stack 0
 43290                           pclatu	equ	0xFFB
 43291                           pclath	equ	0xFFA
 43292                           tblptru	equ	0xFF8
 43293                           tblptrh	equ	0xFF7
 43294                           tblptrl	equ	0xFF6
 43295                           tablat	equ	0xFF5
 43296                           prodh	equ	0xFF4
 43297                           prodl	equ	0xFF3
 43298                           intcon	equ	0xFF2
 43299                           intcon2	equ	0xFF1
 43300                           indf0	equ	0xFEF
 43301                           postinc0	equ	0xFEE
 43302                           plusw0	equ	0xFEB
 43303                           fsr0h	equ	0xFEA
 43304                           fsr0l	equ	0xFE9
 43305                           wreg	equ	0xFE8
 43306                           indf1	equ	0xFE7
 43307                           postdec1	equ	0xFE5
 43308                           fsr1h	equ	0xFE2
 43309                           fsr1l	equ	0xFE1
 43310                           bsr	equ	0xFE0
 43311                           indf2	equ	0xFDF
 43312                           postinc2	equ	0xFDE
 43313                           postdec2	equ	0xFDD
 43314                           plusw2	equ	0xFDB
 43315                           fsr2h	equ	0xFDA
 43316                           fsr2l	equ	0xFD9
 43317                           status	equ	0xFD8
 43318                           
 43319 ;; *************** function _EraseScreen *****************
 43320 ;; Defined at:
 43321 ;;		line 361 in file "UART.c"
 43322 ;; Parameters:    Size  Location     Type
 43323 ;;  characters      1    wreg     unsigned char 
 43324 ;; Auto vars:     Size  Location     Type
 43325 ;;  characters      1    1[COMRAM] unsigned char 
 43326 ;;  i               1    2[COMRAM] unsigned char 
 43327 ;; Return value:  Size  Location     Type
 43328 ;;		None               void
 43329 ;; Registers used:
 43330 ;;		wreg, status,2, status,0, cstack
 43331 ;; Tracked objects:
 43332 ;;		On entry : 0/0
 43333 ;;		On exit  : 0/0
 43334 ;;		Unchanged: 0/0
 43335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43340 ;;Total ram usage:        2 bytes
 43341 ;; Hardware stack levels used:    1
 43342 ;; Hardware stack levels required when called:    3
 43343 ;; This function calls:
 43344 ;;		i1_UARTchar
 43345 ;; This function is called by:
 43346 ;;		_low_isr
 43347 ;; This function uses a non-reentrant model
 43348 ;;
 43349                           
 43350                           	psect	text117
 43351  00AC9A                     __ptext117:
 43352                           	opt stack 0
 43353  00AC9A                     _EraseScreen:
 43354                           	opt stack 18
 43355                           
 43356                           ;incstack = 0
 43357                           ;EraseScreen@characters stored from wreg
 43358  00AC9A  6E02               	movwf	EraseScreen@characters,c
 43359                           
 43360                           ;UART.c: 363: unsigned char i;
 43361                           ;UART.c: 365: UARTchar('\r');
 43362  00AC9C  0E0D               	movlw	13
 43363  00AC9E  ECE7  F056         	call	i1_UARTchar
 43364                           
 43365                           ;UART.c: 366: for (i = 0; i < characters; i++)
 43366  00ACA2  0E00               	movlw	0
 43367  00ACA4  6E03               	movwf	EraseScreen@i,c
 43368  00ACA6  D005               	goto	i1l13834
 43369  00ACA8                     i1l13830:
 43370                           
 43371                           ;UART.c: 367: {
 43372                           ;UART.c: 368: UARTchar(' ');
 43373  00ACA8  0E20               	movlw	32
 43374  00ACAA  ECE7  F056         	call	i1_UARTchar
 43375  00ACAE  2A03               	incf	EraseScreen@i,f,c
 43376  00ACB0  D000               	goto	i1l13834
 43377  00ACB2                     i1l13834:
 43378  00ACB2  5002               	movf	EraseScreen@characters,w,c
 43379  00ACB4  5C03               	subwf	EraseScreen@i,w,c
 43380  00ACB6  A0D8               	btfss	status,0,c
 43381  00ACB8  D7F7               	goto	i1l13830
 43382                           
 43383                           ;UART.c: 369: }
 43384                           ;UART.c: 370: UARTchar('\r');
 43385  00ACBA  0E0D               	movlw	13
 43386  00ACBC  ECE7  F056         	call	i1_UARTchar
 43387  00ACC0  0012               	return		;funcret
 43388  00ACC2                     __end_of_EraseScreen:
 43389                           	opt stack 0
 43390                           pclatu	equ	0xFFB
 43391                           pclath	equ	0xFFA
 43392                           tblptru	equ	0xFF8
 43393                           tblptrh	equ	0xFF7
 43394                           tblptrl	equ	0xFF6
 43395                           tablat	equ	0xFF5
 43396                           prodh	equ	0xFF4
 43397                           prodl	equ	0xFF3
 43398                           intcon	equ	0xFF2
 43399                           intcon2	equ	0xFF1
 43400                           indf0	equ	0xFEF
 43401                           postinc0	equ	0xFEE
 43402                           plusw0	equ	0xFEB
 43403                           fsr0h	equ	0xFEA
 43404                           fsr0l	equ	0xFE9
 43405                           wreg	equ	0xFE8
 43406                           indf1	equ	0xFE7
 43407                           postdec1	equ	0xFE5
 43408                           fsr1h	equ	0xFE2
 43409                           fsr1l	equ	0xFE1
 43410                           bsr	equ	0xFE0
 43411                           indf2	equ	0xFDF
 43412                           postinc2	equ	0xFDE
 43413                           postdec2	equ	0xFDD
 43414                           plusw2	equ	0xFDB
 43415                           fsr2h	equ	0xFDA
 43416                           fsr2l	equ	0xFD9
 43417                           status	equ	0xFD8
 43418                           
 43419 ;; *************** function i1_UARTchar *****************
 43420 ;; Defined at:
 43421 ;;		line 193 in file "UART.c"
 43422 ;; Parameters:    Size  Location     Type
 43423 ;;  data            1    wreg     unsigned char 
 43424 ;; Auto vars:     Size  Location     Type
 43425 ;;  data            1    0[COMRAM] unsigned char 
 43426 ;; Return value:  Size  Location     Type
 43427 ;;		None               void
 43428 ;; Registers used:
 43429 ;;		wreg, status,2
 43430 ;; Tracked objects:
 43431 ;;		On entry : 0/0
 43432 ;;		On exit  : 0/0
 43433 ;;		Unchanged: 0/0
 43434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43439 ;;Total ram usage:        1 bytes
 43440 ;; Hardware stack levels used:    1
 43441 ;; Hardware stack levels required when called:    2
 43442 ;; This function calls:
 43443 ;;		Nothing
 43444 ;; This function is called by:
 43445 ;;		_EraseScreen
 43446 ;;		_low_isr
 43447 ;;		i1_UARTstring
 43448 ;; This function uses a non-reentrant model
 43449 ;;
 43450                           
 43451                           	psect	text118
 43452  00ADCE                     __ptext118:
 43453                           	opt stack 0
 43454  00ADCE                     i1_UARTchar:
 43455                           	opt stack 18
 43456                           
 43457                           ;incstack = 0
 43458                           ;i1UARTchar@data stored from wreg
 43459  00ADCE  6E01               	movwf	i1UARTchar@data,c
 43460                           
 43461                           ;UART.c: 195: if(data != 0)
 43462  00ADD0  5001               	movf	i1UARTchar@data,w,c
 43463  00ADD2  B4D8               	btfsc	status,2,c
 43464  00ADD4  0012               	return	
 43465                           
 43466                           ;UART.c: 196: {
 43467                           ;UART.c: 197: while(!TXSTAbits.TRMT);
 43468  00ADD6  D000               	goto	i1l800
 43469  00ADD8                     i1l800:
 43470  00ADD8  A2AC               	btfss	4012,1,c	;volatile
 43471  00ADDA  D7FE               	goto	i1l800
 43472                           
 43473                           ;UART.c: 198: TXREG = data;
 43474  00ADDC  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 43475  00ADE0  0012               	return	
 43476  00ADE2  0012               	return		;funcret
 43477  00ADE4                     __end_ofi1_UARTchar:
 43478                           	opt stack 0
 43479                           pclatu	equ	0xFFB
 43480                           pclath	equ	0xFFA
 43481                           tblptru	equ	0xFF8
 43482                           tblptrh	equ	0xFF7
 43483                           tblptrl	equ	0xFF6
 43484                           tablat	equ	0xFF5
 43485                           prodh	equ	0xFF4
 43486                           prodl	equ	0xFF3
 43487                           intcon	equ	0xFF2
 43488                           intcon2	equ	0xFF1
 43489                           indf0	equ	0xFEF
 43490                           postinc0	equ	0xFEE
 43491                           plusw0	equ	0xFEB
 43492                           fsr0h	equ	0xFEA
 43493                           fsr0l	equ	0xFE9
 43494                           wreg	equ	0xFE8
 43495                           indf1	equ	0xFE7
 43496                           postdec1	equ	0xFE5
 43497                           fsr1h	equ	0xFE2
 43498                           fsr1l	equ	0xFE1
 43499                           bsr	equ	0xFE0
 43500                           indf2	equ	0xFDF
 43501                           postinc2	equ	0xFDE
 43502                           postdec2	equ	0xFDD
 43503                           plusw2	equ	0xFDB
 43504                           fsr2h	equ	0xFDA
 43505                           fsr2l	equ	0xFD9
 43506                           status	equ	0xFD8
 43507                           
 43508 ;; *************** function _high_isr *****************
 43509 ;; Defined at:
 43510 ;;		line 59 in file "interrupts.c"
 43511 ;; Parameters:    Size  Location     Type
 43512 ;;		None
 43513 ;; Auto vars:     Size  Location     Type
 43514 ;;  Time0           2   55[COMRAM] unsigned int 
 43515 ;;  IRpin           1   54[COMRAM] unsigned char 
 43516 ;; Return value:  Size  Location     Type
 43517 ;;		None               void
 43518 ;; Registers used:
 43519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43520 ;; Tracked objects:
 43521 ;;		On entry : 0/0
 43522 ;;		On exit  : 0/0
 43523 ;;		Unchanged: 0/0
 43524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43526 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43527 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43528 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43529 ;;Total ram usage:       21 bytes
 43530 ;; Hardware stack levels used:    1
 43531 ;; Hardware stack levels required when called:    1
 43532 ;; This function calls:
 43533 ;;		_IRrawToNEC
 43534 ;;		_ResetTimer3
 43535 ;;		_SetTimer0
 43536 ;;		i2_ReadIRpin
 43537 ;;		i2_ResetTimer0
 43538 ;;		i2_cleanBuffer16bit
 43539 ;; This function is called by:
 43540 ;;		Interrupt level 2
 43541 ;; This function uses a non-reentrant model
 43542 ;;
 43543                           
 43544                           	psect	intcode
 43545  000008                     __pintcode:
 43546                           	opt stack 0
 43547  000008                     _high_isr:
 43548                           	opt stack 18
 43549                           
 43550                           ;incstack = 0
 43551  000008  CFFA F029          	movff	pclath,??_high_isr+4
 43552  00000C  CFFB F02A          	movff	pclatu,??_high_isr+5
 43553  000010  CFE9 F02B          	movff	fsr0l,??_high_isr+6
 43554  000014  EF1A  F02B         	goto	int_func
 43555                           pclatu	equ	0xFFB
 43556                           pclath	equ	0xFFA
 43557                           tblptru	equ	0xFF8
 43558                           tblptrh	equ	0xFF7
 43559                           tblptrl	equ	0xFF6
 43560                           tablat	equ	0xFF5
 43561                           prodh	equ	0xFF4
 43562                           prodl	equ	0xFF3
 43563                           intcon	equ	0xFF2
 43564                           intcon2	equ	0xFF1
 43565                           indf0	equ	0xFEF
 43566                           postinc0	equ	0xFEE
 43567                           plusw0	equ	0xFEB
 43568                           fsr0h	equ	0xFEA
 43569                           fsr0l	equ	0xFE9
 43570                           wreg	equ	0xFE8
 43571                           indf1	equ	0xFE7
 43572                           postdec1	equ	0xFE5
 43573                           fsr1h	equ	0xFE2
 43574                           fsr1l	equ	0xFE1
 43575                           bsr	equ	0xFE0
 43576                           indf2	equ	0xFDF
 43577                           postinc2	equ	0xFDE
 43578                           postdec2	equ	0xFDD
 43579                           plusw2	equ	0xFDB
 43580                           fsr2h	equ	0xFDA
 43581                           fsr2l	equ	0xFD9
 43582                           status	equ	0xFD8
 43583                           
 43584                           	psect	intcode_body
 43585  005634                     __pintcode_body:
 43586                           	opt stack 18
 43587  005634                     int_func:
 43588                           	opt stack 18
 43589  005634  CFEA F02C          	movff	fsr0h,??_high_isr+7
 43590  005638  CFE1 F02D          	movff	fsr1l,??_high_isr+8
 43591  00563C  CFE2 F02E          	movff	fsr1h,??_high_isr+9
 43592  005640  CFD9 F02F          	movff	fsr2l,??_high_isr+10
 43593  005644  CFDA F030          	movff	fsr2h,??_high_isr+11
 43594  005648  CFF3 F031          	movff	prodl,??_high_isr+12
 43595  00564C  CFF4 F032          	movff	prodh,??_high_isr+13
 43596  005650  CFF6 F033          	movff	tblptrl,??_high_isr+14
 43597  005654  CFF7 F034          	movff	tblptrh,??_high_isr+15
 43598  005658  CFF8 F035          	movff	tblptru,??_high_isr+16
 43599  00565C  CFF5 F036          	movff	tablat,??_high_isr+17
 43600                           
 43601                           ;interrupts.c: 68: unsigned char IRpin;
 43602                           ;interrupts.c: 69: unsigned int Time0;
 43603                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 43604  005660  9EF2               	bcf	intcon,7,c	;volatile
 43605                           
 43606                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 43607  005662  A0F2               	btfss	intcon,0,c	;volatile
 43608  005664  D079               	goto	i2l1408
 43609                           
 43610                           ;interrupts.c: 74: {
 43611                           ;interrupts.c: 75: __nop();
 43612  005666  F000               	nop	
 43613                           
 43614                           ;interrupts.c: 76: __nop();
 43615  005668  F000               	nop	
 43616                           
 43617                           ;interrupts.c: 77: IRtimeout = 0;
 43618  00566A  0E00               	movlw	0
 43619  00566C  0103               	movlb	3	; () banked
 43620  00566E  6FF1               	movwf	_IRtimeout& (0+255),b
 43621  005670  0E00               	movlw	0
 43622  005672  6FF2               	movwf	(_IRtimeout+1)& (0+255),b
 43623  005674  0E00               	movlw	0
 43624  005676  6FF3               	movwf	(_IRtimeout+2)& (0+255),b
 43625  005678  0E00               	movlw	0
 43626  00567A  6FF4               	movwf	(_IRtimeout+3)& (0+255),b
 43627                           
 43628                           ; BSR set to: 3
 43629                           ;interrupts.c: 78: IRpin = ReadIRpin();
 43630  00567C  EC6A  F057         	call	i2_ReadIRpin	;wreg free
 43631  005680  6E37               	movwf	high_isr@IRpin,c
 43632                           
 43633                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 43634  005682  5040               	movf	_IRpinOLD,w,c
 43635  005684  1837               	xorwf	high_isr@IRpin,w,c
 43636  005686  B4D8               	btfsc	status,2,c
 43637  005688  D061               	goto	i2l1409
 43638                           
 43639                           ;interrupts.c: 80: {
 43640                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 43641  00568A  8ED5               	bsf	4053,7,c	;volatile
 43642                           
 43643                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 43644  00568C  8AF2               	bsf	intcon,5,c	;volatile
 43645                           
 43646                           ;interrupts.c: 83: ReceivingIR = 19;
 43647  00568E  0E13               	movlw	19
 43648  005690  6E50               	movwf	_ReceivingIR,c	;volatile
 43649                           
 43650                           ;interrupts.c: 84: IR_New_Code = 0;
 43651  005692  0E00               	movlw	0
 43652  005694  0103               	movlb	3	; () banked
 43653  005696  6FF0               	movwf	_IR_New_Code& (0+255),b
 43654                           
 43655                           ; BSR set to: 3
 43656                           ;interrupts.c: 85: Time0 = TMR0L;
 43657  005698  CFD6 F038          	movff	4054,high_isr@Time0	;volatile
 43658  00569C  6A39               	clrf	high_isr@Time0+1,c
 43659                           
 43660                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 43661  00569E  50D7               	movf	4055,w,c	;volatile
 43662  0056A0  2639               	addwf	high_isr@Time0+1,f,c
 43663                           
 43664                           ; BSR set to: 3
 43665                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 43666  0056A2  0E64               	movlw	100
 43667  0056A4  6041               	cpfslt	_IRrawCodeNum,c
 43668  0056A6  D04D               	goto	i2l1410
 43669                           
 43670                           ; BSR set to: 3
 43671                           ;interrupts.c: 88: {
 43672                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 43673  0056A8  5041               	movf	_IRrawCodeNum,w,c
 43674  0056AA  B4D8               	btfsc	status,2,c
 43675  0056AC  D042               	goto	i2l14360
 43676                           
 43677                           ; BSR set to: 3
 43678  0056AE  0E65               	movlw	101
 43679  0056B0  6041               	cpfslt	_IRrawCodeNum,c
 43680  0056B2  D03F               	goto	i2l14360
 43681                           
 43682                           ; BSR set to: 3
 43683                           ;interrupts.c: 90: {
 43684                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 43685  0056B4  0EFE               	movlw	254
 43686  0056B6  6E25               	movwf	??_high_isr& (0+255),c
 43687  0056B8  0EFF               	movlw	255
 43688  0056BA  6E26               	movwf	(??_high_isr+1)& (0+255),c
 43689  0056BC  5041               	movf	_IRrawCodeNum,w,c
 43690  0056BE  6E27               	movwf	(??_high_isr+2)& (0+255),c
 43691  0056C0  6A28               	clrf	(??_high_isr+3)& (0+255),c
 43692  0056C2  90D8               	bcf	status,0,c
 43693  0056C4  3627               	rlcf	??_high_isr+2,f,c
 43694  0056C6  3628               	rlcf	??_high_isr+3,f,c
 43695  0056C8  5025               	movf	??_high_isr,w,c
 43696  0056CA  2627               	addwf	??_high_isr+2,f,c
 43697  0056CC  5026               	movf	??_high_isr+1,w,c
 43698  0056CE  2228               	addwfc	??_high_isr+3,f,c
 43699  0056D0  0E00               	movlw	low _IRRawCode
 43700  0056D2  2427               	addwf	??_high_isr+2,w,c
 43701  0056D4  6ED9               	movwf	fsr2l,c
 43702  0056D6  0E06               	movlw	high _IRRawCode
 43703  0056D8  2028               	addwfc	??_high_isr+3,w,c
 43704  0056DA  6EDA               	movwf	fsr2h,c
 43705  0056DC  C038  FFDE         	movff	high_isr@Time0,postinc2
 43706  0056E0  C039  FFDD         	movff	high_isr@Time0+1,postdec2
 43707                           
 43708                           ; BSR set to: 3
 43709                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 43710  0056E4  0E09               	movlw	9
 43711  0056E6  5C38               	subwf	high_isr@Time0,w,c
 43712  0056E8  0E52               	movlw	82
 43713  0056EA  5839               	subwfb	high_isr@Time0+1,w,c
 43714  0056EC  B0D8               	btfsc	status,0,c
 43715  0056EE  D00A               	goto	i2l14350
 43716                           
 43717                           ; BSR set to: 3
 43718  0056F0  0E38               	movlw	56
 43719  0056F2  5C38               	subwf	high_isr@Time0,w,c
 43720  0056F4  0E4A               	movlw	74
 43721  0056F6  5839               	subwfb	high_isr@Time0+1,w,c
 43722  0056F8  A0D8               	btfss	status,0,c
 43723  0056FA  D004               	goto	i2l14350
 43724                           
 43725                           ; BSR set to: 3
 43726                           ;interrupts.c: 93: {
 43727                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 43728  0056FC  987D               	bcf	3965,4,c	;volatile
 43729                           
 43730                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 43731  0056FE  96F2               	bcf	intcon,3,c	;volatile
 43732                           
 43733                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 43734  005700  84F2               	bsf	intcon,2,c	;volatile
 43735                           
 43736                           ;interrupts.c: 99: }
 43737  005702  D01A               	goto	i2l14362
 43738  005704                     i2l14350:
 43739                           
 43740                           ; BSR set to: 3
 43741                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 43742  005704  0E51               	movlw	81
 43743  005706  5C38               	subwf	high_isr@Time0,w,c
 43744  005708  0EC3               	movlw	195
 43745  00570A  5839               	subwfb	high_isr@Time0+1,w,c
 43746  00570C  B0D8               	btfsc	status,0,c
 43747  00570E  D00E               	goto	i2l14358
 43748                           
 43749                           ; BSR set to: 3
 43750  005710  0EC8               	movlw	200
 43751  005712  5C38               	subwf	high_isr@Time0,w,c
 43752  005714  0EAF               	movlw	175
 43753  005716  5839               	subwfb	high_isr@Time0+1,w,c
 43754  005718  A0D8               	btfss	status,0,c
 43755  00571A  D008               	goto	i2l14358
 43756                           
 43757                           ; BSR set to: 3
 43758                           ;interrupts.c: 101: {
 43759                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 43760  00571C  987D               	bcf	3965,4,c	;volatile
 43761                           
 43762                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 43763  00571E  96F2               	bcf	intcon,3,c	;volatile
 43764                           
 43765                           ; BSR set to: 3
 43766                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 43767  005720  0E8F               	movlw	143
 43768  005722  6E18               	movwf	SetTimer0@temp+1,c
 43769  005724  6817               	setf	SetTimer0@temp,c
 43770  005726  EC85  F057         	call	_SetTimer0	;wreg free
 43771                           
 43772                           ;interrupts.c: 107: }
 43773  00572A  D006               	goto	i2l14362
 43774  00572C                     i2l14358:
 43775                           
 43776                           ;interrupts.c: 108: else
 43777                           ;interrupts.c: 109: {
 43778                           ;interrupts.c: 110: ResetTimer0();
 43779  00572C  EC80  F057         	call	i2_ResetTimer0	;wreg free
 43780                           
 43781                           ;interrupts.c: 111: }
 43782                           ;interrupts.c: 112: }
 43783  005730  D003               	goto	i2l14362
 43784  005732                     i2l14360:
 43785                           
 43786                           ;interrupts.c: 113: else
 43787                           ;interrupts.c: 114: {
 43788                           ;interrupts.c: 115: ResetTimer0();
 43789  005732  EC80  F057         	call	i2_ResetTimer0	;wreg free
 43790  005736  D000               	goto	i2l14362
 43791  005738                     i2l14362:
 43792                           
 43793                           ;interrupts.c: 116: }
 43794                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 43795  005738  0E65               	movlw	101
 43796  00573A  6041               	cpfslt	_IRrawCodeNum,c
 43797  00573C  D004               	goto	i2l1418
 43798                           
 43799                           ;interrupts.c: 118: {
 43800                           ;interrupts.c: 119: IRrawCodeNum++;
 43801  00573E  2A41               	incf	_IRrawCodeNum,f,c
 43802                           
 43803                           ;interrupts.c: 120: }
 43804                           ;interrupts.c: 121: }
 43805  005740  D002               	goto	i2l1418
 43806  005742                     i2l1410:
 43807                           
 43808                           ; BSR set to: 3
 43809                           ;interrupts.c: 122: else
 43810                           ;interrupts.c: 123: {
 43811                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 43812  005742  987D               	bcf	3965,4,c	;volatile
 43813                           
 43814                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 43815  005744  96F2               	bcf	intcon,3,c	;volatile
 43816  005746                     i2l1418:
 43817                           
 43818                           ;interrupts.c: 126: }
 43819                           ;interrupts.c: 127: IRpinOLD = IRpin;
 43820  005746  C037  F040         	movff	high_isr@IRpin,_IRpinOLD
 43821                           
 43822                           ;interrupts.c: 128: }
 43823  00574A  D002               	goto	i2l14366
 43824  00574C                     i2l1409:
 43825                           
 43826                           ;interrupts.c: 129: else
 43827                           ;interrupts.c: 130: {
 43828                           ;interrupts.c: 132: __nop();
 43829  00574C  F000               	nop	
 43830  00574E  D000               	goto	i2l14366
 43831  005750                     i2l14366:
 43832                           
 43833                           ;interrupts.c: 133: }
 43834                           ;interrupts.c: 135: ReadIRpin();
 43835  005750  EC6A  F057         	call	i2_ReadIRpin	;wreg free
 43836                           
 43837                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 43838  005754  90F2               	bcf	intcon,0,c	;volatile
 43839                           
 43840                           ;interrupts.c: 137: }
 43841  005756  D218               	goto	i2l1420
 43842  005758                     i2l1408:
 43843                           
 43844                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 43845  005758  A4F2               	btfss	intcon,2,c	;volatile
 43846  00575A  D030               	goto	i2l1421
 43847                           
 43848                           ;interrupts.c: 139: {
 43849                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 43850  00575C  9AF2               	bcf	intcon,5,c	;volatile
 43851                           
 43852                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 43853  00575E  9ED5               	bcf	4053,7,c	;volatile
 43854                           
 43855                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 43856  005760  0E03               	movlw	3
 43857  005762  6441               	cpfsgt	_IRrawCodeNum,c
 43858  005764  D00E               	goto	i2l1422
 43859                           
 43860                           ;interrupts.c: 144: {
 43861                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 43862  005766  0E00               	movlw	low _IRRawCode
 43863  005768  6E17               	movwf	IRrawToNEC@Raw,c
 43864  00576A  0E06               	movlw	high _IRRawCode
 43865  00576C  6E18               	movwf	IRrawToNEC@Raw+1,c
 43866  00576E  0EEC               	movlw	low _IR_NEC
 43867  005770  6E19               	movwf	IRrawToNEC@NEC,c
 43868  005772  0E03               	movlw	high _IR_NEC
 43869  005774  6E1A               	movwf	IRrawToNEC@NEC+1,c
 43870  005776  0E01               	movlw	1
 43871  005778  6E1B               	movwf	IRrawToNEC@Invert,c
 43872  00577A  ECD6  F034         	call	_IRrawToNEC	;wreg free
 43873  00577E  0103               	movlb	3	; () banked
 43874  005780  6FF0               	movwf	_IR_New_Code& (0+255),b
 43875  005782                     i2l1422:
 43876                           
 43877                           ;interrupts.c: 146: }
 43878                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 43879  005782  0E00               	movlw	low _IRRawCode
 43880  005784  6E17               	movwf	i2cleanBuffer16bit@data,c
 43881  005786  0E06               	movlw	high _IRRawCode
 43882  005788  6E18               	movwf	i2cleanBuffer16bit@data+1,c
 43883  00578A  0E00               	movlw	0
 43884  00578C  6E1A               	movwf	i2cleanBuffer16bit@count+1,c
 43885  00578E  0E64               	movlw	100
 43886  005790  6E19               	movwf	i2cleanBuffer16bit@count,c
 43887  005792  EC9C  F054         	call	i2_cleanBuffer16bit	;wreg free
 43888                           
 43889                           ;interrupts.c: 148: IRrawCodeNum = 0;
 43890  005796  0E00               	movlw	0
 43891  005798  6E41               	movwf	_IRrawCodeNum,c
 43892                           
 43893                           ;interrupts.c: 149: if(!IR_New_Code)
 43894  00579A  0103               	movlb	3	; () banked
 43895  00579C  51F0               	movf	_IR_New_Code& (0+255),w,b
 43896  00579E  A4D8               	btfss	status,2,c
 43897  0057A0  D009               	goto	i2l14390
 43898                           
 43899                           ; BSR set to: 3
 43900                           ;interrupts.c: 150: {
 43901                           ;interrupts.c: 151: ReadIRpin();
 43902  0057A2  EC6A  F057         	call	i2_ReadIRpin	;wreg free
 43903                           
 43904                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 43905  0057A6  EC6A  F057         	call	i2_ReadIRpin	;wreg free
 43906  0057AA  6E40               	movwf	_IRpinOLD,c
 43907                           
 43908                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 43909  0057AC  90F2               	bcf	intcon,0,c	;volatile
 43910                           
 43911                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 43912  0057AE  887D               	bsf	3965,4,c	;volatile
 43913                           
 43914                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 43915  0057B0  86F2               	bsf	intcon,3,c	;volatile
 43916  0057B2  D000               	goto	i2l14390
 43917  0057B4                     i2l14390:
 43918                           
 43919                           ;interrupts.c: 156: }
 43920                           ;interrupts.c: 157: ReceivingIR = 13;
 43921  0057B4  0E0D               	movlw	13
 43922  0057B6  6E50               	movwf	_ReceivingIR,c	;volatile
 43923                           
 43924                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 43925  0057B8  94F2               	bcf	intcon,2,c	;volatile
 43926                           
 43927                           ;interrupts.c: 159: }
 43928  0057BA  D1E6               	goto	i2l1420
 43929  0057BC                     i2l1421:
 43930                           
 43931                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 43932  0057BC  A29E               	btfss	3998,1,c	;volatile
 43933  0057BE  D1D1               	goto	i2l1425
 43934                           
 43935                           ;interrupts.c: 161: {
 43936                           ;interrupts.c: 164: Timer2_Postscaler++;
 43937  0057C0  2A4A               	incf	_Timer2_Postscaler,f,c
 43938                           
 43939                           ;interrupts.c: 165: if(RF_IR == 55)
 43940  0057C2  0E37               	movlw	55
 43941  0057C4  184E               	xorwf	_RF_IR,w,c
 43942  0057C6  A4D8               	btfss	status,2,c
 43943  0057C8  D10C               	goto	i2l14628
 43944                           
 43945                           ;interrupts.c: 166: {
 43946                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 43947  0057CA  504F               	movf	_RF_IR_Postscaler,w,c	;volatile
 43948  0057CC  5C4A               	subwf	_Timer2_Postscaler,w,c
 43949  0057CE  A0D8               	btfss	status,0,c
 43950  0057D0  D103               	goto	i2l14624
 43951                           
 43952                           ;interrupts.c: 169: {
 43953                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 43954  0057D2  0E00               	movlw	0
 43955  0057D4  6E4A               	movwf	_Timer2_Postscaler,c
 43956                           
 43957                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 43958  0057D6  5045               	movf	_RFcodeBit,w,c
 43959  0057D8  0D01               	mullw	1
 43960  0057DA  0E8A               	movlw	low _RFsendCode
 43961  0057DC  24F3               	addwf	prodl,w,c
 43962  0057DE  6ED9               	movwf	fsr2l,c
 43963  0057E0  0E02               	movlw	high _RFsendCode
 43964  0057E2  20F4               	addwfc	prodh,w,c
 43965  0057E4  6EDA               	movwf	fsr2h,c
 43966  0057E6  0E63               	movlw	99
 43967  0057E8  18DE               	xorwf	postinc2,w,c
 43968  0057EA  B4D8               	btfsc	status,2,c
 43969  0057EC  D0B3               	goto	i2l14574
 43970                           
 43971                           ;interrupts.c: 172: {
 43972                           ;interrupts.c: 174: if(RFsendFlag)
 43973  0057EE  5047               	movf	_RFsendFlag,w,c	;volatile
 43974  0057F0  B4D8               	btfsc	status,2,c
 43975  0057F2  D0F2               	goto	i2l14624
 43976                           
 43977                           ;interrupts.c: 175: {
 43978                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 43979  0057F4  5045               	movf	_RFcodeBit,w,c
 43980  0057F6  0D01               	mullw	1
 43981  0057F8  0E8A               	movlw	low _RFsendCode
 43982  0057FA  24F3               	addwf	prodl,w,c
 43983  0057FC  6ED9               	movwf	fsr2l,c
 43984  0057FE  0E02               	movlw	high _RFsendCode
 43985  005800  20F4               	addwfc	prodh,w,c
 43986  005802  6EDA               	movwf	fsr2h,c
 43987  005804  50DF               	movf	indf2,w,c
 43988  005806  A4D8               	btfss	status,2,c
 43989  005808  D03F               	goto	i2l14466
 43990                           
 43991                           ;interrupts.c: 177: {
 43992                           ;interrupts.c: 179: if(RFConfig == 1)
 43993  00580A  0444               	decf	_RFConfig,w,c
 43994  00580C  A4D8               	btfss	status,2,c
 43995  00580E  D025               	goto	i2l14444
 43996                           
 43997                           ;interrupts.c: 180: {
 43998                           ;interrupts.c: 181: if(RFcodePlace == 1)
 43999  005810  0446               	decf	_RFcodePlace,w,c
 44000  005812  A4D8               	btfss	status,2,c
 44001  005814  D007               	goto	i2l14418
 44002  005816  D077               	goto	i2l14532
 44003  005818                     i2l14414:
 44004                           
 44005                           ;interrupts.c: 184: (PR2 = 8);
 44006  005818  0E08               	movlw	8
 44007  00581A                     L25:
 44008  00581A  6ECB               	movwf	4043,c	;volatile
 44009  00581C  D076               	goto	i2l14536
 44010  00581E                     L27:
 44011                           
 44012                           ;interrupts.c: 186: (TMR2 = 0);
 44013  00581E  0E00               	movlw	0
 44014  005820  6ECC               	movwf	4044,c	;volatile
 44015                           
 44016                           ;interrupts.c: 187: }
 44017  005822  D0DA               	goto	i2l14624
 44018  005824                     i2l14418:
 44019                           
 44020                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 44021  005824  0E02               	movlw	2
 44022  005826  1846               	xorwf	_RFcodePlace,w,c
 44023  005828  A4D8               	btfss	status,2,c
 44024  00582A  D004               	goto	i2l14426
 44025  00582C  D074               	goto	L41
 44026                           
 44027                           ;interrupts.c: 189: {
 44028                           ;interrupts.c: 190: (LATC &= ~0x20);
 44029  00582E  D03E               	goto	i2l14474
 44030  005830                     i2l14424:
 44031                           
 44032                           ;interrupts.c: 192: RFcodePlace++;
 44033  005830  2A46               	incf	_RFcodePlace,f,c
 44034                           
 44035                           ;interrupts.c: 193: }
 44036  005832  D0D2               	goto	i2l14624
 44037  005834                     i2l14426:
 44038                           
 44039                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 44040  005834  0E03               	movlw	3
 44041  005836  1846               	xorwf	_RFcodePlace,w,c
 44042  005838  A4D8               	btfss	status,2,c
 44043  00583A  D002               	goto	i2l14434
 44044  00583C  D064               	goto	i2l14532
 44045                           
 44046                           ;interrupts.c: 195: {
 44047                           ;interrupts.c: 196: (LATC |= 0x20);
 44048  00583E  D7EC               	goto	i2l14414
 44049  005840                     i2l14434:
 44050                           
 44051                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 44052  005840  0E04               	movlw	4
 44053  005842  1846               	xorwf	_RFcodePlace,w,c
 44054  005844  A4D8               	btfss	status,2,c
 44055  005846  D004               	goto	i2l1438
 44056                           
 44057                           ;interrupts.c: 202: {
 44058                           ;interrupts.c: 203: (LATC &= ~0x20);
 44059  005848  9A8B               	bcf	3979,5,c	;volatile
 44060                           
 44061                           ;interrupts.c: 204: (PR2 = 24);
 44062  00584A  0E18               	movlw	24
 44063  00584C  D051               	goto	L26
 44064  00584E  D016               	goto	i2l14460
 44065  005850                     i2l1438:
 44066                           
 44067                           ;interrupts.c: 208: else
 44068                           ;interrupts.c: 209: {
 44069                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 44070  005850  94CA               	bcf	4042,2,c	;volatile
 44071  005852  D07B               	goto	i2l14572
 44072  005854                     L30:
 44073                           
 44074                           ;interrupts.c: 213: RFsendFlag = 0;
 44075  005854  0E00               	movlw	0
 44076  005856  6E47               	movwf	_RFsendFlag,c	;volatile
 44077                           
 44078                           ; BSR set to: 0
 44079                           ;interrupts.c: 214: }
 44080                           ;interrupts.c: 215: }
 44081                           
 44082                           ; BSR set to: 0
 44083                           
 44084                           ; BSR set to: 0
 44085                           
 44086                           ; BSR set to: 0
 44087  005858  D0BF               	goto	i2l14624
 44088  00585A                     i2l14444:
 44089                           
 44090                           ;interrupts.c: 216: else if(RFConfig == 2)
 44091  00585A  0E02               	movlw	2
 44092  00585C  1844               	xorwf	_RFConfig,w,c
 44093  00585E  A4D8               	btfss	status,2,c
 44094  005860  D7F7               	goto	i2l1438
 44095                           
 44096                           ;interrupts.c: 217: {
 44097                           ;interrupts.c: 219: if(RFcodePlace == 1)
 44098  005862  0446               	decf	_RFcodePlace,w,c
 44099  005864  A4D8               	btfss	status,2,c
 44100  005866  D003               	goto	i2l14454
 44101                           
 44102                           ;interrupts.c: 220: {
 44103                           ;interrupts.c: 221: (LATC |= 0x20);
 44104  005868  8A8B               	bsf	3979,5,c	;volatile
 44105                           
 44106                           ;interrupts.c: 222: (PR2 = 11);
 44107  00586A  0E0B               	movlw	11
 44108  00586C  D7D6               	goto	L25
 44109  00586E                     i2l14454:
 44110                           
 44111                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 44112  00586E  0E02               	movlw	2
 44113  005870  1846               	xorwf	_RFcodePlace,w,c
 44114  005872  A4D8               	btfss	status,2,c
 44115  005874  D7ED               	goto	i2l1438
 44116                           
 44117                           ;interrupts.c: 227: {
 44118                           ;interrupts.c: 228: (LATC &= ~0x20);
 44119  005876  9A8B               	bcf	3979,5,c	;volatile
 44120                           
 44121                           ;interrupts.c: 229: (PR2 = 29);
 44122  005878  0E1D               	movlw	29
 44123  00587A  D03A               	goto	L26
 44124  00587C                     i2l14460:
 44125                           
 44126                           ;interrupts.c: 230: RFcodePlace = 1;
 44127  00587C  0E01               	movlw	1
 44128  00587E  6E46               	movwf	_RFcodePlace,c
 44129                           
 44130                           ;interrupts.c: 231: RFcodeBit++;
 44131  005880  2A45               	incf	_RFcodeBit,f,c
 44132                           
 44133                           ; BSR set to: 0
 44134                           ;interrupts.c: 239: }
 44135                           ;interrupts.c: 240: }
 44136                           
 44137                           ; BSR set to: 0
 44138                           
 44139                           ;interrupts.c: 238: RFsendFlag = 0;
 44140                           
 44141                           ;interrupts.c: 237: Sent = 1;
 44142                           
 44143                           ;interrupts.c: 233: else
 44144                           ;interrupts.c: 234: {
 44145                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 44146                           
 44147                           ;interrupts.c: 232: }
 44148  005882  D0AA               	goto	i2l14624
 44149                           
 44150                           ;interrupts.c: 241: else
 44151                           ;interrupts.c: 242: {
 44152                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 44153  005884  D062               	goto	i2l14572
 44154                           
 44155                           ; BSR set to: 0
 44156                           ;interrupts.c: 247: }
 44157                           ;interrupts.c: 248: }
 44158                           
 44159                           ; BSR set to: 0
 44160                           
 44161                           ;interrupts.c: 246: RFsendFlag = 0;
 44162                           
 44163                           ;interrupts.c: 245: Sent = 1;
 44164  005886  D0A8               	goto	i2l14624
 44165  005888                     i2l14466:
 44166                           
 44167                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 44168  005888  5045               	movf	_RFcodeBit,w,c
 44169  00588A  0D01               	mullw	1
 44170  00588C  0E8A               	movlw	low _RFsendCode
 44171  00588E  24F3               	addwf	prodl,w,c
 44172  005890  6ED9               	movwf	fsr2l,c
 44173  005892  0E02               	movlw	high _RFsendCode
 44174  005894  20F4               	addwfc	prodh,w,c
 44175  005896  6EDA               	movwf	fsr2h,c
 44176  005898  04DE               	decf	postinc2,w,c
 44177  00589A  A4D8               	btfss	status,2,c
 44178  00589C  D02E               	goto	i2l14528
 44179                           
 44180                           ;interrupts.c: 250: {
 44181                           ;interrupts.c: 251: if(RFConfig == 1)
 44182  00589E  0444               	decf	_RFConfig,w,c
 44183  0058A0  A4D8               	btfss	status,2,c
 44184  0058A2  D016               	goto	i2l14506
 44185                           
 44186                           ;interrupts.c: 252: {
 44187                           ;interrupts.c: 253: if(RFcodePlace == 1)
 44188  0058A4  0446               	decf	_RFcodePlace,w,c
 44189  0058A6  A4D8               	btfss	status,2,c
 44190  0058A8  D004               	goto	i2l14478
 44191  0058AA  D03C               	goto	L42
 44192  0058AC                     i2l14474:
 44193                           
 44194                           ;interrupts.c: 256: (PR2 = 24);
 44195  0058AC  0E18               	movlw	24
 44196  0058AE  6ECB               	movwf	4043,c	;volatile
 44197  0058B0  D7BF               	goto	i2l14424
 44198  0058B2                     i2l14478:
 44199                           
 44200                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 44201  0058B2  0E02               	movlw	2
 44202  0058B4  1846               	xorwf	_RFcodePlace,w,c
 44203  0058B6  A4D8               	btfss	status,2,c
 44204  0058B8  D031               	goto	i2l14546
 44205                           
 44206                           ;interrupts.c: 260: {
 44207                           ;interrupts.c: 261: (LATC &= ~0x20);
 44208  0058BA  9A8B               	bcf	3979,5,c	;volatile
 44209  0058BC  D7AD               	goto	i2l14414
 44210                           
 44211                           ;interrupts.c: 265: }
 44212                           
 44213                           ;interrupts.c: 264: (TMR2 = 0);
 44214                           
 44215                           ;interrupts.c: 263: RFcodePlace++;
 44216                           
 44217                           ;interrupts.c: 262: (PR2 = 8);
 44218  0058BE  D02E               	goto	i2l14546
 44219                           
 44220                           ;interrupts.c: 267: {
 44221                           ;interrupts.c: 268: (LATC |= 0x20);
 44222                           
 44223                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 44224  0058C0  D7F5               	goto	i2l14474
 44225                           
 44226                           ;interrupts.c: 269: (PR2 = 24);
 44227  0058C2  D7B6               	goto	i2l14424
 44228                           
 44229                           ;interrupts.c: 271: }
 44230                           
 44231                           ;interrupts.c: 270: RFcodePlace++;
 44232  0058C4  D032               	goto	i2l14554
 44233  0058C6                     i2l14498:
 44234                           
 44235                           ;interrupts.c: 275: (PR2 = 8);
 44236  0058C6  0E08               	movlw	8
 44237  0058C8  6ECB               	movwf	4043,c	;volatile
 44238  0058CA  D035               	goto	i2l14560
 44239                           
 44240                           ;interrupts.c: 277: RFcodeBit++;
 44241                           
 44242                           ;interrupts.c: 276: RFcodePlace = 1;
 44243  0058CC  D7A8               	goto	L27
 44244                           
 44245                           ; BSR set to: 0
 44246                           ;interrupts.c: 286: }
 44247                           ;interrupts.c: 287: }
 44248                           
 44249                           ; BSR set to: 0
 44250                           
 44251                           ; BSR set to: 0
 44252                           
 44253                           ; BSR set to: 0
 44254                           
 44255                           ;interrupts.c: 285: RFsendFlag = 0;
 44256                           
 44257                           ;interrupts.c: 284: Sent = 1;
 44258                           
 44259                           ;interrupts.c: 280: else
 44260                           ;interrupts.c: 281: {
 44261                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 44262                           
 44263                           ;interrupts.c: 279: }
 44264                           
 44265                           ;interrupts.c: 278: (TMR2 = 0);
 44266  0058CE  D084               	goto	i2l14624
 44267  0058D0                     i2l14506:
 44268                           
 44269                           ;interrupts.c: 288: else if(RFConfig == 2)
 44270  0058D0  0E02               	movlw	2
 44271  0058D2  1844               	xorwf	_RFConfig,w,c
 44272  0058D4  A4D8               	btfss	status,2,c
 44273  0058D6  D7BC               	goto	i2l1438
 44274                           
 44275                           ;interrupts.c: 289: {
 44276                           ;interrupts.c: 291: if(RFcodePlace == 1)
 44277  0058D8  0446               	decf	_RFcodePlace,w,c
 44278  0058DA  A4D8               	btfss	status,2,c
 44279  0058DC  D003               	goto	i2l14516
 44280                           
 44281                           ;interrupts.c: 292: {
 44282                           ;interrupts.c: 293: (LATC |= 0x20);
 44283  0058DE  8A8B               	bsf	3979,5,c	;volatile
 44284                           
 44285                           ;interrupts.c: 294: (PR2 = 29);
 44286  0058E0  0E1D               	movlw	29
 44287  0058E2  D79B               	goto	L25
 44288  0058E4                     i2l14516:
 44289                           
 44290                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 44291  0058E4  0E02               	movlw	2
 44292  0058E6  1846               	xorwf	_RFcodePlace,w,c
 44293  0058E8  A4D8               	btfss	status,2,c
 44294  0058EA  D004               	goto	i2l1462
 44295                           
 44296                           ;interrupts.c: 299: {
 44297                           ;interrupts.c: 300: (LATC &= ~0x20);
 44298  0058EC  9A8B               	bcf	3979,5,c	;volatile
 44299                           
 44300                           ;interrupts.c: 301: (PR2 = 11);
 44301  0058EE  0E0B               	movlw	11
 44302  0058F0                     L26:
 44303  0058F0  6ECB               	movwf	4043,c	;volatile
 44304  0058F2  D7C4               	goto	i2l14460
 44305  0058F4                     i2l1462:
 44306                           
 44307                           ;interrupts.c: 305: else
 44308                           ;interrupts.c: 306: {
 44309                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 44310  0058F4  94CA               	bcf	4042,2,c	;volatile
 44311  0058F6  D029               	goto	i2l14572
 44312                           
 44313                           ; BSR set to: 0
 44314                           ;interrupts.c: 319: }
 44315                           ;interrupts.c: 320: }
 44316                           
 44317                           ; BSR set to: 0
 44318                           
 44319                           ;interrupts.c: 318: RFsendFlag = 0;
 44320                           
 44321                           ;interrupts.c: 317: Sent = 1;
 44322                           
 44323                           ;interrupts.c: 313: else
 44324                           ;interrupts.c: 314: {
 44325                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 44326                           
 44327                           ; BSR set to: 0
 44328                           ;interrupts.c: 311: }
 44329                           ;interrupts.c: 312: }
 44330                           
 44331                           ; BSR set to: 0
 44332                           
 44333                           ;interrupts.c: 310: RFsendFlag = 0;
 44334                           
 44335                           ;interrupts.c: 309: Sent = 1;
 44336  0058F8  D06F               	goto	i2l14624
 44337  0058FA                     i2l14528:
 44338                           
 44339                           ;interrupts.c: 321: else
 44340                           ;interrupts.c: 322: {
 44341                           ;interrupts.c: 323: if(RFConfig == 1)
 44342  0058FA  0444               	decf	_RFConfig,w,c
 44343  0058FC  A4D8               	btfss	status,2,c
 44344  0058FE  D020               	goto	i2l14566
 44345                           
 44346                           ;interrupts.c: 324: {
 44347                           ;interrupts.c: 326: if(RFcodePlace == 1)
 44348  005900  0446               	decf	_RFcodePlace,w,c
 44349  005902  A4D8               	btfss	status,2,c
 44350  005904  D004               	goto	i2l14538
 44351  005906                     i2l14532:
 44352                           
 44353                           ;interrupts.c: 327: {
 44354                           ;interrupts.c: 328: (LATC |= 0x20);
 44355  005906  8A8B               	bsf	3979,5,c	;volatile
 44356  005908  D787               	goto	i2l14414
 44357  00590A                     i2l14536:
 44358                           
 44359                           ;interrupts.c: 330: RFcodePlace++;
 44360  00590A  2A46               	incf	_RFcodePlace,f,c
 44361  00590C  D788               	goto	L27
 44362  00590E                     i2l14538:
 44363                           
 44364                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 44365  00590E  0E02               	movlw	2
 44366  005910  1846               	xorwf	_RFcodePlace,w,c
 44367  005912  A4D8               	btfss	status,2,c
 44368  005914  D003               	goto	i2l14546
 44369  005916                     L41:
 44370                           
 44371                           ;interrupts.c: 334: {
 44372                           ;interrupts.c: 335: (LATC &= ~0x20);
 44373  005916  9A8B               	bcf	3979,5,c	;volatile
 44374  005918  D7C9               	goto	i2l14474
 44375                           
 44376                           ;interrupts.c: 336: (PR2 = 24);
 44377  00591A  D78A               	goto	i2l14424
 44378  00591C                     i2l14546:
 44379                           
 44380                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 44381  00591C  0E03               	movlw	3
 44382  00591E  1846               	xorwf	_RFcodePlace,w,c
 44383  005920  A4D8               	btfss	status,2,c
 44384  005922  D003               	goto	i2l14554
 44385  005924                     L42:
 44386                           
 44387                           ;interrupts.c: 340: {
 44388                           ;interrupts.c: 341: (LATC |= 0x20);
 44389  005924  8A8B               	bsf	3979,5,c	;volatile
 44390  005926  D7C2               	goto	i2l14474
 44391                           
 44392                           ;interrupts.c: 342: (PR2 = 24);
 44393  005928  D783               	goto	i2l14424
 44394  00592A                     i2l14554:
 44395                           
 44396                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 44397  00592A  0E04               	movlw	4
 44398  00592C  1846               	xorwf	_RFcodePlace,w,c
 44399  00592E  A4D8               	btfss	status,2,c
 44400  005930  D78F               	goto	i2l1438
 44401                           
 44402                           ;interrupts.c: 346: {
 44403                           ;interrupts.c: 347: (LATC &= ~0x20);
 44404  005932  9A8B               	bcf	3979,5,c	;volatile
 44405  005934  D7C8               	goto	i2l14498
 44406  005936                     i2l14560:
 44407                           
 44408                           ;interrupts.c: 349: RFcodePlace = 1;
 44409  005936  0E01               	movlw	1
 44410  005938  6E46               	movwf	_RFcodePlace,c
 44411                           
 44412                           ;interrupts.c: 350: RFcodeBit++;
 44413  00593A  2A45               	incf	_RFcodeBit,f,c
 44414  00593C  D770               	goto	L27
 44415                           
 44416                           ; BSR set to: 0
 44417                           ;interrupts.c: 359: }
 44418                           ;interrupts.c: 360: }
 44419                           
 44420                           ; BSR set to: 0
 44421                           
 44422                           ; BSR set to: 0
 44423                           
 44424                           ; BSR set to: 0
 44425                           
 44426                           ;interrupts.c: 358: RFsendFlag = 0;
 44427                           
 44428                           ;interrupts.c: 357: Sent = 1;
 44429                           
 44430                           ;interrupts.c: 353: else
 44431                           ;interrupts.c: 354: {
 44432                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 44433                           
 44434                           ;interrupts.c: 352: }
 44435                           
 44436                           ;interrupts.c: 351: (TMR2 = 0);
 44437  00593E  D04C               	goto	i2l14624
 44438  005940                     i2l14566:
 44439                           
 44440                           ;interrupts.c: 361: else if(RFConfig == 2)
 44441  005940  0E02               	movlw	2
 44442  005942  1844               	xorwf	_RFConfig,w,c
 44443  005944  A4D8               	btfss	status,2,c
 44444  005946  D784               	goto	i2l1438
 44445  005948  D783               	goto	i2l1438
 44446  00594A                     i2l14572:
 44447                           
 44448                           ;interrupts.c: 372: Sent = 1;
 44449  00594A  0E01               	movlw	1
 44450  00594C  0100               	movlb	0	; () banked
 44451  00594E  6FFF               	movwf	_Sent& (0+255),b	;volatile
 44452  005950  D781               	goto	L30
 44453                           
 44454                           ; BSR set to: 0
 44455                           ;interrupts.c: 374: }
 44456                           ;interrupts.c: 375: }
 44457                           ;interrupts.c: 376: }
 44458                           ;interrupts.c: 377: }
 44459                           
 44460                           ; BSR set to: 0
 44461                           
 44462                           ; BSR set to: 0
 44463                           
 44464                           ; BSR set to: 0
 44465                           
 44466                           ; BSR set to: 0
 44467                           
 44468                           ;interrupts.c: 373: RFsendFlag = 0;
 44469  005952  D042               	goto	i2l14624
 44470  005954                     i2l14574:
 44471                           
 44472                           ;interrupts.c: 378: else
 44473                           ;interrupts.c: 379: {
 44474                           ;interrupts.c: 381: if(RFcodePlace == 1)
 44475  005954  0446               	decf	_RFcodePlace,w,c
 44476  005956  A4D8               	btfss	status,2,c
 44477  005958  D016               	goto	i2l14592
 44478                           
 44479                           ;interrupts.c: 382: {
 44480                           ;interrupts.c: 383: if(RFConfig == 1)
 44481  00595A  0444               	decf	_RFConfig,w,c
 44482  00595C  A4D8               	btfss	status,2,c
 44483  00595E  D003               	goto	i2l14582
 44484                           
 44485                           ;interrupts.c: 384: {
 44486                           ;interrupts.c: 385: (LATC |= 0x20);
 44487  005960  8A8B               	bsf	3979,5,c	;volatile
 44488                           
 44489                           ;interrupts.c: 386: (PR2 = 8);
 44490  005962  0E08               	movlw	8
 44491  005964  D006               	goto	L28
 44492  005966                     i2l14582:
 44493                           
 44494                           ;interrupts.c: 388: else if(RFConfig == 2)
 44495  005966  0E02               	movlw	2
 44496  005968  1844               	xorwf	_RFConfig,w,c
 44497  00596A  A4D8               	btfss	status,2,c
 44498  00596C  D004               	goto	i2l1482
 44499                           
 44500                           ;interrupts.c: 389: {
 44501                           ;interrupts.c: 390: (LATC &= ~0x20);
 44502  00596E  9A8B               	bcf	3979,5,c	;volatile
 44503                           
 44504                           ;interrupts.c: 391: (PR2 = 11);
 44505  005970  0E0B               	movlw	11
 44506  005972                     L28:
 44507  005972  6ECB               	movwf	4043,c	;volatile
 44508                           
 44509                           ;interrupts.c: 392: }
 44510  005974  D005               	goto	i2l1481
 44511  005976                     i2l1482:
 44512                           
 44513                           ;interrupts.c: 393: else
 44514                           ;interrupts.c: 394: {
 44515                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 44516  005976  94CA               	bcf	4042,2,c	;volatile
 44517                           
 44518                           ;interrupts.c: 397: Sent = 1;
 44519  005978  0E01               	movlw	1
 44520  00597A  0100               	movlb	0	; () banked
 44521  00597C  6FFF               	movwf	_Sent& (0+255),b	;volatile
 44522  00597E  D000               	goto	i2l1481
 44523  005980                     i2l1481:
 44524                           
 44525                           ;interrupts.c: 398: }
 44526                           ;interrupts.c: 399: (TMR2 = 0);
 44527  005980  0E00               	movlw	0
 44528  005982  6ECC               	movwf	4044,c	;volatile
 44529  005984  D755               	goto	i2l14424
 44530  005986                     i2l14592:
 44531                           
 44532                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 44533  005986  0E02               	movlw	2
 44534  005988  1846               	xorwf	_RFcodePlace,w,c
 44535  00598A  A4D8               	btfss	status,2,c
 44536  00598C  D01C               	goto	i2l14612
 44537                           
 44538                           ;interrupts.c: 403: {
 44539                           ;interrupts.c: 404: if(RFConfig == 1)
 44540  00598E  0444               	decf	_RFConfig,w,c
 44541  005990  A4D8               	btfss	status,2,c
 44542  005992  D003               	goto	i2l14600
 44543                           
 44544                           ;interrupts.c: 405: {
 44545                           ;interrupts.c: 406: (LATC &= ~0x20);
 44546  005994  9A8B               	bcf	3979,5,c	;volatile
 44547                           
 44548                           ;interrupts.c: 407: (PR2 = 250);
 44549  005996  0EFA               	movlw	250
 44550  005998  D005               	goto	L29
 44551  00599A                     i2l14600:
 44552                           
 44553                           ;interrupts.c: 409: else if(RFConfig == 2)
 44554  00599A  0E02               	movlw	2
 44555  00599C  1844               	xorwf	_RFConfig,w,c
 44556  00599E  A4D8               	btfss	status,2,c
 44557  0059A0  D003               	goto	i2l1488
 44558                           
 44559                           ;interrupts.c: 410: {
 44560                           ;interrupts.c: 411: (PR2 = 149);
 44561  0059A2  0E95               	movlw	149
 44562  0059A4                     L29:
 44563  0059A4  6ECB               	movwf	4043,c	;volatile
 44564                           
 44565                           ;interrupts.c: 412: }
 44566  0059A6  D005               	goto	i2l14606
 44567  0059A8                     i2l1488:
 44568                           
 44569                           ;interrupts.c: 413: else
 44570                           ;interrupts.c: 414: {
 44571                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 44572  0059A8  94CA               	bcf	4042,2,c	;volatile
 44573                           
 44574                           ;interrupts.c: 417: Sent = 1;
 44575  0059AA  0E01               	movlw	1
 44576  0059AC  0100               	movlb	0	; () banked
 44577  0059AE  6FFF               	movwf	_Sent& (0+255),b	;volatile
 44578                           
 44579                           ; BSR set to: 0
 44580  0059B0  D000               	goto	i2l14606
 44581  0059B2                     i2l14606:
 44582                           
 44583                           ;interrupts.c: 418: }
 44584                           ;interrupts.c: 419: RFcodePlace++;
 44585  0059B2  2A46               	incf	_RFcodePlace,f,c
 44586                           
 44587                           ;interrupts.c: 420: Sendcount--;
 44588  0059B4  0648               	decf	_Sendcount,f,c	;volatile
 44589                           
 44590                           ;interrupts.c: 421: if(Sendcount)
 44591  0059B6  5048               	movf	_Sendcount,w,c	;volatile
 44592  0059B8  B4D8               	btfsc	status,2,c
 44593  0059BA  D00E               	goto	i2l14624
 44594                           
 44595                           ;interrupts.c: 422: {
 44596                           ;interrupts.c: 424: RFcodePlace = 1;
 44597  0059BC  0E01               	movlw	1
 44598  0059BE  6E46               	movwf	_RFcodePlace,c
 44599                           
 44600                           ;interrupts.c: 425: RFcodeBit = 0;
 44601  0059C0  0E00               	movlw	0
 44602  0059C2  6E45               	movwf	_RFcodeBit,c
 44603                           
 44604                           ;interrupts.c: 426: }
 44605                           ;interrupts.c: 427: }
 44606  0059C4  D009               	goto	i2l14624
 44607  0059C6                     i2l14612:
 44608                           
 44609                           ;interrupts.c: 428: else
 44610                           ;interrupts.c: 429: {
 44611                           ;interrupts.c: 431: ResetTimer3();
 44612  0059C6  EC8A  F057         	call	_ResetTimer3	;wreg free
 44613                           
 44614                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 44615  0059CA  92A1               	bcf	4001,1,c	;volatile
 44616                           
 44617                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 44618  0059CC  0E00               	movlw	0
 44619  0059CE  6E4B               	movwf	_Timer3_Postscaler,c
 44620                           
 44621                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 44622  0059D0  80B1               	bsf	4017,0,c	;volatile
 44623                           
 44624                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 44625  0059D2  94CA               	bcf	4042,2,c	;volatile
 44626  0059D4  D73F               	goto	L30
 44627                           
 44628                           ;interrupts.c: 436: RFsendFlag = 0;
 44629  0059D6  D000               	goto	i2l14624
 44630  0059D8                     i2l14624:
 44631                           
 44632                           ;interrupts.c: 437: }
 44633                           ;interrupts.c: 438: }
 44634                           ;interrupts.c: 439: }
 44635                           ;interrupts.c: 440: if(RFsendFlag)
 44636  0059D8  5047               	movf	_RFsendFlag,w,c	;volatile
 44637  0059DA  B4D8               	btfsc	status,2,c
 44638  0059DC  D0C0               	goto	i2l14752
 44639                           
 44640                           ;interrupts.c: 441: {
 44641                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 44642  0059DE  84CA               	bsf	4042,2,c	;volatile
 44643                           
 44644                           ;interrupts.c: 444: }
 44645                           ;interrupts.c: 445: }
 44646  0059E0  D0BE               	goto	i2l14752
 44647  0059E2                     i2l14628:
 44648                           
 44649                           ;interrupts.c: 446: else
 44650                           ;interrupts.c: 447: {
 44651                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 44652  0059E2  504F               	movf	_RF_IR_Postscaler,w,c	;volatile
 44653  0059E4  5C4A               	subwf	_Timer2_Postscaler,w,c
 44654  0059E6  A0D8               	btfss	status,0,c
 44655  0059E8  D0BA               	goto	i2l14752
 44656                           
 44657                           ;interrupts.c: 450: {
 44658                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 44659  0059EA  0E00               	movlw	0
 44660  0059EC  6E4A               	movwf	_Timer2_Postscaler,c
 44661                           
 44662                           ;interrupts.c: 452: if(IRcodePlace == 7)
 44663  0059EE  0E07               	movlw	7
 44664  0059F0  184D               	xorwf	_IRcodePlace,w,c
 44665  0059F2  A4D8               	btfss	status,2,c
 44666  0059F4  D00D               	goto	i2l14644
 44667                           
 44668                           ;interrupts.c: 453: {
 44669                           ;interrupts.c: 454: IRbitPosition = 32;
 44670  0059F6  0E20               	movlw	32
 44671  0059F8  6E4C               	movwf	_IRbitPosition,c	;volatile
 44672                           
 44673                           ;interrupts.c: 455: (IRmod = 0);
 44674  0059FA  0E00               	movlw	0
 44675  0059FC  0100               	movlb	0	; () banked
 44676  0059FE  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44677                           
 44678                           ; BSR set to: 0
 44679                           ;interrupts.c: 456: (LATC &= ~0x08);
 44680  005A00  968B               	bcf	3979,3,c	;volatile
 44681                           
 44682                           ; BSR set to: 0
 44683                           ;interrupts.c: 457: IRcodePlace = 8;
 44684  005A02  0E08               	movlw	8
 44685  005A04  6E4D               	movwf	_IRcodePlace,c
 44686                           
 44687                           ; BSR set to: 0
 44688                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 44689  005A06  0E04               	movlw	4
 44690  005A08  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44691                           
 44692                           ; BSR set to: 0
 44693                           ;interrupts.c: 459: (PR2 = 75);
 44694  005A0A  0E4B               	movlw	75
 44695  005A0C  6ECB               	movwf	4043,c	;volatile
 44696                           
 44697                           ;interrupts.c: 460: }
 44698  005A0E  D0A7               	goto	i2l14752
 44699  005A10                     i2l14644:
 44700                           
 44701                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 44702  005A10  0E08               	movlw	8
 44703  005A12  184D               	xorwf	_IRcodePlace,w,c
 44704  005A14  B4D8               	btfsc	status,2,c
 44705  005A16  D004               	goto	i2l14648
 44706  005A18  0E0A               	movlw	10
 44707  005A1A  184D               	xorwf	_IRcodePlace,w,c
 44708  005A1C  A4D8               	btfss	status,2,c
 44709  005A1E  D011               	goto	i2l14658
 44710  005A20                     i2l14648:
 44711                           
 44712                           ;interrupts.c: 462: {
 44713                           ;interrupts.c: 463: (IRmod = 1);
 44714  005A20  0E01               	movlw	1
 44715  005A22  0100               	movlb	0	; () banked
 44716  005A24  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44717                           
 44718                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 44719  005A26  0E01               	movlw	1
 44720  005A28  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44721                           
 44722                           ; BSR set to: 0
 44723                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 44724  005A2A  503A               	movf	_IRsendCode,w,c
 44725  005A2C  0B01               	andlw	1
 44726  005A2E  6E3F               	movwf	_IRbit,c
 44727                           
 44728                           ; BSR set to: 0
 44729                           ;interrupts.c: 466: IRsendCode >>= 1;
 44730  005A30  90D8               	bcf	status,0,c
 44731  005A32  323D               	rrcf	_IRsendCode+3,f,c
 44732  005A34  323C               	rrcf	_IRsendCode+2,f,c
 44733  005A36  323B               	rrcf	_IRsendCode+1,f,c
 44734  005A38  323A               	rrcf	_IRsendCode,f,c
 44735                           
 44736                           ; BSR set to: 0
 44737                           ;interrupts.c: 467: (PR2 = 38);
 44738  005A3A  0E26               	movlw	38
 44739  005A3C  6ECB               	movwf	4043,c	;volatile
 44740                           
 44741                           ; BSR set to: 0
 44742                           ;interrupts.c: 468: IRcodePlace = 9;
 44743  005A3E  0E09               	movlw	9
 44744  005A40  D07A               	goto	L40
 44745  005A42                     i2l14658:
 44746                           
 44747                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 44748  005A42  0E09               	movlw	9
 44749  005A44  184D               	xorwf	_IRcodePlace,w,c
 44750  005A46  A4D8               	btfss	status,2,c
 44751  005A48  D017               	goto	i2l14680
 44752                           
 44753                           ;interrupts.c: 471: {
 44754                           ;interrupts.c: 472: (IRmod = 0);
 44755  005A4A  0E00               	movlw	0
 44756  005A4C  0100               	movlb	0	; () banked
 44757  005A4E  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44758                           
 44759                           ; BSR set to: 0
 44760                           ;interrupts.c: 473: (LATC &= ~0x08);
 44761  005A50  968B               	bcf	3979,3,c	;volatile
 44762                           
 44763                           ; BSR set to: 0
 44764                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 44765  005A52  0E01               	movlw	1
 44766  005A54  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44767                           
 44768                           ; BSR set to: 0
 44769                           ;interrupts.c: 475: if(IRbit)
 44770  005A56  503F               	movf	_IRbit,w,c
 44771  005A58  B4D8               	btfsc	status,2,c
 44772  005A5A  D002               	goto	i2l14670
 44773                           
 44774                           ; BSR set to: 0
 44775                           ;interrupts.c: 476: {
 44776                           ;interrupts.c: 478: (PR2 = 113);
 44777  005A5C  0E71               	movlw	113
 44778  005A5E  D001               	goto	L32
 44779  005A60                     i2l14670:
 44780                           
 44781                           ; BSR set to: 0
 44782                           ;interrupts.c: 480: else
 44783                           ;interrupts.c: 481: {
 44784                           ;interrupts.c: 483: (PR2 = 38);
 44785  005A60  0E26               	movlw	38
 44786  005A62                     L32:
 44787  005A62  6ECB               	movwf	4043,c	;volatile
 44788  005A64  D000               	goto	i2l14672
 44789  005A66                     i2l14672:
 44790                           
 44791                           ; BSR set to: 0
 44792                           ;interrupts.c: 484: }
 44793                           ;interrupts.c: 485: IRbitPosition--;
 44794  005A66  064C               	decf	_IRbitPosition,f,c	;volatile
 44795                           
 44796                           ; BSR set to: 0
 44797                           ;interrupts.c: 486: if(IRbitPosition == 0)
 44798  005A68  504C               	movf	_IRbitPosition,w,c	;volatile
 44799  005A6A  A4D8               	btfss	status,2,c
 44800  005A6C  D002               	goto	i2l14678
 44801                           
 44802                           ; BSR set to: 0
 44803                           ;interrupts.c: 487: {
 44804                           ;interrupts.c: 488: IRcodePlace = 11;
 44805  005A6E  0E0B               	movlw	11
 44806  005A70  D062               	goto	L40
 44807  005A72                     i2l14678:
 44808                           
 44809                           ; BSR set to: 0
 44810                           ;interrupts.c: 490: else
 44811                           ;interrupts.c: 491: {
 44812                           ;interrupts.c: 492: IRcodePlace = 10;
 44813  005A72  0E0A               	movlw	10
 44814  005A74  D060               	goto	L40
 44815                           
 44816                           ; BSR set to: 0
 44817                           ;interrupts.c: 493: }
 44818                           ;interrupts.c: 494: }
 44819  005A76  D073               	goto	i2l14752
 44820  005A78                     i2l14680:
 44821                           
 44822                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 44823  005A78  0E0B               	movlw	11
 44824  005A7A  184D               	xorwf	_IRcodePlace,w,c
 44825  005A7C  A4D8               	btfss	status,2,c
 44826  005A7E  D007               	goto	i2l14684
 44827                           
 44828                           ;interrupts.c: 496: {
 44829                           ;interrupts.c: 497: (IRmod = 1);
 44830  005A80  0E01               	movlw	1
 44831  005A82  0100               	movlb	0	; () banked
 44832  005A84  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44833                           
 44834                           ;interrupts.c: 498: (PR2 = 38);
 44835  005A86  0E26               	movlw	38
 44836  005A88  6ECB               	movwf	4043,c	;volatile
 44837                           
 44838                           ;interrupts.c: 499: IRcodePlace = 12;
 44839  005A8A  0E0C               	movlw	12
 44840  005A8C  D054               	goto	L40
 44841  005A8E                     i2l14684:
 44842                           
 44843                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 44844  005A8E  0E0C               	movlw	12
 44845  005A90  184D               	xorwf	_IRcodePlace,w,c
 44846  005A92  A4D8               	btfss	status,2,c
 44847  005A94  D011               	goto	i2l14698
 44848                           
 44849                           ;interrupts.c: 502: {
 44850                           ;interrupts.c: 503: (IRmod = 0);
 44851  005A96  0E00               	movlw	0
 44852  005A98  0100               	movlb	0	; () banked
 44853  005A9A  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44854                           
 44855                           ; BSR set to: 0
 44856                           ;interrupts.c: 504: (LATC &= ~0x08);
 44857  005A9C  968B               	bcf	3979,3,c	;volatile
 44858                           
 44859                           ; BSR set to: 0
 44860                           ;interrupts.c: 505: if(!IRrepeatflag)
 44861  005A9E  5043               	movf	_IRrepeatflag,w,c
 44862  005AA0  A4D8               	btfss	status,2,c
 44863  005AA2  D003               	goto	i2l14696
 44864                           
 44865                           ; BSR set to: 0
 44866                           ;interrupts.c: 506: {
 44867                           ;interrupts.c: 508: IRcodePlace = 13;
 44868  005AA4  0E0D               	movlw	13
 44869  005AA6  6E4D               	movwf	_IRcodePlace,c
 44870  005AA8  D057               	goto	i2l14748
 44871  005AAA                     i2l14696:
 44872                           
 44873                           ; BSR set to: 0
 44874                           ;interrupts.c: 512: else
 44875                           ;interrupts.c: 513: {
 44876                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 44877  005AAA  0E0B               	movlw	11
 44878  005AAC  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44879                           
 44880                           ;interrupts.c: 515: (PR2 = 242);
 44881  005AAE  0EF2               	movlw	242
 44882  005AB0  6ECB               	movwf	4043,c	;volatile
 44883                           
 44884                           ;interrupts.c: 516: IRcodePlace = 14;
 44885  005AB2  0E0E               	movlw	14
 44886  005AB4  D040               	goto	L40
 44887                           
 44888                           ; BSR set to: 0
 44889                           ;interrupts.c: 517: }
 44890                           ;interrupts.c: 518: }
 44891  005AB6  D053               	goto	i2l14752
 44892  005AB8                     i2l14698:
 44893                           
 44894                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 44895  005AB8  0E0E               	movlw	14
 44896  005ABA  184D               	xorwf	_IRcodePlace,w,c
 44897  005ABC  B4D8               	btfsc	status,2,c
 44898  005ABE  D004               	goto	i2l14702
 44899  005AC0  0E12               	movlw	18
 44900  005AC2  184D               	xorwf	_IRcodePlace,w,c
 44901  005AC4  A4D8               	btfss	status,2,c
 44902  005AC6  D009               	goto	i2l14704
 44903  005AC8                     i2l14702:
 44904                           
 44905                           ;interrupts.c: 520: {
 44906                           ;interrupts.c: 521: (IRmod = 1);
 44907  005AC8  0E01               	movlw	1
 44908  005ACA  0100               	movlb	0	; () banked
 44909  005ACC  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44910                           
 44911                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 44912  005ACE  0E04               	movlw	4
 44913  005AD0  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44914                           
 44915                           ;interrupts.c: 523: (PR2 = 150);
 44916  005AD2  0E96               	movlw	150
 44917  005AD4  6ECB               	movwf	4043,c	;volatile
 44918                           
 44919                           ;interrupts.c: 524: IRcodePlace = 15;
 44920  005AD6  0E0F               	movlw	15
 44921  005AD8  D02E               	goto	L40
 44922  005ADA                     i2l14704:
 44923                           
 44924                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 44925  005ADA  0E0F               	movlw	15
 44926  005ADC  184D               	xorwf	_IRcodePlace,w,c
 44927  005ADE  A4D8               	btfss	status,2,c
 44928  005AE0  D00A               	goto	i2l14716
 44929                           
 44930                           ;interrupts.c: 527: {
 44931                           ;interrupts.c: 528: (IRmod = 0);
 44932  005AE2  0E00               	movlw	0
 44933  005AE4  0100               	movlb	0	; () banked
 44934  005AE6  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44935                           
 44936                           ; BSR set to: 0
 44937                           ;interrupts.c: 529: (LATC &= ~0x08);
 44938  005AE8  968B               	bcf	3979,3,c	;volatile
 44939                           
 44940                           ; BSR set to: 0
 44941                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 44942  005AEA  0E01               	movlw	1
 44943  005AEC  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44944                           
 44945                           ; BSR set to: 0
 44946                           ;interrupts.c: 531: (PR2 = 149);
 44947  005AEE  0E95               	movlw	149
 44948  005AF0  6ECB               	movwf	4043,c	;volatile
 44949                           
 44950                           ; BSR set to: 0
 44951                           ;interrupts.c: 532: IRcodePlace = 16;
 44952  005AF2  0E10               	movlw	16
 44953  005AF4  D020               	goto	L40
 44954  005AF6                     i2l14716:
 44955                           
 44956                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 44957  005AF6  0E10               	movlw	16
 44958  005AF8  184D               	xorwf	_IRcodePlace,w,c
 44959  005AFA  A4D8               	btfss	status,2,c
 44960  005AFC  D009               	goto	i2l14720
 44961                           
 44962                           ;interrupts.c: 535: {
 44963                           ;interrupts.c: 536: (IRmod = 1);
 44964  005AFE  0E01               	movlw	1
 44965  005B00  0100               	movlb	0	; () banked
 44966  005B02  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44967                           
 44968                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 44969  005B04  0E01               	movlw	1
 44970  005B06  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 44971                           
 44972                           ;interrupts.c: 538: (PR2 = 38);
 44973  005B08  0E26               	movlw	38
 44974  005B0A  6ECB               	movwf	4043,c	;volatile
 44975                           
 44976                           ;interrupts.c: 539: IRcodePlace = 17;
 44977  005B0C  0E11               	movlw	17
 44978  005B0E  D013               	goto	L40
 44979  005B10                     i2l14720:
 44980                           
 44981                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 44982  005B10  0E11               	movlw	17
 44983  005B12  184D               	xorwf	_IRcodePlace,w,c
 44984  005B14  A4D8               	btfss	status,2,c
 44985  005B16  D011               	goto	i2l14736
 44986                           
 44987                           ;interrupts.c: 542: {
 44988                           ;interrupts.c: 543: (IRmod = 0);
 44989  005B18  0E00               	movlw	0
 44990  005B1A  0100               	movlb	0	; () banked
 44991  005B1C  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 44992                           
 44993                           ; BSR set to: 0
 44994                           ;interrupts.c: 544: (LATC &= ~0x08);
 44995  005B1E  968B               	bcf	3979,3,c	;volatile
 44996                           
 44997                           ; BSR set to: 0
 44998                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 44999  005B20  0E1A               	movlw	26
 45000  005B22  6E4F               	movwf	_RF_IR_Postscaler,c	;volatile
 45001                           
 45002                           ; BSR set to: 0
 45003                           ;interrupts.c: 546: (PR2 = 246);
 45004  005B24  0EF6               	movlw	246
 45005  005B26  6ECB               	movwf	4043,c	;volatile
 45006                           
 45007                           ; BSR set to: 0
 45008                           ;interrupts.c: 547: IRrepeatAmount--;
 45009  005B28  0642               	decf	_IRrepeatAmount,f,c
 45010                           
 45011                           ;interrupts.c: 548: if(IRrepeatAmount)
 45012  005B2A  5042               	movf	_IRrepeatAmount,w,c
 45013  005B2C  B4D8               	btfsc	status,2,c
 45014  005B2E  D002               	goto	i2l14734
 45015                           
 45016                           ; BSR set to: 0
 45017                           ;interrupts.c: 549: {
 45018                           ;interrupts.c: 550: IRcodePlace = 18;
 45019  005B30  0E12               	movlw	18
 45020  005B32  D001               	goto	L40
 45021  005B34                     i2l14734:
 45022                           
 45023                           ; BSR set to: 0
 45024                           ;interrupts.c: 552: else
 45025                           ;interrupts.c: 553: {
 45026                           ;interrupts.c: 554: IRcodePlace = 13;
 45027  005B34  0E0D               	movlw	13
 45028  005B36                     L40:
 45029  005B36  6E4D               	movwf	_IRcodePlace,c
 45030                           
 45031                           ; BSR set to: 0
 45032                           ;interrupts.c: 555: }
 45033                           ;interrupts.c: 556: }
 45034  005B38  D012               	goto	i2l14752
 45035  005B3A                     i2l14736:
 45036                           
 45037                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 45038  005B3A  0E0D               	movlw	13
 45039  005B3C  184D               	xorwf	_IRcodePlace,w,c
 45040  005B3E  A4D8               	btfss	status,2,c
 45041  005B40  D005               	goto	i2l14742
 45042  005B42  D00A               	goto	i2l14748
 45043  005B44                     i2l14740:
 45044                           
 45045                           ;interrupts.c: 561: Sent = 1;
 45046  005B44  0E01               	movlw	1
 45047  005B46  0100               	movlb	0	; () banked
 45048  005B48  6FFF               	movwf	_Sent& (0+255),b	;volatile
 45049                           
 45050                           ;interrupts.c: 562: }
 45051  005B4A  D009               	goto	i2l14752
 45052  005B4C                     i2l14742:
 45053                           
 45054                           ;interrupts.c: 563: else
 45055                           ;interrupts.c: 564: {
 45056                           ;interrupts.c: 566: (IRmod = 0);
 45057  005B4C  0E00               	movlw	0
 45058  005B4E  0100               	movlb	0	; () banked
 45059  005B50  6FFB               	movwf	_IRmod& (0+255),b	;volatile
 45060                           
 45061                           ; BSR set to: 0
 45062                           ;interrupts.c: 567: (LATC &= ~0x08);
 45063  005B52  968B               	bcf	3979,3,c	;volatile
 45064                           
 45065                           ; BSR set to: 0
 45066                           ;interrupts.c: 568: IRcodePlace = 0;
 45067  005B54  0E00               	movlw	0
 45068  005B56  6E4D               	movwf	_IRcodePlace,c
 45069  005B58                     i2l14748:
 45070                           
 45071                           ; BSR set to: 0
 45072                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 45073  005B58  94CA               	bcf	4042,2,c	;volatile
 45074  005B5A  D7F4               	goto	i2l14740
 45075                           
 45076                           ; BSR set to: 0
 45077                           
 45078                           ; BSR set to: 0
 45079                           
 45080                           ; BSR set to: 0
 45081                           
 45082                           ; BSR set to: 0
 45083                           
 45084                           ; BSR set to: 0
 45085                           
 45086                           ; BSR set to: 0
 45087                           
 45088                           ; BSR set to: 0
 45089                           
 45090                           ; BSR set to: 0
 45091                           
 45092                           ; BSR set to: 0
 45093                           
 45094                           ; BSR set to: 0
 45095                           
 45096                           ; BSR set to: 0
 45097                           
 45098                           ; BSR set to: 0
 45099                           ;interrupts.c: 570: Sent = 1;
 45100  005B5C  D000               	goto	i2l14752
 45101  005B5E                     i2l14752:
 45102                           
 45103                           ;interrupts.c: 571: }
 45104                           ;interrupts.c: 572: }
 45105                           ;interrupts.c: 573: }
 45106                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 45107  005B5E  929E               	bcf	3998,1,c	;volatile
 45108                           
 45109                           ;interrupts.c: 575: }
 45110  005B60  D013               	goto	i2l1420
 45111  005B62                     i2l1425:
 45112                           
 45113                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 45114  005B62  A2A1               	btfss	4001,1,c	;volatile
 45115  005B64  D00F               	goto	i2l1528
 45116                           
 45117                           ;interrupts.c: 577: {
 45118                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 45119  005B66  90B1               	bcf	4017,0,c	;volatile
 45120                           
 45121                           ;interrupts.c: 579: if(Timer3_Postscaler < 3)
 45122  005B68  0E03               	movlw	3
 45123  005B6A  604B               	cpfslt	_Timer3_Postscaler,c
 45124  005B6C  D005               	goto	i2l14764
 45125                           
 45126                           ;interrupts.c: 580: {
 45127                           ;interrupts.c: 581: ResetTimer3();
 45128  005B6E  EC8A  F057         	call	_ResetTimer3	;wreg free
 45129                           
 45130                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 45131  005B72  80B1               	bsf	4017,0,c	;volatile
 45132                           
 45133                           ;interrupts.c: 583: Timer3_Postscaler++;
 45134  005B74  2A4B               	incf	_Timer3_Postscaler,f,c
 45135                           
 45136                           ;interrupts.c: 584: }
 45137  005B76  D004               	goto	i2l14766
 45138  005B78                     i2l14764:
 45139                           
 45140                           ;interrupts.c: 585: else
 45141                           ;interrupts.c: 586: {
 45142                           ;interrupts.c: 591: Sent = 1;
 45143  005B78  0E01               	movlw	1
 45144  005B7A  0100               	movlb	0	; () banked
 45145  005B7C  6FFF               	movwf	_Sent& (0+255),b	;volatile
 45146  005B7E  D000               	goto	i2l14766
 45147  005B80                     i2l14766:
 45148                           
 45149                           ;interrupts.c: 592: }
 45150                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 45151  005B80  92A1               	bcf	4001,1,c	;volatile
 45152                           
 45153                           ;interrupts.c: 594: }
 45154  005B82  D002               	goto	i2l1420
 45155  005B84                     i2l1528:
 45156                           
 45157                           ;interrupts.c: 595: else
 45158                           ;interrupts.c: 596: {
 45159                           ;interrupts.c: 598: __nop();
 45160  005B84  F000               	nop	
 45161  005B86  D000               	goto	i2l1420
 45162  005B88                     i2l1420:
 45163                           
 45164                           ;interrupts.c: 599: }
 45165                           ;interrupts.c: 600: INTCONbits.GIE = 1;
 45166  005B88  8EF2               	bsf	intcon,7,c	;volatile
 45167  005B8A  C036  FFF5         	movff	??_high_isr+17,tablat
 45168  005B8E  C035  FFF8         	movff	??_high_isr+16,tblptru
 45169  005B92  C034  FFF7         	movff	??_high_isr+15,tblptrh
 45170  005B96  C033  FFF6         	movff	??_high_isr+14,tblptrl
 45171  005B9A  C032  FFF4         	movff	??_high_isr+13,prodh
 45172  005B9E  C031  FFF3         	movff	??_high_isr+12,prodl
 45173  005BA2  C030  FFDA         	movff	??_high_isr+11,fsr2h
 45174  005BA6  C02F  FFD9         	movff	??_high_isr+10,fsr2l
 45175  005BAA  C02E  FFE2         	movff	??_high_isr+9,fsr1h
 45176  005BAE  C02D  FFE1         	movff	??_high_isr+8,fsr1l
 45177  005BB2  C02C  FFEA         	movff	??_high_isr+7,fsr0h
 45178  005BB6  C02B  FFE9         	movff	??_high_isr+6,fsr0l
 45179  005BBA  C02A  FFFB         	movff	??_high_isr+5,pclatu
 45180  005BBE  C029  FFFA         	movff	??_high_isr+4,pclath
 45181  005BC2  0011               	retfie		f
 45182  005BC4                     __end_of_high_isr:
 45183                           	opt stack 0
 45184                           pclatu	equ	0xFFB
 45185                           pclath	equ	0xFFA
 45186                           tblptru	equ	0xFF8
 45187                           tblptrh	equ	0xFF7
 45188                           tblptrl	equ	0xFF6
 45189                           tablat	equ	0xFF5
 45190                           prodh	equ	0xFF4
 45191                           prodl	equ	0xFF3
 45192                           intcon	equ	0xFF2
 45193                           intcon2	equ	0xFF1
 45194                           indf0	equ	0xFEF
 45195                           postinc0	equ	0xFEE
 45196                           plusw0	equ	0xFEB
 45197                           fsr0h	equ	0xFEA
 45198                           fsr0l	equ	0xFE9
 45199                           wreg	equ	0xFE8
 45200                           indf1	equ	0xFE7
 45201                           postdec1	equ	0xFE5
 45202                           fsr1h	equ	0xFE2
 45203                           fsr1l	equ	0xFE1
 45204                           bsr	equ	0xFE0
 45205                           indf2	equ	0xFDF
 45206                           postinc2	equ	0xFDE
 45207                           postdec2	equ	0xFDD
 45208                           plusw2	equ	0xFDB
 45209                           fsr2h	equ	0xFDA
 45210                           fsr2l	equ	0xFD9
 45211                           status	equ	0xFD8
 45212                           
 45213 ;; *************** function i2_cleanBuffer16bit *****************
 45214 ;; Defined at:
 45215 ;;		line 191 in file "MISC.c"
 45216 ;; Parameters:    Size  Location     Type
 45217 ;;  data            2   22[COMRAM] PTR unsigned int 
 45218 ;;		 -> IRRawCode(200), 
 45219 ;;  count           2   24[COMRAM] int 
 45220 ;; Auto vars:     Size  Location     Type
 45221 ;;  cleanBuffer1    1   29[COMRAM] unsigned char 
 45222 ;; Return value:  Size  Location     Type
 45223 ;;		None               void
 45224 ;; Registers used:
 45225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45226 ;; Tracked objects:
 45227 ;;		On entry : 0/0
 45228 ;;		On exit  : 0/0
 45229 ;;		Unchanged: 0/0
 45230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45233 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45235 ;;Total ram usage:        8 bytes
 45236 ;; Hardware stack levels used:    1
 45237 ;; This function calls:
 45238 ;;		Nothing
 45239 ;; This function is called by:
 45240 ;;		_high_isr
 45241 ;; This function uses a non-reentrant model
 45242 ;;
 45243                           
 45244                           	psect	text120
 45245  00A938                     __ptext120:
 45246                           	opt stack 0
 45247  00A938                     i2_cleanBuffer16bit:
 45248                           	opt stack 18
 45249                           
 45250                           ;MISC.c: 193: unsigned char i=0;
 45251                           
 45252                           ;incstack = 0
 45253  00A938  0E00               	movlw	0
 45254  00A93A  6E1E               	movwf	i2cleanBuffer16bit@i,c
 45255                           
 45256                           ;MISC.c: 194: for(i=0; i<count;i++)
 45257  00A93C  0E00               	movlw	0
 45258  00A93E  6E1E               	movwf	i2cleanBuffer16bit@i,c
 45259  00A940  D00E               	goto	i2l14002
 45260  00A942                     i2l13998:
 45261                           
 45262                           ;MISC.c: 195: {
 45263                           ;MISC.c: 196: data[i]= 0;
 45264  00A942  501E               	movf	i2cleanBuffer16bit@i,w,c
 45265  00A944  0D02               	mullw	2
 45266  00A946  50F3               	movf	prodl,w,c
 45267  00A948  2417               	addwf	i2cleanBuffer16bit@data,w,c
 45268  00A94A  6ED9               	movwf	fsr2l,c
 45269  00A94C  50F4               	movf	prodh,w,c
 45270  00A94E  2018               	addwfc	i2cleanBuffer16bit@data+1,w,c
 45271  00A950  6EDA               	movwf	fsr2h,c
 45272  00A952  0E00               	movlw	0
 45273  00A954  6EDE               	movwf	postinc2,c
 45274  00A956  0E00               	movlw	0
 45275  00A958  6EDD               	movwf	postdec2,c
 45276  00A95A  2A1E               	incf	i2cleanBuffer16bit@i,f,c
 45277  00A95C  D000               	goto	i2l14002
 45278  00A95E                     i2l14002:
 45279  00A95E  501E               	movf	i2cleanBuffer16bit@i,w,c
 45280  00A960  6E1B               	movwf	??i2_cleanBuffer16bit& (0+255),c
 45281  00A962  6A1C               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 45282  00A964  5019               	movf	i2cleanBuffer16bit@count,w,c
 45283  00A966  5C1B               	subwf	??i2_cleanBuffer16bit,w,c
 45284  00A968  501C               	movf	??i2_cleanBuffer16bit+1,w,c
 45285  00A96A  0A80               	xorlw	128
 45286  00A96C  6E1D               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 45287  00A96E  501A               	movf	i2cleanBuffer16bit@count+1,w,c
 45288  00A970  0A80               	xorlw	128
 45289  00A972  581D               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 45290  00A974  A0D8               	btfss	status,0,c
 45291  00A976  D7E5               	goto	i2l13998
 45292  00A978  0012               	return		;funcret
 45293  00A97A                     __end_ofi2_cleanBuffer16bit:
 45294                           	opt stack 0
 45295                           pclatu	equ	0xFFB
 45296                           pclath	equ	0xFFA
 45297                           tblptru	equ	0xFF8
 45298                           tblptrh	equ	0xFF7
 45299                           tblptrl	equ	0xFF6
 45300                           tablat	equ	0xFF5
 45301                           prodh	equ	0xFF4
 45302                           prodl	equ	0xFF3
 45303                           intcon	equ	0xFF2
 45304                           intcon2	equ	0xFF1
 45305                           indf0	equ	0xFEF
 45306                           postinc0	equ	0xFEE
 45307                           plusw0	equ	0xFEB
 45308                           fsr0h	equ	0xFEA
 45309                           fsr0l	equ	0xFE9
 45310                           wreg	equ	0xFE8
 45311                           indf1	equ	0xFE7
 45312                           postdec1	equ	0xFE5
 45313                           fsr1h	equ	0xFE2
 45314                           fsr1l	equ	0xFE1
 45315                           bsr	equ	0xFE0
 45316                           indf2	equ	0xFDF
 45317                           postinc2	equ	0xFDE
 45318                           postdec2	equ	0xFDD
 45319                           plusw2	equ	0xFDB
 45320                           fsr2h	equ	0xFDA
 45321                           fsr2l	equ	0xFD9
 45322                           status	equ	0xFD8
 45323                           
 45324 ;; *************** function i2_ResetTimer0 *****************
 45325 ;; Defined at:
 45326 ;;		line 79 in file "Timer.c"
 45327 ;; Parameters:    Size  Location     Type
 45328 ;;		None
 45329 ;; Auto vars:     Size  Location     Type
 45330 ;;		None
 45331 ;; Return value:  Size  Location     Type
 45332 ;;		None               void
 45333 ;; Registers used:
 45334 ;;		wreg, status,2
 45335 ;; Tracked objects:
 45336 ;;		On entry : 0/0
 45337 ;;		On exit  : 0/0
 45338 ;;		Unchanged: 0/0
 45339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45344 ;;Total ram usage:        0 bytes
 45345 ;; Hardware stack levels used:    1
 45346 ;; This function calls:
 45347 ;;		Nothing
 45348 ;; This function is called by:
 45349 ;;		_high_isr
 45350 ;; This function uses a non-reentrant model
 45351 ;;
 45352                           
 45353                           	psect	text121
 45354  00AF00                     __ptext121:
 45355                           	opt stack 0
 45356  00AF00                     i2_ResetTimer0:
 45357                           	opt stack 18
 45358                           
 45359                           ;Timer.c: 85: TMR0H = 0;
 45360                           
 45361                           ;incstack = 0
 45362  00AF00  0E00               	movlw	0
 45363  00AF02  6ED7               	movwf	4055,c	;volatile
 45364                           
 45365                           ;Timer.c: 86: TMR0L = 2;
 45366  00AF04  0E02               	movlw	2
 45367  00AF06  6ED6               	movwf	4054,c	;volatile
 45368  00AF08  0012               	return		;funcret
 45369  00AF0A                     __end_ofi2_ResetTimer0:
 45370                           	opt stack 0
 45371                           pclatu	equ	0xFFB
 45372                           pclath	equ	0xFFA
 45373                           tblptru	equ	0xFF8
 45374                           tblptrh	equ	0xFF7
 45375                           tblptrl	equ	0xFF6
 45376                           tablat	equ	0xFF5
 45377                           prodh	equ	0xFF4
 45378                           prodl	equ	0xFF3
 45379                           intcon	equ	0xFF2
 45380                           intcon2	equ	0xFF1
 45381                           indf0	equ	0xFEF
 45382                           postinc0	equ	0xFEE
 45383                           plusw0	equ	0xFEB
 45384                           fsr0h	equ	0xFEA
 45385                           fsr0l	equ	0xFE9
 45386                           wreg	equ	0xFE8
 45387                           indf1	equ	0xFE7
 45388                           postdec1	equ	0xFE5
 45389                           fsr1h	equ	0xFE2
 45390                           fsr1l	equ	0xFE1
 45391                           bsr	equ	0xFE0
 45392                           indf2	equ	0xFDF
 45393                           postinc2	equ	0xFDE
 45394                           postdec2	equ	0xFDD
 45395                           plusw2	equ	0xFDB
 45396                           fsr2h	equ	0xFDA
 45397                           fsr2l	equ	0xFD9
 45398                           status	equ	0xFD8
 45399                           
 45400 ;; *************** function i2_ReadIRpin *****************
 45401 ;; Defined at:
 45402 ;;		line 107 in file "IR.c"
 45403 ;; Parameters:    Size  Location     Type
 45404 ;;		None
 45405 ;; Auto vars:     Size  Location     Type
 45406 ;;		None
 45407 ;; Return value:  Size  Location     Type
 45408 ;;                  1    wreg      unsigned char 
 45409 ;; Registers used:
 45410 ;;		wreg
 45411 ;; Tracked objects:
 45412 ;;		On entry : 0/0
 45413 ;;		On exit  : 0/0
 45414 ;;		Unchanged: 0/0
 45415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45420 ;;Total ram usage:        0 bytes
 45421 ;; Hardware stack levels used:    1
 45422 ;; This function calls:
 45423 ;;		Nothing
 45424 ;; This function is called by:
 45425 ;;		_high_isr
 45426 ;; This function uses a non-reentrant model
 45427 ;;
 45428                           
 45429                           	psect	text122
 45430  00AED4                     __ptext122:
 45431                           	opt stack 0
 45432  00AED4                     i2_ReadIRpin:
 45433                           	opt stack 18
 45434                           
 45435                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 45436                           
 45437                           ;incstack = 0
 45438  00AED4  A881               	btfss	3969,4,c	;volatile
 45439  00AED6  D002               	goto	i2l14042
 45440                           
 45441                           ;IR.c: 111: {
 45442                           ;IR.c: 112: return (1);
 45443  00AED8  0E01               	movlw	1
 45444                           
 45445                           ;IR.c: 113: }
 45446  00AEDA  0012               	return	
 45447  00AEDC                     i2l14042:
 45448                           
 45449                           ;IR.c: 114: else
 45450                           ;IR.c: 115: {
 45451                           ;IR.c: 116: return 0;
 45452  00AEDC  0E00               	movlw	0
 45453  00AEDE  0012               	return	
 45454  00AEE0  0012               	return		;funcret
 45455  00AEE2                     __end_ofi2_ReadIRpin:
 45456                           	opt stack 0
 45457                           pclatu	equ	0xFFB
 45458                           pclath	equ	0xFFA
 45459                           tblptru	equ	0xFF8
 45460                           tblptrh	equ	0xFF7
 45461                           tblptrl	equ	0xFF6
 45462                           tablat	equ	0xFF5
 45463                           prodh	equ	0xFF4
 45464                           prodl	equ	0xFF3
 45465                           intcon	equ	0xFF2
 45466                           intcon2	equ	0xFF1
 45467                           indf0	equ	0xFEF
 45468                           postinc0	equ	0xFEE
 45469                           plusw0	equ	0xFEB
 45470                           fsr0h	equ	0xFEA
 45471                           fsr0l	equ	0xFE9
 45472                           wreg	equ	0xFE8
 45473                           indf1	equ	0xFE7
 45474                           postdec1	equ	0xFE5
 45475                           fsr1h	equ	0xFE2
 45476                           fsr1l	equ	0xFE1
 45477                           bsr	equ	0xFE0
 45478                           indf2	equ	0xFDF
 45479                           postinc2	equ	0xFDE
 45480                           postdec2	equ	0xFDD
 45481                           plusw2	equ	0xFDB
 45482                           fsr2h	equ	0xFDA
 45483                           fsr2l	equ	0xFD9
 45484                           status	equ	0xFD8
 45485                           
 45486 ;; *************** function _SetTimer0 *****************
 45487 ;; Defined at:
 45488 ;;		line 94 in file "Timer.c"
 45489 ;; Parameters:    Size  Location     Type
 45490 ;;  temp            2   22[COMRAM] unsigned int 
 45491 ;; Auto vars:     Size  Location     Type
 45492 ;;		None
 45493 ;; Return value:  Size  Location     Type
 45494 ;;		None               void
 45495 ;; Registers used:
 45496 ;;		wreg, status,2
 45497 ;; Tracked objects:
 45498 ;;		On entry : 0/0
 45499 ;;		On exit  : 0/0
 45500 ;;		Unchanged: 0/0
 45501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45506 ;;Total ram usage:        2 bytes
 45507 ;; Hardware stack levels used:    1
 45508 ;; This function calls:
 45509 ;;		Nothing
 45510 ;; This function is called by:
 45511 ;;		_high_isr
 45512 ;; This function uses a non-reentrant model
 45513 ;;
 45514                           
 45515                           	psect	text123
 45516  00AF0A                     __ptext123:
 45517                           	opt stack 0
 45518  00AF0A                     _SetTimer0:
 45519                           	opt stack 18
 45520                           
 45521                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 45522                           
 45523                           ;incstack = 0
 45524  00AF0A  5018               	movf	SetTimer0@temp+1,w,c
 45525  00AF0C  6ED7               	movwf	4055,c	;volatile
 45526                           
 45527                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 45528  00AF0E  C017  FFD6         	movff	SetTimer0@temp,4054	;volatile
 45529  00AF12  0012               	return		;funcret
 45530  00AF14                     __end_of_SetTimer0:
 45531                           	opt stack 0
 45532                           pclatu	equ	0xFFB
 45533                           pclath	equ	0xFFA
 45534                           tblptru	equ	0xFF8
 45535                           tblptrh	equ	0xFF7
 45536                           tblptrl	equ	0xFF6
 45537                           tablat	equ	0xFF5
 45538                           prodh	equ	0xFF4
 45539                           prodl	equ	0xFF3
 45540                           intcon	equ	0xFF2
 45541                           intcon2	equ	0xFF1
 45542                           indf0	equ	0xFEF
 45543                           postinc0	equ	0xFEE
 45544                           plusw0	equ	0xFEB
 45545                           fsr0h	equ	0xFEA
 45546                           fsr0l	equ	0xFE9
 45547                           wreg	equ	0xFE8
 45548                           indf1	equ	0xFE7
 45549                           postdec1	equ	0xFE5
 45550                           fsr1h	equ	0xFE2
 45551                           fsr1l	equ	0xFE1
 45552                           bsr	equ	0xFE0
 45553                           indf2	equ	0xFDF
 45554                           postinc2	equ	0xFDE
 45555                           postdec2	equ	0xFDD
 45556                           plusw2	equ	0xFDB
 45557                           fsr2h	equ	0xFDA
 45558                           fsr2l	equ	0xFD9
 45559                           status	equ	0xFD8
 45560                           
 45561 ;; *************** function _ResetTimer3 *****************
 45562 ;; Defined at:
 45563 ;;		line 175 in file "Timer.c"
 45564 ;; Parameters:    Size  Location     Type
 45565 ;;		None
 45566 ;; Auto vars:     Size  Location     Type
 45567 ;;		None
 45568 ;; Return value:  Size  Location     Type
 45569 ;;		None               void
 45570 ;; Registers used:
 45571 ;;		wreg, status,2
 45572 ;; Tracked objects:
 45573 ;;		On entry : 0/0
 45574 ;;		On exit  : 0/0
 45575 ;;		Unchanged: 0/0
 45576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45581 ;;Total ram usage:        0 bytes
 45582 ;; Hardware stack levels used:    1
 45583 ;; This function calls:
 45584 ;;		Nothing
 45585 ;; This function is called by:
 45586 ;;		_high_isr
 45587 ;; This function uses a non-reentrant model
 45588 ;;
 45589                           
 45590                           	psect	text124
 45591  00AF14                     __ptext124:
 45592                           	opt stack 0
 45593  00AF14                     _ResetTimer3:
 45594                           	opt stack 18
 45595                           
 45596                           ;Timer.c: 181: TMR3H = 0;
 45597                           
 45598                           ;incstack = 0
 45599  00AF14  0E00               	movlw	0
 45600  00AF16  6EB3               	movwf	4019,c	;volatile
 45601                           
 45602                           ;Timer.c: 182: TMR3L = 2;
 45603  00AF18  0E02               	movlw	2
 45604  00AF1A  6EB2               	movwf	4018,c	;volatile
 45605  00AF1C  0012               	return		;funcret
 45606  00AF1E                     __end_of_ResetTimer3:
 45607                           	opt stack 0
 45608                           pclatu	equ	0xFFB
 45609                           pclath	equ	0xFFA
 45610                           tblptru	equ	0xFF8
 45611                           tblptrh	equ	0xFF7
 45612                           tblptrl	equ	0xFF6
 45613                           tablat	equ	0xFF5
 45614                           prodh	equ	0xFF4
 45615                           prodl	equ	0xFF3
 45616                           intcon	equ	0xFF2
 45617                           intcon2	equ	0xFF1
 45618                           indf0	equ	0xFEF
 45619                           postinc0	equ	0xFEE
 45620                           plusw0	equ	0xFEB
 45621                           fsr0h	equ	0xFEA
 45622                           fsr0l	equ	0xFE9
 45623                           wreg	equ	0xFE8
 45624                           indf1	equ	0xFE7
 45625                           postdec1	equ	0xFE5
 45626                           fsr1h	equ	0xFE2
 45627                           fsr1l	equ	0xFE1
 45628                           bsr	equ	0xFE0
 45629                           indf2	equ	0xFDF
 45630                           postinc2	equ	0xFDE
 45631                           postdec2	equ	0xFDD
 45632                           plusw2	equ	0xFDB
 45633                           fsr2h	equ	0xFDA
 45634                           fsr2l	equ	0xFD9
 45635                           status	equ	0xFD8
 45636                           
 45637 ;; *************** function _IRrawToNEC *****************
 45638 ;; Defined at:
 45639 ;;		line 125 in file "IR.c"
 45640 ;; Parameters:    Size  Location     Type
 45641 ;;  Raw             2   22[COMRAM] PTR unsigned int 
 45642 ;;		 -> IRRawCode(200), 
 45643 ;;  NEC             2   24[COMRAM] PTR unsigned long 
 45644 ;;		 -> IR_NEC(4), 
 45645 ;;  Invert          1   26[COMRAM] unsigned char 
 45646 ;; Auto vars:     Size  Location     Type
 45647 ;;  NECtemp         4   29[COMRAM] unsigned long 
 45648 ;;  StartBit        1   35[COMRAM] unsigned char 
 45649 ;;  i               1   34[COMRAM] unsigned char 
 45650 ;;  first           1   33[COMRAM] unsigned char 
 45651 ;; Return value:  Size  Location     Type
 45652 ;;                  1    wreg      unsigned char 
 45653 ;; Registers used:
 45654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45655 ;; Tracked objects:
 45656 ;;		On entry : 0/0
 45657 ;;		On exit  : 0/0
 45658 ;;		Unchanged: 0/0
 45659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45660 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45661 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45663 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45664 ;;Total ram usage:       14 bytes
 45665 ;; Hardware stack levels used:    1
 45666 ;; This function calls:
 45667 ;;		Nothing
 45668 ;; This function is called by:
 45669 ;;		_high_isr
 45670 ;; This function uses a non-reentrant model
 45671 ;;
 45672                           
 45673                           	psect	text125
 45674  0069AC                     __ptext125:
 45675                           	opt stack 0
 45676  0069AC                     _IRrawToNEC:
 45677                           	opt stack 18
 45678                           
 45679                           ;IR.c: 153: unsigned char i;
 45680                           ;IR.c: 154: unsigned char first =0;
 45681                           
 45682                           ;incstack = 0
 45683  0069AC  0E00               	movlw	0
 45684  0069AE  6E22               	movwf	IRrawToNEC@first,c
 45685                           
 45686                           ;IR.c: 155: unsigned char StartBit=100;
 45687  0069B0  0E64               	movlw	100
 45688  0069B2  6E24               	movwf	IRrawToNEC@StartBit,c
 45689                           
 45690                           ;IR.c: 156: unsigned long NECtemp = 0;
 45691  0069B4  0E00               	movlw	0
 45692  0069B6  6E1E               	movwf	IRrawToNEC@NECtemp,c
 45693  0069B8  0E00               	movlw	0
 45694  0069BA  6E1F               	movwf	IRrawToNEC@NECtemp+1,c
 45695  0069BC  0E00               	movlw	0
 45696  0069BE  6E20               	movwf	IRrawToNEC@NECtemp+2,c
 45697  0069C0  0E00               	movlw	0
 45698  0069C2  6E21               	movwf	IRrawToNEC@NECtemp+3,c
 45699                           
 45700                           ;IR.c: 159: for (i =0; i < 100; i++)
 45701  0069C4  0E00               	movlw	0
 45702  0069C6  6E23               	movwf	IRrawToNEC@i,c
 45703  0069C8                     i2l13858:
 45704  0069C8  0E63               	movlw	99
 45705  0069CA  6423               	cpfsgt	IRrawToNEC@i,c
 45706  0069CC  D001               	goto	i2l13862
 45707  0069CE  D021               	goto	i2l13872
 45708  0069D0                     i2l13862:
 45709                           
 45710                           ;IR.c: 160: {
 45711                           ;IR.c: 161: if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 45712  0069D0  5023               	movf	IRrawToNEC@i,w,c
 45713  0069D2  0D02               	mullw	2
 45714  0069D4  50F3               	movf	prodl,w,c
 45715  0069D6  2417               	addwf	IRrawToNEC@Raw,w,c
 45716  0069D8  6ED9               	movwf	fsr2l,c
 45717  0069DA  50F4               	movf	prodh,w,c
 45718  0069DC  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45719  0069DE  6EDA               	movwf	fsr2h,c
 45720  0069E0  0EA0               	movlw	160
 45721  0069E2  5CDE               	subwf	postinc2,w,c
 45722  0069E4  0E0F               	movlw	15
 45723  0069E6  58DE               	subwfb	postinc2,w,c
 45724  0069E8  A0D8               	btfss	status,0,c
 45725  0069EA  D011               	goto	i2l13868
 45726  0069EC  5023               	movf	IRrawToNEC@i,w,c
 45727  0069EE  0D02               	mullw	2
 45728  0069F0  50F3               	movf	prodl,w,c
 45729  0069F2  2417               	addwf	IRrawToNEC@Raw,w,c
 45730  0069F4  6ED9               	movwf	fsr2l,c
 45731  0069F6  50F4               	movf	prodh,w,c
 45732  0069F8  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45733  0069FA  6EDA               	movwf	fsr2h,c
 45734  0069FC  0E89               	movlw	137
 45735  0069FE  5CDE               	subwf	postinc2,w,c
 45736  006A00  0E13               	movlw	19
 45737  006A02  58DE               	subwfb	postinc2,w,c
 45738  006A04  B0D8               	btfsc	status,0,c
 45739  006A06  D003               	goto	i2l13868
 45740                           
 45741                           ;IR.c: 162: {
 45742                           ;IR.c: 164: StartBit = i;
 45743  006A08  C023  F024         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 45744                           
 45745                           ;IR.c: 165: break;
 45746  006A0C  D002               	goto	i2l13872
 45747  006A0E                     i2l13868:
 45748  006A0E  2A23               	incf	IRrawToNEC@i,f,c
 45749  006A10  D7DB               	goto	i2l13858
 45750  006A12                     i2l13872:
 45751                           
 45752                           ;IR.c: 166: }
 45753                           ;IR.c: 167: }
 45754                           ;IR.c: 168: if((100 - StartBit) < 50)
 45755  006A12  5024               	movf	IRrawToNEC@StartBit,w,c
 45756  006A14  6E1C               	movwf	??_IRrawToNEC& (0+255),c
 45757  006A16  6A1D               	clrf	(??_IRrawToNEC+1)& (0+255),c
 45758  006A18  1E1C               	comf	??_IRrawToNEC,f,c
 45759  006A1A  1E1D               	comf	??_IRrawToNEC+1,f,c
 45760  006A1C  4A1C               	infsnz	??_IRrawToNEC,f,c
 45761  006A1E  2A1D               	incf	??_IRrawToNEC+1,f,c
 45762  006A20  0E64               	movlw	100
 45763  006A22  261C               	addwf	??_IRrawToNEC,f,c
 45764  006A24  0E00               	movlw	0
 45765  006A26  221D               	addwfc	??_IRrawToNEC+1,f,c
 45766  006A28  BE1D               	btfsc	??_IRrawToNEC+1,7,c
 45767  006A2A  D006               	goto	i2l13874
 45768  006A2C  501D               	movf	??_IRrawToNEC+1,w,c
 45769  006A2E  E106               	bnz	i2l13878
 45770  006A30  0E32               	movlw	50
 45771  006A32  5C1C               	subwf	??_IRrawToNEC,w,c
 45772  006A34  B0D8               	btfsc	status,0,c
 45773  006A36  D002               	goto	i2l13878
 45774  006A38                     i2l13874:
 45775                           
 45776                           ;IR.c: 169: {
 45777                           ;IR.c: 171: return 0;
 45778  006A38  0E00               	movlw	0
 45779  006A3A  0012               	return	
 45780  006A3C                     i2l13878:
 45781                           
 45782                           ;IR.c: 172: }
 45783                           ;IR.c: 174: StartBit++;
 45784  006A3C  2A24               	incf	IRrawToNEC@StartBit,f,c
 45785                           
 45786                           ;IR.c: 175: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 45787  006A3E  5024               	movf	IRrawToNEC@StartBit,w,c
 45788  006A40  0D02               	mullw	2
 45789  006A42  50F3               	movf	prodl,w,c
 45790  006A44  2417               	addwf	IRrawToNEC@Raw,w,c
 45791  006A46  6ED9               	movwf	fsr2l,c
 45792  006A48  50F4               	movf	prodh,w,c
 45793  006A4A  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45794  006A4C  6EDA               	movwf	fsr2h,c
 45795  006A4E  0E9D               	movlw	157
 45796  006A50  5CDE               	subwf	postinc2,w,c
 45797  006A52  0E03               	movlw	3
 45798  006A54  58DE               	subwfb	postinc2,w,c
 45799  006A56  A0D8               	btfss	status,0,c
 45800  006A58  D04C               	goto	i2l13900
 45801  006A5A  5024               	movf	IRrawToNEC@StartBit,w,c
 45802  006A5C  0D02               	mullw	2
 45803  006A5E  50F3               	movf	prodl,w,c
 45804  006A60  2417               	addwf	IRrawToNEC@Raw,w,c
 45805  006A62  6ED9               	movwf	fsr2l,c
 45806  006A64  50F4               	movf	prodh,w,c
 45807  006A66  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45808  006A68  6EDA               	movwf	fsr2h,c
 45809  006A6A  0EE3               	movlw	227
 45810  006A6C  5CDE               	subwf	postinc2,w,c
 45811  006A6E  0E04               	movlw	4
 45812  006A70  58DE               	subwfb	postinc2,w,c
 45813  006A72  B0D8               	btfsc	status,0,c
 45814  006A74  D03E               	goto	i2l13900
 45815                           
 45816                           ;IR.c: 176: {
 45817                           ;IR.c: 178: StartBit++;
 45818  006A76  2A24               	incf	IRrawToNEC@StartBit,f,c
 45819                           
 45820                           ;IR.c: 179: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 45821  006A78  5024               	movf	IRrawToNEC@StartBit,w,c
 45822  006A7A  0D02               	mullw	2
 45823  006A7C  50F3               	movf	prodl,w,c
 45824  006A7E  2417               	addwf	IRrawToNEC@Raw,w,c
 45825  006A80  6ED9               	movwf	fsr2l,c
 45826  006A82  50F4               	movf	prodh,w,c
 45827  006A84  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45828  006A86  6EDA               	movwf	fsr2h,c
 45829  006A88  0E01               	movlw	1
 45830  006A8A  50DB               	movf	plusw2,w,c
 45831  006A8C  E104               	bnz	i2u1574_40
 45832  006A8E  0E7D               	movlw	125
 45833  006A90  5CDE               	subwf	postinc2,w,c
 45834  006A92  A0D8               	btfss	status,0,c
 45835  006A94  D04D               	goto	i2l13908
 45836  006A96                     i2u1574_40:
 45837  006A96  5024               	movf	IRrawToNEC@StartBit,w,c
 45838  006A98  0D02               	mullw	2
 45839  006A9A  50F3               	movf	prodl,w,c
 45840  006A9C  2417               	addwf	IRrawToNEC@Raw,w,c
 45841  006A9E  6ED9               	movwf	fsr2l,c
 45842  006AA0  50F4               	movf	prodh,w,c
 45843  006AA2  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45844  006AA4  6EDA               	movwf	fsr2h,c
 45845  006AA6  0E59               	movlw	89
 45846  006AA8  5CDE               	subwf	postinc2,w,c
 45847  006AAA  0E02               	movlw	2
 45848  006AAC  58DE               	subwfb	postinc2,w,c
 45849  006AAE  B0D8               	btfsc	status,0,c
 45850  006AB0  D03F               	goto	i2l13908
 45851                           
 45852                           ;IR.c: 180: {
 45853                           ;IR.c: 182: StartBit++;
 45854  006AB2  2A24               	incf	IRrawToNEC@StartBit,f,c
 45855                           
 45856                           ;IR.c: 183: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 45857  006AB4  5024               	movf	IRrawToNEC@StartBit,w,c
 45858  006AB6  0D02               	mullw	2
 45859  006AB8  50F3               	movf	prodl,w,c
 45860  006ABA  2417               	addwf	IRrawToNEC@Raw,w,c
 45861  006ABC  6ED9               	movwf	fsr2l,c
 45862  006ABE  50F4               	movf	prodh,w,c
 45863  006AC0  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45864  006AC2  6EDA               	movwf	fsr2h,c
 45865  006AC4  0EC8               	movlw	200
 45866  006AC6  5CDE               	subwf	postinc2,w,c
 45867  006AC8  0EAF               	movlw	175
 45868  006ACA  58DE               	subwfb	postinc2,w,c
 45869  006ACC  A0D8               	btfss	status,0,c
 45870  006ACE  D030               	goto	i2l13908
 45871  006AD0  5024               	movf	IRrawToNEC@StartBit,w,c
 45872  006AD2  0D02               	mullw	2
 45873  006AD4  50F3               	movf	prodl,w,c
 45874  006AD6  2417               	addwf	IRrawToNEC@Raw,w,c
 45875  006AD8  6ED9               	movwf	fsr2l,c
 45876  006ADA  50F4               	movf	prodh,w,c
 45877  006ADC  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45878  006ADE  6EDA               	movwf	fsr2h,c
 45879  006AE0  0E51               	movlw	81
 45880  006AE2  5CDE               	subwf	postinc2,w,c
 45881  006AE4  0EC3               	movlw	195
 45882  006AE6  58DE               	subwfb	postinc2,w,c
 45883  006AE8  B0D8               	btfsc	status,0,c
 45884  006AEA  D022               	goto	i2l13908
 45885                           
 45886                           ;IR.c: 184: {
 45887                           ;IR.c: 186: return 2;
 45888  006AEC  0E02               	movlw	2
 45889  006AEE  0012               	return	
 45890                           
 45891                           ;IR.c: 187: }
 45892                           ;IR.c: 188: }
 45893                           ;IR.c: 189: }
 45894  006AF0  D01F               	goto	i2l13908
 45895  006AF2                     i2l13900:
 45896                           
 45897                           ;IR.c: 190: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 45898  006AF2  5024               	movf	IRrawToNEC@StartBit,w,c
 45899  006AF4  0D02               	mullw	2
 45900  006AF6  50F3               	movf	prodl,w,c
 45901  006AF8  2417               	addwf	IRrawToNEC@Raw,w,c
 45902  006AFA  6ED9               	movwf	fsr2l,c
 45903  006AFC  50F4               	movf	prodh,w,c
 45904  006AFE  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45905  006B00  6EDA               	movwf	fsr2h,c
 45906  006B02  0ED6               	movlw	214
 45907  006B04  5CDE               	subwf	postinc2,w,c
 45908  006B06  0E06               	movlw	6
 45909  006B08  58DE               	subwfb	postinc2,w,c
 45910  006B0A  A0D8               	btfss	status,0,c
 45911  006B0C  D00E               	goto	i2l13904
 45912  006B0E  5024               	movf	IRrawToNEC@StartBit,w,c
 45913  006B10  0D02               	mullw	2
 45914  006B12  50F3               	movf	prodl,w,c
 45915  006B14  2417               	addwf	IRrawToNEC@Raw,w,c
 45916  006B16  6ED9               	movwf	fsr2l,c
 45917  006B18  50F4               	movf	prodh,w,c
 45918  006B1A  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45919  006B1C  6EDA               	movwf	fsr2h,c
 45920  006B1E  0EBF               	movlw	191
 45921  006B20  5CDE               	subwf	postinc2,w,c
 45922  006B22  0E0A               	movlw	10
 45923  006B24  58DE               	subwfb	postinc2,w,c
 45924  006B26  A0D8               	btfss	status,0,c
 45925  006B28  D003               	goto	i2l13908
 45926  006B2A                     i2l13904:
 45927                           
 45928                           ;IR.c: 191: {
 45929                           ;IR.c: 193: return 0;
 45930  006B2A  0E00               	movlw	0
 45931  006B2C  0012               	return	
 45932  006B2E  D000               	goto	i2l13908
 45933  006B30                     i2l13908:
 45934                           
 45935                           ;IR.c: 194: }
 45936                           ;IR.c: 196: StartBit++;
 45937  006B30  2A24               	incf	IRrawToNEC@StartBit,f,c
 45938                           
 45939                           ;IR.c: 197: for(i = StartBit; i < 100;i++)
 45940  006B32  C024  F023         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 45941  006B36                     i2l13912:
 45942  006B36  0E63               	movlw	99
 45943  006B38  6423               	cpfsgt	IRrawToNEC@i,c
 45944  006B3A  D001               	goto	i2l13916
 45945  006B3C  D0CA               	goto	i2l13992
 45946  006B3E                     i2l13916:
 45947                           
 45948                           ;IR.c: 198: {
 45949                           ;IR.c: 199: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 45950  006B3E  5024               	movf	IRrawToNEC@StartBit,w,c
 45951  006B40  0D02               	mullw	2
 45952  006B42  50F3               	movf	prodl,w,c
 45953  006B44  2417               	addwf	IRrawToNEC@Raw,w,c
 45954  006B46  6ED9               	movwf	fsr2l,c
 45955  006B48  50F4               	movf	prodh,w,c
 45956  006B4A  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45957  006B4C  6EDA               	movwf	fsr2h,c
 45958  006B4E  0E01               	movlw	1
 45959  006B50  50DB               	movf	plusw2,w,c
 45960  006B52  E104               	bnz	i2u1581_40
 45961  006B54  0E7D               	movlw	125
 45962  006B56  5CDE               	subwf	postinc2,w,c
 45963  006B58  A0D8               	btfss	status,0,c
 45964  006B5A  D024               	goto	i2l13932
 45965  006B5C                     i2u1581_40:
 45966  006B5C  5024               	movf	IRrawToNEC@StartBit,w,c
 45967  006B5E  0D02               	mullw	2
 45968  006B60  50F3               	movf	prodl,w,c
 45969  006B62  2417               	addwf	IRrawToNEC@Raw,w,c
 45970  006B64  6ED9               	movwf	fsr2l,c
 45971  006B66  50F4               	movf	prodh,w,c
 45972  006B68  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 45973  006B6A  6EDA               	movwf	fsr2h,c
 45974  006B6C  0E59               	movlw	89
 45975  006B6E  5CDE               	subwf	postinc2,w,c
 45976  006B70  0E02               	movlw	2
 45977  006B72  58DE               	subwfb	postinc2,w,c
 45978  006B74  B0D8               	btfsc	status,0,c
 45979  006B76  D016               	goto	i2l13932
 45980                           
 45981                           ;IR.c: 200: {
 45982                           ;IR.c: 201: if(!first)
 45983  006B78  5022               	movf	IRrawToNEC@first,w,c
 45984  006B7A  A4D8               	btfss	status,2,c
 45985  006B7C  D002               	goto	i2l13924
 45986                           
 45987                           ;IR.c: 202: {
 45988                           ;IR.c: 204: first = 1;
 45989  006B7E  0E01               	movlw	1
 45990  006B80  D040               	goto	L43
 45991  006B82                     i2l13924:
 45992                           
 45993                           ;IR.c: 206: else
 45994                           ;IR.c: 207: {
 45995                           ;IR.c: 209: first = 0;
 45996  006B82  0E00               	movlw	0
 45997  006B84  6E22               	movwf	IRrawToNEC@first,c
 45998                           
 45999                           ;IR.c: 210: NECtemp <<= 1;
 46000  006B86  90D8               	bcf	status,0,c
 46001  006B88  361E               	rlcf	IRrawToNEC@NECtemp,f,c
 46002  006B8A  361F               	rlcf	IRrawToNEC@NECtemp+1,f,c
 46003  006B8C  3620               	rlcf	IRrawToNEC@NECtemp+2,f,c
 46004  006B8E  3621               	rlcf	IRrawToNEC@NECtemp+3,f,c
 46005                           
 46006                           ;IR.c: 211: if(!Invert)
 46007  006B90  501B               	movf	IRrawToNEC@Invert,w,c
 46008  006B92  A4D8               	btfss	status,2,c
 46009  006B94  D09B               	goto	i2l13988
 46010                           
 46011                           ;IR.c: 212: {
 46012                           ;IR.c: 213: NECtemp++;
 46013  006B96  0E01               	movlw	1
 46014  006B98  261E               	addwf	IRrawToNEC@NECtemp,f,c
 46015  006B9A  0E00               	movlw	0
 46016  006B9C  221F               	addwfc	IRrawToNEC@NECtemp+1,f,c
 46017  006B9E  2220               	addwfc	IRrawToNEC@NECtemp+2,f,c
 46018  006BA0  2221               	addwfc	IRrawToNEC@NECtemp+3,f,c
 46019                           
 46020                           ;IR.c: 214: }
 46021                           ;IR.c: 215: }
 46022                           ;IR.c: 216: }
 46023  006BA2  D094               	goto	i2l13988
 46024  006BA4                     i2l13932:
 46025                           
 46026                           ;IR.c: 217: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 46027  006BA4  5024               	movf	IRrawToNEC@StartBit,w,c
 46028  006BA6  0D02               	mullw	2
 46029  006BA8  50F3               	movf	prodl,w,c
 46030  006BAA  2417               	addwf	IRrawToNEC@Raw,w,c
 46031  006BAC  6ED9               	movwf	fsr2l,c
 46032  006BAE  50F4               	movf	prodh,w,c
 46033  006BB0  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46034  006BB2  6EDA               	movwf	fsr2h,c
 46035  006BB4  0EBC               	movlw	188
 46036  006BB6  5CDE               	subwf	postinc2,w,c
 46037  006BB8  0E02               	movlw	2
 46038  006BBA  58DE               	subwfb	postinc2,w,c
 46039  006BBC  A0D8               	btfss	status,0,c
 46040  006BBE  D026               	goto	i2l13950
 46041  006BC0  5024               	movf	IRrawToNEC@StartBit,w,c
 46042  006BC2  0D02               	mullw	2
 46043  006BC4  50F3               	movf	prodl,w,c
 46044  006BC6  2417               	addwf	IRrawToNEC@Raw,w,c
 46045  006BC8  6ED9               	movwf	fsr2l,c
 46046  006BCA  50F4               	movf	prodh,w,c
 46047  006BCC  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46048  006BCE  6EDA               	movwf	fsr2h,c
 46049  006BD0  0EB7               	movlw	183
 46050  006BD2  5CDE               	subwf	postinc2,w,c
 46051  006BD4  0E03               	movlw	3
 46052  006BD6  58DE               	subwfb	postinc2,w,c
 46053  006BD8  B0D8               	btfsc	status,0,c
 46054  006BDA  D018               	goto	i2l13950
 46055                           
 46056                           ;IR.c: 218: {
 46057                           ;IR.c: 219: if(first)
 46058  006BDC  5022               	movf	IRrawToNEC@first,w,c
 46059  006BDE  B4D8               	btfsc	status,2,c
 46060  006BE0  D012               	goto	i2l13946
 46061                           
 46062                           ;IR.c: 220: {
 46063                           ;IR.c: 222: NECtemp <<= 1;
 46064  006BE2  90D8               	bcf	status,0,c
 46065  006BE4  361E               	rlcf	IRrawToNEC@NECtemp,f,c
 46066  006BE6  361F               	rlcf	IRrawToNEC@NECtemp+1,f,c
 46067  006BE8  3620               	rlcf	IRrawToNEC@NECtemp+2,f,c
 46068  006BEA  3621               	rlcf	IRrawToNEC@NECtemp+3,f,c
 46069                           
 46070                           ;IR.c: 223: if(Invert)
 46071  006BEC  501B               	movf	IRrawToNEC@Invert,w,c
 46072  006BEE  B4D8               	btfsc	status,2,c
 46073  006BF0  D007               	goto	i2l13944
 46074                           
 46075                           ;IR.c: 224: {
 46076                           ;IR.c: 225: NECtemp++;
 46077  006BF2  0E01               	movlw	1
 46078  006BF4  261E               	addwf	IRrawToNEC@NECtemp,f,c
 46079  006BF6  0E00               	movlw	0
 46080  006BF8  221F               	addwfc	IRrawToNEC@NECtemp+1,f,c
 46081  006BFA  2220               	addwfc	IRrawToNEC@NECtemp+2,f,c
 46082  006BFC  2221               	addwfc	IRrawToNEC@NECtemp+3,f,c
 46083  006BFE  D000               	goto	i2l13944
 46084  006C00                     i2l13944:
 46085                           
 46086                           ;IR.c: 226: }
 46087                           ;IR.c: 227: first = 0;
 46088  006C00  0E00               	movlw	0
 46089  006C02                     L43:
 46090  006C02  6E22               	movwf	IRrawToNEC@first,c
 46091                           
 46092                           ;IR.c: 228: }
 46093  006C04  D063               	goto	i2l13988
 46094  006C06                     i2l13946:
 46095                           
 46096                           ;IR.c: 229: else
 46097                           ;IR.c: 230: {
 46098                           ;IR.c: 232: return 0;
 46099  006C06  0E00               	movlw	0
 46100  006C08  0012               	return	
 46101                           
 46102                           ;IR.c: 233: }
 46103                           ;IR.c: 234: }
 46104  006C0A  D060               	goto	i2l13988
 46105  006C0C                     i2l13950:
 46106                           
 46107                           ;IR.c: 235: else if(Raw[StartBit] == 0 && first == 1)
 46108  006C0C  5024               	movf	IRrawToNEC@StartBit,w,c
 46109  006C0E  0D02               	mullw	2
 46110  006C10  50F3               	movf	prodl,w,c
 46111  006C12  2417               	addwf	IRrawToNEC@Raw,w,c
 46112  006C14  6ED9               	movwf	fsr2l,c
 46113  006C16  50F4               	movf	prodh,w,c
 46114  006C18  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46115  006C1A  6EDA               	movwf	fsr2h,c
 46116  006C1C  50DE               	movf	postinc2,w,c
 46117  006C1E  10DE               	iorwf	postinc2,w,c
 46118  006C20  A4D8               	btfss	status,2,c
 46119  006C22  D012               	goto	i2l13962
 46120  006C24  0422               	decf	IRrawToNEC@first,w,c
 46121  006C26  A4D8               	btfss	status,2,c
 46122  006C28  D00F               	goto	i2l13962
 46123  006C2A                     i2l13954:
 46124                           
 46125                           ;IR.c: 236: {
 46126                           ;IR.c: 241: *NEC = NECtemp;
 46127  006C2A  C019  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 46128  006C2E  C01A  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 46129  006C32  C01E  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 46130  006C36  C01F  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 46131  006C3A  C020  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 46132  006C3E  C021  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 46133  006C42  D01F               	goto	i2l13968
 46134                           
 46135                           ;IR.c: 242: return 1;
 46136  006C44  0012               	return	
 46137                           
 46138                           ;IR.c: 243: }
 46139  006C46  D042               	goto	i2l13988
 46140  006C48                     i2l13962:
 46141                           
 46142                           ;IR.c: 244: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 46143  006C48  5024               	movf	IRrawToNEC@StartBit,w,c
 46144  006C4A  0D02               	mullw	2
 46145  006C4C  50F3               	movf	prodl,w,c
 46146  006C4E  2417               	addwf	IRrawToNEC@Raw,w,c
 46147  006C50  6ED9               	movwf	fsr2l,c
 46148  006C52  50F4               	movf	prodh,w,c
 46149  006C54  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46150  006C56  6EDA               	movwf	fsr2h,c
 46151  006C58  0E38               	movlw	56
 46152  006C5A  5CDE               	subwf	postinc2,w,c
 46153  006C5C  0E4A               	movlw	74
 46154  006C5E  58DE               	subwfb	postinc2,w,c
 46155  006C60  A0D8               	btfss	status,0,c
 46156  006C62  D012               	goto	i2l13974
 46157  006C64  5024               	movf	IRrawToNEC@StartBit,w,c
 46158  006C66  0D02               	mullw	2
 46159  006C68  50F3               	movf	prodl,w,c
 46160  006C6A  2417               	addwf	IRrawToNEC@Raw,w,c
 46161  006C6C  6ED9               	movwf	fsr2l,c
 46162  006C6E  50F4               	movf	prodh,w,c
 46163  006C70  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46164  006C72  6EDA               	movwf	fsr2h,c
 46165  006C74  0E09               	movlw	9
 46166  006C76  5CDE               	subwf	postinc2,w,c
 46167  006C78  0E52               	movlw	82
 46168  006C7A  58DE               	subwfb	postinc2,w,c
 46169  006C7C  B0D8               	btfsc	status,0,c
 46170  006C7E  D004               	goto	i2l13974
 46171  006C80  D7D4               	goto	i2l13954
 46172  006C82                     i2l13968:
 46173                           
 46174                           ;IR.c: 248: return 1;
 46175  006C82  0E01               	movlw	1
 46176  006C84  0012               	return	
 46177                           
 46178                           ;IR.c: 249: }
 46179  006C86  D022               	goto	i2l13988
 46180  006C88                     i2l13974:
 46181                           
 46182                           ;IR.c: 250: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 46183  006C88  5024               	movf	IRrawToNEC@StartBit,w,c
 46184  006C8A  0D02               	mullw	2
 46185  006C8C  50F3               	movf	prodl,w,c
 46186  006C8E  2417               	addwf	IRrawToNEC@Raw,w,c
 46187  006C90  6ED9               	movwf	fsr2l,c
 46188  006C92  50F4               	movf	prodh,w,c
 46189  006C94  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46190  006C96  6EDA               	movwf	fsr2h,c
 46191  006C98  0EC8               	movlw	200
 46192  006C9A  5CDE               	subwf	postinc2,w,c
 46193  006C9C  0EAF               	movlw	175
 46194  006C9E  58DE               	subwfb	postinc2,w,c
 46195  006CA0  A0D8               	btfss	status,0,c
 46196  006CA2  D011               	goto	i2l13984
 46197  006CA4  5024               	movf	IRrawToNEC@StartBit,w,c
 46198  006CA6  0D02               	mullw	2
 46199  006CA8  50F3               	movf	prodl,w,c
 46200  006CAA  2417               	addwf	IRrawToNEC@Raw,w,c
 46201  006CAC  6ED9               	movwf	fsr2l,c
 46202  006CAE  50F4               	movf	prodh,w,c
 46203  006CB0  2018               	addwfc	IRrawToNEC@Raw+1,w,c
 46204  006CB2  6EDA               	movwf	fsr2h,c
 46205  006CB4  0E51               	movlw	81
 46206  006CB6  5CDE               	subwf	postinc2,w,c
 46207  006CB8  0EC3               	movlw	195
 46208  006CBA  58DE               	subwfb	postinc2,w,c
 46209  006CBC  B0D8               	btfsc	status,0,c
 46210  006CBE  D003               	goto	i2l13984
 46211                           
 46212                           ;IR.c: 251: {
 46213                           ;IR.c: 253: return 2;
 46214  006CC0  0E02               	movlw	2
 46215  006CC2  0012               	return	
 46216                           
 46217                           ;IR.c: 254: }
 46218  006CC4  D003               	goto	i2l13988
 46219  006CC6                     i2l13984:
 46220                           
 46221                           ;IR.c: 255: else
 46222                           ;IR.c: 256: {
 46223                           ;IR.c: 257: return 0;
 46224  006CC6  0E00               	movlw	0
 46225  006CC8  0012               	return	
 46226  006CCA  D000               	goto	i2l13988
 46227  006CCC                     i2l13988:
 46228                           
 46229                           ;IR.c: 258: }
 46230                           ;IR.c: 259: StartBit++;
 46231  006CCC  2A24               	incf	IRrawToNEC@StartBit,f,c
 46232  006CCE  2A23               	incf	IRrawToNEC@i,f,c
 46233  006CD0  D732               	goto	i2l13912
 46234  006CD2                     i2l13992:
 46235                           
 46236                           ;IR.c: 260: }
 46237                           ;IR.c: 262: return 0;
 46238  006CD2  0E00               	movlw	0
 46239  006CD4  0012               	return	
 46240  006CD6  0012               	return		;funcret
 46241  006CD8                     __end_of_IRrawToNEC:
 46242                           	opt stack 0
 46243                           pclatu	equ	0xFFB
 46244                           pclath	equ	0xFFA
 46245                           tblptru	equ	0xFF8
 46246                           tblptrh	equ	0xFF7
 46247                           tblptrl	equ	0xFF6
 46248                           tablat	equ	0xFF5
 46249                           prodh	equ	0xFF4
 46250                           prodl	equ	0xFF3
 46251                           intcon	equ	0xFF2
 46252                           intcon2	equ	0xFF1
 46253                           indf0	equ	0xFEF
 46254                           postinc0	equ	0xFEE
 46255                           plusw0	equ	0xFEB
 46256                           fsr0h	equ	0xFEA
 46257                           fsr0l	equ	0xFE9
 46258                           wreg	equ	0xFE8
 46259                           indf1	equ	0xFE7
 46260                           postdec1	equ	0xFE5
 46261                           fsr1h	equ	0xFE2
 46262                           fsr1l	equ	0xFE1
 46263                           bsr	equ	0xFE0
 46264                           indf2	equ	0xFDF
 46265                           postinc2	equ	0xFDE
 46266                           postdec2	equ	0xFDD
 46267                           plusw2	equ	0xFDB
 46268                           fsr2h	equ	0xFDA
 46269                           fsr2l	equ	0xFD9
 46270                           status	equ	0xFD8
 46271                           pclatu	equ	0xFFB
 46272                           pclath	equ	0xFFA
 46273                           tblptru	equ	0xFF8
 46274                           tblptrh	equ	0xFF7
 46275                           tblptrl	equ	0xFF6
 46276                           tablat	equ	0xFF5
 46277                           prodh	equ	0xFF4
 46278                           prodl	equ	0xFF3
 46279                           intcon	equ	0xFF2
 46280                           intcon2	equ	0xFF1
 46281                           indf0	equ	0xFEF
 46282                           postinc0	equ	0xFEE
 46283                           plusw0	equ	0xFEB
 46284                           fsr0h	equ	0xFEA
 46285                           fsr0l	equ	0xFE9
 46286                           wreg	equ	0xFE8
 46287                           indf1	equ	0xFE7
 46288                           postdec1	equ	0xFE5
 46289                           fsr1h	equ	0xFE2
 46290                           fsr1l	equ	0xFE1
 46291                           bsr	equ	0xFE0
 46292                           indf2	equ	0xFDF
 46293                           postinc2	equ	0xFDE
 46294                           postdec2	equ	0xFDD
 46295                           plusw2	equ	0xFDB
 46296                           fsr2h	equ	0xFDA
 46297                           fsr2l	equ	0xFD9
 46298                           status	equ	0xFD8
 46299                           
 46300                           	psect	rparam
 46301  0000                     pclatu	equ	0xFFB
 46302                           pclath	equ	0xFFA
 46303                           tblptru	equ	0xFF8
 46304                           tblptrh	equ	0xFF7
 46305                           tblptrl	equ	0xFF6
 46306                           tablat	equ	0xFF5
 46307                           prodh	equ	0xFF4
 46308                           prodl	equ	0xFF3
 46309                           intcon	equ	0xFF2
 46310                           intcon2	equ	0xFF1
 46311                           indf0	equ	0xFEF
 46312                           postinc0	equ	0xFEE
 46313                           plusw0	equ	0xFEB
 46314                           fsr0h	equ	0xFEA
 46315                           fsr0l	equ	0xFE9
 46316                           wreg	equ	0xFE8
 46317                           indf1	equ	0xFE7
 46318                           postdec1	equ	0xFE5
 46319                           fsr1h	equ	0xFE2
 46320                           fsr1l	equ	0xFE1
 46321                           bsr	equ	0xFE0
 46322                           indf2	equ	0xFDF
 46323                           postinc2	equ	0xFDE
 46324                           postdec2	equ	0xFDD
 46325                           plusw2	equ	0xFDB
 46326                           fsr2h	equ	0xFDA
 46327                           fsr2l	equ	0xFD9
 46328                           status	equ	0xFD8


Data Sizes:
    Strings     4254
    Constant    738
    Data        60
    BSS         623
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      80
    BANK0           160    149     160
    BANK1           256    255     255
    BANK2           256    138     240
    BANK3           256    229     245
    BANK4           256      0     251
    BANK5           256      0      80
    BANK6           256      0     200
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_189(CODE[7]), sprintf@c(BANK0[1]), Frequency(CODE[4]), PCBVersion(CODE[5]), 
		 -> FirmVersion(CODE[9]), BluetoothInitialSetup@BroadcastTEMP(BANK1[21]), GetNumber@temp(BANK0[4]), main@BroadcastTEMP(BANK3[21]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_140(CODE[19]), STR_138(CODE[15]), STR_120(CODE[19]), STR_118(CODE[27]), 
		 -> STR_117(CODE[16]), STR_114(CODE[21]), STR_112(CODE[20]), STR_97(CODE[27]), 
		 -> STR_83(CODE[44]), STR_82(CODE[54]), STR_81(CODE[54]), STR_80(CODE[63]), 
		 -> STR_69(CODE[42]), STR_55(CODE[44]), STR_54(CODE[46]), STR_52(CODE[44]), 
		 -> STR_51(CODE[21]), STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[20]), 
		 -> STR_33(CODE[23]), STR_32(CODE[21]), STR_31(CODE[21]), STR_21(CODE[4]), 
		 -> STR_19(CODE[11]), STR_18(CODE[28]), STR_12(CODE[4]), STR_11(CODE[7]), 
		 -> STR_10(CODE[4]), STR_9(CODE[24]), STR_7(CODE[4]), STR_5(CODE[23]), 
		 -> STR_4(CODE[15]), STR_1(CODE[50]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), EnterCommandMode@buf(BANK1[50]), Init_System@buf(BANK1[50]), 
		 -> main@buf(BANK3[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK0[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(BANK0[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK3[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK3[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK6[200]), 

    GetEEPROM2@Temp	PTR struct EEdata2 size(2) Largest target is 52
		 -> SyncEEPROMToGlobal@Temp2(BANK0[52]), 

    GetEEPROM1@Temp	PTR struct EEdata size(2) Largest target is 30
		 -> SyncEEPROMToGlobal@Temp1(BANK0[30]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_185(CODE[32]), STR_184(CODE[31]), STR_183(CODE[32]), STR_182(CODE[31]), 
		 -> STR_181(CODE[32]), STR_180(CODE[31]), STR_179(CODE[20]), STR_178(CODE[19]), 
		 -> STR_177(CODE[23]), STR_176(CODE[22]), STR_175(CODE[19]), STR_174(CODE[19]), 
		 -> STR_173(CODE[19]), STR_172(CODE[34]), STR_169(CODE[40]), STR_167(CODE[46]), 
		 -> STR_165(CODE[46]), STR_163(CODE[46]), STR_161(CODE[46]), STR_159(CODE[46]), 
		 -> STR_157(CODE[46]), STR_155(CODE[49]), STR_153(CODE[49]), STR_151(CODE[49]), 
		 -> STR_149(CODE[49]), STR_147(CODE[49]), STR_145(CODE[49]), STR_143(CODE[63]), 
		 -> STR_141(CODE[24]), STR_139(CODE[25]), STR_136(CODE[28]), STR_133(CODE[33]), 
		 -> STR_131(CODE[22]), STR_129(CODE[35]), STR_127(CODE[32]), STR_125(CODE[10]), 

    UARTcommandMenu@Command	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_171(CODE[7]), STR_168(CODE[5]), STR_166(CODE[13]), STR_164(CODE[13]), 
		 -> STR_162(CODE[13]), STR_160(CODE[13]), STR_158(CODE[13]), STR_156(CODE[13]), 
		 -> STR_154(CODE[11]), STR_152(CODE[11]), STR_150(CODE[11]), STR_148(CODE[11]), 
		 -> STR_146(CODE[11]), STR_144(CODE[11]), STR_142(CODE[11]), STR_135(CODE[8]), 
		 -> STR_132(CODE[22]), STR_130(CODE[10]), STR_128(CODE[8]), STR_126(CODE[6]), 
		 -> STR_124(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN_CONST@data	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_188(CODE[36]), STR_186(CODE[27]), STR_170(CODE[13]), STR_137(CODE[13]), 
		 -> STR_134(CODE[21]), STR_123(CODE[17]), STR_119(CODE[5]), STR_116(CODE[23]), 
		 -> STR_115(CODE[29]), STR_110(CODE[57]), STR_109(CODE[64]), STR_108(CODE[41]), 
		 -> STR_107(CODE[53]), STR_106(CODE[57]), STR_104(CODE[57]), STR_101(CODE[24]), 
		 -> STR_100(CODE[34]), STR_99(CODE[44]), STR_98(CODE[18]), STR_96(CODE[44]), 
		 -> STR_95(CODE[46]), STR_92(CODE[46]), STR_89(CODE[29]), STR_88(CODE[18]), 
		 -> STR_87(CODE[29]), STR_84(CODE[44]), STR_79(CODE[46]), STR_78(CODE[47]), 
		 -> STR_77(CODE[50]), STR_76(CODE[50]), STR_74(CODE[31]), STR_73(CODE[31]), 
		 -> STR_72(CODE[37]), STR_71(CODE[37]), STR_70(CODE[37]), STR_63(CODE[18]), 
		 -> STR_62(CODE[14]), STR_61(CODE[9]), STR_60(CODE[20]), STR_59(CODE[16]), 
		 -> STR_58(CODE[7]), STR_57(CODE[35]), STR_56(CODE[37]), STR_53(CODE[47]), 
		 -> STR_48(CODE[17]), STR_47(CODE[9]), STR_46(CODE[18]), STR_45(CODE[9]), 
		 -> STR_44(CODE[22]), STR_43(CODE[11]), STR_42(CODE[20]), STR_41(CODE[7]), 
		 -> STR_40(CODE[31]), STR_38(CODE[33]), STR_34(CODE[32]), STR_30(CODE[31]), 
		 -> STR_29(CODE[31]), STR_27(CODE[29]), STR_25(CODE[29]), SYNTAX_ERR(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[24]), ProjectName(CODE[26]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothFirmware2(BANK5[30]), BluetoothFirmware1(BANK4[30]), main@buf(BANK3[100]), 

    UARTstring_CONST@data	PTR const unsigned char  size(2) Largest target is 60
		 -> Conf2_ChannelH_3_STR(CODE[17]), Conf2_ChannelH_2_STR(CODE[17]), Conf2_ChannelH_1_STR(CODE[17]), Conf2_ChannelD_STR(CODE[15]), 
		 -> Conf2_ChannelB_STR(CODE[15]), STR_187(CODE[28]), STR_122(CODE[13]), STR_105(CODE[35]), 
		 -> STR_103(CODE[38]), STR_94(CODE[24]), STR_91(CODE[60]), STR_86(CODE[32]), 
		 -> STR_75(CODE[14]), STR_68(CODE[34]), STR_67(CODE[35]), SYNTAX_ERR(CODE[14]), 
		 -> Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), STR_23(CODE[6]), 
		 -> STR_20(CODE[5]), STR_17(CODE[3]), STR_16(CODE[6]), STR_15(CODE[9]), 
		 -> STR_14(CODE[20]), STR_13(CODE[9]), STR_8(CODE[3]), STR_6(CODE[4]), 
		 -> CRLN(CODE[3]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), ReceivedString(BANK4[100]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    GetNumberUnsigned@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumberUnsigned@This	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    GetNumber@result	PTR long  size(2) Largest target is 4
		 -> UseBluetooth@SerialNumberTEMP(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumberUnsigned@tempThis(BANK0[1]), GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThat(BANK0[1]), StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR const unsigned char  size(2) Largest target is 100
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), CommandString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_66(CODE[7]), STR_65(CODE[9]), STR_64(CODE[7]), STR_50(CODE[4]), 
		 -> STR_49(CODE[13]), STR_28(CODE[4]), STR_26(CODE[6]), STR_24(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), BluetoothInitialSetup@buf(BANK1[50]), 

    StringContains@This	PTR const unsigned char  size(2) Largest target is 100
		 -> CommandString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_39(CODE[2]), BluetoothInitialSetup@buf(BANK1[50]), EnterCommandMode@buf(BANK1[50]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_113(CODE[8]), STR_111(CODE[8]), STR_102(CODE[22]), STR_90(CODE[10]), 
		 -> STR_85(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), STR_22(CODE[7]), 

    StringMatchCaseInsensitive@This	PTR const unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK3[100]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_121(CODE[4]), STR_93(CODE[5]), 

    StringMatch@This	PTR const unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), main@BluetoothString(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> BluetoothInitialSetup@BluetoothVersionLine2(BANK1[30]), BluetoothInitialSetup@BluetoothVersionLine1(BANK1[30]), StringAddEqual@temp(BANK1[255]), Init_System@buf(BANK1[50]), 
		 -> BluetoothBroadcast(BANK4[21]), ReceivedString(BANK4[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> BluetoothInitialSetup@BroadcastTEMP(BANK1[21]), BluetoothFirmware2(BANK5[30]), BluetoothFirmware1(BANK4[30]), BluetoothBroadcast(BANK4[21]), 
		 -> ReceivedString(BANK4[100]), main@BroadcastTEMP(BANK3[21]), main@BluetoothString(BANK3[100]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK6[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@BluetoothVersionLine2(BANK1[30]), BluetoothInitialSetup@BluetoothVersionLine1(BANK1[30]), 
		 -> BluetoothInitialSetup@BroadcastTEMP(BANK1[21]), BluetoothInitialSetup@buf(BANK1[50]), CommandString(BANK4[100]), StringAddEqual@temp(BANK1[255]), 
		 -> BluetoothFirmware2(BANK5[30]), BluetoothFirmware1(BANK4[30]), BluetoothBroadcast(BANK4[21]), ReceivedString(BANK4[100]), 
		 -> main@BroadcastTEMP(BANK3[21]), main@BluetoothString(BANK3[100]), main@buf(BANK3[100]), 

    IsAlphaNumericString@data	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_UARTstring_CONST
    i1_UARTstring_CONST->i1_UARTchar_CONST
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _main->_UseBluetooth
    _UseIRCode->_SyncGlobalToEEPROM
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_SyncEEPROMToGlobal
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN_CONST->_UARTstring_CONST
    _UARTstringCRLN->_UARTstring_CONST
    _UARTcommandMenu->_UARTstring_CONST
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _SendRF_Channel->_SendRF_wait
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _IsAlphaNumericString->_IsAlphaNumeric
    _IsAlphaNumeric->_IsLetter
    _IsAlphaNumeric->_IsNumber
    _GetNumberUnsigned->___lmul
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DisplayRF_Channel->_UARTstring_CONST
    _DecodeNEC->_Reverse_Byte
    _Init_System->_SyncEEPROMToGlobal
    _SyncEEPROMToGlobal->_GetEEPROM2
    _GetEEPROM2->_GetMemoryLong
    _GetEEPROM1->_GetMemoryLong
    _SetEEPROMdefault->_SyncGlobalToEEPROM
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _InitBluetooth->_BluetoothInitialSetup
    _SyncGlobalToEEPROM->_SetEEPROM2
    _SetEEPROM2->_SetMemoryLong
    _SetEEPROM1->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte
    _BluetoothInitialSetup->_sprintf
    _UARTstring->_UARTchar
    _StringContainsCaseInsensitive->_lowercaseChar
    _EnterCommandMode->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _UARTstring_CONST->_UARTchar_CONST
    _ResetBlue->_delayUS
    _ClearUSART->_ReadUSART
    _BufferCopy->_cleanBuffer

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _InitBluetooth->_BluetoothInitialSetup
    _BluetoothInitialSetup->_EnterCommandMode

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               229   229      0  810097
                                              0 BANK3    229   229      0
                      _BlueConnected
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                         _LEDTimerON
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                     _UARTchar_CONST
                     _UARTstringCRLN
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   26566
                                            122 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    3657
                                              9 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       153   150      3  384419
                                            134 BANK0     15    12      3
                                              0 BANK2    138   138      0
              _BluetoothInitialSetup
                         _BufferCopy
                         _ClearUSART
                          _DecodeNEC
                  _DisplayRF_Channel
                          _EncodeNEC
                          _GetNumber
                  _GetNumberUnsigned
                _GetStringAfterComma
               _IsAlphaNumericString
                        _ReadVoltage
                       _SendNEC_wait
                     _SendRF_Channel
                        _SendRF_wait
                         _SetEEPROM2
                     _StringAddEqual
                     _StringContains
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                     _UARTchar_CONST
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     153
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   23398
                                              9 BANK0      1     1      0
                         _LEDTimerON
                     _UARTchar_CONST
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN_CONST                                 2     0      2   11910
                                              4 BANK0      2     0      2
                     _UARTchar_CONST
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _UARTstringCRLN                                       2     0      2    9135
                                              4 BANK0      2     0      2
                           _UARTchar
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   12602
                                              4 BANK0     11     7      4
                           _UARTchar
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    3092
                                              3 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     368
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   15007
                                             15 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    7332
                                             13 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    7310
                                              8 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     566
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    5145
                                             21 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1039
                                             16 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4     823
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   13288
                                             41 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2234
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2658
                                             11 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3828
                                              9 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _IsAlphaNumericString                                 2     0      2     307
                                              2 BANK0      2     0      2
                     _IsAlphaNumeric
 ---------------------------------------------------------------------------------
 (3) _IsAlphaNumeric                                       1     1      0     198
                                              1 BANK0      1     1      0
                           _IsLetter
                           _IsNumber
 ---------------------------------------------------------------------------------
 (4) _IsNumber                                             1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     532
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumberUnsigned                                   19    14      5    3036
                                             12 BANK0     19    14      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    2319
                                             12 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     450
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _IsLetter                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     515
                                              4 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DisplayRF_Channel                                    1     1      0    7788
                                              4 BANK0      1     1      0
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1435
                                              4 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     207
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                         50    50      0  278992
                                            187 BANK1     50    50      0
                         _BufferCopy
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                         _SetEEPROM2
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                        _cleanBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                  89    89      0    3960
                                             45 BANK0     89    89      0
                         _GetEEPROM1
                         _GetEEPROM2
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM2                                           8     6      2    1661
                                             37 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM1                                           8     6      2    1637
                                             37 BANK0      7     5      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0   10229
                                            122 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   10863
                                             85 BANK0     18    14      4
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    6633
                                             78 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2350
                                              8 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     295
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     295
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  173852
                _BluetoothConfigured
              _BluetoothInitialSetup
                         _ClearUSART
                          _ResetBlue
                 _SyncGlobalToEEPROM
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   1     1      0    9889
                                            121 BANK0      1     1      0
                         _SetEEPROM1
                         _SetEEPROM2
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM2                                          67    11     56    5049
                                             54 BANK0     67    11     56
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM1                                          45    11     34    4815
                                             54 BANK0     44    10     34
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2341
                                             37 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     742
                                              4 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    1958
                                             10 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1008
                                              0 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     583
                                              4 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     538
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _BluetoothInitialSetup                              137   137      0  154587
                                            128 BANK0      1     1      0
                                             51 BANK1    136   136      0
                         _BufferCopy
                         _ClearUSART
                   _EnterCommandMode
                     _StringContains
      _StringContainsCaseInsensitive
                         _UARTstring
                   _UARTstring_CONST
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UARTstring                                           2     0      2     383
                                              1 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (3) _UARTchar                                             1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                       11     7      4    2253
                                              3 BANK0     11     7      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     450
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _EnterCommandMode                                    51    51      0   73080
                                              0 BANK1     51    51      0
                      _BlueConnected
                         _ClearUSART
                          _ResetBlue
                     _StringContains
                   _UARTstring_CONST
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             51    37     14   50752
                                             78 BANK0     50    36     14
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10348
                                             41 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   10150
                                             41 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2335
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4496
                                             26 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2345
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     802
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     572
                                             63 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4027
                                             63 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3602
                                             51 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2148
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1032
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _UARTstring_CONST                                     2     0      2    7766
                                              2 BANK0      2     0      2
                     _UARTchar_CONST
 ---------------------------------------------------------------------------------
 (4) _UARTchar_CONST                                       2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       9     5      4    1449
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _ResetBlue                                            0     0      0    3630
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    3630
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      23
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    8254
                                              8 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    5723
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0     699
                                              4 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                   i1_UARTchar_CONST
                       i1_UARTstring
                 i1_UARTstring_CONST
 ---------------------------------------------------------------------------------
 (10) i1_UARTstring_CONST                                  2     0      2     138
                                              2 COMRAM     2     0      2
                   i1_UARTchar_CONST
 ---------------------------------------------------------------------------------
 (11) i1_UARTchar_CONST                                    2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i1_UARTstring                                        2     0      2     115
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (11) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           21    21      0    1808
                                             36 COMRAM    21    21      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (13) i2_cleanBuffer16bit                                  8     4      4     143
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _SetTimer0                                           2     0      2     108
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IRrawToNEC                                         14     9      5    1400
                                             22 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueConnected
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _BufferCopy
       _cleanBuffer
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
       _BluetoothInitialSetup
         _BufferCopy
           _cleanBuffer
         _ClearUSART
           _ReadUSART
         _EnterCommandMode
           _BlueConnected
           _ClearUSART
             _ReadUSART
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring_CONST
             _UARTchar_CONST
           _cleanBuffer
           _delayUS
           _sprintf
             _ReadVoltage (ARG)
               _InternalADC_Read
                 _delayUS
               _VoltageDividerOFF
               ___ftdiv
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lwtoft
                 ___ftpack
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftsub (ARG)
               ___ftadd
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_ (ARG)
             __tdiv_to_l_ (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _StringContains
         _StringContainsCaseInsensitive
           _lowercaseChar
         _UARTstring
           _UARTchar
         _UARTstring_CONST
           _UARTchar_CONST
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ClearUSART
         _ReadUSART
       _ResetBlue
         _delayUS
       _SyncGlobalToEEPROM
         _SetEEPROM1
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
         _SetEEPROM2
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROM2
       _SetMemoryChar
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryLong
         _GetMemoryLong
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM1
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
         _SetEEPROM2
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM1
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
       _GetEEPROM2
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _cleanBuffer
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _LEDTimerON
     _ResetTimer1
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
   _UARTchar
   _UARTchar_CONST
   _UARTstringCRLN
     _UARTchar
     _UARTstring_CONST
       _UARTchar_CONST
   _UARTstringCRLN_CONST
     _UARTchar_CONST
     _UARTstring_CONST
       _UARTchar_CONST
   _UARTstring_CONST
     _UARTchar_CONST
   _UseBluetooth
     _BluetoothInitialSetup
       _BufferCopy
         _cleanBuffer
       _ClearUSART
         _ReadUSART
       _EnterCommandMode
         _BlueConnected
         _ClearUSART
           _ReadUSART
         _ResetBlue
           _delayUS
         _StringContains
         _UARTstring_CONST
           _UARTchar_CONST
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _StringContains
       _StringContainsCaseInsensitive
         _lowercaseChar
       _UARTstring
         _UARTchar
       _UARTstring_CONST
         _UARTchar_CONST
       _cleanBuffer
       _delayUS
       _sprintf
         _ReadVoltage (ARG)
           _InternalADC_Read
             _delayUS
           _VoltageDividerOFF
           ___ftdiv
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lwtoft
             ___ftpack
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftsub (ARG)
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_ (ARG)
         __tdiv_to_l_ (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _BufferCopy
       _cleanBuffer
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _DisplayRF_Channel
       _UARTstring_CONST
         _UARTchar_CONST
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetNumberUnsigned
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _IsAlphaNumericString
       _IsAlphaNumeric
         _IsLetter
         _IsNumber
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _SetEEPROM2
       _SetMemoryChar
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryLong
         _GetMemoryLong
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncEEPROMToGlobal
       _GetEEPROM1
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
       _GetEEPROM2
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTchar_CONST
     _UARTcommandMenu
       _UARTchar
       _UARTstring_CONST
         _UARTchar_CONST
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring_CONST
         _UARTchar_CONST
     _UARTstringCRLN_CONST
       _UARTchar_CONST
       _UARTstring_CONST
         _UARTchar_CONST
     _UARTstring_CONST
       _UARTchar_CONST
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar_CONST
       _UARTstringCRLN_CONST
         _UARTchar_CONST
         _UARTstring_CONST
           _UARTchar_CONST
       _UARTstring_CONST
         _UARTchar_CONST
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS
   _sprintf
     _ReadVoltage (ARG)
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
     ___awdiv (ARG)
       ___awmod (ARG)
     ___ftadd (ARG)
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTchar_CONST
   i1_UARTstring
     i1_UARTchar
   i1_UARTstring_CONST
     i1_UARTchar_CONST

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      C8      17       78.1%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      50      15       31.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FB      13       98.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     E5      F5      11       95.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100     8A      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     95      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      50       1       84.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5E7      32        0.0%
DATA                 0      0     5E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Apr 29 21:24:13 2015

                           BufferCopy@shift 006D                          UARTstringCRLN@data 0064  
                    __end_of_Conf1_ChannelD EF2C                      __end_of_Conf1_ChannelE EF38  
                    __end_of_Conf1_ChannelF EF44                       UseBluetooth@StringPos 00E8  
                              ___altoft@exp 0070                      __end_of_Conf1_Channels EF56  
                   __size_of_StringContains 013A                               ??_EraseScreen 0002  
                               _IRcodePlace 004D                               ___altoft@sign 0071  
                      ?_BluetoothConfigured 0001                                ___awdiv@sign 006B  
                       ?_SyncGlobalToEEPROM 0001                                          bsr 000FE0  
                    __end_of_Conf2_Channels EF5A                         ___wmul@multiplicand 0070  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
                              ___ftadd@exp1 009E                                ___ftadd@exp2 009D  
                               ?_LEDTimerON 0001                          lowercaseChar@Input 0060  
                              ___ftadd@sign 009C                                  _SYNTAX_ERR EF12  
                                       l170 5240                                         l180 5440  
                                       l357 A750                                         l358 A740  
                                       l623 77D6                                         l800 AD36  
     StringContainsCaseInsensitive@tempThat 006C                                         l807 ACFC  
                                       l906 9E0A                                         l828 AD68  
                                       l792 A3D0       StringContainsCaseInsensitive@tempThis 006B  
                                       l794 A3E0                                         l795 A3E2  
                                       l788 A3AC                                __CFG_CPB$OFF 000000  
                                       _PR2 000FCB                                __CFG_CPD$OFF 000000  
                StringAddEqual@NullPosition 0073                        lowercaseString@Input 0060  
                              IsNumber@data 0060                                  _IRrawToNEC 69AC  
                             _IRbitPosition 004C                         __end_of_IsCharacter AD8C  
                   __size_of_IsAlphaNumeric 0034                                __CFG_BORV$27 000000  
                              ___awmod@sign 0065                                         prod 000FF3  
                                       wreg 000FE8                                  _IRsendCode 003A  
                                _IRsendFlag 00FC                                  _GetEEPROM1 953E  
                                _GetEEPROM2 9952                               main@Connected 03E2  
                             _InitBluetooth A4E4                                __CFG_LVP$OFF 000000  
                              ___ftdiv@cntr 0074                                ___ftdiv@sign 0079  
                                      l1105 A656                                        l2101 4F1C  
                                      l1133 8BA0                                        l1151 9220  
                                      l1144 9232                                        l1138 8B94  
                                      l1091 A702                                        l2300 22FA  
                                      l1181 79EC                                        l1158 9F6E  
                                      l3111 72D2                                        l2151 07C0  
                                      l2208 15FA                                        l3113 72FC  
                                      l1185 7AC2                                        l3122 73E0  
                                      l2082 4ABE                                        l3131 740A  
                                      l3107 7298                                        l3035 7FAA  
                                      l1099 AD98                                        l2149 0764  
                                      l3150 7D8E                                        l3142 8694  
                                      l2158 0A5A                                        l2280 1FA4  
                                      l3236 9AD0                                        l3156 7E16  
                                      l3181 AB84                                        l3149 7D4A  
                                      l3078 8CBA                                        l3246 9D8C  
                                      l2456 938E                                        l1848 A7CC  
                                      l2690 3568                                        l2699 37AE  
                                      l9220 8C04                                        l9230 8C9A  
                                      l9222 8C14                                        l9232 8CAA  
                                      l9224 8C46                                        l9216 8BEE  
                                      l9320 7364                                        l9304 72F2  
                                      l9322 7374                                        l9314 7334  
                                      l9410 9638                                        l9244 8CE4  
                                      l9228 8C68                                        l9340 7436  
                                      l9332 73C0                                        l9324 7384  
                                      l9238 8CC6                                        l9350 7486  
                                      l9334 73D0                                        l9326 7390  
                                      l9422 966E                                        l9270 A718  
                                      l9424 967C                                        l9416 9650  
                                      l9360 82EE                                        l9600 5E4C  
                                      l9442 96DE                                        l9434 96B8  
                                      l9426 9686                                        l9292 72A6  
                                      l9380 8378                                        l9532 A66A  
                                      l9438 96C8                                        l9470 9C1A  
                                      l9462 9BDC                                        l9454 9BB6  
                                      l9390 83BC                                        l9366 8328  
                                      l9614 609A                                        l9800 879C  
                                      l9720 7F20                                        l9712 7ECA  
                                      l9464 9BEA                                        l9384 8398  
                                      l9608 5FC4                                        l9298 72E0  
                                      l9810 87CE                                        l9642 7CF6  
                                      l9466 9BF4                                        l9474 9C2A  
                                      l9458 9BC8                                        l9394 83DC  
                                      l9626 ABE4                                        l9812 87E0  
                                      l9804 87B0                                        l9732 7F5C  
                                      l9724 7F34                                        l9636 7CBC  
                                      l9388 83B4                                        l9750 A7FA  
                                      l9814 87EE                                        l9830 9A5C  
                                      l9742 7F8E                                        l9478 9C40  
                                      l9398 83F8                                        l9590 5D4A  
                                      l9910 2C98                                        l9840 9ABC  
                                      l9832 9A66                                        l9744 7FA0  
                                      l9736 7F70                                        l9672 7DC8  
                                      l9664 7DA0                                        l9576 6F60  
                                      l9568 6E6C                                        l9912 2CB0  
                                      l9904 2C74                                        l9762 983C  
                                      l9818 880C                                        l9850 9D28  
                                      l9682 7DFA                                        l9930 2D68  
                                      l9906 2C8A                                        l9828 9A4A  
                                      l9852 9D32                                        l9692 7E4E  
                                      l9684 7E0C                                        l9676 7DDC  
                                      l9596 5E20                                        l9940 2DA8  
                                      l9924 2D54                                        l9916 2CD2  
                                      l9758 97FA                                        l9782 8708  
                                      l9862 A2FE                                        l9950 2E26  
                                      l9942 2DB0                                        l9926 2D5A  
                                      STR_1 F199                                        l9872 A688  
                                      l9768 9880                                        l9856 9D78  
                                      l9848 9D16                                        l9864 A310  
                                      l9944 2DF4                                        l9928 2D62  
                                      STR_2 FB7B                                        STR_3 FE23  
                                      l9890 AB32                                        l9698 7E74  
                                      l9962 2E8E                                        l9954 2E3A  
                                      l9938 2D9C                                        STR_4 FE42  
                                      STR_5 FBD8                                        l9876 A6A8  
                                      l9884 AEB2                                        l9972 2EDE  
                                      l9964 2EAC                                        l9956 2E54  
                                      l9948 2E1A                                        STR_6 FFE1  
                                      STR_7 FFED                                        l9894 AB4C  
                                      STR_8 FFFC                                        STR_9 FB1B  
                                      l9992 2F9C                                        l9968 2EC6  
                                      l9976 2EE6                                        l9978 2F40  
                                      l9898 2C54                        ??_SyncGlobalToEEPROM 00D9  
                                      _CRLN EF5E                                        _LATA 000F89  
                                      _LATB 000F8A                                        _LATC 000F8B  
                                      u9061 82CA                                        u9401 7C98  
                                      u9081 8304                                        u9421 7CD2  
                                      u9611 86E4                                        u9630 872E  
                                      u8851 7246                                        u9635 8724  
                                      u8861 7264                                        u9830 2DEA  
                                      u9920 2FE2                                        u9925 2FD6  
                                      u9837 2DE0                                        u9870 2E7E  
                                      _TMR2 000FCC                                        u9877 2E74  
                                      _WPUB 000F7C                              ?i2_ResetTimer0 0001  
                                      _Sent 00FF                  WriteEEPROM_1Byte@GIEstatus 0063  
                                _ClearUSART AE30                   SetMemoryChar@AddressFirst 006A  
                                      _main 5022                                ___ftpack@arg 0060  
                              ___ftpack@exp 0063                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr0l 000FE9                                        fsr2h 000FDA  
                                      indf1 000FE7                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                _RFsendCode 028A                                  _RFsendFlag 0047  
                                      pclat 000FFA                            _UARTstring_CONST AB30  
                               _RFcodePlace 0046                                        prodh 000FF4  
                       main@BluetoothString 0364                                        prodl 000FF3  
                                      start 01CC                               __CFG_IESO$OFF 000000  
                          Reverse_Byte@This 0063                    __end_ofi1_UARTchar_CONST AD5C  
                              _sprintf$4116 00C2                            Reverse_Byte@temp 0062  
                             __CFG_MCLRE$ON 000000                                ___ftmul@cntr 0087  
                            UARTstring@data 0061                                 ?i1_UARTchar 0001  
                              ___param_bank 000010                                ___ftmul@sign 0088  
                           __end_of_InitADC ADB8                             __end_of_InitApp A8F6  
                        i2_cleanBuffer16bit A938       __end_of_StringContainsCaseInsensitive 7C82  
    __size_of_StringContainsCaseInsensitive 01AE               _StringContainsCaseInsensitive 7AD4  
                   __size_of_ReadPushButton 000E                       ??_BluetoothConfigured 0060  
                              ___fttol@exp1 00AD                        GetNumberUnsigned@Hex 0078  
                             ??_Init_System 00E6                                ___fttol@lval 00A9  
                      _Conf2_ChannelH_1_OFF EE67                           IRrawToNEC@NECtemp 001E  
                      _Conf2_ChannelH_2_OFF EE87                        _Conf2_ChannelH_3_OFF EEA7  
                      _Conf2_ChannelH_1_STR EDF4                        _Conf2_ChannelH_2_STR EE05  
                      _Conf2_ChannelH_3_STR EE16                                       l10100 3466  
                                     l10020 30F0                                       l10102 346E  
                                     l10110 350A                                       l10022 3106  
                                     l10120 354A                                       l10112 351A  
                                     l10032 319C                                       l10024 3138  
                                     l10016 30C0                                       l10008 3050  
                                     l10202 386C                                       l10050 32C4  
                                     l10042 321A                                       l10026 314E  
                                     l11002 9594                                       l10220 3904  
                                     l10212 38B4                                       l10132 35A0  
                                     l10124 356E                                       l10060 3318  
                                     l10052 32CA                                       l10044 3248  
                                     l10036 31CA                                       l11004 959A  
                                     l11020 95FE                                       l10310 89E0  
                                     l10302 8990                                       l10206 38AC  
                                     l10214 38CE                                       l10118 3536  
                                     l10038 31D6                                       l10046 325C  
                                     l11030 996E                                       l10224 393C  
                                     l10136 35F2                                       l10080 33D4  
                                     l10072 339A                                       l10064 331E  
                                     l10056 32D8                                       l11016 95F8  
                                     l11008 95A4                                       l11040 9988  
                                     l11024 995E                                       l10322 8A5A  
                                     l10306 89D8                                       l10250 39EE  
                                     l10234 3982                                       l10242 39B8  
                                     l10226 3948                                       l10154 3714  
                                     l10146 36E8                                       l11114 48CE  
                                     l11034 9978                                       l12010 668E  
                                     l12002 6654                                       l10420 A298  
                                     l10332 8A72                                       l10260 3AC0  
                                     l10244 39C4                                       l10236 398E  
                                     l10164 3766                                       l10148 36F8  
                                     l10068 3370                                       l10156 3724  
                                     l11204 4B90                                       l11132 4920  
                                     l11036 997E                                       l11052 99E8  
                                     l11028 9968                                       l12100 693A  
                                     l10326 8A5E                                       l10182 37FC  
                                     l10086 33F0                                       l10094 3426  
                                     l11230 4C5E                                       l11142 4966  
                                     l10510 AB2A                                       l10502 AB14  
                                     l12110 694C                                       l12022 66BE  
                                     l12006 6674                                       l10416 A28A  
                                     l10336 8A8C                                       l10272 3B70  
                                     l10256 3A22                                       l10192 3850  
                                     l10184 3802                                       l10168 378E  
                                     l10096 343A                                       l10088 340A  
                                     l11320 4E66                                       l11232 4C66  
                                     l11144 496E                                       l11136 492A  
                                     l11048 99E2                                       l11056 99EE  
                                     l12040 66FA                                       l12032 66E4  
                                     l12016 66A0                                       l11072 A250  
                                     l11064 A202                                       l13000 10BA  
                                     l10338 8A94                                       l10258 3A36  
                                     l10266 3B42                                       l10178 37D0  
                                     l10274 3B8A                                       l11170 4A32  
                                     l11162 4A18                                       l10354 A9EC  
                                     l10506 AB26                                       l12050 671C  
                                     l12026 66DE                                       l12210 8E58  
                                     l12202 8E44                                       l10522 AD20  
                                     l10428 A2B2                                       l10436 A2D8  
                                     l10268 3B5C                                       l10196 3858  
                                     l10188 3810                                       l10276 3BAE  
                                     l10540 7B46                                       l10532 7AF6  
                                     l11172 4A3A                                       l11156 4A06  
                                     l11148 49A0                                       l11500 794E  
                                     l11404 A406                                       l12108 6944  
                                     l12052 6724                                       l11084 AE2A  
                                     l12140 7742                                       l12132 7722  
                                     l13012 112A                                       l13004 10F8  
                                     l11094 AE4E                                       l10198 385E  
                                     l11342 4EF4                                       l11254 4CE6  
                                     l11158 4A0C                                       l11166 4A1E  
                                     l10382 9366                                       l10702 8BC0  
                                     l10470 91AE                                       l10462 9198  
                                     l11510 79E0                                       l12310 9CDC  
                                     l12302 9C76                                       l12118 698E  
                                     l12070 67FE                                       l12046 670E  
                                     l12222 8E94                                       l12150 77B8  
                                     l13022 1176                                       l10720 84C2  
                                     l10536 7B3E                                       l10528 7AEC  
                                     l10464 919E                                       l10448 AEA4  
                                     l11520 79FA                                       l11512 79E4  
                                     l11504 7958                                       l11408 A42E  
                                     l12080 682A                                       l12216 8E82  
                                     l11424 85F0                                       l12400 719A  
                                     l12152 77DC                                       l12136 7736  
                                     l12128 7716                                       l13120 150E  
                                     l13112 14D8                                       l13104 149A  
                                     l13040 121E                                       l13024 1182  
                                     l10298 8986                                       l10562 7C04  
                                     l11370 4FF2                                       l10482 9226  
                                     l10474 91B8                                       l10458 918E  
                                     l11602 903C                                       l11610 9048  
                                     l11522 7A00                                       l12058 674C  
                                     l12242 8EDC                                       l12250 8F02  
                                     l11418 85B6                                       l12162 780A  
                                     l12146 777E                                       l12154 77E2  
                                     l13202 16EA                                       l13018 116C  
                                     l12322 AE6C                                       l10708 8428  
                                     l10572 7C4C                                       l10652 AC74  
                                     l11380 501C                                       l11348 4F60  
                                     l11276 4D66                                       l10468 91A8  
                                     l11532 7A1A                                       l12084 6848  
                                     l12076 680C                                       l12236 8EC8  
                                     l12228 8EB2                                       l11444 8652  
                                     l12420 9FB4                                       l12412 71F8  
                                     l12164 7812                                       l12156 77FE  
                                     l10820 A912                                       l13220 1752  
                                     l13212 1730                                       l13132 1576  
                                     l13124 1530                                       l13116 14FA  
                                     l13044 1252                                       l13036 1218  
                                     l13028 118C                                       l12340 A7B8  
                                     l14100 5158                                       l10718 843C  
                                     l10558 7C00                                       l10574 7C54  
                                     l10494 925E                                       l10486 922C  
                                     l10830 9F2C                                       l10910 A3B0  
                                     l10902 A398                                       l10806 9E6C  
                                     l11606 9042                                       l11542 7AB6  
                                     l11526 7A0A                                       l11454 86A6  
                                     l12430 9FD4                                       l12406 71CE  
                                     l12174 786A                                       l12262 8CFC  
                                     l12502 A1CE                                       l13302 1A74  
                                     l13062 1340                                       l13054 12F6  
                                     l14102 515C                                       l11552 AE06  
                                     l10568 7C32                                       l10656 AC8A  
                                     l10680 8B22                                       l10672 8B0C  
                                     l10808 9E7E                                       l11544 7ABA  
                                     l11528 7A10                                       l12088 6866  
                                     l12256 8F2A                                       l12432 9FDC  
                                     l12416 9F8A                                       l11392 A9A0  
                                     l12360 7022                                       l12184 78D4  
                                     l12168 7844                                       l12272 8D60  
                                     l11480 AA0A                                       l10816 A8F8  
                                     l13304 1AB2                                       l13224 176A  
                                     l13072 13CE                                       l13048 1264  
                                     l13056 12FC                                       l13064 13BE  
                                     l12344 A7C4                                       l12336 A7AC  
                                     l14104 5162                                       l10746 855A  
                                     l11298 4DE6                                       l10682 8B28  
                                     l10666 8AE0                                       l10922 A3D4  
                                     l10914 A3BA                                       l10906 A3A2  
                                     l11562 8F5E                                       l11538 7AB0  
                                     l12098 68E6                                       l11714 AA7C  
                                     l11466 A096                                       l12426 9FC8  
                                     l12434 9FE2                                       l12370 7080  
                                     l12354 6FB6                                       l12178 7876  
                                     l12282 8DC4                                       l12274 8D68  
                                     l13410 1DA0                                       l13402 1D7A  
                                     l13314 1AE4                                       l13162 163C  
                                     l13170 165C                                       l13146 15D0  
                                     l13138 1598                                       l13058 130C  
                                     l10676 8B18                                       l11580 8FC2  
                                     l11564 8F64                                       l12620 811C  
                                     l12612 80C2                                       l11804 6134  
                                     l11812 615E                                       l10852 AAC6  
                                     l11708 AA64                                       l11716 AA84  
                                     l11468 A0AA                                       l10764 939E  
                                     l12380 70DE                                       l12356 6FDA  
                                     l12188 78DA                                       l11732 A4AA  
                                     l11724 A46E                                       l12292 8E00  
                                     l12268 8D2E                                       l11476 A9F4  
                                     l13420 1DC0                                       l13332 1B34  
                                     l13252 1816                                       l13244 17CE  
                                     l13180 1686                                       l13156 1626  
                                     l13076 13D8                                       l13068 13C4  
                                     l14204 5444                                       l14140 526C  
                                     l14124 51B4                                       l14108 516C  
                                     l10694 8B9A                                       l10686 8B32  
                                     l10838 9F7C                                       l10862 A5F2  
                                     l10918 A3C4                                       l11590 8FDC  
                                     l11574 8FB6                                       l11558 8F54  
                                     l12470 9738                                       l12462 96F0  
                                     l11902 6382                                       l11822 618E  
                                     l12198 8E22                                       l10950 9DE0  
                                     l10942 9DC4                                       l12438 9FEC  
                                     l10782 941E                                       l12390 713C  
                                     l12366 7056                                       l12358 6FFE  
                                     l11734 A4B8                                       l11750 A0C0  
                                     l12278 8D74                                       l13502 1FAA  
                                     l13422 1DE2                                       l13326 1B24  
                                     l13166 164A                                       l13238 17B6  
                                     l13086 140E                                       l12710 76CC  
                                     l14150 52AC                                       l14134 5206  
                                     l14118 51A4                                       l11592 8FE2  
                                     l11584 8FCC                                       l11568 8F6E  
                                     l12472 974A                                       l12464 9702  
                                     l12480 9780                                       l11920 63EA  
                                     l11912 63AE                                       l11840 61F4  
                                     l11816 616A                                       l10848 AAC2  
                                     l10792 9450                                       l10776 93D4  
                                     l10768 93B2                                       l12376 70B4  
                                     l11744 A4DE                                       l11728 A4A6  
                                     l12288 8DE2                                       l13432 1E08  
                                     l13344 1BFA                                       l13328 1B2A  
                                     l13264 18AC                                       l13256 1820  
                                     l13176 1674                                       l13096 145E  
                                     l12800 04EA                                       l14224 54E0  
                                     l14144 5298                                       l14080 5106  
                                     l11690 A54A                                       l10858 A5CE  
                                     l11586 8FD2                                       l11578 8FBC  
                                     l11498 7948                                       l12474 975C  
                                     l12466 9714                                       l11930 646A  
                                     l11850 6220                                       l10946 9DCE  
                                     l10794 9456                                       l10778 93DC  
                                     l12386 7112                                       l11762 A114  
                                     l13346 1C28                                       l13338 1BB6  
                                     l13274 18CE                                       l13098 1466  
                                     l13370 1CBC                                       l12706 76BC  
                                     l12714 76D2                                       l12650 7532  
                                     l14162 5302                                       l14146 52A0  
                                     l11596 8FEC                                       l12476 976E  
                                     l12468 9726                                       l11932 64BE  
                                     l11916 63CC                                       l11940 64C8  
                                     l11908 6390                                       l11860 6256  
                                     l11844 620E                                       l11836 61D4  
                                     l11828 61C0                                       l12396 7170  
                                     l13356 1C5A                                       l13284 1972  
                                     l13268 18B2                                       l12900 0A0A  
                                     l12820 0634                                       l12812 05B0  
                                     l12804 052C                                       l12724 76EC  
                                     l12660 756A                                       l12636 74D2  
                                     l14252 5540                                       l14156 52C2  
                                     l14084 5114                                       l14076 50D6  
                                     l11950 6512                                       l11942 64D0  
                                     l11870 6272                                       l11766 A118  
                                     l11790 A89A                                       l13542 2110  
                                     l13454 1E80                                       l13294 19A4  
                                     l13278 18E0                                       l13286 1978  
                                     l13366 1C9A                                       l12662 7570  
                                     l12646 7528                                       l12718 76DA  
                                     l14238 552A                                       l14190 53FE  
                                     l11872 627A                                       l11768 A126  
                                     l12488 A180                                       l11784 A870  
                                     l11792 A8A2                                       l13632 2300  
                                     l13464 1EC6                                       l13392 1D34  
                                     l13288 1988                                       l12912 0B0C  
                                     l12824 0676                                       l12816 05F2  
                                     l12808 056E                                       l12832 06DC  
                                     l14272 55B8                                       l14256 556A  
                                     l14088 511E                                       l10898 A38C  
                                     l11954 6530                                       l11890 62D0  
                                     l11882 62A0                                       l11866 625C  
                                     l11970 65B4                                       l11962 657A  
                                     l11778 A14C                                       l13802 28CE  
                                     l13810 2C10                                       l13722 2660  
                                     l13626 22E0                                       l13618 22B2  
                                     l13538 20EC                                       l13554 2154  
                                     l12906 0A1C                                       l12762 02EC  
                                     l12682 75F0                                       l12666 757A  
                                     l11884 62A8                                       l11796 60FA  
                                     l13732 269E                                       l13660 23CA  
                                     l13548 2132                                       l12828 06B8  
                                     l12772 038E                                       l12780 03F4  
                                     l12748 02AC                                       l12692 7610  
                                     l12676 75B2                                       l14196 5430  
                                     l10998 958A                                       l11878 628E  
                                     l11982 65EA                                       l13742 26C0  
                                     l13662 23EC                                       l13670 2430  
                                     l12950 0DF4                                       l12838 06EE  
                                     l12694 7616                                       l12686 7600  
                                     l14294 5626                                       l13752 26D6  
                                     l13728 2694                                       l13680 24AC  
                                     l13656 23C2                                       l13664 240E  
                                     l13496 1F7A                                       l13488 1F4C  
                                     l12944 0DD0                                       l12880 08D2  
                                     l12792 0466                                       l12776 03D0  
                                     l12768 034C                                       l12688 7606  
                                     l14296 562A                                       l11994 6640  
                                     l11978 65DE                                       l13746 26CA  
                                     l13738 26AA                                       l13578 21DC  
                                     l12954 0E02                                       l12786 0406  
                                     l12698 7620                                       l11988 660E  
                                     l13772 27F4                                       l13596 2248  
                                     l13588 2222                                       l12980 0F92  
                                     l12876 08B0                                       l12796 04A8  
                                     l12990 0FD4                                       l13792 286E  
                                     l13776 27FE                                       l12896 09E8  
                                     l13786 285E                                       l12994 1008  
                                     l13788 2864                               ??_ReadVoltage 008C  
                                     ?_main 0001                             __end_of___awdiv 96EA  
                                     _EEADR 000FA9                             __end_of___ftadd 74AE  
                                     STR_10 FFF5                                       STR_11 FF8C  
                                     STR_12 FFF5                                       STR_20 FFCD  
                                     STR_21 FFF1                                       STR_13 FF62  
                                     STR_22 FF9A                                       STR_14 FCB0  
                                     STR_30 F910                                       STR_23 FFB5  
                                     STR_15 FF59                                       STR_31 FC5C  
                                     STR_24 FFBB                                       STR_16 FFAF  
                                     STR_32 FC47                                       STR_40 F9CA  
                                     STR_17 FFF9                                       STR_41 FF93  
                                     STR_33 FB93                                       STR_25 FA06  
                                     STR_50 FD24                                       STR_26 FFC1  
                                     STR_42 FCC4                                       STR_18 FA5D  
                                     STR_34 F8D1                                       STR_43 FF3A  
                                     STR_19 FEE2                                       STR_35 FCEC  
                                     STR_51 FC71                                       STR_27 FA23  
                                     STR_36 FC60                                       STR_28 FFE9  
                                     STR_60 FD14                                       STR_44 FC05  
                                     STR_52 F4ED                             __end_of___awmod 9C4C  
                                     STR_37 F508                                       STR_61 FF6B  
                                     STR_45 FF6B                                       STR_29 F8F1  
                                     STR_53 F2F1                                       STR_62 FE51  
                                     STR_46 FD9A                                       STR_38 F7EF  
                                     STR_70 F66A                                       STR_54 F34F  
                                     STR_55 F4ED                                       STR_39 FFE7  
                                     STR_71 F66A                                       STR_47 FF3C  
                                     STR_63 FDAC                                       STR_64 FFA8  
                                     STR_48 FDF2                                       STR_56 F6B4  
                                     STR_72 F68F                                       STR_80 EFA1  
                                     STR_65 FF74                                       STR_49 FED5  
                                     STR_73 F98C                                       STR_57 F720  
                                     STR_81 F094                                       STR_58 FF93  
                                     STR_66 FFA8                                       STR_90 FF45  
                                     STR_74 F9AB                                       STR_82 F0CA  
                                     STR_75 FE5F                                       STR_59 FE03  
                                     STR_67 F6FD                                       STR_83 F571  
                                     STR_91 F01F                                       STR_68 F789  
                                     STR_84 F59D                                       STR_92 F4BF  
                                     STR_76 F135                                       STR_93 FFD7  
                                     STR_85 FFC7                                       STR_69 F5C9  
                                     STR_77 F167                                       STR_94 FB4B  
                                     STR_86 F8B1                                       STR_78 F320  
                                     STR_95 F4BF                                       STR_87 F9E9  
                                     STR_79 F491                                       STR_88 FDBE  
                                     STR_96 F545                                       STR_89 F9E9  
                                     STR_97 FAB1                                       STR_98 FDBE  
                                     STR_99 F519                             __end_of___ftdiv 86CE  
                       ?i2_cleanBuffer16bit 0017                             __end_of___ftneg AB92  
                                     _ANSEL 000F7E                             __end_of___lldiv 9AE2  
                                     u10140 3560                                       u11100 42DC  
                                     u11005 3E70                                       u11110 4348  
                                     u11015 3ECA                                       u11200 4714  
                                     u11120 43B4                                       u11105 42D0  
                                     u11025 3F24                                       u11210 4780  
                                     u11130 4420                                       u11115 433C  
                                     u11035 3F7E                                       u10500 8A44  
                                     u11220 4804                                       u11140 448C  
                           __end_of___ftmul 8420                                       u11205 4708  
                                     u11125 43A8                                       u11045 3FD8  
                                     u11150 44F8                                       u11215 4774  
                                     u11135 4414                                       u11055 4032  
                                     u11160 4564                                       u11080 4204  
                                     u11225 47F8                                       u11145 4480  
                                     u11065 408C                                       u10450 89CC  
                                     u11170 45D0                                       u11090 4270  
                                     u10507 8A3A                                       u11155 44EC  
                                     u11075 40E6                                       u11180 463C  
                           ___awdiv@divisor 0068                                       u11501 9EF2  
                                     u11165 4558                                       u11085 41F8  
                                     u11190 46A8                                       u12231 8592  
                                     u11175 45C4                                       u11095 4264  
                                     u10480 8A10                                       u10800 7B32  
                                     u10560 92AA                                       u10457 89C2  
                           __end_of___llmod 9D9E                                       u11521 9F36  
                                     u11185 4630                                       u12170 4F58  
                           __end_of___ftsub A826                                       u12251 85CC  
                                     u11195 469C                             __end_of___fttol 8820  
                                     u10565 929E                                       u10910 7C76  
                                     u10830 7B68                                       u12510 90D2  
                                     u10487 8A06                                       u10807 7B28  
                                     u10840 7B8E                                       u14041 80F8  
                                     u12515 90C6                         __end_of_FirmVersion EF4D  
                                     u10860 7BEA                                       u10917 7C6C  
                                     u10837 7B5E                     ReadEEPROM_1Byte@address 0060  
                                     u10847 7B84                                       u10935 3BFA  
                                     u10945 3C54                                       u10890 7C26  
                                     u10867 7BE0                                       u11595 9B16  
                                     u10955 3CAE                                       u13700 8D1E  
                                     u10965 3D08                                       u13710 8D50  
                                     u14430 0742                                       u10975 3D62  
                                     u10897 7C1C                                       u10985 3DBC  
                                     u14521 0B7A                                       u14450 079E  
                                     u13395 686A                                       u10995 3E16  
                                     u13707 8D14                                       u13717 8D46  
                                     u14550 0C7E                                       u15370 2010  
                                     u13780 9CBC                                       u15381 202A  
                                     u13785 9CB0                                       u12995 63EE  
                                     i1l800 ADD8                                       i1l807 AD50  
                                     i1l828 ADC4                         __end_of_EraseScreen ACC2  
                           ___awdiv@counter 006A                                       _RCREG 000FAE  
                                     _RCSTA 000FAB                                       _TMR0H 000FD7  
                                     _TMR1H 000FCF                                       _TMR0L 000FD6  
                                     _TMR3H 000FB3                                       _TMR1L 000FCE  
                                     _TMR3L 000FB2                                       _SPBRG 000FAF  
                                _BufferCopy A26C                                       _PORTA 000F80  
                                     _PORTB 000F81                                       _PORTC 000F82  
                                     _RF_IR 004E                                InitUART@Baud 00B5  
                                     _IRbit 003F                                       _IRmod 00FB  
                                     _TXREG 000FAD                                       _TXSTA 000FAC  
                       _ConfigureOscillator AF2A                             __end_of_delayUS A782  
                             __CFG_PWRT$OFF 000000                            _InternalADC_Read 9D9E  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                         ___lmul@multiplicand 0064  
                             __CFG_WRT3$OFF 000000                           _NewReceivedString 03EA  
                              ___lltoft@exp 0070                    DisplayRF_Channel@channel 0064  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            ?_InitBluetooth 0001                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                                SendRF@Code 0060                                InitUART@temp 00C3  
                              _IRrawCodeNum 0041                                       _Round A55A  
                             __CFG_WRTB$OFF 000000                       _BluetoothInitialSetup 483C  
                  __end_of_Local_CloseUSART AE80                               __CFG_WRTC$OFF 000000  
                     __end_of_BlueConnected AEB8                   GetNumberUnsigned@tempThis 007E  
                             __CFG_WRTD$OFF 000000                            ?_lowercaseString 0060  
                          __end_of_UARTchar AD42                              __CFG_EBTRB$OFF 000000  
                           __end_of_dpowers ECA7                                       _scale 5BC4  
                                SendRF@size 0063                             __end_of_isdigit ABF0  
                               SetEEPROM1@i 00C0                                 SetEEPROM1@j 00C1  
                               SetEEPROM2@i 00D6                                 SetEEPROM2@j 00D7  
                               SetEEPROM2@k 00D8                               ___ftpack@sign 0064  
                                     main@i 03E3                             __end_of_low_isr 01CC  
                                     tablat 000FF5                            _RF_IR_Postscaler 004F  
                                     plusw0 000FEB                                       plusw2 000FDB  
                               ?_UARTstring 0061                     InternalADC_Read@channel 006E  
                                     status 000FD8                        ??i2_cleanBuffer16bit 001B  
                           __end_of_sprintf 3BBE                              __CFG_HFOFST$ON 000000  
               WriteEEPROM_1Byte@PEIEstatus 0064                        __size_of_cleanBuffer 005A  
                       __size_of_LEDTimerON 0012                       __end_of_GetMemoryChar AC72  
                      ?_ConfigureOscillator 0001                       __end_of_GetMemoryLong 82B4  
                             ??_SendRF_wait 006D                          StringContains@That 0062  
                        StringContains@This 0060                                __end_of_CRLN EF61  
                             high_isr@IRpin 0037                             __initialization 9886  
                        StringAddEqual@temp 0100                       __end_of_EEPROM_UNLOCK ADA2  
                                _SetEEPROM1 8AA8                                  _SetEEPROM2 9164  
                          __end_of_IsLetter AB30                                  _InitTimer0 AE54  
                                _InitTimer1 AE8E                          _Conf1_ChannelD_STR EEC7  
                                _InitTimer2 AE80                                  _InitTimer3 AEEC  
                             high_isr@Time0 0038                          _Conf1_ChannelE_STR EED6  
                        _Conf1_ChannelF_STR EEE5            __end_of_Conf2_ChannelH_1_OFF_STR ED44  
                                _InitTimers ADE4                                _IRrepeatflag 0043  
                        __size_of_DecodeNEC 00AE                                __end_of_main 5634  
                          __end_of_IsNumber AD26                       __end_of_Reverse_4Byte 483C  
                          ??_UARTstringCRLN 0066                            __end_of_InitUART 9164  
          __end_of_Conf2_ChannelH_2_OFF_STR ED59                      WaitForIRsignal@timeout 0069  
              __size_of_GetStringAfterComma 011E                              GetNumber@count 0078  
          __end_of_Conf2_ChannelH_3_OFF_STR ED6E                                 _IsCharacter AD74  
                                    ??_main 00F5                       GetNumberUnsigned@This 006C  
                             ___fttol@sign1 00A8                            __end_of_ResetADC AEC6  
                         GetNumber@negative 0077                               __activetblptr 000003  
                     GetNumberUnsigned@temp 007A                          SendRF@RepeatAmount 0064  
                               ?_IRrawToNEC 0017                          __size_of_GetNumber 0486  
                           _WaitForIRsignal A152                        __size_of__tdiv_to_l_ 01A6  
                        __size_of_EncodeNEC 014E                         __end_of_Init_System 8144  
                         SetEEPROMdefault@i 00DD                           SetEEPROMdefault@j 00DE  
                         SetEEPROMdefault@k 00DC                       _Conf2_ChannelB_ON_STR EDD0  
                BluetoothInitialSetup@first 01B6                               ?_SendNEC_wait 0075  
                               ?_GetEEPROM1 0085                                 ?_GetEEPROM2 0085  
                     _Conf2_ChannelD_ON_STR EDE2                      __size_of_SendNEC_bytes 008A  
                                    ?_Round 00AE                         __end_of_ReadVoltage A0BE  
                         GetNumber@tempThis 007B                                  UseIRCode@i 00E5  
                                UseIRCode@j 00E4                              _StringAddEqual 7706  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                         __size_ofi1_UARTchar 0016  
                          __end_of___altoft 9EE2                            ___llmod@dividend 006D  
                                    ?_scale 0089                                      STR_100 F7CD  
                                    STR_101 FB33                                      STR_110 F05B  
                                    STR_102 FC1B                                      STR_111 FF7D  
                                    STR_103 F644                                      STR_120 FD87  
                                    STR_112 FD00                                      STR_104 F05B  
                                    STR_113 F781                                      STR_121 FFE5  
                                    STR_105 F743                                      STR_130 FF45  
                                    STR_106 F05B                                      STR_122 FAF5  
                                    STR_114 FC9B                                      _ADRESH 000FC4  
                                    STR_123 FDE1                                      STR_131 FC31  
                                    STR_115 FA40                                      STR_107 F100  
                                    STR_124 FFE5                                      STR_132 FC1B  
                                    STR_140 FD74                                      STR_116 FBAA  
                                    STR_108 F5F3                                      _EEADRH 000FAA  
                                    STR_125 FF4F                                      STR_117 FE13  
                                    STR_141 FB63                                      STR_133 F810  
                                    STR_109 EF61                                      STR_126 FFC7  
                                    STR_142 FF2F                                      STR_150 FEED  
                                    STR_134 FC86                                      STR_118 FACC  
                                    _ADRESL 000FC3                                      STR_135 FF7D  
                                    STR_119 FFDC                                      STR_127 F891  
                                    STR_151 F1CB                                      STR_143 EFE0  
                                    STR_128 F781                                      STR_152 FF03  
                                    STR_144 FEF8                                      STR_160 FEBB  
                                    STR_136 FA79                                      STR_137 FE7A  
                                    STR_129 F766                                      STR_161 F435  
                                    STR_153 F22D                                      STR_145 F1FC  
                                    STR_154 FF24                                      STR_146 FF0E  
                                    STR_162 FE87                                      STR_170 FE6D  
                                    STR_138 FE33                                      STR_171 FFA1  
                                    STR_139 FB02                                      STR_163 F37D  
                                    STR_155 F2C0                                      STR_147 F25E  
                                    STR_148 FF19                                      STR_164 FEA1  
                                    STR_156 FE94                                      STR_180 F92F  
                                    STR_172 F7AB                                      STR_173 FD28  
                                    STR_181 F831                                      STR_165 F3D9  
                                    STR_157 F3AB                                      STR_149 F28F  
                                    _EEDATA 000FA8                                      STR_166 FEC8  
                                    STR_158 FEAE                                      STR_190 FDD0  
                                    STR_174 FD3B                                      STR_182 F94E  
                                    STR_175 FD4E                                      STR_183 F851  
                                    STR_167 F463                                      STR_159 F407  
                                    STR_168 FFD2                                      STR_176 FBEF  
                                    STR_184 F96D                                      STR_177 FBC1  
                                    STR_185 F871                                      STR_169 F61C  
                                    STR_178 FD61                                      STR_186 FAE7  
                                    STR_179 FCD8                                      STR_187 FA95  
                                    STR_188 F6D9                                      STR_189 FF85  
                                    _EECON2 000FA7                            ___awdiv@dividend 0066  
                           ??i2_ResetTimer0 0017                            __end_of___ftpack 8CF4  
                                    _ANSELH 000F7F                       _Conf2_ChannelB_Status 00F5  
                             ??_ResetTimer0 0060                               ??_ResetTimer1 0060  
                             ??_ResetTimer3 0017                            __end_of___lltoft A376  
                                    i1l1550 0184                                      i1l1551 0180  
                                    i1l1535 0164                                      i1l1544 0130  
                                    i2l1410 5742                                      i2l1420 5B88  
                                    i2l1421 57BC                                      i2l1422 5782  
                                    i2l1408 5758                                      i2l1425 5B62  
                                    i2l1409 574C                                      i2l1418 5746  
                                    i2l1462 58F4                                      i2l1438 5850  
                                    i2l1528 5B84                                      i2l1481 5980  
                                    i2l1482 5976                              __CFG_WDTEN$OFF 000000  
                                    i2l1488 59A8                    StringContains@MatchCount 0067  
                                    _TABLAT 000FF5                            __end_of___lwtoft AC1C  
                        __size_of_ReadUSART 0018                       _Conf2_ChannelD_Status 00F6  
                             SetTimer0@temp 0017                                      _IR_NEC 03EC  
                        __size_of_ReadIRpin 000E                                      _SPBRGH 000FB0  
                               ?_ClearUSART 0001                              SetMemoryLong@H 0092  
                            SetMemoryLong@L 0095                                   ??_InitADC 0060  
                                 ??_InitApp 0060                       ??_ConfigureOscillator 0060  
                                    _InitIR A826                                      _SendRF 936C  
                            __CFG_XINST$OFF 000000                             _UARTcommandMenu 8CF4  
                  GetStringAfterComma@count 0067                            __end_of__powers_ ECF5  
                             InitUART@spbrg 00C0                            __end_of_high_isr 5BC4  
                           _ReadCodeButtons A782                          __size_of_OpenUSART 007C  
                            _StringContains 896E                                      ___ftge 97B8  
                                    ___lmul A3F2                    SendNEC_wait@RepeatAmount 0079  
                                    ___wmul AA2A                  __end_of_SyncEEPROMToGlobal 7AD4  
                                 ??___awdiv 006A                                 _FirmVersion EF44  
                                 ??___ftadd 0099                              __CFG_STVREN$ON 000000  
                                 ??___awmod 0064                                   ??___ftdiv 0071  
               ?_StringMatchCaseInsensitive 0063                                   ??___ftneg 0063  
                                 ??___lldiv 0068                                   ??___ftmul 0080  
                               _EraseScreen AC9A                                   ??___llmod 0075  
                                 ??___ftsub 00A5                                   ??___fttol 00A3  
                         cleanBuffer16bit@i 0067                          __size_of_SetTimer0 000A  
                        __size_of_ResetBlue 00E2                         __end_of_SendRF_wait A9B8  
                              ?i1_ReadUSART 0001                                      _fround 6CD8  
                         ?_SetEEPROMdefault 0001                                      clear_0 988C  
                                    clear_1 9898                                      clear_2 98A4  
                                    clear_3 98B0                                      clear_4 98BC  
                                    clear_5 98C8                                      clear_6 98D4  
                          ___awdiv@quotient 006C                                   ??_delayUS 0064  
                           ___awmod@divisor 0062                          __size_of_UseIRCode 0258  
                           ___awmod@counter 0064                          ??_SetEEPROMdefault 00DA  
                     ___ftmul@f3_as_product 0084                         __size_of_UARTstring 0028  
                           ??_InitBluetooth 00E1                              _IsAlphaNumeric AA98  
                               ?_BufferCopy 0068                           ?_cleanBuffer16bit 0060  
                              __pdataCOMRAM 004C                                   ??_isdigit 0060  
                            ??_SendNEC_wait 007A                      ?_BluetoothInitialSetup 0001  
                    __end_of_StringAddEqual 7906                                __mediumconst EC7E  
                            EncodeNEC@temp1 007C                              EncodeNEC@temp2 0080  
                            EncodeNEC@temp3 0084                              EncodeNEC@temp4 0088  
                              ?i2_ReadIRpin 0001                                   ??_low_isr 0005  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                          ??_cleanBuffer16bit 0064  
                        IRrawToNEC@StartBit 0024                            _CommandStringPos 003E  
                     __end_of_lowercaseChar AC48                           __end_of_DecodeNEC 9CFA  
                        i1_UARTstring_CONST AB92                                   ??_sprintf 00BC  
              __end_of_IsAlphaNumericString AA98                             __CFG_FOSC$HSPLL 000000  
              GetNumberUnsigned@CommaNumber 006E                        UARTcommandMenu@place 006E  
                        UseBluetooth@String 00E6                                  __accesstop 0060  
                   __end_of__initialization 994C                                  ___altoft@c 0068  
                                Round@input 00AE                             __CFG_PBADEN$OFF 000000  
                                ___ftadd@f1 0093                                  ___ftadd@f2 0096  
                                ___ftge@ff1 0060                                  ___ftge@ff2 0063  
                       ?i1_UARTstring_CONST 0003                          UseBluetooth@device 0278  
                             ___rparam_used 000001               __size_of_UARTstringCRLN_CONST 0042  
                       StringAddEqual@Input 006F                                  ___ftdiv@f1 006B  
                                ___ftdiv@f2 006E                                  ___ftdiv@f3 0075  
                                ___ftneg@f1 0060                           __end_of_GetNumber 654E  
                    __end_of_StringContains 8AA8                          UseBluetooth@rfconf 0281  
                         __end_of_EncodeNEC 896E                   __size_of_ReadEEPROM_1Byte 0058  
                       __end_of_ResetTimer0 AF00                         __end_of_ResetTimer1 AEEC  
                       __end_of_ResetTimer3 AF1E                         __size_of_IRrawToNEC 032C  
                                ___ftmul@f1 007A                                  ___ftmul@f2 007D  
                             _SendNEC_bytes A1E2                                  ___ftsub@f1 009F  
                                ___ftsub@f2 00A2                                  ___fttol@f1 009F  
                               ?_SetEEPROM1 0096                                 ?_SetEEPROM2 0096  
                            __pcstackCOMRAM 0001                                 ?_InitTimer0 0001  
                               ?_InitTimer1 0001                                 ?_InitTimer2 0001  
                               ?_InitTimer3 0001                                 ?_InitTimers 0001  
                        _Conf2_ChannelB_OFF EE27                          _Conf2_ChannelD_OFF EE47  
                        _Conf2_ChannelB_STR EEF4                         __size_of_GetEEPROM1 00DC  
                             __end_of_Round A5C0                         __size_of_GetEEPROM2 00CA  
                        _Conf2_ChannelD_STR EF03                              _ReadPushButton AE64  
                    i2cleanBuffer16bit@data 0017                                __pidataBANK0 AF2C  
                              __pidataBANK3 AF23                                __pidataBANK5 AACC  
                          main@ConnectedOLD 03E0                   __size_of_EnterCommandMode 015C  
                                ___lltoft@c 0068                                   ?_UARTchar 0001  
                   __end_of_WaitForIRsignal A1E2                               __end_of_scale 60C8  
           __end_of_Conf2_ChannelH_1_ON_STR ED82                                 _Init_System 7FBC  
                       SyncEEPROMToGlobal@i 00E4                         SyncEEPROMToGlobal@j 00E5  
                       SyncEEPROMToGlobal@k 00C5             __end_of_Conf2_ChannelH_2_ON_STR ED96  
           __end_of_Conf2_ChannelH_3_ON_STR EDAA                      __end_of_IsAlphaNumeric AACC  
                  _Conf2_ChannelH_1_OFF_STR ED2F                           __end_of_ReadUSART AD74  
                         __end_of_ReadIRpin AEAA                               ?i1_UARTstring 0002  
                              ??_LEDTimerON 0060                                  ___lwtoft@c 0068  
                         __end_of_Frequency EF5E                   __size_of_CheckReceivingIR 0012  
                      ??i1_UARTstring_CONST 0005                                 _ReadVoltage A020  
                  _Conf2_ChannelH_2_OFF_STR ED44                             ReadVoltage@temp 008F  
                       __size_of_ClearUSART 0012                    __end_of_UARTstring_CONST AB62  
                                __div_to_l_ 7E28                    _Conf2_ChannelH_3_OFF_STR ED59  
                           GetNumber@result 006F                             ?_StringAddEqual 006F  
                                   ??_Round 00B1                               ReadUSART@data 0060  
                         __end_of_OpenUSART A3F2                             __div_to_l_@exp1 006B  
                           __div_to_l_@cntr 006A                                     ??_scale 008C  
                    i1UARTstring_CONST@data 0003                                   ?_IsLetter 0001  
                           __div_to_l_@quot 0066                                sprintf@width 00DB  
                    __size_of_SetMemoryChar 003A                                   ?_IsNumber 0001  
                    GetNumberUnsigned@count 0077                           __end_of_SetTimer0 AF14  
                                __pbssBANK0 00F5                                  __pbssBANK2 028A  
                                __pbssBANK3 03E5                                  __pbssBANK4 0400  
                                __pbssBANK5 0532                                  __pbssBANK6 0600  
                    __size_of_SetMemoryLong 00FA                           _EEPROMinitialized ADF8  
                                 ?_InitUART 00B5                           __end_of_ResetBlue 953E  
                   __end_of_UARTcommandMenu 8E12                      _Conf2_ChannelB_OFF_STR EDAA  
                         __end_of_UseIRCode 7706                          ReadVoltage@voltage 008C  
                   __end_of_ReadCodeButtons A7D6                                 _ReceivingIR 0050  
                        ?_EEPROMinitialized 0001                               ??_StringMatch 0064  
                    _Conf2_ChannelD_OFF_STR EDBD                         __end_of_ProjectName ED2F  
                             __div_to_l_@f1 0060                               __div_to_l_@f2 0063  
                  __size_ofi1_BlueConnected 000E                       WriteEEPROM_1Byte@data 0062  
                                 ?_ResetADC 0001                          __end_of_LEDTimerON AE1E  
                                   ?_InitIR 0001                             ?_StringContains 0060  
                            ?_SendNEC_bytes 0070                      __end_of_ReadPushButton AE72  
                  __end_of_InternalADC_Read 9E40                         __size_of_BufferCopy 008A  
                                   ?_SendRF 0060                                 _SendRF_wait A97A  
                  UARTstringCRLN_CONST@data 0064                           ?i1_UARTchar_CONST 0001  
                              ??i1_UARTchar 0001                     __size_of_UARTchar_CONST 0020  
                                   ?___ftge 0060                         ??_EEPROMinitialized 0060  
                                   ?___lmul 0060                                     ?___wmul 006E  
                        ??i1_UARTchar_CONST 0001                               ?_Reverse_Byte 0001  
                                ??_UARTchar 0060                           _VoltageDividerOFF AF28  
                                 ?___altoft 0068                                     ?_fround 0089  
                            ___lmul@product 0068                              ??i1_UARTstring 0004  
                       GetEEPROM1@Arrayspot 0089                                   ?___ftpack 0060  
                     EnterCommandMode@count 0132                             ?_IsAlphaNumeric 0001  
                     cleanBuffer16bit@count 0062                         SetEEPROM1@Arrayspot 00BB  
                                 ?___lltoft 0068                          __end_of_PCBVersion EF52  
                        ?_VoltageDividerOFF 0001                   SendNEC_bytes@RepeatAmount 0074  
                                 ?___lwtoft 0068                                     i1l14010 ACD8  
                                   i1l14006 ACC4                                     i1l14014 AB94  
                                   i1l14018 ABAC                                     i1l14052 AECE  
                                   i1l13830 ACA8                                     i1l13822 AD86  
                                   i1l13834 ACB2                                     i1l14802 00F2  
                                   i1l14816 013A                                     i1l14826 0160  
                                   i1l14838 017C                                     i1l14790 00B4  
                                   i1l14782 0094                                     i2l14002 A95E  
                                   i2l14042 AEDC                                     i2l14414 5818  
                                   i2l14350 5704                                     i2l14600 599A  
                                   i2l14424 5830                                     i2l14360 5732  
                                   i2l14506 58D0                                     i2l14434 5840  
                                   i2l14426 5834                                     i2l14418 5824  
                                   i2l14362 5738                                     i2l13900 6AF2  
                                   i2l14612 59C6                                     i2l14532 5906  
                                   i2l14516 58E4                                     i2l14460 587C  
                                   i2l14444 585A                                     i2l14702 5AC8  
                                   i2l14606 59B2                                     i2l14454 586E  
                                   i2l14390 57B4                                     i2l14366 5750  
                                   i2l14358 572C                                     i2l13912 6B36  
                                   i2l13904 6B2A                                     i2l14720 5B10  
                                   i2l14704 5ADA                                     i2l14560 5936  
                                   i2l14536 590A                                     i2l14528 58FA  
                                   i2l14624 59D8                                     i2l14554 592A  
                                   i2l14546 591C                                     i2l14538 590E  
                                   i2l14474 58AC                                     i2l14466 5888  
                                   i2l13924 6B82                                     i2l13932 6BA4  
                                   i2l13916 6B3E                                     i2l13908 6B30  
                                   i2l14740 5B44                                     i2l14716 5AF6  
                                   i2l14644 5A10                                     i2l14572 594A  
                                   i2l14628 59E2                                     i2l13950 6C0C  
                                   i2l13862 69D0                                     i2l14742 5B4C  
                                   i2l14734 5B34                                     i2l14670 5A60  
                                   i2l14582 5966                                     i2l14566 5940  
                                   i2l14478 58B2                                     i2l14574 5954  
                                   i2l13944 6C00                                     i2l13872 6A12  
                                   i2l14736 5B3A                                     i2l14672 5A66  
                                   i2l14680 5A78                                     i2l14648 5A20  
                                   i2l14752 5B5E                                     i2l14592 5986  
                                   i2l13954 6C2A                                     i2l13962 6C48  
                                   i2l13946 6C06                                     i2l13874 6A38  
                                   i2l13858 69C8                                     i2l14658 5A42  
                                   i2l14498 58C6                                     i2l13868 6A0E  
                                   i2l14764 5B78                                     i2l14748 5B58  
                                   i2l14684 5A8E                                     i2l13974 6C88  
                                   i2l13878 6A3C                                     i2l14766 5B80  
                                   i2l14678 5A72                                     i2l13984 6CC6  
                                   i2l13968 6C82                                     i2l13992 6CD2  
                                   i2l14696 5AAA                                     i2l14698 5AB8  
                                   i2l13988 6CCC                                     i2l13998 A942  
                          i1UARTstring@data 0002                               UseIRCode@Code 00DA  
                         _ReceivedStringPos 03EB                         GetEEPROM2@Arrayspot 0089  
                                   _TBLPTRH 000FF7                                     _TBLPTRL 000FF6  
                                   _TBLPTRU 000FF8                         SetEEPROM2@Arrayspot 00D5  
                       ??_VoltageDividerOFF 0060                             SetMemoryLong@MH 0093  
                           SetMemoryLong@ML 0094                           ?_Local_CloseUSART 0001  
                 __end_of_EEPROMinitialized AE0C                         __size_of_SetEEPROM1 012C  
                       __size_of_SetEEPROM2 010E                     BluetoothInitialSetup@ok 01B9  
                       __size_of_InitTimer0 0010                         __size_of_InitTimer1 000E  
                       __size_of_InitTimer2 000E                         __size_of_InitTimer3 000A  
                                ??_IsLetter 0060                         __size_of_InitTimers 0014  
                                 ?_high_isr 0001                          __end_ofi1_UARTchar ADE4  
                       _GetStringAfterComma 8E12                                  ??_IsNumber 0060  
                      UARTstring_CONST@data 0062                          ??_Local_CloseUSART 0060  
               __size_of_SyncGlobalToEEPROM 00A0                                  ??_InitUART 00B9  
                               _ResetTimer0 AEF6                                 _ResetTimer1 AEE2  
                               _ResetTimer3 AF14         __size_of_StringMatchCaseInsensitive 0094  
                              ??_UARTstring 0063                                     _Global1 02D2  
                                   _Global2 029E                                     SendRF@i 0067  
                             ?_UseBluetooth 00E6                                     _InitADC ADA2  
                                   _InitApp A8B2                              UseBluetooth@ok 027D  
                               low_isr@data 0016                 __end_of_BluetoothConfigured AE54  
                   UseBluetooth@tempRFArray 027F                                  ??_ResetADC 0060  
                            InitUART@config 00C2                           __end_of__npowers_ ECCE  
                                   __Hparam 0000                                  _scale$4115 008C  
                           ?_ReadPushButton 0001                             __size_of_InitIR 0048  
                                   __Lparam 0000                        __end_of_SendNEC_wait A020  
                   __size_of_SendRF_Channel 0280                             __size_of_SendRF 00F0  
                              SendRF@Config 0062                   __end_of_VoltageDividerOFF AF2A  
                            ??_Reverse_Byte 0060                             __size_of___ftge 00CE  
                                   ___awdiv 961A                             __size_of___lmul 007A  
                                   ___ftadd 7230                                     ___awmod 9B98  
                                   ___ftdiv 857C                                     ___ftneg AB62  
                                   ___lldiv 9A1C                         __end_of_StringMatch A4E4  
                      ?_GetStringAfterComma 0060                             __size_of___wmul 0038  
                                   ___ftmul 82B4                                     ___llmod 9CFA  
                                   ___ftsub A7D6                                     ___fttol 86CE  
                             _SetMemoryChar A9B8                                ?_IsCharacter 0001  
                             _SetMemoryLong 9272                            ?_WaitForIRsignal 0001  
                                ??___altoft 006C                                     __pcinit 9886  
                                   _delayUS A72C                                  ??___ftpack 0065  
                      _IsAlphaNumericString AA62                             __size_of_fround 02D8  
                                   __ramtop 1000                                  ??___lltoft 006C  
                                   __ptext0 5022                                     __ptext1 74AE  
                                   __ptext2 AE64                                     __ptext3 A782  
                                   __ptext4 01D0                                     __ptext5 A86E  
                                   __ptext6 A152                                     __ptext7 A8F6  
                                   __ptext8 A9F2                                     __ptext9 8CF4  
                                ??___lwtoft 006B                                   _T0CONbits 000FD5  
                      __size_ofi1_ReadUSART 0016                           __end_of_hexpowers ED15  
                                 _T1CONbits 000FCD                                 ?__div_to_l_ 0060  
                  IsAlphaNumericString@data 0062                           SetMemoryChar@Data 006C  
                                   _dpowers EC7F                                ??_IRrawToNEC 001C  
                                 _T2CONbits 000FCA                        i1UARTchar_CONST@data 0001  
                        __end_of_UARTstring AC9A                           SetMemoryChar@Test 006B  
                                   _isdigit ABC2                                   _T3CONbits 000FB1  
                      i1UARTchar_CONST@temp 0002                            ___awmod@dividend 0060  
                 GetMemoryLong@AddressFirst 0084                                ??_GetEEPROM1 0087  
                              ??_GetEEPROM2 0087                                     _low_isr 0018  
                              DecodeNEC@Nec 0064                                     main@buf 0300  
                                   _sprintf 2C44                        __size_ofi2_ReadIRpin 000E  
                                ??_high_isr 0025                              __pintcode_body 5634  
                               _ProjectName ED15                        end_of_initialization 994C  
                          SendNEC_wait@code 0075                               ??_cleanBuffer 0064  
                               _ProductName 0500                            ?_UARTcommandMenu 0064  
                           i1ReadUSART@data 0001                                ??_ClearUSART 0061  
                            ??_UseBluetooth 00E9                                     int_func 5634  
        BluetoothInitialSetup@BroadcastTEMP 016F                            ?_ReadCodeButtons 0001  
               __size_ofi2_cleanBuffer16bit 0042                             ??_SendNEC_bytes 0075  
                  __size_of_lowercaseString 0044                                   i2u1581_40 6B5C  
                                 i2u1574_40 6A96                             ___lldiv@divisor 0064  
                     EraseScreen@characters 0002                          __end_of_SYNTAX_ERR EF20  
                          _ReadEEPROM_1Byte A6D4                             ___lldiv@counter 006C  
                        __end_of_IRrawToNEC 6CD8                      main@BluetoothStringPos 03DF  
                         _GetNumberUnsigned 654E                                   _RCSTAbits 000FAB  
                   SyncEEPROMToGlobal@Temp1 00C6                     SyncEEPROMToGlobal@Temp2 0091  
                                   postdec1 000FE5                                     postdec2 000FDD  
                     ??_GetStringAfterComma 0065                            _EnterCommandMode 8420  
                         main@BroadcastTEMP 03C8                                     postinc0 000FEE  
                                   postinc2 000FDE                              ?_SetMemoryChar 006A  
                    __size_of_BlueConnected 000E                                ?_EraseScreen 0001  
                            ?_SetMemoryLong 0085                          __end_of_GetEEPROM1 961A  
                        __end_of_GetEEPROM2 9A1C                           ??i1_BlueConnected 0001  
                            __tdiv_to_l_@f1 0060                              __tdiv_to_l_@f2 0063  
                        ?_GetNumberUnsigned 006C                                   _IRRawCode 0600  
                     ?_IsAlphaNumericString 0062                               ??__tdiv_to_l_ 0066  
                   ??_BluetoothInitialSetup 00E0                           SetMemoryLong@Data 0085  
                          _CheckReceivingIR AE1E                           SetMemoryLong@Test 008E  
                         GetMemoryLong@temp 007C                                ??_BufferCopy 006E  
                       ??_GetNumberUnsigned 0071                          __end_of_ClearUSART AE42  
                                 _IRaddress 00FD                      __size_of_GetMemoryChar 002A  
                                 _TRISAbits 000F92                                   _TRISBbits 000F93  
                        _SyncEEPROMToGlobal 7906                                   _TRISCbits 000F94  
                            BufferCopy@from 0068                                  main@IRtask 03DD  
                    __size_of_GetMemoryLong 0170                                   _IRcodeBit 00FA  
                __size_of_EEPROMinitialized 0014                      __size_of_EEPROM_UNLOCK 0016  
         StringContainsCaseInsensitive@That 0065           StringContainsCaseInsensitive@This 0063  
                                 _IRcommand 00FE                 __end_of_ConfigureOscillator AF2C  
                            _BufferOverflow 03E9                      __size_of_Reverse_4Byte 0C7E  
                 __size_of_SetEEPROMdefault 011E                                   _RFcodeBit 0045  
                       ?_SyncEEPROMToGlobal 0001                       __end_ofi2_ResetTimer0 AF0A  
                         main@Bluetoothtask 03DE                        __end_ofi1_UARTstring ACE8  
                                 _DecodeNEC 9C4C                          GetNumberUnsigned@i 0079  
                               ___ftdiv@exp 0078                  ReadEEPROM_1Byte@PEIEstatus 0063  
                                 _IRtimeout 03F1                                   _TXSTAbits 000FAC  
                 __size_of_cleanBuffer16bit 005E                         UseBluetooth@tempNec 0270  
                               _StringMatch A46C                   __end_of_GetNumberUnsigned 69AC  
                       __size_of__div_to_l_ 0194                         UseBluetooth@timeout 0280  
        __end_of_StringMatchCaseInsensitive A152                  _StringMatchCaseInsensitive A0BE  
                       __end_of_cleanBuffer A6D4                           _Timer1_Postscaler 0049  
                            _UARTchar_CONST ACE8                              _IRrepeatAmount 0042  
                              ??_SetEEPROM1 00B8                                ??_SetEEPROM2 00CE  
                        __end_of_BufferCopy A2F6                                 ___ftmul@exp 0083  
                              ??_InitTimer0 0060                                ??_InitTimer1 0060  
                              ??_InitTimer2 0060                                ??_InitTimer3 0060  
                            __end_of_InitIR A86E                                ??_InitTimers 0060  
                __size_of_VoltageDividerOFF 0002                              __end_of_SendRF 945C  
                       _Conf2_ChannelH_1_ON EE77                         _Conf2_ChannelH_2_ON EE97  
                       _Conf2_ChannelH_3_ON EEB7                                   _GetNumber 60C8  
                      SyncGlobalToEEPROM@ok 00D9                                   _EncodeNEC 8820  
            GetStringAfterComma@CommaNumber 0062                              __end_of___ftge 9886  
                              ?_Init_System 0001                              __end_of___lmul A46C  
                   i2cleanBuffer16bit@count 0019                              _ReceivedString 0464  
                            __end_of___wmul AA62                        ??_SyncEEPROMToGlobal 008D  
                               _BAUDCONbits 000FB8                               __pidataCOMRAM AF1E  
                          ??_StringAddEqual 0071                           __size_of_UARTchar 001C  
                              ?_ReadVoltage 0089                              __end_of_fround 6FB0  
              __end_of_UARTstringCRLN_CONST A938                            IRrawToNEC@Invert 001B  
                         ?_UARTstring_CONST 0062                         start_initialization 9886  
                                 _ReadUSART AD5C                     __size_of_UARTstringCRLN 0038  
                         _Timer2_Postscaler 004A                                   _ReadIRpin AE9C  
                     __end_of_InitBluetooth A55A                            UseBluetooth@temp 0285  
                                 _Frequency EF5A                         __end_of__tdiv_to_l_ 7E28  
                        ??_UARTstring_CONST 0064                               GetNumber@This 006C  
                             _BlueConnected AEAA                               GetNumber@temp 007C  
                      __end_of_Reverse_Byte 9B98                          __end_of_SetEEPROM1 8BD4  
                        __end_of_SetEEPROM2 9272                          __end_of_InitTimer0 AE64  
                        __end_of_InitTimer1 AE9C                          __end_of_InitTimer2 AE8E  
                        __end_of_InitTimer3 AEF6                          __end_of_InitTimers ADF8  
                          ??_StringContains 0064                                   _OpenUSART A376  
                         __size_of_IsLetter 0032                       __size_of_SendNEC_wait 009E  
                                ?_DecodeNEC 0064                           __size_of_IsNumber 001E  
                           ___llmod@divisor 0071                           __size_of_InitUART 0116  
                           ___llmod@counter 0075                                   _SetTimer0 AF0A  
                    __end_of_UARTchar_CONST AD08                                   _ResetBlue 945C  
                                 _Sendcount 0048                                    ??_InitIR 0068  
                      main@VoltageStatusOLD 03E1                              _SendRF_Channel 6FB0  
                   GetStringAfterComma@This 0060                                ?_SendRF_wait 0068  
                                 _UseIRCode 74AE                               _GetMemoryChar AC48  
                                  ??_SendRF 0065                           _Timer3_Postscaler 004B  
                 StringAddEqual@firstnumber 0074                             ??_SetMemoryChar 006B  
                             _GetMemoryLong 8144                           ?_InternalADC_Read 0069  
                           ??_SetMemoryLong 008A                            ??_IsAlphaNumeric 0061  
                                  ??___ftge 0066                           __size_of_ResetADC 000E  
                                  ??___lmul 0068                               _EEPROM_UNLOCK AD8C  
                                  ??___wmul 0072                              GetEEPROM1@Temp 0085  
                            GetEEPROM2@Temp 0085                           ??_lowercaseString 0062  
                                ?_GetNumber 006C                      ??_IsAlphaNumericString 0064  
                        ??_InternalADC_Read 006B                                  ?_EncodeNEC 0064  
                             _Reverse_4Byte 3BBE          StringMatchCaseInsensitive@tempThat 0068  
        StringMatchCaseInsensitive@tempThis 0067                      __size_of_lowercaseChar 002C  
                               __pdataBANK0 00FF                                 __pdataBANK3 03F1  
                               __pdataBANK5 0500                            __CFG_LPT1OSC$OFF 000000  
                                  ??_fround 008C                               sprintf@tmpval 00CE  
                       UARTcommandMenu@Desc 0066                        GetNumber@CommaNumber 006E  
                  WriteEEPROM_1Byte@address 0060                        __size_of_IsCharacter 0018  
                      __end_of_UseBluetooth 2C44                           __size_of___altoft 00A2  
               __size_ofi1_UARTstring_CONST 0030                                  fround@prec 0092  
                         __size_of___ftpack 0120                   SetMemoryLong@AddressFirst 0089  
                                 Round@temp 00B1                            cleanBuffer@count 0062  
                         __size_of___lltoft 0080                     GetNumberUnsigned@result 006F  
                               __pbssCOMRAM 003A                   __size_ofi1_UARTchar_CONST 001A  
                                ?_ReadUSART 0001              ?_StringContainsCaseInsensitive 0063  
                         __size_of___lwtoft 002C                                  ?_ReadIRpin 0001  
            __end_of_Conf2_ChannelB_OFF_STR EDBD                               __pcstackBANK0 0060  
                             __pcstackBANK1 0100                               __pcstackBANK2 0200  
                             __pcstackBANK3 0300                                _SendNEC_wait 9F82  
                         _Conf2_ChannelB_ON EE37                           _Conf2_ChannelD_ON EE57  
                            ?_BlueConnected 0001                                _isdigit$3767 0061  
            __end_of_Conf2_ChannelD_OFF_STR EDD0              StringMatchCaseInsensitive@That 0065  
            StringMatchCaseInsensitive@This 0063                    GetNumber@tempCommaNumber 0076  
                   _Conf2_ChannelH_1_ON_STR ED6E                                ?_ResetTimer0 0001  
                              ?_ResetTimer1 0001                                ?_ResetTimer3 0001  
                               _cleanBuffer A67A                     _Conf2_ChannelH_2_ON_STR ED82  
                          ??_ReadPushButton 0060                                  ?_OpenUSART 0060  
                   _Conf2_ChannelH_3_ON_STR ED96                           __size_of_high_isr 5BBC  
                               sprintf@flag 00DD                                 sprintf@fval 00D8  
                               sprintf@prec 00CC                      __end_of_SendRF_Channel 7230  
                                  ?_InitADC 0001                                    ?_InitApp 0001  
                                ?_SetTimer0 0017                             ?_UARTchar_CONST 0001  
                                ?_ResetBlue 0001                              ?_GetMemoryChar 0064  
                __size_of_GetNumberUnsigned 045E                              ?_GetMemoryLong 0064  
                   _Conf2_ChannelH_1_Status 00F7                                  ?_UseIRCode 00DA  
                   _Conf2_ChannelH_2_Status 00F8                           __CFG_CCP2MX$PORTC 000000  
                   _Conf2_ChannelH_3_Status 00F9                              ?_EEPROM_UNLOCK 0001  
                           SendRF_wait@Code 0068                   __size_of_Local_CloseUSART 000E  
                                 __pintcode 0008                               __pmediumconst EC7E  
                            ?_Reverse_4Byte 0060                                    ?___awdiv 0066  
                                 __ptext100 AD5C                                   __ptext101 AEAA  
                                 __ptext102 A26C                                   __ptext111 AB92  
                                 __ptext103 A67A                                   __ptext120 A938  
                                 __ptext112 AD42                                   __ptext104 AE42  
                                 __ptext121 AF00                                   __ptext113 ACC2  
                                 __ptext105 ADA2                                   __ptext122 AED4  
                                 __ptext114 ADB8                                   __ptext106 AEB8  
                                 __ptext123 AF0A                                   __ptext115 AEC6  
                                 __ptext107 ADF8                                   __ptext124 AF14  
                                 __ptext116 AD74                                   __ptext108 A8B2  
                                 __ptext125 69AC                                   __ptext117 AC9A  
                                 __ptext109 AF2A                                    ?___ftadd 0093  
                                 __ptext118 ADCE                           SendRF_wait@Config 006A  
                               IRrawToNEC@i 0023                                    ?___awmod 0060  
                                  ?___ftdiv 006B                        cleanBuffer16bit@data 0060  
                                  ?___ftneg 0060                             SendRF_wait@size 006B  
                                  ?___lldiv 0060                                    ?___ftmul 007A  
                                  ?___llmod 006D                                    ?___ftsub 009F  
                                 __npowers_ ECA7                                    ?___fttol 009F  
                              UseIRCode@NEC 00DC                                 __pintcodelo 0018  
                                  ?_delayUS 0060                UseBluetooth@SerialNumberTEMP 0274  
                      __size_of_EraseScreen 0028                                 __tdiv_to_l_ 7C82  
                    BluetoothInitialSetup@i 01BA                      BluetoothInitialSetup@j 01B8  
                              ??__div_to_l_ 0066                           SendRF_wait@amount 006C  
                             IRrawToNEC@NEC 0019                           _WriteEEPROM_1Byte A61E  
                        UARTchar_CONST@data 0060                                    ?_isdigit 0001  
                 __end_of_Conf2_ChannelB_ON EE47                   __end_of_Conf2_ChannelD_ON EE67  
                             IRrawToNEC@Raw 0017                               UseBluetooth@i 0289  
                             UseBluetooth@j 0282            UseBluetooth@ReceivedStringPosOLD 026F  
                        UARTchar_CONST@temp 0061                    __end_of_ReadEEPROM_1Byte A72C  
                     _BluetoothChangeStatus 03E8                                    ?_low_isr 0001  
                               GetEEPROM1@i 008A                                 GetEEPROM1@j 008B  
                               GetEEPROM2@i 008A                                 GetEEPROM2@j 008B  
                               GetEEPROM2@k 008C                          ?_WriteEEPROM_1Byte 0060  
                            __size_of_Round 0066                                   _hexpowers ECF5  
                __end_of_SyncGlobalToEEPROM 9F82                       __size_ofi1_UARTstring 0026  
                  __end_of_EnterCommandMode 857C                                    ?_sprintf 00AE  
                            __size_of_scale 0504                               _lowercaseChar AC1C  
                  UseBluetooth@rfchannelSTR 0264                            _SetEEPROMdefault 8F30  
                                 delayUS@US 0060                             IsCharacter@data 0001  
                         _DisplayRF_Channel 96EA                         ??_WriteEEPROM_1Byte 0063  
                               ??_DecodeNEC 006C                              ___wmul@product 0072  
                                  _IOCBbits 000F7D                             i1_BlueConnected AEC6  
                  __end_of_CheckReceivingIR AE30                            _cleanBuffer16bit A5C0  
                           ?_SendRF_Channel 0001                          ?_DisplayRF_Channel 0001  
                                  _IPR1bits 000F9F                                    _IPR2bits 000FA2  
                                  _PIE1bits 000F9D                        _UARTstringCRLN_CONST A8F6  
                                  _PIE2bits 000FA0                                cleanBuffer@i 0067  
                                  _PIR1bits 000F9E                          __end_of__div_to_l_ 7FBC  
                                  _PIR2bits 000FA1                                    _RCONbits 000FD0  
                          __CFG_WDTPS$32768 000000                              UseIRCode@found 00E3  
                       ??_DisplayRF_Channel 0064                                 ??_GetNumber 0071  
                               ??_EncodeNEC 0068                              DecodeNEC@temp1 0072  
                            DecodeNEC@temp2 0070                              DecodeNEC@temp3 0071  
                                  _RFConfig 0044                                    _UARTchar AD26  
              ??_StringMatchCaseInsensitive 0067                               ??i1_ReadUSART 0001  
              __size_of_BluetoothConfigured 0012                    BluetoothInitialSetup@buf 0184  
                 ReadEEPROM_1Byte@GIEstatus 0062                   __end_of_WriteEEPROM_1Byte A67A  
                                _ADCON0bits 000FC2                                  _ADCON1bits 000FC1  
                                _ADCON2bits 000FC0                           ___wmul@multiplier 006E  
                              i1_UARTstring ACC2                        __size_of_Init_System 0188  
                                  _IRpinOLD 0040              __size_of_BluetoothInitialSetup 07E6  
                       ReadCodeButtons@temp 0069               __end_of_BluetoothInitialSetup 5022  
                     __size_of_Reverse_Byte 00B6                              _UARTstringCRLN A9F2  
                           ??_BlueConnected 0060                                 ??_ReadUSART 0060  
                             ??i2_ReadIRpin 0017                        __size_of_ReadVoltage 009E  
                               ??_ReadIRpin 0060                    __size_of_WaitForIRsignal 0090  
                           StringAddEqual@i 0075                             StringAddEqual@j 0076  
                            ?_lowercaseChar 0060                   __end_of_DisplayRF_Channel 97B8  
                         ___lmul@multiplier 0060                                 _INTCON2bits 000FF1  
                                  _IsLetter AAFE                                   copy_data0 98EE  
                                 copy_data1 990E                                   copy_data2 9940  
                                  _IsNumber AD08                  __end_ofi2_cleanBuffer16bit A97A  
                             _CommandString 0400                                    _InitUART 904E  
                           UseBluetooth@buf 0200                             UseBluetooth@set 026E  
                               ??_OpenUSART 0062                                GetNumber@Hex 0079  
                           IRrawToNEC@first 0022                             ??_GetMemoryChar 0068  
                           OpenUSART@config 0062                             ??_GetMemoryLong 0068  
                        SendNEC_wait@toggle 007A                       ?_UARTstringCRLN_CONST 0064  
                               ??_SetTimer0 0019                 __end_of_GetStringAfterComma 8F30  
                                _EECON1bits 000FA6                                ?_StringMatch 0060  
                               ??_ResetBlue 0069                            __size_of_InitADC 0016  
                           ??_EEPROM_UNLOCK 0060                                    _ResetADC AEB8  
              BluetoothInitialSetup@Default 01B7                       __end_of_SendNEC_bytes A26C  
                          __size_of_InitApp 0044                                    __Hrparam 0000  
                               ??_UseIRCode 00E0                             ??_Reverse_4Byte 0064  
                                  __Lrparam 0000                          __CFG_BOREN$SBORDIS 000000  
                  __size_of_UARTcommandMenu 011E                        __size_of_SendRF_wait 003E  
                     __size_of_UseBluetooth 2A74                    __size_of_ReadCodeButtons 0054  
                              _Reverse_Byte 9AE2                   InternalADC_Read@ADCcounts 0069  
                         Reverse_4Byte@This 0060                            __size_of___awdiv 00D0  
                          __size_of___ftadd 027E                            __size_of___awmod 00B4  
                          __size_of___ftdiv 0152                             cleanBuffer@data 0060  
                          __size_of___ftneg 0030                            __size_of___lldiv 00C6  
                                  ___altoft 9E40                            __size_of___ftmul 016C  
                          __size_of___llmod 00A4                            __size_of___ftsub 0050  
                          __size_of___fttol 0152                           Reverse_4Byte@temp 006C  
                                  ___ftpack 8BD4                  InternalADC_Read@AnaChanSel 006D  
                               _fround$4113 008F                                 _fround$4114 008C  
                                  ___lltoft A2F6                      __end_of_UARTstringCRLN AA2A  
                          __size_of_delayUS 0056               __end_of_Conf2_ChannelB_ON_STR EDE2  
                                  ___lwtoft ABF0               __end_of_Conf2_ChannelD_ON_STR EDF4  
                         main@VoltageStatus 03E4                                  sprintf@idx 00C5  
                                sprintf@len 00C8                                  sprintf@exp 00D2  
                                sprintf@val 00D4                      UseBluetooth@NecAddress 0283  
                          i1_UARTchar_CONST AD42                         __end_ofi1_ReadUSART ADCE  
                          __size_of_isdigit 002E                      UseBluetooth@NecCommand 0284  
                          __size_of_low_isr 01B4                                    __ptext10 A0BE  
                                  __ptext11 A46C                                    __ptext20 3BBE  
                                  __ptext12 7706                                    __ptext21 AE1E  
                                  __ptext13 6FB0                                    __ptext30 8E12  
                                  __ptext22 A020                                    __ptext14 A97A  
                                  __ptext31 654E                                    __ptext23 ABF0  
                                  __ptext15 936C                                    __ptext40 7906  
                                  __ptext32 60C8                                    __ptext24 857C  
                                  __ptext16 AE0C                                    __ptext41 9952  
                                  __ptext33 A3F2                                    __ptext25 AF28  
                                  __ptext17 AEE2                                    __ptext50 AEEC  
                                  __ptext42 953E                                    __ptext34 AAFE  
                                  __ptext26 9D9E                                    __ptext18 9F82  
                                  __ptext51 AE80                                    __ptext43 8F30  
                                  __ptext35 8820                                    __ptext27 AA62  
                                  __ptext19 A1E2                                    __ptext60 9164  
                                  __ptext52 AE8E                                    __ptext44 904E  
                                  __ptext36 96EA                                    __ptext28 AA98  
                                  __ptext61 8AA8                                    __ptext53 A826  
                                  __ptext45 A55A                                    __ptext37 9C4C  
                                  __ptext29 AD08                                    __ptext70 AC72  
                                  __ptext62 9272                                    __ptext54 A5C0  
                                  __ptext46 9E40                                    __ptext38 9AE2  
                                  __ptext71 AD26                                    __ptext63 8144  
                                  __ptext55 AEF6                                    __ptext47 A376  
                                  __ptext39 7FBC                                    __ptext80 82B4  
                                  __ptext72 7AD4                                    __ptext64 A9B8  
                                  __ptext56 AE9C                                    __ptext48 AE72  
                       EnterCommandMode@buf 0100                                    __ptext81 9B98  
                                  __ptext73 AC1C                                    __ptext65 A61E  
                                  __ptext57 AE54                                    __ptext49 ADE4  
                                  __ptext90 7230                                    __ptext82 961A  
                                  __ptext74 8420                                    __ptext66 AD8C  
                                  __ptext58 A4E4                                    __ptext91 8BD4  
                                  __ptext83 7C82                                    __ptext75 2C44  
                                  __ptext67 AC48                                    __ptext59 9EE2  
                                  __ptext92 AB62                                    __ptext84 7E28  
                                  __ptext76 5BC4                                    __ptext68 A6D4  
                                  __ptext93 97B8                                    __ptext85 A2F6  
                                  __ptext77 ABC2                                    __ptext69 483C  
                         SendNEC_bytes@code 0070                                    __ptext94 AB30  
                                  __ptext86 9CFA                                    __ptext78 6CD8  
                                  __ptext95 ACE8                                    __ptext87 9A1C  
                                  __ptext79 AA2A                                    __ptext96 896E  
                                  __ptext88 86CE                                    __ptext97 945C  
                                  __ptext89 A7D6                     __end_ofi1_BlueConnected AED4  
                                  __ptext98 A72C                                    __ptext99 AE30  
                                  __powers_ ECCE                                    _high_isr 0008  
                        IsAlphaNumeric@data 0061                  __end_of_Conf1_ChannelD_STR EED6  
                __end_of_Conf1_ChannelE_STR EEE5                  __end_of_Conf1_ChannelF_STR EEF4  
                          __size_of_sprintf 0F7A                         __end_ofi2_ReadIRpin AEE2  
  StringContainsCaseInsensitive@MatchAmount 0069                             _lowercaseString A86E  
                             __size_of_main 0612                       SendRF_Channel@channel 006D  
                            SetEEPROM1@Temp 0096                                _UseBluetooth 01D0  
                                  delayUS@i 0065                              SetEEPROM2@Temp 0096  
                      __size_of_ResetTimer0 000A                        __size_of_ResetTimer1 000A  
                      __size_of_ResetTimer3 000A                   __size_of_UARTstring_CONST 0032  
                            SetEEPROM1@fail 00BC                   GetMemoryChar@AddressFirst 0068  
                            SetEEPROM2@fail 00D1                              SetEEPROM1@burn 00B4  
                            SetEEPROM2@burn 00CA                              SetEEPROM1@temp 00BA  
                            SetEEPROM2@temp 00D0                __size_of_ConfigureOscillator 0002  
                    UseBluetooth@EnteredNEC 0279                            _Local_CloseUSART AE72  
                           GetMemoryLong@MH 0081                             GetMemoryLong@ML 0082  
                    UseBluetooth@EmptyPlace 027E                                BufferCopy@to 006A  
               __size_of_SyncEEPROMToGlobal 01CE                  __size_of_WriteEEPROM_1Byte 005C  
                                _LEDTimerON AE0C                             ?_UARTstringCRLN 0064  
                    __size_ofi2_ResetTimer0 000A                             StringContains@i 0068  
                                _INTCONbits 000FF2                   __size_of_InternalADC_Read 00A2  
                            OpenUSART@spbrg 0060                             ??_lowercaseChar 0062  
                              UARTchar@data 0060                             StringMatch@That 0062  
                           StringMatch@This 0060                                    isdigit@c 0062  
                                  scale@scl 008F                  __size_of_DisplayRF_Channel 00CE  
                          EncodeNEC@address 008C                         i2cleanBuffer16bit@i 001E  
              __end_of_Conf2_ChannelH_1_OFF EE77                __end_of_Conf2_ChannelH_2_OFF EE97  
              __end_of_Conf2_ChannelH_3_OFF EEB7                __end_of_Conf2_ChannelH_1_STR EE05  
              __end_of_Conf2_ChannelH_2_STR EE16                __end_of_Conf2_ChannelH_3_STR EE27  
                          ??_UARTchar_CONST 0060                                    intlevel1 0000  
                                  intlevel2 0000                                  _PCBVersion EF4D  
                                 sprintf@ap 00CA                                   sprintf@cp 00C6  
                          __tdiv_to_l_@exp1 006E                                   sprintf@sp 00AE  
                          __tdiv_to_l_@cntr 006D                                ?_cleanBuffer 0060  
        GetStringAfterComma@tempCommaNumber 0066                            __tdiv_to_l_@quot 0069  
                         ??_WaitForIRsignal 0069                            EncodeNEC@command 0064  
                    ??_UARTstringCRLN_CONST 0066                            ___lldiv@dividend 0060  
                              IsLetter@data 0060             ??_StringContainsCaseInsensitive 0067  
   StringContainsCaseInsensitive@MatchCount 006A                              _BatteryVoltage 03E5  
                            GetMemoryChar@H 0069                                 _IR_New_Code 03F0  
                                i1_UARTchar ADCE                              GetMemoryLong@H 0080  
                            GetMemoryLong@L 0083                      __size_of_InitBluetooth 0076  
                               BufferCopy@i 006E                       __end_of_SetMemoryChar A9F2  
                     __end_of_SetMemoryLong 936C                               ??_IsCharacter 0001  
                             _InitUART$4112 00BD                    __end_of_SetEEPROMdefault 904E  
                            _Conf1_ChannelD EF20                              _Conf1_ChannelE EF2C  
                            _Conf1_ChannelF EF38                                  GetNumber@i 007A  
                            _Conf1_Channels EF52                  __end_ofi1_UARTstring_CONST ABC2  
                               i1_ReadUSART ADB8                            DecodeNEC@address 0068  
             __size_of_IsAlphaNumericString 0036                   StringContains@MatchAmount 0066  
                              ?__tdiv_to_l_ 0060                            UARTcommandMenu@i 006D  
                    UARTcommandMenu@Command 0064                           ??_UARTcommandMenu 0068  
               __end_of_Conf2_ChannelH_1_ON EE87                 __end_of_Conf2_ChannelH_2_ON EEA7  
               __end_of_Conf2_ChannelH_3_ON EEC7                              _Conf2_Channels EF56  
                                  sprintf@c 00DF                    __end_of_cleanBuffer16bit A61E  
                                  sprintf@f 00B0                            DecodeNEC@command 006A  
                         ??_ReadCodeButtons 0069                            ___lldiv@quotient 0068  
                               i2_ReadIRpin AED4                           ?_ReadEEPROM_1Byte 0060  
                              EraseScreen@i 0003                     __end_of_lowercaseString A8B2  
          GetNumberUnsigned@tempCommaNumber 0076                            ?i1_BlueConnected 0001  
                   __size_of_StringAddEqual 0200                              i1UARTchar@data 0001  
                          ??_SendRF_Channel 006D                          ??_ReadEEPROM_1Byte 0062  
                         ?_EnterCommandMode 0001                  __end_of_Conf2_ChannelB_OFF EE37  
                __end_of_Conf2_ChannelD_OFF EE57                  __end_of_Conf2_ChannelB_STR EF03  
                __end_of_Conf2_ChannelD_STR EF12                         _BluetoothConfigured AE42  
BluetoothInitialSetup@BluetoothVersionLine1 0133  BluetoothInitialSetup@BluetoothVersionLine2 0151  
                        ??_EnterCommandMode 00E0                                  _UARTstring AC72  
                             i2_ResetTimer0 AF00                          _BluetoothBroadcast 04E6  
                         ?_CheckReceivingIR 0001                   GetStringAfterComma@result 0063  
            StringContainsCaseInsensitive@i 006D                          _SyncGlobalToEEPROM 9EE2  
                            Init_System@buf 01BB                          ??_CheckReceivingIR 0060  
                        _BluetoothFirmware1 04C8                          _BluetoothFirmware2 0532  
                           BufferCopy@count 006C                        __size_of_StringMatch 0078  
